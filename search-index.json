[{"documents":[{"i":1,"t":"Introduction to Authorization and OpenFGA","u":"/docs/authorization-and-openfga","b":["Home"]},{"i":15,"t":"Concepts","u":"/docs/concepts","b":["Home"]},{"i":51,"t":"Configuration Language","u":"/docs/configuration-language","b":["Home"]},{"i":71,"t":"Getting Started","u":"/docs/getting-started","b":["Home","Getting Started"]},{"i":75,"t":"Configure Authorization Model for a Store","u":"/docs/getting-started/configure-model","b":["Home","Getting Started"]},{"i":83,"t":"Create a Store","u":"/docs/getting-started/create-store","b":["Home","Getting Started"]},{"i":87,"t":"Integrate Within a Framework","u":"/docs/getting-started/framework","b":["Home","Getting Started"]},{"i":101,"t":"Install SDK Client","u":"/docs/getting-started/install-sdk","b":["Home","Getting Started"]},{"i":105,"t":"Perform a Check","u":"/docs/getting-started/perform-check","b":["Home","Getting Started"]},{"i":117,"t":"Perform a List Objects call","u":"/docs/getting-started/perform-list-objects","b":["Home","Getting Started"]},{"i":129,"t":"Running OpenFGA in Production","u":"/docs/getting-started/running-in-production","b":["Home","Getting Started"]},{"i":135,"t":"üê≥ Setup OpenFGA with Docker","u":"/docs/getting-started/setup-openfga/docker","b":["Home","Getting Started","Setup OpenFGA"]},{"i":163,"t":"‚ò∏Ô∏è Setup OpenFGA with Kubernetes","u":"/docs/getting-started/setup-openfga/kubernetes","b":["Home","Getting Started","Setup OpenFGA"]},{"i":165,"t":"Setup OpenFGA","u":"/docs/getting-started/setup-openfga/overview","b":["Home","Getting Started","Setup OpenFGA"]},{"i":167,"t":"Setup SDK Client for Store","u":"/docs/getting-started/setup-sdk-client","b":["Home","Getting Started"]},{"i":173,"t":"Best Practices of Managing Tuples and Invoking APIs","u":"/docs/getting-started/tuples-api-best-practices","b":["Home","Getting Started"]},{"i":183,"t":"Update Relationship Tuples","u":"/docs/getting-started/update-tuples","b":["Home","Getting Started"]},{"i":197,"t":"Interacting with the API","u":"/docs/interacting","b":["Home","Interacting with the API"]},{"i":201,"t":"Managing Group Access","u":"/docs/interacting/managing-group-access","b":["Home","Interacting with the API"]},{"i":218,"t":"Managing Group Membership","u":"/docs/interacting/managing-group-membership","b":["Home","Interacting with the API"]},{"i":235,"t":"Managing User Access","u":"/docs/interacting/managing-user-access","b":["Home","Interacting with the API"]},{"i":250,"t":"How to get tuple changes","u":"/docs/interacting/read-tuple-changes","b":["Home","Interacting with the API"]},{"i":262,"t":"Search With Permissions","u":"/docs/interacting/search-with-permissions","b":["Home","Interacting with the API"]},{"i":276,"t":"Transactional Writes","u":"/docs/interacting/transactional-writes","b":["Home","Interacting with the API"]},{"i":293,"t":"Modeling Guides","u":"/docs/modeling","b":["Home","Modeling Guides"]},{"i":297,"t":"Advanced Use-Cases","u":"/docs/modeling/advanced","b":["Home","Modeling Guides","Advanced Use-Cases"]},{"i":303,"t":"Blocklists","u":"/docs/modeling/blocklists","b":["Home","Modeling Guides"]},{"i":321,"t":"Building Blocks","u":"/docs/modeling/building-blocks","b":["Home","Modeling Guides","Building Blocks"]},{"i":325,"t":"Concentric Relationships","u":"/docs/modeling/building-blocks/concentric-relationships","b":["Home","Modeling Guides","Building Blocks"]},{"i":341,"t":"Usersets","u":"/docs/modeling/building-blocks/usersets","b":["Home","Modeling Guides","Building Blocks"]},{"i":352,"t":"Custom Roles","u":"/docs/modeling/custom-roles","b":["Home","Modeling Guides"]},{"i":376,"t":"Direct Access","u":"/docs/modeling/direct-access","b":["Home","Modeling Guides"]},{"i":390,"t":"Get Started with Modeling","u":"/docs/modeling/getting-started","b":["Home","Modeling Guides"]},{"i":410,"t":"Migrating","u":"/docs/modeling/migrating","b":["Home","Modeling Guides","Migrations"]},{"i":414,"t":"Migrating Models To Schema 1.1","u":"/docs/modeling/migrating/migrating-schema-1-1","b":["Home","Modeling Guides","Migrations"]},{"i":434,"t":"Multiple Restrictions","u":"/docs/modeling/multiple-restrictions","b":["Home","Modeling Guides"]},{"i":452,"t":"Parent-Child Objects","u":"/docs/modeling/parent-child","b":["Home","Modeling Guides"]},{"i":474,"t":"Public Access","u":"/docs/modeling/public-access","b":["Home","Modeling Guides"]},{"i":490,"t":"Roles and Permissions","u":"/docs/modeling/roles-and-permissions","b":["Home","Modeling Guides"]},{"i":508,"t":"User Groups","u":"/docs/modeling/user-groups","b":["Home","Modeling Guides"]},{"i":528,"t":"Managing Relationships Between Objects","u":"/docs/interacting/managing-relationships-between-objects","b":["Home","Interacting with the API"]},{"i":550,"t":"Relationship Queries: Check, Read, Expand, and ListObjects","u":"/docs/interacting/relationship-queries","b":["Home","Interacting with the API"]},{"i":590,"t":"Direct Relationships","u":"/docs/modeling/building-blocks/direct-relationships","b":["Home","Modeling Guides","Building Blocks"]},{"i":610,"t":"Object to Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","b":["Home","Modeling Guides","Building Blocks"]},{"i":637,"t":"Migrating Relations","u":"/docs/modeling/migrating/migrating-relations","b":["Home","Modeling Guides","Migrations"]},{"i":653,"t":"Authorization Through Organization Context","u":"/docs/modeling/organization-context-authorization","b":["Home","Modeling Guides"]},{"i":675,"t":"Modeling Authorization for an IoT Security System with OpenFGA","u":"/docs/modeling/advanced/iot","b":["Home","Modeling Guides","Advanced Use-Cases"]},{"i":703,"t":"Modeling Authorization for Slack with OpenFGA","u":"/docs/modeling/advanced/slack","b":["Home","Modeling Guides","Advanced Use-Cases"]},{"i":727,"t":"Contextual and Time-Based Authorization","u":"/docs/modeling/contextual-time-based-authorization","b":["Home","Modeling Guides"]},{"i":751,"t":"Modeling Entitlements for a System with OpenFGA","u":"/docs/modeling/advanced/entitlements","b":["Home","Modeling Guides","Advanced Use-Cases"]},{"i":772,"t":"Modeling GitHub permissions with OpenFGA","u":"/docs/modeling/advanced/github","b":["Home","Modeling Guides","Advanced Use-Cases"]},{"i":795,"t":"Modeling Google Drive permissions with OpenFGA","u":"/docs/modeling/advanced/gdrive","b":["Home","Modeling Guides","Advanced Use-Cases"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,3.507,1,2.065,2,1.593]],["t/15",[3,4.865]],["t/51",[4,3.492,5,4.076]],["t/71",[6,4.076,7,3.492]],["t/75",[1,1.812,4,2.637,8,1.484,9,2.346]],["t/83",[9,3.107,10,4.076]],["t/87",[11,3.507,12,3.507,13,3.507]],["t/101",[14,3.507,15,3.005,16,3.005]],["t/105",[17,3.492,18,3.492]],["t/117",[17,2.637,19,3.078,20,2.129,21,3.078]],["t/129",[2,1.593,22,3.507,23,3.507]],["t/135",[2,1.398,24,2.637,25,2.129,26,3.078]],["t/163",[2,1.398,24,2.637,25,2.129,27,3.078]],["t/165",[2,1.851,25,2.82]],["t/167",[9,2.346,15,2.637,16,2.637,25,2.129]],["t/173",[28,2.472,29,2.472,30,1.571,31,1.885,32,2.472,33,2.118]],["t/183",[31,2.674,34,3.507,35,2.065]],["t/197",[33,3.492,36,4.076]],["t/201",[30,2.229,37,2.674,38,2.427]],["t/218",[30,2.229,37,2.674,39,3.507]],["t/235",[30,2.229,38,2.427,40,3.005]],["t/250",[31,3.107,41,4.076]],["t/262",[42,4.076,43,2.82]],["t/276",[44,4.076,45,4.076]],["t/293",[8,1.966,46,4.076]],["t/297",[47,3.507,48,3.507,49,3.507]],["t/303",[50,4.865]],["t/321",[51,4.076,52,4.076]],["t/325",[35,2.4,53,4.076]],["t/341",[54,4.865]],["t/352",[55,4.076,56,3.492]],["t/376",[38,2.82,57,3.492]],["t/390",[7,3.492,8,1.966]],["t/410",[58,3.709]],["t/414",[8,1.484,58,2.346,59,3.078,60,3.078]],["t/434",[61,4.076,62,4.076]],["t/452",[20,2.427,63,3.507,64,3.507]],["t/474",[38,2.82,65,4.076]],["t/490",[43,2.82,56,3.492]],["t/508",[37,3.107,40,3.492]],["t/528",[20,2.129,30,1.956,35,1.812,66,3.078]],["t/550",[18,2.118,35,1.455,67,2.472,68,2.472,69,2.472,70,2.472]],["t/590",[35,2.4,57,3.492]],["t/610",[20,3.353,35,2.065]],["t/637",[58,3.107,71,4.076]],["t/653",[1,1.812,72,3.078,73,3.078,74,3.078]],["t/675",[1,1.455,2,1.123,8,1.192,75,2.472,76,2.472,77,2.118]],["t/703",[1,1.812,2,1.398,8,1.484,78,3.078]],["t/727",[1,1.812,79,3.078,80,3.078,81,3.078]],["t/751",[2,1.398,8,1.484,77,2.637,82,3.078]],["t/772",[2,1.398,8,1.484,43,2.129,83,3.078]],["t/795",[2,1.245,8,1.322,43,1.897,84,2.742,85,2.742]]],"invertedIndex":[["",{"_index":24,"t":{"135":{"position":[[0,2]]},"163":{"position":[[0,2]]}}}],["1.1",{"_index":60,"t":{"414":{"position":[[27,3]]}}}],["access",{"_index":38,"t":{"201":{"position":[[15,6]]},"235":{"position":[[14,6]]},"376":{"position":[[7,6]]},"474":{"position":[[7,6]]}}}],["advanc",{"_index":47,"t":{"297":{"position":[[0,8]]}}}],["api",{"_index":33,"t":{"173":{"position":[[47,4]]},"197":{"position":[[21,3]]}}}],["author",{"_index":1,"t":{"1":{"position":[[16,13]]},"75":{"position":[[10,13]]},"653":{"position":[[0,13]]},"675":{"position":[[9,13]]},"703":{"position":[[9,13]]},"727":{"position":[[26,13]]}}}],["base",{"_index":81,"t":{"727":{"position":[[20,5]]}}}],["best",{"_index":28,"t":{"173":{"position":[[0,4]]}}}],["between",{"_index":66,"t":{"528":{"position":[[23,7]]}}}],["block",{"_index":52,"t":{"321":{"position":[[9,6]]}}}],["blocklist",{"_index":50,"t":{"303":{"position":[[0,10]]}}}],["build",{"_index":51,"t":{"321":{"position":[[0,8]]}}}],["call",{"_index":21,"t":{"117":{"position":[[23,4]]}}}],["case",{"_index":49,"t":{"297":{"position":[[13,5]]}}}],["chang",{"_index":41,"t":{"250":{"position":[[17,7]]}}}],["check",{"_index":18,"t":{"105":{"position":[[10,5]]},"550":{"position":[[22,6]]}}}],["child",{"_index":64,"t":{"452":{"position":[[7,5]]}}}],["client",{"_index":16,"t":{"101":{"position":[[12,6]]},"167":{"position":[[10,6]]}}}],["concentr",{"_index":53,"t":{"325":{"position":[[0,10]]}}}],["concept",{"_index":3,"t":{"15":{"position":[[0,8]]}}}],["configur",{"_index":4,"t":{"51":{"position":[[0,13]]},"75":{"position":[[0,9]]}}}],["context",{"_index":74,"t":{"653":{"position":[[35,7]]}}}],["contextu",{"_index":79,"t":{"727":{"position":[[0,10]]}}}],["creat",{"_index":10,"t":{"83":{"position":[[0,6]]}}}],["custom",{"_index":55,"t":{"352":{"position":[[0,6]]}}}],["direct",{"_index":57,"t":{"376":{"position":[[0,6]]},"590":{"position":[[0,6]]}}}],["docker",{"_index":26,"t":{"135":{"position":[[22,6]]}}}],["drive",{"_index":85,"t":{"795":{"position":[[16,5]]}}}],["entitl",{"_index":82,"t":{"751":{"position":[[9,12]]}}}],["expand",{"_index":69,"t":{"550":{"position":[[35,7]]}}}],["framework",{"_index":13,"t":{"87":{"position":[[19,9]]}}}],["get",{"_index":6,"t":{"71":{"position":[[0,7]]}}}],["github",{"_index":83,"t":{"772":{"position":[[9,6]]}}}],["googl",{"_index":84,"t":{"795":{"position":[[9,6]]}}}],["group",{"_index":37,"t":{"201":{"position":[[9,5]]},"218":{"position":[[9,5]]},"508":{"position":[[5,6]]}}}],["guid",{"_index":46,"t":{"293":{"position":[[9,6]]}}}],["instal",{"_index":14,"t":{"101":{"position":[[0,7]]}}}],["integr",{"_index":11,"t":{"87":{"position":[[0,9]]}}}],["interact",{"_index":36,"t":{"197":{"position":[[0,11]]}}}],["introduct",{"_index":0,"t":{"1":{"position":[[0,12]]}}}],["invok",{"_index":32,"t":{"173":{"position":[[38,8]]}}}],["iot",{"_index":75,"t":{"675":{"position":[[30,3]]}}}],["kubernet",{"_index":27,"t":{"163":{"position":[[22,10]]}}}],["languag",{"_index":5,"t":{"51":{"position":[[14,8]]}}}],["list",{"_index":19,"t":{"117":{"position":[[10,4]]}}}],["listobject",{"_index":70,"t":{"550":{"position":[[47,11]]}}}],["manag",{"_index":30,"t":{"173":{"position":[[18,8]]},"201":{"position":[[0,8]]},"218":{"position":[[0,8]]},"235":{"position":[[0,8]]},"528":{"position":[[0,8]]}}}],["membership",{"_index":39,"t":{"218":{"position":[[15,10]]}}}],["migrat",{"_index":58,"t":{"410":{"position":[[0,9]]},"414":{"position":[[0,9]]},"637":{"position":[[0,9]]}}}],["model",{"_index":8,"t":{"75":{"position":[[24,5]]},"293":{"position":[[0,8]]},"390":{"position":[[17,8]]},"414":{"position":[[10,6]]},"675":{"position":[[0,8]]},"703":{"position":[[0,8]]},"751":{"position":[[0,8]]},"772":{"position":[[0,8]]},"795":{"position":[[0,8]]}}}],["multipl",{"_index":61,"t":{"434":{"position":[[0,8]]}}}],["object",{"_index":20,"t":{"117":{"position":[[15,7]]},"452":{"position":[[13,7]]},"528":{"position":[[31,7]]},"610":{"position":[[0,6],[10,6]]}}}],["openfga",{"_index":2,"t":{"1":{"position":[[34,7]]},"129":{"position":[[8,7]]},"135":{"position":[[9,7]]},"163":{"position":[[9,7]]},"165":{"position":[[6,7]]},"675":{"position":[[55,7]]},"703":{"position":[[38,7]]},"751":{"position":[[40,7]]},"772":{"position":[[33,7]]},"795":{"position":[[39,7]]}}}],["organ",{"_index":73,"t":{"653":{"position":[[22,12]]}}}],["parent",{"_index":63,"t":{"452":{"position":[[0,6]]}}}],["perform",{"_index":17,"t":{"105":{"position":[[0,7]]},"117":{"position":[[0,7]]}}}],["permiss",{"_index":43,"t":{"262":{"position":[[12,11]]},"490":{"position":[[10,11]]},"772":{"position":[[16,11]]},"795":{"position":[[22,11]]}}}],["practic",{"_index":29,"t":{"173":{"position":[[5,9]]}}}],["product",{"_index":23,"t":{"129":{"position":[[19,10]]}}}],["public",{"_index":65,"t":{"474":{"position":[[0,6]]}}}],["queri",{"_index":67,"t":{"550":{"position":[[13,8]]}}}],["read",{"_index":68,"t":{"550":{"position":[[29,5]]}}}],["relat",{"_index":71,"t":{"637":{"position":[[10,9]]}}}],["relationship",{"_index":35,"t":{"183":{"position":[[7,12]]},"325":{"position":[[11,13]]},"528":{"position":[[9,13]]},"550":{"position":[[0,12]]},"590":{"position":[[7,13]]},"610":{"position":[[17,13]]}}}],["restrict",{"_index":62,"t":{"434":{"position":[[9,12]]}}}],["role",{"_index":56,"t":{"352":{"position":[[7,5]]},"490":{"position":[[0,5]]}}}],["run",{"_index":22,"t":{"129":{"position":[[0,7]]}}}],["schema",{"_index":59,"t":{"414":{"position":[[20,6]]}}}],["sdk",{"_index":15,"t":{"101":{"position":[[8,3]]},"167":{"position":[[6,3]]}}}],["search",{"_index":42,"t":{"262":{"position":[[0,6]]}}}],["secur",{"_index":76,"t":{"675":{"position":[[34,8]]}}}],["setup",{"_index":25,"t":{"135":{"position":[[3,5]]},"163":{"position":[[3,5]]},"165":{"position":[[0,5]]},"167":{"position":[[0,5]]}}}],["slack",{"_index":78,"t":{"703":{"position":[[27,5]]}}}],["start",{"_index":7,"t":{"71":{"position":[[8,7]]},"390":{"position":[[4,7]]}}}],["store",{"_index":9,"t":{"75":{"position":[[36,5]]},"83":{"position":[[9,5]]},"167":{"position":[[21,5]]}}}],["system",{"_index":77,"t":{"675":{"position":[[43,6]]},"751":{"position":[[28,6]]}}}],["through",{"_index":72,"t":{"653":{"position":[[14,7]]}}}],["time",{"_index":80,"t":{"727":{"position":[[15,4]]}}}],["transact",{"_index":44,"t":{"276":{"position":[[0,13]]}}}],["tupl",{"_index":31,"t":{"173":{"position":[[27,6]]},"183":{"position":[[20,6]]},"250":{"position":[[11,5]]}}}],["updat",{"_index":34,"t":{"183":{"position":[[0,6]]}}}],["us",{"_index":48,"t":{"297":{"position":[[9,3]]}}}],["user",{"_index":40,"t":{"235":{"position":[[9,4]]},"508":{"position":[[0,4]]}}}],["userset",{"_index":54,"t":{"341":{"position":[[0,8]]}}}],["within",{"_index":12,"t":{"87":{"position":[[10,6]]}}}],["write",{"_index":45,"t":{"276":{"position":[[14,6]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":3,"t":"What Is OpenFGA?","u":"/docs/authorization-and-openfga","h":"#what-is-openfga","p":1},{"i":5,"t":"Authentication vs Authorization","u":"/docs/authorization-and-openfga","h":"#authentication-vs-authorization","p":1},{"i":7,"t":"What Is Fine-Grained Authorization (FGA)?","u":"/docs/authorization-and-openfga","h":"#what-is-fine-grained-authorization-fga","p":1},{"i":9,"t":"What Are Role-Based Access Control (RBAC) And Attribute-Based Access Control (ABAC)?","u":"/docs/authorization-and-openfga","h":"#what-are-role-based-access-control-rbac-and-attribute-based-access-control-abac","p":1},{"i":11,"t":"What Is Relationship Based Access Control (ReBAC)?","u":"/docs/authorization-and-openfga","h":"#what-is-relationship-based-access-control-rebac","p":1},{"i":13,"t":"What Is Zanzibar?","u":"/docs/authorization-and-openfga","h":"#what-is-zanzibar","p":1},{"i":17,"t":"What Is A Type?","u":"/docs/concepts","h":"#what-is-a-type","p":15},{"i":19,"t":"What Is A Type Definition?","u":"/docs/concepts","h":"#what-is-a-type-definition","p":15},{"i":21,"t":"What Is An Authorization Model?","u":"/docs/concepts","h":"#what-is-an-authorization-model","p":15},{"i":23,"t":"What Is A Store?","u":"/docs/concepts","h":"#what-is-a-store","p":15},{"i":25,"t":"What Is An Object?","u":"/docs/concepts","h":"#what-is-an-object","p":15},{"i":27,"t":"What Is A User?","u":"/docs/concepts","h":"#what-is-a-user","p":15},{"i":29,"t":"What Is A Relation?","u":"/docs/concepts","h":"#what-is-a-relation","p":15},{"i":31,"t":"What Is A Relation Definition?","u":"/docs/concepts","h":"#what-is-a-relation-definition","p":15},{"i":33,"t":"What Is A Directly Related User Type?","u":"/docs/concepts","h":"#what-is-a-directly-related-user-type","p":15},{"i":35,"t":"What Is A Relationship Tuple?","u":"/docs/concepts","h":"#what-is-a-relationship-tuple","p":15},{"i":37,"t":"What Is A Relationship?","u":"/docs/concepts","h":"#what-is-a-relationship","p":15},{"i":39,"t":"What Are Direct And Implied Relationships?","u":"/docs/concepts","h":"#what-are-direct-and-implied-relationships","p":15},{"i":41,"t":"What Is A Check Request?","u":"/docs/concepts","h":"#what-is-a-check-request","p":15},{"i":43,"t":"What Is A List Objects Request?","u":"/docs/concepts","h":"#what-is-a-list-objects-request","p":15},{"i":45,"t":"What Are Contextual Tuples?","u":"/docs/concepts","h":"#what-are-contextual-tuples","p":15},{"i":47,"t":"What Is Type Bound Public Access?","u":"/docs/concepts","h":"#what-is-type-bound-public-access","p":15},{"i":49,"t":"Related Sections","u":"/docs/concepts","h":"#related-sections","p":15},{"i":53,"t":"What Does The Configuration Language Look Like?","u":"/docs/configuration-language","h":"#what-does-the-configuration-language-look-like","p":51},{"i":55,"t":"The Direct Relationship Type Restrictions","u":"/docs/configuration-language","h":"#the-direct-relationship-type-restrictions","p":51},{"i":57,"t":"Referencing Other Relations On The Same Object","u":"/docs/configuration-language","h":"#referencing-other-relations-on-the-same-object","p":51},{"i":59,"t":"Referencing Relations On Related Objects","u":"/docs/configuration-language","h":"#referencing-relations-on-related-objects","p":51},{"i":61,"t":"The Union Operator","u":"/docs/configuration-language","h":"#the-union-operator","p":51},{"i":63,"t":"The Intersection Operator","u":"/docs/configuration-language","h":"#the-intersection-operator","p":51},{"i":65,"t":"The Exclusion Operator","u":"/docs/configuration-language","h":"#the-exclusion-operator","p":51},{"i":67,"t":"Equivalent Zanzibar Concepts","u":"/docs/configuration-language","h":"#equivalent-zanzibar-concepts","p":51},{"i":69,"t":"Related Sections","u":"/docs/configuration-language","h":"#related-sections","p":51},{"i":73,"t":"Content","u":"/docs/getting-started","h":"","p":71},{"i":77,"t":"Before You Start","u":"/docs/getting-started/configure-model","h":"#before-you-start","p":75},{"i":79,"t":"Step By Step","u":"/docs/getting-started/configure-model","h":"#step-by-step","p":75},{"i":81,"t":"Related Sections","u":"/docs/getting-started/configure-model","h":"#related-sections","p":75},{"i":85,"t":"Step By Step","u":"/docs/getting-started/create-store","h":"#step-by-step","p":83},{"i":89,"t":"Before You Start","u":"/docs/getting-started/framework","h":"#before-you-start","p":87},{"i":91,"t":"Step By Step","u":"/docs/getting-started/framework","h":"#step-by-step","p":87},{"i":93,"t":"01. Install And Setup Framework","u":"/docs/getting-started/framework","h":"#01-install-and-setup-framework","p":87},{"i":95,"t":"02. Authenticate And Get User ID","u":"/docs/getting-started/framework","h":"#02-authenticate-and-get-user-id","p":87},{"i":97,"t":"03. Integrate The OpenFGA Check API Into The Service","u":"/docs/getting-started/framework","h":"#03-integrate-the--check-api-into-the-service","p":87},{"i":99,"t":"Related Sections","u":"/docs/getting-started/framework","h":"#related-sections","p":87},{"i":103,"t":"Related Sections","u":"/docs/getting-started/install-sdk","h":"#related-sections","p":101},{"i":107,"t":"Before You Start","u":"/docs/getting-started/perform-check","h":"#before-you-start","p":105},{"i":109,"t":"Step By Step","u":"/docs/getting-started/perform-check","h":"#step-by-step","p":105},{"i":111,"t":"01. Configure the OpenFGA API Client","u":"/docs/getting-started/perform-check","h":"#01-configure-the--api-client","p":105},{"i":113,"t":"02. Calling Check API","u":"/docs/getting-started/perform-check","h":"#02-calling-check-api","p":105},{"i":115,"t":"Related Sections","u":"/docs/getting-started/perform-check","h":"#related-sections","p":105},{"i":119,"t":"Before You Start","u":"/docs/getting-started/perform-list-objects","h":"#before-you-start","p":117},{"i":121,"t":"Step By Step","u":"/docs/getting-started/perform-list-objects","h":"#step-by-step","p":117},{"i":123,"t":"01. Configure the OpenFGA API Client","u":"/docs/getting-started/perform-list-objects","h":"#01-configure-the--api-client","p":117},{"i":125,"t":"02. Calling List Objects API","u":"/docs/getting-started/perform-list-objects","h":"#02-calling-list-objects-api","p":117},{"i":127,"t":"Related Sections","u":"/docs/getting-started/perform-list-objects","h":"#related-sections","p":117},{"i":131,"t":"Database Recommendations","u":"/docs/getting-started/running-in-production","h":"#database-recommendations","p":129},{"i":133,"t":"Related Sections","u":"/docs/getting-started/running-in-production","h":"#related-sections","p":129},{"i":137,"t":"Step By Step","u":"/docs/getting-started/setup-openfga/docker","h":"#step-by-step","p":135},{"i":139,"t":"Configuring The Server","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-the-server","p":135},{"i":141,"t":"Configuring Data Storage","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-data-storage","p":135},{"i":143,"t":"Configuring Authentication","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-authentication","p":135},{"i":145,"t":"Playground","u":"/docs/getting-started/setup-openfga/docker","h":"#playground","p":135},{"i":147,"t":"Profiler (pprof)","u":"/docs/getting-started/setup-openfga/docker","h":"#profiler-pprof","p":135},{"i":149,"t":"Health Check","u":"/docs/getting-started/setup-openfga/docker","h":"#health-check","p":135},{"i":151,"t":"Experimental Features","u":"/docs/getting-started/setup-openfga/docker","h":"#experimental-features","p":135},{"i":153,"t":"Telemetry","u":"/docs/getting-started/setup-openfga/docker","h":"#telemetry","p":135},{"i":155,"t":"Metrics","u":"/docs/getting-started/setup-openfga/docker","h":"#metrics","p":135},{"i":157,"t":"Tracing","u":"/docs/getting-started/setup-openfga/docker","h":"#tracing","p":135},{"i":159,"t":"Logging","u":"/docs/getting-started/setup-openfga/docker","h":"#logging","p":135},{"i":161,"t":"Related Sections","u":"/docs/getting-started/setup-openfga/docker","h":"#related-sections","p":135},{"i":169,"t":"Using No Authentication","u":"/docs/getting-started/setup-sdk-client","h":"#using-no-authentication","p":167},{"i":171,"t":"Using Shared Key Authentication","u":"/docs/getting-started/setup-sdk-client","h":"#using-shared-key-authentication","p":167},{"i":175,"t":"Do Not Store Personal Identifiable Information in Tuples","u":"/docs/getting-started/tuples-api-best-practices","h":"#do-not-store-personal-identifiable-information-in-tuples","p":173},{"i":177,"t":"Always Specify Authorization Model ID Whenever Possible","u":"/docs/getting-started/tuples-api-best-practices","h":"#always-specify-authorization-model-id-whenever-possible","p":173},{"i":179,"t":"If Using ListObjects, Avoid Having Intersection or Exclusion in the Authorization Model","u":"/docs/getting-started/tuples-api-best-practices","h":"#if-using-listobjects-avoid-having-intersection-or-exclusion-in-the-authorization-model","p":173},{"i":181,"t":"Related Sections","u":"/docs/getting-started/tuples-api-best-practices","h":"#related-sections","p":173},{"i":185,"t":"Before You Start","u":"/docs/getting-started/update-tuples","h":"#before-you-start","p":183},{"i":187,"t":"Step By Step","u":"/docs/getting-started/update-tuples","h":"#step-by-step","p":183},{"i":189,"t":"01. Configure The OpenFGA API Client","u":"/docs/getting-started/update-tuples","h":"#01-configure-the--api-client","p":183},{"i":191,"t":"02. Calling Write API To Add New Relationship Tuples","u":"/docs/getting-started/update-tuples","h":"#02-calling-write-api-to-add-new-relationship-tuples","p":183},{"i":193,"t":"03. Calling Write API To Delete Relationship Tuples","u":"/docs/getting-started/update-tuples","h":"#03-calling-write-api-to-delete-relationship-tuples","p":183},{"i":195,"t":"Related Sections","u":"/docs/getting-started/update-tuples","h":"#related-sections","p":183},{"i":199,"t":"Content","u":"/docs/interacting","h":"","p":197},{"i":203,"t":"Before You Start","u":"/docs/interacting/managing-group-access","h":"#before-you-start","p":201},{"i":205,"t":"Modeling User Groups","u":"/docs/interacting/managing-group-access","h":"#modeling-user-groups","p":201},{"i":207,"t":"OpenFGA Concepts","u":"/docs/interacting/managing-group-access","h":"#-concepts","p":201},{"i":209,"t":"Step By Step","u":"/docs/interacting/managing-group-access","h":"#step-by-step","p":201},{"i":210,"t":"01. Adding Company To The Document","u":"/docs/interacting/managing-group-access","h":"#01-adding-company-to-the-document","p":201},{"i":212,"t":"02. Adding Employee To The Company","u":"/docs/interacting/managing-group-access","h":"#02-adding-employee-to-the-company","p":201},{"i":214,"t":"03. Checking An Individual Member's Access To An Object","u":"/docs/interacting/managing-group-access","h":"#03-checking-an-individual-members-access-to-an-object","p":201},{"i":216,"t":"Related Sections","u":"/docs/interacting/managing-group-access","h":"#related-sections","p":201},{"i":220,"t":"Before You Start","u":"/docs/interacting/managing-group-membership","h":"#before-you-start","p":218},{"i":222,"t":"Modeling User Groups","u":"/docs/interacting/managing-group-membership","h":"#modeling-user-groups","p":218},{"i":224,"t":"Managing Group Access","u":"/docs/interacting/managing-group-membership","h":"#managing-group-access","p":218},{"i":226,"t":"OpenFGA Concepts","u":"/docs/interacting/managing-group-membership","h":"#-concepts","p":218},{"i":228,"t":"Step By Step","u":"/docs/interacting/managing-group-membership","h":"#step-by-step","p":218},{"i":229,"t":"01. Revoking Group Membership","u":"/docs/interacting/managing-group-membership","h":"#01-revoking-group-membership","p":218},{"i":231,"t":"02. Validating revoked member no longer has access","u":"/docs/interacting/managing-group-membership","h":"#02-validating-revoked-member-no-longer-has-access","p":218},{"i":233,"t":"Related Sections","u":"/docs/interacting/managing-group-membership","h":"#related-sections","p":218},{"i":237,"t":"Before You Start","u":"/docs/interacting/managing-user-access","h":"#before-you-start","p":235},{"i":239,"t":"Direct Access","u":"/docs/interacting/managing-user-access","h":"#direct-access","p":235},{"i":241,"t":"OpenFGA Concepts","u":"/docs/interacting/managing-user-access","h":"#-concepts","p":235},{"i":243,"t":"Step By Step","u":"/docs/interacting/managing-user-access","h":"#step-by-step","p":235},{"i":244,"t":"01. Adding Direct Relationship","u":"/docs/interacting/managing-user-access","h":"#01-adding-direct-relationship","p":235},{"i":246,"t":"02. Removing Direct Relationship","u":"/docs/interacting/managing-user-access","h":"#02-removing-direct-relationship","p":235},{"i":248,"t":"Related Sections","u":"/docs/interacting/managing-user-access","h":"#related-sections","p":235},{"i":252,"t":"Before you start","u":"/docs/interacting/read-tuple-changes","h":"#before-you-start","p":250},{"i":254,"t":"Step By Step","u":"/docs/interacting/read-tuple-changes","h":"#step-by-step","p":250},{"i":256,"t":"01. Configure The OpenFGA API Client","u":"/docs/interacting/read-tuple-changes","h":"#01-configure-the--api-client","p":250},{"i":258,"t":"02. Get Changes For All Object Types","u":"/docs/interacting/read-tuple-changes","h":"#02-get-changes-for-all-object-types","p":250},{"i":260,"t":"03. Get Changes For A Specific Object Type","u":"/docs/interacting/read-tuple-changes","h":"#03-get-changes-for-a-specific-object-type","p":250},{"i":264,"t":"Possible Options","u":"/docs/interacting/search-with-permissions","h":"#possible-options","p":262},{"i":266,"t":"Option 1: Search, Then Check","u":"/docs/interacting/search-with-permissions","h":"#option-1-search-then-check","p":262},{"i":268,"t":"Option 2: Build A Local Index From Changes Endpoint, Search, Then Check","u":"/docs/interacting/search-with-permissions","h":"#option-2-build-a-local-index-from-changes-endpoint-search-then-check","p":262},{"i":270,"t":"Option 3: Build A List Of IDs, Then Search","u":"/docs/interacting/search-with-permissions","h":"#option-3-build-a-list-of-ids-then-search","p":262},{"i":272,"t":"Choosing The Best Option","u":"/docs/interacting/search-with-permissions","h":"#choosing-the-best-option","p":262},{"i":274,"t":"Summary","u":"/docs/interacting/search-with-permissions","h":"#summary","p":262},{"i":278,"t":"Before You Start","u":"/docs/interacting/transactional-writes","h":"#before-you-start","p":276},{"i":280,"t":"Direct Access","u":"/docs/interacting/transactional-writes","h":"#direct-access","p":276},{"i":282,"t":"Modeling Public Access","u":"/docs/interacting/transactional-writes","h":"#modeling-public-access","p":276},{"i":284,"t":"OpenFGA Concepts","u":"/docs/interacting/transactional-writes","h":"#-concepts","p":276},{"i":286,"t":"Step By Step","u":"/docs/interacting/transactional-writes","h":"#step-by-step","p":276},{"i":287,"t":"01. Adding And Removing Relationship Tuples In The Same Transaction","u":"/docs/interacting/transactional-writes","h":"#01-adding-and-removing-relationship-tuples-in-the-same-transaction","p":276},{"i":289,"t":"02. Adding Multiple Related Relationship Tuples In The Same Transaction","u":"/docs/interacting/transactional-writes","h":"#02-adding-multiple-related-relationship-tuples-in-the-same-transaction","p":276},{"i":291,"t":"Related Sections","u":"/docs/interacting/transactional-writes","h":"#related-sections","p":276},{"i":295,"t":"Content","u":"/docs/modeling","h":"","p":293},{"i":299,"t":"Use-cases","u":"/docs/modeling/advanced","h":"#use-cases","p":297},{"i":301,"t":"Patterns","u":"/docs/modeling/advanced","h":"#patterns","p":297},{"i":305,"t":"Before You Start","u":"/docs/modeling/blocklists","h":"#before-you-start","p":303},{"i":307,"t":"Modeling User Groups","u":"/docs/modeling/blocklists","h":"#modeling-user-groups","p":303},{"i":309,"t":"OpenFGA Concepts","u":"/docs/modeling/blocklists","h":"#-concepts","p":303},{"i":311,"t":"Step By Step","u":"/docs/modeling/blocklists","h":"#step-by-step","p":303},{"i":313,"t":"01. Modify Our Model So Users Can Be Blocked From Accessing A Document","u":"/docs/modeling/blocklists","h":"#01-modify-our-model-so-users-can-be-blocked-from-accessing-a-document","p":303},{"i":315,"t":"02. Modify Our Model So Users Who Are Blocked Can No Longer Edit The Document","u":"/docs/modeling/blocklists","h":"#02-modify-our-model-so-users-who-are-blocked-can-no-longer-edit-the-document","p":303},{"i":317,"t":"03. Verify Our Solution Works","u":"/docs/modeling/blocklists","h":"#03-verify-our-solution-works","p":303},{"i":319,"t":"Related Sections","u":"/docs/modeling/blocklists","h":"#related-sections","p":303},{"i":323,"t":"Content","u":"/docs/modeling/building-blocks","h":"","p":321},{"i":327,"t":"Before You Start","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#before-you-start","p":325},{"i":329,"t":"Modeling User Groups","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#modeling-user-groups","p":325},{"i":331,"t":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#-concepts","p":325},{"i":333,"t":"Step By Step","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#step-by-step","p":325},{"i":335,"t":"01. Modify Our Model To Imply Editor As Viewer","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#01-modify-our-model-to-imply-editor-as-viewer","p":325},{"i":337,"t":"02. Check That Editors Are Viewers","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#02-check-that-editors-are-viewers","p":325},{"i":339,"t":"Related Sections","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#related-sections","p":325},{"i":342,"t":"What Is A Userset?","u":"/docs/modeling/building-blocks/usersets","h":"#what-is-a-userset","p":341},{"i":344,"t":"How Do Check Requests Work With Usersets?","u":"/docs/modeling/building-blocks/usersets","h":"#how-do-check-requests-work-with-usersets","p":341},{"i":346,"t":"How Do Expand Requests Work With Usersets?","u":"/docs/modeling/building-blocks/usersets","h":"#how-do-expand-requests-work-with-usersets","p":341},{"i":348,"t":"Internals","u":"/docs/modeling/building-blocks/usersets","h":"#internals","p":341},{"i":350,"t":"Related Sections","u":"/docs/modeling/building-blocks/usersets","h":"#related-sections","p":341},{"i":354,"t":"Before you start","u":"/docs/modeling/custom-roles","h":"#before-you-start","p":352},{"i":356,"t":"Initial Model","u":"/docs/modeling/custom-roles","h":"#initial-model","p":352},{"i":358,"t":"Modeling Roles and Permissions","u":"/docs/modeling/custom-roles","h":"#modeling-roles-and-permissions","p":352},{"i":360,"t":"Modeling Object-to-Object Relationships","u":"/docs/modeling/custom-roles","h":"#modeling-object-to-object-relationships","p":352},{"i":362,"t":"Concepts & Configuration Language","u":"/docs/modeling/custom-roles","h":"#concepts--configuration-language","p":352},{"i":364,"t":"Step By Step","u":"/docs/modeling/custom-roles","h":"#step-by-step","p":352},{"i":366,"t":"01. Update The Authorization Model To Add A Role Type","u":"/docs/modeling/custom-roles","h":"#01-update-the-authorization-model-to-add-a-role-type","p":352},{"i":368,"t":"02.Use Relationship Tuples To Tie The Users To The Roles","u":"/docs/modeling/custom-roles","h":"#02use-relationship-tuples-to-tie-the-users-to-the-roles","p":352},{"i":370,"t":"03. Use Relationship Tuples To Associate Permissions With The Roles","u":"/docs/modeling/custom-roles","h":"#03-use-relationship-tuples-to-associate-permissions-with-the-roles","p":352},{"i":372,"t":"04. Verify That The Authorization Model Works","u":"/docs/modeling/custom-roles","h":"#04-verify-that-the-authorization-model-works","p":352},{"i":374,"t":"Related Sections","u":"/docs/modeling/custom-roles","h":"#related-sections","p":352},{"i":378,"t":"Before you start","u":"/docs/modeling/direct-access","h":"#before-you-start","p":376},{"i":380,"t":"OpenFGA Concepts","u":"/docs/modeling/direct-access","h":"#-concepts","p":376},{"i":382,"t":"Step By Step","u":"/docs/modeling/direct-access","h":"#step-by-step","p":376},{"i":384,"t":"01. Create A Relationship Tuple","u":"/docs/modeling/direct-access","h":"#01-create-a-relationship-tuple","p":376},{"i":386,"t":"02. Check That The Relationship Exists","u":"/docs/modeling/direct-access","h":"#02-check-that-the-relationship-exists","p":376},{"i":388,"t":"Related Sections","u":"/docs/modeling/direct-access","h":"#related-sections","p":376},{"i":392,"t":"Introduction To Modeling","u":"/docs/modeling/getting-started","h":"#introduction-to-modeling","p":390},{"i":394,"t":"A Process For Defining Authorization Models","u":"/docs/modeling/getting-started","h":"#a-process-for-defining-authorization-models","p":390},{"i":396,"t":"01. Pick The Most Important Feature","u":"/docs/modeling/getting-started","h":"#01-pick-the-most-important-feature","p":390},{"i":398,"t":"02. List The Object Types","u":"/docs/modeling/getting-started","h":"#02-list-the-object-types","p":390},{"i":400,"t":"03. List Relations For Those Types","u":"/docs/modeling/getting-started","h":"#03-list-relations-for-those-types","p":390},{"i":402,"t":"04. Define Relations","u":"/docs/modeling/getting-started","h":"#04-define-relations","p":390},{"i":404,"t":"05. Test The Model","u":"/docs/modeling/getting-started","h":"#05-test-the-model","p":390},{"i":406,"t":"06. Iterate","u":"/docs/modeling/getting-started","h":"#06-iterate","p":390},{"i":408,"t":"Related Sections","u":"/docs/modeling/getting-started","h":"#related-sections","p":390},{"i":412,"t":"Content","u":"/docs/modeling/migrating","h":"","p":410},{"i":416,"t":"OpenFGA Model Schema Versions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#-model-schema-versions","p":414},{"i":418,"t":"Type Restrictions & Removing as self","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#type-restrictions--removing-as-self","p":414},{"i":420,"t":"Disallowing String Literals in user_ids","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#disallowing-string-literals-in-user_ids","p":414},{"i":422,"t":"Enforcing Type Restrictions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#enforcing-type-restrictions","p":414},{"i":424,"t":"Public Access","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#public-access","p":414},{"i":426,"t":"Query Evaluation Behavior with Type Restrictions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#query-evaluation-behavior-with-type-restrictions","p":414},{"i":428,"t":"Improved Schema Validation","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#improved-schema-validation","p":414},{"i":430,"t":"Deprecation Timeline","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#deprecation-timeline","p":414},{"i":432,"t":"Related Sections","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#related-sections","p":414},{"i":436,"t":"Before You Start","u":"/docs/modeling/multiple-restrictions","h":"#before-you-start","p":434},{"i":438,"t":"Modeling Parent-Child Objects","u":"/docs/modeling/multiple-restrictions","h":"#modeling-parent-child-objects","p":434},{"i":440,"t":"Modeling Roles And Permissions","u":"/docs/modeling/multiple-restrictions","h":"#modeling-roles-and-permissions","p":434},{"i":442,"t":"OpenFGA Concepts","u":"/docs/modeling/multiple-restrictions","h":"#-concepts","p":434},{"i":444,"t":"Step By Step","u":"/docs/modeling/multiple-restrictions","h":"#step-by-step","p":434},{"i":446,"t":"01. Add can_delete Relation To Only Allow Writers That Are Members Of The Ownership Organization","u":"/docs/modeling/multiple-restrictions","h":"#01-add-can_delete-relation-to-only-allow-writers-that-are-members-of-the-ownership-organization","p":434},{"i":448,"t":"02. Verify That Our Solutions Work","u":"/docs/modeling/multiple-restrictions","h":"#02-verify-that-our-solutions-work","p":434},{"i":450,"t":"Related Sections","u":"/docs/modeling/multiple-restrictions","h":"#related-sections","p":434},{"i":454,"t":"Before You Start","u":"/docs/modeling/parent-child","h":"#before-you-start","p":452},{"i":456,"t":"Direct Access","u":"/docs/modeling/parent-child","h":"#direct-access","p":452},{"i":458,"t":"OpenFGA Concepts","u":"/docs/modeling/parent-child","h":"#-concepts","p":452},{"i":460,"t":"Step By Step","u":"/docs/modeling/parent-child","h":"#step-by-step","p":452},{"i":462,"t":"01. Update The Authorization Model To Allow A Parent Relationship Between Folder And Document","u":"/docs/modeling/parent-child","h":"#01-update-the-authorization-model-to-allow-a-parent-relationship-between-folder-and-document","p":452},{"i":464,"t":"02. Update The Editor Relation In The Document Type Definition To Support Cascading From Folder","u":"/docs/modeling/parent-child","h":"#02-update-the-editor-relation-in-the-document-type-definition-to-support-cascading-from-folder","p":452},{"i":466,"t":"03. Create A New Relationship Tuple To Indicate That bob Is An Editor Of folder:notes","u":"/docs/modeling/parent-child","h":"#03-create-a-new-relationship-tuple-to-indicate-that-bob-is-an-editor-of-foldernotes","p":452},{"i":468,"t":"04. Create A New Relationship Tuple To Indicate That folder:notes Is A Parent Of document:meeting_notes.doc","u":"/docs/modeling/parent-child","h":"#04-create-a-new-relationship-tuple-to-indicate-that-foldernotes-is-a-parent-of-documentmeeting_notesdoc","p":452},{"i":470,"t":"05. Check To See If bob Is An Editor Of document:meeting_notes.doc","u":"/docs/modeling/parent-child","h":"#05-check-to-see-if-bob-is-an-editor-of-documentmeeting_notesdoc","p":452},{"i":472,"t":"Related Sections","u":"/docs/modeling/parent-child","h":"#related-sections","p":452},{"i":476,"t":"Before You Start","u":"/docs/modeling/public-access","h":"#before-you-start","p":474},{"i":478,"t":"Direct Access","u":"/docs/modeling/public-access","h":"#direct-access","p":474},{"i":480,"t":"OpenFGA Concepts","u":"/docs/modeling/public-access","h":"#-concepts","p":474},{"i":482,"t":"Step By Step","u":"/docs/modeling/public-access","h":"#step-by-step","p":474},{"i":484,"t":"01. Create A Relationship Tuple","u":"/docs/modeling/public-access","h":"#01-create-a-relationship-tuple","p":474},{"i":486,"t":"02. Check That The Relationship Exists","u":"/docs/modeling/public-access","h":"#02-check-that-the-relationship-exists","p":474},{"i":488,"t":"Related Sections","u":"/docs/modeling/public-access","h":"#related-sections","p":474},{"i":492,"t":"Before you start","u":"/docs/modeling/roles-and-permissions","h":"#before-you-start","p":490},{"i":494,"t":"Direct Access","u":"/docs/modeling/roles-and-permissions","h":"#direct-access","p":490},{"i":496,"t":"OpenFGA Concepts","u":"/docs/modeling/roles-and-permissions","h":"#-concepts","p":490},{"i":498,"t":"Step By Step","u":"/docs/modeling/roles-and-permissions","h":"#step-by-step","p":490},{"i":500,"t":"01. Understand How Roles Work Within Our Trip Booking System","u":"/docs/modeling/roles-and-permissions","h":"#01-understand-how-roles-work-within-our-trip-booking-system","p":490},{"i":502,"t":"02. Adding Permissions For Bookings","u":"/docs/modeling/roles-and-permissions","h":"#02-adding-permissions-for-bookings","p":490},{"i":504,"t":"03. Checking User Roles And Their Permissions","u":"/docs/modeling/roles-and-permissions","h":"#03-checking-user-roles-and-their-permissions","p":490},{"i":506,"t":"Related Sections","u":"/docs/modeling/roles-and-permissions","h":"#related-sections","p":490},{"i":510,"t":"Before you start","u":"/docs/modeling/user-groups","h":"#before-you-start","p":508},{"i":512,"t":"Direct Access","u":"/docs/modeling/user-groups","h":"#direct-access","p":508},{"i":514,"t":"OpenFGA Concepts","u":"/docs/modeling/user-groups","h":"#-concepts","p":508},{"i":516,"t":"Step By Step","u":"/docs/modeling/user-groups","h":"#step-by-step","p":508},{"i":518,"t":"01. Introduce The Concept Of A Team To The Authorization Model","u":"/docs/modeling/user-groups","h":"#01-introduce-the-concept-of-a-team-to-the-authorization-model","p":508},{"i":520,"t":"02. Add Users As Members To The Team","u":"/docs/modeling/user-groups","h":"#02-add-users-as-members-to-the-team","p":508},{"i":522,"t":"03. Assign The Team Members A Relation To An Object","u":"/docs/modeling/user-groups","h":"#03-assign-the-team-members-a-relation-to-an-object","p":508},{"i":524,"t":"04. Checking An Individual Member's Access To An Object","u":"/docs/modeling/user-groups","h":"#04-checking-an-individual-members-access-to-an-object","p":508},{"i":526,"t":"Related Sections","u":"/docs/modeling/user-groups","h":"#related-sections","p":508},{"i":530,"t":"Before you start","u":"/docs/interacting/managing-relationships-between-objects","h":"#before-you-start","p":528},{"i":532,"t":"Direct Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#direct-access","p":528},{"i":534,"t":"OpenFGA Concepts","u":"/docs/interacting/managing-relationships-between-objects","h":"#-concepts","p":528},{"i":536,"t":"Step By Step","u":"/docs/interacting/managing-relationships-between-objects","h":"#step-by-step","p":528},{"i":538,"t":"01. Modify Authorization Model","u":"/docs/interacting/managing-relationships-between-objects","h":"#01-modify-authorization-model","p":528},{"i":540,"t":"02. Adding Relationship Tuples Where User Is Another Object","u":"/docs/interacting/managing-relationships-between-objects","h":"#02-adding-relationship-tuples-where-user-is-another-object","p":528},{"i":542,"t":"03. Adding Relationship Tuples To The Other Object","u":"/docs/interacting/managing-relationships-between-objects","h":"#03-adding-relationship-tuples-to-the-other-object","p":528},{"i":544,"t":"04. Validating User Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#04-validating-user-access","p":528},{"i":546,"t":"05. Revoking Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#05-revoking-access","p":528},{"i":548,"t":"Related Sections","u":"/docs/interacting/managing-relationships-between-objects","h":"#related-sections","p":528},{"i":552,"t":"Before You Start","u":"/docs/interacting/relationship-queries","h":"#before-you-start","p":550},{"i":554,"t":"Direct Access","u":"/docs/interacting/relationship-queries","h":"#direct-access","p":550},{"i":556,"t":"OpenFGA Concepts","u":"/docs/interacting/relationship-queries","h":"#-concepts","p":550},{"i":558,"t":"Check","u":"/docs/interacting/relationship-queries","h":"#check","p":550},{"i":559,"t":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for","p":550},{"i":561,"t":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use","p":550},{"i":563,"t":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it","p":550},{"i":565,"t":"Read","u":"/docs/interacting/relationship-queries","h":"#read","p":550},{"i":566,"t":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-1","p":550},{"i":568,"t":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-1","p":550},{"i":570,"t":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-1","p":550},{"i":572,"t":"Expand","u":"/docs/interacting/relationship-queries","h":"#expand","p":550},{"i":573,"t":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-2","p":550},{"i":575,"t":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-2","p":550},{"i":577,"t":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-2","p":550},{"i":579,"t":"ListObjects","u":"/docs/interacting/relationship-queries","h":"#listobjects","p":550},{"i":580,"t":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-3","p":550},{"i":582,"t":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-3","p":550},{"i":584,"t":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-3","p":550},{"i":586,"t":"Summary","u":"/docs/interacting/relationship-queries","h":"#summary","p":550},{"i":588,"t":"Related Sections","u":"/docs/interacting/relationship-queries","h":"#related-sections","p":550},{"i":592,"t":"Before You Start","u":"/docs/modeling/building-blocks/direct-relationships","h":"#before-you-start","p":590},{"i":594,"t":"Direct Access","u":"/docs/modeling/building-blocks/direct-relationships","h":"#direct-access","p":590},{"i":596,"t":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/direct-relationships","h":"#-concepts","p":590},{"i":598,"t":"What Are Direct Relationships?","u":"/docs/modeling/building-blocks/direct-relationships","h":"#what-are-direct-relationships","p":590},{"i":600,"t":"Enable Or Disable Direct Relationships","u":"/docs/modeling/building-blocks/direct-relationships","h":"#enable-or-disable-direct-relationships","p":590},{"i":602,"t":"How It Affects Your System","u":"/docs/modeling/building-blocks/direct-relationships","h":"#how-it-affects-your-system","p":590},{"i":604,"t":"1. With Direct Relationships Enabled","u":"/docs/modeling/building-blocks/direct-relationships","h":"#1-with-direct-relationships-enabled","p":590},{"i":606,"t":"2. With Direct Relationships Disabled","u":"/docs/modeling/building-blocks/direct-relationships","h":"#2-with-direct-relationships-disabled","p":590},{"i":608,"t":"Related Sections","u":"/docs/modeling/building-blocks/direct-relationships","h":"#related-sections","p":590},{"i":612,"t":"Before You Start","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#before-you-start","p":610},{"i":614,"t":"Modeling User Groups","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#modeling-user-groups","p":610},{"i":616,"t":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#-concepts","p":610},{"i":618,"t":"Step By Step","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#step-by-step","p":610},{"i":619,"t":"01. Create Parent Relations In Document","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#01-create-parent-relations-in-document","p":610},{"i":621,"t":"02. Add Parent Relationship Tuples","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#02-add-parent-relationship-tuples","p":610},{"i":623,"t":"03. Check That Parent Folders Have Permissions","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#03-check-that-parent-folders-have-permissions","p":610},{"i":625,"t":"Advanced Object to Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#advanced-object-to-object-relationships","p":610},{"i":627,"t":"01. Create Authorization Model With Object To Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#01-create-authorization-model-with-object-to-object-relationships","p":610},{"i":629,"t":"02. Adding Relationship Tuples","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#02-adding-relationship-tuples","p":610},{"i":631,"t":"03. Check To See If Access Is Allowed Without Direct Relationship","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#03-check-to-see-if-access-is-allowed-without-direct-relationship","p":610},{"i":633,"t":"04. Disassociating Plan From Feature","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#04-disassociating-plan-from-feature","p":610},{"i":635,"t":"Related Sections","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#related-sections","p":610},{"i":639,"t":"Before You Start","u":"/docs/modeling/migrating/migrating-relations","h":"#before-you-start","p":637},{"i":641,"t":"Step By Step","u":"/docs/modeling/migrating/migrating-relations","h":"#step-by-step","p":637},{"i":643,"t":"01. Create A Backwards Compatible Model","u":"/docs/modeling/migrating/migrating-relations","h":"#01-create-a-backwards-compatible-model","p":637},{"i":645,"t":"02. Create a New Relationship Tuple","u":"/docs/modeling/migrating/migrating-relations","h":"#02-create-a-new-relationship-tuple","p":637},{"i":647,"t":"03. Migrate The Existing Relationship Tuples","u":"/docs/modeling/migrating/migrating-relations","h":"#03-migrate-the-existing-relationship-tuples","p":637},{"i":649,"t":"04. Remove Obsolete Relationship From The Model","u":"/docs/modeling/migrating/migrating-relations","h":"#04-remove-obsolete-relationship-from-the-model","p":637},{"i":651,"t":"Related Sections","u":"/docs/modeling/migrating/migrating-relations","h":"#related-sections","p":637},{"i":655,"t":"Before You Start","u":"/docs/modeling/organization-context-authorization","h":"#before-you-start","p":653},{"i":657,"t":"OpenFGA Concepts","u":"/docs/modeling/organization-context-authorization","h":"#-concepts","p":653},{"i":659,"t":"Scenario","u":"/docs/modeling/organization-context-authorization","h":"#scenario","p":653},{"i":661,"t":"Requirements","u":"/docs/modeling/organization-context-authorization","h":"#requirements","p":653},{"i":663,"t":"Step By Step","u":"/docs/modeling/organization-context-authorization","h":"#step-by-step","p":653},{"i":665,"t":"Understand Relationships Without Contextual Data","u":"/docs/modeling/organization-context-authorization","h":"#understand-relationships-without-contextual-data","p":653},{"i":667,"t":"Take Organization Context Into Consideration","u":"/docs/modeling/organization-context-authorization","h":"#take-organization-context-into-consideration","p":653},{"i":669,"t":"Use Contextual Tuples For Context Related Checks","u":"/docs/modeling/organization-context-authorization","h":"#use-contextual-tuples-for-context-related-checks","p":653},{"i":671,"t":"Summary","u":"/docs/modeling/organization-context-authorization","h":"#summary","p":653},{"i":673,"t":"Related Sections","u":"/docs/modeling/organization-context-authorization","h":"#related-sections","p":653},{"i":677,"t":"Before You Start","u":"/docs/modeling/advanced/iot","h":"#before-you-start","p":675},{"i":679,"t":"OpenFGA Concepts","u":"/docs/modeling/advanced/iot","h":"#-concepts","p":675},{"i":681,"t":"What You Will Be Modeling","u":"/docs/modeling/advanced/iot","h":"#what-you-will-be-modeling","p":675},{"i":683,"t":"Requirements","u":"/docs/modeling/advanced/iot","h":"#requirements","p":675},{"i":685,"t":"Defined Scenarios","u":"/docs/modeling/advanced/iot","h":"#defined-scenarios","p":675},{"i":687,"t":"Modeling Device Authorization","u":"/docs/modeling/advanced/iot","h":"#modeling-device-authorization","p":675},{"i":689,"t":"01. Writing The Initial Model For A Device","u":"/docs/modeling/advanced/iot","h":"#01-writing-the-initial-model-for-a-device","p":675},{"i":691,"t":"02. Inserting Some Relationship Tuples","u":"/docs/modeling/advanced/iot","h":"#02-inserting-some-relationship-tuples","p":675},{"i":693,"t":"03. Updating Our Authorization Model To Facilitate Future Changes","u":"/docs/modeling/advanced/iot","h":"#03-updating-our-authorization-model-to-facilitate-future-changes","p":675},{"i":695,"t":"04. Modeling Device Groups","u":"/docs/modeling/advanced/iot","h":"#04-modeling-device-groups","p":675},{"i":697,"t":"05. Disallow Direct Relationships To Users","u":"/docs/modeling/advanced/iot","h":"#05-disallow-direct-relationships-to-users","p":675},{"i":699,"t":"Summary","u":"/docs/modeling/advanced/iot","h":"#summary","p":675},{"i":701,"t":"Exercises For You","u":"/docs/modeling/advanced/iot","h":"#exercises-for-you","p":675},{"i":705,"t":"Before You Start","u":"/docs/modeling/advanced/slack","h":"#before-you-start","p":703},{"i":707,"t":"OpenFGA Concepts","u":"/docs/modeling/advanced/slack","h":"#-concepts","p":703},{"i":709,"t":"What you will be modeling","u":"/docs/modeling/advanced/slack","h":"#what-you-will-be-modeling","p":703},{"i":711,"t":"Requirements","u":"/docs/modeling/advanced/slack","h":"#requirements","p":703},{"i":713,"t":"Defined Scenarios","u":"/docs/modeling/advanced/slack","h":"#defined-scenarios","p":703},{"i":715,"t":"Modeling Workspaces & Channels","u":"/docs/modeling/advanced/slack","h":"#modeling-workspaces--channels","p":703},{"i":717,"t":"01. Individual Permissions","u":"/docs/modeling/advanced/slack","h":"#01-individual-permissions","p":703},{"i":719,"t":"02. Updating The workspace Authorization Model With Implied Relations","u":"/docs/modeling/advanced/slack","h":"#02-updating-the-workspace-authorization-model-with-implied-relations","p":703},{"i":721,"t":"03. Updating The Authorization Model To Include Channels","u":"/docs/modeling/advanced/slack","h":"#03-updating-the-authorization-model-to-include-channels","p":703},{"i":723,"t":"Summary","u":"/docs/modeling/advanced/slack","h":"#summary","p":703},{"i":725,"t":"Exercises For You","u":"/docs/modeling/advanced/slack","h":"#exercises-for-you","p":703},{"i":729,"t":"Before You Start","u":"/docs/modeling/contextual-time-based-authorization","h":"#before-you-start","p":727},{"i":731,"t":"OpenFGA Concepts","u":"/docs/modeling/contextual-time-based-authorization","h":"#-concepts","p":727},{"i":733,"t":"Scenario","u":"/docs/modeling/contextual-time-based-authorization","h":"#scenario","p":727},{"i":735,"t":"Requirements","u":"/docs/modeling/contextual-time-based-authorization","h":"#requirements","p":727},{"i":737,"t":"Step By Step","u":"/docs/modeling/contextual-time-based-authorization","h":"#step-by-step","p":727},{"i":739,"t":"Understand Relationships Without Contextual Data","u":"/docs/modeling/contextual-time-based-authorization","h":"#understand-relationships-without-contextual-data","p":727},{"i":741,"t":"Take Time And IP Address Into Consideration","u":"/docs/modeling/contextual-time-based-authorization","h":"#take-time-and-ip-address-into-consideration","p":727},{"i":743,"t":"Use Contextual Tuples For Context Related Checks","u":"/docs/modeling/contextual-time-based-authorization","h":"#use-contextual-tuples-for-context-related-checks","p":727},{"i":745,"t":"Summary","u":"/docs/modeling/contextual-time-based-authorization","h":"#summary","p":727},{"i":747,"t":"Taking It A Step Further: Banks As A Service Authorization","u":"/docs/modeling/contextual-time-based-authorization","h":"#taking-it-a-step-further-banks-as-a-service-authorization","p":727},{"i":749,"t":"Related Sections","u":"/docs/modeling/contextual-time-based-authorization","h":"#related-sections","p":727},{"i":753,"t":"Before You Start","u":"/docs/modeling/advanced/entitlements","h":"#before-you-start","p":751},{"i":755,"t":"OpenFGA Concepts","u":"/docs/modeling/advanced/entitlements","h":"#-concepts","p":751},{"i":757,"t":"What You Will Be Modeling","u":"/docs/modeling/advanced/entitlements","h":"#what-you-will-be-modeling","p":751},{"i":759,"t":"Requirements","u":"/docs/modeling/advanced/entitlements","h":"#requirements","p":751},{"i":761,"t":"Defined Scenarios","u":"/docs/modeling/advanced/entitlements","h":"#defined-scenarios","p":751},{"i":763,"t":"Modeling Entitlements For GitHub","u":"/docs/modeling/advanced/entitlements","h":"#modeling-entitlements-for-github","p":751},{"i":764,"t":"01. Building The Initial Authorization Model And Relationship Tuples","u":"/docs/modeling/advanced/entitlements","h":"#01-building-the-initial-authorization-model-and-relationship-tuples","p":751},{"i":766,"t":"02. Populating The Relationship Tuples","u":"/docs/modeling/advanced/entitlements","h":"#02-populating-the-relationship-tuples","p":751},{"i":768,"t":"03. Updating The Authorization Model","u":"/docs/modeling/advanced/entitlements","h":"#03-updating-the-authorization-model","p":751},{"i":770,"t":"Summary","u":"/docs/modeling/advanced/entitlements","h":"#summary","p":751},{"i":774,"t":"Before You Start","u":"/docs/modeling/advanced/github","h":"#before-you-start","p":772},{"i":776,"t":"OpenFGA Concepts","u":"/docs/modeling/advanced/github","h":"#-concepts","p":772},{"i":778,"t":"What You Will Be Modeling","u":"/docs/modeling/advanced/github","h":"#what-you-will-be-modeling","p":772},{"i":780,"t":"Requirements","u":"/docs/modeling/advanced/github","h":"#requirements","p":772},{"i":782,"t":"Defined Scenarios","u":"/docs/modeling/advanced/github","h":"#defined-scenarios","p":772},{"i":784,"t":"Modeling GitHub's Permissions","u":"/docs/modeling/advanced/github","h":"#modeling-githubs-permissions","p":772},{"i":785,"t":"01. Permissions For Individuals In An Org","u":"/docs/modeling/advanced/github","h":"#01-permissions-for-individuals-in-an-org","p":772},{"i":787,"t":"02. Permissions For Teams In An Org","u":"/docs/modeling/advanced/github","h":"#02-permissions-for-teams-in-an-org","p":772},{"i":789,"t":"03. Permissions For Child Teams In An Org","u":"/docs/modeling/advanced/github","h":"#03-permissions-for-child-teams-in-an-org","p":772},{"i":791,"t":"04. Base Permissions For Org Members","u":"/docs/modeling/advanced/github","h":"#04-base-permissions-for-org-members","p":772},{"i":793,"t":"Summary","u":"/docs/modeling/advanced/github","h":"#summary","p":772},{"i":797,"t":"Before You Start","u":"/docs/modeling/advanced/gdrive","h":"#before-you-start","p":795},{"i":799,"t":"OpenFGA Concepts","u":"/docs/modeling/advanced/gdrive","h":"#-concepts","p":795},{"i":801,"t":"What You Will Be Modeling","u":"/docs/modeling/advanced/gdrive","h":"#what-you-will-be-modeling","p":795},{"i":803,"t":"Requirements","u":"/docs/modeling/advanced/gdrive","h":"#requirements","p":795},{"i":805,"t":"Defined Scenarios","u":"/docs/modeling/advanced/gdrive","h":"#defined-scenarios","p":795},{"i":807,"t":"Modeling Google Drive's Permissions","u":"/docs/modeling/advanced/gdrive","h":"#modeling-google-drives-permissions","p":795},{"i":808,"t":"01. Individual Permissions","u":"/docs/modeling/advanced/gdrive","h":"#01-individual-permissions","p":795},{"i":810,"t":"02. Organization Permissions","u":"/docs/modeling/advanced/gdrive","h":"#02-organization-permissions","p":795},{"i":812,"t":"03. Folder Permission Propagation","u":"/docs/modeling/advanced/gdrive","h":"#03-folder-permission-propagation","p":795},{"i":814,"t":"04. Sharing Files And Folders Publicly","u":"/docs/modeling/advanced/gdrive","h":"#04-sharing-files-and-folders-publicly","p":795},{"i":816,"t":"Related Sections","u":"/docs/modeling/advanced/gdrive","h":"#related-sections","p":795}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/3",[0,3.408]],["t/5",[1,4.189,2,5.488,3,2.925]],["t/7",[3,2.573,4,4.828,5,4.828,6,4.828]],["t/9",[7,1.92,8,3.852,9,2.309,10,4.131,11,2.806,12,2.806,13,2.806]],["t/11",[8,3.646,9,2.185,10,3.91,14,1.704,15,4.311]],["t/13",[16,6.846]],["t/17",[17,4.43]],["t/19",[17,3.73,18,5.375]],["t/21",[3,3.387,19,2.381]],["t/23",[20,6.846]],["t/25",[21,4.172]],["t/27",[22,4.252]],["t/29",[23,2.715]],["t/31",[18,5.375,23,2.286]],["t/33",[17,2.834,22,2.72,23,1.737,24,4.828]],["t/35",[14,2.513,25,3.123]],["t/37",[14,2.985]],["t/39",[14,2.17,26,2.925,27,4.641]],["t/41",[28,3.387,29,5.084]],["t/43",[21,3.033,29,4.39,30,4.189]],["t/45",[25,3.123,31,4.852]],["t/47",[9,2.447,17,2.834,32,4.828,33,4.083]],["t/49",[23,2.286,34,2.694]],["t/53",[35,3.643,36,4.977,37,5.488]],["t/55",[14,1.909,17,2.834,26,2.573,38,3.862]],["t/57",[21,2.668,23,1.737,39,4.379,40,4.083]],["t/59",[21,2.668,23,2.482,39,4.379]],["t/61",[41,6.355,42,5.375]],["t/63",[42,5.375,43,5.764]],["t/65",[42,5.375,44,5.764]],["t/67",[16,4.977,45,5.488,46,2.618]],["t/69",[23,2.286,34,2.694]],["t/73",[47,5.763]],["t/77",[48,2.832,49,2.832]],["t/79",[50,3.917]],["t/81",[23,2.286,34,2.694]],["t/85",[50,3.917]],["t/89",[48,2.832,49,2.832]],["t/91",[50,3.917]],["t/93",[51,2.24,52,4.828,53,4.828,54,4.828]],["t/95",[1,3.686,22,2.72,55,2.271,56,4.083]],["t/97",[0,1.758,28,2.075,57,2.075,58,3.893,59,2.585,60,3.531]],["t/99",[23,2.286,34,2.694]],["t/103",[23,2.286,34,2.694]],["t/107",[48,2.832,49,2.832]],["t/109",[50,3.917]],["t/111",[0,1.946,35,2.862,51,1.999,59,2.862,61,3.448]],["t/113",[28,2.573,55,2.271,59,3.206,62,3.862]],["t/115",[23,2.286,34,2.694]],["t/119",[48,2.832,49,2.832]],["t/121",[50,3.917]],["t/123",[0,1.946,35,2.862,51,1.999,59,2.862,61,3.448]],["t/125",[21,2.382,30,3.291,55,2.027,59,2.862,62,3.448]],["t/127",[23,2.286,34,2.694]],["t/131",[63,6.355,64,6.355]],["t/133",[23,2.286,34,2.694]],["t/137",[50,3.917]],["t/139",[35,4.219,65,6.355]],["t/141",[35,3.643,66,4.641,67,5.488]],["t/143",[1,4.852,35,4.219]],["t/145",[68,7.548]],["t/147",[69,6.355,70,6.355]],["t/149",[28,3.387,71,6.355]],["t/151",[72,6.355,73,5.375]],["t/153",[74,7.548]],["t/155",[75,7.548]],["t/157",[76,7.548]],["t/159",[77,7.548]],["t/161",[23,2.286,34,2.694]],["t/169",[1,4.852,78,3.653]],["t/171",[1,3.686,78,2.775,79,4.379,80,4.828]],["t/175",[20,3.91,25,2.118,81,4.311,82,4.311,83,4.311]],["t/177",[3,1.892,19,1.33,56,3.002,84,3.549,85,3.549,86,3.549,87,3.219]],["t/179",[3,1.738,19,1.222,43,2.958,44,2.958,78,1.874,88,2.958,89,3.261,90,3.261]],["t/181",[23,2.286,34,2.694]],["t/185",[48,2.832,49,2.832]],["t/187",[50,3.917]],["t/189",[0,1.946,35,2.862,51,1.999,59,2.862,61,3.448]],["t/191",[14,1.29,25,1.603,55,1.534,59,2.165,62,2.609,91,2.758,92,2.49,93,2.609]],["t/193",[14,1.403,25,1.744,57,1.892,59,2.356,62,2.839,91,3.002,94,3.549]],["t/195",[23,2.286,34,2.694]],["t/199",[47,5.763]],["t/203",[48,2.832,49,2.832]],["t/205",[19,2.056,22,3.091,95,3.754]],["t/207",[0,2.869,46,3.032]],["t/209",[50,3.917]],["t/210",[51,2.24,96,3.206,97,4.379,98,3.539]],["t/212",[55,2.271,96,3.206,97,4.379,99,4.828]],["t/214",[9,1.973,21,2.152,28,2.075,57,2.075,100,2.972,101,3.531]],["t/216",[23,2.286,34,2.694]],["t/220",[48,2.832,49,2.832]],["t/222",[19,2.056,22,3.091,95,3.754]],["t/224",[9,2.782,95,3.754,102,5.488]],["t/226",[0,2.869,46,3.032]],["t/228",[50,3.917]],["t/229",[51,2.24,95,3.303,103,4.083,104,4.828]],["t/231",[9,1.973,55,1.831,103,3.293,105,3.293,106,2.972,107,3.531]],["t/233",[23,2.286,34,2.694]],["t/237",[48,2.832,49,2.832]],["t/239",[9,3.221,26,3.387]],["t/241",[0,2.869,46,3.032]],["t/243",[50,3.917]],["t/244",[14,1.909,26,2.573,51,2.24,96,3.206]],["t/246",[14,1.909,26,2.573,55,2.271,108,3.862]],["t/248",[23,2.286,34,2.694]],["t/252",[48,2.832,49,2.832]],["t/254",[50,3.917]],["t/256",[0,1.946,35,2.862,51,1.999,59,2.862,61,3.448]],["t/258",[17,2.834,21,2.668,55,2.271,109,3.862]],["t/260",[17,2.53,21,2.382,57,2.297,109,3.448,110,4.311]],["t/264",[87,5.764,111,4.852]],["t/266",[28,2.573,111,3.686,112,4.379,113,4.083]],["t/268",[28,1.608,109,2.413,111,2.303,113,2.551,114,2.736,115,2.551,116,3.017,117,3.017,118,3.017]],["t/270",[30,2.972,56,3.293,111,2.972,113,3.293,115,3.293,119,3.893]],["t/272",[111,4.189,120,5.488,121,5.488]],["t/274",[122,5.164]],["t/278",[48,2.832,49,2.832]],["t/280",[9,3.221,26,3.387]],["t/282",[9,2.782,19,2.056,33,4.641]],["t/284",[0,2.869,46,3.032]],["t/286",[50,3.917]],["t/287",[14,1.403,25,1.744,40,3.002,51,1.646,96,2.356,108,2.839,123,3.219]],["t/289",[14,1.29,23,1.173,25,1.603,40,2.758,55,1.534,96,2.165,123,2.958,124,3.261]],["t/291",[23,2.286,34,2.694]],["t/295",[47,5.763]],["t/299",[78,3.653,125,6.355]],["t/301",[126,7.548]],["t/305",[48,2.832,49,2.832]],["t/307",[19,2.056,22,3.091,95,3.754]],["t/309",[0,2.869,46,3.032]],["t/311",[50,3.917]],["t/313",[9,1.799,19,1.33,22,2,51,1.646,98,2.602,127,2.839,128,3.219]],["t/315",[19,1.222,22,1.837,55,1.534,98,2.391,107,2.958,127,2.609,128,2.958,129,3.261]],["t/317",[57,2.573,130,4.083,131,4.379,132,3.539]],["t/319",[23,2.286,34,2.694]],["t/323",[47,5.763]],["t/327",[48,2.832,49,2.832]],["t/329",[19,2.056,22,3.091,95,3.754]],["t/331",[0,2.869,46,3.032]],["t/333",[50,3.917]],["t/335",[19,1.459,27,3.293,51,1.806,127,3.114,133,2.972,134,3.531]],["t/337",[28,2.573,55,2.271,133,3.686,134,4.379]],["t/339",[23,2.286,34,2.694]],["t/342",[135,6.384]],["t/344",[28,2.573,29,3.862,132,3.539,135,4.083]],["t/346",[29,3.862,132,3.539,135,4.083,136,4.379]],["t/348",[137,7.548]],["t/350",[23,2.286,34,2.694]],["t/354",[48,2.832,49,2.832]],["t/356",[19,2.381,138,5.375]],["t/358",[7,3.754,19,2.056,139,3.091]],["t/360",[14,1.909,19,1.809,21,3.813]],["t/362",[35,3.206,36,4.379,46,2.304,140,4.083]],["t/364",[50,3.917]],["t/366",[3,1.892,7,2.428,17,2.083,19,1.33,51,1.646,92,2.71,141,2.509]],["t/368",[7,2.663,14,1.539,22,2.193,25,1.913,142,3.893,143,3.893]],["t/370",[7,2.428,14,1.403,25,1.744,57,1.892,78,2.04,139,2,144,3.549]],["t/372",[3,2.297,19,1.615,130,3.646,132,3.16,145,2.783]],["t/374",[23,2.286,34,2.694]],["t/378",[48,2.832,49,2.832]],["t/380",[0,2.869,46,3.032]],["t/382",[50,3.917]],["t/384",[14,1.909,25,2.373,51,2.24,146,3.303]],["t/386",[14,1.909,28,2.573,55,2.271,147,4.083]],["t/388",[23,2.286,34,2.694]],["t/392",[19,2.381,148,6.355]],["t/394",[3,2.573,19,1.809,149,4.828,150,3.413]],["t/396",[51,2.24,73,4.083,151,4.828,152,4.828]],["t/398",[17,2.834,21,2.668,30,3.686,55,2.271]],["t/400",[17,2.53,23,1.55,30,3.291,57,2.297,153,4.311]],["t/402",[23,1.974,145,3.543,150,3.879]],["t/404",[19,2.056,154,4.39,155,5.488]],["t/406",[156,6.355,157,6.355]],["t/408",[23,2.286,34,2.694]],["t/412",[47,5.763]],["t/416",[0,2.18,19,1.809,158,4.379,159,4.828]],["t/418",[17,2.53,38,3.448,108,3.448,140,3.646,160,4.311]],["t/420",[161,4.379,162,4.828,163,4.828,164,4.828]],["t/422",[17,3.221,38,4.39,165,5.488]],["t/424",[9,3.221,33,5.375]],["t/426",[17,2.53,38,3.448,166,4.311,167,4.311,168,4.311]],["t/428",[105,4.641,158,4.977,169,5.488]],["t/430",[170,6.355,171,6.355]],["t/432",[23,2.286,34,2.694]],["t/436",[48,2.832,49,2.832]],["t/438",[19,1.809,21,2.668,172,3.539,173,4.379]],["t/440",[7,3.754,19,2.056,139,3.091]],["t/442",[0,2.869,46,3.032]],["t/444",[50,3.917]],["t/446",[23,1.085,51,1.399,92,2.303,106,2.303,174,3.017,175,2.551,176,3.017,177,3.017,178,2.551]],["t/448",[55,2.271,130,4.083,131,4.379,132,3.539]],["t/450",[23,2.286,34,2.694]],["t/454",[48,2.832,49,2.832]],["t/456",[9,3.221,26,3.387]],["t/458",[0,2.869,46,3.032]],["t/460",[50,3.917]],["t/462",[3,1.495,14,1.11,19,1.051,51,1.302,98,2.057,141,1.984,172,2.057,175,2.373,179,2.806,180,2.142]],["t/464",[17,1.647,18,2.373,23,1.009,55,1.32,98,2.057,133,2.142,141,1.984,180,2.142,181,2.806,182,2.806]],["t/466",[14,1.193,25,1.482,57,1.608,93,2.413,133,2.303,146,2.064,183,2.736,184,2.736,185,2.736]],["t/468",[14,1.193,25,1.482,93,2.413,145,1.948,146,2.064,172,2.211,183,2.736,185,2.736,186,2.736]],["t/470",[28,2.075,133,2.972,154,3.114,184,3.531,186,3.531,187,3.531]],["t/472",[23,2.286,34,2.694]],["t/476",[48,2.832,49,2.832]],["t/478",[9,3.221,26,3.387]],["t/480",[0,2.869,46,3.032]],["t/482",[50,3.917]],["t/484",[14,1.909,25,2.373,51,2.24,146,3.303]],["t/486",[14,1.909,28,2.573,55,2.271,147,4.083]],["t/488",[23,2.286,34,2.694]],["t/492",[48,2.832,49,2.832]],["t/494",[9,3.221,26,3.387]],["t/496",[0,2.869,46,3.032]],["t/498",[50,3.917]],["t/500",[7,2.231,51,1.513,132,2.391,188,2.758,189,3.261,190,3.261,191,2.958,192,2.958]],["t/502",[55,2.271,96,3.206,139,2.72,191,4.379]],["t/504",[7,2.949,22,2.428,28,2.297,57,2.297,139,2.428]],["t/506",[23,2.286,34,2.694]],["t/510",[48,2.832,49,2.832]],["t/512",[9,3.221,26,3.387]],["t/514",[0,2.869,46,3.032]],["t/516",[50,3.917]],["t/518",[3,2.075,19,1.459,46,1.857,51,1.806,193,3.893,194,2.972]],["t/520",[22,2.428,55,2.027,92,3.291,106,3.291,194,3.291]],["t/522",[21,2.152,23,1.4,57,2.075,106,2.972,194,2.972,195,3.893]],["t/524",[9,1.973,21,2.152,28,2.075,100,2.972,101,3.531,145,2.514]],["t/526",[23,2.286,34,2.694]],["t/530",[48,2.832,49,2.832]],["t/532",[9,3.221,26,3.387]],["t/534",[0,2.869,46,3.032]],["t/536",[50,3.917]],["t/538",[3,2.573,19,1.809,51,2.24,127,3.862]],["t/540",[14,1.403,21,1.962,22,2,25,1.744,55,1.669,96,2.356,196,3.549]],["t/542",[14,1.704,21,2.382,25,2.118,57,2.297,96,2.862]],["t/544",[9,2.447,22,2.72,105,4.083,145,3.118]],["t/546",[9,2.782,103,4.641,154,4.39]],["t/548",[23,2.286,34,2.694]],["t/552",[48,2.832,49,2.832]],["t/554",[9,3.221,26,3.387]],["t/556",[0,2.869,46,3.032]],["t/558",[28,4.023]],["t/559",[]],["t/561",[78,4.338]],["t/563",[78,3.653,197,5.084]],["t/565",[198,7.548]],["t/566",[]],["t/568",[78,4.338]],["t/570",[78,3.653,197,5.084]],["t/572",[136,6.846]],["t/573",[]],["t/575",[78,4.338]],["t/577",[78,3.653,197,5.084]],["t/579",[88,6.846]],["t/580",[]],["t/582",[78,4.338]],["t/584",[78,3.653,197,5.084]],["t/586",[122,5.164]],["t/588",[23,2.286,34,2.694]],["t/592",[48,2.832,49,2.832]],["t/594",[9,3.221,26,3.387]],["t/596",[0,2.869,46,3.032]],["t/598",[14,2.513,26,3.387]],["t/600",[14,1.909,26,2.573,199,4.379,200,4.379]],["t/602",[192,5.764,201,6.355]],["t/604",[14,1.909,26,2.573,112,4.379,199,4.379]],["t/606",[14,1.909,26,2.573,114,4.379,200,4.379]],["t/608",[23,2.286,34,2.694]],["t/612",[48,2.832,49,2.832]],["t/614",[19,2.056,22,3.091,95,3.754]],["t/616",[0,2.869,46,3.032]],["t/618",[50,3.917]],["t/619",[23,1.55,51,1.999,98,3.16,146,2.949,172,3.16]],["t/621",[14,1.704,25,2.118,55,2.027,92,3.291,172,3.16]],["t/623",[28,2.297,57,2.297,139,2.428,172,3.16,180,3.291]],["t/625",[14,1.909,21,3.813,202,4.828]],["t/627",[3,1.892,14,1.403,19,1.33,21,3.032,51,1.646,146,2.428]],["t/629",[14,1.909,25,2.373,55,2.271,96,3.206]],["t/631",[9,1.653,14,1.29,26,1.738,28,1.738,57,1.738,175,2.758,187,2.958,203,2.758]],["t/633",[73,4.083,145,3.118,204,4.828,205,4.828]],["t/635",[23,2.286,34,2.694]],["t/639",[48,2.832,49,2.832]],["t/641",[50,3.917]],["t/643",[19,1.615,51,1.999,146,2.949,206,4.311,207,4.311]],["t/645",[14,1.704,25,2.118,55,2.027,93,3.448,146,2.949]],["t/647",[14,1.704,25,2.118,57,2.297,147,3.646,208,4.311]],["t/649",[14,1.704,19,1.615,108,3.448,145,2.783,209,4.311]],["t/651",[23,2.286,34,2.694]],["t/655",[48,2.832,49,2.832]],["t/657",[0,2.869,46,3.032]],["t/659",[210,5.336]],["t/661",[211,5.336]],["t/663",[50,3.917]],["t/665",[14,1.704,31,3.291,66,3.646,188,3.646,203,3.646]],["t/667",[178,4.083,212,4.083,213,4.083,214,4.379]],["t/669",[23,1.4,25,1.913,28,2.075,31,2.972,78,2.238,213,3.293]],["t/671",[122,5.164]],["t/673",[23,2.286,34,2.694]],["t/677",[48,2.832,49,2.832]],["t/679",[0,2.869,46,3.032]],["t/681",[19,2.828]],["t/683",[211,5.336]],["t/685",[150,4.493,210,4.493]],["t/687",[3,2.925,19,2.056,215,4.641]],["t/689",[19,1.615,51,1.999,91,3.646,138,3.646,215,3.646]],["t/691",[14,1.909,25,2.373,55,2.271,216,4.828]],["t/693",[3,1.892,19,1.33,57,1.892,109,2.839,141,2.509,217,3.549,218,3.549]],["t/695",[19,1.809,95,3.303,145,3.118,215,4.083]],["t/697",[14,1.704,22,2.428,26,2.297,154,3.448,161,3.91]],["t/699",[122,5.164]],["t/701",[219,6.846]],["t/705",[48,2.832,49,2.832]],["t/707",[0,2.869,46,3.032]],["t/709",[19,2.828]],["t/711",[211,5.336]],["t/713",[150,4.493,210,4.493]],["t/715",[19,1.809,140,4.083,220,4.379,221,4.379]],["t/717",[51,2.545,100,4.189,139,3.091]],["t/719",[3,1.892,19,1.33,23,1.277,27,3.002,55,1.669,141,2.509,220,3.219]],["t/721",[3,2.075,19,1.459,57,2.075,141,2.752,221,3.531,222,3.893]],["t/723",[122,5.164]],["t/725",[219,6.846]],["t/729",[48,2.832,49,2.832]],["t/731",[0,2.869,46,3.032]],["t/733",[210,5.336]],["t/735",[211,5.336]],["t/737",[50,3.917]],["t/739",[14,1.704,31,3.291,66,3.646,188,3.646,203,3.646]],["t/741",[212,3.646,214,3.91,223,4.311,224,4.311,225,4.311]],["t/743",[23,1.4,25,1.913,28,2.075,31,2.972,78,2.238,213,3.293]],["t/745",[122,5.164]],["t/747",[3,2.075,50,1.831,60,3.531,212,3.293,226,3.893,227,3.893]],["t/749",[23,2.286,34,2.694]],["t/753",[48,2.832,49,2.832]],["t/755",[0,2.869,46,3.032]],["t/757",[19,2.828]],["t/759",[211,5.336]],["t/761",[150,4.493,210,4.493]],["t/763",[19,2.056,228,5.488,229,5.488]],["t/764",[3,1.892,14,1.403,19,1.33,25,1.744,51,1.646,115,3.002,138,3.002]],["t/766",[14,1.909,25,2.373,55,2.271,230,4.828]],["t/768",[3,2.573,19,1.809,57,2.573,141,3.413]],["t/770",[122,5.164]],["t/774",[48,2.832,49,2.832]],["t/776",[0,2.869,46,3.032]],["t/778",[19,2.828]],["t/780",[211,5.336]],["t/782",[150,4.493,210,4.493]],["t/784",[19,2.056,139,3.091,231,5.488]],["t/785",[51,2.24,100,3.686,139,2.72,232,3.862]],["t/787",[55,2.271,139,2.72,194,3.686,232,3.862]],["t/789",[57,2.297,139,2.428,173,3.91,194,3.291,232,3.448]],["t/791",[8,3.646,106,3.291,139,2.428,145,2.783,232,3.448]],["t/793",[122,5.164]],["t/797",[48,2.832,49,2.832]],["t/799",[0,2.869,46,3.032]],["t/801",[19,2.828]],["t/803",[211,5.336]],["t/805",[150,4.493,210,4.493]],["t/807",[19,1.809,139,2.72,233,4.828,234,4.828]],["t/808",[51,2.545,100,4.189,139,3.091]],["t/810",[55,2.581,139,3.091,178,4.641]],["t/812",[57,2.573,139,2.72,180,3.686,235,4.828]],["t/814",[79,3.91,145,2.783,180,3.291,236,4.311,237,4.311]],["t/816",[23,2.286,34,2.694]]],"invertedIndex":[["",{"_index":140,"t":{"362":{"position":[[9,1]]},"418":{"position":[[18,1]]},"715":{"position":[[20,1]]}}}],["01",{"_index":51,"t":{"93":{"position":[[0,3]]},"111":{"position":[[0,3]]},"123":{"position":[[0,3]]},"189":{"position":[[0,3]]},"210":{"position":[[0,3]]},"229":{"position":[[0,3]]},"244":{"position":[[0,3]]},"256":{"position":[[0,3]]},"287":{"position":[[0,3]]},"313":{"position":[[0,3]]},"335":{"position":[[0,3]]},"366":{"position":[[0,3]]},"384":{"position":[[0,3]]},"396":{"position":[[0,3]]},"446":{"position":[[0,3]]},"462":{"position":[[0,3]]},"484":{"position":[[0,3]]},"500":{"position":[[0,3]]},"518":{"position":[[0,3]]},"538":{"position":[[0,3]]},"619":{"position":[[0,3]]},"627":{"position":[[0,3]]},"643":{"position":[[0,3]]},"689":{"position":[[0,3]]},"717":{"position":[[0,3]]},"764":{"position":[[0,3]]},"785":{"position":[[0,3]]},"808":{"position":[[0,3]]}}}],["02",{"_index":55,"t":{"95":{"position":[[0,3]]},"113":{"position":[[0,3]]},"125":{"position":[[0,3]]},"191":{"position":[[0,3]]},"212":{"position":[[0,3]]},"231":{"position":[[0,3]]},"246":{"position":[[0,3]]},"258":{"position":[[0,3]]},"289":{"position":[[0,3]]},"315":{"position":[[0,3]]},"337":{"position":[[0,3]]},"386":{"position":[[0,3]]},"398":{"position":[[0,3]]},"448":{"position":[[0,3]]},"464":{"position":[[0,3]]},"486":{"position":[[0,3]]},"502":{"position":[[0,3]]},"520":{"position":[[0,3]]},"540":{"position":[[0,3]]},"621":{"position":[[0,3]]},"629":{"position":[[0,3]]},"645":{"position":[[0,3]]},"691":{"position":[[0,3]]},"719":{"position":[[0,3]]},"766":{"position":[[0,3]]},"787":{"position":[[0,3]]},"810":{"position":[[0,3]]}}}],["02.use",{"_index":142,"t":{"368":{"position":[[0,6]]}}}],["03",{"_index":57,"t":{"97":{"position":[[0,3]]},"193":{"position":[[0,3]]},"214":{"position":[[0,3]]},"260":{"position":[[0,3]]},"317":{"position":[[0,3]]},"370":{"position":[[0,3]]},"400":{"position":[[0,3]]},"466":{"position":[[0,3]]},"504":{"position":[[0,3]]},"522":{"position":[[0,3]]},"542":{"position":[[0,3]]},"623":{"position":[[0,3]]},"631":{"position":[[0,3]]},"647":{"position":[[0,3]]},"693":{"position":[[0,3]]},"721":{"position":[[0,3]]},"768":{"position":[[0,3]]},"789":{"position":[[0,3]]},"812":{"position":[[0,3]]}}}],["04",{"_index":145,"t":{"372":{"position":[[0,3]]},"402":{"position":[[0,3]]},"468":{"position":[[0,3]]},"524":{"position":[[0,3]]},"544":{"position":[[0,3]]},"633":{"position":[[0,3]]},"649":{"position":[[0,3]]},"695":{"position":[[0,3]]},"791":{"position":[[0,3]]},"814":{"position":[[0,3]]}}}],["05",{"_index":154,"t":{"404":{"position":[[0,3]]},"470":{"position":[[0,3]]},"546":{"position":[[0,3]]},"697":{"position":[[0,3]]}}}],["06",{"_index":156,"t":{"406":{"position":[[0,3]]}}}],["1",{"_index":112,"t":{"266":{"position":[[7,2]]},"604":{"position":[[0,2]]}}}],["2",{"_index":114,"t":{"268":{"position":[[7,2]]},"606":{"position":[[0,2]]}}}],["3",{"_index":119,"t":{"270":{"position":[[7,2]]}}}],["abac",{"_index":13,"t":{"9":{"position":[[77,7]]}}}],["access",{"_index":9,"t":{"9":{"position":[[20,6],[62,6]]},"11":{"position":[[27,6]]},"47":{"position":[[26,7]]},"214":{"position":[[36,6]]},"224":{"position":[[15,6]]},"231":{"position":[[44,6]]},"239":{"position":[[7,6]]},"280":{"position":[[7,6]]},"282":{"position":[[16,6]]},"313":{"position":[[50,9]]},"424":{"position":[[7,6]]},"456":{"position":[[7,6]]},"478":{"position":[[7,6]]},"494":{"position":[[7,6]]},"512":{"position":[[7,6]]},"524":{"position":[[36,6]]},"532":{"position":[[7,6]]},"544":{"position":[[20,6]]},"546":{"position":[[13,6]]},"554":{"position":[[7,6]]},"594":{"position":[[7,6]]},"631":{"position":[[20,6]]}}}],["ad",{"_index":96,"t":{"210":{"position":[[4,6]]},"212":{"position":[[4,6]]},"244":{"position":[[4,6]]},"287":{"position":[[4,6]]},"289":{"position":[[4,6]]},"502":{"position":[[4,6]]},"540":{"position":[[4,6]]},"542":{"position":[[4,6]]},"629":{"position":[[4,6]]}}}],["add",{"_index":92,"t":{"191":{"position":[[25,3]]},"366":{"position":[[38,3]]},"446":{"position":[[4,3]]},"520":{"position":[[4,3]]},"621":{"position":[[4,3]]}}}],["address",{"_index":225,"t":{"741":{"position":[[17,7]]}}}],["advanc",{"_index":202,"t":{"625":{"position":[[0,8]]}}}],["affect",{"_index":201,"t":{"602":{"position":[[7,7]]}}}],["allow",{"_index":175,"t":{"446":{"position":[[36,5]]},"462":{"position":[[38,5]]},"631":{"position":[[30,7]]}}}],["alway",{"_index":84,"t":{"177":{"position":[[0,6]]}}}],["anoth",{"_index":196,"t":{"540":{"position":[[45,7]]}}}],["api",{"_index":59,"t":{"97":{"position":[[32,3]]},"111":{"position":[[26,3]]},"113":{"position":[[18,3]]},"123":{"position":[[26,3]]},"125":{"position":[[25,3]]},"189":{"position":[[26,3]]},"191":{"position":[[18,3]]},"193":{"position":[[18,3]]},"256":{"position":[[26,3]]}}}],["assign",{"_index":195,"t":{"522":{"position":[[4,6]]}}}],["associ",{"_index":144,"t":{"370":{"position":[[31,9]]}}}],["attribut",{"_index":12,"t":{"9":{"position":[[46,9]]}}}],["authent",{"_index":1,"t":{"5":{"position":[[0,14]]},"95":{"position":[[4,12]]},"143":{"position":[[12,14]]},"169":{"position":[[9,14]]},"171":{"position":[[17,14]]}}}],["author",{"_index":3,"t":{"5":{"position":[[18,13]]},"7":{"position":[[21,13]]},"21":{"position":[[11,13]]},"177":{"position":[[15,13]]},"179":{"position":[[68,13]]},"366":{"position":[[15,13]]},"372":{"position":[[20,13]]},"394":{"position":[[23,13]]},"462":{"position":[[15,13]]},"518":{"position":[[43,13]]},"538":{"position":[[11,13]]},"627":{"position":[[11,13]]},"687":{"position":[[16,13]]},"693":{"position":[[17,13]]},"719":{"position":[[27,13]]},"721":{"position":[[17,13]]},"747":{"position":[[45,13]]},"764":{"position":[[25,13]]},"768":{"position":[[17,13]]}}}],["avoid",{"_index":89,"t":{"179":{"position":[[22,5]]}}}],["backward",{"_index":206,"t":{"643":{"position":[[13,9]]}}}],["bank",{"_index":227,"t":{"747":{"position":[[26,5]]}}}],["base",{"_index":8,"t":{"9":{"position":[[14,5],[56,5]]},"11":{"position":[[21,5]]},"791":{"position":[[4,4]]}}}],["befor",{"_index":48,"t":{"77":{"position":[[0,6]]},"89":{"position":[[0,6]]},"107":{"position":[[0,6]]},"119":{"position":[[0,6]]},"185":{"position":[[0,6]]},"203":{"position":[[0,6]]},"220":{"position":[[0,6]]},"237":{"position":[[0,6]]},"252":{"position":[[0,6]]},"278":{"position":[[0,6]]},"305":{"position":[[0,6]]},"327":{"position":[[0,6]]},"354":{"position":[[0,6]]},"378":{"position":[[0,6]]},"436":{"position":[[0,6]]},"454":{"position":[[0,6]]},"476":{"position":[[0,6]]},"492":{"position":[[0,6]]},"510":{"position":[[0,6]]},"530":{"position":[[0,6]]},"552":{"position":[[0,6]]},"592":{"position":[[0,6]]},"612":{"position":[[0,6]]},"639":{"position":[[0,6]]},"655":{"position":[[0,6]]},"677":{"position":[[0,6]]},"705":{"position":[[0,6]]},"729":{"position":[[0,6]]},"753":{"position":[[0,6]]},"774":{"position":[[0,6]]},"797":{"position":[[0,6]]}}}],["behavior",{"_index":168,"t":{"426":{"position":[[17,8]]}}}],["best",{"_index":121,"t":{"272":{"position":[[13,4]]}}}],["between",{"_index":179,"t":{"462":{"position":[[66,7]]}}}],["block",{"_index":128,"t":{"313":{"position":[[37,7]]},"315":{"position":[[38,7]]}}}],["bob",{"_index":184,"t":{"466":{"position":[[53,3]]},"470":{"position":[[20,3]]}}}],["book",{"_index":191,"t":{"500":{"position":[[46,7]]},"502":{"position":[[27,8]]}}}],["bound",{"_index":32,"t":{"47":{"position":[[13,5]]}}}],["build",{"_index":115,"t":{"268":{"position":[[10,5]]},"270":{"position":[[10,5]]},"764":{"position":[[4,8]]}}}],["call",{"_index":62,"t":{"113":{"position":[[4,7]]},"125":{"position":[[4,7]]},"191":{"position":[[4,7]]},"193":{"position":[[4,7]]}}}],["can_delet",{"_index":174,"t":{"446":{"position":[[8,10]]}}}],["cascad",{"_index":182,"t":{"464":{"position":[[74,9]]}}}],["case",{"_index":125,"t":{"299":{"position":[[4,5]]}}}],["caveat",{"_index":197,"t":{"563":{"position":[[0,7]]},"570":{"position":[[0,7]]},"577":{"position":[[0,7]]},"584":{"position":[[0,7]]}}}],["chang",{"_index":109,"t":{"258":{"position":[[8,7]]},"260":{"position":[[8,7]]},"268":{"position":[[35,7]]},"693":{"position":[[58,7]]}}}],["channel",{"_index":221,"t":{"715":{"position":[[22,8]]},"721":{"position":[[48,8]]}}}],["check",{"_index":28,"t":{"41":{"position":[[10,5]]},"97":{"position":[[26,5]]},"113":{"position":[[12,5]]},"149":{"position":[[7,5]]},"214":{"position":[[4,8]]},"266":{"position":[[23,5]]},"268":{"position":[[66,5]]},"337":{"position":[[4,5]]},"344":{"position":[[7,5]]},"386":{"position":[[4,5]]},"470":{"position":[[4,5]]},"486":{"position":[[4,5]]},"504":{"position":[[4,8]]},"524":{"position":[[4,8]]},"558":{"position":[[0,5]]},"623":{"position":[[4,5]]},"631":{"position":[[4,5]]},"669":{"position":[[42,6]]},"743":{"position":[[42,6]]}}}],["child",{"_index":173,"t":{"438":{"position":[[16,5]]},"789":{"position":[[20,5]]}}}],["choos",{"_index":120,"t":{"272":{"position":[[0,8]]}}}],["client",{"_index":61,"t":{"111":{"position":[[30,6]]},"123":{"position":[[30,6]]},"189":{"position":[[30,6]]},"256":{"position":[[30,6]]}}}],["compani",{"_index":97,"t":{"210":{"position":[[11,7]]},"212":{"position":[[27,7]]}}}],["compat",{"_index":207,"t":{"643":{"position":[[23,10]]}}}],["concept",{"_index":46,"t":{"67":{"position":[[20,8]]},"207":{"position":[[8,8]]},"226":{"position":[[8,8]]},"241":{"position":[[8,8]]},"284":{"position":[[8,8]]},"309":{"position":[[8,8]]},"331":{"position":[[8,8]]},"362":{"position":[[0,8]]},"380":{"position":[[8,8]]},"442":{"position":[[8,8]]},"458":{"position":[[8,8]]},"480":{"position":[[8,8]]},"496":{"position":[[8,8]]},"514":{"position":[[8,8]]},"518":{"position":[[18,7]]},"534":{"position":[[8,8]]},"556":{"position":[[8,8]]},"596":{"position":[[8,8]]},"616":{"position":[[8,8]]},"657":{"position":[[8,8]]},"679":{"position":[[8,8]]},"707":{"position":[[8,8]]},"731":{"position":[[8,8]]},"755":{"position":[[8,8]]},"776":{"position":[[8,8]]},"799":{"position":[[8,8]]}}}],["configur",{"_index":35,"t":{"53":{"position":[[14,13]]},"111":{"position":[[4,9]]},"123":{"position":[[4,9]]},"139":{"position":[[0,11]]},"141":{"position":[[0,11]]},"143":{"position":[[0,11]]},"189":{"position":[[4,9]]},"256":{"position":[[4,9]]},"362":{"position":[[11,13]]}}}],["consider",{"_index":214,"t":{"667":{"position":[[31,13]]},"741":{"position":[[30,13]]}}}],["content",{"_index":47,"t":{"73":{"position":[[0,7]]},"199":{"position":[[0,7]]},"295":{"position":[[0,7]]},"323":{"position":[[0,7]]},"412":{"position":[[0,7]]}}}],["context",{"_index":213,"t":{"667":{"position":[[18,7]]},"669":{"position":[[26,7]]},"743":{"position":[[26,7]]}}}],["contextu",{"_index":31,"t":{"45":{"position":[[9,10]]},"665":{"position":[[33,10]]},"669":{"position":[[4,10]]},"739":{"position":[[33,10]]},"743":{"position":[[4,10]]}}}],["control",{"_index":10,"t":{"9":{"position":[[27,7],[69,7]]},"11":{"position":[[34,7]]}}}],["creat",{"_index":146,"t":{"384":{"position":[[4,6]]},"466":{"position":[[4,6]]},"468":{"position":[[4,6]]},"484":{"position":[[4,6]]},"619":{"position":[[4,6]]},"627":{"position":[[4,6]]},"643":{"position":[[4,6]]},"645":{"position":[[4,6]]}}}],["data",{"_index":66,"t":{"141":{"position":[[12,4]]},"665":{"position":[[44,4]]},"739":{"position":[[44,4]]}}}],["databas",{"_index":63,"t":{"131":{"position":[[0,8]]}}}],["defin",{"_index":150,"t":{"394":{"position":[[14,8]]},"402":{"position":[[4,6]]},"685":{"position":[[0,7]]},"713":{"position":[[0,7]]},"761":{"position":[[0,7]]},"782":{"position":[[0,7]]},"805":{"position":[[0,7]]}}}],["definit",{"_index":18,"t":{"19":{"position":[[15,11]]},"31":{"position":[[19,11]]},"464":{"position":[[52,10]]}}}],["delet",{"_index":94,"t":{"193":{"position":[[25,6]]}}}],["deprec",{"_index":170,"t":{"430":{"position":[[0,11]]}}}],["devic",{"_index":215,"t":{"687":{"position":[[9,6]]},"689":{"position":[[36,6]]},"695":{"position":[[13,6]]}}}],["direct",{"_index":26,"t":{"39":{"position":[[9,6]]},"55":{"position":[[4,6]]},"239":{"position":[[0,6]]},"244":{"position":[[11,6]]},"246":{"position":[[13,6]]},"280":{"position":[[0,6]]},"456":{"position":[[0,6]]},"478":{"position":[[0,6]]},"494":{"position":[[0,6]]},"512":{"position":[[0,6]]},"532":{"position":[[0,6]]},"554":{"position":[[0,6]]},"594":{"position":[[0,6]]},"598":{"position":[[9,6]]},"600":{"position":[[18,6]]},"604":{"position":[[8,6]]},"606":{"position":[[8,6]]},"631":{"position":[[46,6]]},"697":{"position":[[13,6]]}}}],["directli",{"_index":24,"t":{"33":{"position":[[10,8]]}}}],["disabl",{"_index":200,"t":{"600":{"position":[[10,7]]},"606":{"position":[[29,8]]}}}],["disallow",{"_index":161,"t":{"420":{"position":[[0,11]]},"697":{"position":[[4,8]]}}}],["disassoci",{"_index":204,"t":{"633":{"position":[[4,14]]}}}],["document",{"_index":98,"t":{"210":{"position":[[26,8]]},"313":{"position":[[62,8]]},"315":{"position":[[69,8]]},"462":{"position":[[85,8]]},"464":{"position":[[38,8]]},"619":{"position":[[31,8]]}}}],["document:meeting_notes.doc",{"_index":186,"t":{"468":{"position":[[81,26]]},"470":{"position":[[40,26]]}}}],["drive'",{"_index":234,"t":{"807":{"position":[[16,7]]}}}],["edit",{"_index":129,"t":{"315":{"position":[[60,4]]}}}],["editor",{"_index":133,"t":{"335":{"position":[[30,6]]},"337":{"position":[[15,7]]},"464":{"position":[[15,6]]},"466":{"position":[[63,6]]},"470":{"position":[[30,6]]}}}],["employe",{"_index":99,"t":{"212":{"position":[[11,8]]}}}],["enabl",{"_index":199,"t":{"600":{"position":[[0,6]]},"604":{"position":[[29,7]]}}}],["endpoint",{"_index":118,"t":{"268":{"position":[[43,9]]}}}],["enforc",{"_index":165,"t":{"422":{"position":[[0,9]]}}}],["entitl",{"_index":228,"t":{"763":{"position":[[9,12]]}}}],["equival",{"_index":45,"t":{"67":{"position":[[0,10]]}}}],["evalu",{"_index":167,"t":{"426":{"position":[[6,10]]}}}],["exclus",{"_index":44,"t":{"65":{"position":[[4,9]]},"179":{"position":[[51,9]]}}}],["exercis",{"_index":219,"t":{"701":{"position":[[0,9]]},"725":{"position":[[0,9]]}}}],["exist",{"_index":147,"t":{"386":{"position":[[32,6]]},"486":{"position":[[32,6]]},"647":{"position":[[16,8]]}}}],["expand",{"_index":136,"t":{"346":{"position":[[7,6]]},"572":{"position":[[0,6]]}}}],["experiment",{"_index":72,"t":{"151":{"position":[[0,12]]}}}],["facilit",{"_index":217,"t":{"693":{"position":[[40,10]]}}}],["featur",{"_index":73,"t":{"151":{"position":[[13,8]]},"396":{"position":[[28,7]]},"633":{"position":[[29,7]]}}}],["fga",{"_index":6,"t":{"7":{"position":[[35,6]]}}}],["file",{"_index":236,"t":{"814":{"position":[[12,5]]}}}],["fine",{"_index":4,"t":{"7":{"position":[[8,4]]}}}],["folder",{"_index":180,"t":{"462":{"position":[[74,6]]},"464":{"position":[[89,6]]},"623":{"position":[[22,7]]},"812":{"position":[[4,6]]},"814":{"position":[[22,7]]}}}],["folder:not",{"_index":185,"t":{"466":{"position":[[73,12]]},"468":{"position":[[53,12]]}}}],["framework",{"_index":54,"t":{"93":{"position":[[22,9]]}}}],["further",{"_index":226,"t":{"747":{"position":[[17,8]]}}}],["futur",{"_index":218,"t":{"693":{"position":[[51,6]]}}}],["github",{"_index":229,"t":{"763":{"position":[[26,6]]}}}],["github'",{"_index":231,"t":{"784":{"position":[[9,8]]}}}],["googl",{"_index":233,"t":{"807":{"position":[[9,6]]}}}],["grain",{"_index":5,"t":{"7":{"position":[[13,7]]}}}],["group",{"_index":95,"t":{"205":{"position":[[14,6]]},"222":{"position":[[14,6]]},"224":{"position":[[9,5]]},"229":{"position":[[13,5]]},"307":{"position":[[14,6]]},"329":{"position":[[14,6]]},"614":{"position":[[14,6]]},"695":{"position":[[20,6]]}}}],["have",{"_index":90,"t":{"179":{"position":[[28,6]]}}}],["health",{"_index":71,"t":{"149":{"position":[[0,6]]}}}],["id",{"_index":56,"t":{"95":{"position":[[30,2]]},"177":{"position":[[35,2]]},"270":{"position":[[26,4]]}}}],["identifi",{"_index":82,"t":{"175":{"position":[[22,12]]}}}],["impli",{"_index":27,"t":{"39":{"position":[[20,7]]},"335":{"position":[[24,5]]},"719":{"position":[[52,7]]}}}],["import",{"_index":152,"t":{"396":{"position":[[18,9]]}}}],["improv",{"_index":169,"t":{"428":{"position":[[0,8]]}}}],["includ",{"_index":222,"t":{"721":{"position":[[40,7]]}}}],["index",{"_index":117,"t":{"268":{"position":[[24,5]]}}}],["indic",{"_index":183,"t":{"466":{"position":[[39,8]]},"468":{"position":[[39,8]]}}}],["individu",{"_index":100,"t":{"214":{"position":[[16,10]]},"524":{"position":[[16,10]]},"717":{"position":[[4,10]]},"785":{"position":[[20,11]]},"808":{"position":[[4,10]]}}}],["inform",{"_index":83,"t":{"175":{"position":[[35,11]]}}}],["initi",{"_index":138,"t":{"356":{"position":[[0,7]]},"689":{"position":[[16,7]]},"764":{"position":[[17,7]]}}}],["insert",{"_index":216,"t":{"691":{"position":[[4,9]]}}}],["instal",{"_index":52,"t":{"93":{"position":[[4,7]]}}}],["integr",{"_index":58,"t":{"97":{"position":[[4,9]]}}}],["intern",{"_index":137,"t":{"348":{"position":[[0,9]]}}}],["intersect",{"_index":43,"t":{"63":{"position":[[4,12]]},"179":{"position":[[35,12]]}}}],["introduc",{"_index":193,"t":{"518":{"position":[[4,9]]}}}],["introduct",{"_index":148,"t":{"392":{"position":[[0,12]]}}}],["ip",{"_index":224,"t":{"741":{"position":[[14,2]]}}}],["iter",{"_index":157,"t":{"406":{"position":[[4,7]]}}}],["key",{"_index":80,"t":{"171":{"position":[[13,3]]}}}],["languag",{"_index":36,"t":{"53":{"position":[[28,8]]},"362":{"position":[[25,8]]}}}],["list",{"_index":30,"t":{"43":{"position":[[10,4]]},"125":{"position":[[12,4]]},"270":{"position":[[18,4]]},"398":{"position":[[4,4]]},"400":{"position":[[4,4]]}}}],["listobject",{"_index":88,"t":{"179":{"position":[[9,12]]},"579":{"position":[[0,11]]}}}],["liter",{"_index":163,"t":{"420":{"position":[[19,8]]}}}],["local",{"_index":116,"t":{"268":{"position":[[18,5]]}}}],["log",{"_index":77,"t":{"159":{"position":[[0,7]]}}}],["longer",{"_index":107,"t":{"231":{"position":[[33,6]]},"315":{"position":[[53,6]]}}}],["look",{"_index":37,"t":{"53":{"position":[[37,4]]}}}],["manag",{"_index":102,"t":{"224":{"position":[[0,8]]}}}],["member",{"_index":106,"t":{"231":{"position":[[23,6]]},"446":{"position":[[59,7]]},"520":{"position":[[17,7]]},"522":{"position":[[20,7]]},"791":{"position":[[29,7]]}}}],["member'",{"_index":101,"t":{"214":{"position":[[27,8]]},"524":{"position":[[27,8]]}}}],["membership",{"_index":104,"t":{"229":{"position":[[19,10]]}}}],["metric",{"_index":75,"t":{"155":{"position":[[0,7]]}}}],["migrat",{"_index":208,"t":{"647":{"position":[[4,7]]}}}],["model",{"_index":19,"t":{"21":{"position":[[25,6]]},"177":{"position":[[29,5]]},"179":{"position":[[82,5]]},"205":{"position":[[0,8]]},"222":{"position":[[0,8]]},"282":{"position":[[0,8]]},"307":{"position":[[0,8]]},"313":{"position":[[15,5]]},"315":{"position":[[15,5]]},"329":{"position":[[0,8]]},"335":{"position":[[15,5]]},"356":{"position":[[8,5]]},"358":{"position":[[0,8]]},"360":{"position":[[0,8]]},"366":{"position":[[29,5]]},"372":{"position":[[34,5]]},"392":{"position":[[16,8]]},"394":{"position":[[37,6]]},"404":{"position":[[13,5]]},"416":{"position":[[8,5]]},"438":{"position":[[0,8]]},"440":{"position":[[0,8]]},"462":{"position":[[29,5]]},"518":{"position":[[57,5]]},"538":{"position":[[25,5]]},"614":{"position":[[0,8]]},"627":{"position":[[25,5]]},"643":{"position":[[34,5]]},"649":{"position":[[42,5]]},"681":{"position":[[17,8]]},"687":{"position":[[0,8]]},"689":{"position":[[24,5]]},"693":{"position":[[31,5]]},"695":{"position":[[4,8]]},"709":{"position":[[17,8]]},"715":{"position":[[0,8]]},"719":{"position":[[41,5]]},"721":{"position":[[31,5]]},"757":{"position":[[17,8]]},"763":{"position":[[0,8]]},"764":{"position":[[39,5]]},"768":{"position":[[31,5]]},"778":{"position":[[17,8]]},"784":{"position":[[0,8]]},"801":{"position":[[17,8]]},"807":{"position":[[0,8]]}}}],["modifi",{"_index":127,"t":{"313":{"position":[[4,6]]},"315":{"position":[[4,6]]},"335":{"position":[[4,6]]},"538":{"position":[[4,6]]}}}],["multipl",{"_index":124,"t":{"289":{"position":[[11,8]]}}}],["new",{"_index":93,"t":{"191":{"position":[[29,3]]},"466":{"position":[[13,3]]},"468":{"position":[[13,3]]},"645":{"position":[[13,3]]}}}],["object",{"_index":21,"t":{"25":{"position":[[11,7]]},"43":{"position":[[15,7]]},"57":{"position":[[40,6]]},"59":{"position":[[33,7]]},"125":{"position":[[17,7]]},"214":{"position":[[49,6]]},"258":{"position":[[24,6]]},"260":{"position":[[31,6]]},"360":{"position":[[9,6],[19,6]]},"398":{"position":[[13,6]]},"438":{"position":[[22,7]]},"522":{"position":[[45,6]]},"524":{"position":[[49,6]]},"540":{"position":[[53,6]]},"542":{"position":[[44,6]]},"625":{"position":[[9,6],[19,6]]},"627":{"position":[[36,6],[46,6]]}}}],["obsolet",{"_index":209,"t":{"649":{"position":[[11,8]]}}}],["openfga",{"_index":0,"t":{"3":{"position":[[8,8]]},"97":{"position":[[18,7]]},"111":{"position":[[18,7]]},"123":{"position":[[18,7]]},"189":{"position":[[18,7]]},"207":{"position":[[0,7]]},"226":{"position":[[0,7]]},"241":{"position":[[0,7]]},"256":{"position":[[18,7]]},"284":{"position":[[0,7]]},"309":{"position":[[0,7]]},"331":{"position":[[0,7]]},"380":{"position":[[0,7]]},"416":{"position":[[0,7]]},"442":{"position":[[0,7]]},"458":{"position":[[0,7]]},"480":{"position":[[0,7]]},"496":{"position":[[0,7]]},"514":{"position":[[0,7]]},"534":{"position":[[0,7]]},"556":{"position":[[0,7]]},"596":{"position":[[0,7]]},"616":{"position":[[0,7]]},"657":{"position":[[0,7]]},"679":{"position":[[0,7]]},"707":{"position":[[0,7]]},"731":{"position":[[0,7]]},"755":{"position":[[0,7]]},"776":{"position":[[0,7]]},"799":{"position":[[0,7]]}}}],["oper",{"_index":42,"t":{"61":{"position":[[10,8]]},"63":{"position":[[17,8]]},"65":{"position":[[14,8]]}}}],["option",{"_index":111,"t":{"264":{"position":[[9,7]]},"266":{"position":[[0,6]]},"268":{"position":[[0,6]]},"270":{"position":[[0,6]]},"272":{"position":[[18,6]]}}}],["org",{"_index":232,"t":{"785":{"position":[[38,3]]},"787":{"position":[[32,3]]},"789":{"position":[[38,3]]},"791":{"position":[[25,3]]}}}],["organ",{"_index":178,"t":{"446":{"position":[[84,12]]},"667":{"position":[[5,12]]},"810":{"position":[[4,12]]}}}],["ownership",{"_index":177,"t":{"446":{"position":[[74,9]]}}}],["parent",{"_index":172,"t":{"438":{"position":[[9,6]]},"462":{"position":[[46,6]]},"468":{"position":[[71,6]]},"619":{"position":[[11,6]]},"621":{"position":[[8,6]]},"623":{"position":[[15,6]]}}}],["pattern",{"_index":126,"t":{"301":{"position":[[0,8]]}}}],["permiss",{"_index":139,"t":{"358":{"position":[[19,11]]},"370":{"position":[[41,11]]},"440":{"position":[[19,11]]},"502":{"position":[[11,11]]},"504":{"position":[[34,11]]},"623":{"position":[[35,11]]},"717":{"position":[[15,11]]},"784":{"position":[[18,11]]},"785":{"position":[[4,11]]},"787":{"position":[[4,11]]},"789":{"position":[[4,11]]},"791":{"position":[[9,11]]},"807":{"position":[[24,11]]},"808":{"position":[[15,11]]},"810":{"position":[[17,11]]},"812":{"position":[[11,10]]}}}],["person",{"_index":81,"t":{"175":{"position":[[13,8]]}}}],["pick",{"_index":151,"t":{"396":{"position":[[4,4]]}}}],["plan",{"_index":205,"t":{"633":{"position":[[19,4]]}}}],["playground",{"_index":68,"t":{"145":{"position":[[0,10]]}}}],["popul",{"_index":230,"t":{"766":{"position":[[4,10]]}}}],["possibl",{"_index":87,"t":{"177":{"position":[[47,8]]},"264":{"position":[[0,8]]}}}],["pprof",{"_index":70,"t":{"147":{"position":[[9,7]]}}}],["process",{"_index":149,"t":{"394":{"position":[[2,7]]}}}],["profil",{"_index":69,"t":{"147":{"position":[[0,8]]}}}],["propag",{"_index":235,"t":{"812":{"position":[[22,11]]}}}],["public",{"_index":33,"t":{"47":{"position":[[19,6]]},"282":{"position":[[9,6]]},"424":{"position":[[0,6]]}}}],["publicli",{"_index":237,"t":{"814":{"position":[[30,8]]}}}],["queri",{"_index":166,"t":{"426":{"position":[[0,5]]}}}],["rbac",{"_index":11,"t":{"9":{"position":[[35,6]]}}}],["read",{"_index":198,"t":{"565":{"position":[[0,4]]}}}],["rebac",{"_index":15,"t":{"11":{"position":[[42,8]]}}}],["recommend",{"_index":64,"t":{"131":{"position":[[9,15]]}}}],["referenc",{"_index":39,"t":{"57":{"position":[[0,11]]},"59":{"position":[[0,11]]}}}],["relat",{"_index":23,"t":{"29":{"position":[[10,9]]},"31":{"position":[[10,8]]},"33":{"position":[[19,7]]},"49":{"position":[[0,7]]},"57":{"position":[[18,9]]},"59":{"position":[[12,9],[25,7]]},"69":{"position":[[0,7]]},"81":{"position":[[0,7]]},"99":{"position":[[0,7]]},"103":{"position":[[0,7]]},"115":{"position":[[0,7]]},"127":{"position":[[0,7]]},"133":{"position":[[0,7]]},"161":{"position":[[0,7]]},"181":{"position":[[0,7]]},"195":{"position":[[0,7]]},"216":{"position":[[0,7]]},"233":{"position":[[0,7]]},"248":{"position":[[0,7]]},"289":{"position":[[20,7]]},"291":{"position":[[0,7]]},"319":{"position":[[0,7]]},"339":{"position":[[0,7]]},"350":{"position":[[0,7]]},"374":{"position":[[0,7]]},"388":{"position":[[0,7]]},"400":{"position":[[9,9]]},"402":{"position":[[11,9]]},"408":{"position":[[0,7]]},"432":{"position":[[0,7]]},"446":{"position":[[19,8]]},"450":{"position":[[0,7]]},"464":{"position":[[22,8]]},"472":{"position":[[0,7]]},"488":{"position":[[0,7]]},"506":{"position":[[0,7]]},"522":{"position":[[30,8]]},"526":{"position":[[0,7]]},"548":{"position":[[0,7]]},"588":{"position":[[0,7]]},"608":{"position":[[0,7]]},"619":{"position":[[18,9]]},"635":{"position":[[0,7]]},"651":{"position":[[0,7]]},"669":{"position":[[34,7]]},"673":{"position":[[0,7]]},"719":{"position":[[60,9]]},"743":{"position":[[34,7]]},"749":{"position":[[0,7]]},"816":{"position":[[0,7]]}}}],["relationship",{"_index":14,"t":{"11":{"position":[[8,12]]},"35":{"position":[[10,12]]},"37":{"position":[[10,13]]},"39":{"position":[[28,14]]},"55":{"position":[[11,12]]},"191":{"position":[[33,12]]},"193":{"position":[[32,12]]},"244":{"position":[[18,12]]},"246":{"position":[[20,12]]},"287":{"position":[[24,12]]},"289":{"position":[[28,12]]},"360":{"position":[[26,13]]},"368":{"position":[[7,12]]},"370":{"position":[[8,12]]},"384":{"position":[[13,12]]},"386":{"position":[[19,12]]},"462":{"position":[[53,12]]},"466":{"position":[[17,12]]},"468":{"position":[[17,12]]},"484":{"position":[[13,12]]},"486":{"position":[[19,12]]},"540":{"position":[[11,12]]},"542":{"position":[[11,12]]},"598":{"position":[[16,14]]},"600":{"position":[[25,13]]},"604":{"position":[[15,13]]},"606":{"position":[[15,13]]},"621":{"position":[[15,12]]},"625":{"position":[[26,13]]},"627":{"position":[[53,13]]},"629":{"position":[[11,12]]},"631":{"position":[[53,12]]},"645":{"position":[[17,12]]},"647":{"position":[[25,12]]},"649":{"position":[[20,12]]},"665":{"position":[[11,13]]},"691":{"position":[[19,12]]},"697":{"position":[[20,13]]},"739":{"position":[[11,13]]},"764":{"position":[[49,12]]},"766":{"position":[[19,12]]}}}],["remov",{"_index":108,"t":{"246":{"position":[[4,8]]},"287":{"position":[[15,8]]},"418":{"position":[[20,8]]},"649":{"position":[[4,6]]}}}],["request",{"_index":29,"t":{"41":{"position":[[16,8]]},"43":{"position":[[23,8]]},"344":{"position":[[13,8]]},"346":{"position":[[14,8]]}}}],["requir",{"_index":211,"t":{"661":{"position":[[0,12]]},"683":{"position":[[0,12]]},"711":{"position":[[0,12]]},"735":{"position":[[0,12]]},"759":{"position":[[0,12]]},"780":{"position":[[0,12]]},"803":{"position":[[0,12]]}}}],["restrict",{"_index":38,"t":{"55":{"position":[[29,12]]},"418":{"position":[[5,12]]},"422":{"position":[[15,12]]},"426":{"position":[[36,12]]}}}],["revok",{"_index":103,"t":{"229":{"position":[[4,8]]},"231":{"position":[[15,7]]},"546":{"position":[[4,8]]}}}],["role",{"_index":7,"t":{"9":{"position":[[9,4]]},"358":{"position":[[9,5]]},"366":{"position":[[44,4]]},"368":{"position":[[51,5]]},"370":{"position":[[62,5]]},"440":{"position":[[9,5]]},"500":{"position":[[19,5]]},"504":{"position":[[18,5]]}}}],["same",{"_index":40,"t":{"57":{"position":[[35,4]]},"287":{"position":[[51,4]]},"289":{"position":[[55,4]]}}}],["scenario",{"_index":210,"t":{"659":{"position":[[0,8]]},"685":{"position":[[8,9]]},"713":{"position":[[8,9]]},"733":{"position":[[0,8]]},"761":{"position":[[8,9]]},"782":{"position":[[8,9]]},"805":{"position":[[8,9]]}}}],["schema",{"_index":158,"t":{"416":{"position":[[14,6]]},"428":{"position":[[9,6]]}}}],["search",{"_index":113,"t":{"266":{"position":[[10,7]]},"268":{"position":[[53,7]]},"270":{"position":[[36,6]]}}}],["section",{"_index":34,"t":{"49":{"position":[[8,8]]},"69":{"position":[[8,8]]},"81":{"position":[[8,8]]},"99":{"position":[[8,8]]},"103":{"position":[[8,8]]},"115":{"position":[[8,8]]},"127":{"position":[[8,8]]},"133":{"position":[[8,8]]},"161":{"position":[[8,8]]},"181":{"position":[[8,8]]},"195":{"position":[[8,8]]},"216":{"position":[[8,8]]},"233":{"position":[[8,8]]},"248":{"position":[[8,8]]},"291":{"position":[[8,8]]},"319":{"position":[[8,8]]},"339":{"position":[[8,8]]},"350":{"position":[[8,8]]},"374":{"position":[[8,8]]},"388":{"position":[[8,8]]},"408":{"position":[[8,8]]},"432":{"position":[[8,8]]},"450":{"position":[[8,8]]},"472":{"position":[[8,8]]},"488":{"position":[[8,8]]},"506":{"position":[[8,8]]},"526":{"position":[[8,8]]},"548":{"position":[[8,8]]},"588":{"position":[[8,8]]},"608":{"position":[[8,8]]},"635":{"position":[[8,8]]},"651":{"position":[[8,8]]},"673":{"position":[[8,8]]},"749":{"position":[[8,8]]},"816":{"position":[[8,8]]}}}],["see",{"_index":187,"t":{"470":{"position":[[13,3]]},"631":{"position":[[13,3]]}}}],["self",{"_index":160,"t":{"418":{"position":[[32,4]]}}}],["server",{"_index":65,"t":{"139":{"position":[[16,6]]}}}],["servic",{"_index":60,"t":{"97":{"position":[[45,7]]},"747":{"position":[[37,7]]}}}],["setup",{"_index":53,"t":{"93":{"position":[[16,5]]}}}],["share",{"_index":79,"t":{"171":{"position":[[6,6]]},"814":{"position":[[4,7]]}}}],["solut",{"_index":131,"t":{"317":{"position":[[15,8]]},"448":{"position":[[20,9]]}}}],["specif",{"_index":110,"t":{"260":{"position":[[22,8]]}}}],["specifi",{"_index":85,"t":{"177":{"position":[[7,7]]}}}],["start",{"_index":49,"t":{"77":{"position":[[11,5]]},"89":{"position":[[11,5]]},"107":{"position":[[11,5]]},"119":{"position":[[11,5]]},"185":{"position":[[11,5]]},"203":{"position":[[11,5]]},"220":{"position":[[11,5]]},"237":{"position":[[11,5]]},"252":{"position":[[11,5]]},"278":{"position":[[11,5]]},"305":{"position":[[11,5]]},"327":{"position":[[11,5]]},"354":{"position":[[11,5]]},"378":{"position":[[11,5]]},"436":{"position":[[11,5]]},"454":{"position":[[11,5]]},"476":{"position":[[11,5]]},"492":{"position":[[11,5]]},"510":{"position":[[11,5]]},"530":{"position":[[11,5]]},"552":{"position":[[11,5]]},"592":{"position":[[11,5]]},"612":{"position":[[11,5]]},"639":{"position":[[11,5]]},"655":{"position":[[11,5]]},"677":{"position":[[11,5]]},"705":{"position":[[11,5]]},"729":{"position":[[11,5]]},"753":{"position":[[11,5]]},"774":{"position":[[11,5]]},"797":{"position":[[11,5]]}}}],["step",{"_index":50,"t":{"79":{"position":[[0,4],[8,4]]},"85":{"position":[[0,4],[8,4]]},"91":{"position":[[0,4],[8,4]]},"109":{"position":[[0,4],[8,4]]},"121":{"position":[[0,4],[8,4]]},"137":{"position":[[0,4],[8,4]]},"187":{"position":[[0,4],[8,4]]},"209":{"position":[[0,4],[8,4]]},"228":{"position":[[0,4],[8,4]]},"243":{"position":[[0,4],[8,4]]},"254":{"position":[[0,4],[8,4]]},"286":{"position":[[0,4],[8,4]]},"311":{"position":[[0,4],[8,4]]},"333":{"position":[[0,4],[8,4]]},"364":{"position":[[0,4],[8,4]]},"382":{"position":[[0,4],[8,4]]},"444":{"position":[[0,4],[8,4]]},"460":{"position":[[0,4],[8,4]]},"482":{"position":[[0,4],[8,4]]},"498":{"position":[[0,4],[8,4]]},"516":{"position":[[0,4],[8,4]]},"536":{"position":[[0,4],[8,4]]},"618":{"position":[[0,4],[8,4]]},"641":{"position":[[0,4],[8,4]]},"663":{"position":[[0,4],[8,4]]},"737":{"position":[[0,4],[8,4]]},"747":{"position":[[12,4]]}}}],["storag",{"_index":67,"t":{"141":{"position":[[17,7]]}}}],["store",{"_index":20,"t":{"23":{"position":[[10,6]]},"175":{"position":[[7,5]]}}}],["string",{"_index":162,"t":{"420":{"position":[[12,6]]}}}],["summari",{"_index":122,"t":{"274":{"position":[[0,7]]},"586":{"position":[[0,7]]},"671":{"position":[[0,7]]},"699":{"position":[[0,7]]},"723":{"position":[[0,7]]},"745":{"position":[[0,7]]},"770":{"position":[[0,7]]},"793":{"position":[[0,7]]}}}],["support",{"_index":181,"t":{"464":{"position":[[66,7]]}}}],["system",{"_index":192,"t":{"500":{"position":[[54,6]]},"602":{"position":[[20,6]]}}}],["take",{"_index":212,"t":{"667":{"position":[[0,4]]},"741":{"position":[[0,4]]},"747":{"position":[[0,6]]}}}],["team",{"_index":194,"t":{"518":{"position":[[31,4]]},"520":{"position":[[32,4]]},"522":{"position":[[15,4]]},"787":{"position":[[20,5]]},"789":{"position":[[26,5]]}}}],["telemetri",{"_index":74,"t":{"153":{"position":[[0,9]]}}}],["test",{"_index":155,"t":{"404":{"position":[[4,4]]}}}],["those",{"_index":153,"t":{"400":{"position":[[23,5]]}}}],["tie",{"_index":143,"t":{"368":{"position":[[30,3]]}}}],["time",{"_index":223,"t":{"741":{"position":[[5,4]]}}}],["timelin",{"_index":171,"t":{"430":{"position":[[12,8]]}}}],["trace",{"_index":76,"t":{"157":{"position":[[0,7]]}}}],["transact",{"_index":123,"t":{"287":{"position":[[56,11]]},"289":{"position":[[60,11]]}}}],["trip",{"_index":190,"t":{"500":{"position":[[41,4]]}}}],["tupl",{"_index":25,"t":{"35":{"position":[[23,6]]},"45":{"position":[[20,7]]},"175":{"position":[[50,6]]},"191":{"position":[[46,6]]},"193":{"position":[[45,6]]},"287":{"position":[[37,6]]},"289":{"position":[[41,6]]},"368":{"position":[[20,6]]},"370":{"position":[[21,6]]},"384":{"position":[[26,5]]},"466":{"position":[[30,5]]},"468":{"position":[[30,5]]},"484":{"position":[[26,5]]},"540":{"position":[[24,6]]},"542":{"position":[[24,6]]},"621":{"position":[[28,6]]},"629":{"position":[[24,6]]},"645":{"position":[[30,5]]},"647":{"position":[[38,6]]},"669":{"position":[[15,6]]},"691":{"position":[[32,6]]},"743":{"position":[[15,6]]},"764":{"position":[[62,6]]},"766":{"position":[[32,6]]}}}],["type",{"_index":17,"t":{"17":{"position":[[10,5]]},"19":{"position":[[10,4]]},"33":{"position":[[32,5]]},"47":{"position":[[8,4]]},"55":{"position":[[24,4]]},"258":{"position":[[31,5]]},"260":{"position":[[38,4]]},"366":{"position":[[49,4]]},"398":{"position":[[20,5]]},"400":{"position":[[29,5]]},"418":{"position":[[0,4]]},"422":{"position":[[10,4]]},"426":{"position":[[31,4]]},"464":{"position":[[47,4]]}}}],["understand",{"_index":188,"t":{"500":{"position":[[4,10]]},"665":{"position":[[0,10]]},"739":{"position":[[0,10]]}}}],["union",{"_index":41,"t":{"61":{"position":[[4,5]]}}}],["updat",{"_index":141,"t":{"366":{"position":[[4,6]]},"462":{"position":[[4,6]]},"464":{"position":[[4,6]]},"693":{"position":[[4,8]]},"719":{"position":[[4,8]]},"721":{"position":[[4,8]]},"768":{"position":[[4,8]]}}}],["us",{"_index":78,"t":{"169":{"position":[[0,5]]},"171":{"position":[[0,5]]},"179":{"position":[[3,5]]},"299":{"position":[[0,3]]},"370":{"position":[[4,3]]},"561":{"position":[[8,4]]},"563":{"position":[[24,3]]},"568":{"position":[[8,4]]},"570":{"position":[[24,3]]},"575":{"position":[[8,4]]},"577":{"position":[[24,3]]},"582":{"position":[[8,4]]},"584":{"position":[[24,3]]},"669":{"position":[[0,3]]},"743":{"position":[[0,3]]}}}],["user",{"_index":22,"t":{"27":{"position":[[10,5]]},"33":{"position":[[27,4]]},"95":{"position":[[25,4]]},"205":{"position":[[9,4]]},"222":{"position":[[9,4]]},"307":{"position":[[9,4]]},"313":{"position":[[24,5]]},"315":{"position":[[24,5]]},"329":{"position":[[9,4]]},"368":{"position":[[38,5]]},"504":{"position":[[13,4]]},"520":{"position":[[8,5]]},"540":{"position":[[37,4]]},"544":{"position":[[15,4]]},"614":{"position":[[9,4]]},"697":{"position":[[37,5]]}}}],["user_id",{"_index":164,"t":{"420":{"position":[[31,8]]}}}],["userset",{"_index":135,"t":{"342":{"position":[[10,8]]},"344":{"position":[[32,9]]},"346":{"position":[[33,9]]}}}],["valid",{"_index":105,"t":{"231":{"position":[[4,10]]},"428":{"position":[[16,10]]},"544":{"position":[[4,10]]}}}],["verifi",{"_index":130,"t":{"317":{"position":[[4,6]]},"372":{"position":[[4,6]]},"448":{"position":[[4,6]]}}}],["version",{"_index":159,"t":{"416":{"position":[[21,8]]}}}],["viewer",{"_index":134,"t":{"335":{"position":[[40,6]]},"337":{"position":[[27,7]]}}}],["vs",{"_index":2,"t":{"5":{"position":[[15,2]]}}}],["whenev",{"_index":86,"t":{"177":{"position":[[38,8]]}}}],["within",{"_index":189,"t":{"500":{"position":[[30,6]]}}}],["without",{"_index":203,"t":{"631":{"position":[[38,7]]},"665":{"position":[[25,7]]},"739":{"position":[[25,7]]}}}],["work",{"_index":132,"t":{"317":{"position":[[24,5]]},"344":{"position":[[22,4]]},"346":{"position":[[23,4]]},"372":{"position":[[40,5]]},"448":{"position":[[30,4]]},"500":{"position":[[25,4]]}}}],["workspac",{"_index":220,"t":{"715":{"position":[[9,10]]},"719":{"position":[[17,9]]}}}],["write",{"_index":91,"t":{"191":{"position":[[12,5]]},"193":{"position":[[12,5]]},"689":{"position":[[4,7]]}}}],["writer",{"_index":176,"t":{"446":{"position":[[42,7]]}}}],["zanzibar",{"_index":16,"t":{"13":{"position":[[8,9]]},"67":{"position":[[11,8]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"This section explains authorization, fine-grained authorization, RBAC, ABAC, ReBAC.","s":"Introduction to Authorization and OpenFGA","u":"/docs/authorization-and-openfga","h":"","p":1},{"i":4,"t":"OpenFGA is an open source solution to Fine-Grained Authorization that applies the concept of ReBAC. It was created by the Auth0 FGA team and was inspired by Zanzibar. It was designed for reliability and low latency at a high scale. It offers an HTTP API and has SDKs for programming languages including Node.js/JavaScript, GoLang, .NET and Python. More SDKs and integrations such as Rego are planned for the future.","s":"What Is OpenFGA?","u":"/docs/authorization-and-openfga","h":"#what-is-openfga","p":1},{"i":6,"t":"Authentication (or AuthN) is a process that ensures a user's identity. Authorization (or AuthZ) means determining if a user can perform a certain action on a particular resource. For example, when logging in to Twitter, the process in which Twitter verifies the user's username and password are correct is Authentication. The process of checking if that user can view or reply to a certain Tweet is Authorization. Read more about AuthN vs AuthZ.","s":"Authentication vs Authorization","u":"/docs/authorization-and-openfga","h":"#authentication-vs-authorization","p":1},{"i":8,"t":"Fine-Grained Authorization is being able to grant individual users access to specific objects or resources in a system. FGA at scale means being able to do so in a system that can have millions of objects, users and relations, and has a high change rate - objects are regularly added and access permissions are constantly being updated. A good example of this is Google Drive, where access can be granted either to documents, or folders; it can be granted to users individually or as a group. Access regularly changes as new documents are created and shared with specific users, whether inside the same company or outside.","s":"What Is Fine-Grained Authorization (FGA)?","u":"/docs/authorization-and-openfga","h":"#what-is-fine-grained-authorization-fga","p":1},{"i":10,"t":"In Role-Based Access Control, permissions are assigned to users based on their role in a system (e.g. a user would need an editor role to edit posts). In Attribute-Based Access Control, instead of permissions being granted based on roles, they are granted based on a set of attributes on a user or resource (e.g. if a user has both marketing and manager attributes they can publish and delete posts that have a marketing attribute, but not others). If you are interested you can read more about RBAC and ABAC.","s":"What Are Role-Based Access Control (RBAC) And Attribute-Based Access Control (ABAC)?","u":"/docs/authorization-and-openfga","h":"#what-are-role-based-access-control-rbac-and-attribute-based-access-control-abac","p":1},{"i":12,"t":"ReBAC allows expressing rules based on relations that users have with objects and that objects have with other objects. For example, a user can view a document if they can view its parent folder.","s":"What Is Relationship Based Access Control (ReBAC)?","u":"/docs/authorization-and-openfga","h":"#what-is-relationship-based-access-control-rebac","p":1},{"i":14,"t":"Zanzibar is \"Google's Consistent, Global Authorization System\" for \"determining whether online users are authorized to access digital objects\" across their products (Google Drive, YouTube, Google Photos, etc..). It uses (object, relation, user) tuples to store relation data and traverses those relations to check if there is a relation between a user and an object. Learn more about Zanzibar at the Zanzibar Academy.","s":"What Is Zanzibar?","u":"/docs/authorization-and-openfga","h":"#what-is-zanzibar","p":1},{"i":16,"t":"The OpenFGA service answers authorization checks by determining whether a relationship exists between an object and a user. Checks takes into consideration the authorization model of the system and the relationship tuples present in the system at that time in order to make a decision. In this guide you will learn about the most relevant FGA concepts, such as a type or an authorization model, and you will be able to explore them using the FGA playground. What Is A Type?‚Äã A type is a string. It should define a class of objects with similar characteristics. Examples of types: workspace repository organization document What Is A Type Definition?‚Äã A type definition is a configuration that defines all possible relations a user or another object can have in relation to this type. Code snippet below is an example of a type definition: DSL JSON type document relations define viewer: [user] define commenter: [user] define editor: [user] define owner: [user] { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} }, \"commenter\": { \"this\": {} }, \"editor\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } What Is An Authorization Model?‚Äã An authorization model is a combination of one or more type definitions. This is used to define the permission model of a system. Code snippet below is an example of an authorization model: DSL JSON model schema 1.1 type document relations define viewer: [domain#member,user] define commenter: [domain#member,user] define editor: [domain#member,user] define owner: [domain#member,user] type domain relations define member: [user] type user { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} }, \"commenter\": { \"this\": {} }, \"editor\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"domain\", \"relation\": \"member\" }, { \"type\": \"user\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"domain\", \"relation\": \"member\" }, { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"domain\", \"relation\": \"member\" }, { \"type\": \"user\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"domain\", \"relation\": \"member\" }, { \"type\": \"user\" } ] } } } }, { \"type\": \"domain\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"user\" } ] } Authorization model, together with relationship tuples, allow determination of whether a relationship exists between a user and an object. The OpenFGA service has two different syntaxes to define the authorization model: A JSON syntax accepted by the OpenFGA API that follows closely the original syntax discussed in the Zanzibar Paper. See Equivalent Zanzibar Concepts. A DSL that we believe is easier to use and is used in the Auth0 FGA Playground to help with modeling. This is translated to the API-supported syntax before being sent to the API. Learn more about the OpenFGA Configuration Language. What Is A Store?‚Äã A \"store\" is a OpenFGA entity used for organizing data needed to answer authorization checks. Each store contains one or more versions of an authorization model and may contain various relationship tuples. Store data such as the authorization model and relationship tuples cannot be shared across stores, so it is highly recommended to store all data that may be related and may affect your authorization result in a single store. For completely separate authorization needs or isolated environments where data from one should not affect another (e.g. development/prod), you may want to create separate stores. What Is An Object?‚Äã An object represents an entity in the system. We can define how various users have a relationship to it through relationship tuples and the authorization model. An object is a combination of a type and an identifier. For example: workspace:fb83c013-3060-41f4-9590-d3233a67938f repository:auth0/express-jwt organization:org_ajUc9kJ document:new-roadmap User, relation and object are the building blocks for relationship tuples. For more information, please see Direct Access. What Is A User?‚Äã A user is an entity in the system that can be related to an object. A user is is a combination of a type, an identifier and an optional relation. For example, any identifier: e.g. user:anne or user:4179af14-f0c0-4930-88fd-5570c7bf6f59 any object: e.g. workspace:fb83c013-3060-41f4-9590-d3233a67938f, repository:auth0/express-jwt or organization:org_ajUc9kJ a group or a set of users (also called a userset): e.g. organization:org_ajUc9kJ#members, which represents the set of users related to the object organization:org_ajUc9kJ as member everyone, using the special syntax: * User, relation and object are the building blocks for relationship tuples. For more information, please see Direct Access. What Is A Relation?‚Äã A relation is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system. Examples of relation: User can be a reader of a document Team can administer a repo User can be a member of a team What Is A Relation Definition?‚Äã A relation definition lists the conditions or requirements under which this relationship would be possible. For example: editor describing a possible relationship between a user and an object in the document type allows the following: user identifier to object relationship: the user id anne of type user is related to the object document:roadmap as editor object to object relationship: the object application:ifft is related to the object document:roadmap as editor userset to object relationship: the userset organization:auth0.com#member is related to document:roadmap as editor indicating that the set of users who are related to the object organization:auth0.com as member are related to the object document:roadmap as editors this allows for potential solutions to use-cases like sharing a document internally with all members of a company or a team everyone to object relationship: everyone (*) is related to document:roadmap as editor this is how one could model publicly editable documents These would be defined in the authorization model as such: DSL JSON type document relations define viewer: [user] define commenter: [user] define editor: [user] define owner: [user] type user { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} }, \"commenter\": { \"this\": {} }, \"editor\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"user\" } ] } info In the configuration of the document type, we have four relations: viewer, commenter, editor and owner. User, relation and object are the building blocks for relationship tuples. For more information, please see Direct Access. What Is A Directly Related User Type?‚Äã A directly related user type is an array specified in the type definition to indicate what types of users can be directly related to that relation. For the following model, only relationship tuple with user type user may be assigned to document. DSL JSON type document relations define viewer: [user] { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Relationship tuple with user user:anne or user:3f7768e0-4fa7-4e93-8417-4da68ce1846c may be written for objects with type document and relation viewer, so writing {\"user\": \"user:anne\",\"relation\":\"viewer\",\"object\":\"document:roadmap\"} will succeed. Relationship tuple writes with user type that is not allowed for the viewer relation on objects of type document, for example workspace:auth0 or folder:planning#editor will be rejected, so writing {\"user\": \"folder:product\",\"relation\":\"viewer\",\"object\":\"document:roadmap\"} will fail. This will affect only relations that are directly related and have the direct relationship type restrictions in their relation definition. What Is A Relationship Tuple?‚Äã A relationship tuple is a tuple consisting of a user, relation and object stored in OpenFGA. A relationship tuple consists of a: user, e.g. user:anne, user:3f7768e0-4fa7-4e93-8417-4da68ce1846c, workspace:auth0 or folder:planning#editor relation, e.g. editor, member or parent_workspace object, e.g repo:auth0/express_jwt, domain:auth0.com or channel:marketing An authorization model, together with relationship tuples, allow the determination of whether a relationship exists between a user and an object. Throughout the documentation, you will encounter relationship tuples represented as: [ { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] For more information, please see Direct Access. What Is A Relationship?‚Äã A relationship is the realization of a relation between a user and an object. An authorization model, together with relationship tuples, allow the determination of whether a relationship exists between a user and an object. Relationships may be classified as direct or implied. What Are Direct And Implied Relationships?‚Äã A direct relationship R between user X and object Y means the relationship tuple (user=X, relation=R, object=Y) exists, and the OpenFGA authorization model for that relation allows this direct relationship (by use of direct relationship type restrictions). An implied (or computed) relationship R exists between user X and object Y if user X is related to an object Z that is in a direct or implied relationship with object Y, and the OpenFGA authorization model allows it. user:anne has a direct relationship with document:new-roadmap as viewer if the type definition allows it (allows direct relationship type restrictions), and one of the following relationship tuples exist: [ // Anne of type user is directly related to the document { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] [ // Everyone (`*`) of type user is directly related to the document { \"user\": \"*\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] [ // The userset is directly related to this document { \"user\": \"team:product#member\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, // AND Anne of type user is a member of a userset (e.g. team:product#member) { \"user\": \"user:anne\", \"relation\": \"member\", \"object\": \"team:product#member\", }, ] user:anne has an implied relationship with document:new-roadmap as viewer if the type definition allows it, and the presence of relationship tuples satisfying the relationship exist. For example, assuming the following type definition: DSL JSON type document relations define viewer: [user] or editor define editor: [user] { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } And assuming the following relationship tuple exists in the system: [ { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] In this case, the relationship between user:anne and document:new-roadmap as a viewer is implied from the direct editor relationship user:anne has with that same document. Thus, the following request to check whether a viewer relationship exists between user:anne and document:new-roadmap will return true. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'viewer', object: 'document:new-roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"viewer\", Object: \"document:new-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"viewer\", Object = \"document:new-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"viewer\", object=\"document:new-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"viewer\",\"object\":\"document:new-roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"viewer\", // has an `viewer` relation object = \"document:new-roadmap\", // with the object `document:new-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true What Is A Check Request?‚Äã A check request is a call to the OpenFGA check endpoint that returns whether the user has a certain relationship with an object. This can be done using the check methods in the OpenFGA SDKs (JavaScript SDK/Go SDK/.NET SDK), by manually calling the check endpoint using curl, or in your code. The check endpoint responds with { \"allowed\": true } if a relationship exists, and with { \"allowed\": false } if the relationship does not. For example, the following will check whether anne of type user has a viewer relation to document:new-roadmap: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'viewer', object: 'document:new-roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"viewer\", Object: \"document:new-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"viewer\", Object = \"document:new-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"viewer\", object=\"document:new-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"viewer\",\"object\":\"document:new-roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"viewer\", // has an `viewer` relation object = \"document:new-roadmap\", // with the object `document:new-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true For more information, please see the Relationship Queries page and the official Check API Reference. What Is A List Objects Request?‚Äã A list objects request is a call to the OpenFGA list objects endpoint that returns all the objects of a given type that a user has a specified relationship with. This can be done using the listobjects methods in the OpenFGA SDKs (JavaScript SDK/Go SDK/.NET SDK), by manually calling the list objects endpoint using curl, or in your code. The list objects endpoint responds with a list of objects for a given type that the user has the specified relationship with. For example, the following will return all the objects with document type for which anne of type user has a viewer relation with: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); const response = await fgaClient.listObjects({ authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user: \"user:anne\", relation: \"viewer\", type: \"document\", }); // response.objects = [\"document:otherdoc\", \"document:planning\"] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ListObjectsRequest{ AuthorizationModelId: PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), User: \"user:anne\", Relation: \"viewer\", Type: \"document\", } data, response, err := apiClient.OpenFgaApi.ListObjects(context.Background()).Body(body).Execute() // data = { \"objects\": [\"document:otherdoc\", \"document:planning\"] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var body = new ListObjectsRequest{ AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", User = \"user:anne\", Relation = \"viewer\", Type = \"document\", }; var response = await openFgaApi.ListObjects(body); // response.Objects = [\"document:otherdoc\", \"document:planning\"] Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.list_objects_request import ListObjectsRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys async def list_objects(): body = ListObjectsRequest( authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user=\"user:anne\", relation=\"viewer\", type=\"document\", ) response = await fga_client_instance.list_objects(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/list-objects \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{ \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"type\": \"document\", \"relation\": \"viewer\", \"user\":\"user:anne\" }' # Response: {\"objects\": [\"document:otherdoc\", \"document:planning\"]} listObjects( \"user:anne\", // list the objects that the user `user:anne` \"viewer\", // has an `viewer` relation \"document\", // and that are of type `document` authorization_model_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", // for this particular authorization model id ); Reply: [\"document:otherdoc\", \"document:planning\"] For more information, please see the Relationship Queries page and the official Check API Reference. What Are Contextual Tuples?‚Äã Contextual tuples are tuples that can be added to a check request, and only exist within the context of that particular request. Similar to relationship tuples, contextual tuples are composed of a user, relation and object. Unlike relationship tuples, they are not written to the store. However, if contextual tuples are sent alongside a check request, in the context of this particular check request, they are treated if they had been written in the store. For more information, please see Contextual and Time-Based Authorization, Authorization Through Organization Context and Check API Request Documentation. What Is Type Bound Public Access?‚Äã In OpenFGA, type bound public access (represented by <type>:*) is a special OpenFGA syntax meaning every object of that type when used as a user within a relationship tuple. For example, user:* represents every object of type user (including those not currently present in the system). For example, in a case where you would like to indicate a certain document document:new-roadmap is publicly writable (i.e. has everyone of type user as an editor), you can add the following relationship tuple: [ { \"user\": \"user:*\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] Note that you cannot use <type>:* in the relation or object properties. In addition, you cannot use <type>:* as part of a userset in the tuple's user field. For more information, please see Modeling Public Access and Advanced Modeling: Modeling Google Drive.","s":"Concepts","u":"/docs/concepts","h":"","p":15},{"i":18,"t":"A type is a string. It should define a class of objects with similar characteristics.","s":"What Is A Type?","u":"/docs/concepts","h":"#what-is-a-type","p":15},{"i":20,"t":"A type definition is a configuration that defines all possible relations a user or another object can have in relation to this type.","s":"What Is A Type Definition?","u":"/docs/concepts","h":"#what-is-a-type-definition","p":15},{"i":22,"t":"An authorization model is a combination of one or more type definitions. This is used to define the permission model of a system.","s":"What Is An Authorization Model?","u":"/docs/concepts","h":"#what-is-an-authorization-model","p":15},{"i":24,"t":"A \"store\" is a OpenFGA entity used for organizing data needed to answer authorization checks.","s":"What Is A Store?","u":"/docs/concepts","h":"#what-is-a-store","p":15},{"i":26,"t":"An object represents an entity in the system. We can define how various users have a relationship to it through relationship tuples and the authorization model.","s":"What Is An Object?","u":"/docs/concepts","h":"#what-is-an-object","p":15},{"i":28,"t":"A user is an entity in the system that can be related to an object.","s":"What Is A User?","u":"/docs/concepts","h":"#what-is-a-user","p":15},{"i":30,"t":"A relation is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system.","s":"What Is A Relation?","u":"/docs/concepts","h":"#what-is-a-relation","p":15},{"i":32,"t":"A relation definition lists the conditions or requirements under which this relationship would be possible.","s":"What Is A Relation Definition?","u":"/docs/concepts","h":"#what-is-a-relation-definition","p":15},{"i":34,"t":"A directly related user type is an array specified in the type definition to indicate what types of users can be directly related to that relation.","s":"What Is A Directly Related User Type?","u":"/docs/concepts","h":"#what-is-a-directly-related-user-type","p":15},{"i":36,"t":"A relationship tuple is a tuple consisting of a user, relation and object stored in OpenFGA.","s":"What Is A Relationship Tuple?","u":"/docs/concepts","h":"#what-is-a-relationship-tuple","p":15},{"i":38,"t":"A relationship is the realization of a relation between a user and an object.","s":"What Is A Relationship?","u":"/docs/concepts","h":"#what-is-a-relationship","p":15},{"i":40,"t":"A direct relationship R between user X and object Y means the relationship tuple (user=X, relation=R, object=Y) exists, and the OpenFGA authorization model for that relation allows this direct relationship (by use of direct relationship type restrictions). An implied (or computed) relationship R exists between user X and object Y if user X is related to an object Z that is in a direct or implied relationship with object Y, and the OpenFGA authorization model allows it.","s":"What Are Direct And Implied Relationships?","u":"/docs/concepts","h":"#what-are-direct-and-implied-relationships","p":15},{"i":42,"t":"A check request is a call to the OpenFGA check endpoint that returns whether the user has a certain relationship with an object.","s":"What Is A Check Request?","u":"/docs/concepts","h":"#what-is-a-check-request","p":15},{"i":44,"t":"A list objects request is a call to the OpenFGA list objects endpoint that returns all the objects of a given type that a user has a specified relationship with.","s":"What Is A List Objects Request?","u":"/docs/concepts","h":"#what-is-a-list-objects-request","p":15},{"i":46,"t":"Contextual tuples are tuples that can be added to a check request, and only exist within the context of that particular request.","s":"What Are Contextual Tuples?","u":"/docs/concepts","h":"#what-are-contextual-tuples","p":15},{"i":48,"t":"In OpenFGA, type bound public access (represented by <type>:*) is a special OpenFGA syntax meaning every object of that type when used as a user within a relationship tuple. For example, user:* represents every object of type user (including those not currently present in the system).","s":"What Is Type Bound Public Access?","u":"/docs/concepts","h":"#what-is-type-bound-public-access","p":15},{"i":50,"t":"Check the following sections for more on how object-to-object relationships can be used. OpenFGA Concepts Learn about the OpenFGA Concepts More Direct access Get started with modeling your permission system in OpenFGA More","s":"Related Sections","u":"/docs/concepts","h":"#related-sections","p":15},{"i":52,"t":"The OpenFGA's Configuration Language is used to build a representation of a system's authorization model. It informs OpenFGA's API on what the object types in the system are and how they could relate to one another. It describes the relations possible on an object of a certain type and lists the conditions under which one is related to that object. The DSL and the JSON syntax are two presentations of that configuration language. The JSON syntax is accepted by the API and closely matches the API described in the Zanzibar paper. The DSL is syntactic sugar on top of the JSON syntax and compiles down to it before being sent to OpenFGA's API. The DSL is meant to make modeling easier and more intuitive. You'll encounter the JSON syntax when calling the API directly or through the SDKs, and the DSL when interacting with OpenFGA through the Playground. Throughout the documentation you can switch between the two presentations. To understand this guide better, you should be familiar with some OpenFGA Concepts and How to get started on modeling.","s":"Configuration Language","u":"/docs/configuration-language","h":"","p":51},{"i":54,"t":"Below is a sample authorization model. In the next sections we'll go over the building blocks that make the OpenFGA configuration language. DSL JSON model schema 1.1 type user type domain relations define member: [user] type folder relations define can_share: writer define owner: [user,domain#member] or owner from parent_folder define parent_folder: [folder] define viewer: [user,domain#member] or writer or viewer from parent_folder define writer: [user,domain#member] or owner or writer from parent_folder type document relations define can_share: writer define owner: [user,domain#member] or owner from parent_folder define parent_folder: [folder] define viewer: [user,domain#member] or writer or viewer from parent_folder define writer: [user,domain#member] or owner or writer from parent_folder { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"can_share\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, \"owner\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"owner\" } } } ] } }, \"parent_folder\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"owner\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"parent_folder\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"can_share\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, \"owner\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"owner\" } } } ] } }, \"parent_folder\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"owner\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"parent_folder\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } } ] } info The authorization model describes four types of objects: user, domain, folder and document. The domain type definition has a single relation called member that only allows direct relationships. The folder and document type definitions each have five relations: parent_folder, owner, editor, viewer and can_share.","s":"What Does The Configuration Language Look Like?","u":"/docs/configuration-language","h":"#what-does-the-configuration-language-look-like","p":51},{"i":56,"t":"[<string, <string>, ...], when used at the beginning of a relation definition allows direct relationships from the objects of these specified types. The strings can be of three formats: <type>: indicating that tuples relating objects of those types as users can be written (e.g. group:marketing can be related if group is in the type restrictions) <type:*>: indicating that a tuple relating all objects of that type can be written (e.g. user:* can be added if user:* is in the type restrictions) <type>#<relation>: indicating that tuples with sets of users that are related to an object of that type by that particular relation (e.g. group:marketing#member can be added if group#member is in the type restrictions) If the direct relationship type restrictions are missing, then no tuple can be written relating other objects as this particular relation with objects of this type (direct relationships are disallowed). info [<type1>, <type2>, ...] in the OpenFGA DSL translates to this in the OpenFGA API syntax. For example, let's take a closer look at the team type. DSL JSON type team relations define member: [user,user:*,team#member] { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user:*\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } } This team type definition defines all the relations that users can have with an object of type team. In this case the relation is: member. Due to the direct relationship type restrictions ([user, team#member]) being used, a user in the system can have a direct relationship with the team type as a member for objects of type user the user type bound public access (user:*) usersets that have a team type and a member relation (e.g. team:product#member) In the type definition snippet above, anne is a member of team:product if any one of the following relationship tuple sets exist: [ // Anne is directly related to the product team as a member { \"user\": \"user:anne\", \"relation\": \"member\", \"object\": \"team:product\", }, ] [ // Everyone (`*`) is directly related to the product team as a member { \"user\": \"user:*\", \"relation\": \"member\", \"object\": \"team:product\", }, ] [ // Members of the contoso team are members of the product team { \"user\": \"team:contoso#member\", \"relation\": \"member\", \"object\": \"team:product\", }, // Anne is a member of the contoso team { \"user\": \"user:anne\", \"relation\": \"member\", \"object\": \"team:contoso\", }, ] For more examples, take look at Modeling Building Blocks: Direct Relationships.","s":"The Direct Relationship Type Restrictions","u":"/docs/configuration-language","h":"#the-direct-relationship-type-restrictions","p":51},{"i":58,"t":"You can also reference other relations on the same object. Let us look at a simplified document type definition. DSL JSON type document relations define editor: [user] define viewer: [user] or editor define can_rename: editor { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"can_rename\": { \"computedUserset\": { \"relation\": \"editor\" } } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } The above document type definition defines all the relations that users can have with an object of type document. In this case the relations are: editor, viewer and can_rename. The viewer and can_rename relation definitions are both referencing editor, which is another relation on the same type. info Notice how can_rename does not reference the direct relationship type restrictions, indicating that a direct relationship is not possible (as in a user cannot be directly assigned this relation, it has to be inherited through an assignment of the editor relation). The viewer relation on the other hand allows both direct and indirect relationships using the Union Operator. In the type definition snippet above, anne is a viewer of document:new-roadmap if any one of the following relationship tuple sets exists: anne is an editor of document:new-roadmap [ // Anne is an editor of the new-roadmap document { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] anne is a viewer of document:new-roadmap [ // Anne is a viewer of the new-roadmap document { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] anne has a can_rename relationship with document:new-roadmap only if anne has an editor relationship with the document: anne is an editor of document:new-roadmap [ // Anne is an editor of thew new-roadmap document { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] For more examples, take a look at Modeling Building Blocks: Concentric Relationships, Modeling: Roles and Permissions and Advanced Modeling: Google Drive.","s":"Referencing Other Relations On The Same Object","u":"/docs/configuration-language","h":"#referencing-other-relations-on-the-same-object","p":51},{"i":60,"t":"Another form of indirect relationships is made possible by referencing relations on other objects. The syntax is X from Y. It requires that: the other object is related to the current object as Y the user is related to another object as X Take a look at the authorization model below. DSL JSON model schema 1.1 type user type folder relations define viewer: [user,folder#viewer] type document relations define parent_folder: [folder] define viewer: [user] or viewer from parent_folder { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relation\": \"viewer\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent_folder\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent_folder\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The snippet below taken from the authorization model above is stating that viewers of a document are all users directly assigned the viewer relation and all users who can view the document's parent folder. DSL JSON type document relations define viewer: [user] or viewer from parent_folder { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent_folder\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In the authorization model above, user:anne is a viewer of document:new-roadmap if any one of the following relationship tuple sets exists: Anne is a viewer of the parent folder of the new-roadmap document [ // planning folder is the parent folder of the new-roadmap document { \"user\": \"folder:planning\", \"relation\": \"parent_folder\", \"object\": \"document:new-roadmap\", }, // anne is a viewer of the planning folder { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"folder:planning\", }, ] Anne is a viewer of the new-roadmap document (direct relationship) [ // anne is a viewer of the new-roadmap document { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] This particular use of referencing relations on related objects is defining a transitive implied relationship. If user A is related to a certain object B as a viewer, and object B is related to object C as parent, then user A is related to object C as viewer. This can be used to indicate that viewers of a folders are viewers of all documents in that folder. caution Note that OpenFGA does not allow the referenced relation (the word after from, also called the tupleset) to be referencing another relation or allow non-concrete types (type bound public access (<object_type>:*) or usersets (<object_type>#<relation>)) in its type restrictions and will throw a validation error when attempting to call WriteAuthorizationModel. Note: In the deprecated 1.0 schema version, the validation error will be thrown at the time of evaluation (Check, etc..). For more examples, take look at Modeling: Parent-Child Objects, Advanced Modeling: Google Drive, Advanced Modeling: GitHub, and Advanced Modeling: Entitlements.","s":"Referencing Relations On Related Objects","u":"/docs/configuration-language","h":"#referencing-relations-on-related-objects","p":51},{"i":62,"t":"The union operator (or in the DSL, union in the JSON syntax) is used to indicate that a relationship exists if the user is in any of the sets of users (union). DSL JSON type document relations define viewer: [user] or editor { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In the type definition snippet above, user:anne is a viewer of document:new-roadmap if any of the following conditions are satisfied: there exists a direct relationship with anne as editor of document:new-roadmap [ { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] anne is a viewer of document:new-roadmap [ { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] info The above authorization model indicates that a user is related as a viewer if they are in any of: the userset of all users related to the object as \"viewer\"; indicating that a user can be assigned a direct viewer relation the userset of all users related to the object as \"editor\"; indicating that a user who is an editor is also implicitly a viewer So if anne is in at least one of those usersets (is either an editor or a viewer), the check on {\"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\"} will return {\"allowed\": true}. For more examples, take a look at Modeling Building Blocks: Concentric Relationships, Modeling Roles and Permissions and Advanced Modeling: Modeling for IoT.","s":"The Union Operator","u":"/docs/configuration-language","h":"#the-union-operator","p":51},{"i":64,"t":"The intersection operator (and in the DSL, intersection in the JSON syntax) is used to indicate that a relationship exists if the user is in all the sets of users (intersection) DSL JSON type document relations define viewer: authorized_user and editor { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"relation\": \"authorized_user\" } }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In the type definition snippet above, user:anne is a viewer of document:new-roadmap if all of the following conditions are satisfied: anne is an editor of document:new-roadmap [ { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\", }, ] AND anne is an authorized_user of document:new-roadmap: [ { \"user\": \"user:anne\", \"relation\": \"authorized_user\", \"object\": \"document:new-roadmap\", }, ] info The above authorization model indicates that a user is related as a viewer if they are in all of: the userset of all users related to the object as \"authorized_user\" the userset of all users related to the object as \"editor\" So anne has to be in the intersection of the usersets (anne has to be both an editor AND an authorized_user), in order for the check on {\"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\"} to return {\"allowed\": true}. anne is not a viewer for document:new-roadmap if either of the following is true: anne is not an editor to document:new-roadmap: no relationship tuple of {\"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:new-roadmap\"} anne is not an authorized_user on the document:new-roadmap: no relationship tuple of {\"user\": \"user:anne\", \"relation\": \"authorized_user\", \"object\": \"document:new-roadmap\"} For more examples, take look at Modeling with Multiple Restrictions.","s":"The Intersection Operator","u":"/docs/configuration-language","h":"#the-intersection-operator","p":51},{"i":66,"t":"The exclusion operator (but not in the DSL, difference in the JSON syntax) is used to indicate that a relationship exists if the user is in the base userset, but not in the excluded userset. This is helpful in modeling exclusion or block lists. DSL JSON type document relations define viewer: [user] but not blocked { \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"viewer\": { \"difference\": { \"base\": { \"this\": {} }, \"subtract\": { \"computedUserset\": { \"relation\": \"blocked\" } } } } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In the type definition snippet above, user:anne is a viewer of document:new-roadmap if: anne is assigned a direct relationship as viewer to document:new-roadmap [ { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\", }, ] AND anne is not blocked to document:new-roadmap. That is, the following relation tuple does not exists [ { \"user\": \"user:anne\", \"relation\": \"blocked\", \"object\": \"document:new-roadmap\", }, ] For more information, see Modeling: Blocklists. info The above authorization model indicates that a user is related as a viewer if they are in: the userset of all users related to the object as \"viewer\" but not in: the userset of all users related to the object as \"blocked\" So anne has to be both a viewer AND NOT blocked, in order for the check on {\"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\"} to return {\"allowed\": true}. anne is not a viewer for document:new-roadmap if either of the following is true: anne is not assigned direct relationship as viewer to document:new-roadmap: no relationship tuple of {\"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:new-roadmap\"} anne is blocked on the document:new-roadmap {\"user\": \"user:anne\", \"relation\": \"blocked\", \"object\": \"document:new-roadmap\"}","s":"The Exclusion Operator","u":"/docs/configuration-language","h":"#the-exclusion-operator","p":51},{"i":68,"t":"The JSON syntax accepted by the OpenFGA API closely mirrors the syntax represented in the Zanzibar paper, with a bit of flattening and converting keys from snake_case to camelCase. Zanzibar OpenFGA JSON OpenFGA DSL this this [<type1>,<type2>] union union or intersection intersection and exclusion difference but not tuple_to_userset tupleToUserset x from y In the Zanzibar paper, there's this example: name: \"doc\" relation { name: \"owner\" } relation { name: \"editor\" userset_rewrite { union { child { _this {} } child { computed_userset { relation: \"owner\" } } }}} relation { name: \"viewer\" userset_rewrite { union { child { _this {} } child { computed_userset { relation: \"editor\" } } child { tuple_to_userset { tupleset { relation: \"parent\" } computed_userset { object: $TUPLE_USERSET_OBJECT # parent folder relation: \"viewer\" }}} }}} In the OpenFGA DSL, it would become: model schema 1.1 type doc relations define owner: [user] define editor: [user] or owner define viewer: [user] or editor or viewer from parent And in the OpenFGA JSON, it would become: { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"doc\", \"relations\": { \"owner\": { \"this\": {} }, \"editor\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } We believe this syntax is easier to read/write. So the following: DSL JSON model schema 1.1 type doc relations define viewer: [user] or editor or viewer from parent { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"doc\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Can be read as: The users with a viewer relationship to a certain doc are any of: the set of users who are directly related with this doc as viewer the set of users who are related to this doc as editor the set of users who are related to any object OBJ_1 as viewer, where object OBJ_1 is any object related to this doc as parent (e.g. viewers of this doc's parent folder, where the parent folder is OBJ_1) Learn more about Zanzibar at the Zanzibar Academy.","s":"Equivalent Zanzibar Concepts","u":"/docs/configuration-language","h":"#equivalent-zanzibar-concepts","p":51},{"i":70,"t":"Check the following sections for more on how to use the configuration language in modeling authorization. OpenFGA Concepts Learn about the OpenFGA Concepts. More Modeling: Getting Started Learn about how to get started with modeling your permission system in OpenFGA. More Direct Access Learn about modeling user access to an object. More","s":"Related Sections","u":"/docs/configuration-language","h":"#related-sections","p":51},{"i":72,"t":"The following will provide a step by step guide on how to get started with OpenFGA. When to use This section is useful if you understand the basic concepts of OpenFGA, and want to learn how to get started.","s":"Getting Started","u":"/docs/getting-started","h":"","p":71},{"i":74,"t":"Setup OpenFGA How to setup an OpenFGA server. Click to navigate Install SDK Client Install the SDK for the language of your choice. Click to navigate Create a Store Creating an OpenFGA entity that owns an authorization model and relationship tuples. Click to navigate Setup SDK Client for Store Configure the SDK client for your store. Click to navigate Configure Authorization Model Programmatically configure authorization model for an OpenFGA store. Click to navigate Update Relationship Tuples Programmatically write authorization data to an OpenFGA store. Click to navigate Perform a Check Programmatically perform an authorization check against an OpenFGA store. Click to navigate Perform a List Objects Request Programmatically perform a list objects request against an OpenFGA store. Click to navigate Integrate Within a Framework Integrate authorization checks with a framework. Click to navigate Production Best Practices Best Practices of Running OpenFGA in Production Environment. Click to navigate Implementation Best Practices Best Practices of Managing Tuples and Invoking OpenFGA APIs. Click to navigate","s":"Content","u":"/docs/getting-started","h":"","p":71},{"i":76,"t":"This article explains how to configure an authorization model for a store in an OpenFGA server.","s":"Configure Authorization Model for a Store","u":"/docs/getting-started/configure-model","h":"","p":75},{"i":78,"t":"Node.js Go .NET Python curl Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK, created the store and setup the SDK client. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK, created the store and setup the SDK client. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK, created the store and setup the SDK client. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK, created the store and setup the SDK client. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have created the store and have loaded FGA_STORE_ID and FGA_API_HOST as environment variables.","s":"Before You Start","u":"/docs/getting-started/configure-model","h":"#before-you-start","p":75},{"i":80,"t":"Assume that you want to configure your store with the following model. DSL JSON model schema 1.1 type user type document relations define reader: [user] define writer: [user] define owner: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"reader\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } To configure authorization model, we can invoke the write authorization models API. Node.js Go .NET Python curl Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); const { authorization_model_id: id } = await fgaClient.writeAuthorizationModel({ \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"reader\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }); // id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } var writeAuthorizationModelRequestString = \"{\\\"schema_version\\\":\\\"1.1\\\",\\\"type_definitions\\\":[{\\\"type\\\":\\\"user\\\"},{\\\"type\\\":\\\"document\\\",\\\"relations\\\":{\\\"reader\\\":{\\\"this\\\":{}},\\\"writer\\\":{\\\"this\\\":{}},\\\"owner\\\":{\\\"this\\\":{}}},\\\"metadata\\\":{\\\"relations\\\":{\\\"reader\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"writer\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"owner\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]}}}}]}\" var body WriteAuthorizationModelRequest if err := json.Unmarshal([]byte(writeAuthorizationModelRequestString), &body); err != nil { t.Errorf(\"%v\", err) // .. Handle error return } data, response, err := fgaClient.OpenFgaApi.WriteAuthorizationModel(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } // data.AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var modelJson = \"{\\\"schema_version\\\":\\\"1.1\\\",\\\"type_definitions\\\":[{\\\"type\\\":\\\"user\\\"},{\\\"type\\\":\\\"document\\\",\\\"relations\\\":{\\\"reader\\\":{\\\"this\\\":{}},\\\"writer\\\":{\\\"this\\\":{}},\\\"owner\\\":{\\\"this\\\":{}}},\\\"metadata\\\":{\\\"relations\\\":{\\\"reader\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"writer\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"owner\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]}}}}]}\"; var body = JsonSerializer.Deserialize<OpenFga.Sdk.Model.WriteAuthorizationModelRequest>(modelJson); var response = await fgaClient.WriteAuthorizationModel(body); // response.AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.write_authorization_model_request import WriteAuthorizationModelRequest async def write_authorization_model(): body_string = \"{\\\"schema_version\\\":\\\"1.1\\\",\\\"type_definitions\\\":[{\\\"type\\\":\\\"user\\\"},{\\\"type\\\":\\\"document\\\",\\\"relations\\\":{\\\"reader\\\":{\\\"this\\\":{}},\\\"writer\\\":{\\\"this\\\":{}},\\\"owner\\\":{\\\"this\\\":{}}},\\\"metadata\\\":{\\\"relations\\\":{\\\"reader\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"writer\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"owner\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]}}}}]}\" response = await fga_client_instance.write_authorization_model(json.loads(body)) # response.authorization_model_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/authorization-models \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"schema_version\":\"1.1\",\"type_definitions\":[{\"type\":\"user\"},{\"type\":\"document\",\"relations\":{\"reader\":{\"this\":{}},\"writer\":{\"this\":{}},\"owner\":{\"this\":{}}},\"metadata\":{\"relations\":{\"reader\":{\"directly_related_user_types\":[{\"type\":\"user\"}]},\"writer\":{\"directly_related_user_types\":[{\"type\":\"user\"}]},\"owner\":{\"directly_related_user_types\":[{\"type\":\"user\"}]}}}}]}' The API will then return the authorization model ID. Note The OpenFGA API only accepts an authorization model in the API's JSON syntax. To convert between the API Syntax and the friendly DSL, you can use the syntax transformer or Auth0 FGA's Playground.","s":"Step By Step","u":"/docs/getting-started/configure-model","h":"#step-by-step","p":75},{"i":82,"t":"Take a look at the following sections for more information on how to configure authorization model in your store. Getting Started with Modeling Read how to get started with modeling. More Modeling: Direct Relationships Read the basics of modeling authorization and granting access to users. More","s":"Related Sections","u":"/docs/getting-started/configure-model","h":"#related-sections","p":75},{"i":84,"t":"A store is a OpenFGA entity that contains your authorization data. You will need to create a store in OpenFGA before adding an authorization model and relationship tuples to it. This article explains how to setup an OpenFGA store.","s":"Create a Store","u":"/docs/getting-started/create-store","h":"","p":83},{"i":86,"t":"Node.js Go .NET Python curl const { OpenFgaApi } = require('@openfga/sdk'); // OR import { OpenFgaApi } from '@openfga/sdk'; const openFga = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // optional, defaults to \"https\" apiHost: process.env.FGA_API_HOST // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) }); const { id: storeId } = await openFga.createStore({ name: \"FGA Demo Store\", }); import ( openfga \"github.com/openfga/go-sdk\" \"os\" ) func main() { configuration, err := openfga.NewConfiguration(openfga.Configuration{ ApiScheme: os.Getenv(\"FGA_API_SCHEME\"), // optional, defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) }) if err != nil { // .. Handle error } apiClient := openfga.NewAPIClient(configuration) resp, _, err := apiClient.OpenFgaApi.CreateStore(context.Background()).Body(openfga.CreateStoreRequest{ Name: openfga.PtrString(\"FGA Demo Store\"), }).Execute() if err != nil { // .. Handle error } } using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // optional, defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\") // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) }; var fgaClient = new OpenFgaApi(configuration); var store = await fgaClient.CreateStore(new OpenFga.Sdk.Model.CreateStoreRequest() { Name = \"FGA Demo Store\" }); } } import os import openfga_sdk from openfga_sdk.api import open_fga_api from openfga_sdk.models.create_store_request import CreateStoreRequest configuration = openfga_sdk.Configuration( scheme = os.environ.get('FGA_API_SCHEME') api_host = os.environ.get('FGA_API_HOST'), ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) async def create_store(): try: # Create a store body = CreateStoreRequest( name = \"FGA Demo\", ) api_response = await fga_client_instance.create_store(body) except openfga_sdk.ApiException as e: print(\"Exception when calling OpenFgaApi->create_store: %s\\n\" % e) curl -X POST $FGA_API_HOST/stores \\ -H \"content-type: application/json\" \\ -d '{\"name\": \"FGA Demo Store\"}'","s":"Step By Step","u":"/docs/getting-started/create-store","h":"#step-by-step","p":83},{"i":88,"t":"This section will illustrate how to integrate OpenFGA within a framework, such as Fastify or Fiber.","s":"Integrate Within a Framework","u":"/docs/getting-started/framework","h":"","p":87},{"i":90,"t":"Node.js Go Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the OpenFGA SDK. You have configured the authorization model and updated the relationship tuples. You know how to perform a Check. You have loaded FGA_API_HOST and FGA_STORE_ID as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the OpenFGA SDK. You have configured the authorization model and updated the relationship tuples. You know how to perform a Check. You have loaded FGA_API_HOST and FGA_STORE_ID as environment variables.","s":"Before You Start","u":"/docs/getting-started/framework","h":"#before-you-start","p":87},{"i":92,"t":"Assume that you want to have a web service for documents using one of the frameworks mentioned above. The service will authenticate users via JWT tokens, which contain the user ID. Note The reader should set up their own login method based on their OpenID connect provider's documentation. Assume that you want to provide a route GET /read/{document} to return documents depending on whether the authenticated user has access to it.","s":"Step By Step","u":"/docs/getting-started/framework","h":"#step-by-step","p":87},{"i":94,"t":"The first step is to install the framework. Node.js Go For the context of this example, we will use the Fastify framework. For that we need to install the following packages: the fastify package that provides the framework itself the fastify-plugin package that allows integrating plugins with Fastify the fastify-jwt package for processing JWT tokens Using npm: npm install fastify fastify-plugin fastify-jwt Using yarn: yarn add fastify fastify-plugin fastify-jwt Next, we setup the web service with the GET /read/{document} route in file app.js. // Require the framework and instantiate it const fastify = require('fastify')({ logger: true }); // Declare the route fastify.get('/read/:document', async (request, reply) => { return { read: request.params.document }; }); // Run the server const start = async () => { try { await fastify.listen(3000); } catch (err) { fastify.log.error(err); process.exit(1); } }; start(); For the context of this example, we will use the Fiber framework. For that we need to install the following Go packages: the gofiber/fiber package that provides the Fiber framework itself the gofiber/jwt middleware authentication layer for JWT the golang-jwt package that provides Go support for JWT go get -u github.com/gofiber/fiber/v2 github.com/gofiber/jwt/v3 github.com/golang-jwt/jwt/v4 Next, we setup the web service with the GET /read/{document} route. package main import \"github.com/gofiber/fiber/v2\" func main() { app := fiber.New() app.Get(\"/read/:document\", read) app.Listen(\":3000\") } func read(c *fiber.Ctx) error { return c.SendString(c.Params(\"document\")) }","s":"01. Install And Setup Framework","u":"/docs/getting-started/framework","h":"#01-install-and-setup-framework","p":87},{"i":96,"t":"Before we can call OpenFGA to protect the /read/{document} route, we need to validate the user's JWT. Node.js Go The fastify-jwt package allows validation of JWT tokens, as well as providing access to the user's identity. In jwt-authenticate.js: const fp = require('fastify-plugin'); module.exports = fp(async function (fastify, opts) { fastify.register(require('fastify-jwt'), { secret: { private: readFileSync(`${path.join(__dirname, 'certs')}/private.key`, 'utf8'), public: readFileSync(`${path.join(__dirname, 'certs')}/public.key`, 'utf8'), }, sign: { algorithm: 'RS256' }, }); fastify.decorate('authenticate', async function (request, reply) { try { await request.jwtVerify(); } catch (err) { reply.send(err); } }); }); Then, use the preValidation hook of a route to protect it and access the user information inside the JWT: In route-read.js: module.exports = async function (fastify, opts) { fastify.get( '/read/:document', { preValidation: [fastify.authenticate], }, async function (request, reply) { // the user's id is in request.user return { read: request.params.document }; }, ); }; Finally, update app.js to register the newly added hooks. const fastify = require('fastify')({ logger: true }); const jwt-authenticate = require('./jwt-authenticate'); const routeread = require('./route-read'); fastify.register(jwt-authenticate); fastify.register(routeread); // Run the server! const start = async () => { try { await fastify.listen(3000); } catch (err) { fastify.log.error(err); process.exit(1); } } start(); We will now setup middleware to authenticate the incoming JWTs. package main import ( \"crypto/rand\" \"crypto/rsa\" \"log\" \"github.com/gofiber/fiber/v2\" jwtware \"github.com/gofiber/jwt/v3\" \"github.com/golang-jwt/jwt/v4\" ) var ( // Do not do this in production. // In production, you would have the private key and public key pair generated // in advance. NEVER add a private key to any GitHub repo. privateKey *rsa.PrivateKey ) func main() { app := fiber.New() // Just as a demo, generate a new private/public key pair on each run. rng := rand.Reader var err error privateKey, err = rsa.GenerateKey(rng, 2048) if err != nil { log.Fatalf(\"rsa.GenerateKey: %v\", err) } // JWT Middleware app.Use(jwtware.New(jwtware.Config{ SigningMethod: \"RS256\", SigningKey: privateKey.Public(), })) app.Get(\"/read/:document\", read) app.Listen(\":3000\") } func read(c *fiber.Ctx) error { user := c.Locals(\"user\").(*jwt.Token) claims := user.Claims.(jwt.MapClaims) name := claims[\"name\"].(string) return c.SendString(name + \" read \" + c.Params(\"document\")) }","s":"02. Authenticate And Get User ID","u":"/docs/getting-started/framework","h":"#02-authenticate-and-get-user-id","p":87},{"i":98,"t":"Node.js Go First, we will create a decorator preauthorize to parse the incoming HTTP method as well as name of the document, and set the appropriate relation and object that we will call Check on. In preauthorize.js: const fp = require('fastify-plugin'); module.exports = fp(async function (fastify, opts) { fastify.decorate('preauthorize', async function (request, reply) { try { switch (request.method) { case 'GET': request.relation = 'reader'; break; case 'POST': request.relation = 'writer'; break; case 'DELETE': default: request.relation = 'owner'; break; } request.object = `document:${request.params.document}`; } catch (err) { reply.send(err); } }); }); Next, we will create a decorator called authorize. This decorator will invoke the Check API to see if the user has a relationship with the specified document. In authorize.js: const fp = require('fastify-plugin'); const { OpenFgaApi } = require('@openfga/sdk'); // OR import { OpenFgaApi } from '@openfga/sdk'; module.exports = fp(async function (fastify, opts) { fastify.decorate('authorize', async function (request, reply) { try { // configure the openfga api client const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Optional. Can be \"http\" or \"https\". Defaults to \"https\" apiHost: process.env.FGA_API_HOST, storeId: process.env.FGA_STORE_ID, }); const { allowed } = await fgaClient.check({ tuple_key: { user: request.user, relation: request.relation, object: request.object, }, }); if (!allowed) { reply.code(401).send(`Not authenticated`); } } catch (err) { reply.send(err); } }); }); We can now update the GET /read/{document} route to check for user permissions. In route-read.js: module.exports = async function (fastify, opts) { fastify.get( '/read/:document', { preValidation: [fastify.authenticate, fastify.preauthorize, fastify.authorize], }, async function (request, reply) { // the user's id is in request.user return { read: request.params.document }; }, ); }; Finally, we will register the new hooks in app.js: const fastify = require('fastify')({ logger: true }); const jwt-authenticate = require('./jwt-authenticate'); const preauthorize = require('./preauthorize'); const authorize = require('./authorize'); const routeread = require('./route-read'); fastify.register(jwt-authenticate); fastify.register(preauthorize); fastify.register(authorize); fastify.register(routeread); const start = async () => { try { await fastify.listen(3000); } catch (err) { fastify.log.error(err); process.exit(1); } } start(); We will create two middlewares: preauthorize will parse the user's JWT and prepare variables needed to call Check API. checkAuthorization will call the Check API to see if the user has a relationship with the specified document. package main import ( \"context\" \"crypto/rand\" \"crypto/rsa\" \"log\" \"os\" \"github.com/gofiber/fiber/v2\" jwtware \"github.com/gofiber/jwt/v3\" \"github.com/golang-jwt/jwt/v4\" fgaSdk \"github.com/openfga/go-sdk\" ) var ( // Do not do this in production. // In production, you would have the private key and public key pair generated // in advance. NEVER add a private key to any GitHub repo. privateKey *rsa.PrivateKey ) func main() { app := fiber.New() // Just as a demo, generate a new private/public key pair on each run. rng := rand.Reader var err error privateKey, err = rsa.GenerateKey(rng, 2048) if err != nil { log.Fatalf(\"rsa.GenerateKey: %v\", err) } // JWT Middleware app.Use(jwtware.New(jwtware.Config{ SigningMethod: \"RS256\", SigningKey: privateKey.Public(), })) app.Use(\"/read/:document\", preauthorize) app.Use(checkAuthorization) app.Get(\"/read/:document\", read) app.Listen(\":3000\") } func read(c *fiber.Ctx) error { user := c.Locals(\"user\").(*jwt.Token) claims := user.Claims.(jwt.MapClaims) name := claims[\"name\"].(string) return c.SendString(name + \" read \" + c.Params(\"document\")) } func preauthorize(c *fiber.Ctx) error { // get the user name from JWT user := c.Locals(\"user\").(*jwt.Token) claims := user.Claims.(jwt.MapClaims) name := claims[\"name\"].(string) c.Locals(\"username\", name) // parse the HTTP method switch (c.Method()) { case \"GET\": c.Locals(\"relation\", \"reader\") case \"POST\": c.Locals(\"relation\", \"writer\") case \"DELETE\": c.Locals(\"relation\", \"owner\") default: c.Locals(\"relation\", \"owner\") } // get the object name and prepend with type name \"document:\" c.Locals(\"object\", \"document:\" + c.Params(\"document\")) return c.Next() } // Middleware to check whether user is authorized to access document func checkAuthorization(c *fiber.Ctx) error { configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_API_SCHEME\"), // Optional. Can be \"http\" or \"https\". Defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), StoreId: os.Getenv(\"FGA_STORE_ID\"), }) if err != nil { return fiber.NewError(fiber.StatusServiceUnavailable, \"Unable to build OpenFGA client\") } fgaClient := fgaSdk.NewAPIClient(configuration) body := fgaSdk.CheckRequest{ TupleKey: fgaSdk.TupleKey{ User: fgaSdk.PtrString(c.Locals(\"username\").(string)), Relation: fgaSdk.PtrString(c.Locals(\"relation\").(string)), Object: fgaSdk.PtrString(c.Locals(\"object\").(string)), }, } data, _, err := fgaClient.OpenFga.Check(context.Background()).Body(body).Execute() if err != nil { return fiber.NewError(fiber.StatusServiceUnavailable, \"Unable to check for authorization\") } if !(*data.Allowed) { return fiber.NewError(fiber.StatusUnauthorized, \"Unauthorized to access document\") } // Go to the next middleware return c.Next() }","s":"03. Integrate The OpenFGA Check API Into The Service","u":"/docs/getting-started/framework","h":"#03-integrate-the--check-api-into-the-service","p":87},{"i":100,"t":"Take a look at the following sections for examples that you can try when integrating with SDK. Entitlements Modeling Entitlements for a System in OpenFGA. More IoT Modeling Fine Grained Authorization for an IoT Security Camera System with OpenFGA. More Slack Modeling Authorization for Slack with OpenFGA. More","s":"Related Sections","u":"/docs/getting-started/framework","h":"#related-sections","p":87},{"i":102,"t":"To get started, install the OpenFGA SDK packages. Node.js Go .NET Python You can find the Node.js package on npm at: @openfga/sdk. Using npm: npm install @openfga/sdk Using yarn: yarn add @openfga/sdk You can find the Go package on GitHub at: @openfga/go-sdk. To install: go get -u github.com/openfga/go-sdk In your code, import the module and use it: import ( openfga \"github.com/openfga/go-sdk\" ) func main() { configuration, err := openfga.NewConfiguration(openfga.Configuration{ ApiScheme: os.Getenv(\"FGA_API_SCHEME\"), // optional, defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) }) if err != nil { // .. Handle error } } You can then run go mod tidy to update go.mod and go.sum if you are using them. The OpenFGA .NET SDK is available on NuGet. You can install it using: The dotnet CLI: dotnet add package OpenFGA.Sdk The Package Manager Console inside Visual Studio: Install-Package OpenFGA.Sdk Visual Studio, Visual Studio for Mac and IntelliJ Rider: Search for and install OpenFGA.Sdk in each of their respective package manager UIs. The OpenFGA Python SDK is available on PyPI. To install: pip3 install openfga_sdk In your code, import the module and use it: import openfga_sdk","s":"Install SDK Client","u":"/docs/getting-started/install-sdk","h":"","p":101},{"i":104,"t":"Get OpenFGA's SDKs to add authorization to your API. OpenFGA Node.js SDK Install our Node.js & JavaScript SDK to get started. More OpenFGA Go SDK Use our Go SDK to easily connect your Go application to the OpenFGA API More OpenFGA .NET SDK Connect your .NET service with OpenFGA using our .NET SDK More OpenFGA Python SDK Connect your Python service with OpenFGA using our .NET SDK More","s":"Related Sections","u":"/docs/getting-started/install-sdk","h":"#related-sections","p":101},{"i":106,"t":"This section will illustrate how to perform a check request to determine whether a user has a certain relationship with an object.","s":"Perform a Check","u":"/docs/getting-started/perform-check","h":"","p":105},{"i":108,"t":"Node.js Go .NET Python curl Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables.","s":"Before You Start","u":"/docs/getting-started/perform-check","h":"#before-you-start","p":105},{"i":110,"t":"Assume that you want to check whether user anne has relationship reader with object document:Z","s":"Step By Step","u":"/docs/getting-started/perform-check","h":"#step-by-step","p":105},{"i":112,"t":"Before calling the check API, you will need to configure the API client. Node.js Go .NET Python curl // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) To obtain the access token: Set FGA_API_URL according to the service you are using","s":"01. Configure the OpenFGA API Client","u":"/docs/getting-started/perform-check","h":"#01-configure-the--api-client","p":105},{"i":114,"t":"To check whether user user:anne has relationship reader with object document:Z Node.js Go .NET Python curl // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'document:Z', }, }); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"document:Z\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"document:Z\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:Z\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:Z\"}}' # Response: {\"allowed\":true} The result's allowed field will return true if the relationship exists and false if the relationship does not exist.","s":"02. Calling Check API","u":"/docs/getting-started/perform-check","h":"#02-calling-check-api","p":105},{"i":116,"t":"Take a look at the following section for more on how to perform authorization checks in your system OpenFGA Check API Read the Check API documentation and see how it works. More","s":"Related Sections","u":"/docs/getting-started/perform-check","h":"#related-sections","p":105},{"i":118,"t":"This section will illustrate how to perform a list objects request to determine all the objects of a given type a user has a specified relationship with.","s":"Perform a List Objects call","u":"/docs/getting-started/perform-list-objects","h":"","p":117},{"i":120,"t":"Node.js Go .NET Python curl Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have configured the authorization model and updated the relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables.","s":"Before You Start","u":"/docs/getting-started/perform-list-objects","h":"#before-you-start","p":117},{"i":122,"t":"Assume that you want to list all objects of type document that user anne has reader relationship with:","s":"Step By Step","u":"/docs/getting-started/perform-list-objects","h":"#step-by-step","p":117},{"i":124,"t":"Before calling the check API, you will need to configure the API client. Node.js Go .NET Python curl // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) To obtain the access token: Set FGA_API_URL according to the service you are using","s":"01. Configure the OpenFGA API Client","u":"/docs/getting-started/perform-list-objects","h":"#01-configure-the--api-client","p":117},{"i":126,"t":"To return all documents that user user:anne has relationship reader with: Node.js Go .NET Python curl const response = await fgaClient.listObjects({ authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user: \"user:anne\", relation: \"reader\", type: \"document\", }); // response.objects = [\"document:otherdoc\", \"document:planning\"] body := fgaSdk.ListObjectsRequest{ AuthorizationModelId: PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), User: \"user:anne\", Relation: \"reader\", Type: \"document\", } data, response, err := apiClient.OpenFgaApi.ListObjects(context.Background()).Body(body).Execute() // data = { \"objects\": [\"document:otherdoc\", \"document:planning\"] } var body = new ListObjectsRequest{ AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", User = \"user:anne\", Relation = \"reader\", Type = \"document\", }; var response = await openFgaApi.ListObjects(body); // response.Objects = [\"document:otherdoc\", \"document:planning\"] # from openfga_sdk.models.list_objects_request import ListObjectsRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys async def list_objects(): body = ListObjectsRequest( authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user=\"user:anne\", relation=\"reader\", type=\"document\", ) response = await fga_client_instance.list_objects(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/list-objects \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{ \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"type\": \"document\", \"relation\": \"reader\", \"user\":\"user:anne\" }' # Response: {\"objects\": [\"document:otherdoc\", \"document:planning\"]} The result document:otherdoc and document:planning are the document objects that user:anne has reader relationship with.","s":"02. Calling List Objects API","u":"/docs/getting-started/perform-list-objects","h":"#02-calling-list-objects-api","p":117},{"i":128,"t":"Take a look at the following section for more on how to perform authorization checks in your system OpenFGA List Objects API Read the List Objects API documentation and see how it works. More","s":"Related Sections","u":"/docs/getting-started/perform-list-objects","h":"#related-sections","p":117},{"i":130,"t":"The following list outlines some guidelines and best-practices for running OpenFGA in a production environment: Configure Authentication Enable HTTP TLS or gRPC TLS or both Set the log.format to \"json\" Set the log.level to \"info\" Disable the Playground.","s":"Running OpenFGA in Production","u":"/docs/getting-started/running-in-production","h":"","p":129},{"i":132,"t":"To ensure good performance for OpenFGA, it is recommended that the database be: Used exclusively for OpenFGA and not shared with other applications. This allows scaling the OpenFGA database independently and avoiding contention with your application database. Bootstrapped and managed with the openfga migrate tool. This will ensure the appropriate indexes are created for any specific version of OpenFGA.","s":"Database Recommendations","u":"/docs/getting-started/running-in-production","h":"#database-recommendations","p":129},{"i":134,"t":"Check the following sections for more on how to run OpenFGA in production environment. Data and API Best Practices Learn the best practices for managing data and invoking APIs in production environment More Migrating Relations Learn how to migrate relations in a production environment More Migrating Schema 1.1 Learn how to migrate to model schema 1.1 More","s":"Related Sections","u":"/docs/getting-started/running-in-production","h":"#related-sections","p":129},{"i":136,"t":"This article explains how to start your own OpenFGA server using Docker, and how to configure it.","s":"üê≥ Setup OpenFGA with Docker","u":"/docs/getting-started/setup-openfga/docker","h":"","p":135},{"i":138,"t":"If you want to run OpenFGA locally as a Docker container, follow these steps: Install Docker (if not already installed). Run docker pull openfga/openfga to get the latest docker image. Run docker run -p 8080:8080 -p 8081:8081 -p 3000:3000 openfga/openfga run. This will start an HTTP server and gRPC server with the default configuration options. Port 8080 is used to serve the HTTP API, 8081 is used to serve the gRPC API, and 3000 is used for the Playground.","s":"Step By Step","u":"/docs/getting-started/setup-openfga/docker","h":"#step-by-step","p":135},{"i":140,"t":"You may configure the OpenFGA server with a config.yaml file. The config.yaml can be specified in either: /etc/openfga $HOME/.openfga . (i.e., the current working directory). The OpenFGA server will search for the configuration file in the above order. Here is a sample configuration to run OpenFGA with a Postgres database and using a preshared key for authentication: datastore: engine: postgres uri: postgres://user:password@localhost:5432/mydatabase authn: method: preshared preshared: keys: [\"key1\", \"key2\"] All possible configurations and their default values are defined in config-schema.json. Information The OpenFGA server supports environment variables for configuration, and they will take priority over your configuration file. Each variable must be prefixed with OPENFGA_ and followed by your option in uppercase (e.g --grpc-tls-key becomes OPENFGA_GRPC_TLS_KEY).","s":"Configuring The Server","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-the-server","p":135},{"i":142,"t":"OpenFGA supports multiple storage engine options, including: memory - The memory storage engine is the default, but it is not persistent (data is lost between server restarts). postgres - The Postgres storage engine requires a Postgres instance that the OpenFGA server can reach. mysql - The MySQL storage engine requires a MySQL instance that the OpenFGA server can reach, and that the connection URI specifies the query parseTime=true. Postgres‚Äã Docker Docker Compose Let's assume you want to run OpenFGA and Postgres in containers. The first thing we should do is create a new network as this will make communication between containers a bit simpler: docker network create openfga Start Postgres in the network you created above: docker run -d --name postgres --network=openfga -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password postgres:14 You should now have Postgres running in a container in the openfga network. However, it will not have the tables required for running OpenFGA. You can use the migrate command to create the tables. Using the OpenFGA container, this will look like: docker run --rm --network=openfga openfga/openfga migrate \\ --datastore-engine postgres \\ --datastore-uri \"postgres://postgres:password@postgres:5432/postgres?sslmode=disable\" Finally, start OpenFGA: docker run --name openfga --network=openfga -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run \\ --datastore-engine postgres \\ --datastore-uri 'postgres://postgres:password@postgres:5432/postgres?sslmode=disable' Copy the below code block into a local file named: docker-compose.yaml version: '3.8' networks: openfga: services: postgres: image: postgres:14 container_name: postgres networks: - openfga ports: - \"5432:5432\" environment: - POSTGRES_USER=postgres - POSTGRES_PASSWORD=password healthcheck: test: [ \"CMD-SHELL\", \"pg_isready -U postgres\" ] interval: 5s timeout: 5s retries: 5 migrate: depends_on: postgres: condition: service_healthy image: openfga/openfga:latest container_name: migrate command: migrate environment: - OPENFGA_DATASTORE_ENGINE=postgres - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable networks: - openfga openfga: depends_on: migrate: condition: service_completed_successfully image: openfga/openfga:latest container_name: openfga environment: - OPENFGA_DATASTORE_ENGINE=postgres - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable - OPENFGA_LOG_FORMAT=json command: run networks: - openfga ports: # Needed for the http server - \"8080:8080\" # Needed for the grpc server (if used) - \"8081:8081\" # Needed for the playground (Do not enable in prod!) - \"3000:3000\" In a terminal, navigate to that directory and run: docker-compose up This will start the Postgres database, run openfga migrate to configure the database and finally start the OpenFGA server. Now you can try to Create a Store. MySQL‚Äã Setting up MySQL and OpenFGA is very similar to setting up Postgres and OpenFGA. info Note that the MySQL datastore has stricter limits for the max length of some fields for tuples compared to other datastore engines, in particular: object type is at most 128 characters (down from 256) object id is at most 128 characters (down from 256) user is at most 256 characters (down from 512) Docker Docker Compose We first make a network: docker network create openfga Then, start MySQL in the network you created above: docker run -d --name mysql --network=openfga -e MYSQL_ROOT_PASSWORD=secret -e MYSQL_DATABASE=openfga mysql:8 You should now have MySQL running in a container in the openfga network. But we still have to migrate all the tables to be able to run OpenFGA. You can use the migrate command to create the tables. Using the OpenFGA container, this will look like: docker run --rm --network=openfga openfga/openfga migrate \\ --datastore-engine mysql \\ --datastore-uri 'root:secret@tcp(mysql:3306)/openfga?parseTime=true' Finally, start OpenFGA: docker run --name openfga --network=openfga -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run \\ --datastore-engine mysql \\ --datastore-uri 'root:secret@tcp(mysql:3306)/openfga?parseTime=true' Copy the below code block into a local file named: docker-compose.yaml version: '3.8' networks: openfga: services: mysql: image: mysql:8 container_name: mysql networks: - openfga ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=secret - MYSQL_DATABASE=openfga healthcheck: test: [\"CMD\", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ] timeout: 20s retries: 5 migrate: depends_on: mysql: condition: service_healthy image: openfga/openfga:latest container_name: migrate command: migrate environment: - OPENFGA_DATASTORE_ENGINE=mysql - OPENFGA_DATASTORE_URI=root:secret@tcp(mysql:3306)/openfga?parseTime=true networks: - openfga openfga: depends_on: migrate: condition: service_completed_successfully image: openfga/openfga:latest container_name: openfga environment: - OPENFGA_DATASTORE_ENGINE=mysql - OPENFGA_DATASTORE_URI=root:secret@tcp(mysql:3306)/openfga?parseTime=true - OPENFGA_LOG_FORMAT=json command: run networks: - openfga ports: # Needed for the http server - \"8080:8080\" # Needed for the grpc server (if used) - \"8081:8081\" # Needed for the playground (Do not enable in prod!) - \"3000:3000\" In a terminal, navigate to that directory and run: docker-compose up This will start the MySQL database, run openfga migrate to configure the database and finally start the OpenFGA server. Now you can try to Create a Store.","s":"Configuring Data Storage","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-data-storage","p":135},{"i":144,"t":"You can configure authentication in your OpenFGA server in three ways: no authentication (the default), pre-shared key authentication or via OIDC. Pre-shared Key Authentication‚Äã If using Pre-shared key authentication, you will configure OpenFGA with a secret key and your application calling OpenFGA will have to set an Authorization: Bearer <YOUR-KEY-HERE> header. You can configure multiple keys. Warning If you are going to use this setup in production, you should enable HTTP TLS in your OpenFGA server. You will need to configure the TLS certificate and key. Configuration File Environment Variables Docker Update the config.yaml file to authn: method: preshared preshared: keys: [\"key1\", \"key2\"] http: tls: enabled: true cert: /Users/myuser/key/server.crt key: /Users/myuser/key/server.key Configure the authentication method to preshared: export OPENFGA_AUTHN_METHOD=preshared. Configure the authentication keys: export OPENFGA_AUTHN_PRESHARED_KEYS=\"key1,key2\" Enable the HTTP TLS configuration: export OPENFGA_HTTP_TLS_ENABLED=true Configure the HTTP TLS certificate location: export OPENFGA_HTTP_TLS_CERT=/Users/myuser/key/server.crt Configure the HTTP TLS key location: export OPENFGA_HTTP_TLS_KEY=/Users/myuser/key/server.key To configure with pre-shared authentication and enabling TLS in http server with Docker. Copy the certificate and key files to your Docker container. Run with the following command: docker run --name openfga --network=openfga -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run \\ --authn-method=preshared \\ --authn-preshared-keys=\"key1,key2\" \\ --http-tls-enabled=true \\ --http-tls-cert=\"/Users/myuser/key/server.crt\" \\ --http-tls-key=\"/Users/myuser/key/server.key\" OIDC‚Äã To configure with OIDC authentication, you will first need to obtain the OIDC issuer and audience from your provider. Warning If you are going to use this setup in production, you should enable HTTP TLS in your OpenFGA server. You will need to configure the TLS certificate and key. Configuration File Environment Variables Docker Update the config.yaml file to authn: method: oidc oidc: issuer: \"oidc-issuer\" audience: \"oidc-audience\" http: tls: enabled: true cert: /Users/myuser/key/server.crt key: /Users/myuser/key/server.key Configure the authentication method to preshared: export OPENFGA_AUTHN_METHOD=oidc. Configure the authentication keys: export OPENFGA_AUTHN_OIDC_ISSUER=oidc-issuer Configure the authentication keys: export OPENFGA_AUTHN_OIDC_audience=oidc-audience Enable the HTTP TLS configuration: export OPENFGA_HTTP_TLS_ENABLED=true Configure the HTTP TLS certificate location: export OPENFGA_HTTP_TLS_CERT=/Users/myuser/key/server.crt Configure the HTTP TLS key location: export OPENFGA_HTTP_TLS_KEY=/Users/myuser/key/server.key To configure with pre-shared authentication and enabling TLS in http server with Docker. Copy the certificate and key files to your docker container. Run the following command docker run --name openfga --network=openfga -p 3000:3000 -p 8080:8080 -p 8081:8081 openfga/openfga run \\ --authn-method=oidc \\ --authn-oidc-issuer=\"oidc-issuer\" \\ --authn-oidc-audience=\"oidc-audience\" \\ --http-tls-enabled=true \\ --http-tls-cert=\"/Users/myuser/key/server.crt\" \\ --http-tls-key=\"/Users/myuser/key/server.key\"","s":"Configuring Authentication","u":"/docs/getting-started/setup-openfga/docker","h":"#configuring-authentication","p":135},{"i":146,"t":"The Playground facilitates rapid development by allowing you to visualize and model your application's authorization model(s) and manage relationship tuples with a locally running OpenFGA instance. The Playground is enabled on port 3000 by default and accessible at http://localhost:3000/playground (if using Docker, make sure port 3000 is exposed to your local network). To disable the Playground, see Configuring the Server.","s":"Playground","u":"/docs/getting-started/setup-openfga/docker","h":"#playground","p":135},{"i":148,"t":"Warning Continuous profiling can be used in production deployments, but we recommend disabling it unless it is needed to troubleshoot specific performance or memory problems. Profiling through pprof can be enabled on the OpenFGA server by providing the --profiler-enabled flag. For example, in Docker: docker run -p 8080:8080 -p 8081:8081 -p 3000:3000 -p 3001:3001 openfga/openfga run --profiler-enabled If you need to serve the profiler on a different port than the default 3001, you can do so by specifying the --profiler-addr flag. For example: docker run -p 8080:8080 -p 8081:8081 -p 3000:3000 -p 3002:3002 openfga/openfga run --profiler-enabled --profiler-addr :3002","s":"Profiler (pprof)","u":"/docs/getting-started/setup-openfga/docker","h":"#profiler-pprof","p":135},{"i":150,"t":"OpenFGA is configured with an HTTP health check endpoint /healthz and a gRPC health check grpc.health.v1.Health/Check, which is wired to datastore testing. Possible response values are UNKNOWN SERVING NOT_SERVING SERVICE_UNKNOWN cURL gRPC curl -X GET $FGA_API_HOST/healthz # {\"status\":\"SERVING\"} # See https://github.com/fullstorydev/grpcurl#installation grpcurl -plaintext $FGA_API_HOST grpc.health.v1.Health/Check # {\"status\":\"SERVING\"}","s":"Health Check","u":"/docs/getting-started/setup-openfga/docker","h":"#health-check","p":135},{"i":152,"t":"Various releases of OpenFGA may have experimental features that can be enabled by providing the --experimentals flag or the experimentals config. docker run -p 8080:8080 -p 8081:8081 openfga/openfga run --experimentals=\"feature1, feature2\" or if you're using environment variables, docker run -p 8080:8080 -p 8081:8081 openfga/openfga -e OPENFGA_EXPERIMENTALS=\"feature1, feature2\" run The following table enumerates the experimental flags, a description of what they do, and the versions of OpenFGA the flag is supported in: Name Description OpenFGA Version Status otel-metrics Enables support for exposing OpenFGA metrics through OpenTelemetry 0.3.2 <= v < v0.3.5 became default in v0.3.5 list-objects Enables ListObjects API 0.2.0 <= v < v0.3.3 became default in v0.3.3 Warning Experimental features are not guaranteed to be stable and may lead to server instabilities. It is not recommended to enable experimental features for anything other than experimentation. Experimental feature flags are also not considered part of API compatibility and are subject to change, so please refer to each OpenFGA specific release for a list of the experimental feature flags that can be enabled for that release.","s":"Experimental Features","u":"/docs/getting-started/setup-openfga/docker","h":"#experimental-features","p":135},{"i":154,"t":"OpenFGA telemetry data is collected by default starting on version v0.3.5. The telemetry information that is captured includes Metrics, Traces, and Logs. note Please refer to the docker-compose.yaml file as an example of how to collect Metrics and Tracing in OpenFGA in a Docker environment using the OpenTelemetry Collector. This should serve as a good example that you can adjust for your specific deployment scenario.","s":"Telemetry","u":"/docs/getting-started/setup-openfga/docker","h":"#telemetry","p":135},{"i":156,"t":"OpenFGA metrics are collected with the Prometheus data format and exposed on address 0.0.0.0:2112/metrics. Metrics are exposed by default, but you can disable this with --metrics-enabled=false (or OPENFGA_METRICS_ENABLED=false environment variable). To set an alternative address, you can provide the --metrics-addr flag (OPENFGA_METRICS_ADDR environment variable). For example: openfga run --metrics-addr=0.0.0.0:2114 To see the request latency per endpoint of your OpenFGA deployment, you can provide the --metrics-enable-rpc-histograms flag (OPENFGA_METRICS_ENABLE_RPC_HISTOGRAMS environment variable).","s":"Metrics","u":"/docs/getting-started/setup-openfga/docker","h":"#metrics","p":135},{"i":158,"t":"OpenFGA traces can be collected with the OTLP data format. Tracing is disabled by default, but you can enable this with the --trace-enabled=true (OPENFGA_TRACE_ENABLED=true environment variable). Traces will be exported by default to address 0.0.0.0:4317. You can change this address with the --trace-otlp-endpoint flag (OPENFGA_TRACE_OTLP_ENDPOINT environment variable). To increase or decrease the trace sampling ratio, you can provide the --trace-sample-ratio flag (OPENFGA_TRACE_SAMPLE_RATIO env variable). Warning It is not recommended to sample all traces (e.g. --trace-sample-ratio=1). You will need to adjust your sampling ratio based on the amount of traffic your deployment receives. Higher traffic will require less sampling and lower traffic can tolerate higher sampling ratios.","s":"Tracing","u":"/docs/getting-started/setup-openfga/docker","h":"#tracing","p":135},{"i":160,"t":"OpenFGA generates structured logs by default, and it can be configured with the following flags: --log-format: sets the log format. Today we support text and json format. --log-level: sets the minimum log level (defaults to info). It can be set to none to turn off logging.","s":"Logging","u":"/docs/getting-started/setup-openfga/docker","h":"#logging","p":135},{"i":162,"t":"Check the following sections for more on how to use OpenFGA. Production Best Practices Learn the best practices of running OpenFGA in a production environment More","s":"Related Sections","u":"/docs/getting-started/setup-openfga/docker","h":"#related-sections","p":135},{"i":164,"t":"To deploy OpenFGA into a Kubernetes environment you can use the official OpenFGA Helm chart. Please refer to the official documentation on Artifact Hub for the Helm chart for more instructions.","s":"‚ò∏Ô∏è Setup OpenFGA with Kubernetes","u":"/docs/getting-started/setup-openfga/kubernetes","h":"","p":163},{"i":166,"t":"Follow the guides below to setup an OpenFGA server. Docker Setup Guide How to setup an OpenFGA server with Docker. Click to navigate Kubernetes Setup Guide How to setup an OpenFGA server with Kubernetes. Click to navigate","s":"Setup OpenFGA","u":"/docs/getting-started/setup-openfga/overview","h":"","p":165},{"i":168,"t":"This article explains how to build an OpenFGA client by using the SDKs. The first step is to ensure that you have created a store by following these steps. Next, depending on the authentication scheme you want to use, there are different ways to build the client.","s":"Setup SDK Client for Store","u":"/docs/getting-started/setup-sdk-client","h":"","p":167},{"i":170,"t":"This is a simple setup but it is not recommended for production use. Node.js Go .NET Python const { OpenFgaApi } = require('@openfga/sdk'); // OR import { OpenFgaApi } from '@openfga/sdk'; const openFga = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Optional. Can be \"http\" or \"https\". Defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID }); import ( openfga \"github.com/openfga/go-sdk\" \"os\" ) func main() { configuration, err := openfga.NewConfiguration(openfga.Configuration{ ApiScheme: os.Getenv(\"FGA_API_SCHEME\"), // Optional. Can be \"http\" or \"https\". Defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), }) if err != nil { // .. Handle error } apiClient := openfga.NewAPIClient(configuration) } using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Optional. Can be \"http\" or \"https\". Defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\") }; var fgaClient = new OpenFgaApi(configuration); } } import os import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME') api_host = os.environ.get('FGA_API_HOST'), store_id = os.environ.get('FGA_STORE_ID') ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration))","s":"Using No Authentication","u":"/docs/getting-started/setup-sdk-client","h":"#using-no-authentication","p":167},{"i":172,"t":"If you want to use shared key authentication, you need to generate a random string that will work as secret and set that key when building your OpenFGA server. Then, when building the client, set it as environment variable FGA_BEARER_TOKEN. Warning If you are going to use this setup in production, you should enable TLS in your OpenFGA server. Please see the Production Checklist. Node.js Go .NET Python const { CredentialsMethod, OpenFgaApi } = require('@openfga/sdk'); // OR import { CredentialsMethod, OpenFgaApi } from '@openfga/sdk'; const openFga = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // optional, defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods credentials: { method: CredentialsMethod.ApiToken, config: { token: process.env.FGA_BEARER_TOKEN, }, } }); import ( openfga \"github.com/openfga/go-sdk\" \"os\" ) func main() { configuration, err := openfga.NewConfiguration(openfga.Configuration{ ApiScheme: os.Getenv(\"FGA_API_SCHEME\"), // optional, defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods Credentials: &credentials.Credentials{ Method: credentials.CredentialsMethodApiToken, Config: { ApiToken: os.Getenv(\"FGA_BEARER_TOKEN\"), // will be passed as the \"Authorization: Bearer ${ApiToken}\" request header }, }, }) if err != nil { // .. Handle error } apiClient := openfga.NewAPIClient(configuration) } using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // optional, defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods Credentials = new Credentials() { Method = CredentialsMethod.ApiToken, Config = new CredentialsConfig() { ApiToken = Environment.GetEnvironmentVariable(\"FGA_BEARER_TOKEN\") }, }, }; var fgaClient = new OpenFgaApi(configuration); } } import os import openfga_sdk from openfga_sdk.api import open_fga_api from openfga_sdk.credentials import Credentials, CredentialConfiguration credentials = Credentials(method='api_token', configuration=CredentialConfiguration(api_token=os.environ.get(FGA_BEARER_TOKEN))) configuration = openfga_sdk.Configuration( api_scheme = os.environ.get(FGA_API_SCHEME), # optional, defaults to \"https\" api_host = os.environ.get(FGA_API_HOST), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get(FGA_STORE_ID), # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods credentials = credentials) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration))","s":"Using Shared Key Authentication","u":"/docs/getting-started/setup-sdk-client","h":"#using-shared-key-authentication","p":167},{"i":174,"t":"The following list outlines some guidelines and best practices for using OpenFGA: Do not store Personal Identifiable Information in tuples Always specify authorization model ID whenever possible If using ListObjects, avoid having intersection or exclusion in the authorization model","s":"Best Practices of Managing Tuples and Invoking APIs","u":"/docs/getting-started/tuples-api-best-practices","h":"","p":173},{"i":176,"t":"You can use any string for user and object identifiers, however you should not input or assign identifiers that include Personal Data or any other sensitive data, such as data that may be restricted under regulatory requirements. Note The documentation and samples uses first names and simple ids to illustrate easy-to-follow examples.","s":"Do Not Store Personal Identifiable Information in Tuples","u":"/docs/getting-started/tuples-api-best-practices","h":"#do-not-store-personal-identifiable-information-in-tuples","p":173},{"i":178,"t":"It is strongly recommended that authorization model ID be specified in your Relationship Queries (such as Check and ListObjects) and Relationship Commands (such as Write). Specifying authorization model ID in API calls have the following advantages: Better performance as OpenFGA will not need to perform a database query to get the latest authorization model ID. Allows consistent behavior in your production system until until you are ready to switch to the new model.","s":"Always Specify Authorization Model ID Whenever Possible","u":"/docs/getting-started/tuples-api-best-practices","h":"#always-specify-authorization-model-id-whenever-possible","p":173},{"i":180,"t":"If you are planning to use ListObjects, avoid using intersection or exclusion as it is not optimized for them yet.","s":"If Using ListObjects, Avoid Having Intersection or Exclusion in the Authorization Model","u":"/docs/getting-started/tuples-api-best-practices","h":"#if-using-listobjects-avoid-having-intersection-or-exclusion-in-the-authorization-model","p":173},{"i":182,"t":"Check the following sections for more on recommendation for managing relations and model in production environment. Migrating Relations Learn how to migrate relations in a production environment More Migrating Schema 1.1 Learn how to migrate to model schema 1.1 More","s":"Related Sections","u":"/docs/getting-started/tuples-api-best-practices","h":"#related-sections","p":173},{"i":184,"t":"This section will illustrate how to update relationship tuples.","s":"Update Relationship Tuples","u":"/docs/getting-started/update-tuples","h":"","p":183},{"i":186,"t":"Node.js Go .NET Python curl Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables.","s":"Before You Start","u":"/docs/getting-started/update-tuples","h":"#before-you-start","p":183},{"i":188,"t":"Assume that you want to add user user:anne to have relationship reader with object document:Z { user: 'user:anne', relation: 'reader', object: 'document:Z', }","s":"Step By Step","u":"/docs/getting-started/update-tuples","h":"#step-by-step","p":183},{"i":190,"t":"Before calling the write API, you will need to configure the API client. Node.js Go .NET Python curl // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) To obtain the access token: Set FGA_API_URL according to the service you are using","s":"01. Configure The OpenFGA API Client","u":"/docs/getting-started/update-tuples","h":"#01-configure-the--api-client","p":183},{"i":192,"t":"To add the relationship tuples, we can invoke the write API. Node.js Go .NET Python curl await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'reader', object: 'document:Z'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"reader\"), Object: fgaSdk.PtrString(\"document:Z\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"reader\", Object = \"document:Z\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:Z\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:Z\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}'","s":"02. Calling Write API To Add New Relationship Tuples","u":"/docs/getting-started/update-tuples","h":"#02-calling-write-api-to-add-new-relationship-tuples","p":183},{"i":194,"t":"To delete relationship tuples, we can invoke the write API. Assume that you want to delete user user:anne's reader relationship with object document:Z { user: 'user:anne', relation: 'reader', object: 'document:Z', } Node.js Go .NET Python curl await fgaClient.write({ deletes: { tuple_keys : [ { user: 'user:anne', relation: 'reader', object: 'document:Z'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"reader\"), Object: fgaSdk.PtrString(\"document:Z\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"reader\", Object = \"document:Z\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:Z\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:Z\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}'","s":"03. Calling Write API To Delete Relationship Tuples","u":"/docs/getting-started/update-tuples","h":"#03-calling-write-api-to-delete-relationship-tuples","p":183},{"i":196,"t":"Check the following sections for more on how to write your authorization data Managing User Access Learn about how to give a user access to a particular object. More Managing Group Access Learn about how to give a group of users access to a particular object. More Transactional Writes Learn about how to update multiple relations within the same API call. More","s":"Related Sections","u":"/docs/getting-started/update-tuples","h":"#related-sections","p":183},{"i":198,"t":"This section helps you integrate OpenFGA with your system. To do this, you will learn how to programmatically write authorization related data to OpenFGA. When to use This section is useful if you have defined an authorization model and want to understand how to write authorization data to OpenFGA to represent the state of your system.","s":"Interacting with the API","u":"/docs/interacting","h":"","p":197},{"i":200,"t":"Manage User Access Write relationship tuples to manage a user's access to an object. Click to navigate Manage Group Access Write relationship tuples to manage access to an object for all members of a group. Click to navigate Manage Group Membership Write relationship tuples to manage the users that are members of a group. Click to navigate Manage Relationships Between Object Write relationship tuples to manage how two objects are related. E.g. parent folder and child document. Click to navigate Transactional Writes Write multiple relationship tuples in a single request, so all writes either succeed or fail. Click to navigate Relationship Queries An overview of how to use the Check, Read, Expand, and ListObject APIs. Click to navigate Search with Permissions Implementing search with OpenFGA. Click to navigate","s":"Content","u":"/docs/interacting","h":"","p":197},{"i":202,"t":"In this guide you will learn how to grant a group of users access to a particular object. When to use Adding a relationship tuple specifying that a group has a relation to an object is helpful in cases where you want to encompass a set of users with the same relation to an object. For example: Grant a group of engineers viewer access to roadmap.doc Create a block_list of members who can't access a document Sharing a document with a team Granting viewer access to a photo to followers only Making a file viewable for all users within an organization Restricting access from or to users in a certain locale","s":"Managing Group Access","u":"/docs/interacting/managing-group-access","h":"","p":201},{"i":204,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have two types: company that can have a employee relation document that can have a reader relation. DSL JSON model schema 1.1 type user type company relations define employee: [user] type document relations define reader: [company#employee] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"company\", \"relations\": { \"employee\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"employee\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"reader\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"company\", \"relation\": \"employee\" } ] } } } } ] } In addition, you will need to know the following: Modeling User Groups‚Äã You need to know how to add users to groups and grant groups access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/interacting/managing-group-access","h":"#before-you-start","p":201},{"i":206,"t":"You need to know how to add users to groups and grant groups access to an object. Learn more ‚Üí","s":"Modeling User Groups","u":"/docs/interacting/managing-group-access","h":"#modeling-user-groups","p":201},{"i":208,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/managing-group-access","h":"#-concepts","p":201},{"i":211,"t":"If we want to have every employee of a type company have a reader relationship with a particular object of type document (in this case document:planning), we need to add a tuple like so: [ // Every employee in the company can read document:planning { \"user\": \"company:xyz#employee\", \"relation\": \"reader\", \"object\": \"document:planning\", }, ]","s":"01. Adding Company To The Document","u":"/docs/interacting/managing-group-access","h":"#01-adding-company-to-the-document","p":201},{"i":213,"t":"If we also write a tuple that says that Anne is a employee of company:xyz, like so: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'employee', object: 'company:xyz'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"employee\"), Object: fgaSdk.PtrString(\"company:xyz\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"employee\", Object = \"company:xyz\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"employee\", object=\"company:xyz\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"employee\",\"object\":\"company:xyz\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"employee\", \"object\":\"company:xyz\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"02. Adding Employee To The Company","u":"/docs/interacting/managing-group-access","h":"#02-adding-employee-to-the-company","p":201},{"i":215,"t":"Then a call to the Check API to see whether Anne can read document:planning will return true: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The same check for a different user Becky, however, will return false, because Becky does not have an employee relationship with company:xyz: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'reader', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:becky\", // check if the user `user:becky` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"03. Checking An Individual Member's Access To An Object","u":"/docs/interacting/managing-group-access","h":"#03-checking-an-individual-members-access-to-an-object","p":201},{"i":217,"t":"Check the following sections for more on how to model group. Modeling User Groups Learn about how to model users and groups. More Managing Group Membership Learn about managing group membership. More","s":"Related Sections","u":"/docs/interacting/managing-group-access","h":"#related-sections","p":201},{"i":219,"t":"In this guide you will learn how to update a user's membership to a group by adding and removing them from it. When to use Suppose: An employee is hired at a company and thus gains access to all of the company's resources. An employee quits and thus loses access to all of the company's resources. A user joins a GitHub organization and gains access to the organizations private repositories. A student graduates from school and loses access to the school's facilities. These are cases where using group membership can be helpful as you do not need to iterate over all of the group's resources to add or revoke access to particular objects. You can add a relationship tuple indicating that a user belongs to a group, or delete a tuple to indicate that a user is no longer part of the group.","s":"Managing Group Membership","u":"/docs/interacting/managing-group-membership","h":"","p":218},{"i":221,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have two types: org that can have a member relation document that can have a reader relation. DSL JSON model schema 1.1 type user type org relations define member: [user] type document relations define reader: [org#member] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"org\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"reader\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"org\", \"relation\": \"member\" } ] } } } } ] } Let us also assume that we have an org called \"contoso\" and a document called planning, and every member of that org can read the document. That is represented by having the following relationship tuple in the store: [ // Members of the contoso org can read the planning document { \"user\": \"org:contoso#member\", \"relation\": \"reader\", \"object\": \"document:planning\", }, ] With the above authorization model and relationship tuples, OpenFGA will respond with {\"allowed\":false} when check is called to see if Anne can read document:planning. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'anne', relation: 'reader', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"anne\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"anne\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"anne\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"anne\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"anne\", // check if the user `anne` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Now let's make Anne a member of org:contoso by adding another tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is a member of the contoso org { user: 'user:anne', relation: 'member', object: 'org:contoso'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is a member of the contoso org User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"org:contoso\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is a member of the contoso org new() { User = \"user:anne\", Relation = \"member\", Object = \"org:contoso\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is a member of the contoso org user=\"user:anne\", relation=\"member\", object=\"org:contoso\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"org:contoso\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is a member of the contoso org { \"user\":\"user:anne\", \"relation\":\"member\", \"object\":\"org:contoso\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The OpenFGA service will now correctly respond with {\"allowed\":true} when check is called to see if Anne can read document:planning, but it will still respond with {\"allowed\":false} if we ask the same question for another user called Becky, who is not a member of the group org:contoso. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'reader', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:becky\", // check if the user `user:becky` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Modeling User Groups‚Äã You need to know how to add users to groups and grant groups access to an object. Learn more ‚Üí Managing Group Access‚Äã You need to know how to manage group access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/interacting/managing-group-membership","h":"#before-you-start","p":218},{"i":223,"t":"You need to know how to add users to groups and grant groups access to an object. Learn more ‚Üí","s":"Modeling User Groups","u":"/docs/interacting/managing-group-membership","h":"#modeling-user-groups","p":218},{"i":225,"t":"You need to know how to manage group access to an object. Learn more ‚Üí","s":"Managing Group Access","u":"/docs/interacting/managing-group-membership","h":"#managing-group-access","p":218},{"i":227,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/managing-group-membership","h":"#-concepts","p":218},{"i":230,"t":"Imagine that every member of org:contoso has a reader relationship to 1000 documents. Now imagine that anne is no longer a member of org:contoso, so we want to revoke her access to all those documents, including document:planning. To accomplish this, we can simply delete the tuple in OpenFGA that specifies that Anne is a member of org:contoso. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ { user: 'user:anne', relation: 'member', object: 'org:contoso'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"org:contoso\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"member\", Object = \"org:contoso\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"member\", object=\"org:contoso\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"org:contoso\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ { \"user\":\"user:anne\", \"relation\":\"member\", \"object\":\"org:contoso\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"01. Revoking Group Membership","u":"/docs/interacting/managing-group-membership","h":"#01-revoking-group-membership","p":218},{"i":232,"t":"Once the above relationship tuple is deleted, we can check if Anne can read document:planning. OpenFGA will return { \"allowed\": false }. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"02. Validating revoked member no longer has access","u":"/docs/interacting/managing-group-membership","h":"#02-validating-revoked-member-no-longer-has-access","p":218},{"i":234,"t":"Check the following sections for more on how to model group. Modeling User Groups Learn about how to model users and groups. More Managing Group Access Learn about managing group access. More","s":"Related Sections","u":"/docs/interacting/managing-group-membership","h":"#related-sections","p":218},{"i":236,"t":"In this guide you will learn how to grant a user access to a particular object. When to use Granting access with a relationship tuple is a core part of OpenFGA. Without any relationship tuples, any check will fail. You should use: authorization model to represent what relations are possible between the users and objects in your system relationship tuples to represent the facts about the relationships between users and objects in your system.","s":"Managing User Access","u":"/docs/interacting/managing-user-access","h":"","p":235},{"i":238,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called tweet that can have a reader. DSL JSON model schema 1.1 type user type tweet relations define reader: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"tweet\", \"relations\": { \"reader\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/interacting/managing-user-access","h":"#before-you-start","p":235},{"i":240,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/interacting/managing-user-access","h":"#direct-access","p":235},{"i":242,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/managing-user-access","h":"#-concepts","p":235},{"i":245,"t":"For our application, we will give user Anne the reader relationship to a particular tweet. To do so we add a tuple as follows: [ // Anne can read tweet:1 { \"user\": \"user:anne\", \"relation\": \"reader\", \"object\": \"tweet:1\", }, ] With the above, we have added a direct relationship between Anne and tweet:1. When we call the Check API to see if Anne has a reader relationship, OpenFGA will say yes. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'tweet:1', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"tweet:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"tweet:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"tweet:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"tweet:1\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"tweet:1\", // with the object `tweet:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"01. Adding Direct Relationship","u":"/docs/interacting/managing-user-access","h":"#01-adding-direct-relationship","p":235},{"i":247,"t":"Now let's change this so that Anne no longer has a reader relationship to tweet:1 by deleting the tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ { user: 'user:anne', relation: 'reader', object: 'tweet:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"reader\"), Object: fgaSdk.PtrString(\"tweet:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"reader\", Object = \"tweet:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"reader\", object=\"tweet:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"tweet:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ { \"user\":\"user:anne\", \"relation\":\"reader\", \"object\":\"tweet:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") With this, we have removed the direct relationship between Anne and tweet:1. And because our type definition for reader does not include any other relations, a call to the Check API will now return a negative response. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'tweet:1', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"tweet:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"tweet:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"tweet:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"tweet:1\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"tweet:1\", // with the object `tweet:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"02. Removing Direct Relationship","u":"/docs/interacting/managing-user-access","h":"#02-removing-direct-relationship","p":235},{"i":249,"t":"Check the following sections for more on how to manage user access. Direct Access Learn about how to model granting user access to an object. More Modeling Public Access Learn about how to model granting public access. More How to update relationship tuples Learn about how to update relationship tuples in SDK. More","s":"Related Sections","u":"/docs/interacting/managing-user-access","h":"#related-sections","p":235},{"i":251,"t":"This section illustrates how to call the Read Changes API to get the list of relationship tuple changes that happened in your store, in the exact order that they happened. The API response includes tuples that have been added or removed in your store. It does not include other changes, like updates to your authorization model and adding new assertions.","s":"How to get tuple changes","u":"/docs/interacting/read-tuple-changes","h":"","p":250},{"i":253,"t":"Node.js Go .NET Python curl Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and added some relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model and added some relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have installed the SDK. You have configured the authorization model. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables. Deploy an instance of the OpenFGA server, and have ready the values for your setup: FGA_STORE_ID, FGA_API_HOST and, if needed, FGA_API_TOKEN. You have configured the authorization model and added some relationship tuples. You have loaded FGA_STORE_ID and FGA_API_HOST as environment variables.","s":"Before you start","u":"/docs/interacting/read-tuple-changes","h":"#before-you-start","p":250},{"i":255,"t":"To get a chronologically ordered list of tuples that have been written or deleted in your store, you can do so by calling the Read Changes API.","s":"Step By Step","u":"/docs/interacting/read-tuple-changes","h":"#step-by-step","p":250},{"i":257,"t":"First you will need to configure the API client. Node.js Go .NET Python curl // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) To obtain the access token: Set FGA_API_URL according to the service you are using","s":"01. Configure The OpenFGA API Client","u":"/docs/interacting/read-tuple-changes","h":"#01-configure-the--api-client","p":250},{"i":259,"t":"To get a paginated list of changes that happened in your store: Node.js Go .NET Python curl var type = \"\"; var continuationToken = \"\"; var pageSize = 25; await fgaClient.readChanges(type, pageSize, continuationToken); data, response, err := fgaClient.OpenFgaApi.ReadChanges(context.Background()). PageSize(25). Execute() if err != nil { // .. Handle error } var type = \"\"; var continuationToken = \"\"; var pageSize = 25; await fgaClient.ReadChanges(type, pageSize, continuationToken); async def read_changes(): response = await fga_client_instance.read_changes( page_size=\"25\", ) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/changes \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"page_size\": 25}' The result will contain an array of up to 25 tuples, with the operation (write or delete), and the timestamp in which that operation took place. The result will also contain a continuation token. Save the continuation token in persistent storage between calls so that it is not lost and you do not have to restart from scratch on system restart or on error. You can then use this token to get the next set of changes: Node.js Go .NET Python curl var type = \"\"; var continuationToken = \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"; var pageSize = 25; await fgaClient.readChanges(type, pageSize, continuationToken); data, response, err := fgaClient.OpenFgaApi.ReadChanges(context.Background()). PageSize(25). ContinuationToken(\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"). Execute() if err != nil { // .. Handle error } var type = \"\"; var continuationToken = \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"; var pageSize = 25; await fgaClient.ReadChanges(type, pageSize, continuationToken); async def read_changes(): response = await fga_client_instance.read_changes( page_size=\"25\", continuation_token=\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\", ) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/changes \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\", \"page_size\": 25}' Once there are no more changes to retrieve, the API will return the same token as the one you sent. Save the token in persistent storage to use at a later time. note The default page size is 50. The maximum page size allowed is 100. The API response will not return all the changes immediately. There will be a delay of one minute between the time that you add or delete a tuple and the time that you see it in the Read Changes API response. The API response does not expand the tuples. If you wrote a tuple that includes a userset, like {\"user\": \"group:abc#member\", \"relation\": \"owner\": \"doc:budget\"}, the Read Changes API will return that exact tuple.","s":"02. Get Changes For All Object Types","u":"/docs/interacting/read-tuple-changes","h":"#02-get-changes-for-all-object-types","p":250},{"i":261,"t":"Imagine you have the following authorization model: DSL JSON model schema 1.1 type user type group relations define member: [user] type folder relations define owner: [group#member,user] type doc relations define owner: [group#member,user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"group\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"group\", \"relation\": \"member\" }, { \"type\": \"user\" } ] } } } }, { \"type\": \"doc\", \"relations\": { \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"group\", \"relation\": \"member\" }, { \"type\": \"user\" } ] } } } } ] } It is possible to get a list of changes that happened in your store that relate only to one specific object type, like folder, by issuing a call like this: Node.js Go .NET Python curl var type = \"folder\"; var continuationToken = \"\"; var pageSize = 25; await fgaClient.readChanges(type, pageSize, continuationToken); data, response, err := fgaClient.OpenFgaApi.ReadChanges(context.Background()). Type_(\"folder\"). PageSize(25). Execute() if err != nil { // .. Handle error } var type = \"folder\"; var continuationToken = \"\"; var pageSize = 25; await fgaClient.ReadChanges(type, pageSize, continuationToken); async def read_changes(): response = await fga_client_instance.read_changes( type=\"folder\", page_size=\"25\", ) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/changes \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"type\": folder\", \"page_size\": 25}' The response will include a continuation token. In subsequent calls, you have to include the token and the type. (If you send this continuation token without the type parameter set, you will get an error). Node.js Go .NET Python curl var type = \"folder\"; var continuationToken = \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"; var pageSize = 25; await fgaClient.readChanges(type, pageSize, continuationToken); data, response, err := fgaClient.OpenFgaApi.ReadChanges(context.Background()). Type_(\"folder\"). PageSize(25). ContinuationToken(\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"). Execute() if err != nil { // .. Handle error } var type = \"folder\"; var continuationToken = \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\"; var pageSize = 25; await fgaClient.ReadChanges(type, pageSize, continuationToken); async def read_changes(): response = await fga_client_instance.read_changes( type=\"folder\", page_size=\"25\", continuation_token=\"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\", ) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/changes \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"type\": folder\", \"continuation_token\": \"eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==\", \"page_size\": 25}'","s":"03. Get Changes For A Specific Object Type","u":"/docs/interacting/read-tuple-changes","h":"#03-get-changes-for-a-specific-object-type","p":250},{"i":263,"t":"Once you implement fine-grained authorization to protect your resources, search becomes a more complex problem, because the user's access to each resource now has to be validated before the resource can be shown. The search problem can then be summarized as: \"Given a particular search filter and a sort order, what objects can the user access\"? The OpenFGA service does not store object metadata (names of files, creation dates, time of last update, etc), which means completing any search request by filtering and sorting according to certain criteria will require data from your database. The services responsible for performing these actions are: Filter: Your database Sort: Your database Authorize: OpenFGA To return the set of results that match the user's search query, you will need to get the intersection of the results from the services above.","s":"Search With Permissions","u":"/docs/interacting/search-with-permissions","h":"","p":262},{"i":265,"t":"There are three possible ways to do this:","s":"Possible Options","u":"/docs/interacting/search-with-permissions","h":"#possible-options","p":262},{"i":267,"t":"Pre-filter, then call OpenFGA Check endpoint. Filter and sort on your database. Call /check in parallel on each object returned from your database. Filter out objects the user does not have access to. Return the filtered result to the user.","s":"Option 1: Search, Then Check","u":"/docs/interacting/search-with-permissions","h":"#option-1-search-then-check","p":262},{"i":269,"t":"Consume the GET /changes endpoint to create a local index you can use to do an intersection on the two sets of results. Call the OpenFGA changes API. For the particular authorization model version(s) you are using in production, flatten/expand the changes (e.g. user:anne, writer, doc:planning becomes two tuples: user:anne, writer, doc:planning and user:anne, reader, doc:planning). Build the intersection between the objects in your database and the flattened/expanded state you created. You can then call /check on each resource in the resulting set before returning the response to filter out any resource with permissions revoked but whose authorization data has not made it into your index yet.","s":"Option 2: Build A Local Index From Changes Endpoint, Search, Then Check","u":"/docs/interacting/search-with-permissions","h":"#option-2-build-a-local-index-from-changes-endpoint-search-then-check","p":262},{"i":271,"t":"Call the GET /list-objects API to get a list of object IDs the user has access to, then run the filter restricting by the object IDs returned. Call the OpenFGA List Objects API. to get the list of all resources a user can access. Pass in the set of object IDs to the database query to limit the search. Return the filtered result to the user.","s":"Option 3: Build A List Of IDs, Then Search","u":"/docs/interacting/search-with-permissions","h":"#option-3-build-a-list-of-ids-then-search","p":262},{"i":273,"t":"Which option to choose among the three listed above depends on the following criteria: Number of objects that your database can return from a search query Number of objects of a certain type the user could have access to Percentage of objects in a type the user could have access to Consider the following scenarios: A. The number of objects a search query could return from the database is low. Search then Check is the recommended solution. Use-case: Situations where the search query can be optimized to return a small number of results. B. The number of objects of a certain type the user could have access to is low, and the percentage of objects in a namespace a user could have access to is high. Search then Check is recommended to get the final list of results. Note that this use case, because the user has access to a low number of objects which are still a high percentage of the total objects in the system, that means that the total number of objects in the system is low. C. The number of objects of a certain type the user could have access to is low (~ 100), and the percentage of the total objects that the user can have access to is also low. In this case, an API to return the list of all objects a user can access would make sense. You can query this API to get a list of object IDs and then pass these IDs to your filter function to limit the search to them. As this number increases, this solution becomes impractical, because you would need to paginate over multiple pages to get the entire list before being able to search and sort. A partial list from the API is not enough, because you won't be able to sort using it. So while List of IDs then Search would be useful for this in some situations, we would recommend Local Index from Changes Endpoint, Search then Check for the cases when the number of objects is high enough. Until OpenFGA implements an endpoint to return a list of object IDs, local index is recommended for all situations. D. The number of objects of a certain type the user could have access to is high, and the percentage of the total objects that the user can have access to is low. The recommended option for this case is to use Local Index from Changes Endpoint, Search then Check. List of IDs then Search would not work because you would have to get and paginate across thousands or tens of thousands (or in some cases more) of results from OpenFGA, only after you have retrieved the entire set can you start searching within your database for matching results. This would mean that your user could be waiting for a long time before they can start seeing results. Search then Check would also not be ideal, as you will be retrieving and checking against a lot of items and discarding most of them. Use case: Searching in Google Drive, where the list of documents and folders that a user has access to can be very high, but it still is a small percentage of the entire set of documents in Google Drive. E. The number of objects of a certain type the user could have access to is high, and the percentage of the total objects that the user can have access to is also high. In this case a Local Index from Changes Endpoint, Search then Check would be useful. If you do not want to maintain a local index, and if the user can access a high percentage of the total, meaning that the user is more likely than not to have access to the results returned by the search query, then Search then Check would work just as well. Use-case: Searching on Twitter. Most Twitter users have their profiles set to public, so the user is more likely to have access to the tweets when performing a search. So searching first then running checks against the set of returned results would be appropriate.","s":"Choosing The Best Option","u":"/docs/interacting/search-with-permissions","h":"#choosing-the-best-option","p":262},{"i":275,"t":"Scenario Use Case # of objects returned from database query # of objects user can access in a type % of objects user can access in a type Preferred Option A Search criteria enough to narrow down results Low - - 1 B Few objects the user has access to, but still a high % of total objects Low Low High 1 C Cannot narrow down search results, very high probability search returns objects user cannot access, total number of objects user can access is low enough to fit in a response High Low Low 3 or 2 D Google Drive: User has access to a lot of documents, but low percentage from total High High Low 2 E Twitter Search: Most profiles are public, and the user can access them High High High 1 or 2","s":"Summary","u":"/docs/interacting/search-with-permissions","h":"#summary","p":262},{"i":277,"t":"In this guide you will learn how to update multiple relationship tuples in a single transaction. When to use Updating multiple relationship tuples is useful to keep system state consistent.","s":"Transactional Writes","u":"/docs/interacting/transactional-writes","h":"","p":276},{"i":279,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called tweet that can have a reader. You have another type called user that can have a follower and followed_by relationship. DSL JSON model schema 1.1 type tweet relations define viewer: [user,user:*,user#follower] type user relations define follower: [user] define followed_by: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"tweet\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} }, { \"type\": \"user\", \"relation\": \"follower\" } ] } } } }, { \"type\": \"user\", \"relations\": { \"follower\": { \"this\": {} }, \"followed_by\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"follower\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"followed_by\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí Modeling Public Access‚Äã You need to know how to grant public access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/interacting/transactional-writes","h":"#before-you-start","p":276},{"i":281,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/interacting/transactional-writes","h":"#direct-access","p":276},{"i":283,"t":"You need to know how to grant public access to an object. Learn more ‚Üí","s":"Modeling Public Access","u":"/docs/interacting/transactional-writes","h":"#modeling-public-access","p":276},{"i":285,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/transactional-writes","h":"#-concepts","p":276},{"i":288,"t":"When you need to add or delete tuples in your store, you can do so by calling the Write API. For example, if you want to make tweet:1 public by making everyone a viewer, you write one tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:*', relation: 'viewer', object: 'tweet:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:*\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"tweet:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:*\", Relation = \"viewer\", Object = \"tweet:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:*\", relation=\"viewer\", object=\"tweet:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"tweet:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:*\", \"relation\":\"viewer\", \"object\":\"tweet:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") And if you want to convert this tweet to private, you would need to delete that tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ { user: 'user:*', relation: 'viewer', object: 'tweet:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:*\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"tweet:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:*\", Relation = \"viewer\", Object = \"tweet:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:*\", relation=\"viewer\", object=\"tweet:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"tweet:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ { \"user\":\"user:*\", \"relation\":\"viewer\", \"object\":\"tweet:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") By removing the tuple, we made the tweet visible to no-one, which may not be what we want. The Write API allows you to send up to 10 unique tuples in the request. (This limit applies to the sum of both writes and deletes in that request). This means we can submit one API call that converts the tweet from public to visible to only the user's followers. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne's followers can view tweet:1 { user: 'user:anne#follower', relation: 'viewer', object: 'tweet:1'} ] }, deletes: { tuple_keys : [ // tweet:1 is no longer viewable by everyone (*) { user: 'user:*', relation: 'viewer', object: 'tweet:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne's followers can view tweet:1 User: fgaSdk.PtrString(\"user:anne#follower\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"tweet:1\"), }, }, }, Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // tweet:1 is no longer viewable by everyone (*) User: fgaSdk.PtrString(\"user:*\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"tweet:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne's followers can view tweet:1 new() { User = \"user:anne#follower\", Relation = \"viewer\", Object = \"tweet:1\" } }), Deletes = new TupleKeys(new List<TupleKey>() { // tweet:1 is no longer viewable by everyone (*) new() { User = \"user:*\", Relation = \"viewer\", Object = \"tweet:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne's followers can view tweet:1 user=\"user:anne#follower\", relation=\"viewer\", object=\"tweet:1\", ), ], ), deletes=TupleKeys( tuple_keys=[ TupleKey( # tweet:1 is no longer viewable by everyone (*) user=\"user:*\", relation=\"viewer\", object=\"tweet:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne#follower\",\"relation\":\"viewer\",\"object\":\"tweet:1\"}] },\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"tweet:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne's followers can view tweet:1 { \"user\":\"user:anne#follower\", \"relation\":\"viewer\", \"object\":\"tweet:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), delete([ // tweet:1 is no longer viewable by everyone (*) { \"user\":\"user:*\", \"relation\":\"viewer\", \"object\":\"tweet:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"01. Adding And Removing Relationship Tuples In The Same Transaction","u":"/docs/interacting/transactional-writes","h":"#01-adding-and-removing-relationship-tuples-in-the-same-transaction","p":276},{"i":290,"t":"Having the ability to send multiple tuples per request is also useful when you want to maintain consistency. For example, if anne starts following becky, we want to be able to save the following two tuples, or neither of them: [ // Anne is a follower of Becky { \"user\": \"user:anne\", \"relation\": \"follower\", \"object\": \"user:becky\", }, // Becky is followed by Anne { \"user\": \"user:becky\", \"relation\": \"followed_by\", \"object\": \"user:anne\", }, ] info We have a type called user in this case because users can be related to each other, so the users now are a type in the system The OpenFGA service will attempt to perform all the changes sent in a single Write API call in one transaction. If it can't (for example, if any of the requested changes fails), it will reject all of the changes.","s":"02. Adding Multiple Related Relationship Tuples In The Same Transaction","u":"/docs/interacting/transactional-writes","h":"#02-adding-multiple-related-relationship-tuples-in-the-same-transaction","p":276},{"i":292,"t":"Check the following sections for more on how to update tuples. Update relationship tuples in SDK Learn about how to update relationship tuples in SDK. More OpenFGA API Details on the write API in the OpenFGA reference guide. More","s":"Related Sections","u":"/docs/interacting/transactional-writes","h":"#related-sections","p":276},{"i":294,"t":"This section has guides, concepts and examples that help you define an authorization model. When to use The content in this section is useful: If you are starting with OpenFGA and want to learn how to represent your organization's/system's authorization needs. If you are working on iterating on an authorization model you previously defined.","s":"Modeling Guides","u":"/docs/modeling","h":"","p":293},{"i":296,"t":"Getting Started How to create an authorization model for your system starting from the requirements. Click to navigate Direct Access Learn the basics of modeling authorization and granting access to users. Click to navigate User Groups Learn to model user group membership, and to grant access to all members of a group. Click to navigate Roles and Permissions Learn to model roles for users at the object level and model permissions for those roles. Click to navigate Parent-Child objects Learn to model access based on parent-child relationships, e.g.: folders and documents. Click to navigate Block Lists Learn to model denying access if users are part of list of blocked users. Click to navigate Public Access Learn to model giving everyone specific access to an object, e.g.: everyone can read. Click to navigate Multiple Restrictions Learn to model requiring multiple privileges before granting access. Click to navigate Custom Roles Learn to model custom roles that are created by users. Click to navigate Contextual and Time-Based Authorization Learn to model and authorize when IP Address, time, and other dynamic and contextual restrictions are involved. Click to navigate Authorization Through Organization Context Learn to model and authorize when a user belongs to multiple organizations. Click to navigate Building Blocks Learn the underlying concepts/building blocks that can be used to build any model. Click to navigate Advanced Use-Cases Explore advanced use cases and patterns for authorization modeling with OpenFGA. Click to navigate Migrating Learn to migrate relations and models in a production environment. Click to navigate","s":"Content","u":"/docs/modeling","h":"","p":293},{"i":298,"t":"This section will present advanced use cases and patterns for authorization modeling with OpenFGA. When to use The content in this section is useful if you would like to follow an end-to-end tutorial on how to build an authorization model for a common use-case or pattern.","s":"Advanced Use-Cases","u":"/docs/modeling/advanced","h":"","p":297},{"i":300,"t":"Google Drive How to create an authorization model for your system starting from the requirements. Click to navigate GitHub How to create an authorization model for your system starting from the requirements. Click to navigate IoT How to create an authorization model for your system starting from the requirements. Click to navigate Slack How to create an authorization model for your system starting from the requirements. Click to navigate","s":"Use-cases","u":"/docs/modeling/advanced","h":"#use-cases","p":297},{"i":302,"t":"Entitlements How to create an authorization model for your system starting from the requirements. Click to navigate","s":"Patterns","u":"/docs/modeling/advanced","h":"#patterns","p":297},{"i":304,"t":"In this guide you'll see how to model preventing users from accessing objects using OpenFGA. For example, blocking users from accessing a document, even if it has been already shared with them. When to use Exclusion is useful while building applications. You may need to support access patterns like granting access to some users, but excluding specific people or groups, similar to how users can block others from following them on social media, or prevent them from sharing documents on Google Drive. This is useful when: Implementing the \"blocking\" feature, such as the profile blocking commonly present on social media platforms (e.g. Instagram and Twitter). Reduce a user's access if they are part of a particular group (e.g. restricting access to members who are also guests, or restricting access to users in a certain locality).","s":"Blocklists","u":"/docs/modeling/blocklists","h":"","p":303},{"i":306,"t":"Before you start this guide, make sure you're familiar with some OpenFGA Concepts and know how to develop the things listed below. You will start with the authorization model below, it represents a document type that can have users related as editor, and team type that can have users related as member. Let us also assume that we have a document called \"planning\", shared for editing within the product team (comprised of becky and carl). DSL JSON model schema 1.1 type user type document relations define editor: [user,team#member] type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The current state of the system is represented by the following relationship tuples being in the system already: [ // Members of the product team can edit the planning document { \"user\": \"team:product#member\", \"relation\": \"editor\", \"object\": \"document:planning\", }, // Becky is a member of the product team { \"user\": \"user:becky\", \"relation\": \"member\", \"object\": \"team:product\", }, // Carl is a member of the product team { \"user\": \"user:carl\", \"relation\": \"member\", \"object\": \"team:product\", }, ] In addition, you will need to know the following: Modeling User Groups‚Äã You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Exclusion Operator: the exclusion operator can be used to exclude certain usersets from being related to an object","s":"Before You Start","u":"/docs/modeling/blocklists","h":"#before-you-start","p":303},{"i":308,"t":"You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí","s":"Modeling User Groups","u":"/docs/modeling/blocklists","h":"#modeling-user-groups","p":303},{"i":310,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Exclusion Operator: the exclusion operator can be used to exclude certain usersets from being related to an object","s":"OpenFGA Concepts","u":"/docs/modeling/blocklists","h":"#-concepts","p":303},{"i":312,"t":"With the above authorization model and relationship tuples, OpenFGA will correctly respond with {\"allowed\":true} when check is called to see if Carl and Becky can edit this document. We can verify that by issuing two check requests: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'editor', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"editor\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"editor\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"editor\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"editor\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"editor\", // has an `editor` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'editor', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"editor\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"editor\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"editor\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"editor\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:carl\", // check if the user `user:carl` relation = \"editor\", // has an `editor` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We want to share a document with the product team and also have the ability to deny certain users access, even if they have the document shared with them already. We can verify this by blocking Carl (who we have seen already has edit access) from editing the document. In order to do that, we need to: Modify our model to allow indicating that users can be blocked from accessing a document Modify our model to indicate that users who are blocked can no longer edit the document Verify that our solution works: a. Indicate that Carl is blocked from the planning document b. Carl (now blocked) can no longer edit the document c. Becky still has edit access","s":"Step By Step","u":"/docs/modeling/blocklists","h":"#step-by-step","p":303},{"i":314,"t":"To allow users to be \"blocked\" from accessing a document, we first need to allow this relation. We'll update our store model to add a blocked relation to the document type. The authorization model becomes this: DSL JSON model schema 1.1 type user type document relations define blocked: [user] define editor: [user,team#member] type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"blocked\": { \"this\": {} }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"blocked\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Now we can add relationship tuples indicating that a certain user is blocked from editing a document.","s":"01. Modify Our Model So Users Can Be Blocked From Accessing A Document","u":"/docs/modeling/blocklists","h":"#01-modify-our-model-so-users-can-be-blocked-from-accessing-a-document","p":303},{"i":316,"t":"Now that we can mark users as blocked from editing documents, we need to support denying the editor relationship when a user is blocked. We do that by modifying the relation definition of editor, and making use of the the exclusion operator to exclude the set of blocked users, as we can see here: DSL JSON model schema 1.1 type user type document relations define blocked: [user] define editor: [user,team#member] but not blocked type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"blocked\": { \"this\": {} }, \"editor\": { \"difference\": { \"base\": { \"this\": {} }, \"subtract\": { \"computedUserset\": { \"relation\": \"blocked\" } } } } }, \"metadata\": { \"relations\": { \"blocked\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"02. Modify Our Model So Users Who Are Blocked Can No Longer Edit The Document","u":"/docs/modeling/blocklists","h":"#02-modify-our-model-so-users-who-are-blocked-can-no-longer-edit-the-document","p":303},{"i":318,"t":"To check if our new model works, we'll add a relationship tuple with Carl as blocked from document:planning and then verify that Carl no longer has editor access to that document. a. Indicate That Carl Is Blocked From The Planning Document‚Äã With our modified authorization model, we can indicate that Carl is blocked by adding this relationship tuple. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Carl is blocked from editing the planning document { user: 'user:carl', relation: 'blocked', object: 'document:planning'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Carl is blocked from editing the planning document User: fgaSdk.PtrString(\"user:carl\"), Relation: fgaSdk.PtrString(\"blocked\"), Object: fgaSdk.PtrString(\"document:planning\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Carl is blocked from editing the planning document new() { User = \"user:carl\", Relation = \"blocked\", Object = \"document:planning\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Carl is blocked from editing the planning document user=\"user:carl\", relation=\"blocked\", object=\"document:planning\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:carl\",\"relation\":\"blocked\",\"object\":\"document:planning\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Carl is blocked from editing the planning document { \"user\":\"user:carl\", \"relation\":\"blocked\", \"object\":\"document:planning\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") b. Carl (now blocked) Can No Longer Edit The Document‚Äã We have modified the authorization model and added relationship tuples to indicate that Carl is blocked. Now let's make sure our solution works as expected. To check if Carl still has access to the document, we can issue a check request with Carl as the user. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'editor', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"editor\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"editor\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"editor\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"editor\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:carl\", // check if the user `user:carl` relation = \"editor\", // has an `editor` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false The response is false, so our solution is working as expected. c. Becky Still Has Edit Access‚Äã To check if Becky still has access to the document, we'll issue another check request with Becky as the user. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'editor', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"editor\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"editor\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"editor\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"editor\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"editor\", // has an `editor` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The response is true, indicating our model change did not inadvertently deny access for users who have access but are not blocked. caution Note: When creating tuples for OpenFGA make sure to use unique ids for each object and user within your application domain. We are using first names and human-readable identifiers to make this task easier to read.","s":"03. Verify Our Solution Works","u":"/docs/modeling/blocklists","h":"#03-verify-our-solution-works","p":303},{"i":320,"t":"Check the following sections for more on how to model with OpenFGA. Modeling: Getting Started Learn about how to get started with modeling. More Configuration Language Learn about OpenFGA Configuration Language. More Public Access Learn about model public access. More","s":"Related Sections","u":"/docs/modeling/blocklists","h":"#related-sections","p":303},{"i":322,"t":"This section has guides that on the building blocks of authorization model. When to use The content in this section is useful: If you are starting with OpenFGA and want to learn the building blocks that can be used to build any model.","s":"Building Blocks","u":"/docs/modeling/building-blocks","h":"","p":321},{"i":324,"t":"Direct Relationships Learn to model relationships that may or may not be assigned directly to individual users. Click to navigate Concentric Relationships Learn to model nested relationships in your application. Click to navigate Object to Object Relationships Learn to model your application with objects that are not specifically tied to a user. Click to navigate Usersets Learn to model your application by assigning relationships to groups of users. Click to navigate","s":"Content","u":"/docs/modeling/building-blocks","h":"","p":321},{"i":326,"t":"In this short guide, you'll learn how to represent a concentric relationships. For example, if you want to have all editors of a document also be viewers of said document. When to use Concentric relations make the most sense when your domain logic has nested relations, where one having relation implies having another relation. For example: all editors are viewers all managers are members all device_managers are device_renamers This allows you to only create a single relationship tuple rather than creating n relationship tuples for each relation.","s":"Concentric Relationships","u":"/docs/modeling/building-blocks/concentric-relationships","h":"","p":325},{"i":328,"t":"To better understand this guide, you should be familiar with some OpenFGA Concepts and know how to develop the things listed below. You will start with the authorization model below, it represents a document type that can have users related as editor and viewer. Let us also assume that we have a document called \"meeting_notes.doc\" and bob is assigned as editor to this document. DSL JSON model schema 1.1 type user type document relations define viewer: [user] define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The current state of the system is represented by the following relationship tuples being in the system already: [ { \"user\": \"user:bob\", \"relation\": \"editor\", \"object\": \"document:meeting_notes.doc\", }, ] In addition, you will need to know the following: Modeling User Groups‚Äã You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#before-you-start","p":325},{"i":330,"t":"You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí","s":"Modeling User Groups","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#modeling-user-groups","p":325},{"i":332,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#-concepts","p":325},{"i":334,"t":"With the current type definition, there isn't a way to indicate that all editors of a certain document are also automatically viewers of that document. So for a certain user, in order to indicate that they can both edit and view a certain document, two relationship tuples need to be created (one for editor, and another for viewer).","s":"Step By Step","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#step-by-step","p":325},{"i":336,"t":"Instead of creating two relationship tuples, we can leverage concentric relationships by defining editors are viewers. Our authorization model becomes the following: DSL JSON model schema 1.1 type user type document relations define viewer: [user] or editor define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info viewer of a document are any of: users that are directly assigned as viewer users that have editor of the document With this authorization model change, having an editor relationship with a certain document implies having a viewer relationship with that same document.","s":"01. Modify Our Model To Imply Editor As Viewer","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#01-modify-our-model-to-imply-editor-as-viewer","p":325},{"i":338,"t":"Since we had a relationship tuple that indicates that bob is an editor of document:meeting_notes.doc, this means bob is now implicitly a viewer of document:meeting_notes.doc. If we now check: is bob a viewer of document:meeting_notes.doc? we would get the following: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'viewer', object: 'document:meeting_notes.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"viewer\", Object: \"document:meeting_notes.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"viewer\", Object = \"document:meeting_notes.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"viewer\", object=\"document:meeting_notes.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"viewer\",\"object\":\"document:meeting_notes.doc\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"viewer\", // has an `viewer` relation object = \"document:meeting_notes.doc\", // with the object `document:meeting_notes.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Note When creating relationship tuples for OpenFGA make sure to use unique ids for each object and user within your application domain. We're using first names and simple ids to just illustrate an easy-to-follow example.","s":"02. Check That Editors Are Viewers","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#02-check-that-editors-are-viewers","p":325},{"i":340,"t":"Check the following sections for more on how concentric relationships can be used. Modeling Google Drive See how to indicate that editors are commenters and viewers in Google Drive. More Modeling GitHub See how to indicate that repository admins are writers and readers in GitHub. More","s":"Related Sections","u":"/docs/modeling/building-blocks/concentric-relationships","h":"#related-sections","p":325},{"i":343,"t":"A userset represents a set or collection of users. Usersets can be used to indicate that a group of users in the system have a certain relation with an object. This can be used to assign permissions to groups of users rather than specific ones, allowing us to represent the permissions in our system using less tuples and granting us flexibility in granting or denying access in bulk. In OpenFGA, usersets are represented via this notation: object#relation, where object is made up of a type and an object identifier. For example: company:xyz#employee represents all users that are related to company:xyz as employee tweet:12345#viewer represents all users that are related to tweet:12345 as viewer","s":"What Is A Userset?","u":"/docs/modeling/building-blocks/usersets","h":"#what-is-a-userset","p":341},{"i":345,"t":"Imagine the following authorization model: DSL JSON model schema 1.1 type user type org relations define member: [user] type document relations define reader: [user,org#member] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"org\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"reader\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"org\", \"relation\": \"member\" } ] } } } } ] } Now let us assume that the store has the following tuples: [ // Userset \"Members of the xyz org\" can read the budget document { \"user\": \"org:xyz#member\", \"relation\": \"reader\", \"object\": \"document:budget\", }, // Anne is part of the userset \"Members of the xyz org\" { \"user\": \"user:anne\", \"relation\": \"member\", \"object\": \"org:xyz\", }, ] If we call the check API to see if user anne has a reader relationship with document:budget, OpenFGA will check whether anne is part of the userset that does have a reader relationship. Because she is part of that userset, the request will return true: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'document:budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"document:budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"document:budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"document:budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:budget\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"document:budget\", // with the object `document:budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"How Do Check Requests Work With Usersets?","u":"/docs/modeling/building-blocks/usersets","h":"#how-do-check-requests-work-with-usersets","p":341},{"i":347,"t":"Imagine the following authorization model: DSL JSON model schema 1.1 type user type document relations define writer: [user,org#member] define reader: [user,org#member] or writer { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"writer\": { \"this\": {} }, \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"org\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"org\", \"relation\": \"member\" } ] } } } } ] } If we wanted to see which users and usersets have a reader relationship with document:budget, we can call the Expand API. The response will contain a userset tree where the leaf nodes are specific user IDs and usersets. For example: { \"tree\": { \"root\": { \"type\": \"document:budget#reader\", \"union\": { \"nodes\": [ { \"type\": \"document:budget#reader\", \"leaf\": { \"users\": { \"users\": [\"user:bob\"] } } }, { \"type\": \"document:budget#reader\", \"leaf\": { \"computed\": { \"userset\": \"document:budget#writer\" } } } ] } } } } As you can see from the response above, with usersets we can express unions of user groups. We can also express intersections and exclusions.","s":"How Do Expand Requests Work With Usersets?","u":"/docs/modeling/building-blocks/usersets","h":"#how-do-expand-requests-work-with-usersets","p":341},{"i":349,"t":"Using the type definitions in the authorization model, some of the situations we can represent are: that a user is not in a set of users having a certain relation to an object, even if a relationship tuple exists in the system. See Disabling Direct Relationships that a user has a certain relationship with an object if they are in the union, intersection or exclusion of usersets. that a user being in a set of users having a certain relation to an object can result in them having another relation to the object. See Concentric Relationships that the user being in a set of users having a certain relation to an object and that object is in a set of users having a certain relation to another object, can imply that the original user has a certain relationship to the final object. See Object-to-Object Relationships When executing the Check API of the form check(user, relation, object), OpenFGA will perform the following steps: In the authorization model, look up type and its relation. Start building a tree where the root node will be the definition of that relation, which can be a union, exclusion, or intersection of usersets, or it can be direct users. Expand all the usersets involved into new nodes in the tree. This means recursively finding all the users that are members of the usersets. If there are direct relationships with users, create leaf nodes. Check whether user is a leaf node in the tree. If the API finds one match, it will return immediately and will not expand the remaining nodes.","s":"Internals","u":"/docs/modeling/building-blocks/usersets","h":"#internals","p":341},{"i":351,"t":"See the following sections for more information: Managing Group Membership How to add users to a userset More Managing Group Access How to add permissions to a userset More","s":"Related Sections","u":"/docs/modeling/building-blocks/usersets","h":"#related-sections","p":341},{"i":353,"t":"In this guide you'll learn how to model custom roles in your system using OpenFGA. For example, a Business-to-Business (B2B) application could allow customers to create their own custom roles on the application to grant their users. When to use In many cases, roles would fit in well as relations on an object type, as seen in Modeling Roles and Permissions. In some cases, however, they may not be enough. Custom roles are useful when: Users of the application are able to create arbitrary sets of roles with different permissions that govern the users' access to objects. It is not known beforehand (at the time of Authorization Model creation) what the application roles are. The team responsible for building the authorization model is different from the teams responsible for defining roles and access to the application.","s":"Custom Roles","u":"/docs/modeling/custom-roles","h":"","p":352},{"i":355,"t":"Before you start this guide, make sure you're familiar with some OpenFGA Concepts and know how to develop the things listed below. Initial Model‚Äã To start, let's say there is an application with a type called asset-category. Users can have view and/or edit access to assets in that category. Any user who can edit can also view. We'll start with the following authorization model showing a system with an asset-category type. This type allows users to have view and edit access to it. DSL JSON model schema 1.1 type user type asset-category relations define viewer: [user] or editor define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"asset-category\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you'll need to know the following: Modeling Roles and Permissions‚Äã You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí Modeling Object-to-Object Relationships‚Äã You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Concepts & Configuration Language‚Äã OpenFGA Concepts Configuration Language","s":"Before you start","u":"/docs/modeling/custom-roles","h":"#before-you-start","p":352},{"i":357,"t":"To start, let's say there is an application with a type called asset-category. Users can have view and/or edit access to assets in that category. Any user who can edit can also view.","s":"Initial Model","u":"/docs/modeling/custom-roles","h":"#initial-model","p":352},{"i":359,"t":"You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí","s":"Modeling Roles and Permissions","u":"/docs/modeling/custom-roles","h":"#modeling-roles-and-permissions","p":352},{"i":361,"t":"You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí","s":"Modeling Object-to-Object Relationships","u":"/docs/modeling/custom-roles","h":"#modeling-object-to-object-relationships","p":352},{"i":363,"t":"OpenFGA Concepts Configuration Language","s":"Concepts & Configuration Language","u":"/docs/modeling/custom-roles","h":"#concepts--configuration-language","p":352},{"i":365,"t":"Starting with the authorization model mentioned above, we want to enable users to create their own custom roles, and tie permissions to those roles to our two users and to the permissions on the logo asset category. For this guide, we'll model a scenario where a certain organization using our app has created an asset-category called \"logos\", and another called \"text content\". The company administrator would like to create: a media-manager role that allows users to edit assets in the logos asset category a media-viewer role that allows users to view all assets in the logos asset category a blog-editor role that allows users to edit all assets in the text content asset category a blog-viewer role that allows users to view all assets in the text content asset category Imagine these are what the permissions the roles in one organization using our service are like: Finally, the administrator wants to assign Anne the media-manager role and Beth the media-viewer role. At the end, we'll verify our model by ensuring the following access check requests return the expected result. In order to do this, we need to: Update the Authorization Model to add a Role Type Use Relationship Tuples to tie the Users to the Roles Use Relationship Tuples to associate Permissions with the Roles Verify that the Authorization Model works","s":"Step By Step","u":"/docs/modeling/custom-roles","h":"#step-by-step","p":352},{"i":367,"t":"Because our roles are going to be dynamic and might change frequently, we represent them in a new type instead of as relations on that same type. We'll create new type called role, where users can be related as assignee to it. The authorization model becomes this: DSL JSON model schema 1.1 type user type asset-category relations define viewer: [user,role#assignee] or editor define editor: [user,role#assignee] type role relations define assignee: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"asset-category\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"role\", \"relation\": \"assignee\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"role\", \"relation\": \"assignee\" } ] } } } }, { \"type\": \"role\", \"relations\": { \"assignee\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"assignee\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } With this change we can add relationship tuples indicating that a certain user is assigned a certain role.","s":"01. Update The Authorization Model To Add A Role Type","u":"/docs/modeling/custom-roles","h":"#01-update-the-authorization-model-to-add-a-role-type","p":352},{"i":369,"t":"Once we've added the role type, we can assign roles to Anne and Beth. Anne is assigned the \"media-manager\" role and Beth is assigned the \"media-viewer\" role. We can do that by adding relationship tuples as follows: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is assigned the media-manager role { user: 'user:anne', relation: 'assignee', object: 'role:media-manager'}, // Beth is assigned the media-viewer role { user: 'user:beth', relation: 'assignee', object: 'role:media-viewer'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is assigned the media-manager role User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"assignee\"), Object: fgaSdk.PtrString(\"role:media-manager\"), }, { // Beth is assigned the media-viewer role User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"assignee\"), Object: fgaSdk.PtrString(\"role:media-viewer\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is assigned the media-manager role new() { User = \"user:anne\", Relation = \"assignee\", Object = \"role:media-manager\" }, // Beth is assigned the media-viewer role new() { User = \"user:beth\", Relation = \"assignee\", Object = \"role:media-viewer\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is assigned the media-manager role user=\"user:anne\", relation=\"assignee\", object=\"role:media-manager\", ), TupleKey( # Beth is assigned the media-viewer role user=\"user:beth\", relation=\"assignee\", object=\"role:media-viewer\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"assignee\",\"object\":\"role:media-manager\"},{\"user\":\"user:beth\",\"relation\":\"assignee\",\"object\":\"role:media-viewer\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is assigned the media-manager role { \"user\":\"user:anne\", \"relation\":\"assignee\", \"object\":\"role:media-manager\" }, // Beth is assigned the media-viewer role { \"user\":\"user:beth\", \"relation\":\"assignee\", \"object\":\"role:media-viewer\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") We can verify they are members of said roles by issuing the following check requests: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'assignee', object: 'role:media-manager', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"assignee\", Object: \"role:media-manager\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"assignee\", Object = \"role:media-manager\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"assignee\", object=\"role:media-manager\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"assignee\",\"object\":\"role:media-manager\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"assignee\", // has an `assignee` relation object = \"role:media-manager\", // with the object `role:media-manager` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02.Use Relationship Tuples To Tie The Users To The Roles","u":"/docs/modeling/custom-roles","h":"#02use-relationship-tuples-to-tie-the-users-to-the-roles","p":352},{"i":371,"t":"With our users and roles set up, we still need to tie members of a certain role to it's corresponding permission(s). Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Users assigned the media-manager role can edit in the Logos assets category { user: 'role:media-manager#assignee', relation: 'editor', object: 'asset-category:logos'}, // Users assigned the media-viewer role can view from the Logos assets category { user: 'role:media-viewer#assignee', relation: 'viewer', object: 'asset-category:logos'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Users assigned the media-manager role can edit in the Logos assets category User: fgaSdk.PtrString(\"role:media-manager#assignee\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"asset-category:logos\"), }, { // Users assigned the media-viewer role can view from the Logos assets category User: fgaSdk.PtrString(\"role:media-viewer#assignee\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"asset-category:logos\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Users assigned the media-manager role can edit in the Logos assets category new() { User = \"role:media-manager#assignee\", Relation = \"editor\", Object = \"asset-category:logos\" }, // Users assigned the media-viewer role can view from the Logos assets category new() { User = \"role:media-viewer#assignee\", Relation = \"viewer\", Object = \"asset-category:logos\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Users assigned the media-manager role can edit in the Logos assets category user=\"role:media-manager#assignee\", relation=\"editor\", object=\"asset-category:logos\", ), TupleKey( # Users assigned the media-viewer role can view from the Logos assets category user=\"role:media-viewer#assignee\", relation=\"viewer\", object=\"asset-category:logos\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"role:media-manager#assignee\",\"relation\":\"editor\",\"object\":\"asset-category:logos\"},{\"user\":\"role:media-viewer#assignee\",\"relation\":\"viewer\",\"object\":\"asset-category:logos\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Users assigned the media-manager role can edit in the Logos assets category { \"user\":\"role:media-manager#assignee\", \"relation\":\"editor\", \"object\":\"asset-category:logos\" }, // Users assigned the media-viewer role can view from the Logos assets category { \"user\":\"role:media-viewer#assignee\", \"relation\":\"viewer\", \"object\":\"asset-category:logos\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"03. Use Relationship Tuples To Associate Permissions With The Roles","u":"/docs/modeling/custom-roles","h":"#03-use-relationship-tuples-to-associate-permissions-with-the-roles","p":352},{"i":373,"t":"To ensure our model works, it needs to match our expectations: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'editor', object: 'asset-category:logos', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"editor\", Object: \"asset-category:logos\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"editor\", Object = \"asset-category:logos\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"editor\", object=\"asset-category:logos\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"asset-category:logos\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"editor\", // has an `editor` relation object = \"asset-category:logos\", // with the object `asset-category:logos` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The checks come back as we expect, so our model is working correctly.","s":"04. Verify That The Authorization Model Works","u":"/docs/modeling/custom-roles","h":"#04-verify-that-the-authorization-model-works","p":352},{"i":375,"t":"Check the following sections for more on how to model with OpenFGA. Modeling Roles and Permissions Learn how to remove the direct relationship to indicate nonassignable permissions. More Modeling Concepts: Object to Object Relationships Learn about how to model object to object relationships in OpenFGA. More","s":"Related Sections","u":"/docs/modeling/custom-roles","h":"#related-sections","p":352},{"i":377,"t":"In this guide you will learn how to grant a user access to an object (such as a certain document) in OpenFGA. When to use Granting access with relationship tuple is a core part of OpenFGA. Without them, any checks will fail. You should use: authorization model to represent what relations are possible between the users and objects in the system relationship tuples to represent the facts about the relationships between users and objects in your system.","s":"Direct Access","u":"/docs/modeling/direct-access","h":"","p":376},{"i":379,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called document that can have a viewer and/or an editor. DSL JSON model schema 1.1 type user type document relations define viewer: [user] define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before you start","u":"/docs/modeling/direct-access","h":"#before-you-start","p":376},{"i":381,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/modeling/direct-access","h":"#-concepts","p":376},{"i":383,"t":"For our applications to understand that user x has access to document y, we need to provide OpenFGA that information through relationship tuples. Each relationship tuple has three basic parameters, a user, a relation and an object.","s":"Step By Step","u":"/docs/modeling/direct-access","h":"#step-by-step","p":376},{"i":385,"t":"Let us add a relationship tuple to indicate that bob who is an editor of document:meeting_notes.doc. This is represented by adding the following: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:bob', relation: 'editor', object: 'document:meeting_notes.doc'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"document:meeting_notes.doc\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:bob\", Relation = \"editor\", Object = \"document:meeting_notes.doc\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:bob\", relation=\"editor\", object=\"document:meeting_notes.doc\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:bob\", \"relation\":\"editor\", \"object\":\"document:meeting_notes.doc\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"01. Create A Relationship Tuple","u":"/docs/modeling/direct-access","h":"#01-create-a-relationship-tuple","p":376},{"i":387,"t":"Once that relationship tuple is added to OpenFGA, we can check if the relationship is valid by asking the following: \"is bob an editor of document:meeting_notes.doc?\" Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'editor', object: 'document:meeting_notes.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"editor\", Object: \"document:meeting_notes.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"editor\", Object = \"document:meeting_notes.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"editor\", object=\"document:meeting_notes.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"editor\", // has an `editor` relation object = \"document:meeting_notes.doc\", // with the object `document:meeting_notes.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true If we were to check the following: \"is bob a viewer of document:meeting_notes.doc?\" it would return false since that relationship tuple does not exist within OpenFGA yet. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'viewer', object: 'document:meeting_notes.doc', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"viewer\", Object: \"document:meeting_notes.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"viewer\", Object = \"document:meeting_notes.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"viewer\", object=\"document:meeting_notes.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"viewer\",\"object\":\"document:meeting_notes.doc\"}}' # Response: {\"allowed\":false} check( user = \"user:bob\", // check if the user `user:bob` relation = \"viewer\", // has an `viewer` relation object = \"document:meeting_notes.doc\", // with the object `document:meeting_notes.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false caution Note: When creating relationship tuples for OpenFGA make sure to use unique ids for each object and user within your application domain. We're using first names and simple ids to just illustrate an easy-to-follow example.","s":"02. Check That The Relationship Exists","u":"/docs/modeling/direct-access","h":"#02-check-that-the-relationship-exists","p":376},{"i":389,"t":"Check the following sections for more on how to model with OpenFGA. OpenFGA Concepts Learn about the OpenFGA Concepts. More Modeling: Getting Started Learn about how to get started with modeling. More Configuration Language Learn about OpenFGA Configuration Language. More","s":"Related Sections","u":"/docs/modeling/direct-access","h":"#related-sections","p":376},{"i":391,"t":"Creating a Relationship Based Access Control (ReBAC) authorization model might feel odd at first. Most of us tend to think about authorization models in terms of roles and permissions. After all, most software works like that. Your existing systems are likely built on a model using roles and permissions. This guide outlines a process for defining your authorization model with OpenFGA.","s":"Get Started with Modeling","u":"/docs/modeling/getting-started","h":"","p":390},{"i":393,"t":"To define a ReBAC model in OpenFGA we recommend: If you have an existing system: forget about how your system works today and start thinking about how you want it to work in the future. Thinking about authorization starting from the resources, or objects as OpenFGA calls them. If that sounds hard, don't worry! We'll guide you through it. authorization checks ReBAC systems determine access from a user's relation to an object. Authorization decisions are then yes or no answers to the question: \"Does user U have relation R with object O?\". General Authorization Check \"Can user U perform an action A on object O?\" OpenFGA (ReBAC) Authorization Check \"Does user U have relation R with object O?\" In the previous example, a relation R should be defined that implies permission to action A. For example: General Authorization Check \"Can user Jane perform action view on object project sandcastle?\" OpenFGA (ReBAC) Authorization Check \"Can user Jane have relation view with object project sandcastle?\" We'll provide more detailed examples throughout this article. When you are modeling, you need to answer a more general question: Why could user U perform an action A on an object O? If you can answer that question for all types of objects in your system, then you can codify that into an authorization model. Let's get started!","s":"Introduction To Modeling","u":"/docs/modeling/getting-started","h":"#introduction-to-modeling","p":390},{"i":395,"t":"Defining an authorization model requires codifying an answer to the question \"why could user U perform an action A on an object O?\" for all use cases or actions in your system. This is an iterative process. For the purpose of this guide, we'll go through one iteration of this process using a simplified Google Drive like system as an example. Steps for defining your authorization model: Pick the most important feature List the object types List relations for those types Define relations Test the model Iterate","s":"A Process For Defining Authorization Models","u":"/docs/modeling/getting-started","h":"#a-process-for-defining-authorization-models","p":390},{"i":397,"t":"A feature, in the context of this document, is an action or related set of actions your users can perform in your system. We'll introduce an example feature later in this section. Start with the most important feature. It doesn't have to be the most complex one, but it should be the most important one. You're probably more familiar with the authorization requirements for this feature than other less important use cases. Important Requirement clarity is fundamental when defining an authorization model. The scope of the feature is not important at this point. You can always iterate later. Write It In Plain Language‚Äã Once you've picked a feature, describe its authorization related scope using simple language. Avoid using the word \"roles\", as this ties you to an RBAC way of thinking. info Roles don't \"disappear\" in ReBAC systems like OpenFGA. Your users might have roles on a given object, rather than the entire system. But starting from the term \"role\" might lead you down the wrong path. Instead it is better to discover roles while you are modeling. Your feature description should include the objects, users and groups of users participating in the system. Sentences should look like this: A user {user} can perform action {action} to/on/in {object types} ... IF {conditions} This feature can be described with these sentences: A user can create a document in a drive if they are the owner of the drive. A user can create a folder in a drive if they are the owner of the drive. A user can create a document in a folder if they are the owner of the folder. The folder is the parent of the document. A user can create a folder in a folder if they are the owner of the folder. The existing folder is the parent of the new folder. A user can share a document with another user or an organization as either editor or viewer if they are an owner or editor of a document or if they are an owner of the folder/drive that is the parent of the document. A user can share a folder with another user or an organization as a viewer if they are an owner of the folder. A user can view a document if they are an owner, viewer or editor of the document or if they are a viewer or owner of the folder/drive that is the parent of the document. A user can edit a document if they are an owner or editor of the document or if they are an owner of the folder/drive that is the parent of the document. A user can change the owner of a document if they are an owner of the document. A user can change the owner of a folder if they are an owner of the folder. A user can be a member of an organization. How a user is added as a member to an organization is beyond the scope of the feature we picked to write down. A user can view a folder if they are the owner of the folder, or a viewer or owner of either the parent folder of the folder, or the parent drive of the folder.","s":"01. Pick The Most Important Feature","u":"/docs/modeling/getting-started","h":"#01-pick-the-most-important-feature","p":390},{"i":399,"t":"Next make a list of the types of objects in your system. You might be able to identify the objects in your system from your existing domain/database model. Find all the objects in the previous step using this template: A user {user} can perform action {action} to/on/in {object type} ... IF {conditions} These are all the object types from the previous step (in order of appearance) based on that template: Document Folder Organization Let's highlight all object types in blue: A user can create a document in a drive if they are the owner of the drive. A user can create a folder in a drive if they are the owner of the drive. A user can create a document in a folder if they are the owner of the folder. A user can create a folder in a folder if they are the owner of the folder. A user can share a document with another user or an organization as either editor or viewer if they are an owner or editor of a document or if they are an owner of the folder/drive that is the parent of the document. A user can share a folder with another user or an organization as a viewer if they are an owner of the folder. A user can view a document if they are an owner, viewer or editor of the document or if they are a viewer, owner of the folder/drive that is the parent of the document. A user can edit a document if they are an owner or editor of the document or if they are an owner of the folder/drive that is the parent of the document. A user can change the owner of a document if they are an owner of the document. A user can change the owner of a folder if they are an owner of the folder. A user can be a member of an organization. How a user is added as a member to an organization is beyond the scope of the feature we picked to write down. A user can view a folder if they are the owner of the folder, or a viewer or owner of either the parent folder of the folder, or the parent drive of the folder. However, the list of object types is not finished. To complete the list of object types you must also add all the second nouns that appear in conditions as part of expressions of this format: \"{first noun} of a/the {second noun}\". ... IF {first noun} of a/the {second noun} Let's highlight those expressions in green: A user can create a document in a drive if they are the owner of the drive. A user can create a folder in a drive if they are the owner of the drive. A user can create a document in a folder if they are the owner of the folder. The folder is the parent of the document. A user can create a folder in a folder if they are the owner of the folder. The existing folder is the parent of the new folder . A user can share a document with another user or an organization as either editor or viewer if they are an owner or editor of a document or if they are an owner of the folder/drive that is the parent of the document. A user can share a folder with another user or an organization as a viewer if they are an owner of the folder. A user can view a document if they are an owner, viewer or editor of the document or if they are a viewer or owner of the folder/drive that is the parent of the document. A user can edit a document if they are an owner or editor of the document or if they are an owner of the folder/drive that is the parent of the document. A user can change the owner of a document if they are an owner of the document. A user can change the owner of a folder if they are an owner of the folder. A user can be a member of an organization. How a user is added as a member to an organization is beyond the scope of the feature we picked to write down. A user can view a folder if they are the owner of the folder, or a viewer or owner of either the parent folder of the folder, or the parent drive of the folder. The only second noun we didn't have in our object type list is \"Drive\", so we'll add it to the list. We will also need to add \"User\" to the list as it establishes the type of user who can establish relations. User Document Folder Organization Drive Now that we have a list of object types we can start defining them using the OpenFGA Configuration Language: model schema 1.1 type user type document type folder type organization type drive Caution You're now in the process of building a version you can use. The model above is not yet a valid authorization model accepted by OpenFGA. Important In a few cases other users can be part of determining whether an action can be performed on an action or not. Social media is an example of this \"a user can comment on a picture if they are a friend of the user that published it\". In those cases User should also be an object type. Following the last recommendation, we would discover the User type because it is a second noun in an expression: \"friend of the user\".","s":"02. List The Object Types","u":"/docs/modeling/getting-started","h":"#02-list-the-object-types","p":390},{"i":401,"t":"Each of the previously defined types has a set of relations. Relations are an important component in your model. After all, OpenFGA is a Relationship Based Access Control (ReBAC) system. To identify relations for a type we in the write-up we can perform an exercise similar to the one we did in list the type of objects in your system. Relations for a type {type} will be all of these: any noun that is the {noun} of a \"{noun} of a/an/the {type}\" expression. These are typically the Foreign Keys in a database. We'll highlight these in green. any verb or action that is the {action} of a \"can {action} (in) a/an {type}\" expression. These are typically the permissions for a type. We'll highlight these in yellow. A user can create a document in a drive if they are the owner of the drive. A user can create a folder in a drive if they are the owner of the drive. A user can create a document in a folder if they are the owner of the folder. The folder is the parent of the document. A user can create a folder in a folder if they are the owner of the folder. The existing folder is the parent of the new folder. A user can share a document with another user or an organization as either editor or viewer if they are an owner or editor of a document or if they are an owner of the folder/drive that is the parent of the document. A user can share a folder with another user or an organization as a viewer if they are an owner of the folder. A user can view a document if they are an owner, viewer or editor of the document or if they are a viewer or owner of the folder/drive that is the parent of the document. A user can edit a document if they are an owner or editor of the document or if they are an owner of the folder/drive that is the parent of the document. A user can change the owner of a document if they are an owner of the document. A user can change the owner of a folder if they are an owner of the folder. A user can be a member of an organization. How a user is added as a member to an organization is beyond the scope of the feature we picked to write down. A user can view a folder if they are the owner of the folder, or a viewer or owner of either the parent folder of the folder, or the parent drive of the folder. The resulting list is: Document parent can_share owner editor can_write can_view viewer can_change_owner Folder can_create_document owner can_create_folder can_view viewer parent Organization member Drive can_create_document owner can_create_folder info In OpenFGA, relations can only have alphanumeric characters, underscores and hyphens. We recommend using underscore (_) to separate words and removing prepositions. E.g.: \"can create a document\" can become \"can_create_document\" or \"create_document\" if you are into brevity. Using the OpenFGA Configuration Language we can enumerate the relations for each type: model schema 1.1 type user type document relations define parent: define owner: define editor: define viewer: define can_share: define can_view: define can_write: define can_change_owner: type folder relations define owner: define parent: define viewer: define can_create_folder: define can_create_document: define can_view: type organization relations define member: type drive relations define owner: define can_create_document: define can_create_folder: Caution You're now in the process of building a version you can use. The model above is not yet a valid authorization model accepted by OpenFGA.","s":"03. List Relations For Those Types","u":"/docs/modeling/getting-started","h":"#03-list-relations-for-those-types","p":390},{"i":403,"t":"We will use the OpenFGA Configuration Language to create a relation definition for each of the relations we identified. At this stage we will encode the answers to the question we asked at the beginning of the document:. Why could a user U, perform an action A on an object O? We are going to go over each type and each of its relations and create a definition for it. Type: Organization‚Äã We recommend starting from objects that represent groups/containers of users. For features in most systems these are easy to define and help reason about the other types. Examples of type names for these are \"team\", \"group\", \"organization\", etc. Relation: Member‚Äã The member relation is used to tell OpenFGA about the members of an organization. Important Relation names in OpenFGA are arbitrary strings. There are no reserved relation names. You can use \"member\" or \"part_of\" or anything else to refer to a user that is part of a team/organization. Remember \"How a user is added as a member to an organization is beyond the scope of this feature.\" For the purposes of this model the relation definition should be: type organization relations define member: [user,organization#member] Why? This relation definition states: That organizations have members That the members of an organization with id {id} are all users described by tuples of the form: { user: {user-id}, relation: \"member\", object: \"organization:{id}\" } Important Relation definitions of the form ‚Äúdefine {relation}: [user, organization#member]\" are fairly common. They are used to express that relationships \"to the object with that relation\" (e.g. \"users\" of type user or \"member of organization\") can be assigned by your system and that only the users that have that relation are those with a direct relationship. You can read more about group membership and types in Modeling User Groups. For the direct relationships, we need to figure out the object types that makes sense for the relationship tuples' user. In our organization example, it makes sense for member relations to have user of type user organization#member (i.e., other organization's member) However, it will not make sense for organization member's user to be of type document, folder or drive. We will specify this logic as part of directly directly related user type. Side note This also automatically supports nested organizational membership if you want such a feature in your system. You could use relationship tuples like the following one to express that \"members of organization A are members of organization B\": { user: \"organization:A#member\", relation: \"member\", object: \"organization:B\"} If you want to learn more, you can read further about this in Modeling User Groups and Managing Relationships Between Objects. Complete Type Definition‚Äã The complete type definition for the organization type is: type organization relations define member: [user,organization#member] Type: Document‚Äã After defining your \"group\" like types, continue with the most important type for the feature: the one that allows the main use case. In this case \"document\", since the main use case for users is to create, write, read and collaborate on documents. Defining relations for the main type lets you to focus on your core use case, and will likely make other type definitions easier. Relation: Owner‚Äã The owner relation is used to tell OpenFGA which users are owners of the document. Important In the current version, there is no way to state that there is only one owner in the authorization model. The application must limit this set of users to just one owner if that is a requirement. When a document is created, a relationship tuple will be stored in OpenFGA representing this relationship between owner and document. This is an example of a user to object relationship. The relation definition then should be: type document relations define owner: [user,organization#member] Why? This relation definition states that: each document can have one or more owners owners of a document are assignable by creating a tuple of the format { user: \"{user_id}\", relation: \"owner\", object: \"document:{id}\" } for individual users Relation: Editor‚Äã The editor relation is used to tell OpenFGA which users are editors of the document. When a user shares a document with another user or set of users as editor, a relationship tuple will be stored in OpenFGA representing this relationship between editor and document. This is an example of a users to object relationship. The relation definition then should be: type document relations define editor: [user,organization#member] Why? This relation definition states that: each document can have editors the editor(s) of a document are assignable by creating a tuple with shape { user: \"{user_id}\", relation: \"editor\", object: \"document:{id}\" } for individual users This also supports making all members in an organization editors of the document, through a group to object relationship. A relationship tuple like the following one states that the members of organization A are editors of document 0001. [ { \"user\": \"organization:A#member\", \"relation\": \"editor\", \"object\": \"document:0001\", }, ] You can learn more about this in Modeling User Groups. Relation: Viewer‚Äã The viewer relation is similar to the document's editor relation. It will be defined like this: type document relations define viewer: [user,organization#member] Relation: Parent‚Äã The parent relation is used to tell OpenFGA which folder or drive is the parent of the document. Important Relation names in OpenFGA are arbitrary strings. There are no reserved relation names. You can use \"parent\", \"container\" or \"ancestor\" to refer to a \"parent folder\". This relation is different from the others we have seen so far, as it is a relation between two objects (a folder and or drive that is the parent of the document). This is known as an object to object relationship, of which parent-child is a particular case. When a document is created a relationship tuple will be stored in OpenFGA to represent this relationship between parent and document. The relation definition then should be: type document relations define parent: [folder] Why? This relation definition states that: documents may have a parent the parent(s) of a document with id {id} (either a folder a folder or drive, as set by the system) described by one of these relationship tuples: { user: \"folder:{id}\", relation: \"parent\", object: \"document:{id}\" } { user: \"drive:{id}\", relation: \"parent\", object: \"document:{id}\" } Important In the current OpenFGA version, there is no way to state that a document's parent is either a drive or folder. The application must enforce this. Side note You might have noticed that the \"user\" in the tuple is an object. This is a special syntax OpenFGA accepts in the \"user\" parameter to write object to object relationships. You can read more about writing data to manage object to object relationships in Managing Relationships Between Objects. Relation: can_share‚Äã We need to express the following in the relation definition: A user can share a document with another user or an organization as either editor or viewer if they are an owner or editor of a document or if they are an owner of the folder that is the parent of the document. We can achieve that with the following definition using OpenFGA Configuration Language: define can_share: owner or editor or owner from parent There are a few key things here: We don't use a direct relationship type restriction as part of the definition. can_share is a common example of representing a permission that is defined in terms of other relations but is not directly assignable by the system. The relation definition contains a union operator separating a list of relations that the user must have with the object in order to \"be able to share the document\". It is any of: Being an owner of the document Being an editor of the document Being an owner of the parent of the document. Whether the parent is a drive or a folder is not important, as they both have an owner relation. You can read more about the aforementioned items in Modeling Roles and Permissions. Relation: can_view‚Äã We need to express the following in the relation definition: A user can view a document if they are an owner, viewer or editor of a document or if they are a viewer, owner of the folder/drive that is the parent of the document. Similar to the can_share relation, we can achieve that with the following definition using OpenFGA Configuration Language: define can_view: viewer or editor or owner or viewer from parent or owner from parent Relation: can_write‚Äã We need to express the following in the relation definition: A user can write a document if they are an owner or editor of a document or if they are an owner or editor of the folder/drive that is the parent of the document. Similar to the can_share relation, we can achieve that with the following definition using OpenFGA Configuration Language: define can_write: editor or owner or owner from parent Relation: can_change_owner‚Äã We need to express the following in the relation definition: A user can change the owner of a document if they are an owner of the document. Similar to the can_share relation, we can achieve that with the following definition using OpenFGA Configuration Language: define can_change_owner: owner Complete Type Definition‚Äã The complete type definition for the document type is: model schema 1.1 type document relations define owner: [user,organization#member] define editor: [user,organization#member] define viewer: [user,organization#member] define parent: [folder] define can_share: owner or editor or owner from parent define can_view: viewer or editor or owner or viewer from parent or editor from parent or owner from parent define can_write: editor or owner or owner from parent define can_change_owner: owner Combining the type definitions for document and organization, we have model schema 1.1 type user type organization relations define member: [user,organization#member] type document relations define owner: [user,organization#member] define editor: [user,organization#member] define viewer: [user,organization#member] define parent: [folder] define can_share: owner or editor or owner from parent define can_view: viewer or editor or owner or viewer from parent or editor from parent or owner from parent define can_write: editor or owner or owner from parent define can_change_owner: owner note The OpenFGA authorization model API and SDK only accepts JSON in its input. To convert from DSL to JSON, you may define and save the model in Playground first. After that, click the JSON button where the JSON configuration will be copied to your clipboard.","s":"04. Define Relations","u":"/docs/modeling/getting-started","h":"#04-define-relations","p":390},{"i":405,"t":"Once you have defined your group like types and the most important type for your feature you want to ensure everything is working as expected. This means testing the model. How? Remember from the introduction that OpenFGA's main job is to answer the question: Can user U, perform an action A on an object O? The OpenFGA service does that by checking if a user has a particular relationship to an object, based on your authorization model and relationship tuples. General Authorization Check \"Can user U perform action A on object O?\" OpenFGA (ReBAC) Authorization Check \"Can user U have relation R with object O?\" What we want is to ensure that given our current authorization model and some sample relationship tuples, we get the expected results for those questions. So we'll write some relationship tuples and assertions. An OpenFGA assertion takes one of these forms: user U has relation R with object O user U does not have relation R with object O Much like automated tests and assertions work for programming languages, you can use assertions to prevent regressions while you change your tuples and authorization model. Essentially, assertions help you ensure things work like you expect them to work as you iterate. Write Relationship Tuples‚Äã The relationship tuples should represent real examples from your system with fake data. At this point you haven't defined the drive or folder types, so you can only test things based on users or organization members' relationships to documents. Let's imagine an example setup and write the relationship tuples for it: System Action Relationship Tuple Anne is a member of the contoso organization { user:\"user:anne\", relation: \"member\", object: \"organization:contoso\"} Beth is a member of fabrikam organization { user:\"user:beth\", relation: \"member\", object: \"organization:fabrikam\"} Anne creates document:1, becomes its owner. { user:\"user:anne\", relation: \"owner\", object: \"document:1\"} Anne shares document:1 with all members of the fabrikam organization as editor. { user:\"organization:fabrikam#member\", relation: \"editor\", object: \"document:1\"} Beth creates document:2 and becomes its owner. { user:\"user:beth\", relation: \"owner\", object: \"document:2\"} Beth shares document:2 with all members of the contoso organization as viewer { user:\"organization:contoso#member\", relation: \"viewer\", object: \"document:2\"} Follow these steps to create relationship tuples. Create Assertions‚Äã According to our written down model and the relationship tuples from the previous step, these assertions should be specified: Because anne is the owner of document:1: user anne has relation can_share with document:1 user anne has relation can_write with document:1 user anne has relation can_view with document:1 user anne has relation can_change_owner with document:1 Because beth is a member of organization:fabrikam and members of organization:fabrikam are writer of document:1: user beth does not have relation can_share with document:1 user beth has relation can_write with document:1 user beth has relation can_view with document:1 user beth does not have relation can_change_owner with document:1 Because beth is the owner of document:2: user beth has relation can_share with document:2 user beth has relation can_write with document:2 user beth has relation can_view with document:2 user beth has relation can_change_owner with document:2 Because anne is a member of organization:contoso and members of organization:contoso are viewer of document:2: user anne does not have relation can_share with document:2 user anne does not have relation can_write with document:2 user anne has relation can_view with document:2 user anne does not have relation can_change_owner with document:2 Follow these steps to create assertions. Run Assertions‚Äã Run the assertions. They should all pass. If they don't you can use the query view to understand what is causing them to fail, and then update your authorization model and relation tuples accordingly. Once all the assertions are working, you should continue the iterative process of working on your model.","s":"05. Test The Model","u":"/docs/modeling/getting-started","h":"#05-test-the-model","p":390},{"i":407,"t":"We'll leave the exercise of defining the drive and folder relations, then adding relationship tuples and assertions to you. Once you are finished, check out the complete example to see how you did. When defining the authorization model for your own system, you would continue iterating on the authorization model with the next feature and so on. If you have any questions about this model or others, or would like some help creating your model, drop by our Discord.","s":"06. Iterate","u":"/docs/modeling/getting-started","h":"#06-iterate","p":390},{"i":409,"t":"Check the following sections for more on how to model with OpenFGA. OpenFGA Concepts Learn about the OpenFGA Concepts. More Configuration Language Learn about OpenFGA Configuration Language. More Direct Access Learn about modeling user access to an object. More","s":"Related Sections","u":"/docs/modeling/getting-started","h":"#related-sections","p":390},{"i":411,"t":"This section has guides that on migrating models and relations. When to use The content in this section is useful: If you want to introduce changes to your existing authorization model or upgrade it to the new schema version.","s":"Migrating","u":"/docs/modeling/migrating","h":"","p":410},{"i":413,"t":"Migrating Relations Learn to migrate relations in a production environment. Click to navigate Migrating To Schema 1.1 Learn to migrate models to schema 1.1. Click to navigate","s":"Content","u":"/docs/modeling/migrating","h":"","p":410},{"i":415,"t":"caution The OpenFGA model schema v1.0 is being deprecated. Read about when support will be dropped in the deprecation timeline. A new DSL schema version has been introduced with several changes that we believe will make models easier to read and write, enable better tuple and model validations, and provide more options for optimizing the performance of different OpenFGA APIs. In short, we will be: Adding model schema version field Adding type restrictions and removing need to specify as self Disallowing string literals in user_ids Enforcing type restrictions Requiring you to specify for which relations you can write tuples with public access Changes in query evaluation behavior with type restrictions To facilitate migration to the new DSL schema, you will need to update tuples that are no longer valid. In particular, all tuples whose user field involves a wildcard character (* or user:*) defined with model schema 1.0 MUST be deleted and re-added back. info Before starting to migrate to the new model schema, it is recommended that you obtain your current authorization model ID and ensure that all your check, write, expand and list object are performed against that model id. This allows consistent behavior in your production system until you are ready to switch to the new model.","s":"Migrating Models To Schema 1.1","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"","p":414},{"i":417,"t":"Since the changes in the DSL are significant, we have decided to add a schema version to the DSL. The previous version of the DSL‚Äôs schema was 1.0, and the new schema version will be 1.1. To use the new syntax please add the following to the top of the model: model schema 1.1 info OpenFGA will eventually stop supporting schema version 1.0. Notifications will be posted in GitHub, Discord and Twitter before this change occurs.","s":"OpenFGA Model Schema Versions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#-model-schema-versions","p":414},{"i":419,"t":"We‚Äôll use the following version 1.0 model and tuples to illustrate the changes we‚Äôll need to make: DSL JSON model schema 1.0 type user type group relations define member as self type folder relations define parent as self define viewer as self or viewer from parent type document relations define parent as self define viewer as self define can_read as viewer or viewer from parent { \"type_definitions\": [ { \"type\": \"user\", \"relations\": {} }, { \"type\": \"group\", \"relations\": { \"member\": { \"this\": {} } } }, { \"type\": \"folder\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"this\": {} }, \"can_read\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } } } ], \"schema_version\": \"1.0\" } [ // Bob is a member of the Sales group { \"user\": \"user:bob\", \"relation\": \"member\", \"object\": \"group:sales\", }, // The \"pricing\" document is in \"sales\" folder { \"user\": \"folder:sales\", \"relation\": \"parent\", \"object\": \"document:pricing\", }, // Members of the \"sales\" team can view the \"sales\" folder { \"user\": \"group:sales#member\", \"relation\": \"viewer\", \"object\": \"folder:sales\", }, // John can view the \"pricing\" document { \"user\": \"user:john\", \"relation\": \"viewer\", \"object\": \"document:pricing\", }, ] Those tuples match the intent of how the model was designed, but without type restrictions we can also write tuples that would not. For example, we can say that a document is a member of the sales group: [ // The \"pricing\" document is a member of the \"sales\" group { \"user\": \"document:pricing\", \"relation\": \"member\", \"object\": \"group:sales\", }, ] To be able to better validate tuples and make the model more readable, version 1.1 requires you to specify types for all the relations that were previously assignable (e.g. relations defined as self in any way), and it removes the as self keyword. The model above needs to be rewritten as: DSL JSON model schema 1.1 type user type group relations define member: [user] type folder relations define parent: [folder] define viewer: [user] or viewer from parent type document relations define parent: [folder] define viewer: [user] define can_read: viewer or viewer from parent { \"mode\": { \"schema_version\": \"1.1\" }, \"type_definitions\": [ { \"type\": \"user\", \"relations\": {} }, { \"type\": \"group\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"this\": {} }, \"can_read\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"can_read\": { \"directly_related_user_types\": [] } } } } ], \"schema_version\": \"1.1\" } After making these changes, OpenFGA will start validating the tuples more strictly, for example, you won‚Äôt be able to assign a document as a member of a group. If your application is writing invalid tuples, you‚Äôll start getting errors when invoking the Write API.","s":"Type Restrictions & Removing as self","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#type-restrictions--removing-as-self","p":414},{"i":421,"t":"With version 1.0 models, you could write a tuple where the user id did not specify a type, for example: [ // \"bob\" is a member of the \"sales\" group { \"user\": \"bob\", \"relation\": \"member\", \"object\": \"group:sales\", }, ] However, with version 1.1 you always need to specify an object, so ‚Äúbob‚Äô‚Äù is no longer a valid identifier. If you don‚Äôt have a type in your model that defines relations for users, you can add a ‚Äòuser‚Äô type with no relations to your model, for example: DSL JSON type user { \"type_definitions\": [ { \"type\": \"user\", \"relations\": {} } ] } You can then use that type when writing tuples: [ // \"user:bob\" is a member of the \"sales\" group { \"user\": \"user:bob\", \"relation\": \"member\", \"object\": \"group:sales\", }, ]","s":"Disallowing String Literals in user_ids","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#disallowing-string-literals-in-user_ids","p":414},{"i":423,"t":"With the model above, the following tuples will be valid according to the type definitions: [ { \"user\": \"user:bob\", \"relation\": \"member\", \"object\": \"group:sales\", }, { \"user\": \"folder:sales\", \"relation\": \"parent\", \"object\": \"document:pricing\", }, { \"user\": \"user:john\", \"relation\": \"viewer\", \"object\": \"document:pricing\", }, ] However, the one below will not be valid, as we can‚Äôt assign group:sales#member to the viewer relationship of a folder. [ { \"user\": \"group:sales#member\", \"relation\": \"viewer\", \"object\": \"folder:sales\", }, ] You might think that given group:sales#member are actually users, you should still be able to assign it. OpenFGA calls expressions like group:sales#member \"usersets\", and with our model we can only assign users. The issue is that there are a lot of other usersets that you don't want to be assigned as viewers of a folder. For example, you would not want to add document:pricing#viewer as viewers of the folder as conceptually it does not make sense to say ‚Äúevery viewer of this document should be a viewer of this folder‚Äù. To allow these tuples to be written, you need to specify group#member as a valid type for the folder‚Äôs viewer relationship. You would want to do the same with the document‚Äôs viewer relationship if you want to define that the members of a group can be viewers of a document: DSL JSON model schema 1.1 type user type group relations define member: [user] type folder relations define parent: [folder] define viewer: [user,group#member] or viewer from parent type document relations define parent: [folder] define viewer: [user,group#member] define can_read: viewer or viewer from parent { \"type_definitions\": [ { \"type\": \"user\", \"relations\": {} }, { \"type\": \"group\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"group\", \"relation\": \"member\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"viewer\": { \"this\": {} }, \"can_read\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"parent\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"group\", \"relation\": \"member\" } ] }, \"can_read\": { \"directly_related_user_types\": [] } } } } ], \"schema_version\": \"1.1\" } You can identify which usersets you need to add by looking at tuples in your store that have the following structure: [ // Members of the \"sales\" group are viewers of the \"sales\" folder { \"user\": \"group:sales#member\", \"relation\": \"viewer\", \"object\": \"folder:sales\", }, ] If you find a tuple like that, you‚Äôll need to add group#member in the list of types allowed in the viewer relation of the folder type.","s":"Enforcing Type Restrictions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#enforcing-type-restrictions","p":414},{"i":425,"t":"When using version 1.0, you can indicate public access to specific objects by specifying a wildcard user in a relationship to any object, e.g.: [ // All users are viewers of the \"pricing\" document { \"user\": \"*\", \"relation\": \"viewer\", \"object\": \"document:pricing\", }, ] When you write the tuple above, all users are granted the ‚Äúviewer‚Äù relationship for the ‚Äúpricing\" document. You can write those kinds of tuples for any relation that is directly assignable in the model. In version 1.1 we want to be more explicit about the tuples you can write, so you‚Äôll need to declare in the DSL which relations allow wildcards and for which object types. If we want to let any object of type ‚Äúuser‚Äù to be a viewer of a specific document, we‚Äôll need to explicitly define it. DSL JSON model schema 1.1 type user type document relations define viewer: [user,user:*] { \"type_definitions\": [ { \"type\": \"user\", \"relations\": {} }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} } ] } } } } ], \"schema_version\": \"1.1\" } You‚Äôll need to specify user:* as the user value in the tuple to enable this: [ // All objects of type \"user\" are viewers of the \"pricing\" document { \"user\": \"user:*\", \"relation\": \"viewer\", \"object\": \"document:pricing\", }, ] Being explicit about the wildcard type restrictions also lets you model scenarios like ‚Äúall employees can see this document, but not all external users‚Äù, ‚Äúall user accounts can access this document, but not service/machine-to-machine accounts‚Äù. This change implies that you‚Äôll need to change your code to write tuples with this new syntax, and that you‚Äôll need to migrate existing tuples to use the new format. You might have 3 kinds of tuples in your model that use *, with different migration strategies: Tuples that have user = * You would need to retrieve those tuples and write them using the proper type (e.g. user:*). To retrieve them, you‚Äôll need to use the Read endpoint, filter on your side the tuples that have user = ‚Äú*‚Äù, and call the Write API for each one, with the proper type, e.g: [ // All objects of type \"user\" are viewers of the \"pricing\" document { \"user\": \"user:*\", \"relation\": \"viewer\", \"object\": \"document:pricing\", }, ] Tuples that have user = employee:*, where employee is NOT a type that is defined in the new iteration of your model. If you have tuples with this format, they will be considered invalid because they don‚Äôt have a corresponding type in the model. If you need such a type defined, you‚Äôll need to add it to the model, and the scenario will be similar to the one described below. Tuples that have user = user:*, which would mean the user with user_id = *, where user is type that is defined in the new iteration of your model. In this case, the meaning of the tuple will change. If you were intending to specify a user with user id = *, you will need to encode it in a different way instead of using *. If you intended to specify public access to the object (e.g. \"every user has this relationship with this object\"), 1.0 models will not interpret the user:* value as a wildcard but 1.1 models will. Warning If you have any wildcard tuples (i.e., * or user:*) that were created with model schema 1.0, you must delete and re-add these tuples with the appropriate type. This allows OpenFGA to interpret these tuples appropriately with the model schema 1.1 semantics. Failure to delete and re-add may cause OpenFGA to interpret these tuples incorrectly.","s":"Public Access","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#public-access","p":414},{"i":427,"t":"It is possible to introduce new models and have existing tuples (from prior models) with incompatibilities with the new model. Some cases where this can happen include: If you rename/delete a type. If you rename/delete a relation. If you remove a type restriction from the list of type restrictions for a relation, including changes for public access. If OpenFGA introduces a change that makes a tuple invalid. In these cases, OpenFGA will not consider those invalid tuples when evaluating queries (Check, Expand, List-objects, etc). However, after any of the changes above happen, you should delete those tuples as having a large number of invalid tuples will negatively affect performance.","s":"Query Evaluation Behavior with Type Restrictions","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#query-evaluation-behavior-with-type-restrictions","p":414},{"i":429,"t":"Type restrictions allow OpenFGA to validate the schema better at the time of writing the schema instead of at the time of query evaluation. In OpenFGA, when referencing relations on related objects the relation tying the related objects (the word after from, also called the tupleset) cannot be evaluated - that means it cannot be referencing another relation, or allow non-concrete types (type bound public access (<object_type>:*) or usersets (<object_type>#<relation>)) in its type restrictions. In schema 1.0, because type restrictions were not available, the validation error would occur at the time of evaluation (e.g. a Check call), while in schema 1.1, the error will be thrown when writing the model (during the WriteAuthorizationModel request). In the case below, the write request will fail in the new schema 1.1 version, but would have succeeded in schema version 1.0: DSL DSL (Version 1.0) JSON model schema 1.1 type user type folder relations define parent: [folder,folder#parent] define editor: [user] or editor from parent model schema 1.0 type user type folder relations define parent as self define editor as self or editor from parent { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relations\": { \"parent\": { \"this\": {} }, \"editor\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"editor\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" }, { \"type\": \"folder\", \"relation\": \"parent\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In schema 1.0, the WriteAuthorizationModel would have succeeded, but when attempting to write a tuple such as the one below, you would have received an error: Node.js Go .NET Python curl Pseudocode await fgaClient.write({ writes: { tuple_keys: [ { user: 'folder:product#parent', relation: 'parent', object: 'folder:planning'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"folder:product#parent\"), Relation: fgaSdk.PtrString(\"parent\"), Object: fgaSdk.PtrString(\"folder:planning\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"folder:product#parent\", Relation = \"parent\", Object = \"folder:planning\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"folder:product#parent\", relation=\"parent\", object=\"folder:planning\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"folder:product#parent\",\"relation\":\"parent\",\"object\":\"folder:planning\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"folder:product#parent\", \"relation\":\"parent\", \"object\":\"folder:planning\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"Improved Schema Validation","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#improved-schema-validation","p":414},{"i":431,"t":"1- February 13th 2023: Deprecation Notice This deprecation notice is posted. 2- March 15th 2023: Disallow writing and evaluating new 1.0 models with OpenFGA version 0.4.0 The API will no longer accept writing new 1.0 models (affects WriteAuthorizationModel) unless the OPENFGA_ALLOW_WRITING_1_0_MODELS flag is used to override the setting. Note: reading those earlier models and their assertions will keep working. Evaluation requests (Check, Expand, ListObjects), WriteAssertions and Write against 1.0 models will, by default, no longer be accepted unless the OPENFGA_ALLOW_EVALUATING_1_0_MODELS flag is used to override the setting. ReadAuthorizationModel, ReadAuthorizationModels and ReadAssertions will continue to serve results for 1.0 and 1.1 models. 3- March 31st 2023: Default model version in Syntax Transformer, Playground and Docs switch to 1.1 The model schema version will be required in all new authorization models, and new authorization models without the version will be rejected. model schema 1.1 4- May 15th 2023: Code Removed with OpenFGA version 0.5.0 OPENFGA_ALLOW_WRITING_1_0_MODELS and OPENFGA_ALLOW_EVALUATING_1_0_MODELS flags removed The code relating to branching and evaluating 1.0 models will be removed except for ReadAuthorizationModel, ReadAuthorizationModels and ReadAssertions.","s":"Deprecation Timeline","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#deprecation-timeline","p":414},{"i":433,"t":"Review the following sections for more information on migrating tuples. Migrating Relations Learn how to migrate relations More Production Best Practices Learn the best practices of running OpenFGA in a production environment More","s":"Related Sections","u":"/docs/modeling/migrating/migrating-schema-1-1","h":"#related-sections","p":414},{"i":435,"t":"In this guide we are going to model system that requires multiple authorizations before allowing users to perform actions on particular objects using OpenFGA. For example, users are allowed to delete a document if both of these conditions are met: they are a member of the organization that owns the document they have writer permissions on the document In this way, we prevent other users from deleting such document. When to use This is useful when: Limiting certain actions (such as deleting or reading sensitive document) to privileged users. Adding restrictions and requiring multiple authorization paths before granting access.","s":"Multiple Restrictions","u":"/docs/modeling/multiple-restrictions","h":"","p":434},{"i":437,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. You will start with the authorization model below, it represents a document type that can have users related as writer and organizations related as owner. Document's can_write relation is based on whether user is a writer to the document. The organization type can have users related as member. Let us also assume that we have: A document called \"planning\" owned by the ABC organization. Becky is a member of the ABC organization. Carl is a member of the XYZ organization. Becky and Carl both have writer access to the \"planning\" document. DSL JSON model schema 1.1 type user type document relations define owner: [organization] define writer: [user] define can_write: writer type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"can_write\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The current state of the system is represented by the following relationship tuples being in the system already: [ // organization ABC is the owner of planning document { \"user\": \"organization:ABC\", \"relation\": \"owner\", \"object\": \"document:planning\", }, // Becky is a writer to the planning document { \"user\": \"user:becky\", \"relation\": \"writer\", \"object\": \"document:planning\", }, // Carl is a writer to the planning document { \"user\": \"user:carl\", \"relation\": \"writer\", \"object\": \"document:planning\", }, // Becky is a member of the organization ABC { \"user\": \"user:becky\", \"relation\": \"member\", \"object\": \"organization:ABC\", }, // Carl is a member of the organization XYZ { \"user\": \"user:carl\", \"relation\": \"member\", \"object\": \"organization:XYZ\", }, ] info Note that we assign the organization, not the organization's members, as owner to the planning document. In addition, you will need to know the following: Modeling Parent-Child Objects‚Äã You need to know how to model access based on parent-child relationships, e.g.: folders and documents. Learn more ‚Üí Modeling Roles And Permissions‚Äã You need to know how to model roles for users at the object level and model permissions for those roles. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Intersection Operator: the intersection operator can be used to indicate a relationship exists if the user is in all the sets of users","s":"Before You Start","u":"/docs/modeling/multiple-restrictions","h":"#before-you-start","p":434},{"i":439,"t":"You need to know how to model access based on parent-child relationships, e.g.: folders and documents. Learn more ‚Üí","s":"Modeling Parent-Child Objects","u":"/docs/modeling/multiple-restrictions","h":"#modeling-parent-child-objects","p":434},{"i":441,"t":"You need to know how to model roles for users at the object level and model permissions for those roles. Learn more ‚Üí","s":"Modeling Roles And Permissions","u":"/docs/modeling/multiple-restrictions","h":"#modeling-roles-and-permissions","p":434},{"i":443,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Intersection Operator: the intersection operator can be used to indicate a relationship exists if the user is in all the sets of users","s":"OpenFGA Concepts","u":"/docs/modeling/multiple-restrictions","h":"#-concepts","p":434},{"i":445,"t":"With the above authorization model and relationship tuples, OpenFGA will correctly respond with {\"allowed\":true} when checkis called to see if Carl and Becky can write this document. We can verify that by issuing two check requests: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'can_write', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"can_write\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"can_write\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"can_write\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"can_write\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"can_write\", // has an `can_write` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'can_write', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"can_write\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"can_write\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"can_write\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_write\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:carl\", // check if the user `user:carl` relation = \"can_write\", // has an `can_write` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true What we would like to do is offer a way so that a document can be written by Becky and Carl, but only writers who are also members of the organization that owns the document can remove it. To do this, we need to: Add can_delete relation to only allow writers that are members of the ownership organization Verify that our solutions work","s":"Step By Step","u":"/docs/modeling/multiple-restrictions","h":"#step-by-step","p":434},{"i":447,"t":"The first step is to add the relation definition for can_delete so that it requires users to be both writer and member of the owner. This is accomplished via the keyword and. DSL JSON model schema 1.1 type user type document relations define owner: [organization] define writer: [user] define can_write: writer define can_delete: writer and member from owner type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"can_write\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, \"can_delete\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"member\" } } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Add can_delete Relation To Only Allow Writers That Are Members Of The Ownership Organization","u":"/docs/modeling/multiple-restrictions","h":"#01-add-can_delete-relation-to-only-allow-writers-that-are-members-of-the-ownership-organization","p":434},{"i":449,"t":"To verify that our solutions work, we need to check that Becky can delete the planning document because she is a writer AND she is a member of organization:ABC that owns the planning document. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'can_delete', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"can_delete\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"can_delete\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"can_delete\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"can_delete\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"can_delete\", // has an `can_delete` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true However, Carl cannot delete the planning document because although he is a writer, Carl is not a member of organization:ABC that owns the planning document. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'can_delete', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"can_delete\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"can_delete\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"can_delete\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_delete\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:carl\", // check if the user `user:carl` relation = \"can_delete\", // has an `can_delete` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"02. Verify That Our Solutions Work","u":"/docs/modeling/multiple-restrictions","h":"#02-verify-that-our-solutions-work","p":434},{"i":451,"t":"Check the following sections for more on how to model privileged access. Modeling: User Groups Learn about how to add group members. More Modeling: Blocklists Learn about how to set block lists. More Modeling: Public Access Learn about model public access. More","s":"Related Sections","u":"/docs/modeling/multiple-restrictions","h":"#related-sections","p":434},{"i":453,"t":"In this guide you will learn how to indicate relationships between objects, and how users' relationships to one object can affect their relationship with another. For example: how a editor of a folder can be an editor of all documents the folder is a parent of. When to use Object-to-Object relationships, combined with a configured authorization model can be used to indicate that a user's relation with one object can influence their relationship with another object. This can also be used in some cases to remove the need to modify relations between objects using user groups. Object-to-object relationships can be used: To indicate that managers of an employee have access to approve requests the employee has made To indicate that users who have a repository admin role (repo_admin) in an organization automatically have admin access to all repositories in that organization To indicate that users who are subscribed to a plan, get access to all the features in that plan","s":"Parent-Child Objects","u":"/docs/modeling/parent-child","h":"","p":452},{"i":455,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have two types: folder that users can be related to as an editor document that users can be related to as an editor DSL JSON model schema 1.1 type user type folder relations define editor: [user] type document relations define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Union Operator: the union operator can be used to indicate that the user has multiple ways of being related to an object","s":"Before You Start","u":"/docs/modeling/parent-child","h":"#before-you-start","p":452},{"i":457,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/modeling/parent-child","h":"#direct-access","p":452},{"i":459,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Union Operator: the union operator can be used to indicate that the user has multiple ways of being related to an object","s":"OpenFGA Concepts","u":"/docs/modeling/parent-child","h":"#-concepts","p":452},{"i":461,"t":"We would like to model folders that contain documents and that a user having editor access to the folder, has editor access to all documents in that folder. For editors of a folder to be editors of a containing document, we need to: Update the authorization model to allow a parent relationship between folder and document Update the editor relation in the document type definition to support cascading from folder and then to indicate and verify that bob is an editor of document:meeting_notes.doc because bob is an editor of folder:notes, we then need to: Create a new relationship tuple to indicate that bob is a editor of folder:notes Create a new relationship tuple to indicate that folder:notes is a parent of document:meeting_notes.doc Check to see if bob is an editor of document:meeting_notes.doc","s":"Step By Step","u":"/docs/modeling/parent-child","h":"#step-by-step","p":452},{"i":463,"t":"To allow a parent relation between a folder and a document, we need to update the authorization model to be the following (this is to allow creating relationship tuples that can indicate a relationship between folder and document. Refer to Modeling Concepts: Object to Object Relationships to understand why): DSL JSON model schema 1.1 type user type folder relations define editor: [user] type document relations define parent: [folder] define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Notice that the document type now has a parent relation, indicating that other objects can be parents of documents","s":"01. Update The Authorization Model To Allow A Parent Relationship Between Folder And Document","u":"/docs/modeling/parent-child","h":"#01-update-the-authorization-model-to-allow-a-parent-relationship-between-folder-and-document","p":452},{"i":465,"t":"To allow cascading relations between folder and document, we can update our authorization model as the following: DSL JSON model schema 1.1 type user type folder relations define editor: [user] type document relations define parent: [folder] define editor: [user] or editor from parent { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"folder\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"editor\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"editor\" } } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info editor of a document are any of: users that are directly assigned as editors users that are related to any parent of this document as editor (editors of the parent) So with this change, anyone related to a folder that is a parent of a document as an editor is also an editor of said document.","s":"02. Update The Editor Relation In The Document Type Definition To Support Cascading From Folder","u":"/docs/modeling/parent-child","h":"#02-update-the-editor-relation-in-the-document-type-definition-to-support-cascading-from-folder","p":452},{"i":467,"t":"To leverage our cascading relation, we need to create a relationship tuple that states: bob is an editor of folder:notes Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:bob', relation: 'editor', object: 'folder:notes'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"folder:notes\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:bob\", Relation = \"editor\", Object = \"folder:notes\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:bob\", relation=\"editor\", object=\"folder:notes\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"folder:notes\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:bob\", \"relation\":\"editor\", \"object\":\"folder:notes\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") caution Note: Make sure to use unique ids for each object and user within your application domain when creating relationship tuples for OpenFGA. We are using first names and simple ids to illustrate an easy-to-follow example.","s":"03. Create A New Relationship Tuple To Indicate That bob Is An Editor Of folder:notes","u":"/docs/modeling/parent-child","h":"#03-create-a-new-relationship-tuple-to-indicate-that-bob-is-an-editor-of-foldernotes","p":452},{"i":469,"t":"Now that bob is an editor of folder:notes, we need to indicate that folder:notes is a parent of document:meeting_notes.doc Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // the notes folder is a parent of the meeting notes document { user: 'folder:notes', relation: 'parent', object: 'document:meeting_notes.doc'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // the notes folder is a parent of the meeting notes document User: fgaSdk.PtrString(\"folder:notes\"), Relation: fgaSdk.PtrString(\"parent\"), Object: fgaSdk.PtrString(\"document:meeting_notes.doc\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // the notes folder is a parent of the meeting notes document new() { User = \"folder:notes\", Relation = \"parent\", Object = \"document:meeting_notes.doc\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # the notes folder is a parent of the meeting notes document user=\"folder:notes\", relation=\"parent\", object=\"document:meeting_notes.doc\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"folder:notes\",\"relation\":\"parent\",\"object\":\"document:meeting_notes.doc\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // the notes folder is a parent of the meeting notes document { \"user\":\"folder:notes\", \"relation\":\"parent\", \"object\":\"document:meeting_notes.doc\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"04. Create A New Relationship Tuple To Indicate That folder:notes Is A Parent Of document:meeting_notes.doc","u":"/docs/modeling/parent-child","h":"#04-create-a-new-relationship-tuple-to-indicate-that-foldernotes-is-a-parent-of-documentmeeting_notesdoc","p":452},{"i":471,"t":"Now that we have done the changes to the authorization model and the addition of the two new relationship tuples, we can verify if our configuration is correct by running the following check: is bob an editor of document:meeting_notes.doc. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'editor', object: 'document:meeting_notes.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"editor\", Object: \"document:meeting_notes.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"editor\", Object = \"document:meeting_notes.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"editor\", object=\"document:meeting_notes.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"editor\", // has an `editor` relation object = \"document:meeting_notes.doc\", // with the object `document:meeting_notes.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Note: There are no other relationship tuples within the store that dictate any direct relation between bob and document:meeting_notes.doc. The check succeeds because of the cascading relation applied. The chain of resolution becomes: bob is an editor of folder:notes folder:notes is a parent of document:meeting_notes.doc editors of any parent folder of document:meeting_notes.doc are also editors of the document Therefore, bob is an editor of document:meeting_notes.doc caution Note that when searching tuples that are related to the object (the word after from, also called the tupleset), OpenFGA will not do any evaluation and will only consider concrete objects (of the form <object_type>:<object_id>) that were directly assigned, and will throw an error if it encounters any rewrites, or a *, a type bound public access (<object_type>:*) or a userset (<object_type>:<object_id>#<relation>). See Referencing Relations on Related Objects for more.","s":"05. Check To See If bob Is An Editor Of document:meeting_notes.doc","u":"/docs/modeling/parent-child","h":"#05-check-to-see-if-bob-is-an-editor-of-documentmeeting_notesdoc","p":452},{"i":473,"t":"Check the following sections for more on how to model for parent and child objects. Modeling Concepts: Object to Object Relationships Learn about how to model object to object relationships in OpenFGA. More Modeling Google Drive See how to make folders parents of documents, and to make editors on the parent folders editors on documents inside them.. More Modeling GitHub See how to grant users access to all repositories owned by an organization. More","s":"Related Sections","u":"/docs/modeling/parent-child","h":"#related-sections","p":452},{"i":475,"t":"In this guide you will learn how to grant public access to an object, such as a certain document, using type bound public access. When to use Public access allows your application to grant every user in the system access to an object. You would add a relationship tuple with type-bound public access when: sharing a document publicly to indicate that everyone can view it a public poll is created to indicate that anyone can vote on it a blog post is published and anyone should be able to read it a video is made public for anyone to watch","s":"Public Access","u":"/docs/modeling/public-access","h":"","p":474},{"i":477,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called document that can have a view relation. DSL JSON model schema 1.1 type user type document relations define view: [user,user:*] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"view\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"view\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA A Type Bound Public Access: is a special OpenFGA concept (represented by <type>:*) can be used in relationship tuples to represent every object of that type caution Make sure to use unique ids for each object and user within your application domain when creating relationship tuples for OpenFGA. We are using first names and simple ids to just illustrate an easy-to-follow example.","s":"Before You Start","u":"/docs/modeling/public-access","h":"#before-you-start","p":474},{"i":479,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/modeling/public-access","h":"#direct-access","p":474},{"i":481,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA A Type Bound Public Access: is a special OpenFGA concept (represented by <type>:*) can be used in relationship tuples to represent every object of that type","s":"OpenFGA Concepts","u":"/docs/modeling/public-access","h":"#-concepts","p":474},{"i":483,"t":"In previous guides, we have shown how to indicate that objects are related to users or objects. In some cases, you might want to indicate that everyone is related to an object (for example when sharing a document publicly).","s":"Step By Step","u":"/docs/modeling/public-access","h":"#step-by-step","p":474},{"i":485,"t":"To do this we need to create a relationship tuple using the type bound public access. The type bound public access syntax is used to indicate that all users of a particular type have a relation to a specific object. Let us create a relationship tuple that states: any user can view document:company-psa.doc Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // user:* denotes every object of type user { user: 'user:*', relation: 'view', object: 'document:company-psa.doc'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // user:* denotes every object of type user User: fgaSdk.PtrString(\"user:*\"), Relation: fgaSdk.PtrString(\"view\"), Object: fgaSdk.PtrString(\"document:company-psa.doc\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // user:* denotes every object of type user new() { User = \"user:*\", Relation = \"view\", Object = \"document:company-psa.doc\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # user:* denotes every object of type user user=\"user:*\", relation=\"view\", object=\"document:company-psa.doc\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:*\",\"relation\":\"view\",\"object\":\"document:company-psa.doc\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // user:* denotes every object of type user { \"user\":\"user:*\", \"relation\":\"view\", \"object\":\"document:company-psa.doc\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Wildcard syntax usage Please note that type-bound public access is not a wildcard or a regex expression. You cannot use the <type>:* syntax in the tuple's object field. The following syntax is invalid: [ // It is invalid to use this syntax in the object field. The below relationship tuple is invalid and does not mean that Bob can view all documents. { \"user\": \"user:bob\", \"relation\": \"view\", \"object\": \"document:*\", }, ] Wildcard syntax usage You cannot use <type>:* as part of a userset in the tuple's user field. The following syntax is invalid: [ // It is invalid to use this syntax as part of a userset. The below relationship tuple is invalid and does not mean that members of any org can view the company-psa document. { \"user\": \"org:*#member\", \"relation\": \"view\", \"object\": \"document:company-psa.doc\", }, ]","s":"01. Create A Relationship Tuple","u":"/docs/modeling/public-access","h":"#01-create-a-relationship-tuple","p":474},{"i":487,"t":"Once the above relationship tuple is added, we can check if bob cab view document:company-psa.doc. OpenFGA will return { \"allowed\": true } even though no relationship tuple linking bob to the document was added. That is because the relationship tuple with user:* as the user made it so every object of type user (such as user:bob) can view the document, making it public. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'view', object: 'document:company-psa.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"view\", Object: \"document:company-psa.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"view\", Object = \"document:company-psa.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"view\", object=\"document:company-psa.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"view\",\"object\":\"document:company-psa.doc\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"view\", // has an `view` relation object = \"document:company-psa.doc\", // with the object `document:company-psa.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02. Check That The Relationship Exists","u":"/docs/modeling/public-access","h":"#02-check-that-the-relationship-exists","p":474},{"i":489,"t":"Check the following sections for more on how to model with OpenFGA. Modeling: Getting Started Learn about how to get started with modeling. More Configuration Language Learn about OpenFGA Configuration Language. More Modeling Blocklists Learn about model block lists. More","s":"Related Sections","u":"/docs/modeling/public-access","h":"#related-sections","p":474},{"i":491,"t":"In this guide you will learn how to model roles and permissions model within OpenFGA using the authorization model and relationship tuple. Roles are assigned to users or a group of users, where any user can have more than one role (editor, owner, etc..). Permissions are what allows users to access certain objects based on their specific roles (device_renamer, channel_archiver, etc..). For example, the role viewer of a trip can have permissions to view bookings or the role owners can have permissions to add/view bookings to a trip. When to use When trying to create a role and permissions model within OpenFGA.: Create roles by creating relations that can be directly assigned to users Assign permissions by creating relations that users get through other relations For example: Grant someone an admin role that can edit and read a document Grant someone a security_guard role that can live_video_viewer on a device Grant someone a viewer role that can view_products on a shop There are advantages to implementing roles and permissions within OpenFGA, such as: Breaking down existing roles to have more fine grained permissions. This allows your application to check whether a user has access to a certain object without having to explicitly check that specific users role. Introduce new roles/permissions or consolidate roles without affecting your application behavior. For example: if in your app all the checks are for the fine permissions check('bob', 'booking_adder', 'trip:Europe') instead of check('bob', 'owner', 'trip:Europe'), and then you later decide owners can no longer add bookings to a trip, you can remove the relation within the trip type with no code changes in your application, and all the permissions will automatically honor the change.","s":"Roles and Permissions","u":"/docs/modeling/roles-and-permissions","h":"","p":490},{"i":493,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called trip that users can be related to as viewer and/or an owner. DSL JSON model schema 1.1 type user type trip relations define owner: [user] define viewer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"trip\", \"relations\": { \"owner\": { \"this\": {} }, \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in Auth OpenFGA A Relationship: OpenFGA will be called to check if there is a relationship between a user and an object, indicating that the access is allowed Direct Relationship Type Restrictions: can be used to indicate direct relationships between users and objects A Check API Request the Check API Request is used to check for relationships between users and objects","s":"Before you start","u":"/docs/modeling/roles-and-permissions","h":"#before-you-start","p":490},{"i":495,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/modeling/roles-and-permissions","h":"#direct-access","p":490},{"i":497,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in Auth OpenFGA A Relationship: OpenFGA will be called to check if there is a relationship between a user and an object, indicating that the access is allowed Direct Relationship Type Restrictions: can be used to indicate direct relationships between users and objects A Check API Request the Check API Request is used to check for relationships between users and objects","s":"OpenFGA Concepts","u":"/docs/modeling/roles-and-permissions","h":"#-concepts","p":490},{"i":499,"t":"To illustrate modeling Roles and Permissions in OpenFGA, we will use a trip booking system where you can have owners and/or viewers that can have more granular permissions such as adding bookings to a trip or viewing bookings on it. In order to represent this, we need to: Understand how roles are related to direct relations for our trip booking system Adding implied relations to existing authorization model to define permissions for bookings Checking user roles and their permissions based on *relationship tuples* for direct and implied relations","s":"Step By Step","u":"/docs/modeling/roles-and-permissions","h":"#step-by-step","p":490},{"i":501,"t":"Relating roles within OpenFGA can be best described as the following: Roles are relations that can be directly assigned to users. Looking at our authorization model, our roles would then be owner and viewer. Meaning that a specific user can be an owner and/or a viewer. DSL JSON model schema 1.1 type user type trip relations define owner: [user] define viewer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"trip\", \"relations\": { \"owner\": { \"this\": {} }, \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Understand How Roles Work Within Our Trip Booking System","u":"/docs/modeling/roles-and-permissions","h":"#01-understand-how-roles-work-within-our-trip-booking-system","p":490},{"i":503,"t":"Permissions within OpenFGA can be best described as the following: Permissions are relations that users get only through other relations. To represent permissions, we avoid adding a direct relationship type restriction to the relation in the authorization model. Instead, we define the relation from other relations to indicate that it is a permission granted to and implied from a different relation. To add permissions related to bookings, we can add new relations to the trip object type denoting the various actions a user can take on trips (view, edit, delete, rename, etc...) To allow viewers of a trip to have permissions to view bookings and owners to have permissions to add/view bookings, we would modify the type as the following: DSL JSON model schema 1.1 type user type trip relations define owner: [user] define viewer: [user] define booking_adder: owner define booking_viewer: viewer or owner { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"trip\", \"relations\": { \"owner\": { \"this\": {} }, \"viewer\": { \"this\": {} }, \"booking_adder\": { \"computedUserset\": { \"relation\": \"owner\" } }, \"booking_viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"relation\": \"viewer\" } }, { \"computedUserset\": { \"relation\": \"owner\" } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Note: notice how both booking_viewer and booking_adder don't have direct relationship type restrictions. This is to ensure that the relation can only be assigned through the role and not directly.","s":"02. Adding Permissions For Bookings","u":"/docs/modeling/roles-and-permissions","h":"#02-adding-permissions-for-bookings","p":490},{"i":505,"t":"Now that our type definitions reflects the roles and permissions on how bookings can be viewed/added. Let's create relationship tuples to assign roles to users and then check if users have the proper permissions. Let us create two relationship tuples: that gives bob the role of viewer on trip: Europe. that gives alice the role of owner on trip: Europe. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Add bob as viewer on trip:Europe { user: 'user:bob', relation: 'viewer', object: 'trip:Europe'}, // Add alice as owner on trip:Europe { user: 'user:alice', relation: 'owner', object: 'trip:Europe'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Add bob as viewer on trip:Europe User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"trip:Europe\"), }, { // Add alice as owner on trip:Europe User: fgaSdk.PtrString(\"user:alice\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"trip:Europe\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Add bob as viewer on trip:Europe new() { User = \"user:bob\", Relation = \"viewer\", Object = \"trip:Europe\" }, // Add alice as owner on trip:Europe new() { User = \"user:alice\", Relation = \"owner\", Object = \"trip:Europe\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Add bob as viewer on trip:Europe user=\"user:bob\", relation=\"viewer\", object=\"trip:Europe\", ), TupleKey( # Add alice as owner on trip:Europe user=\"user:alice\", relation=\"owner\", object=\"trip:Europe\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bob\",\"relation\":\"viewer\",\"object\":\"trip:Europe\"},{\"user\":\"user:alice\",\"relation\":\"owner\",\"object\":\"trip:Europe\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Add bob as viewer on trip:Europe { \"user\":\"user:bob\", \"relation\":\"viewer\", \"object\":\"trip:Europe\" }, // Add alice as owner on trip:Europe { \"user\":\"user:alice\", \"relation\":\"owner\", \"object\":\"trip:Europe\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Now we can check: is bob allowed to view bookings on trip Europe? Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'booking_viewer', object: 'trip:Europe', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"booking_viewer\", Object: \"trip:Europe\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"booking_viewer\", Object = \"trip:Europe\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"booking_viewer\", object=\"trip:Europe\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"booking_viewer\",\"object\":\"trip:Europe\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"booking_viewer\", // has an `booking_viewer` relation object = \"trip:Europe\", // with the object `trip:Europe` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true bob is a booking_viewer because of the following chain of resolution: bob is a viewer on trip: Europe Any user related to the object trip:Europe as viewer is also related as a booking_viewer (i.e usersRelatedToObjectAs: viewer) Therefore, all viewers on a given trip are booking_viewers To confirm that bob is not allowed to add bookings on trip Europe, we can do the following check: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'booking_adder', object: 'trip:Europe', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"booking_adder\", Object: \"trip:Europe\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"booking_adder\", Object = \"trip:Europe\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"booking_adder\", object=\"trip:Europe\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"booking_adder\",\"object\":\"trip:Europe\"}}' # Response: {\"allowed\":false} check( user = \"user:bob\", // check if the user `user:bob` relation = \"booking_adder\", // has an `booking_adder` relation object = \"trip:Europe\", // with the object `trip:Europe` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false We can also check: is alice allowed to view and add bookings on trip Europe? Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:alice', relation: 'booking_viewer', object: 'trip:Europe', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:alice\", Relation: \"booking_viewer\", Object: \"trip:Europe\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:alice\", Relation = \"booking_viewer\", Object = \"trip:Europe\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:alice\", relation=\"booking_viewer\", object=\"trip:Europe\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:alice\",\"relation\":\"booking_viewer\",\"object\":\"trip:Europe\"}}' # Response: {\"allowed\":true} check( user = \"user:alice\", // check if the user `user:alice` relation = \"booking_viewer\", // has an `booking_viewer` relation object = \"trip:Europe\", // with the object `trip:Europe` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:alice', relation: 'booking_adder', object: 'trip:Europe', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:alice\", Relation: \"booking_adder\", Object: \"trip:Europe\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:alice\", Relation = \"booking_adder\", Object = \"trip:Europe\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:alice\", relation=\"booking_adder\", object=\"trip:Europe\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:alice\",\"relation\":\"booking_adder\",\"object\":\"trip:Europe\"}}' # Response: {\"allowed\":true} check( user = \"user:alice\", // check if the user `user:alice` relation = \"booking_adder\", // has an `booking_adder` relation object = \"trip:Europe\", // with the object `trip:Europe` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true alice is a booking_viewer and booking_adder because of the following chain of resolution: alice is a owner on trip: Europe Any user related to the object trip:Europe as owner is also related as a booking_viewer Any user related to the object trip:Europe as owner is also related as a booking_adder Therefore, all owners on a given trip are booking_viewers and booking_adders on that trip caution Note: Make sure to use unique ids for each object and user within your application domain when creating relationship tuples for OpenFGA. We are using first names and simple ids to just illustrate an easy-to-follow example.","s":"03. Checking User Roles And Their Permissions","u":"/docs/modeling/roles-and-permissions","h":"#03-checking-user-roles-and-their-permissions","p":490},{"i":507,"t":"Check the following sections for more on how to model for roles and permissions. Modeling Concepts: Concentric Relationships Learn about how to represent a concentric relationships in OpenFGA. More Modeling Google Drive See how to indicate that editors are commenters and viewers in Google Drive. More Modeling GitHub See how to indicate that repository admins are writers and readers in GitHub. More","s":"Related Sections","u":"/docs/modeling/roles-and-permissions","h":"#related-sections","p":490},{"i":509,"t":"In this guide you will learn how to add users to groups and grant groups access to an object using OpenFGA. When to use Adding a relationship tuple specifying that a group has a relation to an object is helpful in cases where you want to encompass a set of users with the same relation to an object. For example: Grant a group of engineers viewer access to roadmap.doc Create a block_list of members who can't access a document Sharing a document with a team Granting viewer access to a photo to followers only Making a file viewable for all users within an organization Restricting access from or to users in a certain locale","s":"User Groups","u":"/docs/modeling/user-groups","h":"","p":508},{"i":511,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have an object called document that users can be related to as an editor. DSL JSON model schema 1.1 type user type document relations define editor: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before you start","u":"/docs/modeling/user-groups","h":"#before-you-start","p":508},{"i":513,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/modeling/user-groups","h":"#direct-access","p":508},{"i":515,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/modeling/user-groups","h":"#-concepts","p":508},{"i":517,"t":"As we develop our application, we might encounter use cases where a group of users have a certain role or permission on an object. For example, members of a certain team might have an editor relation to a certain document. In order to represent this in OpenFGA, we need: Introduce the concept of a team to the authorization model Add users as members to the team Assign the team members a relation to an object Checking an individual member's access to the object","s":"Step By Step","u":"/docs/modeling/user-groups","h":"#step-by-step","p":508},{"i":519,"t":"We need to define the object team in our authorization model. In our use case, a team can have members, so we make the following changes to our authorization model: DSL JSON model schema 1.1 type user type document relations define editor: [team#member] type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Introduce The Concept Of A Team To The Authorization Model","u":"/docs/modeling/user-groups","h":"#01-introduce-the-concept-of-a-team-to-the-authorization-model","p":508},{"i":521,"t":"We can now assign users as members of teams. Let's create a new relationship tuple that states alice is a member of team:writers. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:alice', relation: 'member', object: 'team:writers'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:alice\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"team:writers\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:alice\", Relation = \"member\", Object = \"team:writers\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:alice\", relation=\"member\", object=\"team:writers\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:alice\",\"relation\":\"member\",\"object\":\"team:writers\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:alice\", \"relation\":\"member\", \"object\":\"team:writers\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"02. Add Users As Members To The Team","u":"/docs/modeling/user-groups","h":"#02-add-users-as-members-to-the-team","p":508},{"i":523,"t":"To represent groups we use the type:object_id#relation format, which represents the set of users related to the type:object_id as a certain relation. For example, team:writers#members is used to represent the set of users related to the team:writers object as members. In order to assign members of a team a relation to a document, we can create the following relationship tuple that states that members of team:writers are editors of document:meeting_notes.doc. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Set of users related to 'team:writers' as 'member' { user: 'team:writers#member', relation: 'editor', object: 'document:meeting_notes.doc'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Set of users related to 'team:writers' as 'member' User: fgaSdk.PtrString(\"team:writers#member\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"document:meeting_notes.doc\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Set of users related to 'team:writers' as 'member' new() { User = \"team:writers#member\", Relation = \"editor\", Object = \"document:meeting_notes.doc\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Set of users related to 'team:writers' as 'member' user=\"team:writers#member\", relation=\"editor\", object=\"document:meeting_notes.doc\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"team:writers#member\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Set of users related to 'team:writers' as 'member' { \"user\":\"team:writers#member\", \"relation\":\"editor\", \"object\":\"document:meeting_notes.doc\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"03. Assign The Team Members A Relation To An Object","u":"/docs/modeling/user-groups","h":"#03-assign-the-team-members-a-relation-to-an-object","p":508},{"i":525,"t":"Now that we have: a relationship tuple indicating that alice is an member of team:writers a relationship tuple indicating that members of team:writers are editors of document:meeting_notes.doc This means that if we *check*is alice an editor of document:meeting_notes.doc? We would get the following: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:alice', relation: 'editor', object: 'document:meeting_notes.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:alice\", Relation: \"editor\", Object: \"document:meeting_notes.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:alice\", Relation = \"editor\", Object = \"document:meeting_notes.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:alice\", relation=\"editor\", object=\"document:meeting_notes.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:alice\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc\"}}' # Response: {\"allowed\":true} check( user = \"user:alice\", // check if the user `user:alice` relation = \"editor\", // has an `editor` relation object = \"document:meeting_notes.doc\", // with the object `document:meeting_notes.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The chain of resolution becomes: alice is member of team:writers members of team:writers are editors of document:meeting_notes therefore, alice is editor of document:meeting_notes caution Note: When creating relationship tuples for OpenFGA make sure to use unique ids for each object and user within your application domain. We're using first names and simple ids to just illustrate an easy-to-follow example.","s":"04. Checking An Individual Member's Access To An Object","u":"/docs/modeling/user-groups","h":"#04-checking-an-individual-members-access-to-an-object","p":508},{"i":527,"t":"Check the following sections for more on how user groups can be used. Managing Group Membership Learn how to add and remove users from groups More Modeling Google Drive See how User Groups can be used to share documents within a domain in the Google Drive use-case. More Modeling GitHub Granting teams permissions to a repo in the GitHub use-case. More","s":"Related Sections","u":"/docs/modeling/user-groups","h":"#related-sections","p":508},{"i":529,"t":"In this guide you will learn how to grant a user access to a particular object through a relationship with another object. When to use Giving user access through a relationship with another object is helpful because it allows scaling as the number of object grows. For example: organization that owns many repos team that administers many documents","s":"Managing Relationships Between Objects","u":"/docs/interacting/managing-relationships-between-objects","h":"","p":528},{"i":531,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model a repo type that can have a admin relation DSL JSON model schema 1.1 type user type repo relations define admin: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before you start","u":"/docs/interacting/managing-relationships-between-objects","h":"#before-you-start","p":528},{"i":533,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#direct-access","p":528},{"i":535,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/managing-relationships-between-objects","h":"#-concepts","p":528},{"i":537,"t":"For the current model, a user can be related as an admin to an object of type repo. If we wanted to have Anne be related to two repos, repo:1 and repo:2, we would have to add two relationship tuples, like so: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'admin', object: 'repo:1'}, { user: 'user:anne', relation: 'admin', object: 'repo:2'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"admin\"), Object: fgaSdk.PtrString(\"repo:1\"), }, { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"admin\"), Object: fgaSdk.PtrString(\"repo:2\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"admin\", Object = \"repo:1\" }, new() { User = \"user:anne\", Relation = \"admin\", Object = \"repo:2\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"admin\", object=\"repo:1\", ), TupleKey( user=\"user:anne\", relation=\"admin\", object=\"repo:2\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"admin\",\"object\":\"repo:1\"},{\"user\":\"user:anne\",\"relation\":\"admin\",\"object\":\"repo:2\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"admin\", \"object\":\"repo:1\" }, { \"user\":\"user:anne\", \"relation\":\"admin\", \"object\":\"repo:2\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") In general, every time we wanted to add a new admin relationship to a repo we'd have to add a new tuple. This doesn't scale as the list of repos and users grows.","s":"Step By Step","u":"/docs/interacting/managing-relationships-between-objects","h":"#step-by-step","p":528},{"i":539,"t":"Another way of modeling this is to have an authorization model as follows: DSL JSON model schema 1.1 type user type repo relations define admin: [user] or repo_admin from owner define owner: [org] type org relations define repo_admin: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"admin\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"repo_admin\" } } } ] } }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"org\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"org\", \"relations\": { \"repo_admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"repo_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In this model, we have: added a new type org with one relation repo_admin. added a new relation owner for type repo. re-defined the relation admin for repo. A user can be defined as an admin directly, as we have seen above, or through the repo_admin from owner clause. How this works, for example, is that if user is related as repo_admin to org:xyz, and org:xyz is related as owner to repo:1, then user is an admin of repo:1.","s":"01. Modify Authorization Model","u":"/docs/interacting/managing-relationships-between-objects","h":"#01-modify-authorization-model","p":528},{"i":541,"t":"With this model, we can add tuples representing that an org is the owner of a repo. By adding following relationship tuples, we are indicating that the xyz organization is the owner of repositories with IDs 1 and 2: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'org:xyz', relation: 'owner', object: 'repo:1'}, { user: 'org:xyz', relation: 'owner', object: 'repo:2'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"org:xyz\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"repo:1\"), }, { User: fgaSdk.PtrString(\"org:xyz\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"repo:2\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"org:xyz\", Relation = \"owner\", Object = \"repo:1\" }, new() { User = \"org:xyz\", Relation = \"owner\", Object = \"repo:2\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"org:xyz\", relation=\"owner\", object=\"repo:1\", ), TupleKey( user=\"org:xyz\", relation=\"owner\", object=\"repo:2\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:1\"},{\"user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:2\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"org:xyz\", \"relation\":\"owner\", \"object\":\"repo:1\" }, { \"user\":\"org:xyz\", \"relation\":\"owner\", \"object\":\"repo:2\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"02. Adding Relationship Tuples Where User Is Another Object","u":"/docs/interacting/managing-relationships-between-objects","h":"#02-adding-relationship-tuples-where-user-is-another-object","p":528},{"i":543,"t":"Now, imagine we have a new user Becky. If we wanted to have Becky be the admin of all repos without having to add one tuple per repo, all we need to do is add one tuple that says that Becky is related as repo_admin to org:xyz. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:becky', relation: 'repo_admin', object: 'org:xyz'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:becky\"), Relation: fgaSdk.PtrString(\"repo_admin\"), Object: fgaSdk.PtrString(\"org:xyz\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:becky\", Relation = \"repo_admin\", Object = \"org:xyz\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:becky\", relation=\"repo_admin\", object=\"org:xyz\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:becky\",\"relation\":\"repo_admin\",\"object\":\"org:xyz\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:becky\", \"relation\":\"repo_admin\", \"object\":\"org:xyz\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"03. Adding Relationship Tuples To The Other Object","u":"/docs/interacting/managing-relationships-between-objects","h":"#03-adding-relationship-tuples-to-the-other-object","p":528},{"i":545,"t":"We can now verify that Becky an admin of all the repos owned by org:xyz: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'admin', object: 'repo:1', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"admin\", Object: \"repo:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"admin\", Object = \"repo:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"admin\", object=\"repo:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"admin\",\"object\":\"repo:1\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"admin\", // has an `admin` relation object = \"repo:1\", // with the object `repo:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'admin', object: 'repo:2', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"admin\", Object: \"repo:2\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"admin\", Object = \"repo:2\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"admin\", object=\"repo:2\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"admin\",\"object\":\"repo:2\"}}' # Response: {\"allowed\":true} check( user = \"user:becky\", // check if the user `user:becky` relation = \"admin\", // has an `admin` relation object = \"repo:2\", // with the object `repo:2` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"04. Validating User Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#04-validating-user-access","p":528},{"i":547,"t":"Suppose now that we want to prevent users from being an admin of repo:1 via org:xyz. We can delete one tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ { user: 'org:xyz', relation: 'owner', object: 'repo:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"org:xyz\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"repo:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"org:xyz\", Relation = \"owner\", Object = \"repo:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"org:xyz\", relation=\"owner\", object=\"repo:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ { \"user\":\"org:xyz\", \"relation\":\"owner\", \"object\":\"repo:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") With this change, we may now verify that Becky is no longer an admin of repo:1. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:becky', relation: 'admin', object: 'repo:1', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:becky\", Relation: \"admin\", Object: \"repo:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:becky\", Relation = \"admin\", Object = \"repo:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:becky\", relation=\"admin\", object=\"repo:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:becky\",\"relation\":\"admin\",\"object\":\"repo:1\"}}' # Response: {\"allowed\":false} check( user = \"user:becky\", // check if the user `user:becky` relation = \"admin\", // has an `admin` relation object = \"repo:1\", // with the object `repo:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"05. Revoking Access","u":"/docs/interacting/managing-relationships-between-objects","h":"#05-revoking-access","p":528},{"i":549,"t":"Check the following sections for more on how to model relationships between objects. Modeling Parent-Child Objects Learn about how to cascade relationships from parent object to child object. More Modeling Object to Object Relationships Learn about modeling patterns on objects that are not specifically tied to a user. More Modeling GitHub An example of object to object relationships. More","s":"Related Sections","u":"/docs/interacting/managing-relationships-between-objects","h":"#related-sections","p":528},{"i":551,"t":"In this guide you will learn the uses of and limitations for the Check, Read, Expand, and ListObjects API endpoints.","s":"Relationship Queries: Check, Read, Expand, and ListObjects","u":"/docs/interacting/relationship-queries","h":"","p":550},{"i":553,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA Concepts and know how to develop the things that we will list below. Assume that you have the following authorization model. You have a type called document that can have a reader and writer. All writers are readers. bob has a writer relationship with document:planning. DSL JSON model schema 1.1 type user type document relations define writer: [user] define reader: [user] or writer { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"writer\": { \"this\": {} }, \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } ] } } }, \"metadata\": { \"relations\": { \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } [ // Bob has writer relationship with planning document { \"user\": \"user:bob\", \"relation\": \"writer\", \"object\": \"document:planning\", }, ] In addition, you will need to know the following: Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/interacting/relationship-queries","h":"#before-you-start","p":550},{"i":555,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/interacting/relationship-queries","h":"#direct-access","p":550},{"i":557,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/interacting/relationship-queries","h":"#-concepts","p":550},{"i":560,"t":"The Check API is an API endpoint that returns whether the user has a certain relationship with an object. OpenFGA will resolve all prerequisite relationships to establish whether a relationship exists.","s":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for","p":550},{"i":562,"t":"Check can be called if you need to establish whether a particular user has a specific relationship with a particular object. For example, you can call check to determine whether bob has a reader relationship with document:planning. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bob', relation: 'reader', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bob\", Relation: \"reader\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bob\", Relation = \"reader\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"reader\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"reader\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:bob\", // check if the user `user:bob` relation = \"reader\", // has an `reader` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The OpenFGA API will return true because there is an implied relationship as every writer is also a reader bob is a writer for document:planning","s":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use","p":550},{"i":564,"t":"Check is designed to answer the question \"Does user:X have relationship Y with object:Z?\". It is not designed to answer the following questions: \"Who has relationship Y with object:Z?\" \"What are the objects that userX has relationship Y with?\" \"Why does user:X have relationship Y with object:Z?\"","s":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it","p":550},{"i":567,"t":"The Read API is an API endpoint that returns the relationship tuples that are stored in the system that satisfy a query.","s":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-1","p":550},{"i":569,"t":"Read can be called if you need to get all the stored relationship tuples that relate: a particular user to any objects of a specific type with a particular relation a particular user to any objects of a specific type with any relation a particular object to any user with a particular relation 1. A Particular User To Any Objects Of A Specific Type With A Particular Relation‚Äã For example, to query all the stored relationship tuples bob has a writer relationship with, one can ask Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Execute a read const { tuples } = await fgaClient.read({ tuple_key: { user:'user:bob', relation:'writer', object:'document:', }, }); // tuples = [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ReadRequest{ TupleKey: fgaSdk.TupleKey{ User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"document:\"), }, } data, response, err := fgaClient.OpenFgaApi.Read(context.Background()).Body(body).Execute() // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = fgaClient.Read(new ReadRequest(new TupleKey() { User = \"user:bob\", Relation = \"writer\", Object = \"document:\", })); // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.read_request import ReadRequest # from openfga_sdk.models.read_response import ReadResponse # from openfga_sdk.models.tuple_key import TupleKey async def read(): body = ReadRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"writer\", object=\"document:\", ), ) response = await fga_client_instance.read(body) # response = ReadResponse({\"tuples\":[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/read \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:\"}}' # Response: \"tuples\": {[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]} read( // read all stored tuples \"user:bob\", // where user `user:bob` has $(opts.relation ? '': 'any ' )relation \"writer\", // `writer` \"document:\", // with the type `document:` ); Reply: tuples:[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] 2. A Particular User To Any Objects Of A Specific Type With Any Relation‚Äã For example, to query all the stored relationship tuples in which bob is related to objects of type document as any relation, one can issue the following call: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Execute a read const { tuples } = await fgaClient.read({ tuple_key: { user:'user:bob', object:'document:', }, }); // tuples = [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ReadRequest{ TupleKey: fgaSdk.TupleKey{ User: fgaSdk.PtrString(\"user:bob\"), Object: fgaSdk.PtrString(\"document:\"), }, } data, response, err := fgaClient.OpenFgaApi.Read(context.Background()).Body(body).Execute() // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = fgaClient.Read(new ReadRequest(new TupleKey() { User = \"user:bob\", Object = \"document:\", })); // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.read_request import ReadRequest # from openfga_sdk.models.read_response import ReadResponse # from openfga_sdk.models.tuple_key import TupleKey async def read(): body = ReadRequest( tuple_key=TupleKey( user=\"user:bob\", object=\"document:\", ), ) response = await fga_client_instance.read(body) # response = ReadResponse({\"tuples\":[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/read \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"user\":\"user:bob\",\"object\":\"document:\"}}' # Response: \"tuples\": {[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]} read( // read all stored tuples \"user:bob\", // where user `user:bob` has $(opts.relation ? '': 'any ' )relation \"document:\", // with the type `document:` ); Reply: tuples:[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] 3. A Particular Object To Any User With A Particular Relation‚Äã For example, to query all the stored relationship tuples in which any user is related to document:planning as a writer, one can issue the following call: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Execute a read const { tuples } = await fgaClient.read({ tuple_key: { relation:'writer', object:'document:planning', }, }); // tuples = [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ReadRequest{ TupleKey: fgaSdk.TupleKey{ Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"document:planning\"), }, } data, response, err := fgaClient.OpenFgaApi.Read(context.Background()).Body(body).Execute() // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = fgaClient.Read(new ReadRequest(new TupleKey() { Relation = \"writer\", Object = \"document:planning\", })); // data = { \"tuples\": [{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.read_request import ReadRequest # from openfga_sdk.models.read_response import ReadResponse # from openfga_sdk.models.tuple_key import TupleKey async def read(): body = ReadRequest( tuple_key=TupleKey( relation=\"writer\", object=\"document:planning\", ), ) response = await fga_client_instance.read(body) # response = ReadResponse({\"tuples\":[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/read \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"relation\":\"writer\",\"object\":\"document:planning\"}}' # Response: \"tuples\": {[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]} read( // read all stored tuples // for users who have relation \"writer\", // `writer` \"document:planning\", // with the object `document:planning` ); Reply: tuples:[{\"key\": {\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]","s":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-1","p":550},{"i":571,"t":"The Read API will only return all the stored relationships that match the query specification. It does not expand or traverse the graph by taking the authorization model into account. For example, if you specify that writers are viewers in the authorization model, the Read API will ignore that and it will return tuples where a user is a viewer if and only if the (user_id, \"viewer\", object_type:object_id) relationship tuple exists in the system. In the following case, although all writers have reader relationships for document objects and bob is a writer for document:planning, if you query for all objects that bob has reader relationships, it will not return document:planning. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Execute a read const { tuples } = await fgaClient.read({ tuple_key: { user:'user:bob', relation:'reader', object:'document:', }, }); // tuples = [] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ReadRequest{ TupleKey: fgaSdk.TupleKey{ User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"reader\"), Object: fgaSdk.PtrString(\"document:\"), }, } data, response, err := fgaClient.OpenFgaApi.Read(context.Background()).Body(body).Execute() // data = { \"tuples\": [] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = fgaClient.Read(new ReadRequest(new TupleKey() { User = \"user:bob\", Relation = \"reader\", Object = \"document:\", })); // data = { \"tuples\": [] } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.read_request import ReadRequest # from openfga_sdk.models.read_response import ReadResponse # from openfga_sdk.models.tuple_key import TupleKey async def read(): body = ReadRequest( tuple_key=TupleKey( user=\"user:bob\", relation=\"reader\", object=\"document:\", ), ) response = await fga_client_instance.read(body) # response = ReadResponse({\"tuples\":[]}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/read \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"user\":\"user:bob\",\"relation\":\"reader\",\"object\":\"document:\"}}' # Response: \"tuples\": {[]} read( // read all stored tuples \"user:bob\", // where user `user:bob` has $(opts.relation ? '': 'any ' )relation \"reader\", // `reader` \"document:\", // with the type `document:` ); Reply: tuples:[] info Although bob is a writer to document:planning and every writer is also a reader, the Read API will return an empty list because there are no stored relationship tuples that relate bob to document:planning as reader.","s":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-1","p":550},{"i":574,"t":"The Expand API returns all users (including users and usersets) that have a specific relationship with an object. The response is represented as a tree of users or usersets. To build the full graph of access, you would need to recursively call expand on the leaves returned from the previous expand call.","s":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-2","p":550},{"i":576,"t":"Expand is used for debugging and to understand why a user has a particular relationship with a specific object. For example, to understand why bob can have a reader relationship with document:planning, one could first call Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); const { tree } = await fgaClient.expand({ tuple_key: { relation: 'reader', // expand all who has 'reader' relation object: 'document:planning', // with the object 'document:planning' }, authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw' }); // tree = ... Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ExpandRequest{ TupleKey: fgaSdk.TupleKey{ Relation: fgaSdk.PtrString(\"reader\"), // expand all who has \"reader\" relation Object: fgaSdk.PtrString(\"document:planning\"), // with the object \"document:planning\" }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), } data, response, err := fgaClient.OpenFgaApi.Expand(context.Background()).Body(body).Execute() // data = { tree: ...} Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = await fgaClient.Expand{TupleKey = new ExpandRequest(new TupleKey() { Relation = \"reader\", // expand all who has \"reader\" relation Object = \"document:planning\" // with the object \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response = { tree: ... } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.expand_request import ExpandRequest # from openfga_sdk.models.expand_response import ExpandResponse # from openfga_sdk.models.tuple_key import TupleKey async def expand(): body = ExpandRequest( tuple_key=TupleKey( relation: \"reader\", object: \"document:planning\", ), authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.expand(body) # response = ExpandResponse({\"tree\":...}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/expand \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"relation\":\"reader\",\"object\":\"document:planning\"}, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' # Response: {\"tree\": ...} expand( \"reader\", // expand all who has `reader` relation \"document:planning\", // with the object `document:planning` authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: {tree:...} The result of this call will be like { \"tree\":{ \"root\":{ \"type\":\"document:planning#reader\", \"leaf\":{ \"computed\":{ \"userset\":\"document:planning#writer\" } } } } } } The returned tree will contain writer, for which we will call Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); const { tree } = await fgaClient.expand({ tuple_key: { relation: 'writer', // expand all who has 'writer' relation object: 'document:planning', // with the object 'document:planning' }, authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw' }); // tree = ... Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ExpandRequest{ TupleKey: fgaSdk.TupleKey{ Relation: fgaSdk.PtrString(\"writer\"), // expand all who has \"writer\" relation Object: fgaSdk.PtrString(\"document:planning\"), // with the object \"document:planning\" }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), } data, response, err := fgaClient.OpenFgaApi.Expand(context.Background()).Body(body).Execute() // data = { tree: ...} Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = await fgaClient.Expand{TupleKey = new ExpandRequest(new TupleKey() { Relation = \"writer\", // expand all who has \"writer\" relation Object = \"document:planning\" // with the object \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response = { tree: ... } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.expand_request import ExpandRequest # from openfga_sdk.models.expand_response import ExpandResponse # from openfga_sdk.models.tuple_key import TupleKey async def expand(): body = ExpandRequest( tuple_key=TupleKey( relation: \"writer\", object: \"document:planning\", ), authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.expand(body) # response = ExpandResponse({\"tree\":...}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/expand \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"tuple_key\":{\"relation\":\"writer\",\"object\":\"document:planning\"}, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' # Response: {\"tree\": ...} expand( \"writer\", // expand all who has `writer` relation \"document:planning\", // with the object `document:planning` authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: {tree:...} The result of this call will be like { \"tree\":{ \"root\":{ \"type\":\"document:planning#writer\", \"leaf\":{ \"users\":{ \"users\":[ \"user:bob\" ] } } } } } } From there, we will learn that those related to document:planning as reader are all those who are related to that document as writer bob is related to document:planning as writer","s":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-2","p":550},{"i":578,"t":"The Expand call is expensive and has high latency. As such, it is designed to be used for debugging and understanding why a user has a particular relationship with a specific object. It is not designed for checking whether a user has a particular relationship with a specific object. In that case the Check API call should be used instead.","s":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-2","p":550},{"i":581,"t":"The ListObjects API is an API endpoint that returns the list of all the objects of a particular type that a specific user has a specific relationship with. It provides a solution to the Search with Permissions (Option 3) use case for access-aware filtering on small object collections. Warning Make sure to read the caveats when using ListObjects.","s":"What Is It For?","u":"/docs/interacting/relationship-queries","h":"#what-is-it-for-3","p":550},{"i":583,"t":"Use the ListObjects API to get what objects a user can see based on the relationships they have. See Search with Permissions for more guidance. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); const response = await fgaClient.listObjects({ authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user: \"user:bob\", relation: \"reader\", type: \"document\", contextual_tuples: { tuple_keys: [{ user: \"user:bob\", relation: \"reader\", object: \"document:otherdoc\" }] }, }); // response.objects = [\"document:otherdoc\", \"document:planning\"] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ListObjectsRequest{ AuthorizationModelId: PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), User: \"user:bob\", Relation: \"reader\", Type: \"document\", ContextualTuples: &ContextualTupleKeys{ TupleKeys: []TupleKey{{ User: PtrString(\"user:bob\"), Relation: PtrString(\"reader\"), Object: PtrString(\"document:otherdoc\"), }, }, } data, response, err := apiClient.OpenFgaApi.ListObjects(context.Background()).Body(body).Execute() // data = { \"objects\": [\"document:otherdoc\", \"document:planning\"] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var body = new ListObjectsRequest{ AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", User = \"user:bob\", Relation = \"reader\", Type = \"document\", ContextualTuples = new ContextualTupleKeys() { TupleKeys = new List<TupleKey> { new(\"document:otherdoc\", \"reader\", \"user:bob\") } } }; var response = await openFgaApi.ListObjects(body); // response.Objects = [\"document:otherdoc\", \"document:planning\"] Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.list_objects_request import ListObjectsRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys async def list_objects(): body = ListObjectsRequest( authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", user=\"user:bob\", relation=\"reader\", type=\"document\", contextual_tuples=ContextualTupleKeys( tuple_keys=[ TupleKey( user=\"user:bob\", relation=\"reader\", object=\"document:otherdoc\") ] ) ) response = await fga_client_instance.list_objects(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/list-objects \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{ \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"type\": \"document\", \"relation\": \"reader\", \"user\":\"user:bob\", \"contextual_tuples\": { \"tuple_keys\": [ {\"object\": \"document:otherdoc\", \"relation\": \"reader\", \"user\": \"user:bob\"} ] } }' # Response: {\"objects\": [\"document:otherdoc\", \"document:planning\"]} listObjects( \"user:bob\", // list the objects that the user `user:bob` \"reader\", // has an `reader` relation \"document\", // and that are of type `document` authorization_model_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", // for this particular authorization model id contextual_tuples = [ // Assuming the following is true {user = \"user:bob\", relation = \"reader\", object = \"document:otherdoc\"} ] ); Reply: [\"document:otherdoc\", \"document:planning\"] There's two variations of the List Objects API. The standard version, which waits until all results are ready and sends them in one response. The streaming version, which should be used if you want the individual results as soon as they become available.","s":"When To Use?","u":"/docs/interacting/relationship-queries","h":"#when-to-use-3","p":550},{"i":585,"t":"ListObjects will return the results found within the time allotted (listObjectsDeadline, default: 3s) up to the maximum number of results configured (listObjectsMaxResults, default: 1000). See Configuring the Server) for more on how to change the default configuration. If you set listObjectsDeadline to 1s, the server will spend at most 1 second finding results. If you set listObjectsMaxResults to 10, the server will return, at most, 10 objects. If the number of objects of that type is high, you should set a high value for listObjectsDeadline. If the number of objects of that type the user could have access to is high, you should set a high value for listObjectsMaxResults. Warning ListObjects has sub-optimal performance if there are and or but not in your Authorization Model. Proceed with care if you intend to use this combination in production.","s":"Caveats And When Not To Use It","u":"/docs/interacting/relationship-queries","h":"#caveats-and-when-not-to-use-it-3","p":550},{"i":587,"t":"Check Read Expand ListObjects Purpose Check if user has particular relationship with certain object Return all stored relationship tuples that match query Expand the specific relationship on a particular object List all objects of a particular type that a user has a specific relationship with When to use Validate if user X can perform Y on object Z List stored relationships in system Understand why user X can perform Y on object Z Filter the objects a user has access to","s":"Summary","u":"/docs/interacting/relationship-queries","h":"#summary","p":550},{"i":589,"t":"Check out this additional content for more information on how to query relationships. Check API Reference Official reference guide for the Check API More Read API Reference Official reference guide for the Read API More Expand API Reference Official reference guide for the Expand API More ListObjects API Reference Official reference guide for the ListObjects API More","s":"Related Sections","u":"/docs/interacting/relationship-queries","h":"#related-sections","p":550},{"i":591,"t":"In this guide you'll learn how to model relationships that may or may not be assigned directly to individual users. When to use Disabling direct relationships for a certain relation on an objects are useful especially in cases where you are trying to model some permissions that are not usually granted individually to a user. This is useful when: For security reason, not permitting permissions assigned directly to individuals without associating roles","s":"Direct Relationships","u":"/docs/modeling/building-blocks/direct-relationships","h":"","p":590},{"i":593,"t":"To better understand this guide, you should be familiar with some OpenFGA Concepts and know how to develop the things listed below. You will need to know the following: Direct Access OpenFGA Concepts Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Direct Relationship Type Restrictions: used in the context of the relation definition can be used to allow direct relationships to the objects of this type","s":"Before You Start","u":"/docs/modeling/building-blocks/direct-relationships","h":"#before-you-start","p":590},{"i":595,"t":"You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí","s":"Direct Access","u":"/docs/modeling/building-blocks/direct-relationships","h":"#direct-access","p":590},{"i":597,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Direct Relationship Type Restrictions: used in the context of the relation definition can be used to allow direct relationships to the objects of this type","s":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/direct-relationships","h":"#-concepts","p":590},{"i":599,"t":"Direct relationships are relationships where a user has a relationship to an object that is not dependent on any other relationship they have with that object. When checking for a relationship, a direct relationship exists if a relationship tuple is present in the system with the exact same object and relation that were in the query and where the user is one of: the same user ID as that in the query type bound public access (<type>:*) a set of users that contains the user ID present in the query","s":"What Are Direct Relationships?","u":"/docs/modeling/building-blocks/direct-relationships","h":"#what-are-direct-relationships","p":590},{"i":601,"t":"Direct relationships can be enabled for a specific relation on an object type by adding direct relationship type restrictions from that relation's definition. Likewise, they can be disabled by removing the direct relationship type restrictions. DSL JSON model schema 1.1 type user type document relations define viewer: [user,user:*,team#member] or editor define editor: [user,team#member] type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info The authorization model describes two object types: document and team. The document type definition has two relations, editor and viewer. Both relations allow a direct relationship; viewer also allows an indirect relationship through editor. In the team type definition, there is a single member relation that only allows direct relationships.","s":"Enable Or Disable Direct Relationships","u":"/docs/modeling/building-blocks/direct-relationships","h":"#enable-or-disable-direct-relationships","p":590},{"i":603,"t":"To illustrate the effect enabling or disabling direct relationships on a specific relation has, we'll investigate several situations.","s":"How It Affects Your System","u":"/docs/modeling/building-blocks/direct-relationships","h":"#how-it-affects-your-system","p":590},{"i":605,"t":"Let us start with the authorization model we had above: DSL JSON model schema 1.1 type user type document relations define viewer: [user,user:*,team#member] or editor define editor: [user,team#member] type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Now choose the type of relation to see how it affects your system: Direct User Type Bound Public Access Userset Indirect Relationship Assume you have a tuple that states that Anne is a viewer of document:planning [ { \"user\": \"user:anne\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] Now if we do a check request to see if Anne can view the planning document, we will get a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true This is because: There is a relationship tuple specifying that Anne has a viewer relationship with document:planning. Direct relationships are allowed in the viewer relation definition in the document type definition. Assume you have a type bound public access tuple where everyone of type user is a viewer of document:planning (In other words, the document is public) [ { \"user\": \"user:*\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] Now if we do a check request to see if Beth can view the planning document, we will get a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true This is because: There is a relationship tuple specifying that everyone of type user has a viewer relationship with document:planning. Direct relationships are allowed in the viewer relation definition in the document type definition. info Note: Even though the relationship tuple stored in the system does not specify the user (beth), this is still considered a direct relationship. Usersets are the third way direct relationships apply, we will see how in this section. Assume you have two relationship tuples: Charlie is a member of the product team. Members of the product team are viewers of the planning document. [ { \"user\": \"user:charlie\", \"relation\": \"member\", \"object\": \"team:product\", }, { \"user\": \"team:product#member\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] info Note that these two relationship tuples are specifying that: user:charlie is a member of team:product. any member of team:product is a viewer of document:planning. Note that this second relationship tuple is specifying that the members of the team have viewer access, and not the team object itself. Now if we do a check request to see if charlie can view the planning document, we will get a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:charlie', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:charlie\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:charlie\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:charlie\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:charlie\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:charlie\", // check if the user `user:charlie` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true This is because: Charlie is a member of the product team. There is a relationship tuple specifying that all members of the product team have a viewer relationship with document:planning. Direct relationships are allowed in the viewer relation definition in the document type definition. Note that this is still considered a direct relationship no matter how many resolutions occur on the usersets until the user is found. For example, if our relationship tuples were the following relationship tuples: Dany is a member of the product leads team. Members of the product leads team are members of the product team. Members of the product team are members of the contoso team. Members of the contoso team are viewers of the planning document. [ { \"user\": \"user:dany\", \"relation\": \"member\", \"object\": \"team:product-leads\", }, { \"user\": \"team:product-leads#member\", \"relation\": \"member\", \"object\": \"team:product\", }, { \"user\": \"team:product#member\", \"relation\": \"member\", \"object\": \"team:contoso\", }, { \"user\": \"team:contoso#member\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] A subsequent check request to see if Dany can view the planning document will still return a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:dany', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:dany\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:dany\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:dany\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:dany\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:dany\", // check if the user `user:dany` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true info Note: Even though the relationship tuple stored in the system does not specify the user (charlie or dany), this is still considered a direct relationship. Here we will cover one example of an indirect relationship in order to see how they differ from direct relationships. With the same authorization model we have above, assume there is a relationship tuple that specifies that Emily is an editor of document:planning. [ { \"user\": \"user:emily\", \"relation\": \"editor\", \"object\": \"document:planning\", }, ] A subsequent check request to see if emily can view the planning document will still return a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:emily', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:emily\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:emily\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:emily\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:emily\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:emily\", // check if the user `user:emily` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true This is because: Emily is an editor of the planning document. The authorization model specified that anyone who is an editor on a document is also a viewer on that document. In this case, there is NO direct viewer relationship between Emily and the planning document. The only viewer relationship that exists is implied because Emily is an editor and the authorization model specified that any document's editor is that document's viewer.","s":"1. With Direct Relationships Enabled","u":"/docs/modeling/building-blocks/direct-relationships","h":"#1-with-direct-relationships-enabled","p":590},{"i":607,"t":"In this section, we will investigate the effect of disabling direct relationships on the document's viewer relation. DSL JSON model schema 1.1 type user type document relations define viewer: editor define editor: type team relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"viewer\": { \"computedUserset\": { \"relation\": \"editor\" } }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": {} } }, { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Notice that in this updated authorization model, the direct relationship keyword has been removed from the document's viewer relation definition. Now choose the type of relation to see how it affects your system: Direct User Everyone Userset Indirect Relationship Assume you have a tuple that states that Fred is a viewer of document:planning [ { \"user\": \"user:fred\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] Now if we do a check request to see if Fred can view the planning document, we will get a response of {\"allowed\": false}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:fred', relation: 'viewer', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:fred\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:fred\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:fred\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:fred\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:fred\", // check if the user `user:fred` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false This is because: Even though there is a relationship tuple specifying that Fred has a viewer relationship with document:planning. Direct relationships are NOT allowed in the viewer relation definition in the document type definition. You will see the same behaviour with a relationship tuple specifying everyone of type user as the user. Assume you have a tuple that states that everyone of type user is a viewer of document:planning. [ { \"user\": \"user:*\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] Now if we do a check request to see if Gabriel can view the planning document, we will get a response of {\"allowed\": false}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:gabriel', relation: 'viewer', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:gabriel\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:gabriel\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:gabriel\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:gabriel\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:gabriel\", // check if the user `user:gabriel` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false This is because: Even though there is a relationship tuple specifying that everyone has a viewer relationship with document:planning. Direct relationships are NOT allowed in the viewer relation definition in the document type definition. The same logic applies to usersets. Assume you have two relationship tuples: Henry is a member of the product team. Members of the product team are viewers of the planning document. [ { \"user\": \"user:henry\", \"relation\": \"member\", \"object\": \"team:product\", }, { \"user\": \"team:product#member\", \"relation\": \"viewer\", \"object\": \"document:planning\", }, ] Now if we do a check request to see if Henry can view the planning document, we will get a response of {\"allowed\": false}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:henry', relation: 'viewer', object: 'document:planning', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:henry\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:henry\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:henry\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:henry\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":false} check( user = \"user:henry\", // check if the user `user:henry` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false This is because although: Henry is a member of the product team. There is a relationship tuple specifying that all members of the product team have a viewer relationship with document:planning. Direct relationships are NOT allowed in the viewer relation definition in the document type definition. Indirect relationships are not affected by disabling a direct relationship on a certain relation. Assume there is a relationship tuple that specifies that Ingred is an editor of document:planning. [ { \"user\": \"user:ingred\", \"relation\": \"editor\", \"object\": \"document:planning\", }, ] A subsequent check request to see if Ingred can view the planning document will still return a response of {\"allowed\": true}. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:ingred', relation: 'viewer', object: 'document:planning', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:ingred\", Relation: \"viewer\", Object: \"document:planning\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:ingred\", Relation = \"viewer\", Object = \"document:planning\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:ingred\", relation=\"viewer\", object=\"document:planning\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:ingred\",\"relation\":\"viewer\",\"object\":\"document:planning\"}}' # Response: {\"allowed\":true} check( user = \"user:ingred\", // check if the user `user:ingred` relation = \"viewer\", // has an `viewer` relation object = \"document:planning\", // with the object `document:planning` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"2. With Direct Relationships Disabled","u":"/docs/modeling/building-blocks/direct-relationships","h":"#2-with-direct-relationships-disabled","p":590},{"i":609,"t":"Check the following sections for more one how direct relationships can be used. Also, take a look at the access relation in the feature type in Modeling Entitlements for another use-case. Modeling Roles and Permissions Learn how to remove the direct relationship to indicate nonassignable permissions. More Modeling for IoT See how Roles and Permissions can be used in an IoT use-case. More Modeling Entitlements Take a look at the access relation in the feature type for an example of removing the direct relationship More","s":"Related Sections","u":"/docs/modeling/building-blocks/direct-relationships","h":"#related-sections","p":590},{"i":611,"t":"In this guide you'll learn how to model your application with objects that are not specifically tied to a user. For example, a folder is a parent of a document. When to use This design pattern is helpful in the case where there are relationships between different objects. With OpenFGA, so long as both objects are in a type defined in the authorization model, relationship tuples can be added to indicate a relationship between them. For example: communities can contain channels channels can contain posts channels can contain threads threads can contain posts bookshelf can have books trips can have bookings account can contain transactions buildings can have doors","s":"Object to Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"","p":610},{"i":613,"t":"To better follow this guide, make sure you're familiar with some OpenFGA Concepts and know how to develop the things listed below. You will start with the authorization model below, it represents a document type that can have users related as editor, and folder type that can have users related as viewer. DSL JSON model schema 1.1 type user type document relations define editor: [user] type folder relations define viewer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } In addition, you will need to know the following: Modeling User Groups‚Äã You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí OpenFGA Concepts‚Äã A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"Before You Start","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#before-you-start","p":610},{"i":615,"t":"You need to know how to add users to groups and grant groups access to resources. Learn more ‚Üí","s":"Modeling User Groups","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#modeling-user-groups","p":610},{"i":617,"t":"A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA","s":"OpenFGA Concepts","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#-concepts","p":610},{"i":620,"t":"To represent that a folder can be a parent of a document, we first need to modify our document type definition to allow a parent relation. DSL JSON model schema 1.1 type user type document relations define parent: [folder] define editor: [user] type folder relations define viewer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"folder\" } ] }, \"editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"folder\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Create Parent Relations In Document","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#01-create-parent-relations-in-document","p":610},{"i":622,"t":"Once the type definition is updated, we can now create the relationship between a folder as a parent of a document. To do this, we will create a new relationship tuple that describes: folder:budgets is a parent of document:may_budget.doc. In OpenFGA, users in the relationship tuples can not only be IDs, but also other objects in the form of type:object_id. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // The user in this case is another object where the type is `folder` and the object_id is `budgets` { user: 'folder:budgets', relation: 'parent', object: 'document:may_budget.doc'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // The user in this case is another object where the type is `folder` and the object_id is `budgets` User: fgaSdk.PtrString(\"folder:budgets\"), Relation: fgaSdk.PtrString(\"parent\"), Object: fgaSdk.PtrString(\"document:may_budget.doc\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // The user in this case is another object where the type is `folder` and the object_id is `budgets` new() { User = \"folder:budgets\", Relation = \"parent\", Object = \"document:may_budget.doc\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # The user in this case is another object where the type is `folder` and the object_id is `budgets` user=\"folder:budgets\", relation=\"parent\", object=\"document:may_budget.doc\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"folder:budgets\",\"relation\":\"parent\",\"object\":\"document:may_budget.doc\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // The user in this case is another object where the type is `folder` and the object_id is `budgets` { \"user\":\"folder:budgets\", \"relation\":\"parent\", \"object\":\"document:may_budget.doc\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"02. Add Parent Relationship Tuples","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#02-add-parent-relationship-tuples","p":610},{"i":624,"t":"Once that relationship tuple is added to OpenFGA, we can check if the relationship is valid by asking the following: \"is folder:budgets a parent of document:may_budget.doc?\" Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'folder:budgets', relation: 'parent', object: 'document:may_budget.doc', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"folder:budgets\", Relation: \"parent\", Object: \"document:may_budget.doc\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"folder:budgets\", Relation = \"parent\", Object = \"document:may_budget.doc\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"folder:budgets\", relation=\"parent\", object=\"document:may_budget.doc\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"folder:budgets\",\"relation\":\"parent\",\"object\":\"document:may_budget.doc\"}}' # Response: {\"allowed\":true} check( user = \"folder:budgets\", // check if the user `folder:budgets` relation = \"parent\", // has an `parent` relation object = \"document:may_budget.doc\", // with the object `document:may_budget.doc` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true It is important to note that the current authorization model does not imply inheritance of permissions. Even though folder:budgets is a parent of document:may_budget.doc, it does not inherit the editor relation from parent to document. Meaning editors on folder:budgets are not editors on document:may_budget.doc. Further configuration changes are needed to indicate that and will be tackled in a later guide. caution Note: When creating relationship tuples for OpenFGA make sure to use unique ids for each object and user within your application domain. We are using first names and simple ids to just illustrate an easy-to-follow example.","s":"03. Check That Parent Folders Have Permissions","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#03-check-that-parent-folders-have-permissions","p":610},{"i":626,"t":"Object to object can be used for more advanced use case, such as entitlements. An example use case is to allow subscribers to be entitled to different plans.","s":"Advanced Object to Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#advanced-object-to-object-relationships","p":610},{"i":628,"t":"To do this, the authorization model will have two types - feature and plan. DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] define access: [user] or subscriber_member from associated_plan type plan relations define subscriber_member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber_member\" } } } ] } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber_member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"subscriber_member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Type feature has two relations, associated_plan and access. Relation associated_plan allows associating plans with features while access defines who can access the feature. In our case, the access can be achieved either from direct relationship via [direct relationship type restrictions](/docs/configuration-language#the-direct-relationship-type-restrictions). or `this` object to object relationship where a user can access because it is a subscriber_member of a particular plan AND that plan is associated with the feature. Here, we define plan as the user of object feature with relationship associated_plan rather than defining feature as the user of object plan with relationship feature. The reason we choose the former is that we want to describe our system in the following plain language: A user can access a feature in a plan if they are a subscriber member of a plan that is the associated plan of a feature. This will give us a flow of user->organization->plan->feature and allows us to answer the question of whether user can access a feature rather than whether user is subscriber of a plan.","s":"01. Create Authorization Model With Object To Object Relationships","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#01-create-authorization-model-with-object-to-object-relationships","p":610},{"i":630,"t":"To realize the relationship, we will need to add the following relationship tuples. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // make anne as subscriber_member for plan:advanced { user: 'user:anne', relation: 'subscriber_member', object: 'plan:advanced'}, // The advanced plan is associated with the data preview feature { user: 'plan:advanced', relation: 'associated_plan', object: 'feature:data_preview'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // make anne as subscriber_member for plan:advanced User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"subscriber_member\"), Object: fgaSdk.PtrString(\"plan:advanced\"), }, { // The advanced plan is associated with the data preview feature User: fgaSdk.PtrString(\"plan:advanced\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:data_preview\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // make anne as subscriber_member for plan:advanced new() { User = \"user:anne\", Relation = \"subscriber_member\", Object = \"plan:advanced\" }, // The advanced plan is associated with the data preview feature new() { User = \"plan:advanced\", Relation = \"associated_plan\", Object = \"feature:data_preview\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # make anne as subscriber_member for plan:advanced user=\"user:anne\", relation=\"subscriber_member\", object=\"plan:advanced\", ), TupleKey( # The advanced plan is associated with the data preview feature user=\"plan:advanced\", relation=\"associated_plan\", object=\"feature:data_preview\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"subscriber_member\",\"object\":\"plan:advanced\"},{\"user\":\"plan:advanced\",\"relation\":\"associated_plan\",\"object\":\"feature:data_preview\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // make anne as subscriber_member for plan:advanced { \"user\":\"user:anne\", \"relation\":\"subscriber_member\", \"object\":\"plan:advanced\" }, // The advanced plan is associated with the data preview feature { \"user\":\"plan:advanced\", \"relation\":\"associated_plan\", \"object\":\"feature:data_preview\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"02. Adding Relationship Tuples","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#02-adding-relationship-tuples","p":610},{"i":632,"t":"To validate that the authorization model and relationship tuples are correct, we can ask the question: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:data_preview', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:data_preview\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:data_preview\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:data_preview\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:data_preview\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:data_preview\", // with the object `feature:data_preview` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We see that anne is allowed to access feature:data_preview without requiring direct relationship.","s":"03. Check To See If Access Is Allowed Without Direct Relationship","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#03-check-to-see-if-access-is-allowed-without-direct-relationship","p":610},{"i":634,"t":"At any point in time, plan:advanced may be disassociated from feature:data_preview. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ // Remove advanced plan from data preview feature { user: 'plan:advanced', relation: 'associated_plan', object: 'feature:data_preview'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Remove advanced plan from data preview feature User: fgaSdk.PtrString(\"plan:advanced\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:data_preview\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { // Remove advanced plan from data preview feature new() { User = \"plan:advanced\", Relation = \"associated_plan\", Object = \"feature:data_preview\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( # Remove advanced plan from data preview feature user=\"plan:advanced\", relation=\"associated_plan\", object=\"feature:data_preview\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"plan:advanced\",\"relation\":\"associated_plan\",\"object\":\"feature:data_preview\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ // Remove advanced plan from data preview feature { \"user\":\"plan:advanced\", \"relation\":\"associated_plan\", \"object\":\"feature:data_preview\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") When this is the case, anne will no longer have access to feature:data_preview even though she is still a subscriber_member of plan:advanced. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:data_preview', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:data_preview\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:data_preview\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:data_preview\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:data_preview\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:data_preview\", // with the object `feature:data_preview` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'subscriber_member', object: 'plan:advanced', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"subscriber_member\", Object: \"plan:advanced\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"subscriber_member\", Object = \"plan:advanced\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"subscriber_member\", object=\"plan:advanced\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"subscriber_member\",\"object\":\"plan:advanced\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"subscriber_member\", // has an `subscriber_member` relation object = \"plan:advanced\", // with the object `plan:advanced` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"04. Disassociating Plan From Feature","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#04-disassociating-plan-from-feature","p":610},{"i":636,"t":"Check the following sections for more on how object-to-object relationships can be used. Advanced Modeling Patterns: Entitlements Learn how to model entitlement access patterns. More Modeling Parent-Child Relationships Learn how to model parent and child relationships. More Modeling User Groups Learn how to model user groups. More","s":"Related Sections","u":"/docs/modeling/building-blocks/object-to-object-relationships","h":"#related-sections","p":610},{"i":638,"t":"In the lifecycle of software development, you will need to make updates or changes to the authorization model. In this guide, you will learn best practices for changing your existing authorization model. With these recommendations, you will minimize downtime and ensure your relationship models stay up to date.","s":"Migrating Relations","u":"/docs/modeling/migrating/migrating-relations","h":"","p":637},{"i":640,"t":"This guide assumes you are familiar with the following OpenFGA concepts: A Type: a class of objects that have similar characteristics A User: an entity in the system that can be related to an object A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system An Object: represents an entity in the system. Users' relationships to it can be define through relationship tuples and the authorization model A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA Intersection Operator: the intersection operator can be used to indicate a relationship exists if the user is in all the sets of users","s":"Before You Start","u":"/docs/modeling/migrating/migrating-relations","h":"#before-you-start","p":637},{"i":642,"t":"The document below is an example of a relational authorization model. In this model, you can assign users to the editor relation. The editor relation has write privileges that regular users do not. In this scenario, you will migrate the following model: DSL JSON model schema 1.1 type document relations define editor: define can_edit: editor type user { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} }, \"can_edit\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"editor\" } } } }, { \"type\": \"user\" } ] } There are existing relationship tuples associated with editor relation. [ { \"user\": \"user:anne\", \"relation\": \"editor\", \"object\": \"document:roadmap\", }, { \"user\": \"user:charles\", \"relation\": \"editor\", \"object\": \"document:roadmap\", }, ] This is the authorization model that you will want to migrate to: DSL JSON model schema 1.1 type document relations define writer: define can_write: writer type user { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"writer\": { \"this\": {} }, \"can_write\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } } }, { \"type\": \"user\" } ] }","s":"Step By Step","u":"/docs/modeling/migrating/migrating-relations","h":"#step-by-step","p":637},{"i":644,"t":"To avoid service disruption, you will create a backwards compatible model. The backwards compatible model ensures the existing relationship tuple will still work. In the example below, user:Anne still has write privileges to the document:roadmap resource. DSL JSON model schema 1.1 type document relations define editor: define writer: or editor define can_write: writer define can_edit: writer type user { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"editor\": { \"this\": {} }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"editor\" } } ] } }, \"can_write\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } }, \"can_edit\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } } }, { \"type\": \"user\" } ] } Test the can_edit definition. It should produce a value of true. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_write', object: 'document:roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_write\", Object: \"document:roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_write\", Object = \"document:roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_write\", object=\"document:roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_write\",\"object\":\"document:roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_write\", // has an `can_write` relation object = \"document:roadmap\", // with the object `document:roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_edit', object: 'document:roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_edit\", Object: \"document:roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_edit\", Object = \"document:roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_edit\", object=\"document:roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_edit\",\"object\":\"document:roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_edit\", // has an `can_edit` relation object = \"document:roadmap\", // with the object `document:roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"01. Create A Backwards Compatible Model","u":"/docs/modeling/migrating/migrating-relations","h":"#01-create-a-backwards-compatible-model","p":637},{"i":646,"t":"Now that you have a backwards compatible model, you can create new relationship tuples with a new relation. In this example, you will add Bethany to the writer relationship. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Bethany assigned writer instead of editor { user: 'user:bethany', relation: 'writer', object: 'document:roadmap'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Bethany assigned writer instead of editor User: fgaSdk.PtrString(\"user:bethany\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"document:roadmap\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Bethany assigned writer instead of editor new() { User = \"user:bethany\", Relation = \"writer\", Object = \"document:roadmap\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Bethany assigned writer instead of editor user=\"user:bethany\", relation=\"writer\", object=\"document:roadmap\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bethany\",\"relation\":\"writer\",\"object\":\"document:roadmap\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Bethany assigned writer instead of editor { \"user\":\"user:bethany\", \"relation\":\"writer\", \"object\":\"document:roadmap\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Run a check in the API for Bethany to ensure correct access. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:bethany', relation: 'can_write', object: 'document:roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:bethany\", Relation: \"can_write\", Object: \"document:roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:bethany\", Relation = \"can_write\", Object = \"document:roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:bethany\", relation=\"can_write\", object=\"document:roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:bethany\",\"relation\":\"can_write\",\"object\":\"document:roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:bethany\", // check if the user `user:bethany` relation = \"can_write\", // has an `can_write` relation object = \"document:roadmap\", // with the object `document:roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02. Create a New Relationship Tuple","u":"/docs/modeling/migrating/migrating-relations","h":"#02-create-a-new-relationship-tuple","p":637},{"i":648,"t":"Next, migrate the existing relationship tuples. The new relation makes this definition obsolete. Use the read API to lookup all relationship tuples. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Execute a read const { tuples } = await fgaClient.read({}); // tuples = [{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.ReadRequest{} data, response, err := fgaClient.OpenFgaApi.Read(context.Background()).Body(body).Execute() // data = { \"tuples\": [{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } var response = fgaClient.Read(new ReadRequest()); // data = { \"tuples\": [{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] } Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.read_request import ReadRequest # from openfga_sdk.models.read_response import ReadResponse # from openfga_sdk.models.tuple_key import TupleKey async def read(): body = ReadRequest() response = await fga_client_instance.read(body) # response = ReadResponse({\"tuples\":[{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]}) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/read \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" ' # Response: \"tuples\": {[{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}]} read( // read all stored tuples ); Reply: tuples:[{\"key\": {\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"},{\"key\": {\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:planning\"}, \"timestamp\": \"2021-10-06T15:32:11.128Z\"}] Then filter out the tuples that do not match the object type or relation (in this case, document and editor respectively), and update the new tuples with the write relationship. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'writer', object: 'document:roadmap'}, { user: 'user:charles', relation: 'writer', object: 'document:roadmap'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"document:roadmap\"), }, { User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"document:roadmap\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"writer\", Object = \"document:roadmap\" }, new() { User = \"user:charles\", Relation = \"writer\", Object = \"document:roadmap\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"writer\", object=\"document:roadmap\", ), TupleKey( user=\"user:charles\", relation=\"writer\", object=\"document:roadmap\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"writer\",\"object\":\"document:roadmap\"},{\"user\":\"user:charles\",\"relation\":\"writer\",\"object\":\"document:roadmap\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"writer\", \"object\":\"document:roadmap\" }, { \"user\":\"user:charles\", \"relation\":\"writer\", \"object\":\"document:roadmap\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Finally, remove the old relationship tuples. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ { user: 'user:anne', relation: 'editor', object: 'document:roadmap'}, { user: 'user:charles', relation: 'editor', object: 'document:roadmap'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"document:roadmap\"), }, { User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"editor\"), Object: fgaSdk.PtrString(\"document:roadmap\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"editor\", Object = \"document:roadmap\" }, new() { User = \"user:charles\", Relation = \"editor\", Object = \"document:roadmap\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"editor\", object=\"document:roadmap\", ), TupleKey( user=\"user:charles\", relation=\"editor\", object=\"document:roadmap\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:roadmap\"},{\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:roadmap\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ { \"user\":\"user:anne\", \"relation\":\"editor\", \"object\":\"document:roadmap\" }, { \"user\":\"user:charles\", \"relation\":\"editor\", \"object\":\"document:roadmap\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") info Perform a write operation before a delete operation to ensure Anne still has access. Confirm the tuples are correct by running a check on the user. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_write', object: 'document:roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_write\", Object: \"document:roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_write\", Object = \"document:roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_write\", object=\"document:roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_write\",\"object\":\"document:roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_write\", // has an `can_write` relation object = \"document:roadmap\", // with the object `document:roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true The old relationship tuple no longer exists. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'editor', object: 'document:roadmap', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"editor\", Object: \"document:roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"editor\", Object = \"document:roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"editor\", object=\"document:roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:roadmap\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"editor\", // has an `editor` relation object = \"document:roadmap\", // with the object `document:roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"03. Migrate The Existing Relationship Tuples","u":"/docs/modeling/migrating/migrating-relations","h":"#03-migrate-the-existing-relationship-tuples","p":637},{"i":650,"t":"After you remove the previous relationship tuples, update your authorization model to remove the obsolete relation. DSL JSON model schema 1.1 type document relations define writer: define can_write: writer type user { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"document\", \"relations\": { \"writer\": { \"this\": {} }, \"can_write\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"writer\" } } } }, { \"type\": \"user\" } ] } Now, the write API will only accept the new relation name.","s":"04. Remove Obsolete Relationship From The Model","u":"/docs/modeling/migrating/migrating-relations","h":"#04-remove-obsolete-relationship-from-the-model","p":637},{"i":652,"t":"Review the following sections for more information on managing relationship tuples. Transactional Writes Learn how to perform transactional write More Relationship Queries Understand the differences between check, read, expand and list objects. More Production Best Practices Learn the best practices of running OpenFGA in a production environment More","s":"Related Sections","u":"/docs/modeling/migrating/migrating-relations","h":"#related-sections","p":637},{"i":654,"t":"This section tackles cases where a user may have access to a particular resource through their presence in a particular organization, and they should have that access only when logged in within the context of that organization. When to use Contextual Tuples should be used when modeling cases where a user's access to an object depends on the context of their request. For example: An employee‚Äôs ability to access a document when they are connected to the organization VPN or the api call is originating from an internal IP address. A support engineer is only able to access a user's account during office hours. If a user belongs to multiple organizations, they are only able to access a resource if they set a specific organization in their current context.","s":"Authorization Through Organization Context","u":"/docs/modeling/organization-context-authorization","h":"","p":653},{"i":656,"t":"To follow this guide, you should be familiar with some OpenFGA Concepts.","s":"Before You Start","u":"/docs/modeling/organization-context-authorization","h":"#before-you-start","p":653},{"i":658,"t":"A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system A Check Request: is a call to the OpenFGA check endpoint that returns whether the user has a certain relationship with an object. A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA A Contextual Tuple: a tuple that can be added to a check request, and only exist within the context of that particular request. You also need to be familiar with: Modeling Object-to-Object Relationships: You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Modeling Multiple Restrictions: You need to know how to model requiring multiple authorizations before allowing users to perform certain actions. Learn more ‚Üí","s":"OpenFGA Concepts","u":"/docs/modeling/organization-context-authorization","h":"#-concepts","p":653},{"i":660,"t":"For the scope of this guide, we are going to consider the following scenario. Consider you are building the authorization model for a multi-tenant project management system. In this particular system: projects are owned and managed by companies users can be members of multiple companies project access is governed by the user's role in the organization that manages the project In order for a user to access a project: The project needs to be managed by an organization the user is a member of A project is owned by a single organization A project can be shared with partner companies (that are able to view, edit but not perform admin actions, such as deletion, on the project) The user should have a role that grants access to the project The user should be logged in within the context of that organization We will start with the following authorization model: DSL JSON model schema 1.1 type user type organization relations define member: [user] define project_manager: [user] define project_editor: [user] type project relations define owner: [organization] define partner: [organization] define manager: project_manager from owner define editor: project_editor from owner or project_editor from partner or manager define can_delete: manager define can_edit: editor define can_view: editor { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} }, \"project_manager\": { \"this\": {} }, \"project_editor\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"project_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"project_editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"project\", \"relations\": { \"owner\": { \"this\": {} }, \"partner\": { \"this\": {} }, \"manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_manager\" } } }, \"editor\": { \"union\": { \"child\": [ { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_editor\" } } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"partner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_editor\" } } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"manager\" } } ] } }, \"can_delete\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"manager\" } }, \"can_edit\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"editor\" } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"editor\" } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] }, \"partner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } } ] } We are considering the case that: Anne has a project manager role at organizations A, B and C Beth has a project manager role at organization B Carl has a project manager role at organization C Project X is owned by organization A Project X is shared with organization B The above state translates to the following relationship tuples: Node.js Go .NET Python curl Pseudocode await fgaClient.write({ writes: { tuple_keys: [ // Anne has a `project manager` role at organization A { user: 'user:anne', relation: 'project_manager', object: 'organization:A'}, // Anne has a `project manager` role at organization B { user: 'user:anne', relation: 'project_manager', object: 'organization:B'}, // Anne has a `project manager` role at organization C { user: 'user:anne', relation: 'project_manager', object: 'organization:C'}, // Beth has a `project manager` role at organization B { user: 'user:anne', relation: 'project_manager', object: 'organization:B'}, // Carl has a `project manager` role at organization C { user: 'user:carl', relation: 'project_manager', object: 'organization:C'}, // Organization A owns Project X { user: 'organization:A', relation: 'owner', object: 'project:X'}, // Project X is shared with Organization B { user: 'organization:B', relation: 'partner', object: 'project:X'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne has a `project manager` role at organization A User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:A\"), }, { // Anne has a `project manager` role at organization B User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:B\"), }, { // Anne has a `project manager` role at organization C User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:C\"), }, { // Beth has a `project manager` role at organization B User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:B\"), }, { // Carl has a `project manager` role at organization C User: fgaSdk.PtrString(\"user:carl\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:C\"), }, { // Organization A owns Project X User: fgaSdk.PtrString(\"organization:A\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"project:X\"), }, { // Project X is shared with Organization B User: fgaSdk.PtrString(\"organization:B\"), Relation: fgaSdk.PtrString(\"partner\"), Object: fgaSdk.PtrString(\"project:X\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne has a `project manager` role at organization A new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:A\" }, // Anne has a `project manager` role at organization B new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:B\" }, // Anne has a `project manager` role at organization C new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:C\" }, // Beth has a `project manager` role at organization B new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:B\" }, // Carl has a `project manager` role at organization C new() { User = \"user:carl\", Relation = \"project_manager\", Object = \"organization:C\" }, // Organization A owns Project X new() { User = \"organization:A\", Relation = \"owner\", Object = \"project:X\" }, // Project X is shared with Organization B new() { User = \"organization:B\", Relation = \"partner\", Object = \"project:X\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne has a `project manager` role at organization A user=\"user:anne\", relation=\"project_manager\", object=\"organization:A\", ), TupleKey( # Anne has a `project manager` role at organization B user=\"user:anne\", relation=\"project_manager\", object=\"organization:B\", ), TupleKey( # Anne has a `project manager` role at organization C user=\"user:anne\", relation=\"project_manager\", object=\"organization:C\", ), TupleKey( # Beth has a `project manager` role at organization B user=\"user:anne\", relation=\"project_manager\", object=\"organization:B\", ), TupleKey( # Carl has a `project manager` role at organization C user=\"user:carl\", relation=\"project_manager\", object=\"organization:C\", ), TupleKey( # Organization A owns Project X user=\"organization:A\", relation=\"owner\", object=\"project:X\", ), TupleKey( # Project X is shared with Organization B user=\"organization:B\", relation=\"partner\", object=\"project:X\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:A\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:B\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:C\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:B\"},{\"user\":\"user:carl\",\"relation\":\"project_manager\",\"object\":\"organization:C\"},{\"user\":\"organization:A\",\"relation\":\"owner\",\"object\":\"project:X\"},{\"user\":\"organization:B\",\"relation\":\"partner\",\"object\":\"project:X\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne has a `project manager` role at organization A { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:A\" }, // Anne has a `project manager` role at organization B { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:B\" }, // Anne has a `project manager` role at organization C { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:C\" }, // Beth has a `project manager` role at organization B { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:B\" }, // Carl has a `project manager` role at organization C { \"user\":\"user:carl\", \"relation\":\"project_manager\", \"object\":\"organization:C\" }, // Organization A owns Project X { \"user\":\"organization:A\", \"relation\":\"owner\", \"object\":\"project:X\" }, // Project X is shared with Organization B { \"user\":\"organization:B\", \"relation\":\"partner\", \"object\":\"project:X\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"Scenario","u":"/docs/modeling/organization-context-authorization","h":"#scenario","p":653},{"i":662,"t":"When logging in within the context of organization A, Anne should be able to view and delete project X. When logging in within the context of organization B, Anne should be able to view, but not delete, project X. When logging in within the context of organization C, Anne should not be able to view nor delete project X. When logging in within the context of organization B, Beth should be able to view, but not delete, project X. Carl should not be able to view nor delete project X.","s":"Requirements","u":"/docs/modeling/organization-context-authorization","h":"#requirements","p":653},{"i":664,"t":"In order to solve for the requirements above, we will break the problem down into three steps: Understand relationships without contextual tuples. For example, we need to ensure that Anne can view and delete \"Project X\". Take organization context into consideration. This includes extending the authorization model and a temporary step of adding the required tuples to mark that Anne is in an approved context. Use contextual tuples for context related checks.","s":"Step By Step","u":"/docs/modeling/organization-context-authorization","h":"#step-by-step","p":653},{"i":666,"t":"With the authorization model and relationship tuples shown above, OpenFGA has all the information needed to ensure that Anne can view and delete \"Project X\". We can verify that using the following checks: Anne can view Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'project:X', }, }); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:X\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Anne can delete Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_delete', object: 'project:X', }, }); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_delete\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_delete\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_delete\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_delete\",\"object\":\"project:X\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_delete\", // has an `can_delete` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true More checks * Beth can view Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'can_view', object: 'project:X', }, }); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"can_view\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"can_view\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"can_view\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"can_view\",\"object\":\"project:X\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true * Beth cannot delete Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'can_delete', object: 'project:X', }, }); // allowed = false body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"can_delete\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"can_delete\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"can_delete\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"can_delete\",\"object\":\"project:X\"}}' # Response: {\"allowed\":false} check( user = \"user:beth\", // check if the user `user:beth` relation = \"can_delete\", // has an `can_delete` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false * Carl cannot view Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'can_view', object: 'project:X', }, }); // allowed = false body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"can_view\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"can_view\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"can_view\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_view\",\"object\":\"project:X\"}}' # Response: {\"allowed\":false} check( user = \"user:carl\", // check if the user `user:carl` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false * Carl cannot delete Project X Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:carl', relation: 'can_delete', object: 'project:X', }, }); // allowed = false body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:carl\", Relation: \"can_delete\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:carl\", Relation = \"can_delete\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:carl\", relation=\"can_delete\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_delete\",\"object\":\"project:X\"}}' # Response: {\"allowed\":false} check( user = \"user:carl\", // check if the user `user:carl` relation = \"can_delete\", // has an `can_delete` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Note that so far, we have not prevented Anne from viewing \"Project X\" even if Anne is viewing it from the context of Organization C.","s":"Understand Relationships Without Contextual Data","u":"/docs/modeling/organization-context-authorization","h":"#understand-relationships-without-contextual-data","p":653},{"i":668,"t":"Extend The Authorization Model‚Äã In order to add a restriction based on the current organization context, we will make use of OpenFGA configuration language's support for intersection to specify that a user has to both have access and be in the correct context in order to be authorized. We can do that by introducing some new relations and updating existing relation definitions: On the \"organization\" type Add \"user_in_context\" relation to mark that a user's access is being evaluated within that particular context Update the \"project_manager\" relation to require that the user be in the correct context (by adding and user_in_context to the relation definition) Considering that OpenFGA does not yet support multiple logical operations within the same definition, we will split \"project_editor\" into two: \"base_project_editor\" editor which will contain the original relation definition ([user] or project_manager) \"project_editor\" which will require that a user has both the \"base_project_editor\" and the \"user_in_context\" relations The \"organization\" type definition then becomes: DSL JSON type organization relations define member: [user] define project_manager: [user] and user_in_context define base_project_editor: [user] or project_manager define project_editor: base_project_editor and user_in_context define user_in_context: [user] { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} }, \"project_manager\": { \"intersection\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"user_in_context\" } } ] } }, \"base_project_editor\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"project_manager\" } } ] } }, \"project_editor\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"base_project_editor\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"user_in_context\" } } ] } }, \"user_in_context\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"project_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"base_project_editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"user_in_context\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } On the \"project\" type Nothing will need to be done, as it will inherit the updated \"project_manager\" and \"project_editor\" relation definitions from \"organization\" Add The Required Tuples To Mark That Anne Is In An Approved Context‚Äã Now that we have updated our authorization model to take the current user's organization context into consideration, you will notice that Anne has lost access because nothing indicates that Anne is authorizing from the context of an organization. You can verify that by issuing the following check: Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'project:X', }, }); // allowed = false body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:X\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false In order for Anne to be authorized, a tuple indicating Anne's current organization context will need to be present: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is authorizing from the context of organization:A { user: 'user:anne', relation: 'user_in_context', object: 'organization:A'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is authorizing from the context of organization:A User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user_in_context\"), Object: fgaSdk.PtrString(\"organization:A\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is authorizing from the context of organization:A new() { User = \"user:anne\", Relation = \"user_in_context\", Object = \"organization:A\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is authorizing from the context of organization:A user=\"user:anne\", relation=\"user_in_context\", object=\"organization:A\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:A\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is authorizing from the context of organization:A { \"user\":\"user:anne\", \"relation\":\"user_in_context\", \"object\":\"organization:A\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") We can verify this by running a check request Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'project:X', }, }); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"project:X\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"project:X\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"project:X\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:X\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"Take Organization Context Into Consideration","u":"/docs/modeling/organization-context-authorization","h":"#take-organization-context-into-consideration","p":653},{"i":670,"t":"Now that we know we can authorize based on present state, we have a different problem to solve. We are storing the tuples in the state in order for OpenFGA to evaluate them, which fails in certain use-cases where Anne can be connected to two different contexts in different browser windows at the same time, as each has a different context at the same time, so if they are written to the state, which will OpenFGA use to compute Anne's access to the project? For Check calls, OpenFGA has a concept called \"Contextual Tuples\". Contextual Tuples are tuples that do not exist in the system state and are not written beforehand to OpenFGA. They are tuples that are sent alongside the Check request and will be treated as if they already exist in the state for the context of that particular Check call. That means that Anne can be using two different sessions, each within a different organization context, and OpenFGA will correctly respond to each one with the correct authorization decision. First, we will undo the temporary step and remove the stored tuples for which Anne has a user_in_context relation with organization:A. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ // Delete stored tuples where Anne is authorizing from the context of organization:A { user: 'user:anne', relation: 'user_in_context', object: 'organization:A'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Delete stored tuples where Anne is authorizing from the context of organization:A User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user_in_context\"), Object: fgaSdk.PtrString(\"organization:A\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { // Delete stored tuples where Anne is authorizing from the context of organization:A new() { User = \"user:anne\", Relation = \"user_in_context\", Object = \"organization:A\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( # Delete stored tuples where Anne is authorizing from the context of organization:A user=\"user:anne\", relation=\"user_in_context\", object=\"organization:A\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:A\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ // Delete stored tuples where Anne is authorizing from the context of organization:A { \"user\":\"user:anne\", \"relation\":\"user_in_context\", \"object\":\"organization:A\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Next, when Anne is connecting from the context of organization A, OpenFGA will return {\"allowed\":true}: Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'project:X', }, contextual_tuples: { tuple_keys: [ { user: \"user:anne\", relation: \"user_in_context\", object: \"organization:A\" } ] }}); // allowed = true body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"project:X\", }, ContextualTuples: &fgaSdk.ContextualTuples{ TupleKeys: []fgaSdk.TupleKey{ { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user_in_context\"), Object: fgaSdk.PtrString(\"organization:A\"), } } } } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"project:X\" }, ContextualTuples = new ContextualTupleKeys(new List<TupleKey>({ new(user: \"user:anne\", relation: \"user_in_context\", _object: \"organization:A\") })), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"project:X\", ), contextual_tuples=ContextualTupleKeys( tuple_keys=[ TupleKey(user=\"user:anne\", relation=\"user_in_context\", object=\"organization:A\") ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:X\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:A\"}]}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` contextual_tuples = [ // Assuming the following is true {user = \"user:anne\", relation = \"user_in_context\", object = \"organization:A\"} ], authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true When Anne is connecting from the context of organization C, OpenFGA will return {\"allowed\":false}: Node.js Go .NET Python curl Pseudocode // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'project:X', }, contextual_tuples: { tuple_keys: [ { user: \"user:anne\", relation: \"user_in_context\", object: \"organization:C\" } ] }}); // allowed = false body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"project:X\", }, ContextualTuples: &fgaSdk.ContextualTuples{ TupleKeys: []fgaSdk.TupleKey{ { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user_in_context\"), Object: fgaSdk.PtrString(\"organization:C\"), } } } } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"project:X\" }, ContextualTuples = new ContextualTupleKeys(new List<TupleKey>({ new(user: \"user:anne\", relation: \"user_in_context\", _object: \"organization:C\") })), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"project:X\", ), contextual_tuples=ContextualTupleKeys( tuple_keys=[ TupleKey(user=\"user:anne\", relation=\"user_in_context\", object=\"organization:C\") ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:X\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:C\"}]}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"project:X\", // with the object `project:X` contextual_tuples = [ // Assuming the following is true {user = \"user:anne\", relation = \"user_in_context\", object = \"organization:C\"} ], authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Using this, you can check that the following requirements are satisfied: User Organization Context Action Allowed Anne Organization A View Yes Anne Organization B View Yes Anne Organization C View Yes Anne Organization A Delete Yes Anne Organization B Delete No Anne Organization C Delete No Beth Organization B View Yes Beth Organization B Delete No Carl Organization C View No Carl Organization C Delete No","s":"Use Contextual Tuples For Context Related Checks","u":"/docs/modeling/organization-context-authorization","h":"#use-contextual-tuples-for-context-related-checks","p":653},{"i":672,"t":"Final version of the Authorization Model and Relationship tuples DSL JSON model schema 1.1 type user type organization relations define member: [user] define project_manager: [user] and user_in_context define base_project_editor: [user] or project_manager define project_editor: base_project_editor and user_in_context define user_in_context: [user] type project relations define owner: [organization] define partner: [organization] define manager: project_manager from owner define editor: manager or project_editor from owner or project_editor from partner define can_delete: manager define can_edit: editor define can_view: editor { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} }, \"project_manager\": { \"intersection\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"user_in_context\" } } ] } }, \"base_project_editor\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"project_manager\" } } ] } }, \"project_editor\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"base_project_editor\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"user_in_context\" } } ] } }, \"user_in_context\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"project_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"base_project_editor\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"user_in_context\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"project\", \"relations\": { \"owner\": { \"this\": {} }, \"partner\": { \"this\": {} }, \"manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_manager\" } } }, \"editor\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"manager\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"owner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_editor\" } } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"partner\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"project_editor\" } } } ] } }, \"can_delete\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"manager\" } }, \"can_edit\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"editor\" } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"editor\" } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] }, \"partner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } } ] } Node.js Go .NET Python curl Pseudocode await fgaClient.write({ writes: { tuple_keys: [ // Anne has a `project manager` role at organization A { user: 'user:anne', relation: 'project_manager', object: 'organization:A'}, // Anne has a `project manager` role at organization B { user: 'user:anne', relation: 'project_manager', object: 'organization:B'}, // Anne has a `project manager` role at organization C { user: 'user:anne', relation: 'project_manager', object: 'organization:C'}, // Beth has a `project manager` role at organization B { user: 'user:beth', relation: 'project_manager', object: 'organization:B'}, // Carl has a `project manager` role at organization C { user: 'user:carl', relation: 'project_manager', object: 'organization:C'}, // Organization A owns Project X { user: 'organization:A', relation: 'owner', object: 'project:X'}, // Project X is shared with Organization B { user: 'organization:B', relation: 'partner', object: 'project:X'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne has a `project manager` role at organization A User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:A\"), }, { // Anne has a `project manager` role at organization B User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:B\"), }, { // Anne has a `project manager` role at organization C User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:C\"), }, { // Beth has a `project manager` role at organization B User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:B\"), }, { // Carl has a `project manager` role at organization C User: fgaSdk.PtrString(\"user:carl\"), Relation: fgaSdk.PtrString(\"project_manager\"), Object: fgaSdk.PtrString(\"organization:C\"), }, { // Organization A owns Project X User: fgaSdk.PtrString(\"organization:A\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"project:X\"), }, { // Project X is shared with Organization B User: fgaSdk.PtrString(\"organization:B\"), Relation: fgaSdk.PtrString(\"partner\"), Object: fgaSdk.PtrString(\"project:X\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne has a `project manager` role at organization A new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:A\" }, // Anne has a `project manager` role at organization B new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:B\" }, // Anne has a `project manager` role at organization C new() { User = \"user:anne\", Relation = \"project_manager\", Object = \"organization:C\" }, // Beth has a `project manager` role at organization B new() { User = \"user:beth\", Relation = \"project_manager\", Object = \"organization:B\" }, // Carl has a `project manager` role at organization C new() { User = \"user:carl\", Relation = \"project_manager\", Object = \"organization:C\" }, // Organization A owns Project X new() { User = \"organization:A\", Relation = \"owner\", Object = \"project:X\" }, // Project X is shared with Organization B new() { User = \"organization:B\", Relation = \"partner\", Object = \"project:X\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne has a `project manager` role at organization A user=\"user:anne\", relation=\"project_manager\", object=\"organization:A\", ), TupleKey( # Anne has a `project manager` role at organization B user=\"user:anne\", relation=\"project_manager\", object=\"organization:B\", ), TupleKey( # Anne has a `project manager` role at organization C user=\"user:anne\", relation=\"project_manager\", object=\"organization:C\", ), TupleKey( # Beth has a `project manager` role at organization B user=\"user:beth\", relation=\"project_manager\", object=\"organization:B\", ), TupleKey( # Carl has a `project manager` role at organization C user=\"user:carl\", relation=\"project_manager\", object=\"organization:C\", ), TupleKey( # Organization A owns Project X user=\"organization:A\", relation=\"owner\", object=\"project:X\", ), TupleKey( # Project X is shared with Organization B user=\"organization:B\", relation=\"partner\", object=\"project:X\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:A\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:B\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:C\"},{\"user\":\"user:beth\",\"relation\":\"project_manager\",\"object\":\"organization:B\"},{\"user\":\"user:carl\",\"relation\":\"project_manager\",\"object\":\"organization:C\"},{\"user\":\"organization:A\",\"relation\":\"owner\",\"object\":\"project:X\"},{\"user\":\"organization:B\",\"relation\":\"partner\",\"object\":\"project:X\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne has a `project manager` role at organization A { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:A\" }, // Anne has a `project manager` role at organization B { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:B\" }, // Anne has a `project manager` role at organization C { \"user\":\"user:anne\", \"relation\":\"project_manager\", \"object\":\"organization:C\" }, // Beth has a `project manager` role at organization B { \"user\":\"user:beth\", \"relation\":\"project_manager\", \"object\":\"organization:B\" }, // Carl has a `project manager` role at organization C { \"user\":\"user:carl\", \"relation\":\"project_manager\", \"object\":\"organization:C\" }, // Organization A owns Project X { \"user\":\"organization:A\", \"relation\":\"owner\", \"object\":\"project:X\" }, // Project X is shared with Organization B { \"user\":\"organization:B\", \"relation\":\"partner\", \"object\":\"project:X\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Warning Contextual tuples: Are not persisted in the store. Are only supported on the Check API endpoint. They are not supported on read, expand and other endpoints. If you are using the Read Changes API endpoint to build a permission aware search index, note that it will not be trivial to take contextual tuples into account.","s":"Summary","u":"/docs/modeling/organization-context-authorization","h":"#summary","p":653},{"i":674,"t":"Check the following sections for more on how user groups can be used. Modeling with Multiple Restrictions Learn how to model requiring multiple relationships before users are authorized to perform certain actions. More Contextual and Time-Based Authorization Learn how to authorize access that depends on dynamic or contextual criteria. More OpenFGA Check API Details on the Check API in the OpenFGA reference guide. More","s":"Related Sections","u":"/docs/modeling/organization-context-authorization","h":"#related-sections","p":653},{"i":676,"t":"This tutorial explains how to model permissions for an IoT system using OpenFGA. What you will learn How to model a permission system using OpenFGA How to see OpenFGA Authorization in action by modeling an IoT Security Camera System","s":"Modeling Authorization for an IoT Security System with OpenFGA","u":"/docs/modeling/advanced/iot","h":"","p":675},{"i":678,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA concepts and know how to develop the things that we will list below. OpenFGA Concepts‚Äã It would be helpful to have an understanding of some concepts of OpenFGA before you start. Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí Modeling Concentric Relationships‚Äã You need to know how to update the authorization model to allow having nested relations such as all writers are readers. Learn more ‚Üí Used here to indicate that both IT Admins and Security Guards can view live video. Direct Relationships‚Äã You need to know how to disallow granting direct relation to an object and requiring the user to have a relation with another object that would imply a relation with the first one. Learn more ‚Üí Used here to indicate that \"Rename Device\" is a permission that cannot be assigned directly, but can only be granted through the \"IT Admin\" role. User Groups‚Äã You need to know how to add users to groups and create relationships between groups of users and an object. Learn more ‚Üí Used here to indicate that security guards on a certain group are security guards on a device in that group. Concepts & Configuration Language‚Äã Some OpenFGA Concepts Configuration Language","s":"Before You Start","u":"/docs/modeling/advanced/iot","h":"#before-you-start","p":675},{"i":680,"t":"It would be helpful to have an understanding of some concepts of OpenFGA before you start.","s":"OpenFGA Concepts","u":"/docs/modeling/advanced/iot","h":"#-concepts","p":675},{"i":682,"t":"In this tutorial, you will build an authorization model for a sample IoT Security Camera System (detailed below) using OpenFGA. You will use some scenarios to validate the model. The goal by the end of this post is to ask OpenFGA: Does person X have permission to perform action Y on device Z? In response, you want to either get a confirmation that person X can indeed do that, or a rejection that they cannot.","s":"What You Will Be Modeling","u":"/docs/modeling/advanced/iot","h":"#what-you-will-be-modeling","p":675},{"i":684,"t":"These are the requirements: Security guards have access to view live and recorded video from Devices. IT Admins can view live and recorded videos, as well as rename Devices. To make access management easier, Devices can be grouped into Device Groups. Security guards with access to the Device Group are Security Guards with access to each Device in the group. Similarly for IT Admins.","s":"Requirements","u":"/docs/modeling/advanced/iot","h":"#requirements","p":675},{"i":686,"t":"Use the following scenarios to be able to validate whether the model of the requirements is correct. There will be the following users: Anne Beth Charles Dianne These users have the following roles and permissions: Anne is a Security Guard with access to only Device 1 Beth is an IT Admin with access to only Device 1 Charles is a Security Guard with access to Device 1 and everything in Device Group 1 (which is Device 2 and Device 3) Dianne is an IT Admin with access to Device 1 and everything in Device Group 1 caution In production, it is highly recommended to use unique, immutable identifiers. Names are used in this article to make it easier to read and follow.","s":"Defined Scenarios","u":"/docs/modeling/advanced/iot","h":"#defined-scenarios","p":675},{"i":688,"t":"The OpenFGA service is based on Zanzibar, a Relationship Based Access Control system. This means it relies on object and user relations to perform authorization checks. Starting with devices, you will learn how to express the requirements in terms of relations you can feed into OpenFGA.","s":"Modeling Device Authorization","u":"/docs/modeling/advanced/iot","h":"#modeling-device-authorization","p":675},{"i":690,"t":"The requirements stated: Security guards have access to view live and recorded video from Devices. IT Admins can view live and recorded videos, as well as rename Devices. The goal is to ask OpenFGA whether person X has permission to perform action Y on device Z. To start, you will set aside the Security Guard and IT Admin designations and focus on the actions a user can take. The actions users can take on a device are: view live videos, view recorded videos, and rename devices. Mapping them to relations, they become: live_video_viewer, recorded_video_viewer, device_renamer. In OpenFGA, the authorization model for the device would be: DSL JSON model schema 1.1 type user type device relations define live_video_viewer: [user] define recorded_video_viewer: [user] define device_renamer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"device\", \"relations\": { \"live_video_viewer\": { \"this\": {} }, \"recorded_video_viewer\": { \"this\": {} }, \"device_renamer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"live_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"recorded_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"device_renamer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Writing The Initial Model For A Device","u":"/docs/modeling/advanced/iot","h":"#01-writing-the-initial-model-for-a-device","p":675},{"i":692,"t":"The requirements are: Anne is a Security Guard with access to only Device 1 Beth is an IT Admin with access to only Device 1 Security Guards can view live and recorded video IT Admins can view live and recorded video and rename devices Before we tackle the problem of users access to device based on their role, we will try to grant user access based on their view relationship directly. We will first focus on Anne and Beth's relationship with Device 1. To add Anne as live_video_viewer of device:1: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'live_video_viewer', object: 'device:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"live_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"live_video_viewer\", Object = \"device:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"live_video_viewer\", object=\"device:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"live_video_viewer\", \"object\":\"device:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") To add Anne as recorded_video_viewer of device:1 Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'recorded_video_viewer', object: 'device:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"recorded_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"recorded_video_viewer\", Object = \"device:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"recorded_video_viewer\", object=\"device:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"recorded_video_viewer\", \"object\":\"device:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Likewise, we will add Beth's relationship with device:1. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:beth', relation: 'live_video_viewer', object: 'device:1'}, { user: 'user:beth', relation: 'recorded_video_viewer', object: 'device:1'}, { user: 'user:beth', relation: 'device_renamer', object: 'device:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"live_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"recorded_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"device_renamer\"), Object: fgaSdk.PtrString(\"device:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:beth\", Relation = \"live_video_viewer\", Object = \"device:1\" }, new() { User = \"user:beth\", Relation = \"recorded_video_viewer\", Object = \"device:1\" }, new() { User = \"user:beth\", Relation = \"device_renamer\", Object = \"device:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:beth\", relation=\"live_video_viewer\", object=\"device:1\", ), TupleKey( user=\"user:beth\", relation=\"recorded_video_viewer\", object=\"device:1\", ), TupleKey( user=\"user:beth\", relation=\"device_renamer\", object=\"device:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:beth\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"device_renamer\",\"object\":\"device:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:beth\", \"relation\":\"live_video_viewer\", \"object\":\"device:1\" }, { \"user\":\"user:beth\", \"relation\":\"recorded_video_viewer\", \"object\":\"device:1\" }, { \"user\":\"user:beth\", \"relation\":\"device_renamer\", \"object\":\"device:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Verification‚Äã Now that you have some relationship tuples added, you can start using it to ask some questions, e.g., whether a person has access to rename a device. First, you will find out if anne has permission to view the live video on device:1, then you will see if anne can rename device:1. Anne has live_video_viewer relationship with device:1. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'live_video_viewer', object: 'device:1', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"live_video_viewer\", Object: \"device:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"live_video_viewer\", Object = \"device:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"live_video_viewer\", object=\"device:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"live_video_viewer\", // has an `live_video_viewer` relation object = \"device:1\", // with the object `device:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true On the other hand, Anne does not have device_renamer relationship with device:1. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'device_renamer', object: 'device:1', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"device_renamer\", Object: \"device:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"device_renamer\", Object = \"device:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"device_renamer\", object=\"device:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"device_renamer\",\"object\":\"device:1\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"device_renamer\", // has an `device_renamer` relation object = \"device:1\", // with the object `device:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Now, check the other relationships fore Anne and Beth. User Object Relation Query Relation? anne device:1 live_video_viewer is anne related to device:1 as live_video_viewer? Yes beth device:1 live_video_viewer is beth related to device:1 as live_video_viewer? Yes anne device:1 recorded_video_viewer is anne related to device:1 as recorded_video_viewer? Yes beth device:1 recorded_video_viewer is beth related to device:1 as recorded_video_viewer? Yes anne device:1 device_renamer is anne related to device:1 as device_renamer? No beth device:1 device_renamer is beth related to device:1 as device_renamer? Yes","s":"02. Inserting Some Relationship Tuples","u":"/docs/modeling/advanced/iot","h":"#02-inserting-some-relationship-tuples","p":675},{"i":694,"t":"Notice how you had to add the Anne and Beth as direct relations to all the actions they can take on Device 1 instead of just stating that they are related as Security Guard or IT Admin, and having the other permissions implied? In practice this might have some disadvantages: if your authorization model changes, (e.g so that Security Guards can no longer view previously recorded videos), you would need to change relationship tuples in the system instead of just changing the configuration. We can address this by using concentric relation models. It allows you to express that sets of users who have a relation X to the object also have relation Y. For example, anyone that is related to the device as a security_guard is also related as a live_video_viewer and recorded_video_viewer, and anyone who is related to the device as an it_admin is also related as a live_video_viewer, a recorded_video_viewer, and a device_renamer. At the end you want to make sure that checking if Anne, Beth, Charles, or Dianne have permission to view the live video or rename the device, will get you the correct answers back. The resulting authorization model is: DSL JSON model schema 1.1 type device relations define it_admin: [user] define security_guard: [user] define live_video_viewer: [user] or it_admin or security_guard define recorded_video_viewer: [user] or it_admin or security_guard define device_renamer: [user] or it_admin { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"device\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} }, \"live_video_viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"recorded_video_viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"device_renamer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } } ] } } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"live_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"recorded_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"device_renamer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The requirements are: Anne and Charles are Security Guards with access Device 1 Beth and Dianne are IT Admins with access Device 1 Security Guards can view live and recorded video IT Admins can view live and recorded video and rename devices Instead of adding different relationship tuples with direct relations to the actions they can take, as you did in the previous section, you will only add the relation to their role: it_admin or security_guard. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'security_guard', object: 'device:1'}, { user: 'user:beth', relation: 'it_admin', object: 'device:1'}, { user: 'user:charles', relation: 'security_guard', object: 'device:1'}, { user: 'user:dianne', relation: 'it_admin', object: 'device:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"security_guard\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"it_admin\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"security_guard\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:dianne\"), Relation: fgaSdk.PtrString(\"it_admin\"), Object: fgaSdk.PtrString(\"device:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"security_guard\", Object = \"device:1\" }, new() { User = \"user:beth\", Relation = \"it_admin\", Object = \"device:1\" }, new() { User = \"user:charles\", Relation = \"security_guard\", Object = \"device:1\" }, new() { User = \"user:dianne\", Relation = \"it_admin\", Object = \"device:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"security_guard\", object=\"device:1\", ), TupleKey( user=\"user:beth\", relation=\"it_admin\", object=\"device:1\", ), TupleKey( user=\"user:charles\", relation=\"security_guard\", object=\"device:1\", ), TupleKey( user=\"user:dianne\", relation=\"it_admin\", object=\"device:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"security_guard\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"it_admin\",\"object\":\"device:1\"},{\"user\":\"user:charles\",\"relation\":\"security_guard\",\"object\":\"device:1\"},{\"user\":\"user:dianne\",\"relation\":\"it_admin\",\"object\":\"device:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"security_guard\", \"object\":\"device:1\" }, { \"user\":\"user:beth\", \"relation\":\"it_admin\", \"object\":\"device:1\" }, { \"user\":\"user:charles\", \"relation\":\"security_guard\", \"object\":\"device:1\" }, { \"user\":\"user:dianne\", \"relation\":\"it_admin\", \"object\":\"device:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Verification‚Äã We can now verify whether charles is related to device:1 as live_video_viewer. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:charles', relation: 'live_video_viewer', object: 'device:1', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:charles\", Relation: \"live_video_viewer\", Object: \"device:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:charles\", Relation = \"live_video_viewer\", Object = \"device:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:charles\", relation=\"live_video_viewer\", object=\"device:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:charles\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"}}' # Response: {\"allowed\":true} check( user = \"user:charles\", // check if the user `user:charles` relation = \"live_video_viewer\", // has an `live_video_viewer` relation object = \"device:1\", // with the object `device:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Check the other relationships for anne, beth, charles and dianne. User Object Relation Query Relation? anne device:1 live_video_viewer is anne related to device:1 as live_video_viewer? Yes beth device:1 live_video_viewer is beth related to device:1 as live_video_viewer? Yes anne device:1 recorded_video_viewer is anne related to device:1 as recorded_video_viewer? Yes beth device:1 recorded_video_viewer is beth related to device:1 as recorded_video_viewer? Yes anne device:1 device_renamer is anne related to device:1 as device_renamer? No beth device:1 device_renamer is beth related to device:1 as device_renamer? Yes charles device:1 live_video_viewer is charles related to device:1 as live_video_viewer? Yes dianne device:1 live_video_viewer is dianne related to device:1 as live_video_viewer? Yes charles device:1 recorded_video_viewer is charles related to device:1 as recorded_video_viewer? Yes dianne device:1 recorded_video_viewer is dianne related to device:1 as recorded_video_viewer? Yes charles device:1 device_renamer is charles related to device:1 as device_renamer? No dianne device:1 device_renamer is dianne related to device:1 as device_renamer? Yes","s":"03. Updating Our Authorization Model To Facilitate Future Changes","u":"/docs/modeling/advanced/iot","h":"#03-updating-our-authorization-model-to-facilitate-future-changes","p":675},{"i":696,"t":"Now that you are done with devices. Let us tackle device groups. The requirements regarding device groups were: Devices can be grouped into Device Groups Security guards with access to the Device Group are Security Guards with access to the Devices within the Device Group. Similarly for IT Admins The type definition for the device group: DSL JSON type device_group relations define it_admin: [user] define security_guard: [user] { \"type\": \"device_group\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } With this change, the full authorization model becomes: DSL JSON model schema 1.1 type user type device relations define it_admin: [user,device_group#it_admin] define security_guard: [user,device_group#security_guard] define live_video_viewer: [user] or it_admin or security_guard define recorded_video_viewer: [user] or it_admin or security_guard define device_renamer: [user] or it_admin type device_group relations define it_admin: [user] define security_guard: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"device\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} }, \"live_video_viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"recorded_video_viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"device_renamer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"it_admin\" } } ] } } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"device_group\", \"relation\": \"it_admin\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"device_group\", \"relation\": \"security_guard\" } ] }, \"live_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"recorded_video_viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"device_renamer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"device_group\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Updating Relationship Tuples On Roles‚Äã Remember that Charles is a Security Guard, and Dianne an IT Admin on Group 1, enter the relationship tuples below to reflect that. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:charles', relation: 'security_guard', object: 'device_group:group1'}, { user: 'user:dianne', relation: 'it_admin', object: 'device_group:group1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"security_guard\"), Object: fgaSdk.PtrString(\"device_group:group1\"), }, { User: fgaSdk.PtrString(\"user:dianne\"), Relation: fgaSdk.PtrString(\"it_admin\"), Object: fgaSdk.PtrString(\"device_group:group1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:charles\", Relation = \"security_guard\", Object = \"device_group:group1\" }, new() { User = \"user:dianne\", Relation = \"it_admin\", Object = \"device_group:group1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:charles\", relation=\"security_guard\", object=\"device_group:group1\", ), TupleKey( user=\"user:dianne\", relation=\"it_admin\", object=\"device_group:group1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:charles\",\"relation\":\"security_guard\",\"object\":\"device_group:group1\"},{\"user\":\"user:dianne\",\"relation\":\"it_admin\",\"object\":\"device_group:group1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:charles\", \"relation\":\"security_guard\", \"object\":\"device_group:group1\" }, { \"user\":\"user:dianne\", \"relation\":\"it_admin\", \"object\":\"device_group:group1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") You still need to give all the security guards of group1 a security_guard relation to devices 2 and 3, and similarly for IT Admins. Add the following relationship tuples to do that. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'device_group:group1#security_guard', relation: 'security_guard', object: 'device:2'}, { user: 'device_group:group1#security_guard', relation: 'security_guard', object: 'device:3'}, { user: 'device_group:group1#it_admin', relation: 'it_admin', object: 'device:2'}, { user: 'device_group:group1#it_admin', relation: 'it_admin', object: 'device:3'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"device_group:group1#security_guard\"), Relation: fgaSdk.PtrString(\"security_guard\"), Object: fgaSdk.PtrString(\"device:2\"), }, { User: fgaSdk.PtrString(\"device_group:group1#security_guard\"), Relation: fgaSdk.PtrString(\"security_guard\"), Object: fgaSdk.PtrString(\"device:3\"), }, { User: fgaSdk.PtrString(\"device_group:group1#it_admin\"), Relation: fgaSdk.PtrString(\"it_admin\"), Object: fgaSdk.PtrString(\"device:2\"), }, { User: fgaSdk.PtrString(\"device_group:group1#it_admin\"), Relation: fgaSdk.PtrString(\"it_admin\"), Object: fgaSdk.PtrString(\"device:3\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"device_group:group1#security_guard\", Relation = \"security_guard\", Object = \"device:2\" }, new() { User = \"device_group:group1#security_guard\", Relation = \"security_guard\", Object = \"device:3\" }, new() { User = \"device_group:group1#it_admin\", Relation = \"it_admin\", Object = \"device:2\" }, new() { User = \"device_group:group1#it_admin\", Relation = \"it_admin\", Object = \"device:3\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"device_group:group1#security_guard\", relation=\"security_guard\", object=\"device:2\", ), TupleKey( user=\"device_group:group1#security_guard\", relation=\"security_guard\", object=\"device:3\", ), TupleKey( user=\"device_group:group1#it_admin\", relation=\"it_admin\", object=\"device:2\", ), TupleKey( user=\"device_group:group1#it_admin\", relation=\"it_admin\", object=\"device:3\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"device_group:group1#security_guard\",\"relation\":\"security_guard\",\"object\":\"device:2\"},{\"user\":\"device_group:group1#security_guard\",\"relation\":\"security_guard\",\"object\":\"device:3\"},{\"user\":\"device_group:group1#it_admin\",\"relation\":\"it_admin\",\"object\":\"device:2\"},{\"user\":\"device_group:group1#it_admin\",\"relation\":\"it_admin\",\"object\":\"device:3\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"device_group:group1#security_guard\", \"relation\":\"security_guard\", \"object\":\"device:2\" }, { \"user\":\"device_group:group1#security_guard\", \"relation\":\"security_guard\", \"object\":\"device:3\" }, { \"user\":\"device_group:group1#it_admin\", \"relation\":\"it_admin\", \"object\":\"device:2\" }, { \"user\":\"device_group:group1#it_admin\", \"relation\":\"it_admin\", \"object\":\"device:3\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Verification‚Äã Now that you have finalized the model and added the relationship tuples, you can start asking some queries. Try asking the same queries you did earlier but on device 2 instead of device 1. We can ask is dianne related to device:2 as live_video_viewer? Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'dianne', relation: 'live_video_viewer', object: 'device:2', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"dianne\", Relation: \"live_video_viewer\", Object: \"device:2\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"dianne\", Relation = \"live_video_viewer\", Object = \"device:2\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"dianne\", relation=\"live_video_viewer\", object=\"device:2\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"dianne\",\"relation\":\"live_video_viewer\",\"object\":\"device:2\"}}' # Response: {\"allowed\":true} check( user = \"dianne\", // check if the user `dianne` relation = \"live_video_viewer\", // has an `live_video_viewer` relation object = \"device:2\", // with the object `device:2` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Type any of the following queries in the TUPLE QUERIES section and press ENTER on your keyboard to see the results. User Object Relation Query Relation? anne device:2 live_video_viewer is anne related to device:2 as live_video_viewer? No beth device:2 live_video_viewer is beth related to device:2 as live_video_viewer? No anne device:2 recorded_video_viewer is anne related to device:2 as recorded_video_viewer? No beth device:2 recorded_video_viewer is beth related to device:2 as recorded_video_viewer? No anne device:2 device_renamer is anne related to device:2 as device_renamer? No beth device:2 device_renamer is beth related to device:2 as device_renamer? No charles device:2 live_video_viewer is charles related to device:2 as live_video_viewer? Yes dianne device:2 live_video_viewer is dianne related to device:2 as live_video_viewer? Yes charles device:2 recorded_video_viewer is charles related to device:2 as recorded_video_viewer? Yes dianne device:2 recorded_video_viewer is dianne related to device:2 as recorded_video_viewer? Yes charles device:2 device_renamer is charles related to device:2 as device_renamer? No dianne device:2 device_renamer is dianne related to device:2 as device_renamer? Yes","s":"04. Modeling Device Groups","u":"/docs/modeling/advanced/iot","h":"#04-modeling-device-groups","p":675},{"i":698,"t":"Notice that despite following Step 03, anne and beth still have direct relations to all the actions they can take on device:1. Updating The Authorization Model‚Äã anne is a live_video_viewer by both her position as security_guard as well as her direct relationship assignment. This is undesirable. Imagine anne left her position of security_guard and she will still have live_video_viewer access to device:1. To remedy this, remove [user] from live_video_viewer, recorded_video_viewer and device_renamer. This denies direct relations to live_video_viewer, recorded_video_viewer and device_renamer from having an effect. To do this: DSL JSON model schema 1.1 type user type device relations define it_admin: [user,device_group#it_admin] define security_guard: [user,device_group#security_guard] define live_video_viewer: it_admin or security_guard define recorded_video_viewer: it_admin or security_guard define device_renamer: it_admin type device_group relations define it_admin: [user] define security_guard: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"device\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} }, \"live_video_viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"recorded_video_viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"relation\": \"it_admin\" } }, { \"computedUserset\": { \"relation\": \"security_guard\" } } ] } }, \"device_renamer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"relation\": \"it_admin\" } } ] } } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"device_group\", \"relation\": \"it_admin\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"device_group\", \"relation\": \"security_guard\" } ] } } } }, { \"type\": \"device_group\", \"relations\": { \"it_admin\": { \"this\": {} }, \"security_guard\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"it_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"security_guard\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Notice that any reference to the direct relationship type restrictions has been removed. That indicates that a user cannot have a direct relationship with an object in this type. With this change, anne can no longer have a live_video_viewer permission for device:1 except through having a security_guard or it_admin role first, and when she loses access to that role, she will automatically lose access to the live_video_viewer permission. Verification‚Äã Now that direct relationship is denied, we should see that anne has live_video_viewer relation to device:1 solely based on her position as security_guard to device:1. Let's find out. To test this, we can add a new user emily. Emily is not a security_guard nor an it_admin. However, we attempt to access via direct relations by adding the following relationship tuples: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:emily', relation: 'live_video_viewer', object: 'device:1'}, { user: 'user:emily', relation: 'recorded_video_viewer', object: 'device:1'}, { user: 'user:emily', relation: 'device_renamer', object: 'device:1'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"live_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"recorded_video_viewer\"), Object: fgaSdk.PtrString(\"device:1\"), }, { User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"device_renamer\"), Object: fgaSdk.PtrString(\"device:1\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:emily\", Relation = \"live_video_viewer\", Object = \"device:1\" }, new() { User = \"user:emily\", Relation = \"recorded_video_viewer\", Object = \"device:1\" }, new() { User = \"user:emily\", Relation = \"device_renamer\", Object = \"device:1\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:emily\", relation=\"live_video_viewer\", object=\"device:1\", ), TupleKey( user=\"user:emily\", relation=\"recorded_video_viewer\", object=\"device:1\", ), TupleKey( user=\"user:emily\", relation=\"device_renamer\", object=\"device:1\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:emily\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:emily\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:emily\",\"relation\":\"device_renamer\",\"object\":\"device:1\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:emily\", \"relation\":\"live_video_viewer\", \"object\":\"device:1\" }, { \"user\":\"user:emily\", \"relation\":\"recorded_video_viewer\", \"object\":\"device:1\" }, { \"user\":\"user:emily\", \"relation\":\"device_renamer\", \"object\":\"device:1\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Now try to query is emily related to device:1 as live_video_viewer?. The returned result should be emily is not related to device:1 as live_video_viewer. This confirms that direct relations have no effect on the live_video_viewer relations, and that is because the direct relationship type restriction was removed from the relation configuration. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:emily', relation: 'live_video_viewer', object: 'device:1', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:emily\", Relation: \"live_video_viewer\", Object: \"device:1\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:emily\", Relation = \"live_video_viewer\", Object = \"device:1\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:emily\", relation=\"live_video_viewer\", object=\"device:1\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:emily\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"}}' # Response: {\"allowed\":false} check( user = \"user:emily\", // check if the user `user:emily` relation = \"live_video_viewer\", // has an `live_video_viewer` relation object = \"device:1\", // with the object `device:1` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Query on the other relationships and you will see: User Object Relation Query Relation? emily device:1 recorded_video_viewer is emily related to device:1 as recorded_video_viewer? No emily device:1 device_renamer is emily related to device:1 as device_renamer? No","s":"05. Disallow Direct Relationships To Users","u":"/docs/modeling/advanced/iot","h":"#05-disallow-direct-relationships-to-users","p":675},{"i":700,"t":"In this post, you were introduced to fine grain authentication and OpenFGA. Upcoming posts will dive deeper into OpenFGA, introducing concepts that will improve on the model you built today, and tackling more complex permission systems, with more relations and requirements that need to be met.","s":"Summary","u":"/docs/modeling/advanced/iot","h":"#summary","p":675},{"i":702,"t":"Try adding a second group tied to devices 4 and 5. Add only Charles and Dianne to this group, then try to run queries that would validate your model. Management has decided that Security Guards can only access live videos, and instituted a new position called Security Officer who can view both live and recorded videos. Can you update the authorization model to reflect that?","s":"Exercises For You","u":"/docs/modeling/advanced/iot","h":"#exercises-for-you","p":675},{"i":704,"t":"This tutorial explains how to model permissions for a communication platform like Slack using OpenFGA. What you will learn How to indicate relationships between a group of users and an object. Used here to indicate that all members of a slack workspace can write in a certain channel. See Modeling User Groups for more. How to Model concentric relationship to have a certain relation on an object imply another relation on the same object. Used here to indicate that legacy admins have all the permissions of the more granular channels admin. See Modeling Concentric Relationships for more. How to use the union operator condition to indicate that a user might have a certain relation with an object if they match any of the criteria indicated.","s":"Modeling Authorization for Slack with OpenFGA","u":"/docs/modeling/advanced/slack","h":"","p":703},{"i":706,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA concepts and know how to develop the things that we will list below. OpenFGA Concepts‚Äã It would be helpful to have an understanding of some concepts of OpenFGA before you start. Direct Access‚Äã You need to know how to create an authorization model and create a relationship tuple to grant a user access to an object. Learn more ‚Üí Modeling Concentric Relationships‚Äã You need to know how to update the authorization model to allow having nested relations such as all writers are readers. Learn more ‚Üí Concepts & Configuration Language‚Äã Some OpenFGA Concepts Configuration Language","s":"Before You Start","u":"/docs/modeling/advanced/slack","h":"#before-you-start","p":703},{"i":708,"t":"It would be helpful to have an understanding of some concepts of OpenFGA before you start.","s":"OpenFGA Concepts","u":"/docs/modeling/advanced/slack","h":"#-concepts","p":703},{"i":710,"t":"Slack is a messaging app for businesses that connects people to the information they need. By bringing people together to work as one unified team, Slack transforms the way organizations communicate. (Source: What is Slack?) In this tutorial, you will build a subset of the Slack permission model (detailed below) in OpenFGA, using some scenarios to validate the model. As reference, you can refer to Slack's publicly available docs: Role Management at Slack Types of Roles in Slack Permissions by Role in Slack Manage a Workspace on Enterprise Grid Manage channel posting permissions Note: For brevity, this tutorial will not model all of Slack's permissions. Instead, it will focus on modeling the scenarios outlined below.","s":"What you will be modeling","u":"/docs/modeling/advanced/slack","h":"#what-you-will-be-modeling","p":703},{"i":712,"t":"This tutorial will focus on the following sections (this is a partial list of Slack's roles): Workspace Roles: Guest: This type of user is limited in their ability to use Slack, and is only permitted to see one or multiple delegated channels. Member: This is the base type of user that does not have any particular administrative abilities, but has basic access to the organization's Slack workspaces. When an administrative change needs to be made, these users need the support of admins and owners to make the changes. Legacy Admin: This type of user is the basic administrator of any organization, and can make a wide variety of administrative changes across Slack, such as renaming channels, archiving channels, setting up preferences and policies, inviting new users, and installing applications. Users with this role perform the majority of administrative tasks across a team. System Roles: Channels Admin: This type of user has the permission to archive channels, rename channels, create private channels, and convert public channels into private channels. Channel Settings: Visibility: Public: Visible to all members and open to join Private: Visible to admins and invited members Posting Permissions: Open: Anyone can post Limited: Only allowed members can post","s":"Requirements","u":"/docs/modeling/advanced/slack","h":"#requirements","p":703},{"i":714,"t":"Use the following scenarios to be able to validate whether the model of the requirements is correct. There will be the following users: Amy Bob Catherine David Emily These users will interact in the following scenarios: You will assume there is a Slack workspace called Sandcastle Amy is a legacy admin of the Sandcastle workspace Bob is a member of the Sandcastle workspace with a channels admin role (Read more about system roles at Slack here) Catherine and Emily are normal members of the Sandcastle workspace, they can view all public channels, as well as channels they have been invited to David is a guest user with only view and write access to #proj-marketing-campaign, one of the public channels in the Sandcastle workspace Bob and Emily are in a private channel #marketing-internal in the Sandcastle workspace which only they can view and post to All members of the Sandcastle workspace can view the general channel, but only Amy and Emily can post to it caution In production, it is highly recommended to use unique, immutable identifiers. Names are used in this article to make it easier to read and follow.","s":"Defined Scenarios","u":"/docs/modeling/advanced/slack","h":"#defined-scenarios","p":703},{"i":716,"t":"The goal by the end of this post is to ask OpenFGA: Does person X have permission to perform action Y on channel Z? In response, you want to either get a confirmation that person X can indeed do that, or a rejection that they cannot. E.g. does David have access to view #general? The OpenFGA is based on Zanzibar, a Relation Based Access Control system. This means it relies on objects and user relations to perform authorization checks. Setting aside the permissions, you will start with the roles and learn how to express the requirements in terms of relations you can feed into OpenFGA. The requirements stated: Amy is a legacy admin of the Sandcastle workspace Bob is a channels admin of the Sandcastle workspace Catherine and Emily are a normal members of the Sandcastle workspace David is a guest user Here is how you would express than in OpenFGA's authorization model: You have a type called \"workspace\", and users can be related to it as a legacy_admin, channels_admin, member and guest DSL JSON model schema 1.1 type user type workspace relations define legacy_admin: [user] define channels_admin: [user] define member: [user] define guest: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relations\": { \"legacy_admin\": { \"this\": {} }, \"channels_admin\": { \"this\": {} }, \"member\": { \"this\": {} }, \"guest\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"legacy_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"channels_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"guest\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Objects of type workspace have users related to them as: Legacy Admin (legacy_admin) Channels Admin (channels_admin) Member (member) Guest (guest) Direct relationship type restrictions indicate that a user can have a direct relationship with an object of the type the relation specifies.","s":"Modeling Workspaces & Channels","u":"/docs/modeling/advanced/slack","h":"#modeling-workspaces--channels","p":703},{"i":718,"t":"To keep things simple and focus on OpenFGA rather than Slack complexity, we will model only four roles (legacy_admin, channels_admin, member, guest). At the end of this section we want to have the following permissions represented User Relation Object amy legacy_admin workspace:sandcastle bob channels_admin workspace:sandcastle catherine member workspace:sandcastle david guest workspace:sandcastle emily member workspace:sandcastle To represent permissions in OpenFGA we use relations. For workspace permissions we need to create the following authorization model: DSL JSON model schema 1.1 type user type workspace relations define legacy_admin: [user] define channels_admin: [user] define member: [user] define guest: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relations\": { \"legacy_admin\": { \"this\": {} }, \"channels_admin\": { \"this\": {} }, \"member\": { \"this\": {} }, \"guest\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"legacy_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"channels_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"guest\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The OpenFGA service determines if a user has access to an object by checking if the user has a relation to that object. Let us examine one of those relations in detail: DSL JSON type workspace relations define member: [user] { \"type\": \"workspace\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } info The snippet above indicates that objects of type workspace have users related to them as \"member\" if those users belong to the userset of all users related to the workspace as \"member\". This means that a user can be directly related as a member to an object of type \"workspace\" If we want to say amy is a legacy_admin of workspace:sandcastle we create this relationship tuple Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Amy is a Legacy Admin in the Sandcastle workspace { user: 'user:amy', relation: 'legacy_admin', object: 'workspace:sandcastle'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Amy is a Legacy Admin in the Sandcastle workspace User: fgaSdk.PtrString(\"user:amy\"), Relation: fgaSdk.PtrString(\"legacy_admin\"), Object: fgaSdk.PtrString(\"workspace:sandcastle\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Amy is a Legacy Admin in the Sandcastle workspace new() { User = \"user:amy\", Relation = \"legacy_admin\", Object = \"workspace:sandcastle\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Amy is a Legacy Admin in the Sandcastle workspace user=\"user:amy\", relation=\"legacy_admin\", object=\"workspace:sandcastle\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:amy\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastle\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Amy is a Legacy Admin in the Sandcastle workspace { \"user\":\"user:amy\", \"relation\":\"legacy_admin\", \"object\":\"workspace:sandcastle\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") We can now ask OpenFGA \"is amy a legacy_admin of workspace:sandcastle?\" Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:amy', relation: 'legacy_admin', object: 'workspace:sandcastle', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:amy\", Relation: \"legacy_admin\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:amy\", Relation = \"legacy_admin\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:amy\", relation=\"legacy_admin\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:amy\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":true} check( user = \"user:amy\", // check if the user `user:amy` relation = \"legacy_admin\", // has an `legacy_admin` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We can also say that catherine is a member of workspace:sandcastle: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Catherine is a Member in the Sandcastle workspace { user: 'user:catherine', relation: 'member', object: 'workspace:sandcastle'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Catherine is a Member in the Sandcastle workspace User: fgaSdk.PtrString(\"user:catherine\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"workspace:sandcastle\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Catherine is a Member in the Sandcastle workspace new() { User = \"user:catherine\", Relation = \"member\", Object = \"workspace:sandcastle\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Catherine is a Member in the Sandcastle workspace user=\"user:catherine\", relation=\"member\", object=\"workspace:sandcastle\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:catherine\",\"relation\":\"member\",\"object\":\"workspace:sandcastle\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Catherine is a Member in the Sandcastle workspace { \"user\":\"user:catherine\", \"relation\":\"member\", \"object\":\"workspace:sandcastle\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") And verify by asking OpenFGA Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:catherine', relation: 'member', object: 'workspace:sandcastle', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:catherine\", Relation: \"member\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:catherine\", Relation = \"member\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:catherine\", relation=\"member\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:catherine\",\"relation\":\"member\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":true} check( user = \"user:catherine\", // check if the user `user:catherine` relation = \"member\", // has an `member` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Catherine, on the other hand, is not a legacy_admin of workspace:sandcastle. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:catherine', relation: 'legacy_admin', object: 'workspace:sandcastle', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:catherine\", Relation: \"legacy_admin\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:catherine\", Relation = \"legacy_admin\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:catherine\", relation=\"legacy_admin\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:catherine\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":false} check( user = \"user:catherine\", // check if the user `user:catherine` relation = \"legacy_admin\", // has an `legacy_admin` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Repeat this process for the other relationships [ { // Bob is a Channels Admin in the Sandcastle workspace user: 'user:bob', relation: 'channels_admin', object: 'workspace:sandcastle', }, { // David is a guest in the Sandcastle workspace user: 'user:david', relation: 'guest', object: 'workspace:sandcastle', }, { // Emily is a Member in the Sandcastle workspace user: 'user:emily', relation: 'member', object: 'workspace:sandcastle', }, ] Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Bob is a Channels Admin in the Sandcastle workspace { user: 'user:bob', relation: 'channels_admin', object: 'workspace:sandcastle'}, // David is a guest in the Sandcastle workspace { user: 'user:david', relation: 'guest', object: 'workspace:sandcastle'}, // Emily is a Member in the Sandcastle workspace { user: 'user:emily', relation: 'member', object: 'workspace:sandcastle'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Bob is a Channels Admin in the Sandcastle workspace User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"channels_admin\"), Object: fgaSdk.PtrString(\"workspace:sandcastle\"), }, { // David is a guest in the Sandcastle workspace User: fgaSdk.PtrString(\"user:david\"), Relation: fgaSdk.PtrString(\"guest\"), Object: fgaSdk.PtrString(\"workspace:sandcastle\"), }, { // Emily is a Member in the Sandcastle workspace User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"workspace:sandcastle\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Bob is a Channels Admin in the Sandcastle workspace new() { User = \"user:bob\", Relation = \"channels_admin\", Object = \"workspace:sandcastle\" }, // David is a guest in the Sandcastle workspace new() { User = \"user:david\", Relation = \"guest\", Object = \"workspace:sandcastle\" }, // Emily is a Member in the Sandcastle workspace new() { User = \"user:emily\", Relation = \"member\", Object = \"workspace:sandcastle\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Bob is a Channels Admin in the Sandcastle workspace user=\"user:bob\", relation=\"channels_admin\", object=\"workspace:sandcastle\", ), TupleKey( # David is a guest in the Sandcastle workspace user=\"user:david\", relation=\"guest\", object=\"workspace:sandcastle\", ), TupleKey( # Emily is a Member in the Sandcastle workspace user=\"user:emily\", relation=\"member\", object=\"workspace:sandcastle\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bob\",\"relation\":\"channels_admin\",\"object\":\"workspace:sandcastle\"},{\"user\":\"user:david\",\"relation\":\"guest\",\"object\":\"workspace:sandcastle\"},{\"user\":\"user:emily\",\"relation\":\"member\",\"object\":\"workspace:sandcastle\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Bob is a Channels Admin in the Sandcastle workspace { \"user\":\"user:bob\", \"relation\":\"channels_admin\", \"object\":\"workspace:sandcastle\" }, // David is a guest in the Sandcastle workspace { \"user\":\"user:david\", \"relation\":\"guest\", \"object\":\"workspace:sandcastle\" }, // Emily is a Member in the Sandcastle workspace { \"user\":\"user:emily\", \"relation\":\"member\", \"object\":\"workspace:sandcastle\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Verification‚Äã To verify, we can issue check request to verify it is working as expected. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:amy', relation: 'legacy_admin', object: 'workspace:sandcastle', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:amy\", Relation: \"legacy_admin\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:amy\", Relation = \"legacy_admin\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:amy\", relation=\"legacy_admin\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:amy\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":true} check( user = \"user:amy\", // check if the user `user:amy` relation = \"legacy_admin\", // has an `legacy_admin` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Let's try to verify the followings: User Object Relation Query Relation? amy workspace:sandcastle legacy_admin is amy related to workspace:sandcastle as legacy_admin? Yes david workspace:sandcastle legacy_admin is david related to workspace:sandcastle as legacy_admin? No amy workspace:sandcastle guest is amy related to workspace:sandcastle as guest? No david workspace:sandcastle guest is david related to workspace:sandcastle as guest? Yes amy workspace:sandcastle member is amy related to workspace:sandcastle as member? No david workspace:sandcastle member is david related to workspace:sandcastle as member? No","s":"01. Individual Permissions","u":"/docs/modeling/advanced/slack","h":"#01-individual-permissions","p":703},{"i":720,"t":"Some of the queries that you ran earlier, while returning the correct response, do not match reality. One of which is: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:amy', relation: 'member', object: 'workspace:sandcastle', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:amy\", Relation: \"member\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:amy\", Relation = \"member\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:amy\", relation=\"member\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:amy\",\"relation\":\"member\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":false} check( user = \"user:amy\", // check if the user `user:amy` relation = \"member\", // has an `member` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false As you saw before, running this query will return amy is not a member of workspace:sandcastle, which is correct based on the data you have given OpenFGA so far. But in reality, Amy, who is a legacy_admin already has an implied channels_admin and member relations. In fact anyone (other than a guest) is a member of the workspace. To change this behavior, we will update our system with a concentric relationship model. With the following updated authorization model, you are informing OpenFGA that any user who is related to a workspace as legacy_admin, is also related as a channels_admin and a member . DSL JSON model schema 1.1 type user type workspace relations define legacy_admin: [user] define channels_admin: [user] or legacy_admin define member: [user] or channels_admin or legacy_admin define guest: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relations\": { \"legacy_admin\": { \"this\": {} }, \"channels_admin\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"legacy_admin\" } } ] } }, \"member\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"channels_admin\" } }, { \"computedUserset\": { \"relation\": \"legacy_admin\" } } ] } }, \"guest\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"legacy_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"channels_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"guest\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } We can then verify amy is a member of workspace:sandcastle. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:amy', relation: 'member', object: 'workspace:sandcastle', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:amy\", Relation: \"member\", Object: \"workspace:sandcastle\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:amy\", Relation = \"member\", Object = \"workspace:sandcastle\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:amy\", relation=\"member\", object=\"workspace:sandcastle\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:amy\",\"relation\":\"member\",\"object\":\"workspace:sandcastle\"}}' # Response: {\"allowed\":true} check( user = \"user:amy\", // check if the user `user:amy` relation = \"member\", // has an `member` relation object = \"workspace:sandcastle\", // with the object `workspace:sandcastle` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We can check for other users and relationships. User Object Relation Query Relation? amy workspace:sandcastle legacy_admin is amy related to workspace:sandcastle as legacy_admin? Yes david workspace:sandcastle legacy_admin is david related to workspace:sandcastle as legacy_admin? No amy workspace:sandcastle guest is amy related to workspace:sandcastle as guest? No david workspace:sandcastle guest is david related to workspace:sandcastle as guest? Yes amy workspace:sandcastle member is amy related to workspace:sandcastle as member? Yes david workspace:sandcastle member is david related to workspace:sandcastle as member? No","s":"02. Updating The workspace Authorization Model With Implied Relations","u":"/docs/modeling/advanced/slack","h":"#02-updating-the-workspace-authorization-model-with-implied-relations","p":703},{"i":722,"t":"So far, you have modeled the users' relations to the workspace itself. In this task you will expand the model to include the relations concerning the channels. By the end of it, you will run some queries to check whether a user can view or write to a certain channel. Queries such as: is david related to channel:general as viewer? (expected answer: No relation, as David is a guest user with only a relation to #proj-marketing-campaign) is david related to channel:proj_marketing_campaign as viewer? (expected answer: There is a relation, as there is a relation between David and #proj-marketing-campaign as a writer) is bob related to channel:general as viewer? (expected answer: There is a relation, as Bob is a member of the Sandcastle workspace, and all members of the workspace have a viewer relation to #general) The requirements are: Amy, Bob, Catherine and Emily, are normal members of the Sandcastle workspace, they can view all public channels, in this case: #general and #proj-marketing-campaign David, a guest user, has only view and write access to the #proj-marketing-campaign channel Bob and Emily are the only ones with either view or write access to the #marketing-internal channel Amy and Emily are the only ones with write access to the #general channel The possible relations to channels are: Workspace includes the channel, consider the relation that of a parent workspace A user can be a viewer and/or writer on a channel The authorization model already has a section describing the workspace, what remains is describing the channel. That can be done by adding the following section to the configuration above: DSL JSON type channel relations define parent_workspace: [workspace] define writer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] define viewer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] { \"type\": \"channel\", \"relations\": { \"parent_workspace\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"parent_workspace\": { \"directly_related_user_types\": [ { \"type\": \"workspace\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] } } } } info The configuration snippet above describes a channel that can have the following relations: workspaces related to it as parent_workspace users related to it as writer users related to it as viewer Implied Relation‚Äã There is an implied relation that anyone who can write to a channel can also read from it, so the authorization model can be modified to be: DSL JSON type channel relations define parent_workspace: [workspace] define writer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] define viewer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] or writer { \"type\": \"channel\", \"relations\": { \"parent_workspace\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } } }, \"metadata\": { \"relations\": { \"parent_workspace\": { \"directly_related_user_types\": [ { \"type\": \"workspace\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] } } } } info Note that the channel type definition has been updated to indicate that viewer is the union of: the set of users with a direct viewer relation to this object the set of users with writer relations to this object As a result, the authorization model is: DSL JSON model schema 1.1 type user type workspace relations define legacy_admin: [user] define channels_admin: [user] or legacy_admin define member: [user] or channels_admin or legacy_admin define guest: [user] type channel relations define parent_workspace: [workspace] define writer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] define viewer: [user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest] or writer { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relations\": { \"legacy_admin\": { \"this\": {} }, \"channels_admin\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"legacy_admin\" } } ] } }, \"member\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"channels_admin\" } }, { \"computedUserset\": { \"relation\": \"legacy_admin\" } } ] } }, \"guest\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"legacy_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"channels_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"guest\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"channel\", \"relations\": { \"parent_workspace\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } } }, \"metadata\": { \"relations\": { \"parent_workspace\": { \"directly_related_user_types\": [ { \"type\": \"workspace\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"workspace\", \"relation\": \"legacy_admin\" }, { \"type\": \"workspace\", \"relation\": \"channels_admin\" }, { \"type\": \"workspace\", \"relation\": \"member\" }, { \"type\": \"workspace\", \"relation\": \"guest\" } ] } } } } ] } Updating Relationship Tuples‚Äã What remains is to add the relationship tuples to indicate the relation between the users, workspace and the channels. The Sandcastle workspace is a parent workspace of the #general, #marketing-internal and #proj-marketing-campaign channels. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'workspace:sandcastle', relation: 'parent_workspace', object: 'channel:general'}, { user: 'workspace:sandcastle', relation: 'parent_workspace', object: 'channel:marketing_internal'}, { user: 'workspace:sandcastle', relation: 'parent_workspace', object: 'channel:proj_marketing_campaign'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"workspace:sandcastle\"), Relation: fgaSdk.PtrString(\"parent_workspace\"), Object: fgaSdk.PtrString(\"channel:general\"), }, { User: fgaSdk.PtrString(\"workspace:sandcastle\"), Relation: fgaSdk.PtrString(\"parent_workspace\"), Object: fgaSdk.PtrString(\"channel:marketing_internal\"), }, { User: fgaSdk.PtrString(\"workspace:sandcastle\"), Relation: fgaSdk.PtrString(\"parent_workspace\"), Object: fgaSdk.PtrString(\"channel:proj_marketing_campaign\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"workspace:sandcastle\", Relation = \"parent_workspace\", Object = \"channel:general\" }, new() { User = \"workspace:sandcastle\", Relation = \"parent_workspace\", Object = \"channel:marketing_internal\" }, new() { User = \"workspace:sandcastle\", Relation = \"parent_workspace\", Object = \"channel:proj_marketing_campaign\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"workspace:sandcastle\", relation=\"parent_workspace\", object=\"channel:general\", ), TupleKey( user=\"workspace:sandcastle\", relation=\"parent_workspace\", object=\"channel:marketing_internal\", ), TupleKey( user=\"workspace:sandcastle\", relation=\"parent_workspace\", object=\"channel:proj_marketing_campaign\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:general\"},{\"user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:marketing_internal\"},{\"user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:proj_marketing_campaign\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"workspace:sandcastle\", \"relation\":\"parent_workspace\", \"object\":\"channel:general\" }, { \"user\":\"workspace:sandcastle\", \"relation\":\"parent_workspace\", \"object\":\"channel:marketing_internal\" }, { \"user\":\"workspace:sandcastle\", \"relation\":\"parent_workspace\", \"object\":\"channel:proj_marketing_campaign\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") #general Channel‚Äã The #general channel is a public channel visible to all the members of the workspace. In OpenFGA, you represent this relation in the form of the following relationship tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // The set of users related to `workspace:sandcastle` as member are also related to `channel:general` as `viewer` { user: 'workspace:sandcastle#member', relation: 'viewer', object: 'channel:general'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // The set of users related to `workspace:sandcastle` as member are also related to `channel:general` as `viewer` User: fgaSdk.PtrString(\"workspace:sandcastle#member\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"channel:general\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // The set of users related to `workspace:sandcastle` as member are also related to `channel:general` as `viewer` new() { User = \"workspace:sandcastle#member\", Relation = \"viewer\", Object = \"channel:general\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # The set of users related to `workspace:sandcastle` as member are also related to `channel:general` as `viewer` user=\"workspace:sandcastle#member\", relation=\"viewer\", object=\"channel:general\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"workspace:sandcastle#member\",\"relation\":\"viewer\",\"object\":\"channel:general\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // The set of users related to `workspace:sandcastle` as member are also related to `channel:general` as `viewer` { \"user\":\"workspace:sandcastle#member\", \"relation\":\"viewer\", \"object\":\"channel:general\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") info This indicates The set of users related to workspace:sandcastle as member are also related to channel:general as viewer And to indicate that Amy and Emily can write to it: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Due to the configuration update you added earlier, writer relation is enough to imply a viewer relation { user: 'user:amy', relation: 'writer', object: 'channel:general'}, { user: 'user:emily', relation: 'writer', object: 'channel:general'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Due to the configuration update you added earlier, writer relation is enough to imply a viewer relation User: fgaSdk.PtrString(\"user:amy\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:general\"), }, { User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:general\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Due to the configuration update you added earlier, writer relation is enough to imply a viewer relation new() { User = \"user:amy\", Relation = \"writer\", Object = \"channel:general\" }, new() { User = \"user:emily\", Relation = \"writer\", Object = \"channel:general\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Due to the configuration update you added earlier, writer relation is enough to imply a viewer relation user=\"user:amy\", relation=\"writer\", object=\"channel:general\", ), TupleKey( user=\"user:emily\", relation=\"writer\", object=\"channel:general\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:amy\",\"relation\":\"writer\",\"object\":\"channel:general\"},{\"user\":\"user:emily\",\"relation\":\"writer\",\"object\":\"channel:general\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Due to the configuration update you added earlier, writer relation is enough to imply a viewer relation { \"user\":\"user:amy\", \"relation\":\"writer\", \"object\":\"channel:general\" }, { \"user\":\"user:emily\", \"relation\":\"writer\", \"object\":\"channel:general\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") #marketing-internal Channel‚Äã The #marketing-internal is visible to only Bob and Emily. They can view and write in it. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:bob', relation: 'writer', object: 'channel:marketing_internal'}, { user: 'user:emily', relation: 'writer', object: 'channel:marketing_internal'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:bob\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:marketing_internal\"), }, { User: fgaSdk.PtrString(\"user:emily\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:marketing_internal\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:bob\", Relation = \"writer\", Object = \"channel:marketing_internal\" }, new() { User = \"user:emily\", Relation = \"writer\", Object = \"channel:marketing_internal\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:bob\", relation=\"writer\", object=\"channel:marketing_internal\", ), TupleKey( user=\"user:emily\", relation=\"writer\", object=\"channel:marketing_internal\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"channel:marketing_internal\"},{\"user\":\"user:emily\",\"relation\":\"writer\",\"object\":\"channel:marketing_internal\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:bob\", \"relation\":\"writer\", \"object\":\"channel:marketing_internal\" }, { \"user\":\"user:emily\", \"relation\":\"writer\", \"object\":\"channel:marketing_internal\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") #proj-marketing-campaign Channel‚Äã The #proj-marketing-campaign is public to all members of the Sandcastle workspace. They can view and write in it. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'workspace:sandcastle#member', relation: 'writer', object: 'channel:proj_marketing_campaign'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"workspace:sandcastle#member\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:proj_marketing_campaign\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"workspace:sandcastle#member\", Relation = \"writer\", Object = \"channel:proj_marketing_campaign\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"workspace:sandcastle#member\", relation=\"writer\", object=\"channel:proj_marketing_campaign\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"workspace:sandcastle#member\",\"relation\":\"writer\",\"object\":\"channel:proj_marketing_campaign\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"workspace:sandcastle#member\", \"relation\":\"writer\", \"object\":\"channel:proj_marketing_campaign\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") David is a guest user who can also view and write to #proj-marketing-campaign Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:david', relation: 'writer', object: 'channel:proj_marketing_campaign'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:david\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"channel:proj_marketing_campaign\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:david\", Relation = \"writer\", Object = \"channel:proj_marketing_campaign\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:david\", relation=\"writer\", object=\"channel:proj_marketing_campaign\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:david\",\"relation\":\"writer\",\"object\":\"channel:proj_marketing_campaign\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:david\", \"relation\":\"writer\", \"object\":\"channel:proj_marketing_campaign\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Verification‚Äã Now that you have added the necessary relationship tuples, you will check to make sure that your configuration is valid. First, we want to ensure david is not related to channel:general as viewer. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:david', relation: 'viewer', object: 'channel:general', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:david\", Relation: \"viewer\", Object: \"channel:general\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:david\", Relation = \"viewer\", Object = \"channel:general\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:david\", relation=\"viewer\", object=\"channel:general\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:david\",\"relation\":\"viewer\",\"object\":\"channel:general\"}}' # Response: {\"allowed\":false} check( user = \"user:david\", // check if the user `user:david` relation = \"viewer\", // has an `viewer` relation object = \"channel:general\", // with the object `channel:general` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false David should be related to channel:proj_marketing_campaign as viewer. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:david', relation: 'viewer', object: 'channel:proj_marketing_campaign', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:david\", Relation: \"viewer\", Object: \"channel:proj_marketing_campaign\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:david\", Relation = \"viewer\", Object = \"channel:proj_marketing_campaign\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:david\", relation=\"viewer\", object=\"channel:proj_marketing_campaign\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:david\",\"relation\":\"viewer\",\"object\":\"channel:proj_marketing_campaign\"}}' # Response: {\"allowed\":true} check( user = \"user:david\", // check if the user `user:david` relation = \"viewer\", // has an `viewer` relation object = \"channel:proj_marketing_campaign\", // with the object `channel:proj_marketing_campaign` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Repeat this for the following relations User Object Relation Query Relation? amy workspace:sandcastle legacy_admin is amy related to workspace:sandcastle as legacy_admin? Yes amy workspace:sandcastle member is amy related to workspace:sandcastle as member? Yes amy workspace:sandcastle channels_admin is amy related to workspace:sandcastle as channels_admin? Yes amy channel:general writer is amy related to channel:general as writer? Yes amy channel:general viewer is amy related to channel:general as viewer? Yes amy channel:marketing_internal writer is amy related to channel:marketing_internal as writer? No amy channel:marketing_internal viewer is amy related to channel:marketing_internal as viewer? No emily channel:marketing_internal writer is emily related to channel:marketing_internal as writer? Yes emily channel:marketing_internal viewer is emily related to channel:marketing_internal as viewer? Yes david workspace:sandcastle guest is david related to workspace:sandcastle as guest? Yes david workspace:sandcastle member is david related to workspace:sandcastle as member? No david channel:general viewer is david related to channel:general as viewer? No david channel:marketing_internal viewer is david related to channel:marketing_internal as viewer? No david channel:proj_marketing_campaign viewer is david related to channel:proj_marketing_campaign as viewer? Yes","s":"03. Updating The Authorization Model To Include Channels","u":"/docs/modeling/advanced/slack","h":"#03-updating-the-authorization-model-to-include-channels","p":703},{"i":724,"t":"Have a basic understanding of authorization and OpenFGA Concepts. Understand how to model authorization for a communication platform like Slack using OpenFGA. In this tutorial, you: were introduced to fine grain authentication and OpenFGA. learned how to build and test an OpenFGA authorization model for a communication platforms like Slack. Upcoming tutorials will dive deeper into OpenFGA, introducing concepts that will improve on the model you built today, and tackling different permission systems, with other relations and requirements that need to be met. If you are interested in learning more about Authorization and Role Management at Slack, check out the Auth0 Fine Grained Authorization (FGA) team's chat with the Slack engineering team.","s":"Summary","u":"/docs/modeling/advanced/slack","h":"#summary","p":703},{"i":726,"t":"Try adding more relationship tuples to represent other users and channels being added. Then run queries to make sure that the authorization model remains valid. Update the configuration to model more Slack permissions (workspace owners, Slack orgs), then add the relationship tuples necessary and run some queries to validate your configuration.","s":"Exercises For You","u":"/docs/modeling/advanced/slack","h":"#exercises-for-you","p":703},{"i":728,"t":"This section explores some methods available to you to tackle some use-cases where the expected authorization check may depend on certain dynamic or contextual data (such as time, location, ip address, weather) that have not been written to the OpenFGA store. When to use Contextual Tuples should be used when modeling cases where a user's access to an object depends on the context of their request. For example: An employee‚Äôs ability to access a document when they are connected to the company VPN or the api call is originating from an internal IP address. A support engineer is only able to access a user's account during office hours. If a user belongs to multiple organizations, they are only able to access a resource if they set a specific organization in their current context.","s":"Contextual and Time-Based Authorization","u":"/docs/modeling/contextual-time-based-authorization","h":"","p":727},{"i":730,"t":"To follow this guide, you should be familiar with some OpenFGA Concepts.","s":"Before You Start","u":"/docs/modeling/contextual-time-based-authorization","h":"#before-you-start","p":727},{"i":732,"t":"A Relation: is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system. A Check Request: is a call to the OpenFGA check endpoint that returns whether the user has a certain relationship with an object. A Relationship Tuple: a grouping consisting of a user, a relation and an object stored in OpenFGA A Contextual Tuple: a tuple that can be added to a Check request, and only exists within the context of that particular request. You also need to be familiar with: Modeling Object-to-Object Relationships: You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Modeling Multiple Restrictions: You need to know how to model requiring multiple authorizations before allowing users to perform certain actions. Learn more ‚Üí","s":"OpenFGA Concepts","u":"/docs/modeling/contextual-time-based-authorization","h":"#-concepts","p":727},{"i":734,"t":"For the scope of this guide, we are going to consider the following scenario. Consider you are building the authorization model for WeBank Inc. In order for an Account Manager at WeBank Inc. to be able to access a customer's account and its transactions, they would need to be: An account manager at the same branch as the customer's account Connected via the branch's internal network or through the branch's VPN Connected during this particular branch's office hours We will start with the following Authorization Model DSL JSON model schema 1.1 type user type branch relations define account_manager: [user] type account relations define branch: [branch] define account_manager: account_manager from branch define customer: [user] define viewer: customer or account_manager define can_view: viewer type transaction relations define account: [account] define can_view: viewer from account { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"branch\", \"relations\": { \"account_manager\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"account_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"account\", \"relations\": { \"branch\": { \"this\": {} }, \"account_manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } } }, \"customer\": { \"this\": {} }, \"viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"customer\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } } ] } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } }, \"metadata\": { \"relations\": { \"branch\": { \"directly_related_user_types\": [ { \"type\": \"branch\" } ] }, \"customer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"transaction\", \"relations\": { \"account\": { \"this\": {} }, \"can_view\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"account\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } }, \"metadata\": { \"relations\": { \"account\": { \"directly_related_user_types\": [ { \"type\": \"account\" } ] } } } } ] } We are considering the case that: Anne is the Account Manager at the West-Side branch Caroline is the customer for checking account number 526 The West-Side branch is the branch that the checking account number 526 has been created at Checking account number 526 has a transaction, we'll call it transaction A The West-Side branch‚Äôs office hours is from 8am-3pm UTC The above state translates to the following relationship tuples: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is the Account Manager at the West-Side branch { user: 'user:anne', relation: 'account_manager', object: 'branch:west-side'}, // Caroline is the customer for checking account number 526 { user: 'user:caroline', relation: 'customer', object: 'account:checking-526'}, // The West-Side branch is the branch that the Checking account number 526 has been created at { user: 'branch:west-side', relation: 'branch', object: 'account:checking-526'}, // Checking account number 526 is the account for transaction A { user: 'account:checking-526', relation: 'account', object: 'transaction:A'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is the Account Manager at the West-Side branch User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"account_manager\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // Caroline is the customer for checking account number 526 User: fgaSdk.PtrString(\"user:caroline\"), Relation: fgaSdk.PtrString(\"customer\"), Object: fgaSdk.PtrString(\"account:checking-526\"), }, { // The West-Side branch is the branch that the Checking account number 526 has been created at User: fgaSdk.PtrString(\"branch:west-side\"), Relation: fgaSdk.PtrString(\"branch\"), Object: fgaSdk.PtrString(\"account:checking-526\"), }, { // Checking account number 526 is the account for transaction A User: fgaSdk.PtrString(\"account:checking-526\"), Relation: fgaSdk.PtrString(\"account\"), Object: fgaSdk.PtrString(\"transaction:A\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is the Account Manager at the West-Side branch new() { User = \"user:anne\", Relation = \"account_manager\", Object = \"branch:west-side\" }, // Caroline is the customer for checking account number 526 new() { User = \"user:caroline\", Relation = \"customer\", Object = \"account:checking-526\" }, // The West-Side branch is the branch that the Checking account number 526 has been created at new() { User = \"branch:west-side\", Relation = \"branch\", Object = \"account:checking-526\" }, // Checking account number 526 is the account for transaction A new() { User = \"account:checking-526\", Relation = \"account\", Object = \"transaction:A\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is the Account Manager at the West-Side branch user=\"user:anne\", relation=\"account_manager\", object=\"branch:west-side\", ), TupleKey( # Caroline is the customer for checking account number 526 user=\"user:caroline\", relation=\"customer\", object=\"account:checking-526\", ), TupleKey( # The West-Side branch is the branch that the Checking account number 526 has been created at user=\"branch:west-side\", relation=\"branch\", object=\"account:checking-526\", ), TupleKey( # Checking account number 526 is the account for transaction A user=\"account:checking-526\", relation=\"account\", object=\"transaction:A\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"account_manager\",\"object\":\"branch:west-side\"},{\"user\":\"user:caroline\",\"relation\":\"customer\",\"object\":\"account:checking-526\"},{\"user\":\"branch:west-side\",\"relation\":\"branch\",\"object\":\"account:checking-526\"},{\"user\":\"account:checking-526\",\"relation\":\"account\",\"object\":\"transaction:A\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is the Account Manager at the West-Side branch { \"user\":\"user:anne\", \"relation\":\"account_manager\", \"object\":\"branch:west-side\" }, // Caroline is the customer for checking account number 526 { \"user\":\"user:caroline\", \"relation\":\"customer\", \"object\":\"account:checking-526\" }, // The West-Side branch is the branch that the Checking account number 526 has been created at { \"user\":\"branch:west-side\", \"relation\":\"branch\", \"object\":\"account:checking-526\" }, // Checking account number 526 is the account for transaction A { \"user\":\"account:checking-526\", \"relation\":\"account\", \"object\":\"transaction:A\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")","s":"Scenario","u":"/docs/modeling/contextual-time-based-authorization","h":"#scenario","p":727},{"i":736,"t":"By the end of this guide we would like to validate that: If Anne is at the branch, and it is 12pm UTC, Anne should be able to view transaction A If Anne is connecting remotely at 12pm UTC but is not connected to the VPN, Anne should not be able to view transaction A If Anne is connecting remotely and is connected to the VPN at 12pm UTC, should be able to view transaction A at 6pm UTC, should not be able to view transaction A","s":"Requirements","u":"/docs/modeling/contextual-time-based-authorization","h":"#requirements","p":727},{"i":738,"t":"In order to solve for the requirements above, we will break the problem down to three steps: Understand relationships without contextual tuples. We will want to ensure that the customer can view a transaction tied to their account the account manager can view a transaction whose account is at the same branch Extend the Authorization Model to take time and ip address into consideration Use contextual tuples for context related checks.","s":"Step By Step","u":"/docs/modeling/contextual-time-based-authorization","h":"#step-by-step","p":727},{"i":740,"t":"With the Authorization Model and relationship tuples shown above, OpenFGA has all the information needed to Ensure that the customer can view a transaction tied to their account Ensure that the account manager can view a transaction whose account is at the same branch We can verify that using the following checks Anne can view transaction:A because she is an account manager of an account that is at the same branch. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'transaction:A', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"transaction:A\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"transaction:A\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"transaction:A\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:A\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Caroline can view transaction:A because she is a customer and the transaction is tied to her account. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:caroline', relation: 'can_view', object: 'transaction:A', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:caroline\", Relation: \"can_view\", Object: \"transaction:A\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:caroline\", Relation = \"can_view\", Object = \"transaction:A\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:caroline\", relation=\"can_view\", object=\"transaction:A\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:caroline\",\"relation\":\"can_view\",\"object\":\"transaction:A\"}}' # Response: {\"allowed\":true} check( user = \"user:caroline\", // check if the user `user:caroline` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Additionally, we will check that Mary, an account manager at a different branch cannot view transaction A. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Mary is an account manager at the East-Side branch { user: 'user:mary', relation: 'account_manager', object: 'branch:east-side'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Mary is an account manager at the East-Side branch User: fgaSdk.PtrString(\"user:mary\"), Relation: fgaSdk.PtrString(\"account_manager\"), Object: fgaSdk.PtrString(\"branch:east-side\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Mary is an account manager at the East-Side branch new() { User = \"user:mary\", Relation = \"account_manager\", Object = \"branch:east-side\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Mary is an account manager at the East-Side branch user=\"user:mary\", relation=\"account_manager\", object=\"branch:east-side\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:mary\",\"relation\":\"account_manager\",\"object\":\"branch:east-side\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Mary is an account manager at the East-Side branch { \"user\":\"user:mary\", \"relation\":\"account_manager\", \"object\":\"branch:east-side\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:mary', relation: 'can_view', object: 'transaction:A', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:mary\", Relation: \"can_view\", Object: \"transaction:A\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:mary\", Relation = \"can_view\", Object = \"transaction:A\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:mary\", relation=\"can_view\", object=\"transaction:A\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:mary\",\"relation\":\"can_view\",\"object\":\"transaction:A\"}}' # Response: {\"allowed\":false} check( user = \"user:mary\", // check if the user `user:mary` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Note that so far, we have not prevented Anne from viewing the transaction outside office hours, let's see if we can do better.","s":"Understand Relationships Without Contextual Data","u":"/docs/modeling/contextual-time-based-authorization","h":"#understand-relationships-without-contextual-data","p":727},{"i":742,"t":"Extend The Authorization Model‚Äã In order to add time and ip address to our authorization model, we will add appropriate types for them. We will have a \"timeslot\" and an \"ip-address-range\" as types, and each can have users related to it as a user. DSL JSON type timeslot relations define user: [user] { \"type\": \"timeslot\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } DSL JSON type ip-address-range relations define user: [user] { \"type\": \"ip-address-range\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } We'll also need to introduce some new relations, and modify some others. On the \"branch\" type: Add \"approved_timeslot\" relation to mark than a certain timeslot is approved to view transactions for accounts in this branch Add \"approved_ip_address_range\" relation to mark than an ip address range is approved to view transactions for accounts in this branch Add \"approved_context\" relation to combine the two authorizations above (user from approved_timeslot and user from approved_ip_address_range), and indicate that the user is in an approved context The branch type definition then becomes: DSL JSON type branch relations define account_manager: [user] define approved_ip_address_range: [ip-address-range] define approved_timeslot: [timeslot] define approved_context: user from approved_timeslot and user from approved_ip_address_range { \"type\": \"branch\", \"relations\": { \"account_manager\": { \"this\": {} }, \"approved_ip_address_range\": { \"this\": {} }, \"approved_timeslot\": { \"this\": {} }, \"approved_context\": { \"intersection\": { \"child\": [ { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_timeslot\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_ip_address_range\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } } ] } } }, \"metadata\": { \"relations\": { \"account_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"approved_ip_address_range\": { \"directly_related_user_types\": [ { \"type\": \"ip-address-range\" } ] }, \"approved_timeslot\": { \"directly_related_user_types\": [ { \"type\": \"timeslot\" } ] } } } } On the \"account\" type: Add \"account_manager_viewer\" relation to combine the \"account_manager\" relationship and the new \"approved_context\" relation from the branch Update the \"viewer\" relation definition to customer or account_manager_viewer where \"customer\" can view without being subjected to contextual authorization, while \"account_manager_viewer\" needs to be within the branch allowed context to view The account type definition then becomes: DSL JSON type account relations define branch: [branch] define account_manager: account_manager from branch define customer: [user] define account_manager_viewer: account_manager and approved_context from branch define viewer: customer or account_manager_viewer define can_view: viewer { \"type\": \"account\", \"relations\": { \"branch\": { \"this\": {} }, \"account_manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } } }, \"customer\": { \"this\": {} }, \"account_manager_viewer\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"approved_context\" } } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"customer\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager_viewer\" } } ] } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } }, \"metadata\": { \"relations\": { \"branch\": { \"directly_related_user_types\": [ { \"type\": \"branch\" } ] }, \"customer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } note On the \"transaction\" type: Nothing will need to be done, as it will inherit the updated \"viewer\" relation definition from \"account\" Add The Required Tuples To Mark That Anne Is In An Approved Context‚Äã Now that we have updated our authorization model to take time and ip address into consideration, you will notice that Anne has lost access because nothing indicates that Anne is connecting from an approved ip address and time. You can verify that by issuing the following check: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'anne', relation: 'can_view', object: 'transaction:A', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"anne\", Relation: \"can_view\", Object: \"transaction:A\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"anne\", Relation = \"can_view\", Object = \"transaction:A\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"anne\", relation=\"can_view\", object=\"transaction:A\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"anne\",\"relation\":\"can_view\",\"object\":\"transaction:A\"}}' # Response: {\"allowed\":false} check( user = \"anne\", // check if the user `anne` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false We need to add relationship tuples to mark some approved timeslots and ip address ranges: note Here we added the time slots in increments of 1 hour periods, but this is not a requirement. We did not add all the office hours to keep this guide shorter. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // 11am to 12pm is within the office hours of the West-Side branch { user: 'timeslot:11_12', relation: 'approved_timeslot', object: 'branch:west-side'}, // 12pm to 1pm is within the office hours of the West-Side branch { user: 'timeslot:12_13', relation: 'approved_timeslot', object: 'branch:west-side'}, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch { user: 'ip-address-range:10.0.0.0/16', relation: 'approved_ip_address_range', object: 'branch:west-side'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // 11am to 12pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:11_12\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 12pm to 1pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:12_13\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch User: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), Relation: fgaSdk.PtrString(\"approved_ip_address_range\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // 11am to 12pm is within the office hours of the West-Side branch new() { User = \"timeslot:11_12\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 12pm to 1pm is within the office hours of the West-Side branch new() { User = \"timeslot:12_13\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch new() { User = \"ip-address-range:10.0.0.0/16\", Relation = \"approved_ip_address_range\", Object = \"branch:west-side\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # 11am to 12pm is within the office hours of the West-Side branch user=\"timeslot:11_12\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 12pm to 1pm is within the office hours of the West-Side branch user=\"timeslot:12_13\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch user=\"ip-address-range:10.0.0.0/16\", relation=\"approved_ip_address_range\", object=\"branch:west-side\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"timeslot:11_12\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:12_13\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"ip-address-range:10.0.0.0/16\",\"relation\":\"approved_ip_address_range\",\"object\":\"branch:west-side\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // 11am to 12pm is within the office hours of the West-Side branch { \"user\":\"timeslot:11_12\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 12pm to 1pm is within the office hours of the West-Side branch { \"user\":\"timeslot:12_13\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch { \"user\":\"ip-address-range:10.0.0.0/16\", \"relation\":\"approved_ip_address_range\", \"object\":\"branch:west-side\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Now that we have added the allowed timeslots and ip address ranges we need to add the following relationship tuples to give Anne access. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is connecting from within the 10.0.0.0/16 ip address range { user: 'user:anne', relation: 'user', object: 'ip-address-range:10.0.0.0/16'}, // Anne is connecting between 12pm and 1pm { user: 'user:anne', relation: 'user', object: 'timeslot:12_13'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is connecting from within the 10.0.0.0/16 ip address range User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), }, { // Anne is connecting between 12pm and 1pm User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"timeslot:12_13\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is connecting from within the 10.0.0.0/16 ip address range new() { User = \"user:anne\", Relation = \"user\", Object = \"ip-address-range:10.0.0.0/16\" }, // Anne is connecting between 12pm and 1pm new() { User = \"user:anne\", Relation = \"user\", Object = \"timeslot:12_13\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is connecting from within the 10.0.0.0/16 ip address range user=\"user:anne\", relation=\"user\", object=\"ip-address-range:10.0.0.0/16\", ), TupleKey( # Anne is connecting between 12pm and 1pm user=\"user:anne\", relation=\"user\", object=\"timeslot:12_13\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip-address-range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:12_13\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is connecting from within the 10.0.0.0/16 ip address range { \"user\":\"user:anne\", \"relation\":\"user\", \"object\":\"ip-address-range:10.0.0.0/16\" }, // Anne is connecting between 12pm and 1pm { \"user\":\"user:anne\", \"relation\":\"user\", \"object\":\"timeslot:12_13\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") If we have the above two tuples in the system, when checking whether Anne can view transaction A we should get a response stating that Anne can view it. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'transaction:A', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"transaction:A\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"transaction:A\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"transaction:A\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:A\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"Take Time And IP Address Into Consideration","u":"/docs/modeling/contextual-time-based-authorization","h":"#take-time-and-ip-address-into-consideration","p":727},{"i":744,"t":"Now that we know we can authorize based on present state, we have a different problem to solve. We are storing the tuples in the state in order for OpenFGA to evaluate them, which means that: For the case of the IP Address, we are not able to truly authorize based on the context of the request. E.g. if Anne was trying to connect from the phone and from the PC at the same time, and only the PC was connected to the VPN, how would OpenFGA know to deny one and allow the other if the data is stored in the state? On every check call we have to first write the correct tuples, then call the Check api, then clean up those tuples. This causes a substantial increase in latency as well as incorrect answers for requests happening in parallel (they could write/delete each other's tuples). How do we solve this? How do we tie the above two tuples to the context of the request instead of the system state? First, we will need to undo adding the stored relationship tuples where Anne is connecting from within the 10.0.0.0/16 ip address range and Anne connecting between 12pm and 1pm Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ deletes: { tuple_keys : [ // Remove stored tuples where Anne is connecting from within the 10.0.0.0/16 ip address range { user: 'user:anne', relation: 'user', object: 'ip-address-range:10.0.0.0/16'}, // Remove stored tuples where Anne is connecting between 12pm and 1pm { user: 'user:anne', relation: 'user', object: 'timeslot:12_13'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Deletes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Remove stored tuples where Anne is connecting from within the 10.0.0.0/16 ip address range User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), }, { // Remove stored tuples where Anne is connecting between 12pm and 1pm User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"timeslot:12_13\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Deletes = new TupleKeys(new List<TupleKey>() { // Remove stored tuples where Anne is connecting from within the 10.0.0.0/16 ip address range new() { User = \"user:anne\", Relation = \"user\", Object = \"ip-address-range:10.0.0.0/16\" }, // Remove stored tuples where Anne is connecting between 12pm and 1pm new() { User = \"user:anne\", Relation = \"user\", Object = \"timeslot:12_13\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( deletes=TupleKeys( tuple_keys=[ TupleKey( # Remove stored tuples where Anne is connecting from within the 10.0.0.0/16 ip address range user=\"user:anne\", relation=\"user\", object=\"ip-address-range:10.0.0.0/16\", ), TupleKey( # Remove stored tuples where Anne is connecting between 12pm and 1pm user=\"user:anne\", relation=\"user\", object=\"timeslot:12_13\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"deletes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip-address-range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:12_13\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' delete([ // Remove stored tuples where Anne is connecting from within the 10.0.0.0/16 ip address range { \"user\":\"user:anne\", \"relation\":\"user\", \"object\":\"ip-address-range:10.0.0.0/16\" }, // Remove stored tuples where Anne is connecting between 12pm and 1pm { \"user\":\"user:anne\", \"relation\":\"user\", \"object\":\"timeslot:12_13\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") For Check calls, OpenFGA has a concept called \"Contextual Tuples\". Contextual Tuples are tuples that do not exist in the system state and are not written beforehand to OpenFGA. They are tuples that are sent alongside the Check request and will be treated as if they already exist in the state for the context of that particular Check call. When Anne is connecting from an allowed ip address range and timeslot, OpenFGA will return {\"allowed\":true}: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'transaction:A', }, contextual_tuples: { tuple_keys: [ { user: \"user:anne\", relation: \"user\", object: \"ip-address-range:10.0.0.0/16\" }, { user: \"user:anne\", relation: \"user\", object: \"timeslot:12_13\" } ] }}); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"transaction:A\", }, ContextualTuples: &fgaSdk.ContextualTuples{ TupleKeys: []fgaSdk.TupleKey{ { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), }, { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"timeslot:12_13\"), } } } } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"transaction:A\" }, ContextualTuples = new ContextualTupleKeys(new List<TupleKey>({ new(user: \"user:anne\", relation: \"user\", _object: \"ip-address-range:10.0.0.0/16\"), new(user: \"user:anne\", relation: \"user\", _object: \"timeslot:12_13\") })), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"transaction:A\", ), contextual_tuples=ContextualTupleKeys( tuple_keys=[ TupleKey(user=\"user:anne\", relation=\"user\", object=\"ip-address-range:10.0.0.0/16\"), TupleKey(user=\"user:anne\", relation=\"user\", object=\"timeslot:12_13\") ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:A\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip-address-range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:12_13\"}]}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` contextual_tuples = [ // Assuming the following is true {user = \"user:anne\", relation = \"user\", object = \"ip-address-range:10.0.0.0/16\"}, {user = \"user:anne\", relation = \"user\", object = \"timeslot:12_13\"} ], authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true When Anne is connecting from a denied ip address range or timeslot, OpenFGA will return {\"allowed\":false}: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'can_view', object: 'transaction:A', }, contextual_tuples: { tuple_keys: [ { user: \"user:anne\", relation: \"user\", object: \"ip-address-range:10.0.0.0/16\" }, { user: \"user:anne\", relation: \"user\", object: \"timeslot:18_19\" } ] }}); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"can_view\", Object: \"transaction:A\", }, ContextualTuples: &fgaSdk.ContextualTuples{ TupleKeys: []fgaSdk.TupleKey{ { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), }, { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"user\"), Object: fgaSdk.PtrString(\"timeslot:18_19\"), } } } } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"can_view\", Object = \"transaction:A\" }, ContextualTuples = new ContextualTupleKeys(new List<TupleKey>({ new(user: \"user:anne\", relation: \"user\", _object: \"ip-address-range:10.0.0.0/16\"), new(user: \"user:anne\", relation: \"user\", _object: \"timeslot:18_19\") })), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"can_view\", object=\"transaction:A\", ), contextual_tuples=ContextualTupleKeys( tuple_keys=[ TupleKey(user=\"user:anne\", relation=\"user\", object=\"ip-address-range:10.0.0.0/16\"), TupleKey(user=\"user:anne\", relation=\"user\", object=\"timeslot:18_19\") ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:A\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip-address-range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:18_19\"}]}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"can_view\", // has an `can_view` relation object = \"transaction:A\", // with the object `transaction:A` contextual_tuples = [ // Assuming the following is true {user = \"user:anne\", relation = \"user\", object = \"ip-address-range:10.0.0.0/16\"}, {user = \"user:anne\", relation = \"user\", object = \"timeslot:18_19\"} ], authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"Use Contextual Tuples For Context Related Checks","u":"/docs/modeling/contextual-time-based-authorization","h":"#use-contextual-tuples-for-context-related-checks","p":727},{"i":746,"t":"Final version of the Authorization Model and Relationship tuples DSL JSON model schema 1.1 type user type branch relations define account_manager: [user] define approved_ip_address_range: [ip-address-range] define approved_timeslot: [timeslot] define approved_context: user from approved_timeslot and user from approved_ip_address_range type account relations define branch: [branch] define account_manager: account_manager from branch define customer: [user] define account_manager_viewer: account_manager and approved_context from branch define viewer: customer or account_manager_viewer define can_view: viewer type transaction relations define account: [account] define can_view: viewer from account type timeslot relations define user: [user] type ip-address-range relations define user: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"branch\", \"relations\": { \"account_manager\": { \"this\": {} }, \"approved_ip_address_range\": { \"this\": {} }, \"approved_timeslot\": { \"this\": {} }, \"approved_context\": { \"intersection\": { \"child\": [ { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_timeslot\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_ip_address_range\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } } ] } } }, \"metadata\": { \"relations\": { \"account_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"approved_ip_address_range\": { \"directly_related_user_types\": [ { \"type\": \"ip-address-range\" } ] }, \"approved_timeslot\": { \"directly_related_user_types\": [ { \"type\": \"timeslot\" } ] } } } }, { \"type\": \"account\", \"relations\": { \"branch\": { \"this\": {} }, \"account_manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } } }, \"customer\": { \"this\": {} }, \"account_manager_viewer\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"approved_context\" } } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"customer\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager_viewer\" } } ] } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } }, \"metadata\": { \"relations\": { \"branch\": { \"directly_related_user_types\": [ { \"type\": \"branch\" } ] }, \"customer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"transaction\", \"relations\": { \"account\": { \"this\": {} }, \"can_view\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"account\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } }, \"metadata\": { \"relations\": { \"account\": { \"directly_related_user_types\": [ { \"type\": \"account\" } ] } } } }, { \"type\": \"timeslot\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"ip-address-range\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is the Account Manager at the West-Side branch { user: 'user:anne', relation: 'account_manager', object: 'branch:west-side'}, // Caroline is the customer for checking account number 526 { user: 'user:caroline', relation: 'customer', object: 'account:checking-526'}, // The West-Side branch is the branch that the Checking account number 526 has been created at { user: 'branch:west-side', relation: 'branch', object: 'account:checking-526'}, // Checking account number 526 is the account for transaction A { user: 'account:checking-526', relation: 'account', object: 'transaction:A'}, // 8am to 9am is within the office hours of the West-Side branch { user: 'timeslot:8_9', relation: 'approved_timeslot', object: 'branch:west-side'}, // 9am to 10am is within the office hours of the West-Side branch { user: 'timeslot:9_10', relation: 'approved_timeslot', object: 'branch:west-side'}, // 10am to 11am is within the office hours of the West-Side branch { user: 'timeslot:10_11', relation: 'approved_timeslot', object: 'branch:west-side'}, // 11am to 12pm is within the office hours of the West-Side branch { user: 'timeslot:11_12', relation: 'approved_timeslot', object: 'branch:west-side'}, // 12pm to 1pm is within the office hours of the West-Side branch { user: 'timeslot:12_13', relation: 'approved_timeslot', object: 'branch:west-side'}, // 1pm to 2pm is within the office hours of the West-Side branch { user: 'timeslot:13_14', relation: 'approved_timeslot', object: 'branch:west-side'}, // 2pm to 3pm is within the office hours of the West-Side branch { user: 'timeslot:14_15', relation: 'approved_timeslot', object: 'branch:west-side'}, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch { user: 'ip-address-range:10.0.0.0/16', relation: 'approved_ip_address_range', object: 'branch:west-side'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is the Account Manager at the West-Side branch User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"account_manager\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // Caroline is the customer for checking account number 526 User: fgaSdk.PtrString(\"user:caroline\"), Relation: fgaSdk.PtrString(\"customer\"), Object: fgaSdk.PtrString(\"account:checking-526\"), }, { // The West-Side branch is the branch that the Checking account number 526 has been created at User: fgaSdk.PtrString(\"branch:west-side\"), Relation: fgaSdk.PtrString(\"branch\"), Object: fgaSdk.PtrString(\"account:checking-526\"), }, { // Checking account number 526 is the account for transaction A User: fgaSdk.PtrString(\"account:checking-526\"), Relation: fgaSdk.PtrString(\"account\"), Object: fgaSdk.PtrString(\"transaction:A\"), }, { // 8am to 9am is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:8_9\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 9am to 10am is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:9_10\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 10am to 11am is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:10_11\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 11am to 12pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:11_12\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 12pm to 1pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:12_13\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 1pm to 2pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:13_14\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // 2pm to 3pm is within the office hours of the West-Side branch User: fgaSdk.PtrString(\"timeslot:14_15\"), Relation: fgaSdk.PtrString(\"approved_timeslot\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, { // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch User: fgaSdk.PtrString(\"ip-address-range:10.0.0.0/16\"), Relation: fgaSdk.PtrString(\"approved_ip_address_range\"), Object: fgaSdk.PtrString(\"branch:west-side\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is the Account Manager at the West-Side branch new() { User = \"user:anne\", Relation = \"account_manager\", Object = \"branch:west-side\" }, // Caroline is the customer for checking account number 526 new() { User = \"user:caroline\", Relation = \"customer\", Object = \"account:checking-526\" }, // The West-Side branch is the branch that the Checking account number 526 has been created at new() { User = \"branch:west-side\", Relation = \"branch\", Object = \"account:checking-526\" }, // Checking account number 526 is the account for transaction A new() { User = \"account:checking-526\", Relation = \"account\", Object = \"transaction:A\" }, // 8am to 9am is within the office hours of the West-Side branch new() { User = \"timeslot:8_9\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 9am to 10am is within the office hours of the West-Side branch new() { User = \"timeslot:9_10\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 10am to 11am is within the office hours of the West-Side branch new() { User = \"timeslot:10_11\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 11am to 12pm is within the office hours of the West-Side branch new() { User = \"timeslot:11_12\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 12pm to 1pm is within the office hours of the West-Side branch new() { User = \"timeslot:12_13\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 1pm to 2pm is within the office hours of the West-Side branch new() { User = \"timeslot:13_14\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // 2pm to 3pm is within the office hours of the West-Side branch new() { User = \"timeslot:14_15\", Relation = \"approved_timeslot\", Object = \"branch:west-side\" }, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch new() { User = \"ip-address-range:10.0.0.0/16\", Relation = \"approved_ip_address_range\", Object = \"branch:west-side\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is the Account Manager at the West-Side branch user=\"user:anne\", relation=\"account_manager\", object=\"branch:west-side\", ), TupleKey( # Caroline is the customer for checking account number 526 user=\"user:caroline\", relation=\"customer\", object=\"account:checking-526\", ), TupleKey( # The West-Side branch is the branch that the Checking account number 526 has been created at user=\"branch:west-side\", relation=\"branch\", object=\"account:checking-526\", ), TupleKey( # Checking account number 526 is the account for transaction A user=\"account:checking-526\", relation=\"account\", object=\"transaction:A\", ), TupleKey( # 8am to 9am is within the office hours of the West-Side branch user=\"timeslot:8_9\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 9am to 10am is within the office hours of the West-Side branch user=\"timeslot:9_10\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 10am to 11am is within the office hours of the West-Side branch user=\"timeslot:10_11\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 11am to 12pm is within the office hours of the West-Side branch user=\"timeslot:11_12\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 12pm to 1pm is within the office hours of the West-Side branch user=\"timeslot:12_13\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 1pm to 2pm is within the office hours of the West-Side branch user=\"timeslot:13_14\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # 2pm to 3pm is within the office hours of the West-Side branch user=\"timeslot:14_15\", relation=\"approved_timeslot\", object=\"branch:west-side\", ), TupleKey( # The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch user=\"ip-address-range:10.0.0.0/16\", relation=\"approved_ip_address_range\", object=\"branch:west-side\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"account_manager\",\"object\":\"branch:west-side\"},{\"user\":\"user:caroline\",\"relation\":\"customer\",\"object\":\"account:checking-526\"},{\"user\":\"branch:west-side\",\"relation\":\"branch\",\"object\":\"account:checking-526\"},{\"user\":\"account:checking-526\",\"relation\":\"account\",\"object\":\"transaction:A\"},{\"user\":\"timeslot:8_9\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:9_10\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:10_11\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:11_12\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:12_13\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:13_14\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"timeslot:14_15\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west-side\"},{\"user\":\"ip-address-range:10.0.0.0/16\",\"relation\":\"approved_ip_address_range\",\"object\":\"branch:west-side\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is the Account Manager at the West-Side branch { \"user\":\"user:anne\", \"relation\":\"account_manager\", \"object\":\"branch:west-side\" }, // Caroline is the customer for checking account number 526 { \"user\":\"user:caroline\", \"relation\":\"customer\", \"object\":\"account:checking-526\" }, // The West-Side branch is the branch that the Checking account number 526 has been created at { \"user\":\"branch:west-side\", \"relation\":\"branch\", \"object\":\"account:checking-526\" }, // Checking account number 526 is the account for transaction A { \"user\":\"account:checking-526\", \"relation\":\"account\", \"object\":\"transaction:A\" }, // 8am to 9am is within the office hours of the West-Side branch { \"user\":\"timeslot:8_9\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 9am to 10am is within the office hours of the West-Side branch { \"user\":\"timeslot:9_10\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 10am to 11am is within the office hours of the West-Side branch { \"user\":\"timeslot:10_11\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 11am to 12pm is within the office hours of the West-Side branch { \"user\":\"timeslot:11_12\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 12pm to 1pm is within the office hours of the West-Side branch { \"user\":\"timeslot:12_13\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 1pm to 2pm is within the office hours of the West-Side branch { \"user\":\"timeslot:13_14\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // 2pm to 3pm is within the office hours of the West-Side branch { \"user\":\"timeslot:14_15\", \"relation\":\"approved_timeslot\", \"object\":\"branch:west-side\" }, // The office VPN w/ the 10.0.0.0/16 address range is approved for the West-Side branch { \"user\":\"ip-address-range:10.0.0.0/16\", \"relation\":\"approved_ip_address_range\", \"object\":\"branch:west-side\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Warning Contextual tuples: Are not persisted in the store. Are only supported on the Check API endpoint. They are not supported on read, expand and other endpoints. If you are using the ReadChanges API endpoint to build a permission aware search index, note that it will not be trivial to take contextual tuples into account.","s":"Summary","u":"/docs/modeling/contextual-time-based-authorization","h":"#summary","p":727},{"i":748,"t":"In order to keep this guide concise, we assumed you were modeling for a single bank. What if you were offering a multi-tenant service where each bank is a single tenant? In that case, we can extend the model like so: DSL JSON model schema 1.1 type user type bank relations define admin: [user] type branch relations define bank: [bank] define account_manager: [user] define approved_ip_address_range: [ip-address-range] define approved_timeslot: [timeslot] define approved_context: user from approved_timeslot and user from approved_ip_address_range type account relations define branch: [branch] define account_manager: account_manager from branch define customer: [user] define account_manager_viewer: account_manager and approved_context from branch define viewer: customer or account_manager_viewer define can_view: viewer type transaction relations define account: [account] define can_view: viewer from account type timeslot relations define user: [user] type ip-address-range relations define user: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"bank\", \"relations\": { \"admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"branch\", \"relations\": { \"bank\": { \"this\": {} }, \"account_manager\": { \"this\": {} }, \"approved_ip_address_range\": { \"this\": {} }, \"approved_timeslot\": { \"this\": {} }, \"approved_context\": { \"intersection\": { \"child\": [ { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_timeslot\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"approved_ip_address_range\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"user\" } } } ] } } }, \"metadata\": { \"relations\": { \"bank\": { \"directly_related_user_types\": [ { \"type\": \"bank\" } ] }, \"account_manager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"approved_ip_address_range\": { \"directly_related_user_types\": [ { \"type\": \"ip-address-range\" } ] }, \"approved_timeslot\": { \"directly_related_user_types\": [ { \"type\": \"timeslot\" } ] } } } }, { \"type\": \"account\", \"relations\": { \"branch\": { \"this\": {} }, \"account_manager\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } } }, \"customer\": { \"this\": {} }, \"account_manager_viewer\": { \"intersection\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager\" } }, { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"branch\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"approved_context\" } } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"computedUserset\": { \"object\": \"\", \"relation\": \"customer\" } }, { \"computedUserset\": { \"object\": \"\", \"relation\": \"account_manager_viewer\" } } ] } }, \"can_view\": { \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } }, \"metadata\": { \"relations\": { \"branch\": { \"directly_related_user_types\": [ { \"type\": \"branch\" } ] }, \"customer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"transaction\", \"relations\": { \"account\": { \"this\": {} }, \"can_view\": { \"tupleToUserset\": { \"tupleset\": { \"object\": \"\", \"relation\": \"account\" }, \"computedUserset\": { \"object\": \"\", \"relation\": \"viewer\" } } } }, \"metadata\": { \"relations\": { \"account\": { \"directly_related_user_types\": [ { \"type\": \"account\" } ] } } } }, { \"type\": \"timeslot\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"ip-address-range\", \"relations\": { \"user\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"user\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"Taking It A Step Further: Banks As A Service Authorization","u":"/docs/modeling/contextual-time-based-authorization","h":"#taking-it-a-step-further-banks-as-a-service-authorization","p":727},{"i":750,"t":"Check the following sections for more on how user groups can be used. Object to Object Relationships Learn how objects can relate to one another and how that can affect user's access. More Modeling with Multiple Restrictions Learn how to model requiring multiple relationships before users are authorized to perform certain actions. More OpenFGA API Details on the Check API in the OpenFGA reference guide. More","s":"Related Sections","u":"/docs/modeling/contextual-time-based-authorization","h":"#related-sections","p":727},{"i":752,"t":"This tutorial explains how to model entitlements for a platform like GitHub using OpenFGA. What you will learn How to model an entitlement use case in OpenFGA How to start with a given set of requirements and scenarios and iterate on the OpenFGA model until those requirements are met","s":"Modeling Entitlements for a System with OpenFGA","u":"/docs/modeling/advanced/entitlements","h":"","p":751},{"i":754,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA concepts and know how to develop the things that we will list below. OpenFGA Concepts‚Äã It would be helpful to have an understanding of some concepts of OpenFGA before you start. Modeling Object-to-Object Relationships‚Äã You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Used here to indicate that members of an org are subscriber members of the plan the org is subscriber to, and subscriber members of a plan get access to all the plan's features. Direct Relationships‚Äã You need to know how to disallow granting direct relation to an object and requiring the user to have a relation with another object that would imply a relation with the first one. Learn more ‚Üí Used here to indicate that \"access\" to a feature cannot be directly granted to a user, but is implied through the users organization subscribing to a plan that offers that feature. Concepts & Configuration Language‚Äã Some OpenFGA Concepts Configuration Language","s":"Before You Start","u":"/docs/modeling/advanced/entitlements","h":"#before-you-start","p":751},{"i":756,"t":"It would be helpful to have an understanding of some concepts of OpenFGA before you start.","s":"OpenFGA Concepts","u":"/docs/modeling/advanced/entitlements","h":"#-concepts","p":751},{"i":758,"t":"In many product offerings, the features are behind multiple tiers. In this tutorial, you will build an authorization model for a subset of GitHub's entitlements (detailed below) using OpenFGA. You will use some scenarios to validate the model. At their core, entitlements is just asking: does a user X have access to feature Y? In GitHub's case for example, they have a concept called \"Draft Pull Requests\". Once the user loads the Pull Request page, the frontend needs to know whether it can show the \"Draft Pull Request\" option, as in it needs to know: \"Does the current user have access to feature Draft Pull Request?\". Note: For brevity, this tutorial will not model all of GitHub entitlements. Instead, it will focus on modeling for the scenarios outlined below","s":"What You Will Be Modeling","u":"/docs/modeling/advanced/entitlements","h":"#what-you-will-be-modeling","p":751},{"i":760,"t":"You will model an entitlement system similar to GitHub's, focusing on a few scenarios. GitHub has 3 plans: \"Free\", \"Team\" and \"Enterprise\", with each of them offering several features. The higher-priced plans include all the features of the lower priced plans. You will be focusing on a subset of the features offered. A summary of GitHub's entitlement system: Free Issues Team Everything from the free plan Draft Pull Requests Enterprise Everything from the team plan SAML Single Sign-On","s":"Requirements","u":"/docs/modeling/advanced/entitlements","h":"#requirements","p":751},{"i":762,"t":"Use the following scenarios to be able to validate whether the model of the requirements is correct. Take these three organizations Alpha Beta Gamma (alpha), a subscriber on the free plan Bayer Water Supplies (bayer), a subscriber on the team plan Cups and Dishes (cups), a subscriber on the enterprise plan Take these three users Anne, member of Alpha Beta Gamma Beth, member of Bayer Water Supplies Charles, member of Cups and Dishes By the end of this tutorial, you should be able to query OpenFGA with queries like: Anne has access to Issues (expecting yes) Anne has access to Draft Pull Requests (expecting no) Anne has access to Single Sign-on (expecting no) Beth has access to Issues (expecting yes) Beth has access to Draft Pull Requests (expecting yes) Beth has access to Single Sign-on (expecting no) Charles has access to Issues (expecting yes) Charles has access to Draft Pull Requests (expecting yes) Charles has access to Single Sign-on (expecting yes)","s":"Defined Scenarios","u":"/docs/modeling/advanced/entitlements","h":"#defined-scenarios","p":751},{"i":765,"t":"In this tutorial you are going to take a different approach to previous tutorials. You will start with a simpleauthorization model, add relationship tuples to represent some sample scenarios, and iterate until those scenarios return the results you expect. In the scenarios outlined above, you have organizations, plans and features. Similar to the example above, start with a basic listing of the types and their relations: A feature has a plan associated to it, we'll call the relation between them associated_plan A plan has an organization as a subscriber to it An organization has users as members DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] type plan relations define subscriber: [organization] type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"01. Building The Initial Authorization Model And Relationship Tuples","u":"/docs/modeling/advanced/entitlements","h":"#01-building-the-initial-authorization-model-and-relationship-tuples","p":751},{"i":767,"t":"Now you can add the relationship tuples to represent these relationships mentioned in the requirements and scenarios sections: The relations between the features and plans are as follows: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // the free plan is the associated plan of the issues feature { user: 'plan:free', relation: 'associated_plan', object: 'feature:issues'}, // the team plan is the associated plan of the issues feature { user: 'plan:team', relation: 'associated_plan', object: 'feature:issues'}, // the team plan is the associated plan of the draft pull requests feature { user: 'plan:team', relation: 'associated_plan', object: 'feature:draft_prs'}, // the enterprise plan is the associated plan of the issues feature { user: 'plan:enterprise', relation: 'associated_plan', object: 'feature:issues'}, // the enterprise plan is the associated plan of the draft pull requests feature { user: 'plan:enterprise', relation: 'associated_plan', object: 'feature:draft_prs'}, // the enterprise plan is the associated plan of the SAML Single Sign-on feature { user: 'plan:enterprise', relation: 'associated_plan', object: 'feature:sso'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // the free plan is the associated plan of the issues feature User: fgaSdk.PtrString(\"plan:free\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:issues\"), }, { // the team plan is the associated plan of the issues feature User: fgaSdk.PtrString(\"plan:team\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:issues\"), }, { // the team plan is the associated plan of the draft pull requests feature User: fgaSdk.PtrString(\"plan:team\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:draft_prs\"), }, { // the enterprise plan is the associated plan of the issues feature User: fgaSdk.PtrString(\"plan:enterprise\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:issues\"), }, { // the enterprise plan is the associated plan of the draft pull requests feature User: fgaSdk.PtrString(\"plan:enterprise\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:draft_prs\"), }, { // the enterprise plan is the associated plan of the SAML Single Sign-on feature User: fgaSdk.PtrString(\"plan:enterprise\"), Relation: fgaSdk.PtrString(\"associated_plan\"), Object: fgaSdk.PtrString(\"feature:sso\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // the free plan is the associated plan of the issues feature new() { User = \"plan:free\", Relation = \"associated_plan\", Object = \"feature:issues\" }, // the team plan is the associated plan of the issues feature new() { User = \"plan:team\", Relation = \"associated_plan\", Object = \"feature:issues\" }, // the team plan is the associated plan of the draft pull requests feature new() { User = \"plan:team\", Relation = \"associated_plan\", Object = \"feature:draft_prs\" }, // the enterprise plan is the associated plan of the issues feature new() { User = \"plan:enterprise\", Relation = \"associated_plan\", Object = \"feature:issues\" }, // the enterprise plan is the associated plan of the draft pull requests feature new() { User = \"plan:enterprise\", Relation = \"associated_plan\", Object = \"feature:draft_prs\" }, // the enterprise plan is the associated plan of the SAML Single Sign-on feature new() { User = \"plan:enterprise\", Relation = \"associated_plan\", Object = \"feature:sso\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # the free plan is the associated plan of the issues feature user=\"plan:free\", relation=\"associated_plan\", object=\"feature:issues\", ), TupleKey( # the team plan is the associated plan of the issues feature user=\"plan:team\", relation=\"associated_plan\", object=\"feature:issues\", ), TupleKey( # the team plan is the associated plan of the draft pull requests feature user=\"plan:team\", relation=\"associated_plan\", object=\"feature:draft_prs\", ), TupleKey( # the enterprise plan is the associated plan of the issues feature user=\"plan:enterprise\", relation=\"associated_plan\", object=\"feature:issues\", ), TupleKey( # the enterprise plan is the associated plan of the draft pull requests feature user=\"plan:enterprise\", relation=\"associated_plan\", object=\"feature:draft_prs\", ), TupleKey( # the enterprise plan is the associated plan of the SAML Single Sign-on feature user=\"plan:enterprise\", relation=\"associated_plan\", object=\"feature:sso\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"plan:free\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:team\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:team\",\"relation\":\"associated_plan\",\"object\":\"feature:draft_prs\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:draft_prs\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:sso\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // the free plan is the associated plan of the issues feature { \"user\":\"plan:free\", \"relation\":\"associated_plan\", \"object\":\"feature:issues\" }, // the team plan is the associated plan of the issues feature { \"user\":\"plan:team\", \"relation\":\"associated_plan\", \"object\":\"feature:issues\" }, // the team plan is the associated plan of the draft pull requests feature { \"user\":\"plan:team\", \"relation\":\"associated_plan\", \"object\":\"feature:draft_prs\" }, // the enterprise plan is the associated plan of the issues feature { \"user\":\"plan:enterprise\", \"relation\":\"associated_plan\", \"object\":\"feature:issues\" }, // the enterprise plan is the associated plan of the draft pull requests feature { \"user\":\"plan:enterprise\", \"relation\":\"associated_plan\", \"object\":\"feature:draft_prs\" }, // the enterprise plan is the associated plan of the SAML Single Sign-on feature { \"user\":\"plan:enterprise\", \"relation\":\"associated_plan\", \"object\":\"feature:sso\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The relations between the plans and the organizations are as follows: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // the Alpha Beta Gamma organization is a subscriber of the free plan { user: 'organization:alpha', relation: 'subscriber', object: 'plan:free'}, // the Bayer Water Supplies organization is a subscriber of the team plan { user: 'organization:bayer', relation: 'subscriber', object: 'plan:team'}, // the Cups and Dishes organization is a subscriber of the enterprise plan { user: 'organization:cups', relation: 'subscriber', object: 'plan:enterprise'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // the Alpha Beta Gamma organization is a subscriber of the free plan User: fgaSdk.PtrString(\"organization:alpha\"), Relation: fgaSdk.PtrString(\"subscriber\"), Object: fgaSdk.PtrString(\"plan:free\"), }, { // the Bayer Water Supplies organization is a subscriber of the team plan User: fgaSdk.PtrString(\"organization:bayer\"), Relation: fgaSdk.PtrString(\"subscriber\"), Object: fgaSdk.PtrString(\"plan:team\"), }, { // the Cups and Dishes organization is a subscriber of the enterprise plan User: fgaSdk.PtrString(\"organization:cups\"), Relation: fgaSdk.PtrString(\"subscriber\"), Object: fgaSdk.PtrString(\"plan:enterprise\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // the Alpha Beta Gamma organization is a subscriber of the free plan new() { User = \"organization:alpha\", Relation = \"subscriber\", Object = \"plan:free\" }, // the Bayer Water Supplies organization is a subscriber of the team plan new() { User = \"organization:bayer\", Relation = \"subscriber\", Object = \"plan:team\" }, // the Cups and Dishes organization is a subscriber of the enterprise plan new() { User = \"organization:cups\", Relation = \"subscriber\", Object = \"plan:enterprise\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # the Alpha Beta Gamma organization is a subscriber of the free plan user=\"organization:alpha\", relation=\"subscriber\", object=\"plan:free\", ), TupleKey( # the Bayer Water Supplies organization is a subscriber of the team plan user=\"organization:bayer\", relation=\"subscriber\", object=\"plan:team\", ), TupleKey( # the Cups and Dishes organization is a subscriber of the enterprise plan user=\"organization:cups\", relation=\"subscriber\", object=\"plan:enterprise\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"organization:alpha\",\"relation\":\"subscriber\",\"object\":\"plan:free\"},{\"user\":\"organization:bayer\",\"relation\":\"subscriber\",\"object\":\"plan:team\"},{\"user\":\"organization:cups\",\"relation\":\"subscriber\",\"object\":\"plan:enterprise\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // the Alpha Beta Gamma organization is a subscriber of the free plan { \"user\":\"organization:alpha\", \"relation\":\"subscriber\", \"object\":\"plan:free\" }, // the Bayer Water Supplies organization is a subscriber of the team plan { \"user\":\"organization:bayer\", \"relation\":\"subscriber\", \"object\":\"plan:team\" }, // the Cups and Dishes organization is a subscriber of the enterprise plan { \"user\":\"organization:cups\", \"relation\":\"subscriber\", \"object\":\"plan:enterprise\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The relations between the organizations and the users are as follows: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // anne is a member of the Alpha Beta Gamma organization { user: 'user:anne', relation: 'member', object: 'organization:alpha'}, // beth is a member of the Bayer Water Supplies { user: 'user:beth', relation: 'member', object: 'organization:bayer'}, // charles is a member of the Cups and Dishes organization { user: 'user:charles', relation: 'member', object: 'organization:cups'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // anne is a member of the Alpha Beta Gamma organization User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"organization:alpha\"), }, { // beth is a member of the Bayer Water Supplies User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"organization:bayer\"), }, { // charles is a member of the Cups and Dishes organization User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"organization:cups\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // anne is a member of the Alpha Beta Gamma organization new() { User = \"user:anne\", Relation = \"member\", Object = \"organization:alpha\" }, // beth is a member of the Bayer Water Supplies new() { User = \"user:beth\", Relation = \"member\", Object = \"organization:bayer\" }, // charles is a member of the Cups and Dishes organization new() { User = \"user:charles\", Relation = \"member\", Object = \"organization:cups\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # anne is a member of the Alpha Beta Gamma organization user=\"user:anne\", relation=\"member\", object=\"organization:alpha\", ), TupleKey( # beth is a member of the Bayer Water Supplies user=\"user:beth\", relation=\"member\", object=\"organization:bayer\", ), TupleKey( # charles is a member of the Cups and Dishes organization user=\"user:charles\", relation=\"member\", object=\"organization:cups\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:alpha\"},{\"user\":\"user:beth\",\"relation\":\"member\",\"object\":\"organization:bayer\"},{\"user\":\"user:charles\",\"relation\":\"member\",\"object\":\"organization:cups\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // anne is a member of the Alpha Beta Gamma organization { \"user\":\"user:anne\", \"relation\":\"member\", \"object\":\"organization:alpha\" }, // beth is a member of the Bayer Water Supplies { \"user\":\"user:beth\", \"relation\":\"member\", \"object\":\"organization:bayer\" }, // charles is a member of the Cups and Dishes organization { \"user\":\"user:charles\", \"relation\":\"member\", \"object\":\"organization:cups\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") So far you have given OpenFGA a representation of the current state of your system's relationships. You will keep iterating and updating the authorization model until the results of the queries match what you expect. caution In production, it is highly recommended to use unique, immutable identifiers. Names are used in this article to make it easier to read and follow. For example, the relationship tuple indicating that anne is a member of organization:alpha could be written as: user: user:2b4840f2-7c9c-42c8-9329-911002051524 relation: member object: project:52e529c6-c571-4d5c-b78a-bc574cf98b54 Verification‚Äã Now that you have some data, you can start using it to ask is ${USER} related to ${OBJECT} as ${RELATION}? First, you will check if anne is a member of organization:alpha. This is one of the relationship tuples you previously added, you will make sure OpenFGA can detect a relation in this case. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'member', object: 'organization:alpha', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"member\", Object: \"organization:alpha\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"member\", Object = \"organization:alpha\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"member\", object=\"organization:alpha\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:alpha\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"member\", // has an `member` relation object = \"organization:alpha\", // with the object `organization:alpha` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Querying for relationship tuples that you fed into OpenFGA earlier should work, try a few before proceeding to make sure everything is working well. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'member', object: 'organization:bayer', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"member\", Object: \"organization:bayer\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"member\", Object = \"organization:bayer\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"member\", object=\"organization:bayer\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:bayer\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"member\", // has an `member` relation object = \"organization:bayer\", // with the object `organization:bayer` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'organization:bayer', relation: 'subscriber', object: 'plan:team', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"organization:bayer\", Relation: \"subscriber\", Object: \"plan:team\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"organization:bayer\", Relation = \"subscriber\", Object = \"plan:team\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"organization:bayer\", relation=\"subscriber\", object=\"plan:team\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"organization:bayer\",\"relation\":\"subscriber\",\"object\":\"plan:team\"}}' # Response: {\"allowed\":true} check( user = \"organization:bayer\", // check if the user `organization:bayer` relation = \"subscriber\", // has an `subscriber` relation object = \"plan:team\", // with the object `plan:team` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'plan:free', relation: 'associated_plan', object: 'feature:issues', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"plan:free\", Relation: \"associated_plan\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"plan:free\", Relation = \"associated_plan\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"plan:free\", relation=\"associated_plan\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"plan:free\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":true} check( user = \"plan:free\", // check if the user `plan:free` relation = \"associated_plan\", // has an `associated_plan` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02. Populating The Relationship Tuples","u":"/docs/modeling/advanced/entitlements","h":"#02-populating-the-relationship-tuples","p":751},{"i":769,"t":"You are working towards OpenFGA returning the correct answer when you query whether anne has access to feature:issues. It won't work yet, but you will keep updating your configuration to reach that goal. To start, try to run that query on is anne related to feature:issues as access? Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:issues', }, }); // allowed = undefined Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: undefined } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = undefined Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = undefined Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":undefined} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: undefined The OpenFGA service is returning that the query tuple is invalid. That is because you are asking for relation as access, but that relation is not in the configuration of the feature type! Add it now. Like so: DSL JSON type feature relations define associated_plan: [plan] define access: [user] { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } info access relation was added to the configuration of the feature type. note In this tutorial, you will find the phrases direct relationship and implied relationship. A direct relationship R between user X and object Y means the relationship tuple (user=X, relation=R, object=Y) exists, and the OpenFGA authorization model for that relation allows this direct relationship (by use of direct relationship type restrictions). An implied relationship R exists between user X and object Y if user X is related to an object Z that is in direct or implied relationship with object Y, and the OpenFGA authorization model allows it. The resulting updated configuration would be: DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] define access: [user] type plan relations define subscriber: [organization] type organization relations define member: { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Adding Modeling Pattern Of Parent-Child Objects‚Äã Now we can ask the following query: is anne related to feature:issues as access? again. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:issues', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false So far so good. OpenFGA understood your query, but said that no relation exists. That is because according to the configuration provided so far, there is no access relation between anne and feature:issues. We can also try to query is organization:alpha related to feature:issues as access? and we see that there is no relationship. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'organization:alpha', relation: 'access', object: 'feature:issues', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"organization:alpha\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"organization:alpha\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"organization:alpha\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"organization:alpha\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":false} check( user = \"organization:alpha\", // check if the user `organization:alpha` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false If you have already completed some of the other tutorials you might have encountered the modeling pattern of parent-child objects which is modeled as such: DSL JSON define schema_version: { \"viewer\": { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"all_objects_viewer\" } } } } info With this, when asked to check a user's viewer relationship with the object, OpenFGA will: Read all relationship tuples of users related to this particular object as relation parent For each relationship tuple, return all usersets that have all_objects_viewer relation to the objects in those relationship tuples If the user is in any of those usersets, return yes, as the user is a viewer on this object. In other words, users related as all_objects_viewer to any of this object's parents are related as viewer to this object. If you want to give all subscribers on a plan access to a feature, you can do it like so: DSL JSON type feature relations define associated_plan: [plan] define access: [user] or subscriber from associated_plan { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber\" } } } ] } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } info users related to feature as access are the union of (any of): the set of users with a direct access relation the set of users related to the associated_plan as subscriber (the feature's associated plans' subscribers) So everyone who has direct access, as well as the subscribers of the associated plan That would mean that in order for an object to have an access relation to a feature y, there needs to be either a: a direct relationship via a relationship tuple: e.g. { \"user\": \"user:x\", \"relation\": \"access\", \"object\": \"feature:y\" } subscriber relationship with another object related to x associated_plan: e.g. { \"user\": \"user:x\", \"relation\": \"subscriber\", \"object\": \"plan:z\" } { \"user\": \"plan:z\", \"relation\": \"associated_plan\", \"object\": \"feature:y\" } That brings you close. That will allow you to grant organizations access to the feature (as organizations have a subscriber relation with the plan). Adding Subscriber Relationship With Another Object Related To x associated_plan‚Äã One way forward would be to add a direct access relation between a user and a feature e.g. { \"user\": \"anne\", \"relation\": \"access\", \"object\": \"feature:y\" } whenever the organization anne is subscribed to a plan, or the organization anne is in subscribes to a new plan. But there are several downsides to this: Your application layer now needs to worry about computing this relationship. Instead of letting OpenFGA figure this all out, the app layer needs to do the checks whenever a user is being added or removed If an organization changes its subscription, your application layer has to loop through all the users and update their access relationships to features accordingly Later in this tutorial, you will remove the possibility of having a direct access relation completely, but for now you will make sure the changes to the store you have made so far are working. Replace all the existing code you had previously with the updated authorization model from the below snippet. DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] define access: [user] or subscriber from associated_plan type plan relations define subscriber: [organization] type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber\" } } } ] } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Now we can ask following query: is organization:alpha related to feature:issues as access? again. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'organization:alpha', relation: 'access', object: 'feature:issues', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"organization:alpha\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"organization:alpha\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"organization:alpha\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"organization:alpha\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":true} check( user = \"organization:alpha\", // check if the user `organization:alpha` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true You will notice that OpenFGA now did find a relation, as organization:alpha is a subscriber to plan:free which has an associated_plan relation to feature:issues. From that and the authorization model you updated above, OpenFGA deduced that organization:alpha has an implied access relation to feature:issues. That is good, but you want to be able to ask is anne related to feature:issues as access?, not is organization:alpha related to feature:issues as access?. As in, you want the subscriber members to have access to the feature, not the subscriber itself. In order to do that, you will add a relation on the plan, that indicates that all members of an organization subscribed to it, have a subscriber_member relation to the plan. And you can modify the change you did above to give implied access to the subscriber_member instead of the subscriber. Like so: DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] define access: [user] or subscriber_member from associated_plan type plan relations define subscriber: [organization] define subscriber_member: member from subscriber type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber_member\" } } } ] } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber\": { \"this\": {} }, \"subscriber_member\": { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"subscriber\" }, \"computedUserset\": { \"relation\": \"member\" } } } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Notice that subscriber has been updated to subscriber_member in the access relation of the feature type. Under the plan type, in order for someone to have a subscriber_member relation to the plan, they have to be related as a member to the object related as a subscriber to the plan (as in they have to be a member of on of the plan's subscribers). Now ask the following query: is anne related to feature:issues as access? Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:issues', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Disallow Direction Relationship‚Äã So far, with just a OpenFGA authorization model, and the initial relationship tuples indication the relations you know, you configured OpenFGA to give you the correct response. Earlier on, the idea of not allowing a direct access relation between a user and a feature was discussed, e.g. adding a relationship tuple like { \"user\": \"user:anne\", \"relation\": \"access\", \"object\": \"feature:y\" }. You will remove it now. To disallow a direct relationship, you need to remove the direct relationship type restriction. The following snippet: DSL JSON type feature relations define associated_plan: [plan] define access: [user] or subscriber_member from associated_plan { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber_member\" } } } ] } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] }, \"access\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } becomes DSL JSON type feature relations define associated_plan: [plan] define access: subscriber_member from associated_plan { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber_member\" } } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] } } } } With this change, even if your app layer added the following relationship tuple: { \"user\": \"user:anne\", \"relation\": \"access\", \"object\": feature:issues } a subsequent check for is anne related to feature:issues as access? would return no relation. The only way for a relation to exist is if the following three relationship tuples do: { \"user\": \"user:anne\", \"relation\": \"member\", \"object\": \"organization:z\" } { \"user\": \"organization:z\", \"relation\": \"subscriber\", \"object\": \"plan:y\" } { \"user\": \"plan:y\", \"relation\": \"associated_plan\", \"object\": \"feature:issues\" } Verification‚Äã Ensure that your authorization model matches the one below DSL JSON model schema 1.1 type user type feature relations define associated_plan: [plan] define access: subscriber_member from associated_plan type plan relations define subscriber: [organization] define subscriber_member: member from subscriber type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"feature\", \"relations\": { \"associated_plan\": { \"this\": {} }, \"access\": { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"associated_plan\" }, \"computedUserset\": { \"relation\": \"subscriber_member\" } } } }, \"metadata\": { \"relations\": { \"associated_plan\": { \"directly_related_user_types\": [ { \"type\": \"plan\" } ] } } } }, { \"type\": \"plan\", \"relations\": { \"subscriber\": { \"this\": {} }, \"subscriber_member\": { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"subscriber\" }, \"computedUserset\": { \"relation\": \"member\" } } } }, \"metadata\": { \"relations\": { \"subscriber\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } You will now verify that the configuration is correct by running checks for all the scenarios mentioned at the beginning of the tutorial: Anne has access to Issues (expecting yes) Anne has access to Draft Pull Requests (expecting no) Anne has access to Single Sign-on (expecting no) Beth has access to Issues (expecting yes) Beth has access to Draft Pull Requests (expecting yes) Beth has access to Single Sign-on (expecting no) Charles has access to Issues (expecting yes) Charles has access to Draft Pull Requests (expecting yes) Charles has access to Single Sign-on (expecting yes) Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'access', object: 'feature:issues', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"access\", Object: \"feature:issues\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"access\", Object = \"feature:issues\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"access\", object=\"feature:issues\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:issues\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"access\", // has an `access` relation object = \"feature:issues\", // with the object `feature:issues` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Try to verify for the other user, object and relation combinations as listed below. User Object Relation Query Relation? anne feature:issues access is anne related to feature:issues as access? Yes anne feature:draft_prs access is anne related to feature:draft_prs as access? No anne feature:sso access is anne related to feature:sso as access? No beth feature:issues access is beth related to feature:issues as access? Yes beth feature:draft_prs access is beth related to feature:draft_prs as access? Yes beth feature:sso access is beth related to feature:sso as access? No charles feature:issues access is charles related to feature:issues as access? Yes charles feature:draft_prs access is charles related to feature:draft_prs as access? Yes charles feature:sso access is charles related to feature:sso as access? Yes","s":"03. Updating The Authorization Model","u":"/docs/modeling/advanced/entitlements","h":"#03-updating-the-authorization-model","p":751},{"i":771,"t":"In this tutorial, you learned: to model entitlements for a system in OpenFGA how to start with a set of requirements and scenarios and iterate on the OpenFGA authorization model until the checks match the expected scenarios how to model parent-child relationships to indicate that a user having a relationship with a certain object implies having a relationship with another object in OpenFGA how to use the union operator condition to indicate multiple possible paths for a relationship between two objects to be computed using direct relationship type restrictions in a OpenFGA authorization model, and how to block direct relationships by removing it Upcoming tutorials will dive deeper into OpenFGA, introducing concepts that will improve on the model you built today, and tackling different permission systems, with other relations and requirements that need to be met.","s":"Summary","u":"/docs/modeling/advanced/entitlements","h":"#summary","p":751},{"i":773,"t":"This tutorial explains how to model GitHub's Organization permission model using OpenFGA. This article from the GitHub docs has links to all other articles we are going to be exploring in this document. What you will learn Indicate relationships between a group of users and an object. See Modeling User Groups for more details. Used here to indicate that all members of an organization are repository admins on the organization. Modeling concentric relationship to have a certain relation on an object imply another relation on the same object. See Modeling Concepts: Concentric Relationships for more. Used here to indicate that maintainers of a repository are also writers of that repository. Using the union operator condition to indicate that a user might have a certain relation with an object if they match any of the criteria indicated. Used here to indicate that a user can be a reader on a repository, or can have the reader relationship implied through triager. Model parent-child objects to indicate that a user having a relationship with a certain object implies having a relationship with another object in OpenFGA. Used here to indicate that a repository admin on a GitHub organization, is an admin on all repositories that organization owns.","s":"Modeling GitHub permissions with OpenFGA","u":"/docs/modeling/advanced/github","h":"","p":772},{"i":775,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA concepts and know how to develop the things that we will list below. OpenFGA Concepts‚Äã It would be helpful to have an understanding of some concepts of OpenFGA before you start. Modeling Concentric Relationships‚Äã You need to know how to update the authorization model to allow having nested relations such as all writers are readers. Learn more ‚Üí Modeling Object-to-Object Relationships‚Äã You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Used here to indicate that users who have repo admin access on an organization, have admin access to all repositories owned by that organization. Concepts & Configuration Language‚Äã Some OpenFGA Concepts Configuration Language","s":"Before You Start","u":"/docs/modeling/advanced/github","h":"#before-you-start","p":772},{"i":777,"t":"It would be helpful to have an understanding of some concepts of OpenFGA before you start.","s":"OpenFGA Concepts","u":"/docs/modeling/advanced/github","h":"#-concepts","p":772},{"i":779,"t":"GitHub is a system to develop and collaborate on code. In this tutorial, you will build a subset of the GitHub permission model (detailed below) in OpenFGA, using some scenarios to validate the model. Note: For brevity, this tutorial will not model all of GitHub's permissions. Instead, it will focus on modeling for the scenarios outlined below","s":"What You Will Be Modeling","u":"/docs/modeling/advanced/github","h":"#what-you-will-be-modeling","p":772},{"i":781,"t":"GitHub's permission model is represented in their documentation. In this tutorial, you will be focusing on a subset of these permissions. Requirements: Users can be admins, maintainers, writers, triagers or readers of repositories (each level inherits all access of the level lower than it. e.g. admins inherit maintainer access and so forth) Teams can have members Organizations can have members Organizations can own repositories Users can have repository admin access on organizations, and thus have admin access to all repositories owned by that organization","s":"Requirements","u":"/docs/modeling/advanced/github","h":"#requirements","p":772},{"i":783,"t":"There will be the following users: Anne Beth Charles, a member of the contoso/engineering team Diane, a member of the contoso/protocols team Erik, a member of the contoso org And these requirements: members of the contoso/protocols team are members of the contoso/engineering team members of the contoso org are repo_admins on the org repo admins on the org are admins on all the repos the org owns There will be a: contoso/tooling repository, owned by the contoso org and of which Beth is a writer and Anne is a reader and members of the contoso/engineering team are admins","s":"Defined Scenarios","u":"/docs/modeling/advanced/github","h":"#defined-scenarios","p":772},{"i":786,"t":"GitHub has 5 different permission levels for repositories: At the end of this section we want to end up with the following permissions represented: To represent permissions in OpenFGA we use relations. For repository permissions we need to create the following authorization model: DSL JSON model schema 1.1 type user type repo relations define reader: [user] define triager: [user] define writer: [user] define maintainer: [user] define admin: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"reader\": { \"this\": {} }, \"triager\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"maintainer\": { \"this\": {} }, \"admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"triager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"maintainer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The OpenFGA service determines if a user has access to an object by checking if the user has a relation to that object. Let us examine one of those relations in detail: DSL JSON model schema 1.1 type user type repo relations define reader: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"reader\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Objects of type \"repo\" have users related to them as \"reader\" if those users belong to the userset of all users related to the repo as \"reader\" If we want to say anne is a reader of repository repo:contoso/tooling we had create this relationship tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'reader', object: 'repo:contoso/tooling'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"reader\"), Object: fgaSdk.PtrString(\"repo:contoso/tooling\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"reader\", Object = \"repo:contoso/tooling\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"reader\", object=\"repo:contoso/tooling\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"repo:contoso/tooling\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"reader\", \"object\":\"repo:contoso/tooling\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") We can now ask OpenFGA \"is anne a reader of repository repo:contoso/tooling?\" Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'reader', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"reader\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"reader\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"reader\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"reader\", // has an `reader` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We could also say that beth is a writer of the same repository: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:beth', relation: 'writer', object: 'repo:contoso/tooling'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"writer\"), Object: fgaSdk.PtrString(\"repo:contoso/tooling\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:beth\", Relation = \"writer\", Object = \"repo:contoso/tooling\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:beth\", relation=\"writer\", object=\"repo:contoso/tooling\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"repo:contoso/tooling\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:beth\", \"relation\":\"writer\", \"object\":\"repo:contoso/tooling\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") And ask some questions to OpenFGA: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'writer', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"writer\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"writer\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"writer\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"writer\", // has an `writer` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'reader', object: 'repo:contoso/tooling', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"reader\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"reader\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"reader\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"reader\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":false} check( user = \"user:beth\", // check if the user `user:beth` relation = \"reader\", // has an `reader` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false The first reply makes sense but the second one does not. Intuitively, if beth was writer, she was also be a reader. In fact, GitHub explains this in their documentation To make OpenFGA aware of this \"concentric\" permission model we need to update our definitions: DSL JSON model schema 1.1 type user type repo relations define reader: [user] or triager define triager: [user] or writer define writer: [user] or maintainer define maintainer: [user] or admin define admin: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"triager\" } } ] } }, \"triager\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"maintainer\" } } ] } }, \"maintainer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"admin\" } } ] } }, \"admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"triager\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"maintainer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } Let us examine one of those relations in detail: DSL JSON type repo relations define reader: [user] or triager { \"type\": \"repo\", \"relations\": { \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"triager\" } } ] } } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } info The users with a reader relationship to a certain object of type \"repo\" are any of: the \"readers\": the set of users who are directly related to the repo as a \"reader\" the \"triagers\": the set of users who are related to the object as \"triager\" With this simple update our model now supports nested definitions and now: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'writer', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"writer\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"writer\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"writer\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"writer\", // has an `writer` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'reader', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"reader\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"reader\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"reader\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"reader\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"reader\", // has an `reader` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"01. Permissions For Individuals In An Org","u":"/docs/modeling/advanced/github","h":"#01-permissions-for-individuals-in-an-org","p":772},{"i":788,"t":"GitHub also supports creating teams in an organization, adding members to a team and granting teams permissions, rather than individuals. At the end of this section we want to end up with the following permissions represented: To add support for teams and memberships all we need to do is add this object to the OpenFGA authorization model: DSL JSON model schema 1.1 type team relations define member: [user,team#member] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"team\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } } ] } In addition, the repo's relations should be add team member as a directly related user types. DSL JSON model schema 1.1 type user type repo relations define reader: [user,team#member] or triager define triager: [user,team#member] or writer define writer: [user,team#member] or maintainer define maintainer: [user,team#member] or admin define admin: [user,team#member] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"triager\" } } ] } }, \"triager\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"maintainer\" } } ] } }, \"maintainer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"admin\" } } ] } }, \"admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"triager\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"maintainer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] } } } } ] } Let us now create a team, add a member to it and make it an admin of repo:contoso/tooling by adding the following relationship tuples: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // make charles a member of the contoso/engineering team { user: 'user:charles', relation: 'member', object: 'team:contoso/engineering'}, // make members of contoso/engineering team admins of contoso/tooling { user: 'team:contoso/engineering#member', relation: 'admin', object: 'repo:contoso/tooling'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // make charles a member of the contoso/engineering team User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"team:contoso/engineering\"), }, { // make members of contoso/engineering team admins of contoso/tooling User: fgaSdk.PtrString(\"team:contoso/engineering#member\"), Relation: fgaSdk.PtrString(\"admin\"), Object: fgaSdk.PtrString(\"repo:contoso/tooling\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // make charles a member of the contoso/engineering team new() { User = \"user:charles\", Relation = \"member\", Object = \"team:contoso/engineering\" }, // make members of contoso/engineering team admins of contoso/tooling new() { User = \"team:contoso/engineering#member\", Relation = \"admin\", Object = \"repo:contoso/tooling\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # make charles a member of the contoso/engineering team user=\"user:charles\", relation=\"member\", object=\"team:contoso/engineering\", ), TupleKey( # make members of contoso/engineering team admins of contoso/tooling user=\"team:contoso/engineering#member\", relation=\"admin\", object=\"repo:contoso/tooling\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:charles\",\"relation\":\"member\",\"object\":\"team:contoso/engineering\"},{\"user\":\"team:contoso/engineering#member\",\"relation\":\"admin\",\"object\":\"repo:contoso/tooling\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // make charles a member of the contoso/engineering team { \"user\":\"user:charles\", \"relation\":\"member\", \"object\":\"team:contoso/engineering\" }, // make members of contoso/engineering team admins of contoso/tooling { \"user\":\"team:contoso/engineering#member\", \"relation\":\"admin\", \"object\":\"repo:contoso/tooling\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The last relationship tuple introduces a new OpenFGA concept. A userset. When the value of a user is formatted like this type:objectId#relation, OpenFGA will automatically expand the userset into all its individual user identifiers: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:charles', relation: 'admin', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:charles\", Relation: \"admin\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:charles\", Relation = \"admin\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:charles\", relation=\"admin\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:charles\",\"relation\":\"admin\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:charles\", // check if the user `user:charles` relation = \"admin\", // has an `admin` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02. Permissions For Teams In An Org","u":"/docs/modeling/advanced/github","h":"#02-permissions-for-teams-in-an-org","p":772},{"i":790,"t":"GitHub also supports team nesting, known as \"child teams\". Child teams inherit the access permissions of the parent team. Let's say we have a protocols team that is part of the engineering. The simplest way to achieve the aforementioned requirement is just adding this relationship tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'team:contoso/protocols#member', relation: 'member', object: 'team:contoso/engineering'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"team:contoso/protocols#member\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"team:contoso/engineering\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"team:contoso/protocols#member\", Relation = \"member\", Object = \"team:contoso/engineering\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"team:contoso/protocols#member\", relation=\"member\", object=\"team:contoso/engineering\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"team:contoso/protocols#member\",\"relation\":\"member\",\"object\":\"team:contoso/engineering\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"team:contoso/protocols#member\", \"relation\":\"member\", \"object\":\"team:contoso/engineering\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") which says that members of protocols are members of engineering. Note: this is enough and valid for our current requirements, and for other read cases allows determining members of the direct team vs sub teams as the latter come from team:contoso/protocols#member. If the #member relation should not be followed for use cases a different approach could be taken. We can now add a member to the protocols team and check that they are admins of the tooling repository. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // make diane a member of the contoso/protocols team { user: 'user:diane', relation: 'member', object: 'team:contoso/protocols'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // make diane a member of the contoso/protocols team User: fgaSdk.PtrString(\"user:diane\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"team:contoso/protocols\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // make diane a member of the contoso/protocols team new() { User = \"user:diane\", Relation = \"member\", Object = \"team:contoso/protocols\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # make diane a member of the contoso/protocols team user=\"user:diane\", relation=\"member\", object=\"team:contoso/protocols\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:diane\",\"relation\":\"member\",\"object\":\"team:contoso/protocols\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // make diane a member of the contoso/protocols team { \"user\":\"user:diane\", \"relation\":\"member\", \"object\":\"team:contoso/protocols\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:diane', relation: 'admin', object: 'repo:contoso/tooling', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:diane\", Relation: \"admin\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:diane\", Relation = \"admin\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:diane\", relation=\"admin\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:diane\",\"relation\":\"admin\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":true} check( user = \"user:diane\", // check if the user `user:diane` relation = \"admin\", // has an `admin` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true At the end of this section ended with the following permissions represented:","s":"03. Permissions For Child Teams In An Org","u":"/docs/modeling/advanced/github","h":"#03-permissions-for-child-teams-in-an-org","p":772},{"i":792,"t":"In GitHub, \"you can set base permissions that apply to all members of an organization when accessing any of the organization's repositories\". For our purposes this means that if: and contoso has a repository tooling and contoso has configured base permission to be \"write\" then erik has write permissions to tooling. Let us model that! At the end of this section we want to end up with the following permissions represented: We need to introduce the notion of organization as a type, user organization membership and repository ownership as a relation. - It is worth calling that before this addition we were able to represent almost the entire GitHub repo permissions without adding the notion of organization to OpenFGA. Identifiers for users, repositories and teams were all that was necessary. Let us add support for organizations and membership. Hopefully this feels familiar by now: DSL JSON model schema 1.1 type organization relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"organization\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } And support for repositories having owners: DSL JSON model schema 1.1 type repo relations define reader: [user,team#member] or triager define triager: [user,team#member] or writer define writer: [user,team#member] or maintainer define maintainer: [user,team#member] or admin define admin: [user,team#member] define owner: [organization] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"repo\", \"relations\": { \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"triager\" } } ] } }, \"triager\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"maintainer\" } } ] } }, \"maintainer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"admin\" } } ] } }, \"admin\": { \"this\": {} }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"triager\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"maintainer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } } ] } info Note the added \"owner\" relation, indicating that organizations can own repositories. We can now make Erik a member of contoso and make contoso own contoso/tooling: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:erik', relation: 'member', object: 'organization:contoso'}, { user: 'organization:contoso', relation: 'owner', object: 'repo:contoso/tooling'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:erik\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"organization:contoso\"), }, { User: fgaSdk.PtrString(\"organization:contoso\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"repo:contoso/tooling\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:erik\", Relation = \"member\", Object = \"organization:contoso\" }, new() { User = \"organization:contoso\", Relation = \"owner\", Object = \"repo:contoso/tooling\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:erik\", relation=\"member\", object=\"organization:contoso\", ), TupleKey( user=\"organization:contoso\", relation=\"owner\", object=\"repo:contoso/tooling\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:erik\",\"relation\":\"member\",\"object\":\"organization:contoso\"},{\"user\":\"organization:contoso\",\"relation\":\"owner\",\"object\":\"repo:contoso/tooling\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:erik\", \"relation\":\"member\", \"object\":\"organization:contoso\" }, { \"user\":\"organization:contoso\", \"relation\":\"owner\", \"object\":\"repo:contoso/tooling\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") What we still lack is the ability to create \"default permissions\" for the organization and have those be considered when determining if a user has a particular relation to a repository. Let's start with the simplest case admin. We want to say that a user is a admin of a repo if either: [done] they have a repo admin relation (directly or through team membership) [pending] their organization is configured with repo_admin as the base permission We need a way to consider the organization members, not just direct relations to the repo when getting a check for: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:erik', relation: 'admin', object: 'repo:contoso/tooling', }, }); // allowed = undefined Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:erik\", Relation: \"admin\", Object: \"repo:contoso/tooling\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: undefined } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:erik\", Relation = \"admin\", Object = \"repo:contoso/tooling\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = undefined Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:erik\", relation=\"admin\", object=\"repo:contoso/tooling\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = undefined Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:erik\",\"relation\":\"admin\",\"object\":\"repo:contoso/tooling\"}}' # Response: {\"allowed\":undefined} check( user = \"user:erik\", // check if the user `user:erik` relation = \"admin\", // has an `admin` relation object = \"repo:contoso/tooling\", // with the object `repo:contoso/tooling` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: undefined More details on this technique can be found in the section Modeling Parent-Child Objects. We express it like this: DSL JSON define admin: or repo_admin from owner { \"type_definitions\": [ { \"admin\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"owner\" }, \"computedUserset\": { \"relation\": \"repo_admin\" } } } ] } } } ] } info The users with an admin relationship to a certain object of type \"repo\" are any of: the \"admins\": the set of users who are directly related to the repo as an \"admin\" the \"repository admins of the org that owns the repo\": from the objects who are related to the doc as parent, return the sets of users who are related to those objects as \"repo_admin\" What the added section is doing is: read all relationship tuples related to repo:contoso/tooling as parent which returns: [{ \"object\": \"repo:contoso/tooling\", \"relation\": \"parent\", \"user\": \"organization:contoso\" }] for each relationship tuple read, return all usersets that match the following, returning tuples of shape: { \"object\": \"organization:contoso\", \"repo_admin\", \"user\": ??? } What should the users in those relationship tuples with ??? be? Well: If the base permission for org contoso is repo_admin then it should be organization:contoso#member. If the base permission for org contoso is NOT repo_admin, then it should be empty (no relationship tuple). Whenever the value of this dropdown changes: Delete the previous relationship tuple and create a new one: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'organization:contoso#member', relation: 'repo_admin', object: 'organization:contoso'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"organization:contoso#member\"), Relation: fgaSdk.PtrString(\"repo_admin\"), Object: fgaSdk.PtrString(\"organization:contoso\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"organization:contoso#member\", Relation = \"repo_admin\", Object = \"organization:contoso\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"organization:contoso#member\", relation=\"repo_admin\", object=\"organization:contoso\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"organization:contoso#member\",\"relation\":\"repo_admin\",\"object\":\"organization:contoso\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"organization:contoso#member\", \"relation\":\"repo_admin\", \"object\":\"organization:contoso\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The updated authorization model looks like this: DSL JSON model schema 1.1 type user type repo relations define admin: [user,team#member,organization#member] or admin from owner define maintainer: [user,team#member,organization#member] or admin define writer: [user,team#member,organization#member] or maintainer or writer from owner define triager: [user,team#member,organization#member] or writer define reader: [user,team#member,organization#member] or triager or reader from owner define owner: [organization] type organization relations define owner: [organization] define repo_admin: [user,team#member,organization#member] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"repo\", \"relations\": { \"admin\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"admin\" }, \"tupleset\": { \"relation\": \"owner\" } } } ] } }, \"maintainer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"admin\" } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"maintainer\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"writer\" }, \"tupleset\": { \"relation\": \"owner\" } } } ] } }, \"triager\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"reader\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"triager\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"reader\" }, \"tupleset\": { \"relation\": \"owner\" } } } ] } }, \"owner\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"reader\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] }, \"triager\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] }, \"maintainer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] }, \"admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] } } } }, { \"type\": \"organization\", \"relations\": { \"owner\": { \"this\": {} }, \"repo_admin\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"organization\" } ] }, \"repo_admin\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"team\", \"relation\": \"member\" }, { \"type\": \"organization\", \"relation\": \"member\" } ] } } } } ] }","s":"04. Base Permissions For Org Members","u":"/docs/modeling/advanced/github","h":"#04-base-permissions-for-org-members","p":772},{"i":794,"t":"GitHub has a number of other permissions. You have organization billing managers, users that can manage specific apps, etc. We might explore those in the future, but hopefully this blog post has shown you how you could represent those cases using OpenFGA.","s":"Summary","u":"/docs/modeling/advanced/github","h":"#summary","p":772},{"i":796,"t":"This tutorial explains how to represent Google Drive permissions model with OpenFGA. What you will learn Indicate relationships between a group of users and an object. See Modeling User Groups for more. Used here to indicate that all users within a domain can access a document (sharing a document within an organization). Model concentric relationship to have a certain relation on an object imply another relation on the same object. See Modeling Concepts: Concentric Relationships for more. Used here is to indicate that writers are also commenters and viewers. Using the union operator condition to indicate that a user might have a certain relation with an object if they match any of the criteria indicated. Used here to indicate that a user can be a viewer on a document, or can have the viewer relationship implied through commenter. Using the type bound public access in a relationship tuple's user field to indicate that everyone has a certain relation with an object. See Modeling Public Access for more. Used here to share documents publicly. Model parent-child objects to indicate that a user having a relationship with a certain object implies having a relationship with another object in OpenFGA. Used here is to indicate that a writer on a folder is a writer on all documents inside that folder.","s":"Modeling Google Drive permissions with OpenFGA","u":"/docs/modeling/advanced/gdrive","h":"","p":795},{"i":798,"t":"In order to understand this guide correctly you must be familiar with some OpenFGA concepts and know how to develop the things that we will list below. OpenFGA Concepts‚Äã It would be helpful to have an understanding of some concepts of OpenFGA before you start. Modeling Concentric Relationships‚Äã You need to know how to update the authorization model to allow having nested relations such as all writers are readers. Learn more ‚Üí Modeling Object-to-Object Relationships‚Äã You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. Learn more ‚Üí Used here to indicate that users who have access to view a folder have access to view all documents inside it. Modeling Public Access‚Äã You need to know how to add a relationship tuple to indicate that a resource is publicly available. Learn more ‚Üí Concepts & Configuration Language‚Äã The OpenFGA Concepts Configuration Language","s":"Before You Start","u":"/docs/modeling/advanced/gdrive","h":"#before-you-start","p":795},{"i":800,"t":"It would be helpful to have an understanding of some concepts of OpenFGA before you start.","s":"OpenFGA Concepts","u":"/docs/modeling/advanced/gdrive","h":"#-concepts","p":795},{"i":802,"t":"Google Drive is a system to store, share, and collaborate on files and folders. Source In this tutorial, you will build a subset of the Google Drive permission model (detailed below) in OpenFGA, using some scenarios to validate the model. Note: For brevity, this tutorial will not model all of Google Drive's permissions. Instead, it will focus on modeling for the scenarios outlined below","s":"What You Will Be Modeling","u":"/docs/modeling/advanced/gdrive","h":"#what-you-will-be-modeling","p":795},{"i":804,"t":"Google Drive's permission model is represented in their documentation. In this tutorial, you will be focusing on a subset of these permissions. Requirements: Users can be owners, editors, commenters and viewers of documents Documents can be shared with all users in a domain Folders can contain documents and users with a certain permission on a folder have that same permission to a document in that folder Documents and folders can be shared publicly","s":"Requirements","u":"/docs/modeling/advanced/gdrive","h":"#requirements","p":795},{"i":806,"t":"There will be the following users: Anne, who is in the xyz domain Beth, who is in the xyz domain Charles, who is in the xyz domain Diane, who is NOT in the xyz domain Erik, who is NOT in the xyz domain There will be: a 2021-budget document, owned by Anne, shared for commenting with Beth and viewable by all members of the xyz domain. a 2021-planning folder, viewable by Diane and contains the 2021-budget document a 2021-public-roadmap document, owned by Anne, available for members xyz domain to comment on and is publicly viewable","s":"Defined Scenarios","u":"/docs/modeling/advanced/gdrive","h":"#defined-scenarios","p":795},{"i":809,"t":"To keep thing simple and focus on OpenFGA features rather than Google Drive complexity we will model only four roles (Viewer, Commenter, Writer, Owner). At the end of this section we want to have the following permissions represented: To represent permissions in OpenFGA we use relations. For document permissions we need to create the following authorization model: DSL JSON model schema 1.1 type user type document relations define owner: [user] define writer: [user] define commenter: [user] define viewer: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"this\": {} }, \"writer\": { \"this\": {} }, \"commenter\": { \"this\": {} }, \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } The OpenFGA service determines if a user has access to an object by checking if the user has a relation to that object. Let us examine one of those relations in detail: DSL JSON type document relations define viewer: [user] { \"type\": \"document\", \"relations\": { \"viewer\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } info The snippet above indicates that objects of type document have users related to them as \"viewer\" if those users belong to the userset of all users related to the document as \"viewer\". This means that a user can be directly related as a viewer to an object of type \"document\" If we want to say beth is a commenter of document:2021-budget we create this relationship tuple: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:beth', relation: 'commenter', object: 'document:2021-budget'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"commenter\"), Object: fgaSdk.PtrString(\"document:2021-budget\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:beth\", Relation = \"commenter\", Object = \"document:2021-budget\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:beth\", relation=\"commenter\", object=\"document:2021-budget\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:beth\",\"relation\":\"commenter\",\"object\":\"document:2021-budget\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:beth\", \"relation\":\"commenter\", \"object\":\"document:2021-budget\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") We can now ask OpenFGA \"is beth a commenter of repository document:2021-budget?\" Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'commenter', object: 'document:2021-budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"commenter\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"commenter\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"commenter\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"commenter\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"commenter\", // has an `commenter` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true We could also say that anne is an owner of the same document: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ { user: 'user:anne', relation: 'owner', object: 'document:2021-budget'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"document:2021-budget\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { new() { User = \"user:anne\", Relation = \"owner\", Object = \"document:2021-budget\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( user=\"user:anne\", relation=\"owner\", object=\"document:2021-budget\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021-budget\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ { \"user\":\"user:anne\", \"relation\":\"owner\", \"object\":\"document:2021-budget\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") And ask some questions to OpenFGA: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'owner', object: 'document:2021-budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"owner\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"owner\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"owner\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"owner\", // has an `owner` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'writer', object: 'document:2021-budget', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"writer\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"writer\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"writer\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"writer\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":false} check( user = \"user:anne\", // check if the user `user:anne` relation = \"writer\", // has an `writer` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false The first reply makes sense but the second one does not. Intuitively, if anne was an owner, she was also be a writer. In fact, Google Drive explains this in their documentation To make OpenFGA aware of this \"concentric\" permission model we need to update our definitions: DSL JSON model schema 1.1 type user type document relations define owner: [user] define writer: [user] or owner define commenter: [user] or writer define viewer: [user] or commenter { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"this\": {} }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } } ] } }, \"commenter\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Let's examine one of those relations in detail: objects of type document have users related to them as \"viewer\": if they belong to any of (the union of) the following: the userset of all users related to the document as \"viewer\" the userset of all users related to the document as \"commenter\" With this update our model now supports nested definitions and now: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'owner', object: 'document:2021-budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"owner\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"owner\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"owner\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"owner\", // has an `owner` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'writer', object: 'document:2021-budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"writer\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"writer\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"writer\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"writer\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"writer\", // has an `writer` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"01. Individual Permissions","u":"/docs/modeling/advanced/gdrive","h":"#01-individual-permissions","p":795},{"i":811,"t":"Google Drive allows you to share a file with everyone in your organization as a viewer, commenter or writer/editor. At the end of this section we want to end up with the following permissions represented: To add support for domains and members all we need to do is add this object to the OpenFGA authorization model. In addition, update the model to allow domain member to be assigned to document: DSL JSON model schema 1.1 type user type document relations define owner: [user,domain#member] define writer: [user,domain#member] or owner define commenter: [user,domain#member] or writer define viewer: [user,domain#member] or commenter type domain relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"this\": {} }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } } ] } }, \"commenter\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } } ] } } }, \"metadata\": { \"relations\": { \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } }, { \"type\": \"domain\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } info Objects of type \"domain\" have users related to them as \"member\" if they belong to the userset of all users related to the domain as \"member\". In other words, users can be direct members of a domain. Let's now create a domain, add members to it and make all members viewers of document:2021-budget. Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // make anne, beth, charles a member of the xyz domain { user: 'user:anne', relation: 'member', object: 'domain:xyz'}, { user: 'user:beth', relation: 'member', object: 'domain:xyz'}, { user: 'user:charles', relation: 'member', object: 'domain:xyz'}, // make members of xyz domain viewers of document:2021-budget { user: 'domain:xyz#member', relation: 'viewer', object: 'document:2021-budget'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // make anne, beth, charles a member of the xyz domain User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"domain:xyz\"), }, { User: fgaSdk.PtrString(\"user:beth\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"domain:xyz\"), }, { User: fgaSdk.PtrString(\"user:charles\"), Relation: fgaSdk.PtrString(\"member\"), Object: fgaSdk.PtrString(\"domain:xyz\"), }, { // make members of xyz domain viewers of document:2021-budget User: fgaSdk.PtrString(\"domain:xyz#member\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"document:2021-budget\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // make anne, beth, charles a member of the xyz domain new() { User = \"user:anne\", Relation = \"member\", Object = \"domain:xyz\" }, new() { User = \"user:beth\", Relation = \"member\", Object = \"domain:xyz\" }, new() { User = \"user:charles\", Relation = \"member\", Object = \"domain:xyz\" }, // make members of xyz domain viewers of document:2021-budget new() { User = \"domain:xyz#member\", Relation = \"viewer\", Object = \"document:2021-budget\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # make anne, beth, charles a member of the xyz domain user=\"user:anne\", relation=\"member\", object=\"domain:xyz\", ), TupleKey( user=\"user:beth\", relation=\"member\", object=\"domain:xyz\", ), TupleKey( user=\"user:charles\", relation=\"member\", object=\"domain:xyz\", ), TupleKey( # make members of xyz domain viewers of document:2021-budget user=\"domain:xyz#member\", relation=\"viewer\", object=\"document:2021-budget\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"user:beth\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"user:charles\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"domain:xyz#member\",\"relation\":\"viewer\",\"object\":\"document:2021-budget\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // make anne, beth, charles a member of the xyz domain { \"user\":\"user:anne\", \"relation\":\"member\", \"object\":\"domain:xyz\" }, { \"user\":\"user:beth\", \"relation\":\"member\", \"object\":\"domain:xyz\" }, { \"user\":\"user:charles\", \"relation\":\"member\", \"object\":\"domain:xyz\" }, // make members of xyz domain viewers of document:2021-budget { \"user\":\"domain:xyz#member\", \"relation\":\"viewer\", \"object\":\"document:2021-budget\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") The last relationship tuple introduces a new OpenFGA concept. A userset. When the value of a user is formatted like this objectType:objectId#relation, OpenFGA will automatically expand the userset into all its individual user identifiers: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:charles', relation: 'viewer', object: 'document:2021-budget', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:charles\", Relation: \"viewer\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:charles\", Relation = \"viewer\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:charles\", relation=\"viewer\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:charles\",\"relation\":\"viewer\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":true} check( user = \"user:charles\", // check if the user `user:charles` relation = \"viewer\", // has an `viewer` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true","s":"02. Organization Permissions","u":"/docs/modeling/advanced/gdrive","h":"#02-organization-permissions","p":795},{"i":813,"t":"Permission propagation happens between folders and files: if you are a viewer in a folder, you can view its documents. This applies even when you are not explicitly a viewer in a document. At the end of this section we want to end up with the following permissions represented. Note that a folder is an object in the document type, as we do not need a separate type: We need to add the notion that a document can be the parent of another document. We know how to do that: DSL JSON model schema 1.1 type user type document relations define parent: [document] define owner: [user,domain#member] define writer: [user,domain#member] or owner define commenter: [user,domain#member] or writer define viewer: [user,domain#member] or commenter { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"parent\": { \"this\": {} }, \"owner\": { \"this\": {} }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } } ] } }, \"commenter\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } } ] } } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"document\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } } ] } info Notice the newly added \"parent\" relation in the configuration above. We can indicate this relation by adding the following relationship tuples Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Diane is a viewer of document:2021-planning { user: 'user:diane', relation: 'viewer', object: 'document:2021-planning'}, // document:2021-planning is a parent of document:2021-budget { user: 'document:2021-planning', relation: 'parent', object: 'document:2021-budget'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Diane is a viewer of document:2021-planning User: fgaSdk.PtrString(\"user:diane\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"document:2021-planning\"), }, { // document:2021-planning is a parent of document:2021-budget User: fgaSdk.PtrString(\"document:2021-planning\"), Relation: fgaSdk.PtrString(\"parent\"), Object: fgaSdk.PtrString(\"document:2021-budget\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Diane is a viewer of document:2021-planning new() { User = \"user:diane\", Relation = \"viewer\", Object = \"document:2021-planning\" }, // document:2021-planning is a parent of document:2021-budget new() { User = \"document:2021-planning\", Relation = \"parent\", Object = \"document:2021-budget\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Diane is a viewer of document:2021-planning user=\"user:diane\", relation=\"viewer\", object=\"document:2021-planning\", ), TupleKey( # document:2021-planning is a parent of document:2021-budget user=\"document:2021-planning\", relation=\"parent\", object=\"document:2021-budget\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:diane\",\"relation\":\"viewer\",\"object\":\"document:2021-planning\"},{\"user\":\"document:2021-planning\",\"relation\":\"parent\",\"object\":\"document:2021-budget\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Diane is a viewer of document:2021-planning { \"user\":\"user:diane\", \"relation\":\"viewer\", \"object\":\"document:2021-planning\" }, // document:2021-planning is a parent of document:2021-budget { \"user\":\"document:2021-planning\", \"relation\":\"parent\", \"object\":\"document:2021-budget\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") What we still lack is the ability to propagate permissions from parent to children. We want to say that a user is a viewer of a document if either: [done] they have a viewer relationship (directly or through domain membership) [pending] they have a viewer relationship with the parent document We need a way to consider the parent viewers, not just direct viewers of the document when getting a check for: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:diane', relation: 'viewer', object: 'document:2021-budget', }, }); // allowed = undefined Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:diane\", Relation: \"viewer\", Object: \"document:2021-budget\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: undefined } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:diane\", Relation = \"viewer\", Object = \"document:2021-budget\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = undefined Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:diane\", relation=\"viewer\", object=\"document:2021-budget\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = undefined Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:diane\",\"relation\":\"viewer\",\"object\":\"document:2021-budget\"}}' # Response: {\"allowed\":undefined} check( user = \"user:diane\", // check if the user `user:diane` relation = \"viewer\", // has an `viewer` relation object = \"document:2021-budget\", // with the object `document:2021-budget` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: undefined More details on this technique can be found in the section Modeling Parent-Child Objects. We express it like this: DSL JSON define schema_version: { \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } }, { \"tupleToUserset\": { \"tupleset\": { \"relation\": \"parent\" }, \"computedUserset\": { \"relation\": \"viewer\" } } } ] } } } info The users with a viewer relationship to a certain object of type \"document\" are any of: the \"viewers\": the set of users who are directly related to the document as a \"viewer\" the \"commenters\": the set of users who are related to the object as \"commenter\" the \"viewers of the parents\": from the objects who are related to the doc as parent, return the sets of users who are related to those objects as \"viewer\" What the added section is doing is: read all relationship tuples related to document:2021-budget as parent which returns: [{ \"object\": \"document:2021-budget\", \"relation\": \"parent\", \"user\": \"document:2021-planning\" }] for each relationship tuple read, return all usersets that match the following, returning tuples of shape: { \"object\": \"document:2021-planning\", \"viewer\", \"user\": ??? } including: { \"object\": \"document:2021-planning\", \"viewer\", \"user\": \"user:diane\" } The updated authorization model looks like this: DSL JSON model schema 1.1 type user type document relations define owner: [user,domain#member] or owner from parent define writer: [user,domain#member] or owner or writer from parent define commenter: [user,domain#member] or writer or commenter from parent define viewer: [user,domain#member] or commenter or viewer from parent define parent: [document] type domain relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"owner\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"writer\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"commenter\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"commenter\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"viewer\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"parent\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"document\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } }, { \"type\": \"domain\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] }","s":"03. Folder Permission Propagation","u":"/docs/modeling/advanced/gdrive","h":"#03-folder-permission-propagation","p":795},{"i":815,"t":"Google Drive has a feature which allows sharing a file or folder publicly, and specifying the permissions a public user might have (writer/commenter/viewer). Assume that Anne has created a new document: 2021-public-roadmap, has shared it with commenter permissions to the xyz.com, and has shared it as view only with the public at large. Here's where another OpenFGA feature, type bound public access (as in everyone), would come in handy. First, we will need to update our model to allow for public access with type user for viewer relation. DSL JSON model schema 1.1 type user type document relations define owner: [user,domain#member] or owner from parent define writer: [user,domain#member] or owner or writer from parent define commenter: [user,domain#member] or writer or commenter from parent define viewer: [user,user:*,domain#member] or commenter or viewer from parent define parent: [document] type domain relations define member: [user] { \"schema_version\": \"1.1\", \"type_definitions\": [ { \"type\": \"user\" }, { \"type\": \"document\", \"relations\": { \"owner\": { \"union\": { \"child\": [ { \"this\": {} }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"owner\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"writer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"owner\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"writer\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"commenter\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"writer\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"commenter\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"viewer\": { \"union\": { \"child\": [ { \"this\": {} }, { \"computedUserset\": { \"relation\": \"commenter\" } }, { \"tupleToUserset\": { \"computedUserset\": { \"relation\": \"viewer\" }, \"tupleset\": { \"relation\": \"parent\" } } } ] } }, \"parent\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"parent\": { \"directly_related_user_types\": [ { \"type\": \"document\" } ] }, \"owner\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"writer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"commenter\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"domain\", \"relation\": \"member\" } ] }, \"viewer\": { \"directly_related_user_types\": [ { \"type\": \"user\" }, { \"type\": \"user\", \"wildcard\": {} }, { \"type\": \"domain\", \"relation\": \"member\" } ] } } } }, { \"type\": \"domain\", \"relations\": { \"member\": { \"this\": {} } }, \"metadata\": { \"relations\": { \"member\": { \"directly_related_user_types\": [ { \"type\": \"user\" } ] } } } } ] } To mark Anne as the owner, the domain members as commenters and the public as viewers, we need to add the following relationship tuples: Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); await fgaClient.write({ writes: { tuple_keys: [ // Anne is the owner of document:2021-public-roadmap { user: 'user:anne', relation: 'owner', object: 'document:2021-public-roadmap'}, // Members of the domain:xyz can comment on document:2021-public-roadmap { user: 'domain:xyz#member', relation: 'commenter', object: 'document:2021-public-roadmap'}, // Everyone with type `user` can view document:2021-public-roadmap { user: 'user:*', relation: 'viewer', object: 'document:2021-public-roadmap'} ] }, authorization_model_id: \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.WriteRequest{ Writes: &fgaSdk.TupleKeys{ TupleKeys: []fgaSdk.TupleKey { { // Anne is the owner of document:2021-public-roadmap User: fgaSdk.PtrString(\"user:anne\"), Relation: fgaSdk.PtrString(\"owner\"), Object: fgaSdk.PtrString(\"document:2021-public-roadmap\"), }, { // Members of the domain:xyz can comment on document:2021-public-roadmap User: fgaSdk.PtrString(\"domain:xyz#member\"), Relation: fgaSdk.PtrString(\"commenter\"), Object: fgaSdk.PtrString(\"document:2021-public-roadmap\"), }, { // Everyone with type `user` can view document:2021-public-roadmap User: fgaSdk.PtrString(\"user:*\"), Relation: fgaSdk.PtrString(\"viewer\"), Object: fgaSdk.PtrString(\"document:2021-public-roadmap\"), }, }, }, AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\")} _, response, err := fgaClient.OpenFgaApi.Write(context.Background()).Body(body).Execute() if err != nil { // .. Handle error } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } await fgaClient.Write(new WriteRequest{ Writes = new TupleKeys(new List<TupleKey>() { // Anne is the owner of document:2021-public-roadmap new() { User = \"user:anne\", Relation = \"owner\", Object = \"document:2021-public-roadmap\" }, // Members of the domain:xyz can comment on document:2021-public-roadmap new() { User = \"domain:xyz#member\", Relation = \"commenter\", Object = \"document:2021-public-roadmap\" }, // Everyone with type `user` can view document:2021-public-roadmap new() { User = \"user:*\", Relation = \"viewer\", Object = \"document:2021-public-roadmap\" } }), AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" }); Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.tuple_keys import TupleKeys # from openfga_sdk.models.write_request import WriteRequest async def write(): body = WriteRequest( writes=TupleKeys( tuple_keys=[ TupleKey( # Anne is the owner of document:2021-public-roadmap user=\"user:anne\", relation=\"owner\", object=\"document:2021-public-roadmap\", ), TupleKey( # Members of the domain:xyz can comment on document:2021-public-roadmap user=\"domain:xyz#member\", relation=\"commenter\", object=\"document:2021-public-roadmap\", ), TupleKey( # Everyone with type `user` can view document:2021-public-roadmap user=\"user:*\", relation=\"viewer\", object=\"document:2021-public-roadmap\", ), ], ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) await fga_client_instance.write(body) Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/write \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"writes\": { \"tuple_keys\" : [{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021-public-roadmap\"},{\"user\":\"domain:xyz#member\",\"relation\":\"commenter\",\"object\":\"document:2021-public-roadmap\"},{\"user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"document:2021-public-roadmap\"}] }, \"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}' write([ // Anne is the owner of document:2021-public-roadmap { \"user\":\"user:anne\", \"relation\":\"owner\", \"object\":\"document:2021-public-roadmap\" }, // Members of the domain:xyz can comment on document:2021-public-roadmap { \"user\":\"domain:xyz#member\", \"relation\":\"commenter\", \"object\":\"document:2021-public-roadmap\" }, // Everyone with type `user` can view document:2021-public-roadmap { \"user\":\"user:*\", \"relation\":\"viewer\", \"object\":\"document:2021-public-roadmap\" } ], authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\") Anne is an owner of the document Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:anne', relation: 'owner', object: 'document:2021-public-roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:anne\", Relation: \"owner\", Object: \"document:2021-public-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:anne\", Relation = \"owner\", Object = \"document:2021-public-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:anne\", relation=\"owner\", object=\"document:2021-public-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021-public-roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:anne\", // check if the user `user:anne` relation = \"owner\", // has an `owner` relation object = \"document:2021-public-roadmap\", // with the object `document:2021-public-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Beth is a member of the xyz.com domain, and so can comment but cannot write Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'writer', object: 'document:2021-public-roadmap', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"writer\", Object: \"document:2021-public-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"writer\", Object = \"document:2021-public-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"writer\", object=\"document:2021-public-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"document:2021-public-roadmap\"}}' # Response: {\"allowed\":false} check( user = \"user:beth\", // check if the user `user:beth` relation = \"writer\", // has an `writer` relation object = \"document:2021-public-roadmap\", // with the object `document:2021-public-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:beth', relation: 'commenter', object: 'document:2021-public-roadmap', }, }); // allowed = true Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:beth\", Relation: \"commenter\", Object: \"document:2021-public-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: true } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:beth\", Relation = \"commenter\", Object = \"document:2021-public-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = true Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:beth\", relation=\"commenter\", object=\"document:2021-public-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = true Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:beth\",\"relation\":\"commenter\",\"object\":\"document:2021-public-roadmap\"}}' # Response: {\"allowed\":true} check( user = \"user:beth\", // check if the user `user:beth` relation = \"commenter\", // has an `commenter` relation object = \"document:2021-public-roadmap\", // with the object `document:2021-public-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: true Erik is NOT a member of the xyz.com domain, and so can only view the document Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:erik', relation: 'writer', object: 'document:2021-public-roadmap', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:erik\", Relation: \"writer\", Object: \"document:2021-public-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:erik\", Relation = \"writer\", Object = \"document:2021-public-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:erik\", relation=\"writer\", object=\"document:2021-public-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:erik\",\"relation\":\"writer\",\"object\":\"document:2021-public-roadmap\"}}' # Response: {\"allowed\":false} check( user = \"user:erik\", // check if the user `user:erik` relation = \"writer\", // has an `writer` relation object = \"document:2021-public-roadmap\", // with the object `document:2021-public-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false Node.js Go .NET Python curl Pseudocode Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK const { OpenFgaApi } = require('@openfga/sdk'); // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options const fgaClient = new OpenFgaApi({ apiScheme: process.env.FGA_API_SCHEME, // Either \"http\" or \"https\", defaults to \"https\" apiHost: process.env.FGA_API_HOST, // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) storeId: process.env.FGA_STORE_ID, // Either \"http\" or \"https\", defaults to \"https\" }); // Run a check const { allowed } = await fgaClient.check({ authorization_model_id: '1uHxCSuTP0VKPYSnkq1pbb1jeZw', tuple_key: { user: 'user:erik', relation: 'viewer', object: 'document:2021-public-roadmap', }, }); // allowed = false Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import ( fgaSdk \"github.com/openfga/go-sdk\" \"os\" ) func main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options configuration, err := fgaSdk.NewConfiguration(fgaSdk.UserConfiguration{ ApiScheme: os.Getenv(\"FGA_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost: os.Getenv(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId: os.Getenv(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }) if err != nil { // .. Handle error } fgaClient := fgaSdk.NewAPIClient(configuration) } body := fgaSdk.CheckRequest{ AuthorizationModelId: fgaSdk.PtrString(\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"), TupleKey: fgaSdk.TupleKey{ User: \"user:erik\", Relation: \"viewer\", Object: \"document:2021-public-roadmap\", }, } data, response, err := fgaClient.OpenFgaApi.Check(context.Background()).Body(body).Execute() // data = { allowed: false } Initialize the SDK // ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. // import the SDK using OpenFga.Sdk.Api; using OpenFga.Sdk.Configuration; using Environment = System.Environment; namespace ExampleApp; class MyProgram { static async Task Main() { // Initialize the SDK with no auth - see \"How to setup SDK client\" for more options var configuration = new Configuration() { ApiScheme = Environment.GetEnvironmentVariable(\"FGA_API_SCHEME\"), // Either \"http\" or \"https\", defaults to \"https\" ApiHost = Environment.GetEnvironmentVariable(\"FGA_API_HOST\"), // required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) StoreId = Environment.GetEnvironmentVariable(\"FGA_STORE_ID\"), // optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods }; var fgaClient = new OpenFgaApi(configuration); } } // Run a check var response = await fgaClient.Check(new CheckRequest { TupleKey = new TupleKey() { User = \"user:erik\", Relation = \"viewer\", Object = \"document:2021-public-roadmap\" }, AuthorizationModelId = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\"}); // response.Allowed = false Initialize the SDK # ApiTokenIssuer, ApiAudience, ClientId and ClientSecret are optional. import os import json import openfga_sdk from openfga_sdk.api import open_fga_api configuration = openfga_sdk.Configuration( api_scheme = os.environ.get('FGA_API_SCHEME'), # Either \"http\" or \"https\", defaults to \"https\" api_host = os.environ.get('FGA_API_HOST'), # required, define without the scheme (e.g. api.openfga.example instead of https://api.openfga.example) store_id = os.environ.get('FGA_STORE_ID') # optional, not needed for `CreateStore` and `ListStores`, required before calling for all other methods ) # Create an instance of the API class fga_client_instance = open_fga_api.OpenFgaApi(openfga_sdk.ApiClient(configuration)) # from openfga_sdk.models.check_request import CheckRequest # from openfga_sdk.models.tuple_key import TupleKey # from openfga_sdk.models.contextual_tuple_keys import ContextualTupleKeys # Run a check async def check(): body = CheckRequest( tuple_key=TupleKey( user=\"user:erik\", relation=\"viewer\", object=\"document:2021-public-roadmap\", ), authorization_model_id=\"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", ) response = await fga_client_instance.check(body) # response.allowed = false Get the Bearer Token and set up the FGA_API_URL environment variable Set FGA_API_URL according to the service you are using curl -X POST $FGA_API_URL/stores/$FGA_STORE_ID/check \\ -H \"Authorization: Bearer $FGA_BEARER_TOKEN\" \\ # Not needed if service does not require authorization -H \"content-type: application/json\" \\ -d '{\"authorization_model_id\": \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\", \"tuple_key\":{\"user\":\"user:erik\",\"relation\":\"viewer\",\"object\":\"document:2021-public-roadmap\"}}' # Response: {\"allowed\":false} check( user = \"user:erik\", // check if the user `user:erik` relation = \"viewer\", // has an `viewer` relation object = \"document:2021-public-roadmap\", // with the object `document:2021-public-roadmap` authorization_id = \"1uHxCSuTP0VKPYSnkq1pbb1jeZw\" ); Reply: false","s":"04. Sharing Files And Folders Publicly","u":"/docs/modeling/advanced/gdrive","h":"#04-sharing-files-and-folders-publicly","p":795},{"i":817,"t":"Take a look at the following sections for more information. Search with permissions Give your users search results with objects that they have access to More","s":"Related Sections","u":"/docs/modeling/advanced/gdrive","h":"#related-sections","p":795}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,3.045,1,5.772,2,1.025,3,6.413,4,6.413,5,7.887,6,8.446,7,6.413]],["t/4",[2,0.847,3,6.038,4,6.038,7,6.038,8,0.979,9,7.953,10,7.426,11,6.038,12,6.234,13,3.074,14,1.616,15,7.033,16,6.719,17,3.939,18,8.752,19,6.234,20,6.458,21,8.752,22,7.426,23,7.033,24,6.458,25,6.719,26,6.458,27,2.354,28,1.788,29,2.576,30,7.953,31,4.447,32,4.821,33,8.752,34,7.953,35,2.189,36,2.189,37,1.172,38,6.458,39,4.259,40,8.752,41,4.319,42,7.426]],["t/6",[2,0.99,37,1.172,43,6.352,44,8.68,45,7.477,46,4.821,47,5.197,48,7.953,49,10.229,50,4.319,51,5.314,52,0.65,53,3.674,54,3.798,55,4.447,56,3.595,57,4.66,58,2.706,59,6.038,60,7.853,61,4.739,62,8.752,63,8.752,64,5.202,65,1.649,66,3.346,67,2.941,68,6.458,69,3.346,70,7.953]],["t/8",[2,0.819,3,5.84,4,5.84,14,1.563,16,6.499,24,6.246,25,6.499,50,4.177,52,0.702,57,4.507,58,2.617,71,5.601,72,3.656,73,6.92,74,1.92,75,4.629,76,0.886,77,2.42,78,8.465,79,0.899,80,4.076,81,8.465,82,10.03,83,3.113,84,2.596,85,8.465,86,3.173,87,6.802,88,4.507,89,4.177,90,2.353,91,3.515,92,2.382,93,1.891,94,4.119,95,3.81,96,6.246,97,2.796,98,5.671,99,7.692]],["t/10",[5,7.289,6,7.806,37,1.151,52,0.705,57,4.574,69,3.284,71,4.501,72,3.46,74,1.758,77,2.073,84,3.103,100,4.513,101,5.364,102,7.767,103,3.731,104,2.512,105,1.2,106,2.862,107,4.732,108,2.548,109,11.105,110,2.211,111,1.829,112,4.732,113,8.585,114,3.775,115,7.289,116,4.18,117,6.595,118,7.806]],["t/12",[7,6.312,52,0.667,58,2.828,66,4.012,76,0.915,79,0.972,90,2.146,91,3.799,101,4.333,119,2.192,120,5.681,121,9.149,122,3.928]],["t/14",[2,0.988,19,7.708,37,1.168,51,5.294,52,0.687,65,1.643,74,1.515,76,0.897,77,2.104,79,1.185,88,5.435,89,4.303,95,3.925,123,8.719,124,3.506,125,8.719,126,8.719,127,8.719,128,4.076,129,8.719,130,7.398,131,6.015,132,0.969,133,1.193,134,2.653,135,2.491,136,7.923,137,3.744,138,2.55,139,2.074,140,7.923]],["t/16",[2,0.928,8,0.868,11,0.922,13,0.846,14,0.744,15,1.073,16,2.528,17,1.482,19,1.716,27,2.799,28,1.315,29,2.602,31,0.679,32,0.736,35,0.823,36,0.823,37,1.169,39,1.602,50,1.189,51,2.447,52,0.725,54,0.895,56,1.352,58,2.331,65,1.807,67,1.107,71,0.7,74,0.984,76,0.913,77,1.465,79,1.194,83,0.491,84,0.41,88,0.711,89,0.659,90,2.312,92,0.376,93,1.632,94,1.173,95,2.549,97,0.796,98,0.895,101,0.633,103,0.58,104,2.166,105,1.083,106,3.144,107,0.736,108,0.829,110,1.881,111,1.37,119,2.059,124,0.969,132,1.048,133,1.331,134,2.143,135,1.931,137,0.574,138,2.06,139,0.573,141,1.529,142,1.496,143,1.1,144,3.034,145,0.641,146,1.025,147,0.897,148,1.615,149,1.351,150,0.532,151,0.487,152,1.133,153,0.434,154,1.336,155,1.429,156,1.025,157,1.615,158,0.959,159,1.489,160,1.274,161,0.969,162,0.58,163,0.871,164,0.778,165,1.284,166,2.37,167,1.705,168,1.455,169,1.085,170,2.781,171,1.532,172,0.99,173,1.484,174,1.262,175,3.534,176,4.296,177,3.005,178,1.66,179,1.568,180,2.474,181,2.345,182,1.697,183,0.388,184,0.705,185,4.03,186,2.862,187,2.437,188,0.42,189,1.226,190,2.992,191,0.633,192,0.659,193,3.026,194,0.895,195,1.19,196,1.073,197,1.025,198,1.214,199,1.133,200,1.996,201,1.336,202,1.133,203,0.871,204,0.689,205,1.073,206,0.669,207,1.619,208,1.778,209,1.367,210,0.587,211,1.377,212,0.711,213,1.937,214,1.073,215,0.736,216,1.918,217,0.659,218,0.811,219,0.986,220,1.937,221,1.336,222,1.366,223,1.336,224,0.487,225,1.428,226,0.824,227,2.303,228,2.41,229,2.41,230,2.41,231,2.41,232,2.41,233,2.41,234,1.85,235,3.292,236,6.691,237,6.51,238,1.519,239,1.846,240,3.345,241,4.325,242,2.724,243,2.579,244,3.504,245,1.336,246,1.336,247,1.336,248,1.336,249,1.336,250,1.574,251,2.397,252,1.336,253,2.892,254,1.85,255,0.543,256,1.214,257,0.763,258,2.077,259,0.811,260,1.842,261,1.025,262,0.829,263,1.126,264,1.666,265,3.575,266,1.336,267,1.336,268,1.116,269,1.336,270,1.336,271,1.2,272,0.986,273,1.615,274,0.587,275,1.073,276,2.718,277,1.133,278,1.58,279,2.41,280,2.41,281,2.41,282,2.41,283,2.41,284,2.147,285,0.955,286,1.336,287,1.133,288,2.41,289,2.41,290,1.025,291,1.336,292,0.922,293,1.43,294,1.214,295,1.336,296,1.336,297,1.336,298,1.133,299,1.025,300,1.133,301,1.336,302,2.639,303,1.85,304,1.318,305,1.999,306,1.133,307,1.133,308,1.133,309,0.951,310,0.951,311,2.528,312,1.214,313,1.025,314,1.085,315,0.501,316,0.473,317,0.501,318,1.133,319,2.717,320,1.511,321,2.566,322,0.806,323,0.762,324,1.563,325,0.97,326,2.567,327,2.205,328,2.205,329,2.205,330,2.205,331,2.416,332,1.757,333,1.473,334,0.934,335,1.853,336,1.681,337,1.811,338,1.825,339,1.811,340,0.934,341,2.017,342,1.811,343,0.934,344,1.936,345,2.056,346,2.072,347,2.072,348,1.825,349,0.941,350,1.531,351,1.744,352,0.854,353,1.631,354,2.104,355,0.689,356,0.955,357,0.927,358,1.473,359,0.913,360,1.418,361,1.656,362,0.955,363,0.963,364,0.927,365,0.941,366,1.867,367,1.867,368,1.968,369,0.873,370,0.886,371,0.854,372,0.955,373,1.581,374,0.854,375,1.508,376,0.71,377,1.825,378,0.694,379,1.955,380,0.862,381,0.941,382,0.941,383,0.941,384,0.934,385,0.941,386,0.941,387,0.941,388,1.347,389,0.934,390,1.831,391,0.941,392,0.941,393,0.948,394,0.941,395,0.862,396,1.858,397,1.442,398,0.934,399,0.941,400,0.941,401,0.941,402,0.948,403,0.948,404,0.941,405,0.948,406,0.948,407,0.955,408,0.886,409,0.941,410,0.941,411,0.862,412,0.941,413,1.156,414,1.156,415,0.913,416,0.839,417,1.352,418,1.957,419,2.41,420,0.955,421,0.862,422,1.429,423,0.92,424,0.927,425,1.519,426,0.899,427,0.941,428,0.862,429,1.429,430,0.913,431,0.866,432,0.913,433,0.892,434,2.41,435,0.912,436,0.87,437,2.862,438,1.663,439,2.19,440,2.41,441,2.41,442,2.41,443,1.85,444,0.616,445,1.098,446,1.937,447,2.045,448,1.463,449,1.532,450,1.463,451,1.133,452,2.045,453,3.951,454,2.44,455,1.133,456,1.133,457,1.133,458,2.794,459,1.133,460,1.133,461,1.133,462,1.133,463,1.133,464,1.133,465,0.659,466,2.713,467,1.035,468,1.725,469,1.214,470,1.336,471,1.133,472,1.133,473,1.432,474,1.447,475,0.723,476,1.336,477,1.025,478,0.413,479,0.561,480,1.336,481,0.7,482,0.829,483,1.133,484,0.986,485,0.829]],["t/18",[76,0.773,155,1.182,158,3.714,159,1.387,160,2.1,161,3.753,162,4.053]],["t/20",[52,0.588,76,0.767,79,1.122,155,1.338,159,1.376,166,2.909,167,1.985,168,3.342,169,4.167]],["t/22",[2,0.894,37,1.238,77,2.23,84,2.834,132,1.026,147,1.022,155,1.17,159,1.373,166,2.903,181,6.581,182,3.367]],["t/24",[2,0.898,8,1.038,65,1.748,105,1.296,132,1.03,134,2.822,135,2.651,142,5.76,165,3.618,209,3.852]],["t/26",[2,0.893,52,0.586,76,0.764,77,2.225,133,1.261,143,1.069,147,0.893,159,1.37,209,3.829,213,7.41,225,2.828,226,3.154]],["t/28",[52,0.595,76,0.777,77,2.261,79,0.995,209,3.891]],["t/30",[2,0.884,52,0.58,76,0.757,77,2.203,79,0.97,97,3.016,138,2.67,143,0.926,147,0.884,155,1.396,158,3.634,159,1.558,166,3.294,168,3.296]],["t/32",[79,0.989,143,0.945,166,2.927,168,3.362,258,3.185,259,5.655,260,1.852,261,7.15]],["t/34",[52,0.669,79,1.175,155,1.401,166,2.892,268,3.12,276,5.054,277,7.809,278,4.417]],["t/36",[8,1.04,52,0.59,76,0.77,79,0.987,124,3.738,133,1.449,134,2.828,143,0.943]],["t/38",[52,0.594,76,0.775,79,0.993,138,2.735,143,0.949,300,7.935]],["t/40",[2,0.978,8,1.131,50,4.231,52,0.683,76,0.92,79,1.073,119,2.422,132,0.952,133,1.173,138,2.956,143,1.164,144,4.197,147,0.978,155,1.086,242,3.898,293,3.724,302,5.135,303,7.759,304,2.726,305,6.525,306,7.275,307,7.275,308,7.275,309,6.107,310,6.107]],["t/42",[8,1.034,52,0.587,54,3.431,65,1.988,76,0.766,95,4.159,143,0.937,250,1.875,319,3.716,320,3.464,437,5.09]],["t/44",[8,1.028,52,0.583,76,0.916,143,0.932,155,1.163,250,1.864,258,3.597,278,4.409,319,3.694,320,3.443,437,5.06,449,5.84]],["t/46",[56,3.803,65,1.744,83,3.405,133,1.445,144,3.844,319,4.249,466,5.393,467,3.975,468,4.851]],["t/48",[8,1.159,32,4.923,50,4.41,52,0.694,58,2.763,74,1.553,76,0.858,77,2.157,132,0.993,133,1.223,137,3.837,143,0.907,148,5.988,155,1.424,193,5.206,225,3.175,254,6.861,467,3.837,473,5.312,474,3.927,475,4.839]],["t/50",[0,2.968,8,1.23,13,3.666,37,1.473,65,1.707,74,1.574,76,0.865,77,2.186,84,2.778,132,1.006,139,2.155,143,0.919,147,0.877,195,1.595,242,3.182,486,3.019]],["t/52",[2,0.768,8,1.079,13,2.785,19,5.648,28,2.265,29,1.997,31,4.9,37,1.062,54,2.944,71,4.155,76,0.861,77,1.914,79,1.104,90,1.86,132,0.881,138,2.319,147,1.006,148,6.462,151,2.889,153,2.576,155,1.221,157,5.313,167,2.067,168,2.863,169,3.569,173,3.09,174,2.122,182,3.514,191,4.568,193,6.299,194,5.313,196,6.372,199,6.729,203,5.171,207,1.9,208,5.851,226,3.298,238,3.659,240,4.368,250,1.609,258,2.712,259,4.815,261,6.088,262,5.989,276,3.806,298,6.729,299,6.088,486,2.642,487,8.352,488,7.206,489,7.206,490,4.368,491,7.93,492,7.93,493,7.206,494,7.93,495,5.171,496,7.93,497,6.729,498,5.648,499,7.206,500,6.088,501,3.329,502,5.171,503,3.659]],["t/54",[0,1.472,2,0.637,8,0.503,31,2.282,52,0.675,76,0.934,79,1.245,90,2.012,91,4.197,106,1.497,119,1.076,143,0.456,147,0.754,151,1.637,155,1.46,159,1.579,166,2.068,167,0.963,172,1.845,173,1.284,174,0.881,175,3.634,177,4.904,178,1.672,179,2.351,180,3.137,183,1.304,184,1.925,186,5.774,187,3.294,188,1.412,189,1.367,210,1.974,218,2.728,238,2.073,239,2.519,242,1.578,250,0.912,262,2.789,274,1.974,275,3.61,315,3.577,316,3.381,317,4.029,323,1.039,504,3.2,505,3.01,506,2.519,507,3.449,508,7.337,509,4.66,510,7.666,511,10.244,512,5.08,513,4.999,514,4.492]],["t/56",[8,0.914,17,5.139,28,1.249,37,0.819,52,0.738,56,3.355,58,2.525,71,3.203,74,1.062,76,0.94,77,1.475,79,1.247,83,3.004,92,1.72,104,2.438,111,1.739,119,1.465,128,4.3,132,0.907,133,1.4,137,2.625,143,1.09,144,2.538,145,3.921,147,0.592,155,1.497,158,3.661,159,1.214,166,2.891,171,3.887,173,2.334,174,1.199,178,1.644,179,1.845,180,1.86,182,2.227,187,3.649,193,3.561,195,1.076,205,4.912,238,2.821,239,3.428,242,3.698,244,3.033,251,2.821,253,3.796,264,3.29,268,3.119,271,2.227,274,2.686,276,3.921,278,2.934,284,5.999,293,4.444,311,4.693,473,3.634,474,2.686,515,5.187,516,4.096,517,3.986,518,6.113,519,6.113,520,6.113,521,5.555,522,6.113,523,4.51,524,6.113,525,6.113,526,3.31,527,6.113,528,4.499,529,5.187,530,5.555,531,5.555,532,2.484,533,7.89,534,6.027,535,5.555,536,5.555]],["t/58",[37,0.841,52,0.706,58,1.941,76,0.856,79,1.233,84,1.925,88,3.343,89,3.098,90,2.609,93,2.083,97,2.747,100,2.552,103,3.611,106,3.881,111,1.337,112,4.58,119,1.504,132,0.697,133,0.859,143,1.098,144,2.607,145,3.013,147,0.902,155,1.421,159,1.475,166,3.118,168,2.266,169,2.826,171,3.992,173,1.794,174,1.232,175,3.84,178,1.654,179,1.895,180,2.529,182,2.288,195,1.106,226,2.147,236,8.107,237,7.808,238,2.897,239,3.521,242,3.274,244,3.462,264,3.977,268,2.128,271,2.288,274,2.759,276,3.013,293,2.727,315,3.117,316,2.225,317,3.117,448,5.048,485,3.898,528,4.58,532,3.379,537,5.705,538,10.608,539,5.045,540,3.898,541,4.632,542,5.327,543,4.82,544,3.343,545,6.278,546,3.399]],["t/60",[2,0.808,8,0.569,37,0.681,41,3.55,52,0.714,54,1.887,56,2.088,58,1.571,65,0.957,66,1.943,74,0.883,76,0.941,79,1.244,88,2.706,89,2.508,90,2.528,91,4.569,93,2.029,103,2.207,111,1.082,119,1.724,122,4.114,131,3.506,132,0.799,133,0.695,143,0.921,144,2.11,145,3.453,147,1.012,149,2.85,155,1.431,159,1.424,168,1.835,169,3.758,171,3.232,172,2.955,173,2.056,174,1.411,175,3.998,178,1.663,179,2.52,180,2.762,182,1.852,183,2.088,184,2.104,188,1.597,189,2.188,193,2.96,195,0.895,212,2.706,236,6.161,237,7.057,242,1.785,244,3.1,250,1.46,251,2.345,260,1.011,264,3.248,268,1.723,276,2.439,293,2.207,302,2.582,304,1.825,305,4.368,315,2.697,316,2.96,317,2.697,371,1.865,473,3.021,474,2.233,475,2.752,479,3.02,485,5.185,511,9.495,512,3.831,513,4.375,528,3.963,532,2.924,539,7.296,543,3.902,547,3.62,548,3.405,549,5.082,550,4.618,551,2.582,552,3.902,553,6.537,554,5.082,555,4.691,556,4.691,557,2.96,558,3.506,559,4.618,560,4.312,561,4.312,562,4.618,563,4.618,564,3.453,565,4.084,566,4.312,567,4.312,568,3.506,569,4.618,570,3.405,571,2.622,572,3.314]],["t/62",[2,0.674,37,0.933,52,0.735,58,2.154,65,1.312,76,0.884,79,1.222,84,2.136,90,2.087,100,2.831,103,3.026,106,3.696,111,1.483,119,1.669,132,0.774,137,2.991,143,0.994,144,3.694,145,3.344,147,1.033,155,1.307,159,1.035,166,2.189,171,4.429,173,2.542,174,1.745,175,3.956,178,1.651,179,2.102,180,2.119,182,2.538,189,2.119,193,4.058,195,1.227,236,8.051,237,7.528,238,3.215,239,3.906,242,3.125,244,3.835,251,4.523,259,4.23,264,3.506,268,3.501,274,3.061,313,5.348,315,3.871,316,2.469,317,2.612,320,2.612,321,2.447,485,4.325,528,3.837,532,3.615,544,3.709,546,3.772,573,6.33,574,5.14]],["t/64",[2,0.66,37,0.913,52,0.728,58,2.106,65,1.283,76,0.915,79,1.231,90,2.057,106,3.725,111,1.45,112,3.753,119,1.632,132,0.757,133,1.2,143,0.984,144,2.829,145,3.27,147,0.849,150,2.711,155,1.297,159,1.012,166,2.141,171,4.332,173,2.506,174,1.721,175,3.774,178,1.65,179,2.056,180,2.073,189,2.073,193,3.968,195,1.544,236,8.46,237,7.91,244,4.028,251,4.476,259,4.137,264,3.947,268,2.973,274,2.994,293,2.959,313,5.23,316,2.415,317,3.288,320,2.554,321,3.08,528,3.753,532,3.564,544,3.628,575,5.943,576,11.179,577,3.461]],["t/66",[2,0.659,37,0.911,52,0.728,65,1.282,76,0.914,79,1.23,90,2.055,101,4.15,103,3.805,112,3.747,119,1.63,132,0.756,133,1.199,143,1.038,144,3.638,147,0.938,150,2.707,155,1.296,159,1.011,166,2.138,171,4.325,173,2.504,174,1.719,175,3.962,178,1.647,179,2.053,180,2.07,189,2.07,192,4.324,193,3.962,195,1.543,200,1.607,204,3.509,236,8.458,237,7.908,239,6.332,240,3.747,242,3.078,244,4.026,251,4.723,258,2.326,264,3.879,268,2.97,274,2.989,317,2.55,320,2.55,321,3.078,532,3.561,544,3.622,578,5.571,579,5.222,580,6.181,581,5.772]],["t/68",[8,1.099,19,6.995,28,1.11,37,0.728,52,0.707,54,2.017,58,1.68,69,2.077,76,0.775,79,1.241,91,3.594,104,1.349,106,3.64,111,1.843,122,4.633,139,1.293,140,4.937,143,0.551,147,0.73,155,1.345,159,1.389,173,2.473,174,1.834,175,3.9,177,4.635,178,1.668,179,2.275,180,2.844,183,2.188,184,2.734,188,2.369,189,2.293,192,2.681,193,5.042,194,3.64,195,0.957,196,4.366,199,6.396,202,4.61,203,3.543,225,1.666,276,2.608,304,1.378,305,3.299,315,3.907,316,3.766,317,3.682,512,4.609,513,4.536,575,4.227,578,3.455,582,5.433,583,4.937,584,5.433,585,4.171,586,3.543,587,5.433,588,5.433,589,5.433,590,7.538,591,4.937,592,4.823,593,7.685,594,7.538,595,7.538,596,8.656,597,5.433,598,4.152,599,5.433,600,8.656,601,5.433]],["t/70",[0,2.905,2,0.859,8,1.22,13,3.621,31,4.506,37,1.503,52,0.563,65,1.671,74,1.791,76,0.735,77,2.14,84,2.72,132,0.985,139,2.593,147,1.086,167,1.901,195,1.562,242,3.115,486,3.435,602,5.942]],["t/72",[0,2.997,8,1.175,13,3.213,132,1.166,139,2.177,153,2.972,195,1.611,224,3.334,486,3.497,501,3.841,603,5.438,604,6.372,605,6.516]],["t/74",[2,1.081,8,1.29,14,1.741,28,1.562,29,2.689,31,3.883,38,6.957,53,4.482,65,1.926,76,0.781,86,2.865,114,3.358,128,4.407,133,1.399,134,3.443,135,2.184,143,0.956,147,0.99,167,2.192,209,3.174,222,1.844,258,3.225,285,2.218,319,3.792,336,2.671,337,2.878,350,2.253,467,3.281,606,4.005,607,7.812,608,7.812,609,5.855,610,7.643,611,4.366,612,9.702,613,7.577,614,7.577,615,6.963,616,7.154,617,5.639,618,5.444]],["t/76",[1,5.783,2,0.902,8,1.042,134,2.833,147,0.902,167,1.997,606,4.88,619,6.24]],["t/78",[8,1.229,14,2.027,29,2.882,35,1.918,36,1.918,105,1.533,134,3.34,222,2.649,322,1.877,323,1.774,324,1.974,336,3.012,337,3.008,408,2.953,426,2.997,606,5.752,609,6.637,620,6.98,621,7.355,622,6.525,623,8.562,624,8.265,625,8.1,626,7.819]],["t/80",[2,0.907,8,0.478,14,0.788,15,3.431,27,2.941,28,1.827,29,2.707,35,1.068,36,1.068,37,1.013,52,0.676,79,0.949,90,1.774,93,1.689,104,2.078,105,1.169,108,1.075,110,2.154,111,1.35,132,0.993,134,1.299,135,1.22,138,1.249,141,1.597,147,0.939,155,1.361,157,2.86,159,1.441,160,1.426,167,2.008,173,1.811,174,1.483,177,3.975,178,1.665,179,1.913,180,2.85,183,1.239,184,2.211,188,1.992,189,1.928,193,4.404,194,2.86,195,0.752,200,1.786,207,1.812,222,1.53,224,1.556,243,2.745,250,1.535,255,3.633,260,1.981,263,3.534,285,1.239,304,1.083,314,1.922,320,2.376,322,1.045,323,0.988,324,1.632,326,2.814,327,2.525,328,2.525,329,2.525,330,2.525,331,2.491,332,2.065,333,1.798,334,1.211,335,2.177,336,1.975,337,2.128,338,2.144,339,2.128,340,1.211,341,2.268,342,2.128,343,1.211,344,2.218,345,2.355,346,2.373,347,2.373,348,2.144,349,1.22,351,2.049,353,1.229,354,2.41,356,1.239,357,1.201,358,1.798,359,1.183,360,1.731,361,2.496,362,1.239,363,1.249,364,1.201,365,1.22,366,2.194,367,2.194,368,2.112,369,2.004,370,2.034,371,1.961,372,1.239,373,2.112,379,1.961,381,1.22,382,1.22,383,1.22,384,1.211,385,1.22,386,1.22,387,1.22,388,1.644,389,1.211,390,2.628,391,1.22,392,1.22,393,1.229,394,1.22,398,1.211,399,1.22,400,1.22,401,1.22,402,1.229,403,1.229,404,1.22,405,1.229,406,1.229,407,1.239,408,1.148,409,1.22,410,1.22,415,1.183,422,1.744,423,1.192,424,1.201,425,1.854,426,1.166,427,1.22,429,1.744,430,1.183,431,1.123,432,1.183,433,1.157,479,1.792,509,3.712,585,3.277,618,3.041,627,4.269,628,4.269,629,7.561,630,6.339,631,4.269,632,4.269,633,4.269,634,4.269,635,4.269,636,4.269,637,4.269,638,4.269,639,4.269,640,4.269,641,4.269,642,4.269,643,4.269,644,4.269,645,4.269,646,4.269,647,4.269,648,3.622,649,4.269]],["t/82",[0,2.933,2,1.003,37,1.466,52,0.569,69,3.963,72,3.062,74,1.556,134,2.724,143,0.908,145,4.298,147,1.108,167,1.92,195,1.577,240,4.933,242,3.145,486,3.454,528,4.933,602,6,605,6.378]],["t/84",[1,5.636,2,1.011,8,1.231,14,1.676,83,3.339,105,1.268,133,1.242,134,3.347,135,2.594,143,0.921,147,0.879,207,2.175,209,3.769,211,5.186,336,2.371,619,6.082]],["t/86",[8,0.927,14,1.529,16,7.602,27,2.501,28,1.276,29,1.573,35,1.562,36,1.562,93,2.077,104,2.308,108,1.573,110,2.393,132,1.033,134,3.222,155,0.791,159,1.382,160,1.864,167,2.123,178,1.659,222,1.507,243,2.464,250,1.267,260,1.849,263,2.919,304,1.584,322,1.528,323,1.445,324,2.133,331,2.649,332,2.539,333,2.808,334,1.771,338,1.771,339,2.616,340,1.771,341,2.359,342,2.616,343,1.771,344,2.464,345,2.787,346,2.636,347,2.636,348,1.771,351,2.52,357,1.757,358,2.349,359,1.731,360,2.262,361,2.549,364,1.757,369,2.196,370,2.229,371,2.148,373,1.744,381,1.784,382,1.784,383,1.784,384,1.771,385,1.784,386,1.784,387,1.784,388,2.148,389,1.771,390,2.52,391,1.784,392,1.784,394,1.784,398,1.771,399,1.784,400,1.784,401,1.784,403,1.798,404,1.784,405,1.798,408,1.68,409,1.784,410,1.784,415,1.731,429,1.718,431,1.643,432,1.731,433,1.692,592,5.316,650,4.794,651,6.244,652,8.744,653,5.018,654,4.794,655,5.299,656,5.299,657,6.244,658,2.234,659,6.244,660,6.244,661,4.448,662,6.244,663,6.244,664,6.244,665,8.285,666,8.285,667,3.502,668,6.244,669,6.244,670,5.299,671,6.244,672,6.36,673,6.244,674,6.244,675,6.244]],["t/88",[0,3.045,8,1.04,38,6.859,39,4.523,467,3.991,614,7.47,676,5.31,677,7.47,678,8.446]],["t/90",[2,0.971,8,1.237,29,2.526,53,4.211,65,1.89,86,3.76,105,1.401,133,1.372,143,1.017,147,0.971,167,2.15,222,2.42,322,2.072,323,1.958,336,2.62,408,2.698,426,2.739,606,5.256,609,6.228,620,6.378,621,6.72,622,5.962,623,8.155,624,7.872,625,7.401,626,7.144,679,3.724]],["t/92",[43,6.338,52,0.687,74,1.515,90,2.539,95,3.925,101,4.129,111,1.856,132,0.969,141,2.571,182,3.177,211,4.981,224,3.719,234,6.694,255,3.544,263,4.076,314,4.594,320,3.269,368,2.435,423,2.435,424,2.454,479,3.661,532,3.544,603,5.183,614,7.007,680,7.923,681,7.007,682,5.842,683,8.719,684,8.719,685,5.544,686,8.719,687,7.007,688,7.007,689,6.21]],["t/94",[34,6.387,38,5.187,43,4.365,45,4.849,58,2.766,67,2.362,69,3.42,105,1.25,119,1.684,132,1.151,141,2.254,178,1.632,195,1.576,206,3.519,234,8.532,260,1.398,319,2.827,320,3.354,321,2.469,322,1.721,323,2.397,331,1.758,332,2.443,336,2.337,350,2.072,351,1.905,359,2.48,360,2.443,361,1.809,371,1.823,388,2.32,423,1.963,468,4.688,478,2.173,486,2.981,505,5.995,603,5.851,604,4.268,606,3.683,609,6.434,614,8.789,667,3.942,677,9.307,678,8.13,680,8.13,687,7.91,688,7.19,690,3.089,691,9.04,692,7.19,693,8.792,694,8.13,695,8.13,696,4.365,697,5.964,698,7.029,699,5.964,700,5.964,701,6.387,702,7.029,703,5.964,704,5.964,705,5.964,706,5.964,707,5.964,708,7.029,709,7.029,710,5.964,711,6.387,712,5.007,713,7.592,714,5.964,715,5.964,716,5.964,717,4.849,718,5.964,719,5.964,720,5.964,721,5.964,722,5.964,723,7.029]],["t/96",[8,0.673,43,6.058,47,4.637,48,5.468,52,0.513,59,4.152,67,2.717,69,3.73,74,1.404,83,2.213,86,2.256,93,1.344,96,4.44,105,0.841,119,1.442,128,3.778,132,0.668,178,1.658,207,1.442,210,2.644,234,8.465,240,3.315,250,1.221,257,3.438,263,2.813,319,3.251,320,3.03,321,2.114,322,1.473,323,1.392,331,1.505,332,2.779,336,1.572,350,2.382,351,2.191,359,2.24,360,2.207,361,2.698,369,1.595,371,2.096,388,2.53,390,2.191,423,1.681,474,3.552,478,1.86,485,3.737,486,2.693,564,3.88,571,3.104,586,6.363,592,3.104,603,3.577,606,3.153,652,5.106,667,4.533,677,7.841,687,7.334,688,4.836,691,6.495,693,5.106,697,5.106,699,6.858,700,5.106,703,5.106,704,5.106,705,6.858,706,5.106,707,5.106,710,6.858,713,5.106,714,5.106,715,5.106,716,5.106,717,4.152,718,5.106,719,5.106,720,5.106,721,5.106,722,5.106,724,7.345,725,3.737,726,6.018,727,5.468,728,7.345,729,5.468,730,8.279,731,7.345,732,6.018,733,5.106,734,6.734,735,8.083,736,6.018,737,8.083,738,6.018,739,4.62,740,6.018,741,7.345,742,6.018,743,6.018,744,5.468,745,7.345,746,7.345,747,5.468,748,5.468,749,5.468,750,5.468,751,5.468,752,3.924,753,5.468,754,5.468,755,5.468,756,5.468,757,5.468,758,5.468,759,5.468,760,2.278,761,5.468,762,5.468,763,5.468,764,5.468,765,7.345,766,5.271,767,5.468,768,7.345,769,5.468,770,5.468,771,5.468,772,5.468,773,5.468,774,5.468,775,5.468,776,5.106,777,5.468,778,5.468,779,5.468,780,5.468,781,5.468,782,5.468,783,5.468,784,5.468,785,5.468,786,5.468]],["t/98",[2,0.828,8,0.733,14,1.433,27,2.715,28,1.748,29,1.125,43,5.311,47,3.33,52,0.654,59,3.081,65,1.853,67,2.609,69,3.269,74,1.139,76,0.709,79,0.824,84,1.37,86,1.674,90,2.308,93,1.734,95,2.01,105,0.624,108,1.651,111,0.951,116,3.189,119,1.57,128,3.063,135,1.276,143,0.665,155,0.565,167,1.405,177,3.452,178,1.661,191,2.115,200,1.548,210,1.963,234,6.566,238,2.061,243,1.737,250,1.736,255,2.664,257,2.552,263,2.088,271,3.469,278,3.146,319,3.122,320,3.688,321,1.569,322,1.093,323,1.516,331,1.639,332,2.898,333,2.201,334,1.266,337,1.844,338,1.858,339,1.844,340,1.266,341,2.17,342,1.844,343,1.266,348,1.858,349,1.276,350,1.316,351,1.776,352,1.583,355,1.276,356,1.296,357,1.257,358,1.266,359,2.371,360,1.79,361,2.732,362,1.296,364,1.257,365,1.276,368,1.83,369,2.058,371,2.218,372,1.296,373,1.247,374,1.583,377,1.266,378,1.286,388,2.362,390,1.776,426,1.22,468,2.34,474,1.963,478,1.381,485,2.773,486,2.184,500,5.031,505,4.391,509,2.721,571,2.304,586,5.577,592,5.075,618,3.181,650,3.429,652,3.79,654,3.429,658,1.598,667,4.354,677,6.873,687,5.267,688,3.589,690,1.963,691,3.589,693,5.561,697,3.79,699,6.587,700,3.79,703,3.79,704,3.79,705,6.587,706,3.79,707,3.79,710,7.257,713,3.79,714,3.79,715,3.79,716,3.79,717,3.081,718,3.79,719,3.79,720,3.79,721,3.79,722,6.587,725,2.773,727,5.955,728,7.054,729,5.955,730,8.078,731,7.054,734,4.836,741,4.058,744,5.955,745,4.058,746,4.058,747,4.058,748,4.058,749,4.058,750,4.058,751,5.955,752,2.912,753,4.058,755,4.058,756,4.058,757,4.058,758,4.058,759,4.058,760,1.691,761,4.058,762,4.058,763,4.058,764,4.058,765,5.955,766,4.274,767,4.058,768,5.955,769,4.058,770,4.058,771,4.058,772,4.058,773,4.058,774,4.058,775,4.058,776,3.79,777,4.058,778,4.058,779,4.058,780,4.058,781,5.955,782,5.955,783,5.955,784,5.955,785,4.058,786,5.955,787,7.763,788,8.553,789,7.763,790,3.429,791,4.466,792,4.466,793,4.466,794,8.553,795,6.239,796,6.554,797,4.466,798,4.466,799,4.466,800,4.466,801,4.466,802,4.466,803,4.466,804,4.466,805,4.466,806,4.466,807,4.466,808,4.466,809,4.466,810,4.466,811,4.466,812,4.466,813,4.466,814,8.553,815,4.466,816,4.466,817,6.554,818,4.466,819,6.554,820,6.554,821,4.466,822,4.466,823,4.466,824,4.466,825,4.466,826,4.466,827,4.466]],["t/100",[0,2.916,2,1,3,6.142,4,6.142,8,1.222,29,2.243,37,1.462,38,6.569,58,2.752,77,2.493,145,4.273,147,1.057,195,1.568,528,4.904,572,6.737,574,7.623,667,4.993,828,5.528,829,7.554,830,6.922]],["t/102",[8,1.179,27,1.981,29,2.788,35,2.304,36,2.304,86,2.761,96,5.433,104,1.828,110,1.895,114,4.049,132,1.229,159,1.094,167,1.579,170,6.357,178,1.601,210,3.236,243,1.952,260,1.464,322,2.255,323,2.438,331,2.635,339,2.072,341,1.868,342,2.072,344,1.952,345,2.072,346,2.088,347,2.088,350,2.17,357,2.593,359,2.041,360,2.011,361,2.372,364,2.072,369,1.952,370,1.981,371,1.909,398,2.613,478,2.849,486,2.454,571,3.799,609,7.05,650,7.72,653,5.917,654,5.653,691,9.024,694,9.138,695,8.372,712,5.245,831,6.357,832,7.364,833,9.214,834,7.364,835,7.364,836,7.364,837,7.364,838,6.563,839,7.364,840,9.214,841,7.364,842,10.056,843,7.364,844,9.138,845,10.056,846,7.364,847,7.364,848,7.364,849,4.471,850,6.691,851,7.364,852,7.364,853,7.364]],["t/104",[2,0.832,8,1.297,28,2.067,29,2.957,35,2.777,36,2.53,37,1.488,132,1.195,141,2.548,178,1.175,322,2.476,323,2.488,439,7.806,478,2.656,486,2.862,487,6.903,609,5.334,685,6.839,854,8.59,855,4.18]],["t/106",[0,3.033,51,5.621,52,0.588,53,3.887,54,3.438,65,1.744,76,0.767,95,4.167,143,0.939,319,3.723,676,5.289]],["t/108",[2,1.059,8,1.224,29,2.68,35,1.893,36,1.893,86,4.1,105,1.528,133,1.496,143,1.109,147,1.059,167,2.344,222,2.639,322,1.852,323,1.751,324,1.948,336,2.856,408,2.942,426,2.986,606,5.73,609,6.607,620,6.954,621,7.327,622,6.501,623,8.545,624,8.248,625,8.069,626,7.79]],["t/110",[52,0.589,65,1.748,76,0.769,95,4.176,143,0.941,224,3.38,255,3.77,264,3.318,314,4.176,856,7.122]],["t/112",[14,1.13,27,3.101,28,1.881,29,2.787,35,1.531,36,1.531,37,1.233,65,1.153,74,1.063,93,2.057,104,2.439,105,1.372,110,2.529,111,1.303,132,1.091,141,1.542,159,1.46,160,1.839,167,2.194,174,1.201,178,1.652,200,2.175,207,2.354,222,1.477,243,2.792,250,1.994,260,2.139,322,1.498,323,1.416,324,1.576,326,2.671,331,2.689,332,2.232,333,2.318,334,1.736,335,2.651,336,2.404,337,2.765,338,2.61,339,2.591,340,1.736,341,2.597,342,2.591,343,1.736,344,2.604,345,2.765,346,2.786,347,2.786,348,2.61,349,1.749,356,1.776,357,1.723,358,2.318,359,1.697,360,2.232,361,2.104,362,1.776,363,1.79,364,1.723,365,1.749,366,2.671,367,2.671,368,2.571,369,1.622,370,1.647,371,1.587,372,1.776,381,1.749,382,1.749,383,1.749,384,1.736,385,1.749,386,1.749,387,1.749,388,1.587,389,1.736,390,2.216,391,1.749,392,1.749,393,1.763,394,1.749,398,1.736,399,1.749,400,1.749,401,1.749,402,1.763,403,1.763,404,1.749,405,1.763,406,1.763,407,1.776,408,1.647,409,1.749,410,1.749,423,1.71,425,1.79,427,1.749,857,4.516]],["t/114",[2,0.865,35,1.755,36,1.755,52,0.658,65,2.015,76,0.858,79,1.045,93,1.568,95,3.159,105,0.98,108,1.768,119,2.481,135,2.554,141,1.768,143,0.998,144,3.712,155,0.889,178,1.655,244,3.845,255,4.209,260,1.396,304,1.781,320,2.631,321,3.756,322,1.718,323,1.624,324,2.301,331,2.46,332,1.916,350,2.899,351,2.666,352,2.488,353,2.574,354,2.832,355,2.006,361,1.807,373,2.497,374,2.488,375,2.594,376,2.069,377,2.937,378,2.021,379,2.685,380,2.511,388,1.82,390,1.902,395,2.511,396,3.518,397,3.197,411,2.511,412,2.006,413,2.465,414,2.465,415,1.945,416,2.443,417,2.883,420,2.037,421,2.511,422,1.931,428,2.511,429,2.459,430,1.945,431,1.847,432,1.945,433,1.902,435,2.657,444,3.239,484,5.179,856,7.95,858,4.172,859,5.955,860,7.019,861,7.019]],["t/116",[0,2.985,2,0.882,8,1.02,28,2.14,37,1.403,53,3.826,65,2.076,69,3.484,77,2.199,90,2.138,145,4.374,195,1.605,200,2.153,528,5.02,862,4.701]],["t/118",[0,3.021,51,5.599,52,0.586,53,3.871,76,0.874,143,0.935,155,1.167,258,3.154,278,4.426,319,3.708,449,5.863,676,5.268]],["t/120",[2,1.059,8,1.224,29,2.68,35,1.893,36,1.893,86,4.1,105,1.528,133,1.496,143,1.109,147,1.059,167,2.344,222,2.639,322,1.852,323,1.751,324,1.948,336,2.856,408,2.942,426,2.986,606,5.73,609,6.607,620,6.954,621,7.327,622,6.501,623,8.545,624,8.248,625,8.069,626,7.79]],["t/122",[52,0.589,76,0.769,90,2.176,143,0.941,155,1.174,224,3.38,255,3.77,258,3.173,264,3.318,314,4.176]],["t/124",[14,1.13,27,3.101,28,1.881,29,2.787,35,1.531,36,1.531,37,1.233,65,1.153,74,1.063,93,2.057,104,2.439,105,1.372,110,2.529,111,1.303,132,1.091,141,1.542,159,1.46,160,1.839,167,2.194,174,1.201,178,1.652,200,2.175,207,2.354,222,1.477,243,2.792,250,1.994,260,2.139,322,1.498,323,1.416,324,1.576,326,2.671,331,2.689,332,2.232,333,2.318,334,1.736,335,2.651,336,2.404,337,2.765,338,2.61,339,2.591,340,1.736,341,2.597,342,2.591,343,1.736,344,2.604,345,2.765,346,2.786,347,2.786,348,2.61,349,1.749,356,1.776,357,1.723,358,2.318,359,1.697,360,2.232,361,2.104,362,1.776,363,1.79,364,1.723,365,1.749,366,2.671,367,2.671,368,2.571,369,1.622,370,1.647,371,1.587,372,1.776,381,1.749,382,1.749,383,1.749,384,1.736,385,1.749,386,1.749,387,1.749,388,1.587,389,1.736,390,2.216,391,1.749,392,1.749,393,1.763,394,1.749,398,1.736,399,1.749,400,1.749,401,1.749,402,1.763,403,1.763,404,1.749,405,1.763,406,1.763,407,1.776,408,1.647,409,1.749,410,1.749,423,1.71,425,1.79,427,1.749,857,4.516]],["t/126",[2,0.88,35,1.801,36,1.801,52,0.664,76,0.866,79,1.11,90,2.582,93,1.609,105,1.006,108,1.814,135,2.597,141,1.814,143,0.922,155,1.365,178,1.648,217,3.555,244,4.002,255,4.473,260,1.433,304,1.828,320,2.701,322,1.763,323,1.666,324,2.339,331,2.49,332,1.967,351,2.698,353,2.617,354,2.867,361,1.854,373,2.78,375,2.637,377,2.043,379,2.795,388,1.868,390,2.463,412,2.058,413,2.53,414,2.53,415,1.997,417,2.959,420,2.09,422,1.982,429,2.5,430,1.997,431,1.895,432,1.997,433,1.952,451,6.113,452,7.711,453,9.146,454,5.648,455,6.113,456,6.113,457,6.113,458,8.447,459,6.113,460,6.113,461,6.113,462,6.113,463,6.113,464,6.113,465,3.555,858,4.282]],["t/128",[0,2.973,2,0.879,8,1.016,28,2.135,37,1.4,53,3.811,65,1.71,69,3.47,76,0.866,77,2.19,90,2.129,145,4.357,195,1.598,200,2.144,258,3.573,528,5,862,4.683]],["t/130",[8,1.006,27,2.418,43,5.582,111,2.212,112,4.952,128,4.202,157,6.023,167,1.927,174,1.764,195,1.583,222,2.169,258,3.074,274,3.95,350,2.65,615,5.862,616,6.023,863,6.202,864,8.168,865,5.343,866,8.349,867,6.901,868,8.989,869,8.989,870,5.862]],["t/132",[8,1.279,14,1.64,25,6.822,46,5.685,53,3.731,75,4.101,87,7.141,94,4.324,114,3.905,119,2.129,132,0.987,212,4.732,215,4.895,431,2.338,578,5.65,790,6.822,855,5.022,871,6.935,872,8.886,873,6.557,874,8.886,875,5.518,876,7.54,877,6.822]],["t/134",[0,2.872,8,0.981,28,2.093,37,1.497,65,1.652,79,1.087,114,3.853,128,5.07,135,2.926,139,2.581,147,0.849,183,2.972,184,2.995,195,1.544,222,2.618,350,2.585,615,6.678,616,6.861,618,6.246,875,6.941]],["t/136",[1,5.783,8,1.042,132,1.035,167,1.997,486,3.103,606,4.88,619,6.24,878,6.24]],["t/138",[8,0.958,27,2.716,28,2.063,132,1.193,157,5.734,167,1.835,195,1.507,211,4.889,224,3.118,243,2.268,341,2.171,350,3.335,486,2.852,604,5.197,606,5.29,609,6.269,867,7.75,878,7.581,879,5.904,880,5.442,881,6.315,882,7.75,883,7.777,884,7.777,885,8.244,886,6.57,887,6.57,888,6.877,889,6.877,890,8.558,891,7.75,892,8.558,893,7.777]],["t/140",[8,1.224,43,5.089,44,6.954,104,2.035,132,0.91,145,3.934,150,3.262,159,1.218,167,2.434,168,2.959,178,1.121,195,1.443,206,4.103,210,3.602,222,1.978,240,4.515,243,2.172,278,3.934,341,2.079,350,2.416,368,2.289,426,2.686,475,4.438,477,6.292,504,5.838,507,6.292,532,3.331,586,6.875,598,4.515,606,5.525,622,4.872,696,6.547,849,4.976,862,4.228,866,6.586,867,6.292,871,5.211,894,8.94,895,8.196,896,8.196,897,7.447,898,4.682,899,8.94,900,9.58,901,6.954,902,5.654,903,7.447,904,8.196,905,7.447,906,7.447,907,6.954,908,8.196,909,8.196,910,8.196,911,8.196,912,8.196,913,8.196]],["t/142",[8,1.314,14,1.924,27,1.825,32,2.579,52,0.297,56,1.923,76,0.562,93,1.046,105,1.352,111,1.444,132,1.075,133,0.641,134,2.064,135,1.338,138,1.984,141,1.709,151,2.472,155,0.593,157,4.545,161,1.883,167,1.454,170,4.68,172,2.787,178,1.557,206,2.344,211,5.53,212,3.612,222,2.336,224,1.706,239,3.804,243,1.241,259,5.31,260,1.586,263,2.189,274,2.058,278,2.247,314,2.108,341,1.188,350,3.341,408,1.825,424,2.461,429,1.288,433,1.838,445,2.134,469,7.947,479,1.966,484,3.455,486,3.407,495,5.202,526,2.535,528,3.737,532,2.757,577,2.379,583,4.255,592,4.993,606,5.46,608,4.545,667,3.804,672,6.714,685,2.977,690,2.981,696,4.212,712,4.832,752,5.703,760,3.311,865,4.032,867,5.208,871,5.561,875,6.893,878,7.483,879,4.68,882,6.714,884,8.795,885,7.431,886,6.714,887,6.714,888,7.028,889,7.028,897,6.164,899,10.149,901,8.98,902,7.189,903,8.435,914,7.947,915,6.164,916,3.763,917,3.763,918,4.255,919,6.164,920,11.101,921,4.682,922,2.247,923,9.477,924,3.595,925,4.682,926,8.795,927,6.784,928,6.784,929,6.784,930,7.947,931,8.213,932,6.784,933,6.784,934,5.756,935,6.164,936,6.784,937,9.679,938,4.682,939,6.784,940,4.832,941,6.784,942,4.682,943,4.682,944,4.682,945,6.784,946,6.784,947,6.784,948,5.756,949,8.746,950,6.784,951,8.746,952,6.784,953,6.784,954,6.784,955,6.784,956,6.784,957,6.784,958,3.973,959,4.682,960,3.23,961,4.682,962,4.682,963,4.682,964,6.784,965,6.768,966,7.977,967,4.682,968,6.784,969,6.784,970,6.784,971,2.626,972,6.784,973,4.682,974,4.682,975,4.682,976,4.682,977,3.763,978,4.682,979,4.682,980,6.784,981,6.784]],["t/144",[2,0.566,8,1.189,27,3.119,43,7.042,44,9.017,86,2.971,94,4.903,105,1.256,111,1.244,128,3.704,132,0.999,167,2.506,178,1.53,195,1.395,211,4.527,222,1.912,250,1.186,321,2.783,323,1.833,336,2.07,341,1.483,350,3.063,368,2.692,422,1.608,426,2.164,516,3.915,577,2.969,586,7.56,592,4.088,603,3.473,606,5.28,682,3.915,690,2.568,696,6.452,733,4.958,855,2.844,857,4.312,865,6.426,866,9.371,878,7.244,882,6.084,885,7.977,886,6.084,887,6.084,888,6.368,894,7.201,898,3.338,900,9.157,905,5.31,906,5.31,926,7.201,931,6.724,934,6.724,982,3.164,983,9.157,984,11.08,985,5.31,986,5.167,987,10.391,988,7.924,989,7.924,990,7.924,991,10.16,992,5.844,993,5.844,994,7.924,995,8.76,996,7.924,997,7.924,998,5.844,999,5.844,1000,7.201,1001,7.924,1002,7.924,1003,10.077,1004,10.077,1005,5.844,1006,5.844,1007,5.844,1008,5.844,1009,5.844,1010,5.844]],["t/146",[2,0.85,8,0.983,74,1.526,114,3.861,119,2.105,132,0.976,133,1.202,143,0.891,147,0.85,151,3.201,157,7.273,167,1.883,200,2.075,341,2.229,350,2.589,408,2.363,606,4.603,844,7.983,865,5.222,870,5.729,878,5.886,879,7.072,889,8.238,893,9.315,923,7.454,1011,7.983,1012,8.785,1013,4.275,1014,8.785,1015,8.785,1016,8.785,1017,4.839,1018,7.454]],["t/148",[8,0.927,53,3.478,58,3.061,75,3.823,105,1.383,128,3.872,132,0.92,192,4.088,215,4.563,226,2.833,278,3.976,341,2.102,350,3.234,603,4.924,606,4.34,620,5.267,865,6.523,870,5.402,878,7.096,882,7.602,885,8.907,886,7.602,887,7.602,888,7.957,889,6.657,891,6.359,915,7.527,986,5.402,1019,5.9,1020,9.323,1021,7.527,1022,8.284,1023,5.9,1024,8.284,1025,7.306,1026,8.284,1027,8.284,1028,8.997,1029,8.284,1030,8.284]],["t/150",[8,0.985,27,2.368,65,1.933,167,1.887,168,3.177,178,1.486,200,2.079,304,2.233,324,2.642,379,2.282,437,4.848,622,5.232,624,6.269,867,7.879,891,6.757,901,7.469,940,6.269,1031,10.263,1032,8.802,1033,10.263,1034,8.802,1035,8.802,1036,8.802,1037,8.802,1038,8.802,1039,10.263,1040,8.802,1041,8.802,1042,8.802]],["t/152",[8,1.228,28,1.929,75,3.533,76,0.634,80,3.111,132,0.85,178,1.461,195,1.348,206,4.725,210,3.364,212,5.026,213,6.152,215,4.217,222,1.847,226,2.618,241,5.453,258,3.228,341,2.395,350,3.149,426,2.09,448,4.648,450,4.648,482,4.753,592,3.949,603,4.55,606,4.011,672,5.877,776,8.009,865,6.522,878,6.324,882,7.246,885,8.202,886,7.246,887,7.246,907,6.496,930,6.956,986,4.992,1018,6.496,1025,8.096,1043,10.233,1044,11.528,1045,5.66,1046,7.655,1047,9.439,1048,5.453,1049,7.655,1050,6.956,1051,8.577,1052,7.655,1053,7.655,1054,8.009,1055,6.956,1056,7.655,1057,8.577,1058,9.439,1059,7.655,1060,9.439,1061,7.655,1062,7.655,1063,6.496,1064,7.655,1065,6.956,1066,4.753,1067,6.496,1068,6.956]],["t/154",[8,1.147,32,4.839,58,3.169,59,6.061,75,4.054,87,7.06,132,0.976,135,2.51,212,4.678,222,2.12,240,4.839,241,6.257,341,2.229,448,5.334,479,3.688,486,2.927,620,5.586,696,5.455,878,6.869,891,6.744,935,7.983,1054,8.699,1055,7.983,1057,7.983,1069,10.252,1070,7.87,1071,8.785,1072,9.315,1073,8.785,1074,7.983,1075,4.532]],["t/156",[8,1.205,23,6.916,58,2.661,111,1.832,135,2.459,200,2.033,222,2.597,319,3.461,341,2.183,350,2.537,426,2.939,437,4.741,517,5.612,603,6.02,620,5.472,865,5.115,870,5.612,1018,8.594,1025,7.473,1028,7.82,1054,9.743,1070,6.607,1076,8.606,1077,6.44,1078,8.606,1079,8.606,1080,8.606,1081,8.606,1082,8.606,1083,8.606,1084,7.302,1085,8.606,1086,8.606,1087,8.606]],["t/158",[8,0.927,80,3.367,101,3.923,104,2.057,105,1.157,135,2.367,215,4.563,222,2.389,260,1.647,341,2.512,426,2.892,437,4.563,504,8.196,517,5.402,603,4.924,620,5.267,865,4.924,870,5.402,986,5.402,991,7.527,1000,7.527,1025,7.306,1070,6.359,1072,10.609,1074,7.527,1077,6.296,1088,9.902,1089,8.284,1090,8.284,1091,8.284,1092,7.029,1093,8.284,1094,10.974,1095,8.284,1096,8.284,1097,8.284,1098,8.284,1099,10.591,1100,7.527,1101,8.997,1102,7.029,1103,7.029,1104,8.284]],["t/160",[8,0.998,59,7.984,111,2.326,167,1.912,174,1.75,195,1.571,206,4.466,274,3.92,341,2.624,517,7.123,766,5.817,1025,6.582,1105,8.106,1106,6.848,1107,8.106,1108,7.632,1109,8.92,1110,8.92,1111,8.92]],["t/162",[0,2.997,8,1.175,37,1.406,65,1.723,128,4.906,132,1.016,139,2.177,195,1.611,222,2.208,350,2.697,615,6.844,616,7.032]],["t/164",[8,1.172,37,1.221,90,2.138,132,1.012,222,2.199,241,6.491,447,8.885,448,5.533,620,5.794,1112,8.281,1113,10.471,1114,10.471,1115,9.113,1116,9.113,1117,9.113]],["t/166",[8,1.228,153,3.565,172,3.707,195,1.589,336,2.996,606,5.751,607,6.976,608,6.976,878,6.976,1112,9.462]],["t/168",[1,5.604,8,1.01,14,1.666,29,2.273,43,5.604,46,4.971,132,1.157,134,2.745,192,4.453,195,1.589,224,3.288,238,4.805,337,2.93,345,2.54,505,6.046,604,6.322,619,6.046,689,6.428,690,3.966,982,4.886]],["t/170",[8,0.991,14,1.276,27,3.046,28,1.413,29,1.742,35,1.729,36,1.729,93,2.182,104,2.425,110,2.514,128,3.232,132,1.144,159,1.452,160,1.992,167,2.208,178,1.655,215,3.809,222,1.668,243,2.589,260,1.942,322,1.692,323,1.599,331,2.662,332,2.417,333,2.77,334,1.961,336,1.806,338,1.961,339,2.749,340,1.961,341,2.478,342,2.749,343,1.961,344,2.589,345,2.749,346,2.77,347,2.77,348,2.77,349,1.976,357,1.946,358,2.511,359,1.916,360,2.417,361,2.279,364,1.946,365,1.976,369,1.833,370,1.86,371,1.793,381,1.976,382,1.976,383,1.976,384,1.961,385,1.976,386,1.976,387,1.976,388,1.793,389,1.961,390,2.4,391,1.976,392,1.976,393,1.991,394,1.976,398,1.961,399,1.976,400,1.976,401,1.976,402,1.991,403,1.991,404,1.976,405,1.991,406,1.991,407,2.006,408,1.86,409,1.976,410,1.976,650,5.308,653,5.556,654,5.308,655,5.867,656,5.867,1118,4.198]],["t/172",[2,0.561,8,1.075,14,1.069,27,2.584,28,1.184,29,1.459,35,1.449,36,1.449,43,3.597,93,2.245,94,2.819,104,2.385,105,1.403,110,2.473,111,1.677,128,3.682,132,1.116,158,2.305,159,1.428,160,1.772,167,2.059,178,1.656,200,1.368,207,2.302,222,1.901,224,2.111,238,3.635,241,4.126,243,2.86,250,1.95,260,2.146,319,2.329,322,1.418,323,1.822,331,2.592,332,2.151,333,2.538,334,1.643,336,1.513,337,1.63,338,1.643,339,2.519,340,1.643,341,2.437,342,2.519,343,1.643,344,2.546,345,2.703,346,2.724,347,2.724,348,2.538,349,1.655,357,1.63,358,2.234,359,1.606,360,2.151,361,2.028,364,1.63,365,1.655,366,2.787,367,2.787,368,2.961,369,1.535,370,1.558,371,1.502,381,1.655,382,1.655,383,1.655,384,1.643,385,1.655,386,1.655,387,1.655,388,1.502,389,1.643,390,2.135,391,1.655,392,1.655,393,1.668,394,1.655,398,1.643,399,1.655,400,1.655,401,1.655,402,1.668,404,1.655,406,1.668,408,1.558,409,1.655,410,1.655,422,1.594,423,1.618,426,1.582,430,1.606,586,5.137,606,4.127,650,4.447,653,4.655,654,4.447,655,4.915,656,4.915,733,4.915,766,3.777,862,2.988,865,3.443,866,4.655,907,7.595,985,5.264,986,3.777,1119,5.793,1120,5.793,1121,7.877,1122,10.789,1123,7.877,1124,5.793,1125,5.793,1126,5.793,1127,8.951,1128,5.793,1129,4.655,1130,5.793,1131,5.793,1132,5.793,1133,5.793,1134,5.793,1135,5.793,1136,5.793,1137,5.793,1138,5.793]],["t/174",[2,1.003,8,1.002,132,1.152,133,1.225,134,2.724,147,1.003,168,3.233,195,1.577,227,5.116,240,4.933,258,3.062,263,4.186,278,4.298,450,5.437,575,5.022,578,5.694,615,5.839,616,6,863,6.178,864,8.137,873,6.607,1139,6.607,1140,7.598,1141,7.598,1142,4.692]],["t/176",[32,4.904,39,4.332,52,0.565,58,2.752,76,0.738,90,2.089,103,3.867,132,1.148,135,3.119,158,3.543,195,1.568,227,5.902,260,1.771,261,6.835,263,4.162,293,3.867,479,3.738,504,6.341,592,4.593,676,5.086,690,3.912,1118,5.406,1139,6.569,1143,8.09,1144,8.09,1145,8.903,1146,5.965]],["t/178",[2,1.045,8,0.97,28,1.772,39,4.95,53,4.271,65,1.633,77,2.092,93,1.937,105,1.211,119,2.077,124,3.487,128,4.053,143,1.032,147,1.078,195,1.527,215,4.776,250,1.76,263,5.047,278,4.883,285,2.516,445,4.636,450,5.264,500,6.656,502,5.654,621,5.809,871,5.513,883,7.878,931,7.357,1147,8.67,1148,7.878,1149,6.967,1150,6.816]],["t/180",[41,4.596,132,1.178,450,5.655,575,5.223,578,5.922,873,6.872,1151,7.485]],["t/182",[0,2.939,37,1.467,65,1.69,79,1.163,114,3.943,128,4.851,139,2.469,147,1.005,183,3.012,184,3.035,195,1.58,215,4.942,222,2.504,875,6.992]],["t/184",[0,3.069,86,3.513,133,1.282,143,0.951,676,5.353]],["t/186",[2,1.066,8,1.233,29,2.703,35,1.94,36,1.94,105,1.538,147,1.066,167,2.361,222,2.658,322,1.899,323,1.795,324,1.997,336,2.877,408,2.963,426,3.007,606,5.771,609,6.664,620,7.003,621,7.38,622,6.547,623,8.577,624,8.279,625,8.127,626,7.845]],["t/188",[52,0.667,76,0.87,79,0.972,143,0.928,178,1.436,224,3.334,244,3.897,255,4.265,314,4.118,478,2.828,856,8.057]],["t/190",[14,1.13,27,3.101,28,1.881,29,2.787,35,1.531,36,1.531,37,1.233,74,1.063,93,2.057,104,2.439,105,1.372,110,2.529,111,1.303,132,1.091,141,1.542,159,1.46,160,1.839,167,2.194,174,1.201,178,1.652,200,2.175,207,2.354,222,1.477,243,2.792,250,1.994,260,2.139,285,1.776,322,1.498,323,1.416,324,1.576,326,2.671,331,2.689,332,2.232,333,2.318,334,1.736,335,2.651,336,2.404,337,2.765,338,2.61,339,2.591,340,1.736,341,2.597,342,2.591,343,1.736,344,2.604,345,2.765,346,2.786,347,2.786,348,2.61,349,1.749,356,1.776,357,1.723,358,2.318,359,1.697,360,2.232,361,2.104,362,1.776,363,1.79,364,1.723,365,1.749,366,2.671,367,2.671,368,2.571,369,1.622,370,1.647,371,1.587,372,1.776,381,1.749,382,1.749,383,1.749,384,1.736,385,1.749,386,1.749,387,1.749,388,1.587,389,1.736,390,2.216,391,1.749,392,1.749,393,1.763,394,1.749,398,1.736,399,1.749,400,1.749,401,1.749,402,1.763,403,1.763,404,1.749,405,1.763,406,1.763,407,1.776,408,1.647,409,1.749,410,1.749,423,1.71,425,1.79,427,1.749,857,4.516]],["t/192",[2,0.884,28,1.484,35,1.816,36,1.816,52,0.635,76,0.828,79,1.061,93,2.04,105,1.014,108,1.829,133,0.993,141,1.829,143,0.736,155,0.919,178,1.657,244,3.391,255,3.711,260,1.444,285,3.2,304,1.842,322,1.777,323,1.679,324,2.351,331,2.499,351,2.708,353,2.63,354,2.877,355,2.855,361,2.351,369,1.924,370,1.953,371,1.882,373,2.551,375,2.65,376,2.14,377,2.973,378,2.63,379,1.882,388,1.882,412,2.61,415,2.012,417,2.982,420,2.107,422,1.997,429,2.512,430,2.012,431,1.91,432,2.012,433,1.968,478,2.244,618,5.171,658,2.597,856,7.011,858,4.315,859,6.16,1152,2.67,1153,2.67,1154,3.583,1155,5.357,1156,6.597,1157,2.67,1158,2.67,1159,3.675,1160,2.67,1161,2.645,1162,2.67,1163,2.86,1164,2.67,1165,2.67,1166,6.597]],["t/194",[2,0.869,28,1.443,35,1.766,36,1.766,52,0.68,76,0.888,79,1.102,93,2.005,105,0.986,108,1.779,116,5.328,133,0.966,141,1.779,143,0.91,155,0.894,178,1.657,224,2.573,244,3.663,255,4.218,260,1.404,285,2.604,304,1.791,314,3.178,322,1.728,323,1.633,324,2.31,331,2.467,351,2.673,353,2.584,354,2.84,355,2.819,361,2.31,369,1.872,370,1.9,371,1.831,373,2.506,375,2.604,376,2.081,377,2.943,378,2.584,379,1.831,388,1.831,412,2.564,415,1.957,417,2.901,420,2.049,422,1.943,429,2.469,430,1.957,431,1.858,432,1.957,433,1.914,618,5.03,658,2.526,856,7.968,858,4.197,859,5.992,1152,2.597,1153,2.597,1154,3.485,1155,5.21,1156,6.416,1157,2.597,1158,2.597,1159,3.628,1160,2.597,1161,2.573,1162,2.597,1164,2.597,1165,2.597,1166,6.416,1167,7.061,1168,4.731]],["t/196",[0,2.872,2,0.849,28,1.792,37,1.497,52,0.689,56,4.206,65,1.652,74,1.942,76,0.849,79,0.931,86,3.287,92,2.882,97,2.897,114,4.5,135,2.506,139,2.581,195,1.544,250,1.78,285,2.972,467,3.765,577,4.455,1169,6.678,1170,5.324]],["t/198",[0,3.399,2,1.06,8,1.225,38,6.62,77,2.504,79,0.953,132,1.153,135,2.965,139,2.135,147,0.869,159,1.333,204,4.628,224,3.269,225,2.751,285,3.012,501,3.767,551,4.558,612,8.153]],["t/200",[8,0.901,28,1.646,47,4.092,52,0.618,65,1.517,69,3.079,74,1.889,76,0.901,79,0.855,84,2.47,90,1.889,91,3.344,92,3.059,104,2,114,5.073,122,3.458,132,0.895,133,1.523,138,2.355,143,1.161,187,3.059,191,3.814,218,4.89,285,3.321,287,6.834,292,5.556,316,2.855,319,3.239,445,3.67,450,4.89,577,4.092,607,7.667,608,7.667,617,5.942,849,5.911,1170,4.89,1171,5.252,1172,8.054,1173,4.289]],["t/202",[14,1.566,17,3.817,52,0.702,54,3.149,56,3.483,58,2.622,72,3.658,74,1.961,76,0.887,79,1.066,83,3.119,90,2.356,92,3.01,94,4.127,97,2.802,111,1.805,130,7.196,132,0.942,133,1.16,139,2.018,143,0.86,151,3.09,153,2.755,165,3.307,175,3.434,187,2.665,195,1.493,204,4.375,224,3.09,271,3.09,278,4.07,293,3.683,467,3.641,696,5.266,879,5.85,902,5.85,1174,7.706,1175,7.706,1176,7.706,1177,7.196,1178,6.815]],["t/204",[2,0.946,8,1.094,13,3.113,37,0.928,52,0.725,72,2.368,74,1.203,76,0.903,77,2.358,79,1.227,90,2.293,92,2.9,97,2.288,98,6.904,105,1.238,124,2.785,133,1.212,134,2.107,138,2.025,139,1.647,143,1.045,147,1.031,150,2.756,153,2.249,155,1.47,158,2.756,159,1.583,160,1.558,161,2.785,162,3.007,166,2.785,168,2.5,172,2.844,173,1.979,174,1.358,178,1.652,179,2.675,180,2.696,183,2.009,184,2.592,188,2.176,189,2.107,191,3.279,195,1.561,209,3.68,225,2.124,226,2.368,255,4.188,258,2.368,314,3.117,478,2.141,481,3.628,501,2.907,503,3.195,679,3.629,922,3.324,1013,3.369,1179,3.628,1180,7.348,1181,6.924]],["t/206",[37,1.238,52,0.587,72,3.16,74,1.605,76,0.766,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/208",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/211",[52,0.567,56,3.664,69,3.41,76,0.857,79,0.947,90,2.093,98,6.93,105,1.246,133,1.22,143,0.905,155,1.309,178,1.565,224,3.25,255,4.203,271,3.25,454,5.724,478,2.758,1180,7.135,1182,8.106]],["t/213",[2,0.683,14,0.913,27,3.012,28,1.011,29,2.781,35,1.237,36,1.237,37,1.102,52,0.522,76,0.682,79,0.874,93,2.119,104,2.227,105,1.253,108,1.246,110,2.309,111,1.502,132,0.996,133,0.677,141,1.777,155,0.626,159,1.333,160,1.588,167,1.923,174,0.971,178,1.659,200,1.944,207,1.971,222,1.703,243,2.839,244,2.62,250,1.67,260,2.063,264,1.769,285,2.945,304,1.255,322,1.211,323,1.144,324,1.817,325,1.458,326,2.945,327,2.707,328,2.707,329,2.707,330,2.707,331,2.679,332,1.927,333,2.001,334,1.403,335,2.369,336,2.149,337,2.315,338,2.333,339,2.315,340,1.403,341,2.406,342,2.315,343,1.403,344,2.378,345,2.524,346,2.544,347,2.544,348,2.333,349,1.414,351,2.23,353,2.032,354,2.369,355,2.351,356,1.436,357,1.392,358,2.001,359,1.371,360,1.927,361,2.309,362,1.436,363,1.447,364,1.392,365,1.414,366,2.387,367,2.387,368,2.298,369,1.87,370,1.898,371,1.83,372,1.436,373,1.971,375,2.048,376,1.458,377,2.544,378,2.032,379,1.283,381,1.414,382,1.414,383,1.414,384,1.403,385,1.414,386,1.414,387,1.414,388,1.83,389,1.403,390,1.913,391,1.414,392,1.414,393,1.424,394,1.414,398,1.403,399,1.414,400,1.414,401,1.414,402,1.424,403,1.424,404,1.414,405,1.424,406,1.424,407,1.436,408,1.331,409,1.414,410,1.414,412,2.017,415,1.371,417,2.032,420,2.048,422,1.941,423,1.382,424,1.392,425,2.064,426,1.351,427,1.414,429,1.941,430,1.371,431,1.302,432,1.371,433,1.341,465,2.441,658,1.769,1152,1.82,1153,1.82,1154,2.441,1157,1.82,1158,1.82,1159,3.026,1160,1.82,1161,1.803,1162,1.82,1163,1.949,1164,1.82,1165,1.82,1180,5.675,1183,6.98,1184,4.947,1185,4.947,1186,4.947,1187,4.947,1188,4.947,1189,4.947,1190,4.947]],["t/215",[2,0.695,14,0.936,27,3.023,28,1.289,29,2.793,35,1.268,36,1.268,37,1.117,52,0.621,65,1.926,67,1.705,69,1.221,76,0.793,79,1.017,93,2.027,95,1.438,97,1.055,104,2.252,105,1.267,108,1.277,110,2.335,111,1.529,119,1.998,132,1.008,135,2.053,141,1.809,143,0.324,155,0.642,159,1.348,160,1.616,167,1.944,174,0.995,178,1.662,192,1.576,200,2.065,207,1.998,222,1.733,243,2.855,244,2.909,250,1.774,255,3.891,260,2.077,264,1.142,304,1.287,320,1.901,321,2.93,322,1.241,323,1.173,324,1.849,325,1.495,326,2.967,327,2.738,328,2.738,329,2.738,330,2.738,331,2.693,332,2.277,333,2.037,334,1.438,335,2.402,336,2.178,337,2.347,338,2.365,339,2.347,340,1.438,341,2.429,342,2.347,343,1.438,344,2.404,345,2.553,346,2.572,347,2.572,348,2.365,349,1.449,350,2.458,351,2.26,352,1.798,353,2.068,354,2.612,355,1.449,356,1.472,357,1.427,358,2.037,359,1.406,360,1.961,361,2.147,362,1.472,363,1.483,364,1.427,365,1.449,366,2.42,367,2.42,368,2.329,369,1.344,370,1.364,371,1.315,372,1.472,373,2.006,374,1.798,375,2.084,376,1.495,377,2.572,378,1.46,379,2.352,380,1.814,381,1.449,382,1.449,383,1.449,384,1.438,385,1.449,386,1.449,387,1.449,388,1.862,389,1.438,390,2.26,391,1.449,392,1.449,393,1.46,394,1.449,395,1.814,396,2.983,397,2.569,398,1.438,399,1.449,400,1.449,401,1.449,402,1.46,403,1.46,404,1.449,405,1.46,406,1.46,407,1.472,408,1.364,409,1.449,410,1.449,411,1.814,412,1.449,413,1.781,414,1.781,415,1.406,416,1.766,417,1.312,420,1.472,421,1.814,422,1.976,423,1.416,424,1.427,425,2.101,426,1.385,427,1.449,428,1.814,429,1.976,430,1.406,431,1.334,432,1.406,433,1.375,435,1.209,436,1.831,444,3.849,454,5.12,858,3.015,1180,2.204,1183,2.71,1191,3.225,1192,2.71,1193,3.149,1194,4.865,1195,2.14,1196,2.902,1197,1.513]],["t/217",[0,2.968,37,1.473,52,0.663,65,1.707,92,3.231,114,4.586,139,2.483,147,1.064,195,1.595,1171,6.805]],["t/219",[47,4.209,52,0.673,56,3.403,57,5.64,74,1.949,76,0.687,83,3.047,86,3.105,92,3.088,98,5.55,105,1.157,116,4.031,132,1.1,133,1.355,139,1.971,143,0.84,153,2.691,164,4.825,165,3.861,204,4.273,268,3.357,271,3.018,318,8.402,478,3.061,482,5.144,507,6.359,571,4.273,734,6.112,1171,6.457,1180,6.831,1198,4.088,1199,7.527,1200,8.284,1201,9.902,1202,9.902,1203,8.284,1204,8.997,1205,7.527,1206,8.284,1207,8.284,1208,8.284,1209,8.284,1210,8.284,1211,5.267,1212,8.284,1213,7.029,1214,5.715,1215,4.825]],["t/221",[2,0.794,8,0.626,13,1.08,14,0.909,27,3.009,28,1.006,29,2.779,35,1.231,36,1.231,37,1.154,41,1.518,52,0.651,65,1.783,67,1.378,69,1.881,72,0.601,74,0.712,76,0.829,77,0.99,79,1.095,83,0.646,90,1.443,92,1.864,93,2.032,97,1.016,104,2.222,105,1.289,108,1.24,110,2.304,111,1.497,114,1.352,119,1.769,124,0.707,132,0.994,133,0.765,134,0.936,135,1.758,138,0.514,139,0.732,141,1.859,143,0.624,147,0.596,150,0.699,151,0.64,153,0.571,155,1.151,158,0.699,159,1.422,160,1.661,161,0.707,162,0.763,166,0.966,167,1.918,168,0.634,169,1.384,172,0.722,173,0.502,174,1.097,178,1.663,179,0.928,180,0.936,183,0.51,184,0.9,187,2.812,188,0.552,189,0.535,191,0.832,195,0.542,200,2.035,207,1.965,209,1.277,222,1.697,225,0.943,226,0.601,243,2.836,244,2.46,250,1.846,255,3.847,258,0.601,260,2.061,264,3.011,285,1.785,304,1.249,314,1.384,321,1.964,322,1.205,323,1.138,324,1.81,325,1.451,326,2.941,327,2.701,328,2.701,329,2.701,330,2.701,331,2.676,332,2.174,333,1.994,334,1.396,335,2.362,336,2.143,337,2.308,338,2.326,339,2.308,340,1.396,341,2.401,342,2.308,343,1.396,344,2.372,345,2.518,346,2.538,347,2.538,348,2.326,349,1.406,350,2.176,351,2.223,352,1.454,353,2.025,354,2.531,355,1.758,356,1.428,357,1.385,358,1.994,359,1.364,360,1.92,361,2.167,362,1.428,363,1.439,364,1.385,365,1.406,366,2.38,367,2.38,368,2.291,369,1.482,370,1.504,371,1.45,372,1.428,373,1.964,374,1.454,375,2.04,376,1.451,377,2.538,378,1.61,379,2.183,380,1.467,381,1.406,382,1.406,383,1.406,384,1.396,385,1.406,386,1.406,387,1.406,388,1.823,389,1.396,390,2.158,391,1.406,392,1.406,393,1.417,394,1.406,395,1.467,396,2.641,397,2.2,398,1.396,399,1.406,400,1.406,401,1.406,402,1.417,403,1.417,404,1.406,405,1.417,406,1.417,407,1.428,408,1.324,409,1.406,410,1.406,411,1.467,412,1.598,413,1.44,414,1.44,415,1.364,416,1.428,417,1.263,420,1.623,421,1.467,422,1.934,423,1.374,424,1.385,425,2.056,426,1.344,427,1.406,428,1.467,429,1.934,430,1.364,431,1.295,432,1.364,433,1.334,435,1.164,436,1.48,443,3.148,444,3.549,454,4.836,465,0.867,478,0.543,501,0.738,503,0.811,526,0.952,532,0.714,534,4.888,658,0.629,679,1.523,760,1.164,858,2.438,922,0.844,971,0.986,1013,0.855,1142,0.921,1152,0.646,1153,0.646,1154,0.867,1157,0.646,1158,0.646,1159,1.508,1160,0.646,1161,0.64,1162,0.646,1163,0.692,1164,0.646,1165,0.646,1179,1.612,1191,2.608,1192,1.491,1193,1.091,1194,3.473,1195,1.178,1196,1.597,1197,2.331,1216,5.349,1217,1.757,1218,1.757,1219,1.597,1220,1.757,1221,4.472,1222,1.178,1223,1.597,1224,1.146,1225,1.597,1226,1.597,1227,1.178,1228,1.597,1229,0.986,1230,1.091]],["t/223",[37,1.238,52,0.587,72,3.16,74,1.605,76,0.766,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/225",[37,1.245,74,1.615,76,0.77,92,2.616,105,1.298,114,4.085,139,2.212,178,1.272,679,3.452]],["t/227",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/230",[2,0.67,8,0.539,14,0.89,27,3,28,0.985,29,2.769,32,2.654,35,1.205,36,1.205,37,1.086,52,0.515,74,0.837,76,0.672,79,0.861,90,1.625,93,2.097,104,2.201,105,1.238,108,1.214,110,2.281,111,1.474,116,4.756,132,0.985,133,0.659,137,2.069,141,1.744,143,0.489,155,0.61,159,1.317,160,1.558,167,1.9,174,0.945,178,1.659,187,2.95,200,1.915,207,1.942,222,1.671,224,1.756,243,2.823,244,2.572,250,1.645,255,1.958,260,2.049,264,2.477,278,2.313,285,1.398,304,1.222,322,1.179,323,1.115,324,1.783,325,1.42,326,2.922,327,2.675,328,2.675,329,2.675,330,2.675,331,2.663,332,1.891,333,1.964,334,1.366,335,2.334,336,2.117,337,2.281,338,2.299,339,2.281,340,1.366,341,2.382,342,2.281,343,1.366,344,2.349,345,2.494,346,2.513,347,2.513,348,2.299,349,1.377,351,2.197,353,1.994,354,2.334,355,2.317,356,1.398,357,1.356,358,1.964,359,1.336,360,1.891,361,2.281,362,1.398,363,1.409,364,1.356,365,1.377,366,2.353,367,2.353,368,2.264,369,1.836,370,1.863,371,1.796,372,1.398,373,1.934,375,2.01,376,1.42,377,2.513,378,1.994,379,1.249,381,1.377,382,1.377,383,1.377,384,1.366,385,1.377,386,1.377,387,1.377,388,1.796,389,1.366,390,1.877,391,1.377,392,1.377,393,1.388,394,1.377,398,1.366,399,1.377,400,1.377,401,1.377,402,1.388,403,1.388,404,1.377,405,1.388,406,1.388,407,1.398,408,1.296,409,1.377,410,1.377,412,1.979,415,1.336,417,1.979,420,2.01,422,1.905,423,1.346,424,1.356,425,2.025,426,1.316,427,1.377,429,1.905,430,1.336,431,1.268,432,1.336,433,1.306,454,2.525,465,2.378,658,1.724,760,1.824,1152,1.772,1153,1.772,1154,2.378,1157,1.772,1158,1.772,1159,2.982,1160,1.772,1161,1.756,1162,1.772,1164,1.772,1165,1.772,1168,3.228,1213,4.089,1215,2.807,1221,8.531,1222,3.228,1223,4.378,1224,3.142,1225,4.378,1226,4.378,1227,3.228,1228,4.378,1231,4.778,1232,4.378,1233,4.378,1234,4.819]],["t/232",[2,0.664,8,0.532,14,0.878,27,2.993,28,0.972,29,2.762,35,1.189,36,1.189,37,1.078,52,0.593,65,1.889,67,1.598,69,1.817,76,0.774,79,0.992,93,1.968,104,2.187,105,1.23,108,1.198,110,2.267,111,1.46,116,2.313,119,2.11,132,0.978,133,0.65,135,1.96,141,1.728,143,0.482,155,0.602,159,1.309,160,1.543,167,1.888,174,0.933,178,1.66,200,1.901,207,1.928,222,1.655,243,2.815,244,3.468,250,1.633,255,3.795,260,2.042,264,1.701,304,1.206,320,1.782,322,1.164,323,1.1,324,1.766,325,1.401,326,2.911,327,2.658,328,2.658,329,2.658,330,2.658,331,2.656,332,2.197,333,1.945,334,1.348,335,2.317,336,2.102,337,2.264,338,2.282,339,2.264,340,1.348,341,2.369,342,2.264,343,1.348,344,2.335,345,2.479,346,2.498,347,2.498,348,2.282,349,1.359,350,2.372,351,2.181,352,1.685,353,1.975,354,2.536,355,1.359,356,1.38,357,1.338,358,1.945,359,1.318,360,1.873,361,2.071,362,1.38,363,1.39,364,1.338,365,1.359,366,2.335,367,2.335,368,2.247,369,1.26,370,1.279,371,1.233,372,1.38,373,1.916,374,1.685,375,1.99,376,1.401,377,2.498,378,1.369,379,2.284,380,1.701,381,1.359,382,1.359,383,1.359,384,1.348,385,1.359,386,1.359,387,1.359,388,1.778,389,1.348,390,2.181,391,1.359,392,1.359,393,1.369,394,1.359,395,1.701,396,2.878,397,2.453,398,1.348,399,1.359,400,1.359,401,1.359,402,1.369,403,1.369,404,1.359,405,1.369,406,1.369,407,1.38,408,1.279,409,1.359,410,1.359,411,1.701,412,1.359,413,1.67,414,1.67,415,1.318,416,1.655,417,1.953,420,1.38,421,1.701,422,1.887,423,1.328,424,1.338,425,2.006,426,1.298,427,1.359,428,1.701,429,1.887,430,1.318,431,1.251,432,1.318,433,1.289,436,1.716,444,4.49,454,5.098,532,1.932,858,2.826,1191,3.023,1192,4.034,1197,2.252,1235,2.952]],["t/234",[0,2.968,37,1.473,52,0.663,65,1.707,74,1.813,92,3.231,114,4.586,139,2.483,147,1.064,195,1.595]],["t/236",[2,0.849,8,0.981,52,0.689,56,3.602,65,1.652,72,3.502,74,1.779,76,0.899,77,2.471,79,0.931,132,1.138,133,1.484,138,2.995,139,2.086,143,1.134,147,0.849,153,2.848,168,3.165,225,3.14,292,6.049,344,2.324,482,5.445,1236,7.046,1237,6.732]],["t/238",[2,1.018,8,1.123,13,3.227,14,1.696,37,0.982,52,0.727,68,7.404,72,2.506,74,1.596,76,0.916,77,2.421,79,1.174,92,2.062,97,2.421,105,1.283,124,2.947,133,1.373,134,2.23,138,2.143,139,1.744,143,1.099,147,1.049,150,2.917,153,2.381,155,1.459,158,2.917,159,1.563,160,1.649,161,2.947,162,3.183,166,2.887,168,2.646,172,3.01,173,2.094,174,1.438,178,1.637,179,2.212,180,2.23,183,2.127,184,2.687,188,2.303,189,2.23,195,1.618,209,3.815,225,2.248,226,2.506,242,2.574,250,1.487,255,4.275,258,2.506,314,3.299,481,3.84,501,3.077,503,3.382,679,3.726,922,3.518,1013,3.566,1179,3.84]],["t/240",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/242",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/245",[2,0.651,8,0.518,14,0.855,27,2.981,28,1.375,29,2.749,35,1.158,36,1.158,37,1.062,52,0.632,56,1.902,65,1.874,67,1.556,68,3.417,69,1.77,76,0.799,79,1.024,83,1.703,93,1.944,104,2.16,105,1.215,108,1.166,110,2.24,111,1.433,119,1.899,132,0.967,133,0.634,135,1.923,138,1.354,141,1.695,143,0.804,155,0.586,159,1.293,160,1.514,167,1.865,174,0.909,178,1.659,195,0.816,200,2.056,207,1.899,222,1.624,242,1.627,243,2.798,244,3.58,250,1.766,255,4.143,260,2.027,264,3.112,304,1.175,321,3.246,322,1.134,323,1.071,324,1.732,325,1.365,326,2.887,327,2.626,328,2.626,329,2.626,330,2.626,331,2.64,332,2.164,333,1.908,334,1.313,335,2.283,336,2.07,337,2.231,338,2.248,339,2.231,340,1.313,341,2.345,342,2.231,343,1.313,344,2.306,345,2.449,346,2.467,347,2.467,348,2.248,349,1.323,350,2.336,351,2.148,352,1.641,353,1.938,354,2.505,355,1.323,356,1.344,357,1.303,358,1.908,359,1.284,360,1.838,361,2.04,362,1.344,363,1.354,364,1.303,365,1.323,366,2.3,367,2.3,368,2.214,369,1.228,370,1.246,371,1.201,372,1.344,373,1.879,374,1.641,375,1.953,376,1.365,377,2.467,378,1.334,379,2.256,380,1.656,381,1.323,382,1.323,383,1.323,384,1.313,385,1.323,386,1.323,387,1.323,388,1.745,389,1.313,390,2.148,391,1.323,392,1.323,393,1.334,394,1.323,395,1.656,396,2.835,397,2.407,398,1.313,399,1.323,400,1.323,401,1.323,402,1.334,403,1.334,404,1.323,405,1.334,406,1.334,407,1.344,408,1.246,409,1.323,410,1.323,411,1.656,412,1.323,413,1.627,414,1.627,415,1.284,416,1.612,417,1.902,420,1.344,421,1.656,422,1.851,423,1.293,424,1.303,425,1.968,426,1.265,427,1.323,428,1.656,429,1.851,430,1.284,431,1.219,432,1.284,433,1.255,435,1.753,436,1.672,478,1.432,532,1.882,855,2.253,858,2.753,1169,3.02,1238,8.65,1239,2.945,1240,3.93,1241,4.208]],["t/247",[2,0.701,14,0.947,27,3.028,28,1.301,29,2.798,32,1.784,35,1.282,36,1.282,37,1.124,52,0.579,65,1.656,67,1.088,76,0.755,79,0.997,80,1.316,93,2.097,104,2.263,105,1.273,108,1.292,110,2.346,111,1.541,116,4.083,119,1.525,132,1.013,133,0.443,135,1.465,138,0.947,141,1.823,143,0.52,155,0.806,159,1.355,160,1.629,166,1.018,167,1.954,174,1.006,178,1.662,200,1.982,207,2.01,222,1.747,242,1.138,243,2.861,244,3.264,250,1.784,255,3.815,260,2.083,264,1.834,285,0.94,304,1.301,320,1.214,322,1.255,323,1.186,324,1.863,325,1.511,326,2.976,327,2.751,328,2.751,329,2.751,330,2.751,331,2.699,332,2.154,333,2.053,334,1.454,335,2.416,336,2.192,337,2.361,338,2.379,339,2.361,340,1.454,341,2.439,342,2.361,343,1.454,344,2.416,345,2.565,346,2.585,347,2.585,348,2.379,349,1.465,350,1.876,351,2.274,352,1.148,353,2.085,354,2.531,355,2.069,356,1.488,357,1.443,358,2.053,359,1.421,360,1.977,361,2.263,362,1.488,363,1.5,364,1.443,365,1.465,366,2.435,367,2.435,368,2.343,369,1.687,370,1.712,371,1.65,372,1.488,373,2.022,374,1.148,375,2.101,376,1.511,377,2.585,378,1.833,379,2.176,380,1.158,381,1.465,382,1.465,383,1.465,384,1.454,385,1.465,386,1.465,387,1.465,388,1.877,389,1.454,390,2.138,391,1.465,392,1.465,393,1.477,394,1.465,395,1.158,396,2.277,397,1.834,398,1.454,399,1.465,400,1.465,401,1.465,402,1.477,403,1.477,404,1.465,405,1.477,406,1.477,407,1.488,408,1.379,409,1.465,410,1.465,411,1.158,412,1.819,413,1.138,414,1.138,415,1.421,416,1.127,417,2.106,420,1.847,421,1.158,422,1.991,423,1.432,424,1.443,425,2.117,426,1.4,427,1.465,428,1.158,429,1.991,430,1.421,431,1.349,432,1.421,433,1.39,436,1.169,444,3.64,465,1.598,526,1.754,658,1.158,760,1.941,858,3.048,1152,1.191,1153,1.191,1154,1.598,1155,2.39,1157,1.191,1158,1.191,1159,2.341,1160,1.191,1161,1.18,1162,1.191,1164,1.191,1165,1.191,1168,2.17,1197,1.534,1198,1.598,1215,1.886,1238,7.964,1240,4.351,1241,2.943,1242,2.943,1243,3.239,1244,2.943,1245,2.943,1246,2.943]],["t/249",[0,2.9,29,2.23,37,1.502,52,0.654,65,1.668,72,3.522,74,1.983,76,0.734,86,3.86,114,3.89,133,1.409,139,2.591,143,1.045,147,1.054,195,1.559,242,3.109,474,4.525]],["t/251",[0,2.922,2,0.864,28,2.114,32,5.697,69,3.41,80,4.44,83,3.804,86,3.344,93,1.993,133,1.415,134,3.147,143,0.905,147,0.864,150,3.55,250,1.81,258,3.051,379,2.313,676,5.096,1198,4.402,1247,7.632,1248,7.569,1249,7.168]],["t/253",[2,1.062,8,1.227,29,2.689,35,1.911,36,1.911,83,3.761,105,1.532,133,1.399,143,1.037,147,1.062,167,2.351,222,2.647,322,1.871,323,1.768,324,1.967,336,2.865,408,2.95,426,2.995,606,5.747,609,6.63,620,6.974,621,7.348,622,6.519,623,8.558,624,8.261,625,8.092,626,7.812]],["t/255",[28,1.892,69,3.539,80,3.763,116,4.505,133,1.266,134,2.817,150,3.685,250,1.879,258,3.166,284,6.037,1250,9.258]],["t/257",[14,1.134,27,3.103,28,1.675,29,2.789,35,1.537,36,1.537,37,1.236,74,1.068,93,2.061,104,2.443,105,1.374,110,2.533,111,1.308,132,1.093,141,1.548,159,1.462,160,1.844,167,2.197,174,1.206,178,1.652,200,2.179,207,2.21,222,1.483,243,2.795,250,1.872,260,2.141,322,1.504,323,1.422,324,1.582,326,2.677,331,2.692,332,2.238,333,2.324,334,1.743,335,2.656,336,2.409,337,2.769,338,2.616,339,2.596,340,1.743,341,2.601,342,2.596,343,1.743,344,2.608,345,2.769,346,2.79,347,2.79,348,2.616,349,1.756,356,1.783,357,1.729,358,2.324,359,1.703,360,2.238,361,2.11,362,1.783,363,1.797,364,1.729,365,1.756,366,2.677,367,2.677,368,2.576,369,1.629,370,1.653,371,1.593,372,1.783,381,1.756,382,1.756,383,1.756,384,1.743,385,1.756,386,1.756,387,1.756,388,1.593,389,1.743,390,2.222,391,1.756,392,1.756,393,1.77,394,1.756,398,1.743,399,1.756,400,1.756,401,1.756,402,1.77,403,1.77,404,1.756,405,1.77,406,1.77,407,1.783,408,1.653,409,1.756,410,1.756,423,1.716,425,1.797,427,1.756,690,2.7,857,4.534]],["t/259",[2,0.946,28,2.082,32,3.324,35,2.025,36,2.025,37,0.808,52,0.383,69,3.095,77,1.456,79,0.641,80,4.263,97,1.993,105,1.131,108,2.039,111,1.284,116,3.94,119,1.446,132,0.899,133,1.394,134,1.836,135,2.314,138,2.368,141,2.039,149,5.125,155,1.328,177,2.683,178,1.643,182,2.95,200,1.425,208,4.452,211,4.626,217,3.996,250,1.225,251,2.784,258,2.063,260,1.61,277,5.12,285,1.751,304,2.054,320,3.426,322,1.982,323,1.873,324,2.514,341,1.531,351,2.843,361,2.514,369,2.146,370,2.178,371,2.37,379,2.778,388,2.099,390,3.069,415,2.244,422,2.228,423,2.845,424,1.698,429,2.687,430,2.244,431,2.13,432,2.244,433,2.194,446,6.507,478,1.865,479,2.533,505,4.042,544,4.312,661,5.767,914,7.358,916,6.507,917,4.848,918,7.358,1019,5.767,1173,3.213,1235,3.746,1247,4.452,1248,5.12,1251,5.482,1252,9.896,1253,9.896,1254,9.736,1255,8.875,1256,7.358,1257,7.358,1258,7.358,1259,7.358,1260,7.358,1261,7.358,1262,7.358,1263,5.12,1264,6.033,1265,6.033,1266,6.87,1267,6.033,1268,8.304,1269,5.482,1270,5.482,1271,5.482,1272,5.12,1273,4.632,1274,8.097,1275,6.033,1276,5.482,1277,5.482,1278,5.482,1279,6.033,1280,6.033,1281,6.033,1282,6.033,1283,6.033]],["t/261",[2,0.958,32,4.217,35,1.915,36,1.915,52,0.65,75,2.564,76,0.461,79,1.187,80,2.258,91,4.502,92,2.656,105,1.069,108,1.928,111,1.183,134,1.69,135,2.188,141,1.928,147,0.741,155,1.483,159,1.302,168,2.006,173,1.588,174,1.09,177,4.551,178,1.663,179,2.644,180,2.665,182,2.025,183,1.613,184,2.239,187,3.111,188,1.746,189,1.69,195,0.979,250,1.554,258,1.9,260,1.523,304,1.942,322,1.874,323,1.771,324,2.43,344,1.473,351,2.774,361,2.43,369,2.029,370,2.06,371,2.271,379,2.567,388,1.985,390,3.029,415,2.122,422,2.106,423,2.446,429,2.597,430,2.122,431,2.014,432,2.122,433,2.075,593,5.453,661,5.453,1019,5.453,1231,3.834,1247,4.1,1252,9.708,1253,9.708,1254,9.299,1255,8.577,1256,6.957,1257,6.957,1258,6.957,1259,6.957,1260,6.957,1261,6.957,1262,6.957,1268,7.96,1269,5.049,1270,5.049,1271,5.049,1284,7.656,1285,3.303,1286,7.656,1287,7.656,1288,4.465,1289,4.465,1290,4.715]],["t/263",[2,0.948,3,5.615,4,5.615,8,1.096,37,1.09,47,4.978,50,4.016,52,0.517,53,3.417,54,3.022,55,4.135,56,3.343,57,5.597,74,1.702,76,0.812,86,3.051,105,1.137,111,1.733,131,5.615,134,2.476,135,2.326,141,2.648,149,4.564,150,3.239,179,2.456,207,1.95,210,3.576,217,4.835,219,6.005,260,1.618,319,3.273,320,3.051,379,2.11,427,2.326,445,3.709,449,5.175,490,4.483,532,3.307,564,3.906,575,4.564,592,4.198,598,4.483,617,6.005,696,5.053,724,7.395,760,3.081,849,6.778,871,6.684,1023,6.978,1235,5.053,1291,6.248,1292,6.248,1293,8.138,1294,7.043,1295,8.919,1296,7.395,1297,7.395,1298,6.54,1299,5.797]],["t/265",[168,3.396,516,6.304,982,5.094]],["t/267",[8,1.008,52,0.661,65,1.959,74,1.565,76,0.862,210,3.958,217,4.445,250,2.111,320,3.899,437,4.961,871,6.613,983,8.184,1294,7.553,1295,7.642,1300,8.184,1301,5.873]],["t/269",[2,0.966,8,0.939,14,1.842,28,1.714,56,3.446,57,5.312,65,1.58,76,0.695,80,4.327,84,2.572,104,2.083,111,2.124,128,3.921,132,1.108,133,1.147,135,2.397,138,2.453,147,0.812,191,4.725,207,2.01,210,3.686,217,4.923,238,3.871,244,3.954,250,2.025,255,3.409,320,3.145,379,2.175,437,4.621,509,4.143,548,5.62,551,4.262,575,5.595,598,4.621,871,5.334,877,7.659,879,5.787,1213,7.118,1294,5.62,1301,5.47,1302,8.388,1303,8.388,1304,8.388,1305,10.648,1306,8.388,1307,6.741]],["t/271",[8,0.987,28,2.1,52,0.691,57,4.696,74,1.785,76,0.945,111,1.877,217,4.352,250,2.085,258,3.83,263,5.082,293,3.83,320,3.852,350,2.599,445,4.019,849,5.354,871,5.607,960,6.084,1129,7.086,1294,6.884]],["t/273",[8,0.87,11,5.362,22,8.95,24,7.924,28,1.81,37,1.187,50,4.372,52,0.734,53,2.384,54,3.705,60,5.966,65,2.052,68,4.19,71,2.976,74,1.993,76,0.961,77,1.875,80,3.601,88,4.138,89,3.835,90,1.823,91,2.358,105,0.793,111,2.028,132,1.193,149,3.185,151,2.069,155,1.304,178,0.777,195,1.369,200,1.342,207,1.862,215,5.496,217,5.205,224,2.069,243,2.06,258,3.769,263,4.664,271,3.969,320,3.954,350,1.674,384,1.61,433,1.539,437,5.248,445,4.547,446,4.564,467,2.438,474,2.496,479,2.384,486,2.59,490,3.128,507,4.36,516,3.805,532,2.308,555,3.703,556,3.703,577,2.885,598,3.128,613,6.245,617,4.19,672,4.36,689,4.045,690,2.496,725,3.526,730,4.819,752,3.703,790,4.36,849,7.06,862,4.009,871,5.633,877,7.66,879,6.883,958,4.819,960,3.918,971,4.358,1020,4.564,1066,3.526,1075,2.93,1092,4.819,1129,4.564,1150,3.805,1151,4.564,1251,7.062,1272,6.594,1277,5.161,1294,3.805,1295,6.594,1299,4.045,1308,4.564,1309,7.737,1310,9.759,1311,7.518,1312,7.062,1313,9.361,1314,4.19,1315,5.679,1316,7.518,1317,5.161,1318,5.966,1319,5.161,1320,7.772,1321,5.679,1322,5.161,1323,5.161,1324,5.679,1325,4.819,1326,5.161,1327,5.679,1328,4.045]],["t/275",[22,9.768,24,8.555,52,0.724,60,6.088,74,1.982,76,0.945,88,4.223,89,3.913,90,1.86,132,0.881,155,1.221,178,1.479,217,4.759,243,2.102,271,2.889,320,3.616,379,2.056,433,2.149,445,3.614,474,3.485,495,6.289,555,5.171,556,5.171,672,6.088,849,6.566,871,5.042,958,6.729,971,4.447,1020,6.372,1075,4.091,1299,5.648,1309,5.471,1310,7.206,1313,9.445,1318,7.404,1325,6.729,1329,7.206,1330,9.645,1331,6.778,1332,6.088,1333,7.206,1334,7.206,1335,5.471,1336,7.669]],["t/277",[77,2.203,86,3.93,124,3.672,132,1.165,133,1.434,139,2.172,143,1.063,153,2.966,218,5.544,551,4.639,577,5.326,1170,5.544,1337,6.299]],["t/279",[2,0.977,8,1.065,13,3.004,14,1.579,37,1.146,52,0.738,68,7.024,72,2.925,74,1.753,76,0.906,77,2.297,79,1.201,92,1.844,97,2.165,105,1.33,124,2.635,133,1.302,134,1.994,138,1.916,139,2.035,143,1.089,147,1.039,150,2.608,153,2.129,155,1.472,158,2.608,159,1.595,160,1.474,161,2.635,162,2.846,166,2.687,168,2.366,169,2.95,172,2.692,173,1.873,174,1.286,175,3.256,178,1.656,179,2.581,180,2.896,183,1.902,184,2.501,188,2.059,189,1.994,195,1.925,209,3.551,225,2.01,226,2.241,242,2.302,250,1.736,255,2.663,258,2.241,314,2.95,474,3.758,481,3.434,501,2.751,503,3.024,679,3.747,922,3.145,1013,3.189,1179,3.434,1338,9.169,1339,6.553,1340,4.521]],["t/281",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/283",[37,1.245,72,3.179,74,1.615,76,0.77,105,1.298,139,2.212,178,1.272,474,4.085,679,3.452]],["t/285",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/288",[2,0.693,12,1.649,14,0.932,27,3.021,28,1.463,29,2.791,35,1.262,36,1.262,37,1.114,47,1.176,50,1.142,52,0.63,58,0.716,66,2.525,68,3.723,76,0.75,79,0.961,93,2.193,104,2.247,105,1.314,108,1.271,110,2.33,111,1.524,112,1.275,116,4.495,119,0.555,132,1.005,133,0.903,134,0.704,141,1.803,151,1.42,155,0.639,159,1.345,160,1.61,167,1.94,174,0.99,175,2.844,178,1.663,182,1.839,195,1.26,200,1.965,207,1.993,222,1.727,224,1.839,243,2.851,250,1.794,253,4.444,260,2.074,285,2.848,304,1.28,319,1.567,322,1.235,323,1.167,324,1.842,325,1.487,326,2.962,327,2.731,328,2.731,329,2.731,330,2.731,331,2.69,332,1.954,333,2.03,334,1.431,335,2.395,336,2.172,337,2.341,338,2.358,339,2.341,340,1.431,341,2.424,342,2.341,343,1.431,344,2.399,345,2.547,346,2.566,347,2.566,348,2.358,349,1.442,351,2.254,353,2.061,354,2.395,355,2.586,356,1.464,357,1.42,358,2.03,359,1.399,360,1.954,361,2.33,362,1.464,363,1.476,364,1.42,365,1.442,366,2.414,367,2.414,368,2.323,369,1.897,370,1.925,371,1.856,372,1.464,373,1.999,375,2.077,376,1.487,377,2.667,378,2.302,379,1.308,381,1.442,382,1.442,383,1.442,384,1.431,385,1.442,386,1.442,387,1.442,388,1.856,389,1.431,390,1.94,391,1.442,392,1.442,393,1.453,394,1.442,398,1.431,399,1.442,400,1.442,401,1.442,402,1.453,403,1.453,404,1.442,405,1.453,406,1.453,407,1.464,408,1.357,409,1.442,410,1.442,412,2.045,415,1.399,418,3.518,420,2.209,422,1.969,423,1.409,424,1.666,425,2.093,426,1.378,427,1.442,429,1.969,430,1.399,431,1.328,432,1.399,433,1.368,474,1.712,478,0.716,548,1.551,585,2.992,658,1.805,734,1.708,960,1.597,1152,1.856,1153,1.856,1157,1.856,1158,1.856,1159,3.059,1160,2.177,1161,2.157,1162,1.856,1163,1.535,1164,1.856,1165,1.856,1168,2.611,1178,5.307,1198,1.142,1215,3.847,1238,8.509,1240,5.022,1242,5.379,1245,5.379,1289,1.86,1341,3.874,1342,4.084,1343,4.282,1344,5.046,1345,4.282,1346,4.084,1347,3.306,1348,1.86,1349,1.437,1350,2.315,1351,2.315,1352,5.604,1353,3.897,1354,2.315,1355,2.315,1356,2.315,1357,2.315]],["t/290",[8,0.914,28,1.669,52,0.71,53,3.429,58,3.035,76,0.814,77,1.971,79,1.118,80,4.278,124,3.284,132,0.907,133,1.343,141,2.057,155,1.243,178,1.583,182,2.976,191,3.868,195,1.968,208,6.026,210,3.589,218,4.959,224,3.577,244,3.646,250,1.993,264,3.766,271,2.976,274,3.589,285,2.37,290,6.27,292,5.634,319,3.948,486,2.721,565,6.563,577,4.149,760,3.092,1084,6.93,1142,4.279,1170,4.959,1177,6.93,1193,6.537,1194,6.096,1266,6.93,1289,6.563,1328,5.817,1338,7.421,1358,5.817]],["t/292",[0,2.95,8,1.164,28,2.125,29,2.62,37,1.469,65,1.697,86,4.111,133,1.5,139,2.143,143,1.055,153,2.926,195,1.586,285,2.614,448,5.469,1359,5.246]],["t/294",[0,3.403,2,1.061,8,1.006,13,3.157,58,2.779,105,1.256,132,1.154,139,2.139,147,1.006,153,2.92,159,1.544,204,4.637,224,3.275,225,2.757,431,2.365,486,2.995,862,4.637,1211,5.716,1360,8.989,1361,6.633]],["t/296",[2,1.074,8,0.782,14,1.645,52,0.714,69,2.671,72,3.357,74,1.952,75,3.224,76,0.813,77,1.686,79,0.742,84,2.733,90,1.639,91,2.901,92,2.762,100,4.34,101,4.221,104,2.213,122,3.827,128,3.266,132,1.09,137,3,139,2.753,143,0.709,147,1.134,149,4.998,156,5.364,165,3.476,187,2.195,207,1.674,222,1.686,226,2.39,238,4.113,239,5.798,242,2.454,253,5.535,258,3.048,260,1.773,271,3.248,293,3.871,316,3.159,466,5.192,468,3.661,474,3.07,482,4.338,485,5.535,486,2.97,577,4.987,602,4.681,605,4.977,607,7.82,608,7.82,875,5.535,1077,4.443,1108,5.155,1169,4.556,1171,4.556,1214,4.82,1362,4.977,1363,5.364,1364,5.972,1365,4.82,1366,5.615,1367,5.929,1368,6.987,1369,6.987,1370,4.977]],["t/298",[0,3.411,2,1.008,8,1.01,132,1.253,147,1.008,148,6.046,195,1.589,238,4.164,271,3.794,431,2.374,485,5.604,1370,7.416,1371,5.949,1372,4.886,1373,8.2]],["t/300",[2,1.083,14,2.066,77,2.701,88,4.687,89,4.344,147,1.083,260,2.226,486,3.729,571,4.54,574,6.494,607,7.499,608,7.499,830,5.897]],["t/302",[2,0.9,14,1.716,77,2.243,147,0.9,260,1.849,486,3.097,572,6.062,607,6.228,608,6.228]],["t/304",[8,0.916,39,3.981,47,4.157,52,0.71,54,3.038,56,3.361,58,2.529,60,6.281,72,2.798,74,1.994,75,3.775,76,0.678,88,4.357,89,4.037,90,2.306,92,2.766,94,4.782,104,2.44,105,1.143,117,6.281,132,1.214,147,0.792,148,5.482,153,2.657,161,3.29,187,2.571,195,1.441,200,1.933,206,4.096,238,3.775,239,6.128,293,4.269,482,5.08,498,5.827,578,5.202,579,6.281,617,6.037,855,3.981,879,5.644,880,5.202,1020,6.574,1045,4.22,1370,5.827,1374,7.252,1375,5.202,1376,7.434,1377,8.931,1378,7.545,1379,8.181,1380,6.574,1381,8.181,1382,8.181,1383,5.827]],["t/306",[2,0.893,8,1.032,13,2.879,17,4.922,37,0.823,41,4.045,52,0.735,54,2.282,57,3.272,71,4.295,72,2.102,74,1.068,76,0.918,77,2.474,79,1.23,90,2.405,92,2.769,94,2.99,97,2.03,105,1.145,106,3.416,107,4.515,124,2.471,128,4.599,132,0.683,133,1.262,134,1.87,138,1.797,139,1.462,143,1.04,147,0.992,151,2.239,153,1.996,155,1.46,158,2.446,159,1.523,160,1.383,161,2.471,162,2.669,166,2.576,168,2.218,172,3.367,173,1.756,174,1.206,178,1.653,179,2.474,180,2.494,183,1.783,184,2.397,187,3.514,188,1.931,189,1.87,195,1.443,207,1.472,209,3.404,225,2.829,226,2.102,250,1.247,251,2.836,258,2.102,311,4.718,314,2.766,454,3.22,467,2.639,475,3.327,478,1.9,481,3.22,486,2.731,503,2.836,533,6.587,544,4.365,551,3.122,578,5.212,579,4.718,679,3.425,880,3.907,922,2.95,1013,2.99,1017,3.385,1048,4.377,1193,5.09,1194,3.816,1384,6.145,1385,5.212,1386,4.377,1387,4.117]],["t/308",[37,1.238,52,0.587,57,4.92,72,3.16,74,1.605,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/310",[2,0.969,8,0.944,52,0.701,54,3.132,71,4.419,76,0.947,77,2.575,79,1.172,92,2.373,97,2.786,124,3.392,132,0.937,133,1.369,134,2.566,138,2.467,143,1.12,147,0.969,155,1.398,158,3.357,159,1.586,160,1.897,161,3.392,162,3.663,166,3.145,168,3.045,209,4.156,225,2.586,226,2.884,251,3.892,544,5.329,578,6.364,579,6.475]],["t/312",[2,0.743,8,0.343,11,2.115,14,0.906,17,1.38,27,3.008,28,1.003,29,2.778,35,1.227,36,1.227,37,1.097,41,1.513,52,0.634,54,1.138,61,3.323,65,1.907,67,1.65,74,1.219,76,0.784,79,1.004,90,2.097,93,1.997,94,2.388,104,2.219,105,1.288,106,3.151,107,4.512,108,1.236,110,2.301,111,1.494,119,2.061,128,1.433,132,0.993,133,0.419,135,2.005,141,1.768,143,0.311,147,0.594,150,1.22,155,0.621,159,1.328,160,1.579,167,1.916,174,0.963,178,1.66,191,1.452,200,2.032,207,1.963,222,1.693,224,1.117,239,4.305,243,2.835,250,1.746,260,2.059,268,2.081,304,1.245,319,1.233,321,3.321,322,1.201,323,1.135,324,1.806,325,1.447,326,2.938,327,2.697,328,2.697,329,2.697,330,2.697,331,2.674,332,2.236,333,1.99,334,1.392,335,2.359,336,2.139,337,2.305,338,2.323,339,2.305,340,1.392,341,2.399,342,2.305,343,1.392,344,2.369,345,2.515,346,2.535,347,2.535,348,2.323,349,1.402,350,2.414,351,2.22,352,1.74,353,2.021,354,2.574,355,1.402,356,1.424,357,1.381,358,1.99,359,1.36,360,1.916,361,2.108,362,1.424,363,1.435,364,1.381,365,1.402,366,2.377,367,2.377,368,2.288,369,1.301,370,1.32,371,1.273,372,1.424,373,1.96,374,1.74,375,2.036,376,1.447,377,2.535,378,1.413,379,2.318,380,1.756,381,1.402,382,1.402,383,1.402,384,1.392,385,1.402,386,1.402,387,1.402,388,1.82,389,1.392,390,2.22,391,1.402,392,1.402,393,1.413,394,1.402,395,1.756,396,2.93,397,2.51,398,1.392,399,1.402,400,1.402,401,1.402,402,1.413,403,1.413,404,1.402,405,1.413,406,1.413,407,1.424,408,1.32,409,1.402,410,1.402,411,1.756,412,1.402,413,1.724,414,1.724,415,1.36,416,1.709,420,1.424,421,1.756,422,1.931,423,1.371,424,1.381,425,2.052,426,1.34,427,1.402,428,1.756,429,1.931,430,1.36,431,1.291,432,1.36,433,1.33,435,2.324,436,1.772,443,2.353,454,4.954,532,1.246,555,1.999,556,1.999,760,1.16,862,1.581,880,3.121,971,1.719,1179,1.606,1191,3.121,1193,3.048,1194,4.767,1195,2.054,1215,2.859,1285,1.822,1358,2.183,1362,2.183,1375,1.949,1385,4.462,1387,5.144,1388,3.121,1389,2.785,1390,2.183,1391,2.785,1392,2.463,1393,3.288]],["t/314",[2,0.715,17,4.533,52,0.728,54,2.743,74,1.283,79,1.217,86,2.769,90,2.548,105,1.032,106,3.356,107,4.069,119,2.212,133,1.011,134,2.247,143,0.749,147,0.975,155,1.469,159,1.497,173,2.111,174,1.449,178,1.662,179,2.786,180,3.064,183,2.144,184,2.7,187,3.315,188,2.321,189,2.247,239,6.212,268,2.504,478,2.854,506,4.143,598,4.069,690,3.246,760,2.796,1386,5.262]],["t/316",[17,4.497,52,0.731,79,1.213,90,2.344,101,3.438,105,1.014,106,3.6,107,3.999,111,1.546,132,0.806,143,0.736,147,0.703,151,2.645,155,1.457,159,1.485,166,2.281,173,2.075,174,1.424,178,1.664,179,2.756,180,3.04,183,2.107,184,2.671,187,3.294,188,2.281,189,2.209,192,3.583,200,1.715,206,3.635,239,6.349,317,2.722,544,3.866,578,4.616,579,5.574,580,6.597,760,2.748,898,4.148,1362,5.171,1386,5.171,1393,4.864,1394,5.574]],["t/318",[2,0.77,8,0.256,11,2.663,14,1.085,27,3.017,28,1.023,29,2.787,35,1.251,36,1.251,37,1.109,41,3.511,52,0.622,61,1.239,65,1.844,67,1.297,69,0.875,74,1.236,76,0.777,79,0.978,80,0.93,83,1.42,90,2.008,93,2.094,104,2.239,105,1.259,106,2.933,107,4.171,108,1.261,110,2.321,111,1.515,119,1.705,132,1.041,133,0.804,135,1.679,141,1.792,143,0.508,147,0.569,151,1.823,155,0.634,159,1.34,160,1.601,167,1.933,169,1.03,174,0.982,178,1.661,186,1.261,200,1.956,203,1.492,207,1.984,210,1.006,222,1.717,227,1.308,239,5.163,243,2.846,250,1.68,260,2.07,263,1.07,268,1.992,285,2.065,304,1.27,319,1.552,321,2.499,322,1.225,323,1.158,324,1.832,325,1.475,326,2.955,327,2.721,328,2.721,329,2.721,330,2.721,331,2.686,332,2.172,333,2.018,334,1.419,335,2.384,336,2.162,337,2.33,338,2.348,339,2.33,340,1.419,341,2.417,342,2.33,343,1.419,344,2.39,345,2.537,346,2.557,347,2.557,348,2.348,349,1.43,350,2.097,351,2.244,352,1.368,353,2.049,354,2.535,355,1.875,356,1.452,357,1.408,358,2.018,359,1.387,360,1.943,361,2.203,362,1.452,363,1.464,364,1.408,365,1.43,366,2.403,367,2.403,368,2.312,369,1.557,370,1.581,371,1.524,372,1.452,373,1.987,374,1.368,375,2.065,376,1.475,377,2.557,378,1.692,379,2.283,380,1.38,381,1.43,382,1.43,383,1.43,384,1.419,385,1.43,386,1.43,387,1.43,388,1.845,389,1.666,390,2.156,391,1.43,392,1.43,393,1.441,394,1.43,395,1.38,396,2.545,397,2.102,398,1.419,399,1.43,400,1.43,401,1.43,402,1.441,403,1.441,404,1.43,405,1.441,406,1.441,407,1.452,408,1.346,409,1.43,410,1.43,411,1.38,412,1.679,413,1.356,414,1.356,415,1.387,416,1.344,420,1.705,421,1.38,422,1.957,423,1.398,424,1.408,425,2.081,426,1.366,427,1.43,428,1.38,429,1.957,430,1.387,431,1.317,432,1.387,433,1.356,435,0.866,436,1.393,444,3.283,454,4.824,467,0.983,478,0.708,479,0.961,506,2.164,526,1.239,555,1.492,556,1.492,557,1.333,592,1.181,658,0.819,690,1.006,760,1.461,855,1.114,862,2.582,971,2.806,1017,2.126,1152,0.842,1153,0.842,1157,0.842,1158,0.842,1159,1.841,1160,0.842,1161,0.834,1162,0.842,1163,0.902,1164,0.842,1165,0.842,1191,3.182,1193,3.107,1194,4.074,1195,1.533,1197,1.084,1215,2.248,1285,2.294,1349,1.421,1362,1.63,1385,5.854,1387,5.073,1388,2.454,1389,2.08,1390,2.749,1391,2.08,1393,2.586,1395,1.942,1396,2.289,1397,1.942,1398,2.289,1399,2.289,1400,1.942,1401,2.289,1402,2.289,1403,2.396,1404,2.289,1405,2.289,1406,2.08]],["t/320",[0,2.939,8,1.161,31,5.273,37,1.508,65,1.69,74,1.803,139,2.605,147,1.09,167,2.225,195,1.58,474,4.56,486,3.458,602,6.011]],["t/322",[0,3.43,2,0.882,8,1.02,132,1.224,139,2.168,147,1.014,153,2.96,224,3.32,238,5.085,239,5.872,431,2.398,486,3.036]],["t/324",[52,0.687,73,6.015,75,4.024,76,0.897,92,2.454,103,4.433,139,2.655,143,1.168,147,1.08,242,3.063,251,4.024,276,4.185,546,4.721,607,7.476,608,7.476,855,5.266,1407,5.686,1408,6.21]],["t/326",[14,1.874,58,3.138,79,1.205,90,2.381,106,3.382,114,3.796,119,2.07,132,0.96,133,1.389,139,2.055,143,1.094,151,3.147,153,2.806,169,3.888,175,3.472,182,3.147,186,4.758,187,2.714,210,3.796,218,5.245,224,3.147,225,2.649,302,4.389,498,6.153,546,5.496,1142,5.319,1314,6.374,1407,5.633,1409,7.849,1410,6.941,1411,8.638,1412,6.153,1413,8.638]],["t/328",[2,0.941,8,1.088,13,3.089,37,0.917,52,0.739,57,3.644,71,3.585,72,2.34,74,1.189,76,0.9,77,2.561,79,1.188,90,2.489,92,2.887,97,2.261,103,2.972,105,1.228,106,3.619,124,2.752,133,1.33,134,2.082,138,2.001,139,1.628,143,1.076,147,1.027,153,2.223,155,1.453,158,2.723,159,1.577,160,1.539,161,2.752,162,2.972,166,2.764,168,2.47,172,3.613,173,1.955,174,1.342,175,3.508,178,1.648,179,2.065,180,2.676,183,1.986,184,2.572,188,2.15,189,2.082,195,1.549,209,3.652,225,2.981,226,2.34,250,1.389,258,2.34,314,3.08,475,3.705,478,2.115,481,3.585,486,2.28,501,2.873,502,4.462,503,3.158,551,3.477,679,3.609,880,4.351,922,3.284,1013,3.33,1414,6.843,1415,3.53,1416,3.585,1417,4.585]],["t/330",[37,1.238,52,0.587,57,4.92,72,3.16,74,1.605,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/332",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/334",[14,1.647,52,0.567,54,4.056,66,3.41,90,2.563,105,1.246,106,3.446,107,4.914,112,4.914,133,1.22,143,0.905,150,3.55,155,1.129,166,2.803,169,4.015,175,3.537,182,3.25,191,4.225,268,3.506,475,4.83,982,4.83,1418,8.92,1419,6.354]],["t/336",[2,0.907,14,1.397,52,0.725,54,2.81,79,1.13,80,3.076,90,2.614,97,2.5,103,3.287,106,3.803,110,1.948,133,1.035,143,1.079,147,0.986,155,1.411,159,1.513,173,2.163,174,1.485,175,3.863,178,1.659,179,2.284,180,2.851,183,2.196,184,2.741,188,2.378,189,2.302,191,3.584,195,1.333,274,3.326,276,3.632,302,3.845,315,2.837,316,2.682,317,2.837,546,4.098,598,4.169,1142,4.911,1420,6.877]],["t/338",[2,0.65,8,0.517,14,1.24,27,2.98,28,0.944,29,2.748,35,1.155,36,1.155,37,1.06,50,2.279,52,0.612,58,1.427,65,1.873,67,1.552,76,0.798,79,0.98,93,1.941,104,2.157,105,1.214,106,1.538,108,1.163,110,2.237,111,1.43,119,1.896,132,1.07,133,0.919,135,1.919,141,1.691,143,0.681,151,1.682,155,0.585,159,1.291,160,1.511,167,1.863,174,0.906,175,3.4,178,1.658,186,2.543,195,1.182,200,1.87,207,1.896,210,2.029,222,1.62,243,2.796,250,1.606,260,2.026,263,3.139,268,1.565,304,1.171,321,3.242,322,1.13,323,1.068,324,1.728,325,1.361,326,2.885,327,2.622,328,2.622,329,2.622,330,2.622,331,2.638,332,2.161,333,1.904,334,1.309,335,2.279,336,2.067,337,2.227,338,2.244,339,2.227,340,1.309,341,2.342,342,2.227,343,1.309,344,2.303,345,2.445,346,2.464,347,2.464,348,2.244,349,1.319,350,2.332,351,2.145,352,1.637,353,1.934,354,2.502,355,1.319,356,1.34,357,1.299,358,1.904,359,1.28,360,1.834,361,2.037,362,1.34,363,1.35,364,1.299,365,1.319,366,2.296,367,2.296,368,2.21,369,1.224,370,1.242,371,1.197,372,1.34,373,1.875,374,1.637,375,1.949,376,1.361,377,2.464,378,1.33,379,2.253,380,1.652,381,1.319,382,1.319,383,1.319,384,1.309,385,1.319,386,1.319,387,1.319,388,1.741,389,1.309,390,2.145,391,1.319,392,1.319,393,1.33,394,1.319,395,1.652,396,2.831,397,2.402,398,1.309,399,1.319,400,1.319,401,1.319,402,1.33,403,1.33,404,1.319,405,1.33,406,1.33,407,1.34,408,1.242,409,1.319,410,1.319,411,1.652,412,1.319,413,1.622,414,1.622,415,1.28,416,1.607,418,2.745,420,1.34,421,1.652,422,1.847,423,1.29,424,1.299,425,1.964,426,1.261,427,1.319,428,1.652,429,1.847,430,1.28,431,1.215,432,1.28,433,1.251,435,1.748,436,1.667,467,1.982,479,1.938,573,4.196,592,2.382,676,2.638,690,2.029,760,2.542,855,2.247,1017,2.543,1118,2.804,1146,3.094,1349,2.867,1415,4.082,1416,4.837,1417,6.824,1421,2.804,1422,3.289,1423,4.196,1424,3.918]],["t/340",[0,2.933,37,1.466,65,1.687,88,5.52,89,5.115,106,2.984,132,0.995,143,0.908,147,1.003,164,5.216,175,3.062,176,5.694,195,1.577,200,2.449,255,3.639,268,3.514,509,3.718,546,4.848,571,5.347,1425,4.031]],["t/343",[8,0.946,52,0.716,54,3.137,58,2.612,72,3.427,74,1.468,75,3.899,76,0.885,77,2.418,79,1.134,84,3.073,92,2.82,103,3.67,111,1.799,119,2.025,132,1.186,133,1.156,155,1.07,175,2.89,182,3.079,225,3.458,227,4.827,251,4.929,268,2.865,424,2.378,548,5.661,682,5.661,1070,6.487,1102,7.169,1180,5.829,1182,7.678,1183,7.169,1362,6.018,1426,8.449,1427,8.449,1428,8.449,1429,8.449,1430,8.449,1431,8.449]],["t/345",[2,0.721,8,0.466,14,0.768,27,2.928,28,1.271,29,2.694,35,1.041,36,1.041,37,0.998,52,0.679,65,1.863,67,1.399,69,1.591,76,0.797,79,1.147,90,1.747,93,1.846,95,1.873,104,2.052,105,1.154,108,1.048,110,2.127,111,1.324,119,1.785,132,0.918,133,0.569,134,1.266,135,1.777,141,1.567,143,0.631,147,0.602,155,1.303,159,1.379,160,1.399,167,1.771,173,1.189,174,1.22,178,1.663,179,1.877,180,1.892,183,1.208,184,1.819,187,3.022,188,1.308,189,1.266,195,1.095,200,1.952,207,1.785,222,1.501,243,2.728,244,3.446,250,1.677,251,3.813,255,4.246,260,1.966,264,2.664,304,1.056,314,1.873,319,1.674,320,1.56,321,3.259,322,1.019,323,0.963,324,1.601,325,1.227,326,2.791,327,2.494,328,2.494,329,2.494,330,2.494,331,2.574,332,2.034,333,1.764,334,1.18,335,2.145,336,1.945,337,2.096,338,2.112,339,2.096,340,1.18,341,2.244,342,2.096,343,1.18,344,2.19,345,2.325,346,2.343,347,2.343,348,2.112,349,1.189,350,2.195,351,2.019,352,1.475,353,1.791,354,2.379,355,1.189,356,1.208,357,1.171,358,1.764,359,1.154,360,1.698,361,1.917,362,1.208,363,1.217,364,1.171,365,1.189,366,2.161,367,2.161,368,2.08,369,1.103,370,1.12,371,1.079,372,1.208,373,1.737,374,1.475,375,1.805,376,1.227,377,2.343,378,1.198,379,2.143,380,1.489,381,1.189,382,1.189,383,1.189,384,1.18,385,1.189,386,1.189,387,1.189,388,1.613,389,1.18,390,2.019,391,1.189,392,1.189,393,1.198,394,1.189,395,1.489,396,2.664,397,2.225,398,1.18,399,1.189,400,1.189,401,1.189,402,1.198,403,1.198,404,1.189,405,1.198,406,1.198,407,1.208,408,1.12,409,1.189,410,1.189,411,1.489,412,1.189,413,1.462,414,1.462,415,1.154,416,1.449,417,1.71,420,1.208,421,1.489,422,1.711,423,1.162,424,1.171,425,1.819,426,1.136,427,1.189,428,1.489,429,1.711,430,1.154,431,1.095,432,1.154,433,1.128,435,1.575,436,1.502,482,4.625,760,1.575,858,2.474,1216,5.768,1231,2.871,1432,3.782,1433,4.775,1434,3.071,1435,4.162,1436,8.739,1437,3.071,1438,4.162,1439,4.162]],["t/347",[2,0.678,28,1.432,52,0.721,58,2.167,75,3.234,79,1.161,90,2.095,92,1.972,120,5.545,143,0.711,147,0.865,155,1.458,159,1.327,173,2.003,174,1.375,178,1.665,179,2.115,180,2.717,183,2.034,184,2.612,187,2.806,188,2.202,189,2.132,195,1.234,200,2.11,211,4.004,224,2.554,250,1.422,251,4.933,255,4.206,263,3.276,309,4.992,315,3.685,316,2.484,317,2.627,379,2.316,509,4.439,532,2.848,575,3.93,578,4.456,977,5.632,1173,3.732,1216,5.824,1231,4.835,1416,3.672,1432,8.115,1436,6.368,1440,7.176,1441,8.34,1442,8.115,1443,9.829,1444,7.008]],["t/349",[2,0.895,8,0.828,14,1.366,28,1.888,50,3.651,52,0.744,53,3.106,54,4.115,65,1.741,71,4.842,76,0.962,77,1.785,79,1.207,93,1.653,95,3.33,111,2.247,132,0.822,133,1.012,143,1.14,144,3.072,147,0.895,155,1.17,166,2.904,169,4.16,182,2.696,187,2.325,195,1.303,197,5.68,200,2.381,217,3.651,225,2.269,238,3.414,242,3.54,251,4.871,302,3.759,315,3.465,320,2.774,424,2.082,486,2.465,490,4.076,528,4.076,546,4.006,547,5.27,575,5.182,578,5.876,604,4.493,661,5.27,752,4.825,831,6.376,870,4.825,977,5.946,1142,5.693,1173,4.921,1278,6.723,1311,6.278,1367,6.278,1375,4.705,1440,8.099,1441,7.842,1442,9.872,1445,7.399,1446,6.723,1447,6.278]],["t/351",[0,2.985,37,1.476,52,0.579,74,1.583,84,2.795,92,2.947,114,4.601,195,1.605,200,2.153,240,5.02,251,4.832,478,3.237,1171,5.943]],["t/353",[2,0.957,8,0.924,14,1.824,17,4.447,52,0.672,58,2.552,72,2.823,74,1.717,76,0.819,77,1.992,79,0.877,84,3.03,100,4.712,111,1.757,119,1.978,132,1.175,139,1.964,147,1.061,149,4.629,153,2.681,155,1.045,159,1.227,192,4.876,238,3.809,271,3.6,379,2.562,498,5.879,725,5.125,855,5.453,1296,7.5,1318,6.337,1334,7.5,1364,7.344,1392,6.633,1448,8.978,1449,8.254,1450,6.633,1451,7.5,1452,7.5,1453,7.004,1454,7.004]],["t/355",[2,0.669,8,0.991,13,3.431,14,1.276,31,4.498,37,1.186,47,3.513,52,0.725,57,3.682,66,3.734,72,2.365,74,1.697,76,0.853,77,1.668,79,1.094,84,2.12,92,2.492,100,2.81,105,1.364,106,3.547,107,5.38,119,1.657,137,2.969,138,2.022,139,2.106,143,0.991,147,1.031,151,2.519,153,2.246,155,1.434,159,1.316,167,1.898,172,2.84,173,1.976,174,1.356,175,3.34,178,1.655,179,2.087,180,2.693,183,2.006,184,2.589,188,2.173,189,2.103,195,1.559,207,1.657,216,4.027,250,1.403,258,2.365,315,2.592,316,2.451,317,2.592,326,2.006,478,2.138,481,3.623,486,3.254,498,4.925,503,3.191,506,3.877,526,3.744,679,3.824,855,3.364,922,3.319,1013,3.364,1017,3.809,1048,4.925,1455,7.855,1456,8.173,1457,4.925,1458,6.283]],["t/357",[52,0.667,66,4.012,74,1.589,107,5.781,155,1.158,250,1.857,486,3.048,526,4.953,855,4.452,1455,7.744,1456,8.057,1457,6.516]],["t/359",[37,1.238,52,0.587,57,4.92,72,3.16,74,1.605,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/361",[14,1.699,37,1.233,47,4.676,76,0.873,105,1.285,137,3.951,138,2.692,139,2.19,143,1.068,178,1.259,216,5.361,679,3.417]],["t/363",[8,1.051,13,3.298,31,4.771,167,2.013]],["t/365",[2,0.976,14,1.86,46,4.076,52,0.714,54,2.747,61,5.004,65,1.394,66,3.533,74,1.285,84,3.237,86,2.774,98,4.957,100,4.739,103,3.214,105,1.033,106,2.465,107,5.091,114,4.061,119,2.529,132,1.173,133,1.264,137,3.177,141,1.864,143,0.937,147,1.052,150,2.945,153,2.403,155,0.937,165,3.604,169,3.33,175,3.447,182,2.696,191,3.504,195,1.303,217,3.651,224,2.696,250,1.876,264,2.647,319,2.976,320,2.774,431,2.652,478,2.287,486,2.465,506,5.182,532,3.007,681,5.946,717,5.104,752,4.825,862,3.817,865,4.398,1075,3.817,1107,9.158,1231,5.104,1364,4.957,1371,4.227,1378,8.104,1403,4.594,1455,8.515,1456,8.507,1459,7.842,1460,9.592,1461,8.397,1462,7.842,1463,3.759,1464,5.104]],["t/367",[2,0.686,14,1.308,52,0.716,54,3.338,79,1.225,80,3.654,93,2.009,97,2.34,100,4.525,103,3.076,106,3.573,110,1.823,133,0.969,143,0.718,147,0.87,155,1.48,159,1.468,173,2.024,174,1.39,175,3.378,178,1.664,179,2.713,180,3.005,183,2.055,184,2.629,188,2.226,189,2.155,225,2.172,250,1.438,268,2.401,315,2.655,316,2.51,317,2.655,323,1.638,478,2.19,506,3.972,598,3.902,1366,5.692,1455,6.634,1456,6.902,1465,7.083,1466,9.958,1467,8.991]],["t/369",[2,0.67,14,0.889,27,2.999,28,0.984,29,2.768,35,1.204,36,1.204,37,1.086,52,0.609,61,1.621,65,1.605,67,1.006,76,0.795,79,1.019,83,1.772,93,2.097,100,4.142,103,4.313,104,2.2,105,1.238,108,1.213,110,2.281,111,1.474,114,4.611,119,1.448,132,0.984,133,0.41,135,1.376,141,1.744,143,0.304,155,0.765,159,1.317,160,1.558,167,1.899,174,0.945,175,3.342,178,1.661,187,0.941,195,0.848,200,1.915,207,1.942,222,1.671,243,2.823,244,3.164,250,1.645,260,2.049,264,3.048,285,2.352,304,1.222,319,1.204,321,2.665,322,1.179,323,1.114,324,1.782,325,1.42,326,2.922,327,2.674,328,2.674,329,2.674,330,2.674,331,2.663,332,2.072,333,1.963,334,1.366,335,2.334,336,2.117,337,2.281,338,2.298,339,2.281,340,1.366,341,2.381,342,2.281,343,1.366,344,2.349,345,2.494,346,2.513,347,2.513,348,2.298,349,1.376,350,1.781,351,2.197,352,1.061,353,1.994,354,2.454,355,1.978,356,1.398,357,1.355,358,1.963,359,1.335,360,1.89,361,2.193,362,1.398,363,1.409,364,1.355,365,1.376,366,2.352,367,2.352,368,2.264,369,1.602,370,1.625,371,1.567,372,1.398,373,1.934,374,1.061,375,2.009,376,1.42,377,2.593,378,1.74,379,1.967,380,1.071,381,1.376,382,1.376,383,1.376,384,1.366,385,1.376,386,1.376,387,1.376,388,1.795,389,1.366,390,2.056,391,1.376,392,1.376,393,1.387,394,1.376,395,1.071,396,2.161,397,1.723,398,1.366,399,1.376,400,1.376,401,1.376,402,1.387,403,1.387,404,1.376,405,1.387,406,1.387,407,1.398,408,1.296,409,1.376,410,1.376,411,1.071,412,1.727,413,1.052,414,1.052,415,1.335,416,1.042,417,1.978,420,1.753,421,1.071,422,1.905,423,1.345,424,1.355,425,2.025,426,1.315,427,1.376,428,1.071,429,1.905,430,1.335,431,1.267,432,1.335,433,1.305,435,1.133,436,1.081,465,1.478,658,1.071,1152,1.101,1153,1.101,1154,1.478,1157,1.101,1158,1.101,1159,2.222,1160,1.101,1161,1.091,1162,1.101,1163,1.18,1164,1.101,1165,1.101,1235,1.859,1285,1.78,1378,7.503,1463,4.329,1466,8.31,1468,2.994,1469,8.31,1470,3.063,1471,4.816,1472,4.377,1473,2.066,1474,6.042,1475,6.042,1476,1.904,1477,2.994,1478,2.994,1479,4.816,1480,4.816,1481,2.066,1482,2.994]],["t/371",[2,0.605,14,0.774,27,2.932,28,0.857,29,2.698,35,1.048,36,1.048,37,1.002,52,0.702,54,1.557,66,3.391,76,0.771,79,0.988,93,2.079,100,4.307,103,4.478,104,2.059,105,1.239,106,2.084,107,4.887,108,1.056,110,2.135,111,1.592,114,3.898,132,0.921,141,1.575,155,0.531,159,1.232,160,1.407,167,1.778,174,0.822,175,3.297,178,1.657,187,1.317,200,1.767,207,1.792,222,1.509,243,2.733,250,1.518,260,1.97,285,2.7,304,1.064,322,1.026,323,0.97,324,1.61,325,1.236,326,2.797,327,2.503,328,2.503,329,2.503,330,2.503,331,2.578,332,1.708,333,1.773,334,1.189,335,2.154,336,1.954,337,2.105,338,2.121,339,2.105,340,1.189,341,2.251,342,2.105,343,1.189,344,2.198,345,2.334,346,2.352,347,2.352,348,2.121,349,1.198,351,2.027,353,1.801,354,2.154,355,2.137,356,1.216,357,1.18,358,1.773,359,1.162,360,1.708,361,2.135,362,1.216,363,1.226,364,1.18,365,1.198,366,2.171,367,2.171,368,2.089,369,1.658,370,1.682,371,1.622,372,1.216,373,1.747,375,1.815,376,1.236,377,2.516,378,1.801,379,1.087,381,1.198,382,1.198,383,1.198,384,1.189,385,1.198,386,1.198,387,1.198,388,1.622,389,1.189,390,1.695,391,1.198,392,1.198,393,1.207,394,1.198,398,1.189,399,1.198,400,1.198,401,1.198,402,1.207,403,1.207,404,1.198,405,1.207,406,1.207,407,1.216,408,1.128,409,1.198,410,1.198,412,1.787,415,1.162,418,2.492,420,1.815,422,1.72,423,1.171,424,1.76,425,1.829,426,1.145,427,1.198,429,1.72,430,1.162,431,1.103,432,1.162,433,1.136,658,1.499,971,2.351,1152,1.542,1153,1.542,1157,1.542,1158,1.542,1159,2.751,1160,1.542,1161,1.527,1162,1.542,1163,1.651,1164,1.542,1165,1.542,1342,2.892,1346,2.892,1378,7.915,1388,2.665,1455,7.977,1456,7.915,1459,3.557,1460,9.369,1469,7.536,1472,5.683,1483,4.192,1484,3.809,1485,4.192,1486,8.871,1487,9.509,1488,8.871,1489,3.218,1490,6.254,1491,6.254,1492,5.683,1493,7.48,1494,4.192,1495,4.192,1496,4.192,1497,3.218,1498,6.254]],["t/373",[2,0.662,14,0.873,27,2.991,28,0.967,29,2.76,35,1.183,36,1.183,37,1.075,46,2.606,52,0.592,65,1.887,67,1.59,76,0.772,79,0.99,93,1.963,104,2.182,105,1.302,106,3.106,108,1.191,110,2.262,111,1.455,119,1.922,132,0.976,135,1.953,141,1.721,147,0.662,155,0.599,159,1.306,160,1.537,167,1.884,174,0.928,178,1.659,200,1.895,207,1.922,222,1.649,243,2.811,244,3.461,250,1.628,260,2.039,304,1.2,321,3.274,322,1.158,323,1.094,324,1.759,325,1.394,326,2.906,327,2.652,328,2.652,329,2.652,330,2.652,331,2.653,332,2.191,333,1.938,334,1.341,335,2.31,336,2.095,337,2.258,338,2.275,339,2.258,340,1.341,341,2.365,342,2.258,343,1.341,344,2.329,345,2.473,346,2.492,347,2.492,348,2.275,349,1.352,350,2.365,351,2.174,352,1.677,353,1.968,354,2.53,355,1.352,356,1.373,357,1.331,358,1.938,359,1.311,360,1.866,361,2.065,362,1.373,363,1.383,364,1.331,365,1.352,366,2.328,367,2.328,368,2.241,369,1.254,370,1.272,371,1.226,372,1.373,373,1.909,374,1.677,375,1.983,376,1.394,377,2.492,378,1.362,379,2.278,380,1.692,381,1.352,382,1.352,383,1.352,384,1.341,385,1.352,386,1.352,387,1.352,388,1.772,389,1.341,390,2.174,391,1.352,392,1.352,393,1.362,394,1.352,395,1.692,396,2.87,397,2.444,398,1.341,399,1.352,400,1.352,401,1.352,402,1.362,403,1.362,404,1.352,405,1.362,406,1.362,407,1.373,408,1.272,409,1.352,410,1.352,411,1.692,412,1.352,413,1.661,414,1.661,415,1.311,416,1.647,417,1.943,420,1.373,421,1.692,422,1.88,423,1.321,424,1.331,425,1.999,426,1.292,427,1.352,428,1.692,429,1.88,430,1.311,431,1.245,432,1.311,433,1.282,435,1.791,436,1.708,490,2.606,862,3.525,1179,2.479,1388,3.008,1403,4.243,1455,6.877,1487,9.1,1492,4.298,1499,4.73,1500,4.014,1501,4.014]],["t/375",[0,2.928,8,1.159,13,3.139,37,1.464,65,1.684,76,0.932,84,3.175,100,3.632,139,2.464,143,1.109,147,1.089,195,1.574,242,3.139,268,3.03,1198,4.41,1502,8.121]],["t/377",[2,0.847,8,1.145,39,4.259,52,0.688,54,3.25,65,1.649,72,3.498,74,1.777,76,0.898,77,2.468,79,0.929,90,2.053,132,1.136,133,1.399,138,2.992,139,2.082,143,1.099,147,0.847,153,2.843,168,3.16,225,3.137,292,6.038,344,2.32,482,5.434,1236,7.033,1237,6.719]],["t/379",[2,0.97,8,1.121,13,3.22,52,0.732,76,0.897,77,2.418,79,1.173,90,2.351,92,2.056,97,2.414,105,1.02,106,3.501,124,2.938,133,1.254,134,2.223,138,2.137,143,1.066,147,1.017,150,2.908,153,2.373,155,1.467,158,2.908,159,1.609,160,1.644,161,2.938,162,3.173,166,2.881,168,2.637,172,3.001,173,2.088,174,1.433,175,3.594,178,1.648,179,2.205,180,2.789,183,2.12,184,2.681,188,2.296,189,2.223,195,1.614,209,3.807,225,2.24,226,2.499,250,1.483,258,2.499,314,3.288,481,3.828,501,3.067,503,3.371,679,3.404,922,3.507,1013,3.555,1179,3.828,1457,5.204]],["t/381",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/383",[8,1.012,52,0.662,74,1.571,76,0.749,79,0.96,90,2.121,105,1.263,133,1.426,143,1.057,210,3.973,226,3.092,240,4.981,304,2.294,305,5.49,501,3.796,516,6.058,603,5.375,605,6.44,855,4.4,1290,7.672]],["t/385",[2,0.681,14,0.908,27,3.009,28,1.006,29,2.779,35,1.231,36,1.231,37,1.099,52,0.521,76,0.68,79,0.871,83,1.81,93,2.115,104,2.222,105,1.25,106,2.733,108,1.239,110,2.303,111,1.497,132,0.994,133,0.673,141,1.771,143,0.499,155,0.623,159,1.33,160,1.582,167,1.918,174,0.965,178,1.659,195,0.867,200,1.938,207,1.965,222,1.696,225,1.509,243,2.836,250,1.665,260,2.061,268,1.668,285,2.856,304,1.248,322,1.204,323,1.138,324,1.81,325,1.45,326,2.941,327,2.701,328,2.701,329,2.701,330,2.701,331,2.676,332,1.92,333,1.994,334,1.395,335,2.362,336,2.142,337,2.308,338,2.326,339,2.308,340,1.395,341,2.401,342,2.308,343,1.395,344,2.372,345,2.518,346,2.537,347,2.537,348,2.326,349,1.406,351,2.223,353,2.024,354,2.362,355,2.344,356,1.428,357,1.385,358,1.994,359,1.364,360,1.92,361,2.303,362,1.428,363,1.439,364,1.385,365,1.406,366,2.38,367,2.38,368,2.291,369,1.863,370,1.891,371,1.823,372,1.428,373,1.963,375,2.04,376,1.45,377,2.537,378,2.024,379,1.276,381,1.406,382,1.406,383,1.406,384,1.395,385,1.406,386,1.406,387,1.406,388,1.823,389,1.395,390,1.905,391,1.406,392,1.406,393,1.417,394,1.406,398,1.395,399,1.406,400,1.406,401,1.406,402,1.417,403,1.417,404,1.406,405,1.417,406,1.417,407,1.428,408,1.324,409,1.406,410,1.406,412,2.009,415,1.364,420,2.04,422,1.934,423,1.374,424,1.385,425,2.056,426,1.344,427,1.406,429,1.934,430,1.364,431,1.295,432,1.364,433,1.334,478,1.521,658,1.76,1152,1.81,1153,1.81,1157,1.81,1158,1.81,1159,3.017,1160,1.81,1161,1.793,1162,1.81,1163,1.938,1164,1.81,1165,1.81,1388,3.129,1415,2.538,1416,3.684,1417,5.496,1421,2.988,1422,3.505,1489,3.778,1497,3.778,1503,3.505,1504,4.175,1505,4.921,1506,3.631,1507,4.175]],["t/387",[2,0.687,8,0.696,14,1.148,27,3.015,28,1.019,29,2.785,35,1.247,36,1.247,37,1.107,52,0.617,58,0.967,65,1.916,67,1.676,76,0.805,79,1.01,83,1.15,93,2.011,104,2.235,105,1.258,106,2.753,108,1.256,110,2.317,111,1.511,119,1.98,132,1.057,133,0.851,135,2.028,141,1.788,143,0.72,144,1.299,151,1.14,155,0.631,159,1.338,160,1.597,167,1.93,174,0.978,175,2.826,178,1.661,186,1.723,195,1.095,200,1.952,207,1.98,210,1.374,222,1.713,243,2.844,250,1.677,260,2.068,263,2.331,304,1.265,320,1.172,321,2.724,322,1.221,323,1.154,324,1.827,325,1.47,326,2.952,327,2.717,328,2.717,329,2.717,330,2.717,331,2.684,332,2.256,333,2.013,334,1.414,335,2.38,336,2.158,337,2.325,338,2.343,339,2.325,340,1.414,341,2.414,342,2.325,343,1.414,344,2.386,345,2.534,346,2.553,347,2.553,348,2.343,349,1.425,350,2.436,351,2.24,352,1.768,353,2.044,354,2.592,355,1.425,356,1.447,357,1.403,358,2.013,359,1.382,360,1.938,361,2.127,362,1.447,363,1.459,364,1.403,365,1.425,366,2.398,367,2.398,368,2.308,369,1.322,370,1.342,371,1.293,372,1.447,373,1.982,374,1.768,375,2.06,376,1.47,377,2.553,378,1.436,379,2.334,380,1.784,381,1.425,382,1.425,383,1.425,384,1.414,385,1.425,386,1.425,387,1.425,388,1.84,389,1.414,390,2.24,391,1.425,392,1.425,393,1.436,394,1.425,395,1.784,396,2.956,397,2.539,398,1.414,399,1.425,400,1.425,401,1.425,402,1.436,403,1.436,404,1.425,405,1.436,406,1.436,407,1.447,408,1.342,409,1.425,410,1.425,411,1.784,412,1.425,413,1.752,414,1.752,415,1.382,416,1.736,418,1.859,420,1.447,421,1.784,422,1.953,423,1.393,424,1.403,425,2.076,426,1.362,427,1.425,428,1.784,429,1.953,430,1.382,431,1.312,432,1.382,433,1.352,435,1.184,436,1.8,444,3.813,467,2.141,479,1.313,557,1.822,564,1.501,592,1.613,676,1.787,690,1.374,855,1.522,1017,1.723,1118,1.899,1146,2.095,1197,1.481,1229,1.754,1235,1.942,1349,1.942,1388,1.989,1415,2.573,1416,4.985,1417,6.625,1421,3.028,1422,3.552,1423,2.842,1424,2.654,1508,2.842]],["t/389",[0,2.945,8,1.261,13,3.649,31,5.279,37,1.509,65,1.693,139,2.607,147,1.061,167,2.227,195,1.583,486,3.462,602,6.023]],["t/391",[2,1.054,7,6.107,8,0.991,14,1.634,45,6.107,74,1.538,77,2.136,84,3.158,100,4.185,101,4.192,102,6.796,132,0.983,143,0.898,144,3.676,147,1.085,153,2.875,159,1.316,690,3.89,862,4.566,863,6.107,1509,8.044,1510,8.852,1511,8.852,1512,7.114,1513,6.796,1514,8.044,1515,7.114]],["t/393",[2,1.103,7,7.315,8,1.187,37,1.248,42,6.359,47,3.808,51,4.551,52,0.706,53,4.256,55,5.388,57,3.991,58,3.134,65,2.054,66,3.561,74,1.302,76,0.952,77,2.559,79,1.158,84,2.298,105,1.047,142,6.294,144,3.112,147,0.981,152,6.359,153,2.434,155,0.949,159,1.384,215,4.128,224,2.731,226,2.563,250,1.521,298,6.359,302,3.808,303,7.782,486,3.378,506,5.224,526,4.058,603,4.455,619,5.021,712,7.553,766,6.61,862,4.805,1106,5.754,1230,6.294,1239,4.765,1359,4.365,1512,7.486,1516,7.495,1517,7.495,1518,7.495,1519,5.53,1520,6.81,1521,8.521,1522,4.887,1523,9.316,1524,6.427,1525,7.152,1526,6.81]],["t/395",[2,0.977,45,6.965,52,0.544,53,3.593,55,5.129,58,2.646,76,0.837,77,2.436,79,1.072,88,4.557,89,4.223,132,1.121,137,3.675,142,5.314,147,1.04,153,2.78,155,1.278,159,1.596,182,3.118,226,2.927,258,3.453,260,1.702,271,3.118,323,1.98,331,2.14,506,4.799,537,7.777,604,5.197,712,6.096,940,6.096,1045,4.415,1211,6.828,1230,5.314,1521,6.877,1526,7.777,1527,6.877,1528,6.877]],["t/397",[0,2.093,2,0.91,5,5.423,7,4.409,8,0.715,14,1.845,31,4.274,32,3.52,37,0.856,52,0.749,53,3.532,55,5.077,58,1.976,66,3.216,76,0.779,77,2.411,79,0.893,80,3.419,83,2.351,89,5.124,90,2.719,91,4.86,92,1.798,93,1.428,94,4.094,100,4.22,106,3.33,107,3.52,110,1.645,111,1.361,122,4.667,132,1.045,144,2.654,147,0.814,155,0.809,159,0.95,165,3.897,169,3.787,175,3.551,177,5.19,178,0.874,182,3.065,187,2.643,259,3.88,260,1.673,262,5.224,271,2.329,274,2.808,285,2.441,331,2.597,449,4.063,468,3.349,486,2.803,495,5.486,502,4.167,503,2.949,506,3.584,528,3.52,558,4.409,873,4.715,982,3.46,1045,5.756,1048,4.552,1051,5.807,1063,5.423,1102,5.423,1118,3.88,1140,5.423,1211,4.063,1235,3.968,1273,6.458,1291,4.906,1316,5.423,1333,5.807,1408,4.552,1512,5.135,1513,4.906,1519,4.715,1528,6.76,1529,3.799,1530,5.807,1531,6.391,1532,6.391,1533,6.939,1534,5.423,1535,5.807,1536,6.391,1537,6.391,1538,6.391,1539,5.423,1540,5.807,1541,6.391,1542,8.412,1543,5.807,1544,7.557,1545,5.135]],["t/399",[2,0.506,8,0.822,14,1.943,31,2.658,45,3.609,51,3.176,52,0.757,53,3.082,55,4.673,58,1.617,66,3.516,76,0.908,77,1.772,79,0.556,80,3.738,83,2.7,89,5.5,90,2.762,91,4.925,93,1.169,94,4.475,95,2.355,101,2.477,105,0.731,106,3.507,107,4.044,115,4.439,120,5.267,122,4.748,132,0.942,137,3.152,144,3.048,147,0.89,150,2.082,151,1.906,155,1.437,159,0.777,165,4.273,167,1.121,169,4.139,175,3.707,176,3.326,177,5.263,178,1.16,183,1.518,184,1.53,187,2.89,194,3.505,195,0.921,212,2.786,215,2.882,219,3.86,227,2.989,238,2.414,258,3.527,259,4.458,271,2.675,285,2.13,331,1.308,478,2.622,482,4.559,486,1.743,495,4.787,505,3.505,506,2.934,517,3.411,526,3.975,532,2.126,557,3.047,564,2.511,604,4.458,690,3.226,760,2.779,831,3.609,1045,3.787,1048,3.726,1298,4.204,1332,4.016,1377,4.753,1378,4.016,1522,4.787,1528,5.9,1533,5.417,1540,4.753,1543,4.753,1544,8.07,1545,5.9,1546,5.231,1547,7.341,1548,7.341,1549,6.671,1550,5.231,1551,4.753,1552,7.147,1553,9.371,1554,7.341,1555,4.753,1556,5.231,1557,6.229,1558,5.231,1559,7.341]],["t/401",[2,0.571,7,4.072,8,1.083,14,1.867,31,2.999,45,4.072,52,0.732,53,2.478,55,4.592,66,3.05,74,1.026,76,0.489,77,1.925,79,1.179,80,3.243,83,2.171,84,1.81,89,5.258,90,2.714,91,4.847,93,1.319,94,3.882,101,2.796,102,4.532,104,1.466,106,3.473,107,3.252,111,1.257,120,4.954,122,4.809,132,1.004,143,0.599,144,2.451,147,0.937,155,1.446,159,1.73,161,2.374,165,4.064,167,1.265,169,3.591,175,3.756,177,5.226,182,2.151,183,1.713,184,1.726,187,3.042,194,3.955,210,3.506,212,3.143,215,3.252,217,2.913,220,4.744,227,3.372,238,2.724,258,2.729,274,2.594,285,2.315,331,1.476,424,1.661,495,3.849,506,4.474,508,6.412,532,2.399,557,3.438,558,4.072,564,2.833,586,3.849,598,3.252,658,2.111,760,2.235,871,3.753,965,5.009,1045,3.045,1048,4.205,1050,5.364,1198,2.913,1361,4.356,1528,4.744,1533,4.356,1544,7.263,1545,4.744,1549,7.25,1553,8.213,1555,5.364,1560,5.903,1561,5.364,1562,5.903,1563,7.979,1564,5.903,1565,5.903,1566,5.903,1567,5.903,1568,5.073,1569,5.754,1570,6.77,1571,10.112,1572,9.681,1573,5.903,1574,7.979,1575,5.903,1576,5.903,1577,5.903,1578,4.532]],["t/403",[2,0.496,8,1.182,14,1.623,17,1.458,28,0.662,29,0.816,31,4.008,37,1.124,39,1.576,52,0.736,53,1.36,55,1.645,56,1.33,58,2.439,66,1.238,69,3.016,71,3.335,73,3.538,76,0.917,77,1.904,79,1.254,80,1.316,83,1.191,84,1.573,89,4.141,90,2.721,91,4.143,92,2.474,94,3.097,95,1.458,100,1.316,103,3.144,104,0.804,105,1.102,106,3.761,111,1.355,112,1.784,114,2.797,117,2.486,119,0.776,120,5.21,122,4.882,131,2.234,132,1.174,133,1.342,134,1.936,135,0.925,137,1.391,138,2.454,139,1.22,142,2.011,143,1.107,147,0.931,150,1.289,151,2.874,155,1.436,157,2.17,158,2.041,159,1.69,161,2.911,165,4.182,166,3.503,167,1.799,169,2.308,173,0.925,174,1.42,175,3.507,177,5.145,178,1.419,181,2.307,182,3.203,183,1.488,184,1.5,187,3.37,191,1.534,192,1.598,193,1.886,194,3.436,195,1.693,203,2.112,204,1.671,206,2.567,210,3.467,211,2.929,212,2.73,215,1.784,219,5.341,220,2.603,224,1.868,225,2.419,226,1.108,227,1.85,242,2.236,254,2.486,258,1.108,260,0.644,262,3.184,263,3.687,271,2.874,276,3.055,278,1.554,285,2.101,293,1.407,315,1.214,316,1.148,323,1.186,331,2.198,360,1.738,448,3.113,475,2.776,477,2.486,479,2.672,482,3.952,486,1.079,507,2.486,508,7.325,515,2.748,517,2.112,540,2.011,544,1.725,547,3.652,551,4.466,552,3.937,555,2.112,585,2.486,586,2.112,592,4.069,607,2.17,690,1.423,712,2.307,855,2.495,898,1.85,922,1.554,934,2.748,960,2.234,982,2.776,1019,2.307,1045,3.734,1065,2.943,1143,2.943,1146,2.17,1171,3.344,1229,1.816,1230,2.011,1236,2.603,1266,2.748,1290,2.748,1301,2.112,1314,4.697,1326,2.943,1332,2.486,1373,4.659,1392,2.603,1407,2.112,1410,2.603,1419,2.307,1451,4.659,1453,2.748,1513,2.486,1519,2.39,1521,2.603,1527,2.603,1533,2.39,1544,4.121,1545,2.603,1568,4.603,1569,4.303,1570,6.142,1579,3.239,1580,2.943,1581,3.239,1582,2.748,1583,7.239,1584,5.128,1585,3.239,1586,3.239,1587,2.748,1588,9.978,1589,3.239,1590,5.128,1591,3.239,1592,2.943,1593,2.603,1594,2.943,1595,3.783,1596,3.239,1597,5.128,1598,2.748,1599,2.943,1600,2.748,1601,2.748,1602,2.112,1603,4.121,1604,7.239,1605,3.239,1606,2.748,1607,3.239,1608,3.239,1609,3.239,1610,2.307,1611,3.239,1612,3.239,1613,3.239,1614,2.943,1615,6.142,1616,2.943,1617,3.239,1618,3.239]],["t/405",[2,0.982,7,3.727,8,0.966,14,1.809,30,4.908,31,2.744,45,3.727,46,4.753,50,2.666,52,0.74,53,3.152,55,4.384,56,2.219,58,2.321,65,1.626,66,2.065,76,0.922,77,1.812,79,1.246,80,2.195,86,2.025,89,2.666,90,1.267,91,2.243,92,1.52,94,3.653,101,3.556,106,2.502,132,0.834,133,1.508,135,1.544,137,2.319,141,1.361,142,3.354,143,1.118,145,2.593,147,1.007,155,1.092,159,1.116,165,3.822,175,2.951,177,4.511,178,1.388,182,1.968,187,3.464,195,1.322,204,2.786,217,2.666,224,2.736,225,1.657,264,4.008,278,2.593,284,3.522,285,2.504,292,3.727,303,6.625,331,1.351,336,1.411,350,2.213,360,1.475,427,1.544,445,2.462,449,3.435,475,2.925,487,4.341,495,3.522,501,2.268,504,3.847,506,3.029,508,7.494,509,2.243,526,2.925,534,5.54,547,3.847,598,4.136,604,5.239,712,6.98,766,3.522,862,5.233,922,3.604,940,6.146,1019,3.847,1045,2.786,1129,4.341,1211,4.774,1230,4.662,1231,3.727,1235,4.662,1249,8.859,1374,3.986,1403,5.358,1463,5.693,1519,3.986,1521,7.876,1522,3.522,1534,4.583,1568,5.93,1569,5.543,1570,7.913,1587,4.583,1619,4.341,1620,5.402,1621,5.402,1622,5.402,1623,5.402,1624,5.402,1625,5.402,1626,5.402,1627,5.402,1628,5.402,1629,7.508,1630,7.841,1631,7.508,1632,7.508,1633,8.629,1634,11.276,1635,5.402,1636,11.276,1637,5.402,1638,4.583,1639,4.908]],["t/407",[2,0.995,14,1.628,58,2.726,65,1.661,77,2.128,79,0.937,83,3.244,89,4.352,91,3.662,117,6.77,133,1.206,143,0.895,147,1.084,159,1.527,200,2.083,204,4.549,219,6.507,505,5.908,506,4.945,1019,6.281,1045,4.549,1211,5.607,1230,5.476,1235,5.476,1249,7.086,1301,5.751,1551,8.013,1561,8.013,1640,8.013,1641,8.013,1642,8.013]],["t/409",[0,2.939,8,1.26,13,3.645,31,5.273,37,1.508,52,0.57,65,1.69,74,1.803,76,0.744,139,2.605,147,1.005,167,2.225,195,1.58,242,3.151]],["t/411",[0,3.43,2,0.882,79,0.968,80,3.704,93,2.036,132,1.163,144,3.784,147,1.014,153,2.96,183,2.644,212,4.853,224,3.32,431,2.398,875,5.659,1529,5.417,1643,9.113]],["t/413",[79,1.112,128,4.26,139,2.491,147,0.882,183,3.039,184,3.062,222,2.199,607,7.016,608,7.016,875,7.026]],["t/415",[2,0.722,8,1.039,28,1.524,37,0.999,46,4.108,52,0.59,53,3.899,56,3.064,65,1.405,69,3.55,71,3.908,74,1.296,76,0.618,77,1.8,79,0.792,80,3.775,83,3.72,86,2.796,93,2.365,105,1.297,116,3.629,119,1.787,124,2.999,128,3.486,133,1.448,147,1.111,151,2.718,155,1.281,158,2.968,159,1.108,173,2.654,178,1.02,183,3.222,192,3.681,202,6.329,203,4.864,206,3.734,207,1.787,212,4.946,215,4.108,243,1.977,258,2.551,260,1.483,263,4.341,274,3.278,278,4.458,285,2.935,293,4.393,445,3.399,474,3.278,475,4.038,484,6.853,486,2.485,500,5.726,502,4.864,523,5.503,557,4.344,564,4.458,567,7.881,568,5.145,570,4.997,603,4.433,613,5.994,621,4.997,857,5.503,865,4.433,875,5.767,965,6.329,1011,6.777,1149,7.463,1150,4.997,1151,5.994,1173,3.972,1198,3.681,1215,4.344,1307,5.994,1340,5.145,1367,6.329,1409,6.777,1501,6.329,1529,4.433,1603,5.994,1614,6.777,1641,6.777,1644,7.458,1645,7.458,1646,5.994,1647,6.329,1648,7.458,1649,6.329]],["t/417",[8,0.972,60,6.669,80,4.139,93,2.275,108,2.188,132,0.965,147,0.986,173,2.91,183,3.296,184,2.978,193,5.06,195,1.53,206,4.349,207,2.081,212,5.935,241,6.187,274,3.817,478,3.148,493,7.893,568,7.026,571,4.481,1522,5.665,1642,7.893,1650,8.687,1651,7.371,1652,8.687,1653,8.687,1654,8.687,1655,8.687,1656,7.371]],["t/419",[8,0.503,17,2.024,20,3.318,28,0.919,37,0.882,52,0.7,58,2.036,66,2.518,76,0.914,79,1.243,80,2.677,90,2.42,91,4.354,92,2.845,103,2.861,104,1.116,105,0.92,122,4.841,132,0.499,133,1.305,137,1.931,147,0.924,151,2.84,155,1.449,159,1.613,173,1.882,174,1.292,175,3.925,178,1.669,179,2.352,180,2.903,183,1.911,184,2.509,187,3.378,188,2.449,189,2.004,195,0.792,212,3.507,260,0.894,278,2.158,285,2.262,293,1.953,315,3.217,316,3.041,317,3.578,344,1.192,371,1.166,486,2.195,490,2.477,502,2.932,512,4.569,513,4.496,532,1.827,564,3.161,568,5.377,602,3.013,618,3.203,676,2.569,855,2.188,982,2.435,1198,2.219,1361,3.318,1406,4.086,1415,2.32,1416,2.356,1647,8.366,1657,5.985,1658,8.299,1659,8.098,1660,5.589,1661,6.613,1662,5.985,1663,6.613,1664,4.086,1665,4.497,1666,4.086,1667,4.497,1668,3.815,1669,4.497,1670,4.497,1671,4.497,1672,4.497,1673,3.452,1674,3.815]],["t/421",[52,0.728,58,3.026,76,0.871,79,1.185,92,2.754,105,1.135,132,0.902,133,1.339,147,1.017,155,1.435,159,1.207,173,2.321,174,1.594,178,1.634,184,2.376,187,3.426,189,2.472,212,5.212,227,4.641,263,3.797,278,4.698,285,2.84,478,2.512,564,3.899,568,5.605,1140,6.893,1215,4.732,1415,5.418,1416,5.128,1659,8.304,1660,8.304,1675,7.382]],["t/423",[8,0.589,52,0.709,58,1.628,76,0.9,79,1.235,90,2.164,91,4.598,92,2.832,97,1.74,103,4.006,105,1.189,119,1.767,120,3.27,122,4.711,133,1.262,134,1.602,143,0.864,147,0.824,151,1.919,155,1.456,159,1.536,166,1.655,172,2.163,173,1.505,174,1.033,175,3.995,178,1.667,179,2.569,180,3.062,182,1.919,183,1.528,184,2.157,187,3.313,188,1.655,189,1.602,195,1.299,224,3.361,227,3.009,250,1.069,251,3.929,258,1.801,278,2.528,284,3.435,315,2.765,316,2.615,317,3.192,427,1.505,449,3.349,478,2.632,512,3.928,513,3.865,521,6.703,528,2.901,532,2.14,564,4.086,831,3.634,971,2.954,1105,4.786,1285,3.131,1314,3.886,1325,4.469,1416,2.76,1512,4.232,1519,3.886,1658,7.736,1659,6.259,1660,4.469,1662,7.736,1663,6.259,1664,8.823,1666,4.786,1674,4.469,1676,5.267,1677,5.267,1678,5.267,1679,5.267,1680,5.267,1681,5.267,1682,7.376]],["t/425",[8,0.84,14,0.996,28,1.103,37,0.723,39,2.625,50,3.702,52,0.751,69,2.062,71,2.827,72,1.845,74,1.498,75,3.462,76,0.913,79,1.144,80,3.505,90,2.527,93,2.082,103,2.343,104,2.314,105,1.524,110,1.389,116,3.65,119,1.797,132,1.126,133,1.572,137,3.221,143,0.875,144,2.24,147,1.076,155,1.454,159,1.456,161,2.17,170,3.722,172,2.216,173,2.144,174,1.059,175,3.77,178,1.646,179,1.628,180,1.641,182,2.733,183,2.503,184,2.865,188,1.695,189,1.641,192,3.702,193,3.143,200,1.275,210,2.371,212,3.995,224,2.733,250,1.095,262,3.35,263,2.522,268,1.829,271,1.966,276,2.59,278,4.474,285,2.943,293,2.343,302,2.741,437,2.972,474,3.297,477,4.142,478,2.666,517,4.892,532,2.193,568,5.95,622,4.459,701,4.903,790,5.759,865,3.207,875,4.658,982,2.921,986,3.518,1066,3.35,1075,3.87,1180,5.95,1211,4.77,1272,6.365,1294,3.615,1335,3.722,1340,6.996,1484,4.903,1580,4.903,1595,3.981,1601,4.578,1603,4.336,1638,4.578,1649,6.365,1657,4.903,1661,7.909,1663,7.318,1673,4.142,1674,8.605,1675,4.903,1683,7.502,1684,7.502,1685,4.578,1686,4.903,1687,5.395,1688,4.658,1689,5.395,1690,5.395,1691,5.395,1692,6.817,1693,6.817,1694,8.624,1695,5.395,1696,5.395,1697,5.395]],["t/427",[8,1.118,32,5.501,53,3.528,65,1.583,74,1.46,76,0.696,79,1.061,80,4.331,93,2.231,116,4.089,131,5.797,133,1.54,137,4.288,144,3.489,147,1.032,151,3.062,155,1.349,168,3.034,216,4.895,258,3.416,271,3.639,293,4.338,445,3.829,474,3.693,532,3.415,570,5.63,1066,5.218,1142,4.403,1173,4.475,1198,4.147,1246,7.636,1247,7.369,1309,5.797,1529,5.936,1673,8.181,1698,8.403,1699,8.403,1700,9.987,1701,7.636]],["t/429",[2,0.732,8,0.846,35,1.363,36,1.363,39,2.653,50,2.691,52,0.675,65,1.027,74,0.947,76,0.815,79,1.206,91,4.083,93,1.938,104,1.354,105,0.762,106,3.476,108,1.373,110,1.403,119,1.811,122,4.694,133,0.746,141,1.373,147,0.84,149,4.863,155,1.437,159,1.392,169,2.454,172,3.104,173,2.159,174,1.07,178,1.661,179,1.646,180,2.299,182,1.987,183,3.133,184,2.738,188,1.713,189,1.659,212,4.618,250,1.534,251,2.516,260,1.084,271,1.987,285,3.172,292,3.762,293,3.767,304,1.383,315,2.044,316,1.933,317,2.044,319,3.039,322,1.335,323,1.261,324,1.945,325,1.607,331,2.169,351,2.35,353,2.176,354,2.497,355,2.478,361,1.945,369,1.445,370,1.467,371,2.428,373,2.11,375,2.193,376,1.607,377,2.655,378,2.176,379,1.414,388,1.414,412,2.159,415,1.511,420,2.193,422,1.5,429,2.079,430,1.511,431,1.435,432,1.511,433,1.478,445,2.485,473,3.241,474,2.396,502,3.556,512,2.903,513,3.96,539,6.072,553,6.866,558,3.762,559,4.954,560,4.626,561,4.626,562,4.954,564,3.627,565,4.381,566,6.412,568,6.784,569,4.954,570,5.81,658,1.95,838,3.884,1100,4.954,1152,2.005,1153,2.005,1157,2.005,1158,2.005,1159,3.19,1160,2.005,1161,1.987,1162,2.005,1163,2.148,1164,2.005,1165,2.005,1647,6.412,1656,4.626,1702,5.452,1703,4.381,1704,7.557,1705,5.452,1706,7.557,1707,5.452,1708,4.381,1709,5.452,1710,5.452,1711,4.186,1712,5.452,1713,5.452,1714,5.452,1715,4.381,1716,5.452]],["t/431",[2,0.905,8,1.047,28,1.541,65,1.421,69,2.884,79,0.801,93,2.374,108,1.9,111,1.991,132,1.039,137,3.239,147,1.127,157,5.054,170,6.453,183,2.714,184,2.973,193,4.394,194,6.267,212,5.818,216,4.394,217,3.722,260,1.5,285,2.95,290,5.791,319,3.034,341,2.373,344,1.999,450,4.58,479,3.167,500,5.791,523,5.566,540,5.808,566,6.401,567,7.936,568,7.538,570,6.811,593,5.373,613,6.062,648,6.401,670,6.401,862,3.891,891,5.791,1019,5.373,1021,8.499,1025,7.501,1173,4.017,1198,5.017,1215,5.448,1249,6.062,1331,4.919,1335,5.204,1336,5.566,1337,5.204,1717,7.543,1718,7.543,1719,10.628,1720,9.353,1721,9.353,1722,7.543,1723,9.353,1724,9.353,1725,5.566,1726,7.543,1727,9.353,1728,10.628,1729,9.353,1730,7.543,1731,6.854,1732,7.543,1733,5.204]],["t/433",[0,2.956,8,1.01,37,1.47,79,1.106,128,4.867,133,1.234,139,2.477,195,1.589,222,2.178,240,4.971,350,2.66,615,6.79,616,6.976,875,6.815,1734,8.2]],["t/435",[2,0.971,8,0.947,39,4.881,52,0.702,53,3.554,54,3.143,55,5.096,56,3.477,58,2.617,69,3.236,72,2.895,74,1.471,76,0.702,77,2.043,83,3.113,84,2.596,90,2.647,112,4.663,116,5.201,119,2.403,132,1.187,147,0.819,153,2.75,165,3.301,187,2.66,207,2.403,259,5.14,260,1.995,293,3.676,323,1.958,509,3.515,577,5.096,611,4.836,960,5.84,982,4.583,1144,7.692,1363,6.499,1374,6.246,1539,7.183,1735,6.499]],["t/437",[2,0.839,8,0.97,13,2.652,37,1.011,41,5.019,52,0.737,71,2.854,74,1.312,76,0.93,77,2.372,79,1.226,84,2.315,90,2.59,91,2.261,92,1.533,95,2.451,97,1.799,100,3.522,101,3.576,103,2.365,104,1.352,105,1.211,111,1.159,112,3,122,3.242,124,2.19,132,0.605,133,1.186,134,1.657,137,2.338,138,1.593,139,1.796,143,1.058,144,2.261,147,1.045,150,2.167,153,1.769,155,1.437,158,2.167,159,1.55,160,1.225,161,2.19,162,2.365,165,4.375,166,2.373,168,1.966,172,3.102,173,1.556,174,1.068,177,4.638,178,1.655,179,2.279,180,2.637,183,1.58,184,2.208,187,3.469,188,1.711,189,1.657,195,1.33,209,3.135,225,2.658,226,1.863,250,1.105,258,1.863,268,1.846,274,2.393,314,2.451,316,2.676,317,2.042,454,4.541,475,2.949,479,2.286,481,2.854,486,1.815,501,2.286,503,2.513,509,4.624,544,4.021,551,2.767,552,4.181,575,4.234,611,3.111,679,3.475,880,3.463,922,2.614,1013,2.65,1108,4.018,1179,2.854,1193,5.811,1194,4.688,1385,5.951,1387,5.059,1433,5.797,1568,5.511,1593,4.376,1736,9.359,1737,6.861,1738,5.446]],["t/439",[37,1.233,74,1.599,90,2.159,91,3.822,101,4.359,104,2.285,105,1.285,122,3.951,139,2.19,143,0.934,147,0.891,178,1.259,316,3.262,679,3.417]],["t/441",[37,1.233,52,0.585,76,0.763,84,2.822,100,4.28,105,1.285,137,3.951,139,2.19,147,1.019,178,1.259,679,3.417,1108,6.791]],["t/443",[2,0.969,8,0.944,52,0.726,76,0.934,77,2.575,79,1.133,92,2.373,97,2.786,111,1.796,124,3.392,132,0.937,133,1.369,134,2.566,138,2.467,143,1.143,144,3.502,147,0.969,155,1.398,158,3.357,159,1.586,160,1.897,161,3.392,162,3.663,166,3.145,168,3.045,209,4.156,225,2.586,226,2.884,268,2.859,544,5.329,575,5.613]],["t/445",[2,0.752,8,0.352,11,2.168,14,0.924,26,2.318,27,3.017,28,1.023,29,2.787,35,1.252,36,1.252,37,1.109,52,0.605,61,2.71,65,1.893,67,1.682,76,0.79,79,1.033,90,1.464,93,2.015,104,2.239,105,1.298,108,1.261,110,2.321,111,1.515,119,2.081,132,1.002,133,0.43,135,2.034,141,1.793,143,0.319,147,0.304,155,0.634,159,1.34,160,1.601,165,1.952,167,1.933,174,0.982,178,1.661,187,1.573,191,1.488,200,2.052,207,1.984,222,1.717,243,2.847,250,1.763,260,2.07,284,2.049,285,0.912,304,1.27,319,1.264,321,3.346,322,1.225,323,1.158,324,1.832,325,1.476,326,2.955,327,2.722,328,2.722,329,2.722,330,2.722,331,2.686,332,2.261,333,2.018,334,1.42,335,2.385,336,2.163,337,2.33,338,2.348,339,2.33,340,1.42,341,2.417,342,2.33,343,1.42,344,2.39,345,2.538,346,2.557,347,2.557,348,2.348,349,1.43,350,2.441,351,2.244,352,1.774,353,2.049,354,2.597,355,1.43,356,1.453,357,1.409,358,2.018,359,1.388,360,1.943,361,2.132,362,1.453,363,1.464,364,1.409,365,1.43,366,2.403,367,2.403,368,2.313,369,1.327,370,1.347,371,1.298,372,1.453,373,1.988,374,1.774,375,2.065,376,1.476,377,2.557,378,1.442,379,2.338,380,1.791,381,1.43,382,1.43,383,1.43,384,1.42,385,1.43,386,1.43,387,1.43,388,1.845,389,1.42,390,2.244,391,1.43,392,1.43,393,1.442,394,1.43,395,1.791,396,2.962,397,2.546,398,1.42,399,1.43,400,1.43,401,1.43,402,1.442,403,1.442,404,1.43,405,1.442,406,1.442,407,1.453,408,1.347,409,1.43,410,1.43,411,1.791,412,1.43,413,1.758,414,1.758,415,1.388,416,1.743,420,1.453,421,1.791,422,1.958,423,1.398,424,1.409,425,2.081,426,1.367,427,1.43,428,1.791,429,1.958,430,1.388,431,1.317,432,1.388,433,1.357,435,2.362,436,1.807,443,2.412,454,4.992,478,0.971,509,2.079,532,1.277,611,1.795,862,1.621,982,1.701,1179,1.646,1191,3.183,1193,3.108,1194,4.826,1195,2.105,1198,1.551,1285,1.868,1385,3.183,1387,5.207,1390,2.238,1568,6.058,1739,3.142,1740,4.023,1741,3.142,1742,3.142,1743,2.318,1744,2.855]],["t/447",[52,0.706,76,0.858,79,1.223,90,2.097,112,3.866,147,0.679,155,1.438,159,1.589,165,4.038,166,2.205,173,2.006,174,1.377,177,4.862,178,1.667,179,2.698,180,2.992,183,2.037,184,2.614,187,3.435,188,2.205,189,2.135,260,1.396,316,2.488,317,3.687,478,2.17,509,4.67,512,3.737,513,3.678,575,3.936,604,4.262,682,4.703,690,3.084,1233,6.378,1568,5.684,1668,5.955,1743,7.257]],["t/449",[2,0.694,11,2.194,14,0.933,27,3.021,28,1.033,29,2.792,35,1.264,36,1.264,37,1.115,41,3.536,52,0.607,61,1.722,65,1.899,67,1.699,76,0.793,79,1.016,90,1.681,93,2.024,104,2.249,105,1.303,108,1.273,110,2.332,111,1.526,116,2.46,119,1.995,132,1.006,135,2.048,141,1.805,155,0.64,159,1.346,160,1.612,167,1.942,174,0.992,178,1.661,187,1.588,200,1.967,207,1.995,222,1.729,243,2.853,250,1.69,260,2.075,304,1.283,321,2.747,322,1.237,323,1.169,324,1.845,325,1.49,326,2.964,327,2.734,328,2.734,329,2.734,330,2.734,331,2.691,332,2.273,333,2.032,334,1.433,335,2.397,336,2.175,337,2.343,338,2.361,339,2.343,340,1.433,341,2.426,342,2.343,343,1.433,344,2.401,345,2.549,346,2.569,347,2.569,348,2.361,349,1.444,350,2.454,351,2.256,352,1.792,353,2.064,354,2.608,355,1.444,356,1.467,357,1.423,358,2.032,359,1.401,360,1.957,361,2.143,362,1.467,363,1.478,364,1.423,365,1.444,366,2.416,367,2.416,368,2.325,369,1.34,370,1.36,371,1.311,372,1.467,373,2.001,374,1.792,375,2.08,376,1.49,377,2.569,378,1.456,379,2.349,380,1.808,381,1.444,382,1.444,383,1.444,384,1.433,385,1.444,386,1.444,387,1.444,388,1.858,389,1.433,390,2.256,391,1.444,392,1.444,393,1.456,394,1.444,395,1.808,396,2.978,397,2.563,398,1.433,399,1.444,400,1.444,401,1.444,402,1.456,403,1.456,404,1.444,405,1.456,406,1.456,407,1.467,408,1.36,409,1.444,410,1.444,411,1.808,412,1.444,413,1.776,414,1.776,415,1.401,416,1.76,420,1.467,421,1.808,422,1.971,423,1.412,424,1.423,425,2.096,426,1.38,427,1.444,428,1.808,429,1.971,430,1.401,431,1.33,432,1.401,433,1.37,435,1.204,436,1.825,444,3.608,454,5.011,509,2.099,611,2.888,862,1.641,1191,3.214,1193,1.975,1194,4.855,1195,2.131,1197,1.506,1385,3.214,1387,5.239,1390,2.266,1737,4.593,1743,7.056,1745,4.593,1746,3.181,1747,2.699,1748,3.181]],["t/451",[0,2.922,37,1.506,52,0.567,65,1.68,74,1.898,92,2.911,111,1.899,139,2.599,147,1.107,187,2.803,195,1.571,239,5.002,258,3.051,474,4.545,478,2.758,581,7.569,1363,6.848]],["t/453",[2,0.788,41,4.835,47,4.135,52,0.693,58,2.516,74,1.826,76,0.965,79,1.04,90,1.909,91,4.068,92,2.29,100,3.307,105,1.137,106,3.264,114,3.576,122,3.494,132,1.24,138,2.865,139,1.936,143,1.15,147,0.788,153,2.644,164,5.707,165,3.821,167,1.745,169,4.41,181,5.797,182,3.57,216,4.74,268,3.784,271,2.965,319,3.273,548,5.453,1045,4.198,1180,6.759,1198,4.016,1393,5.453,1419,5.797,1425,4.41,1749,8.138,1750,6.248,1751,6.248,1752,5.615]],["t/455",[2,0.99,8,1.083,13,3.072,14,1.614,37,0.909,52,0.739,71,3.554,72,2.32,74,1.519,76,0.914,77,2.336,79,1.224,90,2.271,91,4.019,92,1.909,97,2.241,105,1.222,106,3.722,124,2.728,132,0.753,133,1.324,134,2.063,138,1.984,139,1.614,143,1.073,147,1.024,150,2.7,153,2.203,155,1.466,158,2.7,159,1.573,160,1.526,161,2.728,162,2.946,166,2.748,168,2.449,172,2.786,173,1.938,174,1.331,178,1.651,179,2.639,180,2.66,183,1.968,184,2.558,188,2.131,189,2.063,191,3.212,195,1.54,209,3.631,225,2.08,226,2.32,242,2.382,258,2.32,268,2.299,314,3.053,315,3.279,481,3.554,501,2.848,503,3.13,544,4.657,577,3.446,679,3.594,922,3.256,982,3.672,1013,3.301,1179,3.554]],["t/457",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/459",[2,0.968,8,0.942,52,0.715,71,4.411,76,0.947,77,2.573,79,1.172,92,2.369,97,2.781,124,3.386,132,0.935,133,1.368,134,2.561,138,2.462,143,1.119,147,0.968,155,1.397,158,3.351,159,1.585,160,1.894,161,3.386,162,3.656,166,3.142,168,3.039,209,4.151,225,2.582,226,2.879,268,2.854,315,3.748,544,5.324,577,4.277,982,4.558]],["t/461",[2,0.806,14,1.834,52,0.529,61,4.509,65,1.569,74,1.726,79,0.884,86,3.724,90,2.635,91,4.733,93,2.219,105,1.387,106,3.894,119,1.995,122,4.265,133,1.359,138,2.436,143,1.077,147,0.962,155,1.054,166,2.617,200,1.968,206,4.169,211,5.675,268,3.599,1142,4.364,1415,5.671,1417,7.113,1753,6.394,1754,8.531]],["t/463",[2,0.714,13,2.591,14,1.362,52,0.703,76,0.834,79,1.206,86,2.765,90,2.597,91,4.598,105,1.03,106,3.689,119,2.21,122,4.754,133,1.009,138,2.697,143,1.021,147,0.974,155,1.46,159,1.496,173,2.108,174,1.447,178,1.661,179,2.784,180,3.061,183,2.14,184,2.697,188,2.318,189,2.244,195,1.299,268,3.127,274,3.241,448,4.478,501,3.096,540,4.58,760,2.792]],["t/465",[2,0.692,52,0.717,79,1.226,80,2.905,86,2.68,90,2.617,91,4.561,103,3.105,106,3.899,119,1.713,122,4.846,138,2.091,147,0.875,155,1.442,159,1.474,173,2.043,174,1.402,178,1.664,179,2.729,180,3.018,183,2.074,184,2.645,188,2.246,189,2.175,195,1.259,274,3.141,276,3.431,315,2.68,316,2.534,317,2.68,512,3.806,513,3.746,1753,5.488,1755,5.092]],["t/467",[2,0.667,8,0.535,14,1.491,27,2.996,28,0.978,29,2.765,35,1.196,36,1.196,37,1.082,52,0.561,58,1.479,76,0.732,79,0.938,93,2.092,104,2.193,105,1.308,106,2.69,108,1.205,110,2.274,111,1.467,132,1.083,133,0.942,141,1.735,143,0.699,151,1.743,155,0.606,159,1.313,160,1.55,167,1.894,174,0.939,178,1.658,186,2.635,195,0.842,200,1.907,207,1.935,210,2.102,222,1.662,243,2.819,250,1.639,260,2.045,263,3.22,285,2.829,304,1.214,322,1.171,323,1.107,324,1.773,325,1.41,326,2.916,327,2.666,328,2.666,329,2.666,330,2.666,331,2.659,332,1.881,333,1.954,334,1.357,335,2.325,336,2.109,337,2.272,338,2.29,339,2.272,340,1.357,341,2.375,342,2.272,343,1.357,344,2.341,345,2.486,346,2.505,347,2.505,348,2.29,349,1.367,351,2.188,353,1.984,354,2.325,355,2.307,356,1.388,357,1.346,358,1.954,359,1.326,360,1.881,361,2.274,362,1.388,363,1.399,364,1.346,365,1.367,366,2.343,367,2.343,368,2.255,369,1.826,370,1.853,371,1.786,372,1.388,373,1.924,375,1.999,376,1.41,377,2.505,378,1.984,379,1.24,381,1.367,382,1.367,383,1.367,384,1.357,385,1.367,386,1.367,387,1.367,388,1.786,389,1.357,390,1.867,391,1.367,392,1.367,393,1.378,394,1.367,398,1.357,399,1.367,400,1.367,401,1.367,402,1.378,403,1.378,404,1.367,405,1.378,406,1.378,407,1.388,408,1.287,409,1.367,410,1.367,412,1.969,415,1.326,420,1.999,422,1.895,423,1.336,424,1.346,425,2.015,426,1.306,427,1.367,429,1.895,430,1.326,431,1.259,432,1.326,433,1.296,467,2.054,479,2.008,551,2.431,557,2.786,592,2.468,658,1.711,676,2.733,690,2.102,855,2.328,1017,2.635,1118,2.905,1146,3.205,1152,1.76,1153,1.76,1157,1.76,1158,1.76,1159,2.97,1160,1.76,1161,1.743,1162,1.76,1163,1.884,1164,1.76,1165,1.76,1349,2.97,1388,3.042,1415,2.468,1416,3.61,1420,4.347,1421,2.905,1489,3.673,1497,3.673,1503,3.407,1506,3.53,1753,3.673,1754,6.488,1756,4.347,1757,4.784,1758,4.784,1759,4.784]],["t/469",[2,0.663,14,0.877,27,2.993,28,0.971,29,2.762,35,1.188,36,1.188,37,1.077,52,0.511,76,0.666,79,0.854,90,2.19,91,3.876,93,2.086,104,2.186,105,1.304,106,1.583,108,1.196,110,2.266,111,1.459,122,4.407,132,0.978,141,1.726,155,0.601,159,1.308,160,1.542,167,1.887,174,0.932,178,1.659,200,1.9,207,1.927,222,1.654,243,2.814,250,1.632,260,2.041,268,1.61,285,2.823,304,1.205,322,1.163,323,1.099,324,1.764,325,1.4,326,2.91,327,2.657,328,2.657,329,2.657,330,2.657,331,2.655,332,1.871,333,1.944,334,1.347,335,2.316,336,2.1,337,2.263,338,2.28,339,2.263,340,1.347,341,2.368,342,2.263,343,1.347,344,2.334,345,2.478,346,2.497,347,2.497,348,2.28,349,1.357,351,2.179,353,1.974,354,2.316,355,2.298,356,1.378,357,1.337,358,1.944,359,1.316,360,1.871,361,2.266,362,1.378,363,1.389,364,1.337,365,1.357,366,2.334,367,2.334,368,2.246,369,1.817,370,1.844,371,1.777,372,1.378,373,1.914,375,1.989,376,1.4,377,2.497,378,1.974,379,1.232,381,1.357,382,1.357,383,1.357,384,1.347,385,1.357,386,1.357,387,1.357,388,1.777,389,1.347,390,1.857,391,1.357,392,1.357,393,1.368,394,1.357,398,1.347,399,1.357,400,1.357,401,1.357,402,1.368,403,1.368,404,1.357,405,1.368,406,1.368,407,1.378,408,1.278,409,1.357,410,1.357,412,1.958,415,1.316,420,1.989,422,1.886,423,1.326,424,1.337,425,2.004,426,1.297,427,1.357,429,1.886,430,1.316,431,1.25,432,1.316,433,1.287,479,4.457,658,1.699,760,1.798,1152,1.747,1153,1.747,1157,1.747,1158,1.747,1159,2.958,1160,1.747,1161,1.731,1162,1.747,1163,1.871,1164,1.747,1165,1.747,1415,2.45,1417,5.388,1422,3.383,1504,4.03,1507,4.03,1708,3.817,1711,3.646,1715,3.817,1754,7.075,1756,4.316,1760,9.335,1761,4.75,1762,4.75,1763,4.75]],["t/471",[2,0.747,8,0.494,12,3.145,14,0.815,27,2.958,28,0.902,29,2.725,35,1.104,36,1.104,37,1.139,52,0.576,61,2.391,64,2.624,65,1.895,67,1.484,74,0.767,76,0.834,79,1.109,80,1.794,90,1.036,91,1.833,93,2.025,103,1.918,104,2.112,105,1.188,106,3.479,108,1.112,110,2.189,111,1.384,119,1.848,122,2.79,132,0.945,133,1.055,134,1.343,135,1.857,138,1.291,141,1.637,143,0.659,147,0.427,155,0.823,159,1.264,160,1.462,167,1.943,174,0.866,178,1.656,191,2.091,195,0.777,200,2.009,207,1.848,222,1.568,242,1.551,243,2.767,250,1.726,251,2.037,260,2,276,2.119,287,3.746,299,3.39,304,1.12,321,3.184,322,1.081,323,1.021,324,1.673,325,1.301,326,2.845,327,2.567,328,2.567,329,2.567,330,2.567,331,2.611,332,2.106,333,1.843,334,1.252,335,2.221,336,2.014,337,2.17,338,2.187,339,2.17,340,1.252,341,2.3,342,2.17,343,1.252,344,2.254,345,2.394,346,2.412,347,2.412,348,2.187,349,1.262,350,2.507,351,2.09,352,1.565,353,1.871,354,2.449,355,1.262,356,1.281,357,1.243,358,1.843,359,1.224,360,1.774,361,1.985,362,1.281,363,1.291,364,1.243,365,1.262,366,2.238,367,2.238,368,2.154,369,1.17,370,1.188,371,1.685,372,1.281,373,1.815,374,1.565,375,1.886,376,1.301,377,2.412,378,1.271,379,2.205,380,1.579,381,1.262,382,1.262,383,1.262,384,1.252,385,1.262,386,1.262,387,1.262,388,1.685,389,1.252,390,2.09,391,1.262,392,1.262,393,1.271,394,1.262,395,1.579,396,2.758,397,2.325,398,1.252,399,1.262,400,1.262,401,1.262,402,1.271,403,1.271,404,1.262,405,1.271,406,1.271,407,1.281,408,1.188,409,1.262,410,1.262,411,1.579,412,1.262,413,1.551,414,1.551,415,1.224,416,1.537,420,1.281,421,1.579,422,1.788,423,1.233,424,1.243,425,1.901,426,1.206,427,1.262,428,1.579,429,1.788,430,1.224,431,1.162,432,1.224,433,1.197,435,1.671,436,1.594,438,3.046,467,1.896,473,2.624,474,1.94,479,2.728,481,2.314,513,2.314,539,3.548,547,3.145,557,2.572,558,3.046,560,3.746,561,3.746,563,4.012,570,2.958,598,2.432,760,1.671,849,2.681,1066,2.742,1388,2.807,1415,4.388,1416,4.75,1417,6.995,1421,2.681,1422,3.145,1508,4.012,1753,3.39,1754,5.222,1764,4.415,1765,3.746,1766,3.548,1767,3.746,1768,4.415,1769,4.415,1770,4.415]],["t/473",[0,2.835,8,0.969,13,3.04,37,1.491,52,0.55,65,1.63,72,2.96,74,1.504,76,0.94,88,4.608,89,4.271,90,2.384,91,4.22,96,6.385,106,3.386,122,4.632,139,2.059,143,1.031,147,1.099,151,3.703,164,5.041,165,3.375,195,1.524,200,2.401,316,3.067,571,4.464,611,4.944]],["t/475",[14,1.577,39,4.157,52,0.543,54,3.172,66,3.266,69,3.266,72,3.449,74,1.965,76,0.836,77,2.061,90,2.366,94,4.157,108,2.152,115,7.249,119,2.047,132,1.12,133,1.169,139,2.032,143,0.867,153,2.775,155,1.277,253,5.304,268,3.419,273,5.724,473,5.994,474,5.038,478,2.641,548,5.724,855,4.157,1462,7.249,1755,7.643,1771,8.543,1772,8.543,1773,6.085,1774,8.543]],["t/477",[2,0.992,8,1.186,13,3.409,14,1.792,37,0.914,52,0.723,58,2.109,66,3.917,72,2.333,74,1.686,76,0.927,77,2.342,79,1.172,90,2.277,92,1.92,97,2.254,105,1.226,124,2.744,132,1.078,133,1.45,134,2.076,138,1.995,139,1.623,143,1.12,147,1.026,150,2.715,151,2.486,153,2.216,155,1.473,158,2.715,159,1.523,160,1.535,161,2.744,162,2.963,166,2.758,168,2.463,172,2.803,173,1.95,174,1.339,178,1.635,179,2.059,180,2.076,183,1.98,184,2.567,186,3.758,188,2.144,189,2.076,195,1.709,209,3.645,210,2.998,225,2.976,226,2.333,242,2.396,250,1.385,254,5.238,258,2.333,263,4.103,314,3.071,467,2.929,473,4.055,474,2.998,481,3.575,501,2.864,503,3.148,557,3.974,592,3.519,676,3.898,679,3.604,690,2.998,855,3.32,922,3.275,1013,3.32,1017,3.758,1118,4.143,1146,4.571,1179,3.575,1340,4.707,1349,4.236,1686,6.2]],["t/479",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/481",[2,0.965,8,1.115,13,2.941,52,0.699,74,1.455,76,0.946,77,2.568,79,1.13,92,2.356,97,2.766,124,3.367,132,0.93,133,1.455,134,2.547,138,2.449,143,1.141,147,0.965,155,1.46,158,3.332,159,1.581,160,1.884,161,3.367,162,3.637,166,3.131,168,3.023,209,4.138,225,3.263,226,2.864,254,6.428,473,4.977,474,3.679]],["t/483",[52,0.58,58,2.823,76,0.914,79,1.113,90,2.142,94,4.443,153,2.966,224,3.327,253,5.67,268,3.554,271,3.327,273,6.118,1292,7.01,1522,5.954]],["t/485",[2,0.614,14,1.397,27,2.942,28,0.874,29,2.708,35,1.07,36,1.07,37,1.014,50,3.132,52,0.715,56,1.757,66,3.709,74,1.315,75,1.974,76,0.891,79,0.995,90,1.776,93,1.999,98,2.866,104,2.079,105,1.25,108,1.077,110,2.156,111,1.351,120,2.656,132,1.151,133,1.146,141,1.599,143,0.85,155,1.347,159,1.245,160,1.428,167,1.795,172,2.607,174,0.839,178,1.657,187,1.344,193,5.806,195,1.118,200,1.788,207,1.814,222,1.532,241,3.046,243,2.746,250,1.536,251,2.929,260,1.982,268,1.45,285,2.72,304,1.085,322,1.047,323,0.989,324,1.634,325,1.261,326,2.816,327,2.528,328,2.528,329,2.528,330,2.528,331,2.591,332,1.733,333,1.8,334,1.213,335,2.18,336,1.977,337,2.13,338,2.146,339,2.13,340,1.213,341,2.27,342,2.13,343,1.213,344,2.22,345,2.357,346,2.375,347,2.375,348,2.146,349,1.222,351,2.051,353,1.828,354,2.18,355,2.163,356,1.241,357,1.204,358,1.8,359,1.185,360,1.733,361,2.156,362,1.241,363,1.251,364,1.204,365,1.222,366,2.197,367,2.197,368,2.114,369,1.683,370,1.708,371,1.646,372,1.241,373,1.773,375,1.842,376,1.261,377,2.375,378,1.828,379,1.109,381,1.222,382,1.222,383,1.222,384,1.213,385,1.222,386,1.222,387,1.222,388,1.646,389,1.213,390,1.72,391,1.222,392,1.222,393,1.232,394,1.222,398,1.213,399,1.222,400,1.222,401,1.222,402,1.232,403,1.232,404,1.222,405,1.232,406,1.232,407,1.241,408,1.151,409,1.222,410,1.222,412,1.814,415,1.185,418,2.542,420,1.842,422,1.746,423,1.194,424,1.204,425,1.856,426,1.168,427,1.222,429,1.746,430,1.185,431,1.125,432,1.185,433,1.159,473,4.499,474,3.326,479,1.796,482,3.942,483,5.386,484,5.585,551,2.173,658,1.53,1152,1.573,1153,1.573,1157,1.573,1158,1.573,1159,2.784,1160,1.573,1161,1.558,1162,1.573,1163,1.685,1164,1.573,1165,1.573,1216,2.789,1340,5.222,1341,3.283,1342,2.951,1343,3.629,1345,3.629,1346,2.951,1415,2.206,1416,2.241,1673,7.196,1775,7.61,1776,9.057,1777,8.13,1778,4.277,1779,3.886,1780,4.277,1781,4.277,1782,6.348,1783,4.277,1784,4.277,1785,4.277]],["t/487",[2,0.649,8,0.516,14,0.851,27,2.979,28,0.942,29,2.747,35,1.152,36,1.152,37,1.059,39,2.242,52,0.647,65,1.872,66,3.798,67,1.549,76,0.798,79,0.98,83,2.466,90,1.573,93,1.939,104,2.155,105,1.212,108,1.161,110,2.234,111,1.428,119,2.08,132,0.964,133,1.081,135,1.916,141,1.689,143,0.802,151,1.679,155,0.849,159,1.29,160,1.508,167,1.861,174,0.904,178,1.658,200,1.867,207,1.894,222,1.618,243,2.795,250,1.604,260,2.024,304,1.169,320,1.728,321,3.381,322,1.128,323,1.066,324,1.726,325,1.358,326,2.883,327,2.62,328,2.62,329,2.62,330,2.62,331,2.637,332,2.158,333,1.901,334,1.307,335,2.276,336,2.065,337,2.224,338,2.241,339,2.224,340,1.307,341,2.34,342,2.224,343,1.307,344,2.301,345,2.443,346,2.462,347,2.462,348,2.241,349,1.317,350,2.33,351,2.142,352,1.633,353,1.931,354,2.5,355,1.317,356,1.337,357,1.297,358,1.901,359,1.277,360,1.831,361,2.035,362,1.337,363,1.348,364,1.297,365,1.317,366,2.294,367,2.294,368,2.208,369,1.221,370,1.24,371,1.195,372,1.337,373,1.873,374,1.633,375,1.946,376,1.358,377,2.462,378,1.327,379,2.251,380,1.648,381,1.317,382,1.317,383,1.317,384,1.307,385,1.317,386,1.317,387,1.317,388,1.739,389,1.307,390,2.142,391,1.317,392,1.317,393,1.327,394,1.317,395,1.648,396,2.827,397,2.398,398,1.307,399,1.317,400,1.317,401,1.317,402,1.327,403,1.327,404,1.317,405,1.327,406,1.327,407,1.337,408,1.24,409,1.317,410,1.317,411,1.648,412,1.317,413,1.619,414,1.619,415,1.277,416,1.604,418,2.739,420,1.337,421,1.648,422,1.845,423,1.287,424,1.297,425,1.961,426,1.258,427,1.317,428,1.648,429,1.845,430,1.277,431,1.212,432,1.277,433,1.249,435,1.744,436,1.664,474,2.025,532,1.873,548,3.087,1235,2.861,1375,2.93,1415,3.459,1416,5.044,1421,2.798,1775,8.747,1776,9.25,1779,4.187,1786,4.608,1787,3.538,1788,4.187,1789,4.608]],["t/489",[0,2.939,8,1.161,31,5.273,37,1.508,65,1.69,139,2.605,147,1.109,167,2.225,195,1.58,239,5.031,258,3.068,486,3.458,581,7.613,602,6.011]],["t/491",[2,0.689,3,6.221,4,4.909,8,1.108,14,1.921,37,1.208,39,3.462,52,0.716,54,3.348,58,3.06,65,1.865,66,2.72,69,2.72,72,3.385,74,1.567,75,4.161,76,0.747,79,1.105,80,3.665,84,3.517,90,1.669,92,2.002,93,1.59,95,3.203,100,4.769,101,3.37,103,4.299,106,2.371,107,3.92,110,1.832,119,2.161,131,6.221,132,1.002,133,0.973,139,1.693,143,0.722,144,2.955,147,1.008,153,2.311,155,0.901,170,4.909,175,3.084,177,4.628,182,2.593,216,4.145,226,2.433,276,3.415,344,2.39,467,4.469,478,2.2,495,4.64,617,5.25,667,3.99,717,4.909,795,5.718,855,4.817,1142,3.728,1148,6.466,1149,5.718,1198,3.511,1215,4.145,1273,5.463,1412,5.068,1419,5.068,1425,3.203,1529,4.229,1651,6.038,1685,6.038,1790,7.115,1791,7.413,1792,7.599,1793,6.466,1794,8.995,1795,5.718,1796,5.25,1797,4.418,1798,7.115,1799,7.115,1800,7.115,1801,7.115,1802,9.017,1803,6.038,1804,8.194,1805,7.115]],["t/493",[2,0.987,8,1.141,13,3.057,14,1.607,28,1.779,37,0.902,52,0.741,65,1.921,72,2.303,74,1.676,76,0.934,77,2.327,79,1.169,92,1.895,97,2.225,105,1.216,119,1.613,124,2.708,132,0.967,133,1.319,134,2.048,138,2.982,139,1.602,143,1.153,147,1.022,150,2.68,153,2.187,155,1.457,158,2.68,159,1.569,160,1.515,161,2.708,162,2.925,166,2.735,168,2.431,172,2.766,173,1.924,174,1.321,175,3.487,177,4.534,178,1.642,179,2.032,180,2.648,183,1.954,184,2.546,188,2.116,189,2.048,195,1.533,209,3.614,225,2.065,226,2.303,242,3.388,250,1.767,258,2.303,268,2.951,293,2.925,314,3.031,319,3.5,335,1.939,481,3.528,501,2.827,503,3.107,679,3.581,922,3.232,1013,3.277,1179,3.528,1457,4.796,1791,6.87]],["t/495",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/497",[2,0.944,8,1.092,28,1.994,52,0.727,65,2.05,74,1.404,76,0.957,77,2.529,79,1.113,92,2.274,97,2.67,119,1.936,124,3.25,132,1.084,133,1.335,134,2.459,138,3.183,143,1.18,147,0.944,155,1.41,158,3.216,159,1.558,160,1.818,161,3.25,162,3.51,166,3.066,168,2.917,209,4.051,225,2.478,226,2.764,242,3.427,250,1.64,268,3.307,293,3.51,319,3.923,335,2.327]],["t/499",[2,0.83,8,0.96,37,1.149,39,4.172,52,0.545,65,1.615,66,3.278,77,2.439,79,1.179,83,3.717,84,3.403,100,4.368,101,4.061,105,1.198,132,0.952,133,1.173,143,0.87,144,3.56,147,0.978,150,3.413,159,1.274,175,2.932,177,3.813,225,2.629,242,3.55,302,5.135,501,3.6,676,4.898,1457,6.107,1791,7.654,1792,8.691,1806,7.791]],["t/501",[2,0.772,8,0.892,50,3.933,52,0.732,75,3.678,79,1.179,100,4.234,103,3.462,147,0.937,155,1.428,159,1.438,173,2.278,174,1.564,175,3.796,177,4.935,178,1.655,179,2.406,180,2.943,183,2.313,184,2.829,188,2.505,189,2.425,195,1.404,262,4.949,276,3.826,467,3.422,528,4.391,615,5.198,1457,5.677,1791,6.891]],["t/503",[2,0.662,8,0.766,46,3.769,52,0.711,55,3.477,66,3.362,72,2.34,76,0.567,79,1.241,83,2.517,84,3.387,93,1.529,100,2.781,103,2.972,107,3.769,110,1.761,112,3.769,116,3.33,119,1.64,131,4.721,143,0.892,145,3.284,147,0.851,155,1.443,159,1.577,173,1.955,174,1.342,175,3.714,177,4.976,178,1.657,179,2.065,180,2.676,183,1.986,184,2.572,188,2.15,189,2.082,192,3.377,195,1.549,213,5.499,225,2.098,226,3.008,242,3.089,262,4.249,268,2.32,276,3.284,293,3.82,302,3.477,315,2.565,316,2.425,317,3.644,467,2.938,478,2.719,479,2.873,540,4.249,615,4.462,873,5.049,1393,4.585,1519,5.049,1777,6.218,1791,7.558,1792,7.462,1793,6.218,1803,8.247,1807,4.874,1808,8.832]],["t/505",[2,0.698,8,0.171,14,1.206,27,3.025,28,1.041,29,2.795,35,1.274,36,1.274,37,1.12,52,0.64,58,0.471,65,1.851,66,1.037,67,1.494,76,0.825,79,1.07,84,0.832,93,2.08,100,1.807,103,0.662,104,2.257,105,1.27,108,1.284,110,2.34,111,1.535,119,2.004,132,1.034,133,0.501,135,1.866,141,1.815,143,0.372,151,0.555,155,0.715,159,1.351,160,1.622,166,0.479,167,1.949,174,1,175,2.648,177,3.443,178,1.662,186,0.84,191,0.722,195,0.783,200,1.976,207,2.004,210,0.67,222,1.739,243,2.858,250,1.697,260,2.079,263,1.268,285,1.639,304,1.293,321,2.937,322,1.247,323,1.179,324,1.855,325,1.502,326,2.971,327,2.744,328,2.744,329,2.744,330,2.744,331,2.696,332,2.232,333,2.044,334,1.445,335,2.408,336,2.184,337,2.353,338,2.371,339,2.353,340,1.445,341,2.434,342,2.353,343,1.445,344,2.41,345,2.558,346,2.578,347,2.578,348,2.371,349,1.456,350,2.282,351,2.266,352,1.576,353,2.076,354,2.582,355,1.749,356,1.479,357,1.434,358,2.044,359,1.413,360,1.968,361,2.197,362,1.479,363,1.49,364,1.434,365,1.456,366,2.427,367,2.427,368,2.336,369,1.497,370,1.519,371,1.464,372,1.479,373,2.013,374,1.576,375,2.092,376,1.502,377,2.61,378,1.626,379,2.253,380,1.59,381,1.456,382,1.456,383,1.456,384,1.445,385,1.456,386,1.456,387,1.456,388,1.869,389,1.445,390,2.216,391,1.456,392,1.456,393,1.468,394,1.456,395,1.59,396,2.769,397,2.336,398,1.445,399,1.456,400,1.456,401,1.456,402,1.468,403,1.468,404,1.456,405,1.468,406,1.468,407,1.479,408,1.371,409,1.456,410,1.456,411,1.59,412,1.614,413,1.561,414,1.561,415,1.413,416,1.547,418,0.906,420,1.639,421,1.59,422,1.983,423,1.423,424,1.434,425,2.108,426,1.392,427,1.456,428,1.59,429,1.983,430,1.413,431,1.341,432,1.413,433,1.381,435,1.387,436,1.605,444,2.352,449,1.725,467,0.654,477,1.17,478,2.394,479,0.64,526,0.825,557,0.888,592,0.786,658,0.545,676,0.871,690,0.67,760,1.027,855,0.742,1017,0.84,1118,0.926,1146,1.021,1152,0.561,1153,0.561,1157,0.561,1158,0.561,1159,1.348,1160,0.561,1161,0.555,1162,0.561,1163,0.6,1164,0.561,1165,0.561,1169,1.769,1197,0.722,1342,1.052,1346,1.052,1349,0.947,1415,3.718,1416,4.057,1421,2.225,1503,1.086,1506,1.125,1692,1.385,1765,2.302,1766,2.18,1767,2.302,1791,5.134,1792,3.413,1803,6.762,1804,9.387,1808,7.754,1809,1.293,1810,1.524,1811,6.121,1812,5.847,1813,6.57,1814,2.713,1815,1.385,1816,1.052,1817,5.648,1818,3.11,1819,1.052,1820,1.524,1821,2.713,1822,1.385,1823,1.052,1824,2.713,1825,1.524,1826,1.524,1827,1.17,1828,2.713,1829,1.524,1830,1.524,1831,1.524]],["t/507",[0,2.878,8,0.983,13,3.086,37,1.498,65,1.655,84,2.694,88,5.459,89,5.059,100,3.57,106,2.927,139,2.09,143,1.04,147,1.083,164,5.117,175,3.005,176,5.586,195,1.547,200,2.422,225,2.694,255,3.57,268,3.475,509,3.648,546,5.551,571,5.288,1425,3.954]],["t/509",[8,0.944,14,1.557,17,3.796,52,0.701,54,3.132,58,2.607,72,3.65,74,1.958,76,0.885,79,1.063,83,3.102,90,2.348,92,3.106,94,4.104,97,2.786,111,1.796,130,7.156,132,1.112,133,1.154,139,2.007,143,0.856,151,3.073,153,2.74,165,3.289,175,3.423,187,2.65,195,1.485,204,4.351,224,3.073,271,3.073,278,4.048,293,3.663,467,3.621,478,2.607,696,5.237,879,5.819,902,5.819,1174,7.664,1175,7.664,1176,7.664,1177,7.156,1178,6.778]],["t/511",[2,1.017,8,1.121,13,3.22,14,1.693,37,0.979,52,0.732,72,2.499,74,1.593,76,0.929,77,2.418,79,1.19,90,2.351,92,2.056,97,2.414,105,1.281,106,3.501,124,2.938,133,1.371,134,2.223,138,2.137,139,1.738,143,1.098,147,1.048,150,2.908,153,2.373,155,1.448,158,2.908,159,1.562,160,1.644,161,2.938,162,3.173,166,2.881,168,2.637,172,3.001,173,2.088,174,1.433,178,1.637,179,2.205,180,2.223,183,2.12,184,2.681,188,2.296,189,2.223,195,1.614,209,3.807,225,2.24,226,2.499,242,2.566,250,1.483,258,2.499,314,3.288,481,3.828,501,3.067,503,3.371,679,3.721,922,3.507,1013,3.555,1179,3.828]],["t/513",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/515",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/517",[2,0.844,8,0.976,13,3.063,17,5.022,52,0.648,54,4.018,58,2.696,65,1.643,73,6.015,74,1.515,76,0.897,79,1.084,84,2.674,90,2.045,92,2.454,100,3.544,103,3.787,105,1.218,106,2.905,132,0.969,147,0.844,150,3.47,187,3.4,225,2.674,271,3.177,299,6.694,478,2.696,855,4.243,1013,4.243,1529,5.183,1594,7.923]],["t/519",[2,0.928,17,4.974,52,0.684,76,0.651,79,1.209,80,3.19,90,2.249,105,1.096,106,3.448,132,0.872,147,1.002,151,2.86,155,1.455,159,1.538,173,2.243,174,1.54,178,1.66,179,2.893,180,2.916,183,2.278,184,2.803,187,3.472,188,2.466,189,2.388,195,1.382,271,2.86,531,7.133]],["t/521",[2,0.679,14,1.294,17,2.206,27,3.007,28,1.001,29,2.777,35,1.225,36,1.225,37,1.096,52,0.567,76,0.678,79,0.869,93,2.196,103,2.128,104,2.217,105,1.247,108,1.234,110,2.299,111,1.492,132,0.992,133,0.67,141,1.765,143,0.497,155,0.62,159,1.327,160,1.577,167,1.914,174,0.961,178,1.659,187,2.806,200,1.933,207,1.961,222,1.691,243,2.833,250,1.661,260,2.058,285,2.852,304,1.243,322,1.199,323,1.133,324,1.804,325,1.444,326,2.937,327,2.695,328,2.695,329,2.695,330,2.695,331,2.673,332,1.914,333,1.988,334,1.389,335,2.356,336,2.137,337,2.303,338,2.32,339,2.303,340,1.389,341,2.397,342,2.303,343,1.389,344,2.367,345,2.513,346,2.533,347,2.533,348,2.32,349,1.4,351,2.218,353,2.018,354,2.356,355,2.338,356,1.422,357,1.379,358,1.988,359,1.358,360,1.914,361,2.299,362,1.422,363,1.433,364,1.379,365,1.4,366,2.375,367,2.375,368,2.285,369,1.858,370,1.885,371,1.817,372,1.422,373,1.958,375,2.034,376,1.444,377,2.533,378,2.018,379,1.271,381,1.4,382,1.4,383,1.4,384,1.389,385,1.4,386,1.4,387,1.4,388,1.817,389,1.389,390,1.9,391,1.4,392,1.4,393,1.411,394,1.4,398,1.389,399,1.4,400,1.4,401,1.4,402,1.411,403,1.411,404,1.4,405,1.411,406,1.411,407,1.422,408,1.318,409,1.4,410,1.4,412,2.003,415,1.358,420,2.034,422,1.928,423,1.368,424,1.379,425,2.05,426,1.338,427,1.4,429,1.928,430,1.358,431,1.289,432,1.358,433,1.328,526,2.653,551,2.49,658,1.753,760,1.855,1152,1.802,1153,1.802,1157,1.802,1158,1.802,1159,3.01,1160,1.802,1161,1.785,1162,1.802,1163,1.93,1164,1.802,1165,1.802,1222,3.283,1224,3.195,1227,3.283,1812,4.158,1813,5.947,1815,4.452,1818,4.158,1822,4.452,1832,6.943,1833,4.9,1834,4.9,1835,4.9,1836,4.9]],["t/523",[2,0.652,14,1.244,17,2.089,27,2.982,28,0.948,29,2.75,35,1.16,36,1.16,37,1.063,52,0.671,54,1.723,58,1.435,76,0.722,79,1.149,90,1.089,92,1.306,93,2.067,103,2.015,104,2.162,105,1.216,106,2.644,108,1.169,110,2.242,111,2.214,132,1.072,133,0.635,141,1.697,143,0.471,150,1.847,155,0.587,159,1.294,160,1.516,167,1.867,174,0.91,178,1.658,187,3.205,195,0.817,200,1.875,207,1.901,222,1.626,225,2.434,243,2.799,250,1.611,260,2.028,285,2.8,304,1.177,322,1.136,323,1.073,324,1.735,325,1.368,326,2.889,327,2.628,328,2.628,329,2.628,330,2.628,331,2.641,332,1.84,333,1.911,334,1.316,335,2.285,336,2.073,337,2.233,338,2.25,339,2.233,340,1.316,341,2.347,342,2.233,343,1.316,344,2.308,345,2.451,346,2.47,347,2.47,348,2.25,349,1.326,351,2.151,353,1.941,354,2.285,355,2.268,356,1.347,357,1.306,358,1.911,359,1.286,360,1.84,361,2.242,362,1.347,363,1.357,364,1.306,365,1.326,366,2.303,367,2.303,368,2.216,369,1.786,370,1.813,371,1.747,372,1.347,373,1.882,375,1.956,376,1.368,377,2.47,378,1.941,379,1.203,381,1.326,382,1.326,383,1.326,384,1.316,385,1.326,386,1.326,387,1.326,388,1.747,389,1.316,390,1.826,391,1.326,392,1.326,393,1.336,394,1.326,398,1.316,399,1.326,400,1.326,401,1.326,402,1.336,403,1.336,404,1.326,405,1.336,406,1.336,407,1.347,408,1.248,409,1.326,410,1.326,412,1.926,415,1.286,420,1.956,422,1.854,423,1.296,424,1.306,425,1.971,426,1.267,427,1.326,429,1.854,430,1.286,431,1.221,432,1.286,433,1.258,517,3.026,551,2.358,658,1.66,1152,1.707,1153,1.707,1157,1.707,1158,1.707,1159,2.919,1160,1.707,1161,1.691,1162,1.707,1163,1.828,1164,1.707,1165,1.707,1388,2.951,1417,5.317,1422,3.305,1489,3.562,1497,3.562,1504,3.937,1507,3.937,1832,8.448,1837,4.64,1838,4.217,1839,7.936,1840,4.64,1841,4.64,1842,4.64,1843,4.64]],["t/525",[2,0.642,8,0.508,14,1.225,27,2.972,28,0.928,29,2.739,35,1.135,36,1.135,37,1.05,50,2.241,52,0.608,58,1.404,65,1.804,67,1.526,76,0.794,79,0.974,93,1.926,104,2.14,105,1.204,106,3.446,108,1.144,110,2.219,111,1.412,119,1.878,132,1.064,133,1.072,135,1.895,141,1.671,143,0.795,151,1.654,155,0.575,159,1.281,160,1.492,167,1.848,174,0.891,178,1.657,186,2.501,187,2.709,195,1.168,200,1.852,207,1.878,210,1.995,222,1.601,243,2.785,250,1.591,260,2.016,263,3.101,268,2.249,304,1.152,321,3.221,322,1.111,323,1.05,324,1.707,325,1.338,326,2.87,327,2.602,328,2.602,329,2.602,330,2.602,331,2.628,332,2.14,333,1.881,334,1.288,335,2.257,336,2.047,337,2.206,338,2.223,339,2.206,340,1.288,341,2.326,342,2.206,343,1.288,344,2.285,345,2.426,346,2.444,347,2.444,348,2.223,349,1.297,350,2.31,351,2.124,352,1.609,353,1.91,354,2.482,355,1.297,356,1.318,357,1.278,358,1.881,359,1.259,360,1.811,361,2.017,362,1.318,363,1.328,364,1.278,365,1.297,366,2.274,367,2.274,368,2.189,369,1.203,370,1.221,371,1.177,372,1.318,373,1.853,374,1.609,375,1.925,376,1.338,377,2.444,378,1.307,379,2.235,380,1.624,381,1.297,382,1.297,383,1.297,384,1.288,385,1.297,386,1.297,387,1.297,388,1.72,389,1.288,390,2.124,391,1.297,392,1.297,393,1.307,394,1.297,395,1.624,396,2.803,397,2.373,398,1.288,399,1.297,400,1.297,401,1.297,402,1.307,403,1.307,404,1.297,405,1.307,406,1.307,407,1.318,408,1.221,409,1.297,410,1.297,411,1.624,412,1.297,413,1.595,414,1.595,415,1.259,416,1.581,420,1.318,421,1.624,422,1.825,423,1.268,424,1.278,425,1.94,426,1.24,427,1.297,428,1.624,429,1.825,430,1.259,431,1.195,432,1.259,433,1.231,435,1.719,436,1.639,467,1.95,479,1.906,557,2.645,592,2.342,598,2.501,676,2.594,690,1.995,760,1.719,855,2.209,1017,2.501,1118,2.757,1146,3.042,1349,2.819,1388,2.887,1417,6.626,1422,3.234,1424,3.853,1765,3.853,1766,3.649,1767,3.853,1812,7.314,1813,7.78,1818,3.853,1832,7.314,1844,4.54,1845,4.54,1846,6.633]],["t/527",[0,2.856,17,3.925,37,1.495,52,0.687,65,1.643,72,2.982,84,2.674,88,5.435,89,5.037,90,2.045,92,3.14,94,4.243,114,3.832,132,1.239,139,2.074,147,0.988,186,4.803,195,1.535,200,2.06,257,4.981,271,3.719,467,3.744,478,2.696,571,5.265,1171,5.686,1198,4.303]],["t/529",[17,3.984,25,6.796,52,0.654,56,3.636,58,2.737,72,3.027,74,1.789,76,0.929,90,2.077,119,2.121,132,0.983,139,2.106,143,1.045,153,2.875,165,3.452,169,4.635,204,4.566,226,3.522,256,8.044,257,5.057,611,5.057,1169,5.773,1309,6.107,1450,8.275,1847,8.044]],["t/531",[2,1.018,8,1.123,13,3.227,14,1.696,37,0.982,52,0.727,72,2.506,74,1.596,76,0.916,77,2.421,79,1.191,92,2.062,97,2.421,105,1.283,124,2.947,133,1.373,134,2.23,138,2.143,139,1.744,143,1.099,147,1.049,150,2.917,153,2.381,155,1.459,158,2.917,159,1.563,160,1.649,161,2.947,162,3.183,166,2.887,168,2.646,172,3.01,173,2.094,174,1.438,178,1.637,179,2.212,180,2.23,183,2.127,184,2.687,188,2.303,189,2.23,195,1.618,209,3.815,225,2.248,226,2.506,242,2.574,257,5.733,258,2.506,314,3.299,481,3.84,501,3.077,503,3.382,679,3.726,922,3.518,1013,3.566,1179,3.84,1425,4.735]],["t/533",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/535",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/537",[2,0.649,14,0.851,25,3.538,27,2.979,28,0.942,29,2.747,35,1.152,36,1.152,37,1.059,52,0.647,76,0.823,79,1.081,93,2.274,104,2.155,105,1.212,108,1.161,110,2.234,111,1.428,132,0.964,133,0.917,141,1.689,143,0.68,147,0.446,149,2.584,155,0.849,159,1.29,160,1.508,167,1.861,174,0.904,178,1.659,191,3.176,200,1.867,207,1.894,222,1.618,224,2.443,243,2.795,244,3.223,250,1.604,257,4.959,258,1.576,260,2.024,264,1.648,285,2.793,304,1.169,322,1.128,323,1.066,324,1.726,325,1.358,326,2.883,327,2.62,328,2.62,329,2.62,330,2.62,331,2.637,332,1.831,333,1.901,334,1.307,335,2.276,336,2.065,337,2.224,338,2.241,339,2.224,340,1.307,341,2.34,342,2.224,343,1.307,344,2.301,345,2.443,346,2.462,347,2.462,348,2.241,349,1.317,351,2.142,353,1.931,354,2.276,355,2.259,356,1.337,357,1.297,358,1.901,359,1.277,360,1.831,361,2.234,362,1.337,363,1.348,364,1.297,365,1.317,366,2.294,367,2.294,368,2.208,369,1.777,370,1.804,371,1.739,372,1.337,373,1.873,375,1.946,376,1.358,377,2.616,378,1.931,379,1.195,381,1.317,382,1.317,383,1.317,384,1.307,385,1.317,386,1.317,387,1.317,388,1.739,389,1.307,390,1.817,391,1.317,392,1.317,393,1.327,394,1.317,398,1.307,399,1.317,400,1.317,401,1.317,402,1.327,403,1.327,404,1.317,405,1.327,406,1.327,407,1.337,408,1.24,409,1.317,410,1.317,412,1.916,415,1.277,417,2.754,420,1.946,422,1.845,423,1.287,424,1.297,425,1.961,426,1.258,427,1.317,429,1.845,430,1.277,431,1.212,432,1.277,433,1.249,465,3.309,475,2.495,478,2.444,658,1.648,766,3.005,1152,1.695,1153,1.695,1154,3.309,1157,1.695,1158,1.695,1159,2.907,1160,1.695,1161,1.679,1162,1.695,1163,1.815,1164,1.695,1165,1.695,1425,4.333,1530,4.187,1847,4.187,1848,6.068,1849,6.707,1850,6.093,1851,3.91,1852,4.187,1853,4.947,1854,3.703,1855,3.91,1856,4.608,1857,6.093,1858,3.91,1859,4.187,1860,4.608]],["t/539",[2,0.672,52,0.72,58,2.147,76,0.736,79,1.234,83,3.266,93,1.984,147,0.999,155,1.456,159,1.584,169,3.126,173,1.985,174,1.363,177,4.991,178,1.664,179,2.68,180,2.978,182,2.531,183,2.015,184,2.597,188,2.182,189,2.113,195,1.223,226,2.375,257,5.893,276,3.334,315,2.604,316,2.462,317,2.604,512,3.698,513,3.639,532,2.823,862,3.583,982,3.76,1216,6.952,1392,5.581,1425,4.908,1437,6.551,1649,5.893,1751,8.616,1848,6.817,1861,6.945]],["t/541",[2,0.658,14,0.866,27,2.987,28,0.959,29,2.756,35,1.173,36,1.173,37,1.07,52,0.615,76,0.803,79,1.029,83,1.726,93,2.164,104,2.174,105,1.223,108,1.182,110,2.253,111,1.446,132,0.972,133,0.929,141,1.711,143,0.476,147,0.454,155,0.594,159,1.301,160,1.528,164,2.733,165,1.83,167,1.877,174,0.92,177,4.307,178,1.66,195,0.826,200,1.887,207,1.913,222,1.639,225,1.439,243,2.806,250,1.621,257,2.681,260,2.034,263,2.193,268,1.591,285,2.811,304,1.19,322,1.148,323,1.085,324,1.749,325,1.383,326,2.899,327,2.642,328,2.642,329,2.642,330,2.642,331,2.648,332,1.855,333,1.926,334,1.33,335,2.3,336,2.086,337,2.247,338,2.265,339,2.247,340,1.33,341,2.357,342,2.247,343,1.33,344,2.32,345,2.464,346,2.482,347,2.482,348,2.265,349,1.341,351,2.164,353,1.956,354,2.3,355,2.282,356,1.362,357,1.32,358,1.926,359,1.301,360,1.855,361,2.253,362,1.362,363,1.372,364,1.32,365,1.341,366,2.317,367,2.317,368,2.23,369,1.801,370,1.828,371,1.762,372,1.362,373,1.897,375,1.971,376,1.383,377,2.634,378,1.956,379,1.217,381,1.341,382,1.341,383,1.341,384,1.33,385,1.341,386,1.341,387,1.341,388,1.762,389,1.33,390,1.841,391,1.341,392,1.341,393,1.351,394,1.341,398,1.33,399,1.341,400,1.341,401,1.341,402,1.351,403,1.351,404,1.341,405,1.351,406,1.351,407,1.362,408,1.262,409,1.341,410,1.341,412,1.941,415,1.301,420,1.971,422,1.869,423,1.31,424,1.32,425,1.987,426,1.281,427,1.341,429,1.869,430,1.301,431,1.235,432,1.301,433,1.272,478,1.451,658,1.678,1152,1.726,1153,1.726,1157,1.726,1158,1.726,1159,2.937,1160,1.726,1161,1.71,1162,1.726,1163,1.848,1164,1.726,1165,1.726,1216,3.06,1331,3.06,1336,3.462,1433,3.602,1437,6.459,1816,4.687,1819,4.687,1823,4.687,1848,5.216,1849,5.764,1851,3.981,1852,4.263,1854,3.77,1855,3.981,1858,3.981,1859,4.263,1862,5.764,1863,6.173,1864,4.692,1865,6.173]],["t/543",[2,0.673,14,0.895,27,3.002,28,0.991,29,2.772,35,1.213,36,1.213,37,1.09,52,0.565,76,0.674,79,0.944,93,2.188,104,2.207,105,1.315,108,1.221,110,2.288,111,1.481,132,0.987,133,0.952,141,1.752,155,0.614,159,1.321,160,1.565,167,1.905,174,0.951,178,1.659,182,2.535,200,1.922,207,1.949,222,1.679,224,1.767,243,2.827,250,1.651,257,3.974,260,2.053,285,2.842,304,1.23,322,1.187,323,1.122,324,1.791,325,1.429,326,2.928,327,2.683,328,2.683,329,2.683,330,2.683,331,2.667,332,1.899,333,1.973,334,1.375,335,2.343,336,2.125,337,2.289,338,2.307,339,2.289,340,1.375,341,2.388,342,2.289,343,1.375,344,2.494,345,2.501,346,2.52,347,2.52,348,2.307,349,1.386,351,2.205,353,2.003,354,2.343,355,2.325,356,1.407,357,1.365,358,1.973,359,1.344,360,1.899,361,2.288,362,1.407,363,1.418,364,1.365,365,1.386,366,2.361,367,2.361,368,2.272,369,1.844,370,1.871,371,1.804,372,1.407,373,1.943,375,2.019,376,1.429,377,2.52,378,2.003,379,1.257,381,1.386,382,1.386,383,1.386,384,1.375,385,1.386,386,1.386,387,1.386,388,1.804,389,1.375,390,1.885,391,1.386,392,1.386,393,1.396,394,1.386,398,1.375,399,1.386,400,1.386,401,1.386,402,1.396,403,1.396,404,1.386,405,1.396,406,1.396,407,1.407,408,1.304,409,1.386,410,1.386,412,1.988,415,1.344,420,2.019,422,1.914,423,1.354,424,1.365,425,2.034,426,1.324,427,1.386,429,1.914,430,1.344,431,1.276,432,1.344,433,1.314,478,2.151,658,1.734,760,1.835,1084,4.114,1142,2.541,1152,1.783,1153,1.783,1157,1.783,1158,1.783,1159,2.992,1160,1.783,1161,1.767,1162,1.783,1163,1.91,1164,1.783,1165,1.783,1193,5.051,1194,4.32,1195,3.249,1231,3.345,1425,2.182,1437,6.003,1751,6.246,1862,4.114,1866,4.849,1867,4.406,1868,4.406,1869,4.849,1870,4.849,1871,4.849,1872,4.406,1873,4.849]],["t/545",[2,0.699,14,0.943,27,3.026,28,1.044,29,2.797,35,1.278,36,1.278,37,1.122,52,0.61,61,1.746,65,1.878,67,1.718,76,0.796,79,1.02,93,2.034,104,2.26,105,1.271,108,1.287,110,2.343,111,1.538,119,2.007,132,1.011,135,2.064,141,1.819,155,0.647,159,1.353,160,1.625,167,1.951,174,1.003,178,1.662,200,1.979,207,2.007,222,1.743,243,2.859,250,1.7,257,1.843,260,2.081,304,1.297,321,3.373,322,1.251,323,1.182,324,1.859,325,1.506,326,2.973,327,2.747,328,2.747,329,2.747,330,2.747,331,2.698,332,2.287,333,2.048,334,1.449,335,2.412,336,2.188,337,2.357,338,2.375,339,2.357,340,1.449,341,2.436,342,2.357,343,1.449,344,2.413,345,2.561,346,2.581,347,2.581,348,2.375,349,1.46,350,2.469,351,2.27,352,1.811,353,2.08,354,2.621,355,1.46,356,1.483,357,1.438,358,2.048,359,1.417,360,1.972,361,2.156,362,1.483,363,1.495,364,1.438,365,1.46,366,2.43,367,2.43,368,2.339,369,1.355,370,1.375,371,1.325,372,1.483,373,2.017,374,1.811,375,2.096,376,1.506,377,2.581,378,1.472,379,2.36,380,1.828,381,1.46,382,1.46,383,1.46,384,1.449,385,1.46,386,1.46,387,1.46,388,1.873,389,1.449,390,2.27,391,1.46,392,1.46,393,1.472,394,1.46,395,1.828,396,2.996,397,2.583,398,1.449,399,1.46,400,1.46,401,1.46,402,1.472,403,1.472,404,1.46,405,1.472,406,1.472,407,1.483,408,1.375,409,1.46,410,1.46,411,1.828,412,1.46,413,1.795,414,1.795,415,1.417,416,1.779,420,1.483,421,1.828,422,1.987,423,1.427,424,1.438,425,2.112,426,1.395,427,1.46,428,1.828,429,1.987,430,1.417,431,1.345,432,1.417,433,1.385,435,1.935,436,1.845,611,1.843,760,1.221,1193,2.003,1194,5.962,1195,3.424,1425,4.41,1437,2.38,1848,6.044,1849,6.68,1853,3.771,1854,2.592,1855,2.737,1874,2.931,1875,3.225]],["t/547",[2,0.703,14,0.951,27,3.03,28,1.052,29,2.8,35,1.288,36,1.288,37,1.127,52,0.597,61,1.763,65,1.584,67,1.095,71,1.706,76,0.757,79,0.97,80,1.324,93,2.101,104,2.268,105,1.276,108,1.297,110,2.351,111,1.546,116,4.093,119,1.531,132,1.015,133,0.446,135,1.472,141,1.829,155,0.652,159,1.357,160,1.634,167,1.958,174,1.01,177,2.29,178,1.662,182,1.187,200,1.987,207,2.015,222,1.752,224,1.187,243,2.864,250,1.707,260,2.085,285,0.945,304,1.307,322,1.261,323,1.191,324,1.869,325,1.518,326,2.98,327,2.757,328,2.757,329,2.757,330,2.757,331,2.702,332,2.16,333,2.059,334,1.461,335,2.422,336,2.197,337,2.367,338,2.385,339,2.367,340,1.461,341,2.443,342,2.367,343,1.461,344,2.421,345,2.57,346,2.59,347,2.59,348,2.385,349,1.472,350,1.883,351,2.279,352,1.154,353,2.091,354,2.537,355,2.075,356,1.495,357,1.449,358,2.059,359,1.428,360,1.983,361,2.268,362,1.495,363,1.506,364,1.449,365,1.472,366,2.441,367,2.441,368,2.349,369,1.693,370,1.719,371,1.657,372,1.495,373,2.028,374,1.154,375,2.107,376,1.518,377,2.59,378,1.84,379,2.051,380,1.165,381,1.472,382,1.472,383,1.472,384,1.461,385,1.472,386,1.472,387,1.472,388,1.883,389,1.461,390,2.144,391,1.472,392,1.472,393,1.483,394,1.472,395,1.165,396,2.285,397,1.842,398,1.461,399,1.472,400,1.472,401,1.472,402,1.483,403,1.483,404,1.472,405,1.483,406,1.483,407,1.495,408,1.386,409,1.472,410,1.472,411,1.165,412,1.826,413,1.144,414,1.144,415,1.428,416,1.134,420,1.854,421,1.165,422,1.998,423,1.438,424,1.449,425,2.124,426,1.406,427,1.472,428,1.165,429,1.998,430,1.428,431,1.355,432,1.428,433,1.396,436,1.176,444,3.65,658,1.165,682,2.182,760,1.95,1152,1.198,1153,1.198,1157,1.198,1158,1.198,1159,2.35,1160,1.198,1161,1.187,1162,1.198,1164,1.198,1165,1.198,1168,2.182,1193,2.022,1194,4.912,1195,2.182,1197,1.542,1199,2.959,1215,1.897,1374,2.403,1425,3.965,1437,4.714,1816,2.247,1819,2.247,1823,2.247,1848,7.219,1851,2.763,1853,2.403,1854,4.139,1858,2.763,1862,2.763,1863,2.959,1865,2.959,1874,2.959,1876,3.257]],["t/549",[0,2.872,37,1.497,52,0.557,58,2.711,65,1.652,75,4.046,76,0.976,122,4.397,138,2.564,139,2.436,143,1.134,147,1.102,195,1.544,316,3.63,571,4.523,1370,6.246,1408,6.246,1753,6.732]],["t/551",[28,1.896,65,1.748,69,3.546,132,1.03,139,2.207,153,3.013,437,5.11,450,5.633,960,6.4,1173,4.94]],["t/553",[2,0.986,8,1.078,13,3.052,14,1.604,37,0.899,41,3.313,52,0.731,72,2.296,74,1.509,76,0.924,77,2.324,79,1.184,90,2.389,92,1.889,97,2.218,105,1.214,124,2.7,133,1.318,134,2.043,138,1.964,139,1.597,143,1.116,147,1.021,150,2.672,153,2.181,155,1.448,158,2.672,159,1.568,160,1.51,161,2.7,162,2.916,166,2.73,168,2.424,172,2.758,173,1.919,174,1.317,178,1.655,179,2.026,180,2.643,183,1.948,184,2.541,188,2.11,189,2.043,195,1.53,209,3.608,225,2.059,226,2.296,242,2.358,250,1.363,255,4.287,258,2.296,314,3.022,315,2.517,316,2.38,317,2.517,454,4.552,481,3.518,501,2.819,503,3.098,509,4.717,679,3.576,922,3.223,1013,3.267,1179,3.518,1415,4.482,1416,3.518]],["t/555",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/557",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/560",[8,1.022,28,2.142,52,0.58,54,3.39,65,1.72,76,0.757,95,4.719,143,1.119,144,3.791,320,3.423,437,5.03,1557,7.748,1877,9.131,1878,9.131]],["t/562",[2,0.656,8,0.523,14,0.864,27,2.986,28,1.385,29,2.754,35,1.17,36,1.17,37,1.068,51,2.84,52,0.615,56,2.784,58,1.446,65,1.926,67,1.572,75,2.159,76,0.802,79,0.985,93,1.953,95,3.051,104,2.17,105,1.296,108,1.178,110,2.25,111,1.443,119,1.91,132,0.971,135,1.937,141,1.707,143,0.809,155,0.592,159,1.299,160,1.525,167,1.874,174,0.918,178,1.659,200,1.883,207,1.91,222,1.636,243,2.804,250,1.883,255,4.056,260,2.033,302,2.377,304,1.187,320,1.754,321,3.399,322,1.145,323,1.082,324,1.745,325,1.379,326,2.896,327,2.638,328,2.638,329,2.638,330,2.638,331,2.646,332,2.177,333,1.922,334,1.326,335,2.296,336,2.082,337,2.244,338,2.261,339,2.244,340,1.326,341,2.354,342,2.244,343,1.326,344,2.317,345,2.46,346,2.479,347,2.479,348,2.261,349,1.337,350,2.35,351,2.161,352,1.658,353,1.952,354,2.517,355,1.337,356,1.357,357,1.316,358,1.922,359,1.297,360,1.851,361,2.052,362,1.357,363,1.368,364,1.316,365,1.337,366,2.313,367,2.313,368,2.227,369,1.24,370,1.258,371,1.213,372,1.357,373,1.893,374,1.658,375,1.967,376,1.379,377,2.479,378,1.347,379,2.267,380,1.673,381,1.337,382,1.337,383,1.337,384,1.326,385,1.337,386,1.337,387,1.337,388,1.758,389,1.326,390,2.161,391,1.337,392,1.337,393,1.347,394,1.337,395,1.673,396,2.852,397,2.425,398,1.326,399,1.337,400,1.337,401,1.337,402,1.347,403,1.347,404,1.337,405,1.347,406,1.347,407,1.357,408,1.258,409,1.337,410,1.337,411,1.673,412,1.337,413,1.643,414,1.643,415,1.297,416,1.628,420,1.357,421,1.673,422,1.865,423,1.306,424,1.316,425,1.982,426,1.277,427,1.337,428,1.673,429,1.865,430,1.297,431,1.231,432,1.297,433,1.268,435,1.771,436,1.689,454,5.23,509,2.815,858,2.78,1191,2.974,1415,3.497,1416,4.862,1421,2.84,1557,3.969,1879,4.678]],["t/564",[20,7.692,65,1.703,76,0.749,142,6.473,143,1.145,195,1.592,305,6.853,1230,6.473,1880,9.472,1881,10.984,1882,9.042]],["t/567",[28,2.159,69,3.539,77,2.234,133,1.266,134,2.817,143,0.939,313,7.108,320,3.471,437,5.1,445,4.219]],["t/569",[2,0.696,14,0.937,27,3.023,28,1.038,29,2.794,35,1.27,36,1.27,37,1.118,52,0.599,56,3.542,58,1.57,67,1.706,69,3.541,75,2.746,76,0.781,79,1.044,90,1.793,93,1.864,104,2.253,105,1.294,108,1.279,110,2.336,111,1.53,132,1.008,133,1.41,134,2.325,135,2.385,141,1.811,143,0.673,155,1.092,159,1.349,160,1.617,167,1.945,174,0.996,178,1.661,182,1.85,195,0.691,200,1.972,207,2,222,1.735,243,2.855,250,1.842,260,2.077,304,1.288,322,1.243,323,1.175,324,1.85,325,1.497,326,2.967,327,2.739,328,2.739,329,2.739,330,2.739,331,2.694,332,2.279,333,2.038,334,1.44,335,2.403,336,2.18,337,2.349,338,2.367,339,2.349,340,1.44,341,2.43,342,2.349,343,1.44,344,2.406,345,2.554,346,2.574,347,2.574,348,2.367,349,1.451,351,1.948,355,1.451,356,1.473,357,1.429,358,2.038,359,1.407,360,1.963,361,2.148,362,1.473,363,1.485,364,1.429,365,1.451,366,2.422,367,2.422,368,2.331,369,1.346,370,1.366,371,1.317,372,1.473,373,2.008,377,2.367,378,1.462,379,2.484,381,1.451,382,1.451,383,1.451,384,1.44,385,1.451,386,1.451,387,1.451,388,1.864,389,1.44,390,2.262,391,1.451,392,1.451,393,1.462,394,1.451,398,1.44,399,1.451,400,1.451,401,1.451,402,1.462,403,1.462,404,1.451,405,1.462,406,1.462,407,1.473,408,1.366,409,1.451,410,1.451,412,1.451,415,1.407,416,1.767,422,1.978,423,1.418,424,1.429,425,2.102,426,1.386,427,1.451,429,1.978,430,1.407,431,1.336,432,1.407,433,1.376,445,2.314,454,3.118,509,3.331,586,5.918,661,3.616,1191,1.484,1229,1.309,1263,8.439,1285,2.333,1331,1.522,1335,1.611,1336,1.723,1348,7.992,1397,1.981,1415,2.025,1416,3.767,1421,2.383,1503,2.795,1883,4.308,1884,3.566,1885,3.925,1886,3.566,1887,9.946,1888,7.992,1889,9.038,1890,4.308,1891,2.896,1892,3.566,1893,4.308,1894,4.308,1895,4.614,1896,4.308,1897,6.1,1898,4.308,1899,4.308,1900,2.795,1901,3.566,1902,4.308,1903,4.614,1904,4.308,1905,2.335,1906,3.566,1907,4.614,1908,2.335,1909,2.335,1910,2.121]],["t/571",[2,0.839,14,0.847,27,2.977,28,1.771,29,2.745,35,1.148,36,1.148,37,1.056,52,0.55,58,1.419,67,1.543,69,3.793,75,2.118,76,0.718,77,1.108,79,0.92,90,2.033,93,1.762,104,2.151,105,1.21,108,1.156,110,2.23,111,1.423,132,0.962,133,1.441,134,2.399,135,2.254,136,4.171,141,1.684,143,0.934,144,1.906,145,2.203,147,0.647,155,0.846,159,1.288,160,1.504,167,1.857,174,0.9,175,2.697,178,1.658,195,0.808,200,1.863,207,1.89,222,1.613,243,2.792,250,1.601,255,4.033,258,1.57,260,2.022,271,1.672,274,2.017,278,2.203,304,1.164,320,3.248,322,1.123,323,1.062,324,1.721,325,1.353,326,2.879,327,2.615,328,2.615,329,2.615,330,2.615,331,2.634,332,2.153,333,1.896,334,1.302,335,2.271,336,2.06,337,2.219,338,2.236,339,2.219,340,1.302,341,2.336,342,2.219,343,1.302,344,2.297,345,2.438,346,2.457,347,2.457,348,2.236,349,1.312,351,1.812,355,1.312,356,1.332,357,1.292,358,1.896,359,1.272,360,1.826,361,2.03,362,1.332,363,1.342,364,1.292,365,1.312,366,2.289,367,2.289,368,2.203,369,1.217,370,1.235,371,1.19,372,1.332,373,1.867,377,2.236,378,1.322,379,2.388,381,1.312,382,1.312,383,1.312,384,1.302,385,1.312,386,1.312,387,1.312,388,1.734,389,1.302,390,2.137,391,1.312,392,1.312,393,1.322,394,1.312,398,1.302,399,1.312,400,1.312,401,1.312,402,1.322,403,1.322,404,1.312,405,1.322,406,1.322,407,1.332,408,1.235,409,1.312,410,1.312,412,1.312,415,1.272,416,1.598,422,1.839,423,1.282,424,1.292,425,1.955,426,1.253,427,1.312,429,1.839,430,1.272,431,1.208,432,1.272,433,1.244,445,3.047,454,4.54,490,2.528,509,3.824,661,3.269,858,2.728,1155,3.387,1173,2.444,1415,4.47,1416,4.132,1421,2.787,1503,3.269,1603,3.688,1688,2.85,1747,5.673,1883,3.895,1884,4.171,1886,4.171,1890,3.895,1892,4.171,1893,3.895,1894,3.895,1895,4.171,1896,3.895,1897,5.673,1898,3.895,1899,3.895,1901,4.171,1902,3.895,1904,3.895,1906,4.171,1911,4.171,1912,4.59,1913,4.59,1914,4.59,1915,4.59,1916,4.59,1917,4.171]],["t/574",[28,1.83,32,4.933,52,0.695,74,1.556,75,4.132,76,0.742,105,1.251,143,0.908,225,2.746,238,4.132,250,2.104,251,4.784,320,3.886,379,2.322,1173,5.826,1440,7.196,1446,8.137,1522,5.839,1640,8.137,1911,8.137,1918,8.137]],["t/576",[2,0.685,14,0.917,27,3.013,28,1.015,29,2.783,35,1.242,36,1.242,37,1.104,52,0.394,56,1.278,58,0.962,67,1.669,75,1.435,76,0.869,79,1.131,90,0.73,93,2.007,104,2.231,105,1.255,108,1.251,110,2.313,111,1.506,132,1.029,135,2.022,137,2.132,139,0.74,141,1.782,143,0.504,155,0.629,159,1.335,160,1.592,167,1.926,174,0.974,178,1.662,182,1.133,200,1.948,207,1.975,211,1.777,217,2.451,222,1.708,243,2.842,250,1.928,255,3.86,260,2.066,304,1.26,309,2.216,320,1.166,322,1.215,323,1.149,324,1.821,325,1.464,326,2.948,327,2.712,328,2.712,329,2.712,330,2.712,331,2.681,332,2.251,333,2.007,334,1.408,335,2.374,336,2.153,337,2.32,338,2.338,339,2.32,340,1.408,341,2.41,342,2.32,343,1.408,344,2.382,345,2.529,346,2.548,347,2.548,348,2.338,349,1.419,351,2.234,353,2.374,354,2.587,355,1.419,356,1.441,357,1.397,358,2.007,359,1.376,360,1.932,361,2.122,362,1.441,363,1.452,364,1.397,365,1.419,366,2.392,367,2.392,368,2.302,369,1.316,370,1.336,371,1.288,372,1.441,373,1.976,375,2.053,376,1.464,377,2.338,378,1.43,379,2.56,381,1.419,382,1.419,383,1.419,384,1.408,385,1.419,386,1.419,387,1.419,388,1.835,389,1.408,390,2.234,391,1.419,392,1.419,393,1.43,394,1.419,398,1.408,399,1.419,400,1.419,401,1.419,402,1.43,403,1.43,404,1.419,405,1.43,406,1.43,407,1.441,408,1.336,409,1.419,410,1.419,412,1.419,415,1.376,416,1.729,420,1.441,422,1.947,423,1.387,424,1.397,425,2.069,426,1.356,427,1.419,429,1.947,430,1.376,431,1.307,432,1.376,433,1.346,454,5.58,501,2.085,509,4.027,690,1.367,977,3.991,1155,2.295,1173,5.339,1397,4.214,1415,2.562,1416,1.63,1440,8.261,1441,4.214,1891,2.295,1910,2.827,1919,2.827,1920,4.966,1921,4.966,1922,4.966,1923,4.966,1924,4.966,1925,4.966,1926,7.076,1927,4.966,1928,4.966,1929,4.966,1930,4.966,1931,4.966,1932,3.111,1933,3.111,1934,3.111,1935,3.111]],["t/578",[20,7.64,23,7.182,24,6.594,28,1.826,39,4.349,52,0.658,56,4.253,65,1.951,75,4.778,76,0.858,95,4.023,110,2.301,132,1.15,143,1.05,250,2.102,271,3.257,501,3.752,1173,4.759,1919,8.121,1936,8.937]],["t/581",[11,6.107,28,2.104,52,0.562,56,3.636,69,3.384,74,1.538,75,4.752,76,0.853,84,2.715,132,1.144,143,0.898,151,3.226,155,1.121,243,2.346,258,3.027,271,3.226,320,3.319,437,4.876,450,6.252,603,5.262,849,5.375,986,5.773,1017,4.876,1070,6.796,1294,5.931,1312,8.044,1335,6.107,1937,6.796,1938,8.852]],["t/583",[2,0.742,14,0.807,27,2.953,28,1.566,29,2.72,35,1.093,36,1.093,37,1.134,52,0.65,56,1.795,67,1.469,73,3.014,76,0.863,79,1.087,84,1.34,90,2.216,93,2.11,101,2.069,104,2.101,105,1.182,108,1.101,110,2.178,111,1.373,132,1.049,135,1.843,141,1.624,143,0.443,147,0.423,155,1.196,159,1.258,160,1.451,167,1.814,174,0.857,178,1.658,182,1.592,191,2.069,195,0.769,200,2.133,207,1.837,212,3.434,217,3.182,222,1.556,224,1.592,243,2.76,250,1.556,255,4.232,258,2.206,260,1.994,263,2.042,304,1.109,314,1.967,321,1.535,322,1.069,323,1.011,324,1.66,325,1.288,326,2.835,327,2.554,328,2.554,329,2.554,330,2.554,331,2.604,332,2.093,333,1.829,334,1.239,335,2.207,336,2.002,337,2.157,338,2.174,339,2.157,340,1.239,341,2.29,342,2.157,343,1.239,344,2.243,345,2.382,346,2.4,347,2.4,348,2.174,349,1.249,351,2.077,353,2.207,354,2.437,355,2.19,356,1.268,357,1.23,358,1.829,359,1.211,360,1.761,361,1.973,362,1.268,363,1.278,364,1.23,365,1.249,366,2.224,367,2.224,368,2.141,369,1.158,370,1.175,371,1.133,372,1.268,373,2.141,375,1.871,377,2.56,379,2.449,381,1.249,382,1.249,383,1.249,384,1.239,385,1.249,386,1.249,387,1.249,388,1.672,389,1.239,390,2.294,391,1.249,392,1.249,393,1.258,394,1.249,398,1.239,399,1.249,400,1.249,401,1.249,402,1.258,403,1.258,404,1.249,405,1.258,406,1.258,407,1.268,408,1.175,409,1.249,410,1.249,412,1.249,413,1.535,414,2.692,415,1.211,420,1.268,422,1.774,423,1.22,424,1.23,425,1.886,426,1.193,427,1.249,429,1.774,430,1.211,431,1.15,432,1.211,433,1.184,450,3.916,451,3.708,452,5.472,453,8.51,454,4.73,455,3.708,456,3.708,457,3.708,458,6.504,459,3.708,460,3.708,461,3.708,462,3.708,463,3.708,464,3.708,591,3.97,598,2.407,621,2.928,838,3.112,849,2.653,858,3.833,1150,2.928,1161,1.592,1289,3.511,1322,3.97,1416,5.365,1421,3.916,1506,3.224,1939,4.37,1940,6.504,1941,5.472,1942,4.37,1943,4.37,1944,4.37,1945,4.37,1946,3.708,1947,4.37,1948,4.37,1949,4.37,1950,4.37,1951,4.37]],["t/585",[2,0.799,24,8.087,37,1.106,52,0.524,53,3.465,74,1.434,76,0.876,80,3.355,111,2.333,128,3.858,132,0.917,147,0.799,149,4.629,155,1.251,167,2.267,181,5.879,200,1.95,217,5.219,320,3.704,341,2.683,424,2.323,450,5.999,467,3.544,606,5.541,622,5.873,831,5.694,986,5.383,1151,6.633,1232,7.5,1276,7.5,1309,7.296,1331,5.383,1348,7.94,1552,6.09,1693,7.5,1952,6.633,1953,8.254,1954,10.575,1955,8.254,1956,10.575,1957,8.254,1958,8.254,1959,7.5,1960,8.254,1961,8.254]],["t/587",[52,0.719,53,4.238,54,3.178,56,4.411,65,1.902,69,3.272,74,1.487,75,4.659,76,0.95,77,2.065,132,0.951,133,1.171,134,3.071,143,1.148,155,1.084,258,3.453,304,2.561,305,6.13,310,7.191,320,3.209,445,3.9,450,5.197,490,4.714,501,3.593,564,4.108,1173,5.376,1294,5.734,1527,6.877]],["t/589",[28,2.39,37,1.522,65,2.036,69,3.893,143,0.881,153,3.62,240,4.785,431,2.286,445,3.958,447,9.457,448,7.102,450,6.184,481,4.552,1173,5.423,1301,5.665]],["t/591",[52,0.652,54,3.268,72,3.01,73,7.495,76,0.729,79,0.935,84,3.147,100,3.577,103,4.457,132,1.207,139,2.094,143,1.041,147,0.994,153,2.859,242,3.092,271,3.207,276,4.926,344,2.333,498,6.269,667,4.936,828,5.465,870,5.74,1464,6.072,1582,7.469,1962,8.802,1963,8.802,1964,7.998]],["t/593",[2,1.002,8,1.207,13,3.637,14,1.771,37,1.053,52,0.702,72,2.689,74,1.799,76,0.944,77,2.499,79,1.145,92,2.213,97,2.598,105,1.34,119,1.884,124,3.162,132,1.066,133,1.417,134,2.392,138,2.299,139,1.871,143,1.155,147,1.002,153,2.554,155,1.424,158,3.129,159,1.539,160,1.769,161,3.162,162,3.415,166,3.254,168,2.838,172,3.23,178,1.076,195,1.385,209,3.984,225,2.411,226,2.689,242,3.787,258,2.689,293,3.415,468,4.12,501,3.301,502,5.127,503,3.628,679,3.845,922,3.774,1013,3.826]],["t/595",[2,0.889,14,1.942,37,1.23,52,0.583,72,3.141,74,1.596,76,0.761,105,1.283,133,1.256,139,2.185,143,0.932,147,0.889,178,1.256,679,3.411]],["t/597",[2,0.966,8,0.939,52,0.7,76,0.946,77,2.569,79,1.17,92,2.361,97,2.771,119,2.01,124,3.373,132,1.108,133,1.365,134,2.552,138,2.453,143,1.158,147,0.966,155,1.445,158,3.339,159,1.583,160,1.887,161,3.373,162,3.643,166,3.346,168,3.028,209,4.143,225,2.572,226,2.869,242,3.504,293,3.643,468,4.395]],["t/599",[52,0.723,65,1.646,74,1.518,76,0.898,77,2.108,79,0.928,97,3.376,111,1.86,133,1.195,143,1.179,144,3.627,148,6.846,155,1.294,182,3.183,211,4.991,242,3.589,263,4.776,445,4.935,473,5.192,474,3.839,689,6.222,1248,7.412]],["t/601",[2,0.659,17,4.881,52,0.701,75,3.139,76,0.726,79,1.23,83,2.502,90,2.401,106,3.676,112,3.747,119,2.322,143,1.1,147,0.848,155,1.491,159,1.44,166,3.046,173,1.944,174,1.335,175,3.622,178,1.663,179,2.644,180,2.949,183,1.974,184,2.562,187,3.407,188,2.138,189,2.07,191,4.15,218,4.13,226,2.326,242,3.72,262,4.224,274,2.989,293,3.805,315,2.55,316,2.411,317,2.55,529,5.772,543,5.222,865,4.044,870,4.436,1198,3.357,1340,4.693,1386,4.845,1965,6.803,1966,6.181]],["t/603",[75,4.264,79,0.981,143,0.937,242,3.245,506,5.182,676,5.279,865,5.492,870,6.025,1311,7.84,1646,7.425,1967,7.84,1968,8.396]],["t/605",[0,0.448,2,0.758,12,0.974,14,0.874,17,3.693,27,2.991,28,0.967,29,2.76,35,1.184,36,1.184,37,1.075,41,3.215,52,0.67,58,0.761,65,1.887,66,1.809,67,1.591,74,0.583,76,0.83,77,0.81,79,1.117,90,1.963,93,1.964,97,0.452,104,2.182,105,1.228,106,2.374,108,1.192,110,2.263,111,1.455,119,2.188,128,2.876,132,0.976,133,1.042,134,0.749,135,1.953,138,0.4,141,1.722,143,0.955,144,0.568,147,0.458,150,0.544,155,1.18,159,1.357,160,1.538,166,1.657,167,1.884,173,0.391,174,1.035,175,3.607,178,1.663,179,0.743,180,1.021,182,0.498,183,0.397,184,0.72,187,2.836,188,0.43,189,0.416,191,1.166,192,0.675,195,0.241,200,2.157,207,1.923,216,0.796,222,1.65,242,2.401,243,2.812,244,1.958,250,1.629,251,1.549,253,1.528,260,2.039,264,1.2,271,0.498,274,1.475,278,3.281,302,0.695,304,1.201,311,1.889,314,1.846,315,0.513,316,0.485,317,0.513,319,1.903,320,0.923,321,3.412,322,1.158,323,1.095,324,1.76,325,1.395,326,2.907,327,2.653,328,2.653,329,2.653,330,2.653,331,2.653,332,2.191,333,1.939,334,1.342,335,2.311,336,2.096,337,2.258,338,2.276,339,2.258,340,1.342,341,2.365,342,2.258,343,1.342,344,2.33,345,2.474,346,2.492,347,2.492,348,2.276,349,1.352,350,2.365,351,2.175,352,1.677,353,1.969,354,2.531,355,1.352,356,1.373,357,1.332,358,1.939,359,1.312,360,1.867,361,2.066,362,1.373,363,1.384,364,1.332,365,1.352,366,2.329,367,2.329,368,2.241,369,1.254,370,1.273,371,1.227,372,1.373,373,1.909,374,1.677,375,1.984,376,1.395,377,2.492,378,1.363,379,2.417,380,1.693,381,1.352,382,1.352,383,1.352,384,1.342,385,1.352,386,1.352,387,1.352,388,1.773,389,1.342,390,2.175,391,1.352,392,1.352,393,1.363,394,1.352,395,1.693,396,2.871,397,2.445,398,1.342,399,1.352,400,1.352,401,1.352,402,1.363,403,1.363,404,1.352,405,1.363,406,1.363,407,1.373,408,1.273,409,1.352,410,1.352,411,1.693,412,1.352,413,1.662,414,1.662,415,1.312,416,1.648,417,0.562,418,2.813,420,1.373,421,1.693,422,1.881,423,1.322,424,1.332,425,1.999,426,1.292,427,1.352,428,1.693,429,1.881,430,1.312,431,1.245,432,1.312,433,1.283,435,1.792,436,1.709,454,5.302,473,1.463,474,1.475,479,1.987,486,0.456,529,1.16,532,1,533,4.238,534,1.816,535,1.242,536,1.242,543,1.889,551,0.695,552,1.889,558,0.943,692,1.099,760,1.553,898,0.781,971,2.654,982,0.74,1063,2.848,1066,2.084,1150,0.916,1191,3.009,1288,1.978,1308,1.099,1340,0.943,1375,1.565,1386,0.974,1450,1.099,1463,1.25,1470,3.009,1476,0.869,1552,1.009,1656,1.16,1755,0.974,1766,1.099,1787,1.889,1952,1.099,1969,1.367,1970,1.367,1971,1.367,1972,4.102,1973,5.742,1974,1.367,1975,1.367,1976,1.367,1977,3.356,1978,5.274,1979,1.367,1980,1.367,1981,1.367,1982,1.367,1983,3.492,1984,4.238,1985,1.099,1986,1.367]],["t/607",[0,0.563,2,0.707,12,1.224,14,0.894,17,2.732,27,3.002,28,0.99,29,2.771,35,1.211,36,1.211,37,1.089,41,2.72,52,0.662,54,0.638,65,1.9,66,1.851,67,1.628,76,0.818,77,0.415,79,1.128,86,0.644,90,1.786,93,1.985,97,0.996,104,2.206,105,1.241,106,2.023,108,1.22,110,2.287,111,1.48,119,2.226,128,2.264,132,0.987,133,0.951,135,1.986,141,1.751,143,0.916,147,0.292,155,1.143,159,1.381,160,1.564,166,2.056,167,1.904,173,0.491,174,1.081,175,3.593,178,1.662,179,0.91,180,0.523,183,0.498,184,0.882,187,2.184,188,0.54,189,0.523,191,0.814,200,2.166,207,1.948,216,1.756,222,1.677,242,2.299,243,2.826,250,1.65,251,1.391,253,3.007,260,2.052,274,0.755,278,2.645,304,1.229,311,1.319,314,2.18,317,0.644,319,1.948,320,0.644,321,2.132,322,1.185,323,1.12,324,1.789,325,1.427,326,2.927,327,2.681,328,2.681,329,2.681,330,2.681,331,2.666,332,2.22,333,1.971,334,1.373,335,2.341,336,2.123,337,2.288,338,2.305,339,2.288,340,1.373,341,2.387,342,2.288,343,1.373,344,2.355,345,2.5,346,2.519,347,2.519,348,2.305,349,1.384,350,2.396,351,2.203,352,1.717,353,2.001,354,2.558,355,1.384,356,1.405,357,1.363,358,1.971,359,1.342,360,1.898,361,2.093,362,1.405,363,1.416,364,1.363,365,1.384,366,2.359,367,2.359,368,2.271,369,1.284,370,1.303,371,1.256,372,1.405,373,1.941,374,1.717,375,2.017,376,1.427,377,2.519,378,1.395,379,2.439,380,1.732,381,1.384,382,1.384,383,1.384,384,1.373,385,1.384,386,1.384,387,1.384,388,1.802,389,1.373,390,2.203,391,1.384,392,1.384,393,1.395,394,1.384,395,1.732,396,2.908,397,2.486,398,1.373,399,1.384,400,1.384,401,1.384,402,1.395,403,1.395,404,1.384,405,1.395,406,1.395,407,1.405,408,1.303,409,1.384,410,1.384,411,1.732,412,1.384,413,1.701,414,1.701,415,1.342,416,1.686,418,2.879,420,1.405,421,1.732,422,1.912,423,1.353,424,1.363,425,2.033,426,1.322,427,1.384,428,1.732,429,1.912,430,1.342,431,1.274,432,1.342,433,1.313,435,0.65,436,1.748,444,4.23,454,5.349,533,1.38,540,1.067,543,2.315,551,1.532,552,2.315,760,1.833,870,1.966,971,0.963,1191,3.079,1197,1.908,1198,0.848,1288,1.38,1308,1.38,1375,1.917,1410,1.38,1668,1.458,1747,1.458,1787,2.315,1967,1.458,1968,1.561,1987,4.029,1988,6.07,1989,1.718,1990,1.718,1991,1.718,1992,1.718,1993,5.512,1994,1.718,1995,1.718,1996,4.029,1997,6.07,1998,1.718,1999,1.718,2000,3.015,2001,6.07,2002,1.718,2003,1.718]],["t/609",[0,2.798,37,1.485,58,2.641,65,1.609,74,1.752,79,1.071,84,3.291,100,4.098,132,1.231,139,2.032,143,1.088,145,4.84,147,1.073,155,1.277,169,3.845,182,3.113,195,1.504,200,2.018,242,3.769,268,2.896,271,3.675,528,5.555,572,6.576,574,7.441,1045,5.202,1198,4.977,1502,7.763]],["t/611",[2,0.819,8,0.947,20,6.246,52,0.538,58,3.101,75,3.906,76,0.886,83,3.113,90,1.986,91,3.515,108,2.526,112,4.663,122,3.634,132,0.94,133,1.158,138,2.933,139,2.014,143,1.084,147,0.971,153,2.75,155,1.072,159,1.258,192,4.177,204,4.367,211,6.445,238,3.906,268,2.87,271,3.084,498,6.029,855,4.119,924,6.499,1170,5.14,1323,7.692,1370,6.029,1408,6.029,1688,5.256,1791,6.029,1792,7.7,2004,7.162,2005,10.03,2006,8.465,2007,8.465]],["t/613",[2,0.944,8,1.092,13,3.104,37,0.923,52,0.74,57,3.671,72,2.358,74,1.198,76,0.881,77,2.354,79,1.22,90,2.288,91,4.05,92,2.895,97,2.277,105,1.234,106,3.428,124,2.772,133,1.209,134,2.097,138,2.016,139,1.64,143,1.043,147,1.03,151,2.512,153,2.239,155,1.475,158,2.744,159,1.581,160,1.551,161,2.772,162,2.994,166,2.777,168,2.489,172,3.63,173,1.97,174,1.352,175,3.518,178,1.652,179,2.667,180,2.688,183,2,184,2.584,188,2.166,189,2.097,195,1.556,209,3.669,225,2.71,226,2.358,258,2.358,478,2.131,481,3.612,486,2.297,502,4.495,503,3.181,679,3.622,922,3.309,1013,3.354,1017,3.797,1048,4.91]],["t/615",[37,1.238,52,0.587,57,4.92,72,3.16,74,1.605,92,2.97,105,1.291,139,2.198,178,1.264,478,2.857,679,3.431]],["t/617",[2,0.981,8,0.963,52,0.706,76,0.939,77,2.597,79,1.143,92,2.422,97,2.843,124,3.461,133,1.386,134,2.618,138,2.517,143,1.127,147,0.981,155,1.407,158,3.425,159,1.6,160,1.936,161,3.461,162,3.738,166,3.183,168,3.107,209,4.206,225,2.639,226,2.943]],["t/620",[52,0.71,79,1.203,90,2.509,91,4.561,105,1.073,106,3.415,119,1.84,122,4.716,147,0.744,155,1.469,159,1.523,166,2.413,173,2.195,174,1.507,175,3.505,178,1.663,179,2.854,180,3.118,183,2.229,184,2.766,188,2.413,189,2.337,225,2.355,690,3.375,1393,5.146]],["t/622",[2,0.65,8,0.517,14,1.461,27,2.98,28,0.944,29,2.748,35,1.155,36,1.155,37,1.06,52,0.66,76,0.861,79,0.84,86,1.731,90,1.083,91,4,93,2.152,104,2.157,105,1.214,108,1.163,110,2.237,111,1.43,122,3.731,132,0.965,133,0.919,138,1.35,141,1.691,143,0.803,155,1.259,159,1.291,160,1.511,166,1.451,167,1.863,169,4.155,174,0.906,178,1.658,200,1.87,207,1.896,222,1.62,243,2.796,250,1.606,260,2.026,262,2.867,263,2.158,271,3.364,285,2.795,304,1.171,322,1.13,323,1.068,324,1.728,325,1.361,326,2.885,327,2.622,328,2.622,329,2.622,330,2.622,331,2.638,332,1.834,333,1.904,334,1.309,335,2.279,336,2.067,337,2.227,338,2.244,339,2.227,340,1.309,341,2.342,342,2.227,343,1.309,344,2.303,345,2.445,346,2.464,347,2.464,348,2.244,349,1.319,351,2.145,353,1.934,354,2.279,355,2.261,356,1.34,357,1.299,358,1.904,359,1.28,360,1.834,361,2.237,362,1.34,363,1.35,364,1.299,365,1.319,366,2.296,367,2.296,368,2.21,369,1.78,370,1.806,371,1.741,372,1.34,373,1.875,375,1.949,376,1.361,377,2.464,378,1.934,379,1.197,381,1.319,382,1.319,383,1.319,384,1.309,385,1.319,386,1.319,387,1.319,388,1.741,389,1.309,390,1.82,391,1.319,392,1.319,393,1.33,394,1.319,398,1.309,399,1.319,400,1.319,401,1.319,402,1.33,403,1.33,404,1.319,405,1.33,406,1.33,407,1.34,408,1.242,409,1.319,410,1.319,412,1.919,415,1.28,420,1.949,422,1.847,423,1.29,424,1.299,425,1.964,426,1.261,427,1.319,429,1.847,430,1.28,431,1.215,432,1.28,433,1.251,547,3.289,658,1.652,760,1.748,1152,1.698,1153,1.698,1157,1.698,1158,1.698,1159,2.911,1160,1.698,1161,1.682,1162,1.698,1163,1.819,1164,1.698,1165,1.698,1235,2.867,1434,6.811,1708,3.71,1711,3.545,1715,3.71,1838,4.196,2008,7.191,2009,7.191,2010,9.231,2011,4.617,2012,4.617,2013,4.196,2014,4.196,2015,4.617,2016,4.617,2017,4.617]],["t/624",[2,0.755,8,0.738,14,1.217,27,2.967,28,0.92,29,2.735,35,1.126,36,1.126,37,1.045,50,2.221,52,0.606,58,1.391,65,1.858,67,1.513,76,0.791,79,1.014,80,1.829,83,1.655,84,1.38,90,1.056,93,1.918,104,2.131,105,1.276,106,2.598,108,1.134,110,2.21,111,1.403,119,1.868,122,4.342,132,1.06,133,0.902,135,1.883,141,1.66,143,0.791,147,0.436,151,1.64,153,1.462,155,0.57,159,1.276,160,1.483,167,1.959,174,0.883,178,1.657,186,2.479,195,1.161,200,1.842,207,1.868,210,1.978,222,1.59,243,2.78,250,1.583,260,2.011,263,3.081,268,1.526,302,2.287,304,1.142,321,3.209,322,1.102,323,1.041,324,1.697,325,1.327,326,2.862,327,2.591,328,2.591,329,2.591,330,2.591,331,2.658,332,2.129,333,1.869,334,1.276,335,2.246,336,2.037,337,2.195,338,2.211,339,2.195,340,1.276,341,2.318,342,2.195,343,1.276,344,2.275,345,2.416,346,2.434,347,2.434,348,2.211,349,1.286,350,2.298,351,2.113,352,1.595,353,1.898,354,2.472,355,1.286,356,1.306,357,1.267,358,1.869,359,1.248,360,1.8,361,2.007,362,1.306,363,1.316,364,1.267,365,1.286,366,2.263,367,2.263,368,2.178,369,1.193,370,1.211,371,1.167,372,1.306,373,1.841,374,1.595,375,1.913,376,1.327,377,2.434,378,1.296,379,2.226,380,1.61,381,1.286,382,1.286,383,1.286,384,1.276,385,1.286,386,1.286,387,1.286,388,1.709,389,1.276,390,2.113,391,1.286,392,1.286,393,1.296,394,1.286,395,1.61,396,2.789,397,2.358,398,1.276,399,1.286,400,1.286,401,1.286,402,1.296,403,1.296,404,1.286,405,1.296,406,1.296,407,1.306,408,1.211,409,1.286,410,1.286,411,1.61,412,1.286,413,1.581,414,1.581,415,1.248,416,1.567,420,1.306,421,1.61,422,1.813,423,1.257,424,1.267,425,1.928,426,1.229,427,1.286,428,1.61,429,1.813,430,1.248,431,1.184,432,1.248,433,1.22,435,1.704,436,1.625,467,1.932,475,2.437,479,2.767,541,4.863,557,2.622,564,2.16,592,2.322,676,2.571,690,1.978,855,2.19,1017,2.479,1118,2.733,1146,3.016,1229,2.524,1235,2.795,1273,3.455,1349,2.795,1375,2.862,1599,4.09,1711,3.455,1787,3.455,2008,9.19,2009,9.19,2013,4.09,2014,4.09,2018,4.501,2019,3.105]],["t/626",[37,1.226,39,4.452,41,4.515,58,2.828,76,0.87,119,2.192,132,1.226,192,4.515,271,3.824,485,5.681,572,6.844,1752,6.312]],["t/628",[2,0.628,31,3.297,41,5.73,52,0.731,56,2.665,74,1.962,76,0.833,77,1.566,79,1.199,95,3.825,119,2.036,142,4.029,143,1.086,147,0.823,155,1.457,159,1.591,165,2.53,173,1.854,174,1.273,178,1.66,179,2.564,180,2.882,183,1.883,184,2.485,187,2.039,188,2.039,189,1.974,191,4.024,195,1.143,224,2.364,242,3.328,262,4.029,271,2.364,293,2.818,315,2.433,316,2.3,317,2.433,512,3.455,513,3.4,682,4.348,898,3.707,1045,5.966,1169,4.231,1230,4.029,1308,5.214,1464,6.536,1535,5.896,1582,5.506,1615,5.506,1752,5.862,2020,8.165,2021,8.603,2022,6.489,2023,6.489,2024,6.489,2025,6.489]],["t/630",[2,0.635,14,0.826,27,2.964,28,0.914,29,2.732,35,1.119,36,1.119,37,1.041,41,4.498,52,0.605,76,0.79,79,1.012,93,2.128,104,2.125,105,1.273,108,1.127,110,2.204,111,1.397,132,0.951,133,0.612,135,2.605,141,1.653,143,0.666,151,3.321,155,0.567,159,1.272,160,1.476,167,1.835,174,0.878,178,1.66,195,0.788,200,1.836,207,1.862,222,1.584,243,2.776,244,2.437,250,1.577,260,2.008,264,3.26,285,2.765,300,3.797,304,1.135,322,1.095,323,1.035,324,1.689,325,1.319,326,2.857,327,2.584,328,2.584,329,2.584,330,2.584,331,2.619,332,1.792,333,1.861,334,1.269,335,2.238,336,2.03,337,2.187,338,2.204,339,2.187,340,1.269,341,2.313,342,2.187,343,1.269,344,2.269,345,2.409,346,2.427,347,2.427,348,2.204,349,1.279,351,2.106,353,1.89,354,2.238,355,2.221,356,1.299,357,1.259,358,1.861,359,1.24,360,1.792,361,2.204,362,1.299,363,1.309,364,1.259,365,1.279,366,2.255,367,2.255,368,2.171,369,1.74,370,1.766,371,1.702,372,1.299,373,1.833,375,1.905,376,1.319,377,2.585,378,1.89,379,1.16,381,1.279,382,1.279,383,1.279,384,1.269,385,1.279,386,1.279,387,1.279,388,1.702,389,1.269,390,1.779,391,1.279,392,1.279,393,1.289,394,1.279,398,1.269,399,1.279,400,1.279,401,1.279,402,1.289,403,1.289,404,1.279,405,1.289,406,1.289,407,1.299,408,1.204,409,1.279,410,1.279,412,1.875,415,1.24,417,1.838,420,1.905,422,1.806,423,1.25,424,1.259,425,1.919,426,1.222,427,1.279,429,1.806,430,1.24,431,1.177,432,1.24,433,1.213,465,2.208,478,1.383,485,5.66,658,1.601,1045,4.702,1152,1.646,1153,1.646,1154,2.208,1157,1.646,1158,1.646,1159,2.859,1160,1.646,1161,1.631,1162,1.646,1163,1.763,1164,1.646,1165,1.646,1464,6.289,2020,4.843,2021,7.911,2026,9.362,2027,8.283,2028,5.569,2029,4.475,2030,5.964,2031,3.797,2032,4.066,2033,4.066,2034,4.066,2035,4.066,2036,3.797,2037,3.797,2038,4.475,2039,4.475,2040,4.475,2041,4.066,2042,3.797,2043,4.066]],["t/632",[2,0.778,14,0.876,27,2.992,28,0.97,29,2.761,35,1.187,36,1.187,37,1.077,52,0.593,64,2.82,65,1.832,67,1.595,74,1.689,76,0.773,79,0.991,93,1.966,104,2.185,105,1.229,108,1.195,110,2.265,111,1.458,119,2.108,132,0.978,133,0.649,135,1.957,141,1.725,143,0.695,147,0.459,155,0.601,159,1.308,160,1.541,167,1.886,174,0.931,178,1.659,200,2.079,207,1.926,222,1.653,242,1.667,243,2.813,244,3.465,250,1.631,260,2.079,264,1.697,304,1.204,321,3.278,322,1.161,323,1.098,324,1.763,325,1.398,326,2.909,327,2.656,328,2.656,329,2.656,330,2.656,331,2.654,332,2.194,333,1.942,334,1.345,335,2.314,336,2.099,337,2.262,338,2.279,339,2.262,340,1.345,341,2.367,342,2.262,343,1.345,344,2.473,345,2.476,346,2.495,347,2.495,348,2.279,349,1.356,350,2.369,351,2.178,352,1.682,353,1.972,354,2.534,355,1.356,356,1.377,357,1.335,358,1.942,359,1.315,360,1.87,361,2.069,362,1.377,363,1.388,364,1.335,365,1.356,366,2.332,367,2.332,368,2.245,369,1.258,370,1.276,371,1.23,372,1.377,373,1.913,374,1.682,375,1.987,376,1.398,377,2.495,378,1.366,379,2.282,380,1.697,381,1.356,382,1.356,383,1.356,384,1.345,385,1.356,386,1.356,387,1.356,388,1.776,389,1.345,390,2.178,391,1.356,392,1.356,393,1.366,394,1.356,395,1.697,396,2.875,397,2.45,398,1.345,399,1.356,400,1.356,401,1.356,402,1.366,403,1.366,404,1.356,405,1.366,406,1.366,407,1.377,408,1.276,409,1.356,410,1.356,411,1.697,412,1.356,413,1.667,414,1.667,415,1.315,416,1.652,417,1.949,420,1.377,421,1.697,422,1.884,423,1.325,424,1.335,425,2.003,426,1.296,427,1.356,428,1.697,429,1.884,430,1.315,431,1.248,432,1.315,433,1.286,435,1.796,436,1.713,564,2.277,1229,2.661,1230,2.946,2028,8.25,2037,4.026,2044,4.026,2045,4.311]],["t/634",[2,0.707,14,0.959,27,3.034,28,1.062,29,2.804,35,1.299,36,1.299,37,1.132,41,3.334,52,0.594,65,1.727,67,1.355,74,1.269,76,0.775,79,0.993,93,2.089,104,2.276,105,1.281,108,1.308,110,2.36,111,1.555,116,3.288,119,1.75,132,1.018,135,2.415,141,1.84,149,1.351,155,0.658,159,1.363,160,1.644,167,1.965,174,1.019,178,1.662,200,1.996,207,2.025,222,1.763,243,2.869,244,3.239,250,1.715,260,2.09,264,0.862,271,0.878,285,0.699,304,1.318,321,2.373,322,1.271,323,1.202,324,1.881,325,1.531,326,2.987,327,2.767,328,2.767,329,2.767,330,2.767,331,2.707,332,2.22,333,2.072,334,1.473,335,2.433,336,2.207,337,2.378,338,2.396,339,2.378,340,1.473,341,2.451,342,2.378,343,1.473,344,2.43,345,2.58,346,2.6,347,2.6,348,2.396,349,1.484,350,2.153,351,2.29,352,1.429,353,2.104,354,2.58,355,1.931,356,1.507,357,1.462,358,2.072,359,1.44,360,1.995,361,2.245,362,1.507,363,1.519,364,1.462,365,1.484,366,2.452,367,2.452,368,2.36,369,1.609,370,1.633,371,1.574,372,1.507,373,2.04,374,1.429,375,2.12,376,1.531,377,2.6,378,1.748,379,2.191,380,1.442,381,1.484,382,1.484,383,1.484,384,1.473,385,1.484,386,1.484,387,1.484,388,1.894,389,1.473,390,2.204,391,1.484,392,1.484,393,1.496,394,1.484,395,1.442,396,2.613,397,2.172,398,1.473,399,1.484,400,1.484,401,1.484,402,1.496,403,1.496,404,1.484,405,1.496,406,1.496,407,1.507,408,1.397,409,1.484,410,1.484,411,1.442,412,1.735,413,1.416,414,1.416,415,1.44,416,1.403,417,1.656,420,1.762,421,1.442,422,2.01,423,1.451,424,1.462,425,2.137,426,1.418,427,1.484,428,1.442,429,2.01,430,1.44,431,1.367,432,1.44,433,1.408,435,0.912,436,1.455,444,3.118,485,4.195,658,0.862,971,1.351,1045,3.485,1152,0.886,1153,0.886,1157,0.886,1158,0.886,1159,1.911,1160,0.886,1161,0.878,1162,0.886,1164,0.886,1165,0.886,1168,1.615,1197,1.141,1198,3.334,1215,1.404,1375,1.532,1534,2.045,1787,1.85,2020,2.974,2021,5.871,2026,7.678,2027,6.139,2028,7.17,2030,2.19,2031,2.045,2032,2.19,2033,2.19,2034,2.19,2035,2.19,2036,2.045,2037,3.42,2041,2.19,2042,2.045,2043,2.19,2044,2.045,2045,2.19,2046,2.41,2047,2.41,2048,2.41]],["t/636",[0,2.889,37,1.5,52,0.653,65,1.661,74,1.532,76,0.852,92,2.891,122,4.411,132,0.98,139,2.587,143,1.103,147,1.118,195,1.553,316,3.642,485,5.476,572,6.7,1370,7.318]],["t/638",[2,1.006,46,4.952,80,4.222,86,3.37,105,1.256,139,2.139,143,0.912,144,3.733,147,1.061,151,3.275,153,2.92,215,4.952,424,2.53,615,5.862,616,6.023,1013,4.374,1297,8.168,1514,8.168,2049,8.989,2050,8.989,2051,8.989,2052,8.989]],["t/640",[2,0.963,8,1.113,13,2.93,52,0.724,76,0.931,77,2.564,79,1.128,92,2.348,97,2.756,111,1.776,124,3.355,132,0.927,133,1.36,134,2.538,138,2.44,143,1.14,144,3.464,147,0.963,153,2.71,155,1.393,158,3.321,159,1.579,160,1.877,161,3.355,162,3.624,166,3.125,168,3.012,195,1.469,209,4.129,225,2.559,226,2.853,268,2.828,314,3.755,503,3.85,544,5.295,575,5.577]],["t/642",[2,0.889,52,0.72,58,2.266,76,0.872,79,1.237,90,2.542,103,3.183,106,3.813,133,1.003,143,0.743,144,3.043,147,1.07,155,1.436,159,1.563,172,3.01,173,2.625,174,1.802,178,1.657,183,2.666,184,3.077,188,2.887,189,2.795,195,1.291,224,2.67,244,2.721,265,7.053,285,2.127,317,3.444,509,4.368,875,5.704,1075,3.781,1363,5.626,1464,5.056,1568,5.841,2053,7.329,2054,7.382,2055,5.22]],["t/644",[2,0.672,14,1.118,27,3.001,28,0.987,29,2.77,35,1.208,36,1.208,37,1.088,46,1.656,52,0.621,57,1.601,58,0.929,65,1.843,67,1.624,76,0.811,79,1.083,90,1.133,93,1.983,104,2.203,105,1.239,106,2.312,108,1.217,110,2.284,111,1.477,119,1.945,132,0.986,133,0.411,135,1.983,141,1.915,143,0.305,144,1.248,147,0.586,155,1.028,159,1.454,160,1.561,166,0.945,167,1.902,172,1.235,173,0.859,174,1.189,178,1.663,183,0.872,184,1.413,188,0.945,189,0.914,200,1.918,207,1.945,222,1.674,243,2.825,244,3.566,250,1.648,260,2.051,265,7.373,285,0.872,304,1.226,315,1.127,316,1.065,317,2.271,321,3.373,322,1.183,323,1.118,324,1.786,325,1.424,326,2.925,327,2.678,328,2.678,329,2.678,330,2.678,331,2.665,332,2.217,333,1.968,334,1.37,335,2.338,336,2.121,337,2.285,338,2.302,339,2.285,340,1.37,341,2.384,342,2.285,343,1.37,344,2.352,345,2.497,346,2.516,347,2.516,348,2.302,349,1.381,350,2.393,351,2.2,352,1.712,353,1.998,354,2.555,355,1.381,356,1.402,357,1.36,358,1.968,359,1.339,360,1.895,361,2.09,362,1.402,363,1.413,364,1.36,365,1.381,366,2.356,367,2.356,368,2.268,369,1.281,370,1.3,371,1.253,372,1.402,373,1.938,374,1.712,375,2.014,376,1.424,377,2.516,378,1.391,379,2.301,380,1.728,381,1.381,382,1.381,383,1.381,384,1.37,385,1.381,386,1.381,387,1.381,388,1.799,389,1.37,390,2.2,391,1.381,392,1.381,393,1.391,394,1.381,395,1.728,396,2.904,397,2.482,398,1.37,399,1.381,400,1.381,401,1.381,402,1.391,403,1.391,404,1.381,405,1.391,406,1.391,407,1.402,408,1.3,409,1.381,410,1.381,411,1.728,412,1.381,413,1.697,414,1.697,415,1.339,416,1.682,417,1.985,420,1.402,421,1.728,422,1.909,423,1.349,424,1.36,425,2.029,426,1.319,427,1.381,428,1.728,429,1.909,430,1.339,431,1.271,432,1.339,433,1.309,435,1.829,436,1.744,509,3.371,622,1.787,862,1.551,873,2.218,940,2.141,971,2.709,1067,4.1,1363,2.308,1568,5.426,1740,2.415,2054,7.131,2056,3.006,2057,4.39,2058,3.006,2059,4.1,2060,2.731,2061,3.006,2062,3.006]],["t/646",[2,0.695,14,1.163,27,3.022,28,1.287,29,2.792,35,1.266,36,1.266,37,1.116,46,1.756,52,0.576,58,0.985,64,1.895,65,1.646,67,1.071,74,0.554,76,0.751,79,0.992,93,2.182,103,3.4,104,2.251,105,1.266,106,2.608,108,1.275,110,2.596,111,1.527,119,1.509,132,1.007,133,0.436,135,1.447,141,1.807,143,0.514,147,0.309,155,0.641,159,1.347,160,1.614,167,1.943,174,0.993,178,1.661,200,1.969,207,1.997,222,1.731,243,2.854,250,1.691,260,2.076,265,6.707,285,2.418,304,1.285,321,2.749,322,1.239,323,1.171,324,1.847,325,1.492,326,2.965,327,2.736,328,2.736,329,2.736,330,2.736,331,2.692,332,2.137,333,2.035,334,1.436,335,2.399,336,2.176,337,2.345,338,2.363,339,2.345,340,1.436,341,2.428,342,2.345,343,1.436,344,2.403,345,2.551,346,2.57,347,2.57,348,2.363,349,1.447,350,2.115,351,2.258,352,1.13,353,2.066,354,2.516,355,2.05,356,1.469,357,1.425,358,2.035,359,1.403,360,1.959,361,2.249,362,1.469,363,1.481,364,1.425,365,1.447,366,2.418,367,2.418,368,2.327,369,1.67,370,1.695,371,1.633,372,1.469,373,2.004,374,1.13,375,2.082,376,1.492,377,2.57,378,1.814,379,2.03,380,1.14,381,1.447,382,1.447,383,1.447,384,1.436,385,1.447,386,1.447,387,1.447,388,1.86,389,1.436,390,2.121,391,1.447,392,1.447,393,1.458,394,1.447,395,1.14,396,2.253,397,1.811,398,1.436,399,1.447,400,1.447,401,1.447,402,1.458,403,1.458,404,1.447,405,1.458,406,1.458,407,1.469,408,1.362,409,1.447,410,1.447,411,1.14,412,1.8,413,1.12,414,1.12,415,1.403,416,1.11,420,1.828,421,1.14,422,1.974,423,1.414,424,1.425,425,2.098,426,1.383,427,1.447,428,1.14,429,1.974,430,1.403,431,1.332,432,1.403,433,1.372,435,1.207,436,1.151,478,0.985,509,3.764,658,1.14,760,1.207,1067,2.705,1152,1.172,1153,1.172,1157,1.172,1158,1.172,1159,2.317,1160,1.172,1161,1.161,1162,1.172,1163,1.256,1164,1.172,1165,1.172,1568,4.977,1740,2.561,1891,2.352,1900,2.27,2057,2.896,2059,4.296,2063,8.736,2064,8.736,2065,3.187,2066,2.896,2067,5.063,2068,3.187,2069,3.187,2070,2.561,2071,2.896,2072,3.187]],["t/648",[2,0.713,14,0.97,27,3.039,28,1.187,29,2.81,35,1.314,36,1.314,37,1.139,46,0.879,52,0.605,53,0.67,64,0.949,65,1.529,67,1.278,69,2.009,74,0.277,76,0.79,79,1.021,86,0.598,90,0.374,93,2.168,104,2.288,105,1.287,106,2.454,108,1.324,110,2.372,111,1.568,116,2.827,119,1.392,132,1.036,133,1.11,134,0.486,135,1.795,141,1.855,143,0.533,144,1.173,151,0.582,155,0.735,159,1.369,160,1.657,166,0.502,167,1.975,174,1.031,178,1.662,200,2.009,207,2.077,222,1.777,243,2.876,244,3.089,250,1.726,260,2.096,264,0.571,265,6.882,271,0.582,274,0.701,285,2.046,304,1.333,321,1.846,322,1.286,323,1.216,324,1.896,325,1.549,326,2.997,327,2.781,328,2.781,329,2.781,330,2.781,331,2.713,332,2.216,333,2.088,334,1.49,335,2.448,336,2.221,337,2.393,338,2.411,339,2.393,340,1.49,341,2.461,342,2.393,343,1.49,344,2.442,345,2.593,346,2.613,347,2.613,348,2.411,349,1.501,350,1.852,351,2.255,352,1.002,353,1.927,354,2.395,355,1.912,356,1.525,357,1.479,358,2.088,359,1.456,360,2.011,361,2.271,362,1.525,363,1.537,364,1.479,365,1.501,366,2.467,367,2.467,368,2.375,369,1.665,370,1.69,371,1.629,372,1.525,373,2.057,374,1.002,375,1.942,376,1.355,377,2.579,378,1.673,379,2.205,380,1.011,381,1.501,382,1.501,383,1.501,384,1.49,385,1.501,386,1.501,387,1.501,388,1.91,389,1.49,390,2.2,391,1.501,392,1.501,393,1.513,394,1.501,395,1.011,396,2.078,397,1.644,398,1.49,399,1.501,400,1.501,401,1.501,402,1.513,403,1.513,404,1.501,405,1.513,406,1.513,407,1.525,408,1.414,409,1.501,410,1.501,411,1.011,412,1.795,413,0.993,414,0.993,415,1.456,416,0.984,417,1.888,420,1.686,421,1.011,422,2.026,423,1.468,424,1.479,425,2.154,426,1.435,427,1.501,428,1.011,429,2.026,430,1.456,431,1.383,432,1.456,433,1.246,435,0.604,436,1.02,444,2.425,465,1.394,490,0.879,505,1.069,509,1.909,544,1.505,586,2.997,658,1.011,661,1.137,752,1.041,850,1.45,875,0.991,971,0.895,1152,1.039,1153,1.039,1154,1.394,1157,1.039,1158,1.039,1159,2.137,1160,1.039,1161,1.03,1162,1.039,1163,0.629,1164,1.039,1165,1.039,1168,1.069,1197,0.756,1198,0.788,1215,0.93,1263,6.697,1294,1.069,1301,1.041,1348,6.342,1388,2.418,1489,2.169,1497,2.169,1568,3.341,1740,1.283,1827,1.225,1883,1.354,1888,6.342,1889,5.279,1890,1.354,1891,2.085,1893,1.354,1894,1.354,1896,1.354,1897,3.226,1898,1.354,1899,1.354,1900,2.013,1902,1.354,1903,1.45,1904,1.354,1907,1.45,2055,3.274,2059,4.929,2060,1.45,2066,4.176,2070,2.271,2071,4.176,2073,1.45,2074,1.596,2075,5.809,2076,5.809,2077,5.809,2078,2.085,2079,2.085,2080,1.596,2081,2.085,2082,2.826,2083,1.596,2084,1.596]],["t/650",[2,0.811,28,1.711,52,0.633,76,0.694,79,1.195,86,3.139,90,2.338,93,1.871,133,1.145,143,0.849,147,0.965,155,1.394,159,1.481,173,2.393,174,1.643,178,1.641,183,2.43,184,2.914,188,2.631,189,2.547,194,5.61,285,2.43,317,3.139,509,4.573,592,4.319,760,3.17,1198,4.918,1522,5.46,1568,6.337,2073,7.608]],["t/652",[0,2.883,8,0.985,37,1.499,53,3.695,65,1.658,69,3.365,76,0.729,114,3.868,128,4.797,133,1.204,138,2.574,139,2.442,143,1.041,192,4.344,195,1.55,222,2.124,240,4.848,258,3.01,285,2.978,350,2.594,445,4.011,501,3.695,615,6.693,616,6.876,1170,6.231,1173,4.687,1734,7.998]],["t/654",[0,2.758,28,1.72,47,5.08,52,0.635,56,4.107,57,5.324,58,2.603,59,5.808,74,1.985,75,3.885,76,0.698,90,1.975,111,1.792,132,1.111,133,1.152,147,0.815,165,4.393,197,6.463,206,4.215,226,2.879,250,1.709,271,3.643,272,6.212,312,7.65,319,3.386,466,4.904,467,3.615,468,5.588,475,4.558,577,4.277,685,5.353,689,5.996,902,5.808,1077,5.353,1214,5.808,1358,5.996,1365,5.808,1688,5.228,1703,6.765,2019,5.808,2085,7.65,2086,5.996,2087,5.996,2088,6.212]],["t/656",[8,1.049,13,3.291,153,3.044,195,1.65,503,4.324]],["t/658",[2,0.94,8,1.087,14,1.482,37,1.301,47,4.078,52,0.69,53,3.369,54,3.607,55,4.078,56,3.297,65,1.968,76,0.948,77,1.937,79,1.032,83,2.952,92,2.259,95,3.613,97,2.651,105,1.459,119,1.923,124,3.228,133,1.429,134,2.442,137,3.446,138,2.841,139,2.311,143,1.146,144,3.333,147,1.051,155,1.323,158,3.194,159,1.444,166,3.053,168,2.897,178,1.329,207,1.923,216,4.675,250,1.629,260,1.596,293,3.486,319,4.202,320,3.009,437,4.421,466,4.675,467,3.446,468,4.205,503,3.704,577,4.936,679,3.607]],["t/660",[2,0.694,35,0.795,36,0.795,39,1.548,47,1.616,52,0.721,53,1.335,55,1.616,56,1.307,59,2.194,66,1.216,72,1.088,74,1.093,76,0.933,77,1.22,79,1.213,93,2.024,94,4.247,98,4.215,100,4.565,105,0.706,106,2.774,107,1.752,108,0.801,114,5.028,116,1.548,133,0.435,141,0.801,143,0.323,147,0.609,150,1.266,153,1.033,155,1.257,159,1.421,165,4.538,173,0.909,174,0.624,177,4.15,178,1.666,179,1.526,180,2.379,183,0.923,184,1.478,187,2.457,188,1,189,0.968,195,1.108,205,2.556,218,1.931,238,1.468,244,3.363,260,0.633,264,3.732,271,1.159,285,2.416,304,2.558,315,1.193,316,1.127,317,3.272,322,0.779,323,1.169,324,1.301,325,0.938,331,1.573,351,1.705,353,1.456,354,1.811,355,1.798,361,1.301,369,0.843,370,0.856,371,0.825,373,1.412,375,1.467,376,0.938,377,2.712,378,1.456,379,0.825,388,0.825,412,1.444,415,0.882,417,2.944,420,1.467,422,0.875,429,1.391,430,0.882,431,0.837,432,0.882,433,0.862,465,3.536,467,1.366,468,1.667,486,1.06,512,3.35,513,3.296,532,1.293,551,1.616,555,6.922,556,6.476,577,1.616,611,5.175,658,1.138,1066,3.906,1075,1.641,1152,1.17,1153,1.17,1154,3.536,1157,1.17,1158,1.17,1159,2.314,1160,1.17,1161,1.159,1162,1.17,1163,1.253,1164,1.17,1165,1.17,1385,5.294,1387,3.387,1390,2.266,1395,2.699,1400,2.699,1425,1.432,1452,2.89,1463,4.23,1524,8.046,1533,2.347,1569,3.005,1598,7.064,1743,3.73,1816,2.194,1819,2.194,1823,2.194,2054,4.062,2089,2.89,2090,2.89,2091,8.231,2092,8.765,2093,7.406,2094,5.759,2095,6.081,2096,5.502,2097,7.105,2098,4.062,2099,5.716,2100,4.289,2101,4.593,2102,2.89,2103,7.105,2104,2.556,2105,4.593,2106,4.289,2107,2.89,2108,3.881,2109,2.89,2110,2.89,2111,3.181,2112,7.105,2113,2.556,2114,4.593,2115,4.593,2116,2.89,2117,4.593,2118,2.89,2119,2.89]],["t/662",[59,7.689,66,4.342,116,5.527,165,4.346,264,3.865,304,2.882,467,4.785,468,5.84,555,6.641,556,5.665,1385,5.523,1463,4.413,1524,7.837]],["t/664",[2,0.839,32,4.776,46,4.776,58,2.68,65,1.633,66,3.314,79,0.921,83,3.189,105,1.211,116,4.219,132,0.963,133,1.477,143,0.88,145,4.162,146,6.656,147,0.839,150,3.451,165,3.381,260,2.023,264,3.639,304,2.2,344,2.298,466,5.926,468,5.657,495,5.654,501,3.64,516,5.809,532,3.524,604,6.177,795,6.967,1023,6.176,1394,6.656,1524,5.982,1750,6.656,2120,6.967,2121,6.656,2122,7.878]],["t/666",[2,0.949,8,0.318,35,1.98,36,1.98,37,0.381,46,1.567,52,0.704,61,1.54,65,2.132,66,3.026,67,2.66,76,0.918,79,1.176,93,1.769,105,1.165,108,1.994,116,3.269,119,2.489,132,0.316,133,0.389,135,2.753,141,1.994,143,0.288,147,0.275,155,1.002,165,1.109,178,1.666,195,0.501,240,1.567,244,3.429,260,1.574,264,2.643,304,2.523,321,3.538,322,1.938,323,1.831,324,2.48,325,2.333,331,2.597,332,2.161,350,3.061,351,2.815,352,2.806,353,2.774,354,3.112,355,2.262,361,2.038,373,2.691,374,2.806,375,2.796,376,2.333,377,3.065,378,2.279,379,2.802,380,2.831,388,2.053,390,2.145,395,2.831,396,3.715,397,3.446,411,2.831,412,2.262,413,2.78,414,2.78,415,2.194,416,2.756,417,1.898,420,2.297,421,2.831,422,2.178,428,2.831,429,2.65,430,2.194,431,2.083,432,2.194,433,2.145,435,2.209,436,2.858,444,4.648,468,1.49,479,1.194,532,1.156,556,1.854,1197,2.763,1292,2.183,1374,2.098,1375,1.808,1385,2.938,1387,6.186,1390,3.291,1463,2.347,1470,5.871,1476,2.938,1524,5.996,1569,5.987,1610,2.026,1743,7.431,1745,5.302,2096,8.504,2108,6.077,2123,4.305,2124,2.584,2125,2.844,2126,2.844,2127,2.844,2128,2.844,2129,2.844]],["t/668",[2,0.988,8,0.521,14,0.53,27,2.716,28,0.587,29,2.474,35,1.469,36,1.469,37,0.787,47,2.366,52,0.691,56,1.18,61,2.521,64,2.768,65,1.878,67,1.565,71,1.505,74,1.021,76,0.855,79,1.17,83,1.056,86,2.533,93,1.949,97,0.949,101,1.36,104,1.678,105,1.219,106,0.957,108,1.48,110,1.739,111,0.991,112,2.565,119,1.905,132,0.825,133,0.637,135,1.931,141,1.702,144,1.193,145,1.378,146,2.205,147,0.451,148,1.924,150,2.338,151,1.046,155,1.223,159,1.34,160,1.048,165,3.516,166,2.499,167,1.592,173,0.821,174,0.914,178,1.665,179,0.867,180,2.056,187,1.846,191,1.36,195,0.506,197,2.205,200,1.388,206,2.331,207,1.407,211,1.641,222,1.124,243,2.455,244,3.587,250,1.192,260,1.954,264,3.225,268,1.579,278,1.378,285,2.308,293,1.247,304,1.49,315,1.077,316,2.082,317,2.533,319,1.155,321,2.609,322,1.438,323,1.359,324,2.047,325,1.731,326,2.43,327,2.039,328,2.039,329,2.039,330,2.039,331,2.553,332,1.845,333,1.321,334,0.814,335,1.691,336,1.534,337,1.653,338,1.666,339,1.653,340,0.814,341,1.884,342,1.653,343,0.814,344,1.791,345,1.902,346,1.916,347,1.916,348,1.666,349,0.821,350,2.469,351,2.443,352,1.651,353,2.29,354,2.729,355,2.122,356,0.833,357,0.808,358,1.321,359,0.796,360,1.272,361,2.047,362,0.833,363,0.84,364,0.808,365,0.821,366,1.705,367,1.705,368,1.641,369,1.234,370,1.253,371,1.208,372,0.833,373,2.221,374,1.651,375,2.308,376,1.731,377,2.74,378,1.946,379,2.338,380,1.666,381,0.821,382,0.821,383,0.821,384,0.814,385,0.821,386,0.821,387,0.821,388,1.752,389,0.814,390,1.831,391,0.821,392,0.821,393,0.827,394,0.821,395,1.666,396,2.844,397,2.417,398,0.814,399,0.821,400,0.821,401,0.821,402,0.827,403,0.827,404,0.821,405,0.827,406,0.827,407,0.833,408,0.773,409,0.821,410,0.821,411,1.666,412,1.931,413,1.636,414,1.636,415,1.628,416,1.621,417,2.413,420,1.961,421,1.666,422,1.859,423,0.802,424,0.808,425,1.362,426,0.784,427,0.821,428,1.666,429,2.188,430,1.628,431,1.546,432,1.628,433,1.592,435,1.087,436,1.681,438,1.981,444,3.427,465,1.417,467,2,468,5.147,475,3.18,478,1.816,540,1.783,541,2.119,544,1.529,570,1.924,575,3.294,577,1.459,598,1.582,658,1.027,760,1.087,917,2.308,1066,1.783,1152,1.056,1153,1.056,1154,1.417,1157,1.056,1158,1.056,1159,2.161,1160,1.056,1161,1.046,1162,1.056,1163,1.131,1164,1.056,1165,1.056,1197,1.36,1285,1.707,1352,2.437,1394,3.575,1410,2.308,1524,1.981,1529,1.707,1569,5.506,1750,2.205,2092,7.402,2093,6.302,2094,6.73,2096,7.111,2098,2.308,2104,2.308,2108,3.575,2113,2.308,2121,2.205,2123,3.436,2124,4.232,2130,2.872,2131,8.198,2132,2.872,2133,7.611,2134,4.232,2135,2.61,2136,2.61,2137,2.61,2138,2.61]],["t/670",[2,0.949,8,0.934,13,1,14,0.526,27,2.71,28,0.582,29,2.469,35,1.46,36,1.46,37,0.782,50,1.405,52,0.67,54,1.057,55,1.447,56,1.17,64,1.692,65,1.92,66,2.826,67,1.554,74,0.495,76,0.868,77,0.687,79,1.135,93,2.008,97,1.528,101,1.348,104,1.669,105,1.106,108,1.471,110,1.73,111,0.985,116,4.902,119,2,132,0.966,133,1.293,134,2.539,135,1.921,141,1.693,144,1.92,148,1.908,149,2.593,150,1.133,152,2.416,155,0.739,159,0.999,160,1.04,165,3.878,167,1.441,174,0.559,178,1.662,182,1.037,191,2.19,192,3.909,195,1.028,200,1.38,207,1.399,208,2.101,210,2.566,222,1.116,243,2.448,244,3.857,250,1.608,260,1.88,264,3.645,271,1.037,284,3.016,285,0.826,292,1.964,304,1.482,309,2.028,313,2.186,314,2.082,319,1.145,320,1.734,321,2.931,322,1.429,323,1.351,324,2.039,325,1.721,326,2.422,327,2.029,328,2.029,329,2.029,330,2.029,331,2.548,332,1.836,333,1.311,334,0.807,335,1.682,336,1.525,337,1.643,338,1.656,339,1.643,340,0.807,341,1.876,342,1.643,343,0.807,344,1.782,345,1.892,346,1.906,347,1.906,348,1.656,349,0.814,350,2.335,351,2.436,352,1.639,353,2.281,354,2.722,355,2.568,356,0.826,357,0.801,358,1.311,359,0.789,360,1.263,361,2.039,362,0.826,363,0.833,364,0.801,365,0.814,366,1.695,367,1.695,368,1.631,369,1.226,370,1.244,371,1.199,372,0.826,373,2.212,374,1.639,375,2.298,376,1.721,377,2.82,378,2.281,379,2.331,380,1.654,381,0.814,382,0.814,383,0.814,384,0.807,385,0.814,386,0.814,387,0.814,388,1.743,389,0.807,390,1.822,391,0.814,392,0.814,393,0.82,394,0.814,395,1.654,396,2.833,397,2.405,398,0.807,399,0.814,400,0.814,401,0.814,402,0.82,403,0.82,404,0.814,405,0.82,406,0.82,407,0.826,408,0.766,409,0.814,410,0.814,411,1.654,412,1.921,413,1.624,414,1.624,415,1.619,416,1.61,417,2.399,420,1.951,421,1.654,422,1.849,423,0.795,424,0.801,425,1.352,426,0.777,427,0.814,428,1.654,429,2.179,430,1.619,431,1.536,432,1.619,433,1.583,435,1.751,436,1.669,443,2.186,444,3.412,465,1.405,466,2.694,467,1.223,468,5.05,471,2.416,472,2.416,505,1.908,551,3.757,555,4.384,556,4.821,570,1.908,604,1.729,658,1.018,679,1.057,685,3.713,690,1.251,760,1.078,880,1.81,1023,2.028,1152,1.047,1153,1.047,1154,2.882,1157,1.047,1158,1.047,1159,2.148,1160,1.047,1161,2.128,1162,1.047,1164,1.047,1165,1.047,1168,1.908,1179,1.492,1197,2.19,1198,1.405,1239,4.701,1352,2.416,1385,2.941,1454,2.416,1463,2.35,1524,1.964,1569,5.491,1940,5.704,1941,5.704,1946,3.924,2094,7.595,2095,4.955,2096,7.092,2098,3.716,2100,2.416,2104,3.716,2106,2.416,2108,3.55,2113,2.288,2120,2.288,2122,2.587,2123,3.412,2131,7.627,2135,5.306,2136,5.306,2137,2.587,2138,2.587,2139,2.847,2140,2.847,2141,2.847,2142,2.587,2143,4.202,2144,4.202,2145,4.202,2146,4.202,2147,4.202,2148,2.847,2149,2.847]],["t/672",[2,0.606,28,1.027,35,0.79,36,0.79,52,0.715,65,0.595,69,1.922,76,0.942,79,1.221,80,1.284,84,0.969,93,2.019,94,3.792,100,4.482,105,0.441,106,2.766,108,0.796,114,4.946,132,0.351,133,0.857,134,0.961,141,0.796,143,0.32,145,1.516,147,0.487,155,1.274,159,1.473,165,4.482,173,0.903,174,0.62,177,4.14,178,1.668,179,1.517,180,2.525,183,0.917,184,1.47,187,1.968,188,0.993,189,0.961,206,2.517,212,1.682,238,1.458,244,3.082,260,0.628,264,3.69,285,2.409,304,2.472,315,1.885,316,2.53,317,3.652,322,0.773,323,0.731,324,1.294,325,0.931,331,1.566,351,1.697,353,1.448,354,1.803,355,1.789,361,1.294,369,0.837,370,0.85,371,0.819,373,1.404,375,1.459,376,0.931,377,2.706,378,1.448,379,0.819,388,0.819,412,1.437,415,0.876,417,2.572,420,1.459,422,0.869,429,1.383,430,0.876,431,0.831,432,0.876,433,0.856,437,3.45,465,3.09,466,2.929,479,1.326,512,3.335,513,3.281,555,6.726,556,6.223,575,2.819,611,4.452,658,1.13,752,2.06,849,1.918,877,2.425,916,2.539,986,2.06,1152,1.162,1153,1.162,1154,3.09,1157,1.162,1158,1.162,1159,2.303,1160,1.162,1161,1.151,1162,1.162,1163,1.245,1164,1.162,1165,1.162,1173,1.682,1385,4.955,1387,3.369,1390,2.25,1395,2.681,1400,2.681,1463,3.96,1470,3.197,1473,2.18,1476,2.009,1481,2.18,1524,7.873,1569,2.989,1598,7.043,1688,1.962,1743,3.71,1816,2.18,1819,2.18,1823,2.18,1937,2.425,2054,4.04,2091,7.91,2092,8.922,2093,7.043,2094,5.737,2095,6.057,2096,5.481,2097,7.081,2098,4.04,2099,5.69,2100,4.266,2101,4.569,2102,2.871,2103,7.081,2104,2.539,2105,4.569,2106,4.266,2107,2.871,2108,3.86,2109,2.871,2110,2.871,2112,7.081,2113,2.539,2114,4.569,2115,4.569,2116,2.871,2117,4.569,2118,2.871,2119,2.871,2131,7.387,2133,7.081,2150,3.159,2151,2.871]],["t/674",[0,2.845,2,1.046,8,1.14,28,2.081,37,1.493,52,0.647,53,3.647,54,3.225,55,4.413,65,2.036,74,1.509,92,2.445,101,4.114,132,0.965,139,2.423,143,0.881,147,0.986,149,4.871,153,2.822,195,1.53,207,2.081,260,1.727,293,3.773,448,5.274,466,5.932,577,5.174,689,6.187,1299,6.187,1359,5.06,1366,6.98]],["t/676",[1,5.614,2,0.875,8,1.229,55,4.594,77,2.651,84,3.197,132,1.158,139,2.151,147,1.063,200,2.136,574,7.692,828,5.614,829,7.672,1372,4.896]],["t/678",[2,0.898,8,1.184,13,3.823,14,1.866,31,4.714,37,1.417,39,3.623,52,0.691,54,2.765,66,2.847,72,3.457,74,1.612,76,0.877,79,1.124,84,2.284,86,2.792,92,3.063,100,3.026,103,3.234,105,1.478,112,4.102,119,1.784,132,1.123,133,1.019,138,2.178,139,2.517,143,1.073,147,0.978,150,2.964,153,2.419,167,1.989,169,3.352,172,3.059,178,1.489,182,2.713,204,3.841,207,1.784,226,2.547,242,3.55,255,3.026,258,2.547,260,1.481,268,3.427,276,3.574,302,3.783,478,2.302,486,2.481,501,3.895,503,3.436,509,3.092,523,5.494,546,4.032,679,4.042,690,3.272,828,6.276,898,5.774,922,3.574,1013,3.623,1142,3.902,1179,3.902,1407,4.856,1425,4.176,1773,5.304,1797,5.761,1807,5.304,2152,6.973,2153,5.494]],["t/680",[8,1.047,13,3.285,204,4.824,207,2.241,486,3.116,501,3.926]],["t/682",[2,0.852,8,1.149,53,3.695,55,4.472,77,2.124,84,2.699,108,2.217,132,1.14,147,0.994,172,3.616,224,3.207,238,4.062,290,6.757,304,2.604,305,5.344,310,6.269,379,2.282,504,6.269,564,4.225,574,6.494,828,5.465,829,7.469,1075,4.54,1139,7.572,1229,4.936,1359,5.127,1371,5.029,1372,4.766,1797,5.465,1827,6.757,2154,7.073,2155,7.998]],["t/684",[66,3.919,74,1.943,92,3.148,114,3.861,151,3.201,203,5.729,210,3.861,260,1.747,725,5.455,828,6.741,1425,4.614,1773,7.302,1797,7.163,1807,6.257,2152,7.489,2153,7.564,2156,7.87,2157,7.983]],["t/686",[52,0.631,64,4.95,69,3.184,74,1.91,84,2.554,92,2.795,95,3.749,100,3.385,128,3.893,132,1.179,147,0.806,151,3.035,195,1.936,203,5.431,214,6.692,215,4.588,227,4.758,260,1.656,264,3.553,557,4.851,564,3.997,592,4.296,619,5.58,828,6.168,1075,4.296,1331,7.433,1335,5.745,1336,6.145,1349,5.171,1425,4.471,1463,5.047,1619,7.982,1797,7.211,2152,6.853,2158,6.316,2159,7.982,2160,7.067]],["t/688",[2,0.87,8,1.163,19,6.403,50,4.436,52,0.571,53,3.774,65,1.693,74,1.562,76,0.745,77,2.169,79,1.103,101,4.92,102,6.901,120,5.582,139,2.139,141,2.264,143,0.912,260,1.788,486,2.995,1513,6.901,1797,5.582,2161,8.168,2162,8.168]],["t/690",[2,0.704,8,1.023,20,5.365,52,0.731,53,3.053,55,5.08,66,4.01,74,1.263,79,1.114,84,2.23,95,3.273,111,1.548,145,4.388,147,0.885,155,1.418,159,1.486,173,2.078,174,1.427,178,1.655,179,2.195,180,3.042,183,2.11,184,2.673,188,2.285,189,2.212,260,1.446,304,1.845,305,4.415,310,5.179,486,2.423,551,3.695,598,4.006,725,4.515,828,5.676,1139,5.365,1229,4.078,1412,7.472,1425,4.115,1602,4.742,1773,7.472,1796,7.74,1797,7.032,1807,6.511,2152,6.306,2153,7.377,2154,5.843,2156,7.676,2163,6.607,2164,7.271,2165,8.053]],["t/692",[2,0.704,14,0.952,27,3.03,28,1.054,29,2.801,35,1.29,36,1.29,37,1.128,52,0.627,65,1.512,66,1.722,67,0.926,72,0.531,74,0.896,76,0.805,79,1.08,83,0.571,84,0.476,93,2.153,95,0.699,100,0.631,101,1.305,104,2.297,105,1.277,108,1.299,110,2.352,111,1.547,119,1.368,132,1.028,133,0.212,135,1.287,141,1.831,143,0.627,155,0.653,159,1.358,160,1.635,167,1.959,174,1.012,178,1.662,200,2.029,207,2.057,222,1.754,243,2.865,244,3.056,250,1.708,260,2.093,264,3.011,276,0.745,285,2.578,304,1.309,321,1.812,322,1.262,323,1.193,324,1.871,325,1.52,326,2.981,327,2.758,328,2.758,329,2.758,330,2.758,331,2.703,332,2.13,333,2.061,334,1.463,335,2.424,336,2.199,337,2.369,338,2.387,339,2.369,340,1.463,341,2.444,342,2.369,343,1.463,344,2.422,345,2.572,346,2.592,347,2.592,348,2.387,349,1.474,350,1.683,351,2.281,352,0.977,353,2.093,354,2.517,355,2.157,356,1.497,357,1.451,358,2.061,359,1.43,360,1.985,361,2.287,362,1.497,363,1.508,364,1.451,365,1.474,366,2.443,367,2.443,368,2.351,369,1.748,370,1.774,371,1.71,372,1.497,373,2.03,374,0.977,375,2.109,376,1.52,377,2.654,378,1.899,379,1.958,380,0.986,381,1.474,382,1.474,383,1.474,384,1.463,385,1.474,386,1.474,387,1.474,388,1.885,389,1.463,390,2.114,391,1.474,392,1.474,393,1.485,394,1.474,395,0.986,396,2.043,397,1.611,398,1.463,399,1.474,400,1.474,401,1.474,402,1.485,403,1.485,404,1.474,405,1.485,406,1.485,407,1.497,408,1.387,409,1.474,410,1.474,411,0.986,412,1.884,413,0.968,414,0.968,415,1.43,416,0.959,417,1.85,420,1.914,421,0.986,422,2,423,1.44,424,1.451,425,2.126,426,1.408,427,1.474,428,0.986,429,2,430,1.43,431,1.357,432,1.43,433,1.398,435,0.587,436,0.995,444,2.38,445,0.707,465,1.36,478,1.149,486,0.517,542,1.317,658,1.33,667,0.87,690,1.211,760,1.043,828,1.711,831,1.071,1023,1.105,1139,1.145,1152,1.367,1153,1.367,1154,1.36,1157,1.367,1158,1.367,1159,2.557,1160,1.367,1161,1.355,1162,1.367,1163,1.465,1164,1.367,1165,1.367,1197,0.735,1229,0.87,1230,0.964,1239,3.279,1301,1.012,1331,2.424,1412,5.556,1425,1.241,1463,3.35,1470,3.631,1473,2.565,1476,2.364,1481,2.565,1602,1.012,1773,2.648,1796,6.211,1797,3.546,1807,2.648,1966,1.41,2019,1.071,2152,1.901,2153,2.743,2156,2.116,2165,5.338,2166,2.756,2167,8.866,2168,2.504,2169,4.376,2170,2.988,2171,5.247,2172,1.552,2173,2.504,2174,4.376,2175,2.504,2176,2.504,2177,1.552,2178,2.504,2179,1.41,2180,2.504,2181,1.552,2182,1.41,2183,1.071,2184,1.552,2185,1.552,2186,1.552]],["t/694",[0,0.784,2,0.705,14,0.74,27,2.909,28,0.819,29,2.674,35,1.002,36,1.002,37,0.975,52,0.684,55,2.036,58,0.74,61,1.296,64,1.423,65,1.528,66,2.311,67,0.804,74,0.696,76,0.837,77,0.578,79,1.209,80,2.101,83,0.88,84,1.229,93,2.044,95,1.077,100,0.973,104,2.093,105,1.177,108,1.009,110,2.301,111,1.433,119,1.449,120,1.486,132,0.936,133,0.548,135,1.145,141,1.523,142,1.486,143,0.524,145,1.924,147,0.585,151,0.872,155,1.067,159,1.387,160,1.36,167,1.807,173,0.684,174,1.014,178,1.663,179,0.722,180,2.048,183,0.695,184,1.172,188,0.752,189,0.728,192,1.181,200,1.72,207,1.745,217,1.181,222,1.459,224,0.872,242,1.408,243,2.702,244,1.488,250,1.478,260,1.968,264,3.113,285,2.113,302,1.216,304,1.312,305,1.453,315,1.938,316,1.832,317,2.523,321,2.364,322,0.981,323,0.927,324,1.556,325,1.181,326,2.756,327,2.447,328,2.447,329,2.447,330,2.447,331,2.549,332,1.838,333,1.715,334,1.136,335,2.097,336,1.902,337,2.049,338,2.065,339,2.049,340,1.136,341,2.208,342,2.049,343,1.136,344,2.149,345,2.282,346,2.299,347,2.299,348,2.065,349,1.145,350,1.524,351,1.973,352,0.848,353,1.741,354,2.226,355,1.728,356,1.163,357,1.128,358,1.715,359,1.111,360,1.651,361,1.99,362,1.163,363,1.172,364,1.128,365,1.145,366,2.113,367,2.113,368,2.033,369,1.37,370,1.391,371,1.34,372,1.163,373,1.689,374,0.848,375,1.755,376,1.181,377,2.535,378,1.489,379,1.745,380,0.856,381,1.145,382,1.145,383,1.145,384,1.136,385,1.145,386,1.145,387,1.145,388,1.568,389,1.136,390,1.824,391,1.145,392,1.145,393,1.154,394,1.145,395,0.856,396,1.849,397,1.434,398,1.136,399,1.145,400,1.145,401,1.145,402,1.154,403,1.154,404,1.145,405,1.154,406,1.154,407,1.163,408,1.078,409,1.145,410,1.145,411,0.856,412,1.477,413,0.841,414,0.841,415,1.111,416,0.833,417,0.983,420,1.5,421,0.856,422,1.663,423,1.119,424,1.128,425,1.768,426,1.094,427,1.145,428,0.856,429,1.663,430,1.111,431,1.054,432,1.111,433,1.086,435,0.906,436,0.864,445,1.091,465,1.181,478,1.239,540,1.486,546,1.296,551,1.216,616,1.604,658,0.856,760,0.906,828,3.754,1017,1.319,1077,1.522,1142,1.254,1152,0.88,1153,0.88,1154,1.181,1157,0.88,1158,0.88,1159,1.902,1160,0.88,1161,0.872,1162,0.88,1163,0.943,1164,0.88,1165,0.88,1215,1.394,1239,5.533,1331,3.371,1361,1.766,1371,1.368,1412,6.516,1425,2.327,1463,4.421,1470,2.548,1473,1.651,1476,1.522,1481,1.651,1501,2.031,1522,1.561,1755,2.855,1773,4.307,1795,7.5,1796,7.455,1797,5.233,1807,2.855,2055,5.507,2078,1.766,2079,2.957,2081,1.766,2152,4.171,2153,3.814,2156,3.969,2158,5.533,2159,6.773,2165,7.165,2167,9.416,2169,5.13,2170,1.924,2171,5.711,2174,5.13,2183,1.651,2187,2.394,2188,8.183,2189,3.642,2190,3.642,2191,3.642,2192,2.175,2193,3.642,2194,3.642,2195,2.175,2196,2.394,2197,3.642,2198,3.642,2199,2.175,2200,2.394]],["t/696",[0,0.61,2,0.661,14,0.792,27,2.943,28,0.876,29,2.71,35,1.072,36,1.072,37,1.015,52,0.689,65,1.198,67,0.626,74,0.562,76,0.827,79,1.186,80,0.757,83,0.685,86,0.698,92,2.036,93,2.096,97,0.615,100,0.757,104,2.082,105,1.201,108,1.08,110,2.213,111,1.354,119,1.027,132,0.932,133,0.793,135,0.924,141,1.602,143,0.52,147,0.415,155,1.263,159,1.443,160,1.431,166,0.585,167,1.798,172,0.765,173,0.924,174,1.138,178,1.665,179,1.294,180,2.306,183,0.54,184,0.946,188,0.585,189,0.566,195,0.57,200,1.862,207,1.816,217,0.919,222,1.535,243,2.748,250,1.539,260,1.999,264,2.275,285,2.433,304,1.088,315,1.608,316,1.52,317,2.174,321,2.037,322,1.05,323,0.992,324,1.637,325,1.264,326,2.818,327,2.531,328,2.531,329,2.531,330,2.531,331,2.593,332,1.865,333,1.803,334,1.216,335,2.183,336,1.98,337,2.133,338,2.15,339,2.133,340,1.216,341,2.272,342,2.133,343,1.216,344,2.223,345,2.36,346,2.378,347,2.378,348,2.15,349,1.225,350,1.264,351,2.055,352,0.66,353,1.831,354,2.27,355,1.952,356,1.244,357,1.207,358,1.803,359,1.189,360,1.737,361,2.098,362,1.244,363,1.254,364,1.207,365,1.225,366,2.2,367,2.2,368,2.117,369,1.537,370,1.56,371,1.504,372,1.244,373,1.776,374,0.66,375,1.846,376,1.264,377,2.584,378,1.67,379,1.649,380,0.666,381,1.225,382,1.225,383,1.225,384,1.216,385,1.225,386,1.225,387,1.225,388,1.649,389,1.216,390,1.851,391,1.225,392,1.225,393,1.235,394,1.225,395,0.666,396,1.534,397,1.157,398,1.216,399,1.225,400,1.225,401,1.225,402,1.235,403,1.235,404,1.225,405,1.235,406,1.235,407,1.244,408,1.153,409,1.225,410,1.225,411,0.666,412,1.657,413,0.654,414,0.654,415,1.189,416,0.648,420,1.683,421,0.666,422,1.75,423,1.198,424,1.207,425,1.86,426,1.171,427,1.225,428,0.666,429,1.75,430,1.189,431,1.128,432,1.189,433,1.162,435,0.705,436,0.672,438,1.284,445,2.643,467,0.799,478,0.576,486,0.62,598,1.026,658,1.157,667,1.044,752,1.214,760,1.224,828,3.181,971,1.044,1152,1.19,1153,1.19,1157,1.19,1158,1.19,1159,2.339,1160,1.19,1161,1.178,1162,1.19,1163,1.274,1164,1.19,1165,1.19,1169,1.214,1229,2.405,1239,3.688,1331,2.109,1335,1.284,1336,2.386,1412,5.805,1425,1.93,1463,3.231,1587,1.58,1725,1.374,1795,7.804,1796,6.827,1797,5.455,1809,1.58,1918,1.692,2019,1.284,2055,2.304,2078,1.374,2079,1.374,2081,1.374,2152,3.534,2157,2.939,2158,4.344,2159,6.908,2165,6.257,2170,1.496,2183,1.284,2188,8.32,2189,2.939,2190,3.896,2191,3.896,2192,1.692,2193,3.896,2194,3.896,2195,1.692,2197,3.896,2198,3.896,2199,1.692,2201,1.862,2202,5.779,2203,1.692,2204,1.692,2205,3.234,2206,5.122,2207,3.234,2208,3.234,2209,1.862,2210,3.234,2211,1.862,2212,5.122,2213,10.563,2214,5.122,2215,5.122,2216,3.234,2217,3.234,2218,3.234,2219,3.234,2220,3.234,2221,4.288,2222,3.234,2223,3.234,2224,1.862,2225,3.234,2226,3.234,2227,3.234,2228,3.234,2229,1.862,2230,1.862,2231,1.862,2232,1.862]],["t/698",[2,0.669,14,0.77,27,2.93,28,0.852,29,2.695,35,1.043,36,1.043,37,0.999,52,0.68,55,1.276,65,1.405,67,0.844,74,1.083,76,0.82,79,1.191,80,1.021,83,0.924,84,1.279,86,0.942,93,2.075,100,1.695,101,1.189,103,1.091,104,2.054,105,1.156,108,1.051,110,2.13,111,1.327,112,1.383,119,1.282,132,0.919,133,0.344,135,1.192,141,1.569,143,0.802,145,1.205,147,0.404,155,1.267,159,1.451,160,1.402,167,1.84,173,0.718,174,1.05,178,1.664,179,1.259,180,1.896,183,0.729,184,1.22,188,0.789,189,0.764,195,0.735,200,1.954,207,1.787,217,1.239,222,1.504,226,0.859,242,3.016,243,2.729,250,1.514,260,1.968,264,2.473,268,0.851,274,1.104,285,2.164,293,1.812,304,1.058,315,2.006,316,1.896,317,2.592,320,0.942,322,1.021,323,0.965,324,1.604,325,1.23,326,2.793,327,2.497,328,2.497,329,2.497,330,2.497,331,2.575,332,1.888,333,1.767,334,1.183,335,2.148,336,1.948,337,2.099,338,2.115,339,2.099,340,1.183,341,2.246,342,2.099,343,1.183,344,2.193,345,2.328,346,2.346,347,2.346,348,2.115,349,1.192,350,1.577,351,2.021,352,0.89,353,1.794,354,2.276,355,1.78,356,1.211,357,1.174,358,1.767,359,1.156,360,1.701,361,2.034,362,1.211,363,1.22,364,1.174,365,1.192,366,2.164,367,2.164,368,2.083,369,1.418,370,1.439,371,1.387,372,1.211,373,1.74,374,0.89,375,1.808,376,1.23,377,2.51,378,1.541,379,1.793,380,0.898,381,1.192,382,1.192,383,1.192,384,1.183,385,1.192,386,1.192,387,1.192,388,1.616,389,1.183,390,1.874,391,1.192,392,1.192,393,1.201,394,1.192,395,0.898,396,1.914,397,1.492,398,1.183,399,1.192,400,1.192,401,1.192,402,1.201,403,1.201,404,1.192,405,1.201,406,1.201,407,1.211,408,1.122,409,1.192,410,1.192,411,0.898,412,1.529,413,0.882,414,0.882,415,1.156,416,0.874,420,1.553,421,0.898,422,1.714,423,1.165,424,1.174,425,1.822,426,1.139,427,1.192,428,0.898,429,1.714,430,1.156,431,1.098,432,1.156,433,1.131,436,0.907,444,3.19,445,2.438,448,1.525,478,0.776,526,1.36,540,2.59,565,2.018,604,1.525,658,0.898,667,1.408,670,2.131,682,1.683,690,1.104,725,1.559,760,1.579,831,1.733,940,1.789,971,2.339,1142,2.186,1152,0.924,1153,0.924,1157,0.924,1158,0.924,1159,1.968,1160,0.924,1161,0.915,1162,0.924,1163,0.989,1164,0.924,1165,0.924,1197,1.189,1198,2.64,1204,3.791,1215,1.463,1231,1.733,1301,1.638,1362,2.971,1412,5.892,1419,1.789,1463,1.276,1795,7.951,1796,7.533,1797,2.59,1827,1.928,1967,3.54,1983,6.104,1984,7.301,1985,5.007,2165,6.351,2167,8.869,2168,2.282,2169,4.54,2170,3.352,2171,5.287,2173,2.282,2174,4.54,2175,2.282,2176,2.282,2178,2.282,2179,2.282,2180,2.282,2182,2.282,2183,1.733,2188,8.287,2202,5.662,2203,2.282,2204,2.282,2233,2.511,2234,2.511,2235,4.862,2236,2.511,2237,2.511,2238,2.511,2239,2.511,2240,4.54,2241,2.511,2242,4.54,2243,2.511]],["t/700",[3,6.19,4,6.19,8,1.161,13,3.151,37,1.39,43,5.571,77,2.165,79,0.953,84,2.751,105,1.253,108,2.614,147,0.869,260,1.784,1106,6.888,1291,6.888,1515,7.21,1529,6.169,1735,6.888,2019,6.19,2244,7.613,2245,7.613,2246,7.613,2247,7.613]],["t/702",[2,0.849,66,3.352,74,1.523,83,3.225,86,3.287,92,2.882,93,1.959,112,4.83,114,3.853,147,0.991,250,1.78,350,2.585,445,3.996,478,2.711,564,4.209,667,5.743,828,6.359,948,7.44,1408,6.246,1552,6.47,1651,7.44,1731,7.968,1773,7.294,1797,5.445,1809,7.44,2087,6.246,2152,6.049,2153,7.556,2156,6.732,2158,5.575,2159,7.046,2235,7.968,2248,8.769]],["t/704",[1,5.162,8,0.93,37,1.421,52,0.674,54,3.939,76,0.911,79,1.126,84,3.043,92,2.792,97,2.746,132,1.22,138,2.431,139,1.978,143,1.076,147,1.064,163,5.421,169,3.742,187,2.612,200,2.344,259,5.048,268,3.806,285,2.412,302,4.224,315,3.117,490,4.579,544,4.427,546,5.373,830,6.648,898,5.669,924,6.382,1299,5.921,1372,4.501,1380,6.68,1425,4.466,1806,7.554,2004,6.648,2249,6.382]],["t/706",[2,0.966,8,1.233,13,3.953,14,1.842,31,5.069,37,1.336,39,4.082,52,0.533,72,2.869,74,1.733,76,0.695,79,0.891,86,3.145,105,1.393,119,2.01,133,1.147,139,2.374,143,1.012,147,1.031,150,3.339,153,2.725,167,2.139,172,3.446,178,1.457,204,4.327,207,2.01,242,2.946,255,3.409,258,2.869,486,2.795,501,4.188,503,3.871,509,3.483,546,4.542,679,3.954,922,4.026,1013,4.082,1142,4.395,1179,4.395,1407,5.47]],["t/708",[8,1.047,13,3.285,204,4.824,207,2.241,486,3.116,501,3.926]],["t/710",[8,0.927,10,7.029,17,3.729,84,3.365,100,4.304,105,1.157,108,2.086,110,2.132,114,4.654,132,0.92,147,1.062,155,1.049,163,5.402,165,3.23,172,4.067,182,3.018,190,7.527,238,3.823,240,4.563,273,5.55,448,6.012,479,3.478,564,3.976,593,5.9,648,7.029,685,5.267,717,5.715,830,7.71,838,5.9,862,4.273,863,5.715,924,6.359,982,4.485,1075,5.108,1359,4.825,1372,5.361,1376,8.997,1448,7.527,1578,6.359,1602,5.402,2004,5.55,2250,8.284,2251,7.527,2252,8.284,2253,5.9,2254,8.997,2255,6.657,2256,8.284]],["t/712",[0,2.487,9,8.533,14,1.402,17,3.418,39,3.695,52,0.718,53,3.188,56,3.119,74,1.319,77,1.832,80,4.144,84,2.88,93,1.696,100,4.329,101,3.596,105,1.312,108,2.568,111,1.999,119,1.819,132,0.843,151,3.422,155,1.349,163,6.124,165,2.961,177,3.376,182,2.767,187,3.347,195,1.337,200,1.794,206,3.801,258,2.597,389,2.153,424,2.137,474,4.127,548,5.087,577,3.858,585,5.829,605,6.689,609,4.715,734,7.523,830,6.831,855,3.695,960,6.479,1205,6.899,1317,6.899,1329,6.899,1347,8.651,1358,6.689,1372,4.111,1383,5.408,1425,4.795,1461,9.947,1593,6.101,1602,4.951,1755,5.408,1807,6.689,1964,6.899,2004,7.763,2249,5.829,2254,6.899,2257,7.593,2258,7.593,2259,7.593,2260,9.391,2261,7.593,2262,8.533,2263,7.593]],["t/714",[37,1.05,52,0.657,64,4.658,66,4.117,69,3.66,74,1.361,77,1.891,95,3.527,100,3.891,108,2.412,113,8.125,128,3.663,132,1.149,147,0.759,151,2.855,163,7.42,182,2.855,187,3.249,195,1.897,203,5.11,214,6.297,215,4.317,227,4.477,250,1.59,260,1.558,272,5.782,285,2.274,314,3.527,474,4.208,499,7.12,557,4.564,564,3.761,592,4.042,619,5.25,725,4.866,734,5.782,766,5.11,830,6.415,898,4.477,1075,4.939,1349,4.866,1383,5.581,1415,5.334,1425,4.31,1525,8.735,1983,7.947,2004,7.529,2160,6.649,2249,6.016,2262,7.12,2264,7.938,2265,7.694,2266,7.351,2267,6.649,2268,7.12,2269,7.12]],["t/716",[2,0.828,8,1.065,19,4.667,50,3.234,52,0.738,53,3.59,55,3.329,65,1.234,66,2.505,74,1.486,76,0.789,77,1.581,79,1.191,84,2.623,100,2.663,101,4.05,102,5.031,104,1.627,108,1.651,111,1.395,120,5.31,139,1.559,143,0.868,147,0.828,155,1.452,159,1.5,163,7.13,173,1.873,174,1.286,178,1.654,179,1.978,180,3.07,183,1.902,184,2.501,187,3.436,188,2.059,189,1.994,224,2.388,242,3.004,250,1.33,260,1.701,268,2.222,274,2.88,278,3.145,290,5.031,293,2.846,304,2.17,305,3.979,310,4.667,379,1.699,486,2.183,487,5.266,551,3.329,766,4.273,898,3.744,1139,6.31,1229,3.675,1371,3.744,1383,7.788,1415,3.38,1425,4.542,1513,5.031,1525,7.309,1827,5.031,1983,4.835,2004,6.378,2154,5.266,2155,5.955,2161,5.955,2162,5.955,2163,5.955,2249,6.565,2264,5.031,2265,5.266,2266,6.565,2267,5.56,2270,8.412,2271,8.412]],["t/718",[0,0.356,2,0.706,8,0.45,14,1.058,27,3.014,28,1.016,29,2.784,35,1.244,36,1.244,37,1.105,45,0.75,50,0.537,51,0.66,52,0.664,61,1.861,65,1.66,67,1.155,74,0.189,76,0.826,79,1.112,84,0.85,93,2.094,100,0.442,104,2.233,105,1.268,108,1.253,110,2.315,111,1.508,119,1.585,132,1.008,133,0.149,135,1.536,137,0.858,141,1.836,143,0.203,147,0.268,155,1.028,159,1.393,160,1.594,163,6.237,167,1.928,171,0.691,173,0.571,174,1.125,178,1.664,179,0.603,180,1.222,182,0.396,183,0.316,184,0.584,187,3.041,188,0.342,189,0.331,195,0.488,200,1.949,207,1.977,222,1.71,224,0.728,225,0.613,243,2.843,250,1.675,251,0.502,260,2.066,268,0.369,274,0.478,275,0.874,276,0.522,285,2.27,304,1.262,319,0.437,321,2.561,322,1.218,323,1.151,324,1.824,325,1.466,326,2.95,327,2.714,328,2.714,329,2.714,330,2.714,331,2.682,332,2.136,333,2.009,334,1.411,335,2.376,336,2.155,337,2.322,338,2.34,339,2.322,340,1.411,341,2.411,342,2.322,343,1.411,344,2.383,345,2.531,346,2.55,347,2.55,348,2.34,349,1.421,350,1.95,351,2.236,352,1.219,353,2.04,354,2.508,355,1.96,356,1.443,357,1.4,358,2.009,359,1.379,360,1.934,361,2.215,362,1.443,363,1.455,364,1.4,365,1.421,366,2.395,367,2.395,368,2.305,369,1.605,370,1.629,371,1.57,372,1.443,373,1.979,374,1.219,375,2.056,376,1.466,377,2.597,378,1.744,379,2.068,380,1.23,381,1.421,382,1.421,383,1.421,384,1.411,385,1.421,386,1.421,387,1.421,388,1.837,389,1.411,390,2.12,391,1.421,392,1.421,393,1.432,394,1.421,395,1.23,396,2.367,397,1.922,398,1.411,399,1.421,400,1.421,401,1.421,402,1.432,403,1.432,404,1.421,405,1.432,406,1.432,407,1.443,408,1.338,409,1.421,410,1.421,411,1.23,412,1.731,413,1.208,414,1.208,415,1.379,416,1.197,420,1.758,421,1.23,422,1.949,423,1.389,424,1.4,425,2.072,426,1.358,427,1.421,428,1.23,429,1.949,430,1.379,431,1.309,432,1.379,433,1.348,435,1.049,436,1.241,444,1.854,445,0.495,526,0.589,532,0.442,542,0.923,658,0.992,667,0.61,760,0.412,830,0.729,862,0.561,922,0.522,1118,0.66,1152,1.02,1153,1.02,1157,1.02,1158,1.02,1159,2.109,1160,1.02,1161,1.01,1162,1.02,1163,1.092,1164,1.02,1165,1.02,1197,0.515,1214,0.75,1222,1.339,1224,1.808,1227,1.339,1229,1.121,1239,1.27,1285,0.646,1291,0.835,1337,0.75,1359,0.633,1371,0.621,1383,5.571,1403,0.675,1415,2.566,1416,1.453,1421,0.66,1425,2.858,1503,0.774,1506,0.802,1525,6.903,1602,0.709,1983,3.67,1984,2.228,1985,0.874,2004,3.032,2183,0.75,2240,0.923,2242,0.923,2249,3.084,2264,5.439,2265,4.319,2266,5.267,2270,7.294,2271,4.319,2272,8.767,2273,0.923,2274,5.614,2275,0.988,2276,1.087,2277,3.65,2278,2.352,2279,3.438,2280,5.21,2281,1.087,2282,0.988,2283,1.087,2284,4.017,2285,1.998,2286,6.617,2287,1.087,2288,2.772,2289,1.087,2290,1.087,2291,1.087,2292,1.087,2293,0.988,2294,2.519,2295,1.087,2296,0.988,2297,1.087,2298,1.087,2299,0.988,2300,1.087,2301,1.087,2302,1.087,2303,0.988,2304,1.087]],["t/720",[2,0.703,8,0.503,14,0.83,27,2.967,28,0.918,29,2.734,35,1.124,36,1.124,37,1.044,52,0.679,61,1.489,64,2.672,65,1.829,67,1.511,76,0.775,77,0.663,79,1.158,80,1.117,86,1.685,93,1.917,101,1.302,104,2.13,105,1.198,108,1.132,110,2.208,111,1.402,119,1.867,132,0.953,135,2.074,141,1.658,143,0.456,147,0.552,155,1.156,159,1.418,160,1.481,163,4.294,167,1.839,173,0.786,174,1.118,178,1.664,179,0.83,180,2.003,182,1.002,183,0.798,184,1.314,187,3.339,188,0.864,189,0.836,195,0.484,200,1.841,207,1.97,222,1.589,240,1.515,243,2.779,250,1.581,260,2.01,302,1.397,304,1.14,315,1.685,316,1.593,317,2.137,320,1.685,321,2.55,322,1.1,323,1.04,324,1.695,325,1.325,326,2.861,327,2.589,328,2.589,329,2.589,330,2.589,331,2.622,332,2.128,333,1.867,334,1.275,335,2.244,336,2.035,337,2.193,338,2.21,339,2.193,340,1.275,341,2.317,342,2.193,343,1.275,344,2.274,345,2.414,346,2.433,347,2.433,348,2.21,349,1.284,350,2.424,351,2.112,352,1.593,353,1.896,354,2.47,355,1.284,356,1.304,357,1.265,358,1.867,359,1.246,360,1.798,361,2.006,362,1.304,363,1.314,364,1.265,365,1.284,366,2.261,367,2.261,368,2.176,369,1.191,370,1.209,371,1.165,372,1.304,373,1.839,374,1.593,375,1.911,376,1.325,377,2.433,378,1.294,379,2.302,380,1.608,381,1.284,382,1.284,383,1.284,384,1.275,385,1.284,386,1.284,387,1.284,388,1.707,389,1.275,390,2.112,391,1.284,392,1.284,393,1.294,394,1.284,395,1.608,396,2.787,397,2.355,398,1.275,399,1.284,400,1.284,401,1.284,402,1.294,403,1.294,404,1.284,405,1.294,406,1.294,407,1.304,408,1.209,409,1.284,410,1.284,411,1.608,412,1.284,413,1.579,414,1.579,415,1.246,416,1.565,420,1.304,421,1.608,422,1.811,423,1.255,424,1.265,425,1.926,426,1.227,427,1.284,428,1.608,429,1.811,430,1.246,431,1.183,432,1.246,433,1.218,435,1.041,436,1.623,444,3.35,445,2.598,449,1.748,490,1.515,546,1.489,880,1.748,1149,2.209,1197,1.302,1224,2.931,1237,2.111,1239,3.625,1383,6.11,1610,1.958,1725,2.029,1755,1.958,2264,6.815,2266,5.982,2270,7.803,2271,6.608,2272,9.121,2274,7.749,2278,3.814,2280,4.084,2305,2.749,2306,4.495,2307,4.495,2308,2.749]],["t/722",[0,0.537,2,0.707,8,0.098,14,0.865,27,2.987,28,0.958,29,2.755,32,0.904,35,1.172,36,1.172,37,1.069,39,0.428,46,0.484,52,0.665,54,0.326,65,1.202,66,1.646,67,0.551,69,0.336,74,0.401,76,0.783,79,1.199,83,1.584,86,1.615,93,2.099,95,0.396,104,2.173,105,1.222,108,1.181,110,2.253,111,1.699,113,5.012,119,0.931,122,0.704,132,0.972,133,0.396,135,0.827,138,0.48,141,1.71,142,1.433,143,0.294,147,0.376,151,0.32,155,1.264,159,1.419,160,1.527,163,6.226,166,0.276,167,1.991,168,0.317,171,0.559,173,0.659,174,1.107,175,3.392,178,1.664,179,0.874,180,1.872,182,0.598,183,0.255,184,0.48,187,2.508,188,0.276,189,0.267,195,0.51,200,1.886,207,1.913,217,0.434,222,1.638,224,0.32,225,0.27,242,0.309,243,2.806,250,1.62,260,2.039,262,1.433,268,0.982,271,0.32,272,2.136,274,1.014,285,2.771,294,6.169,302,2.188,304,1.189,315,1.281,316,1.026,317,1.281,321,1.201,322,1.147,323,1.084,324,1.748,325,1.382,326,2.898,327,2.641,328,2.641,329,2.641,330,2.641,331,2.647,332,1.951,333,1.925,334,1.329,335,2.298,336,2.085,337,2.246,338,2.263,339,2.246,340,1.329,341,2.356,342,2.246,343,1.329,344,2.319,345,2.463,346,2.481,347,2.481,348,2.263,349,1.34,350,1.269,351,2.163,352,0.582,353,1.955,354,2.362,355,2.131,356,1.36,357,1.319,358,1.925,359,1.299,360,1.854,361,2.21,362,1.36,363,1.371,364,1.319,365,1.34,366,2.316,367,2.316,368,2.229,369,1.691,370,1.716,371,1.654,372,1.36,373,1.896,374,0.582,375,1.97,376,1.382,377,2.564,378,1.837,379,1.654,380,0.587,381,1.34,382,1.34,383,1.34,384,1.329,385,1.34,386,1.34,387,1.34,388,1.76,389,1.428,390,1.936,391,1.34,392,1.34,393,1.35,394,1.34,395,0.587,396,1.39,397,1.036,398,1.329,399,1.34,400,1.34,401,1.34,402,1.35,403,1.35,404,1.34,405,1.35,406,1.35,407,1.36,408,1.261,409,1.34,410,1.34,411,0.587,412,1.823,413,0.576,414,0.576,415,1.299,416,0.571,418,1.371,420,1.852,421,0.587,422,1.868,423,1.309,424,1.319,425,1.986,426,1.28,427,1.34,428,0.587,429,1.868,430,1.299,431,1.233,432,1.299,433,1.271,435,0.333,436,0.592,438,0.606,444,1.577,445,1.051,474,1.014,478,0.272,479,0.369,509,3.856,530,3.106,532,0.667,547,0.626,564,0.422,658,1.39,690,0.386,692,0.706,760,0.333,766,2.534,880,0.559,1017,0.484,1066,0.546,1152,1.429,1153,1.429,1157,1.429,1158,1.429,1159,2.628,1160,1.429,1161,1.416,1162,1.429,1163,1.531,1164,1.429,1165,1.429,1173,0.468,1197,0.416,1239,3.201,1318,2.624,1342,0.606,1346,0.606,1347,1.392,1371,0.502,1383,4.545,1393,0.589,1403,1.433,1415,1.763,1416,0.86,1421,0.534,1447,1.392,1457,0.626,1503,0.626,1506,0.649,1525,2.223,1610,0.626,1725,2.522,1755,0.626,1891,2.867,1900,2.768,1983,3.714,1984,2.327,1985,1.319,2004,5.497,2070,3.123,2183,0.606,2240,1.392,2242,1.392,2264,5.353,2265,0.706,2266,5.486,2267,0.746,2268,4.26,2269,4.26,2270,5.298,2271,4.944,2272,6.563,2274,1.392,2275,0.799,2277,2.097,2278,0.746,2282,0.799,2293,0.799,2294,5.367,2296,0.799,2299,2.097,2303,0.799,2309,0.879,2310,8.404,2311,6.592,2312,3.886,2313,6.789,2314,2.307,2315,2.895,2316,2.307,2317,2.307,2318,2.307,2319,2.307,2320,3.418,2321,2.307,2322,2.895,2323,0.879,2324,2.307,2325,2.307,2326,2.895,2327,2.307,2328,2.307,2329,2.895,2330,1.641,2331,1.641,2332,0.879,2333,1.641,2334,0.879,2335,0.879,2336,0.879,2337,0.879,2338,0.746,2339,0.879,2340,0.879]],["t/724",[2,1.088,3,6.86,4,6.86,8,1.258,13,3.493,15,6.704,16,6.405,17,3.755,37,1.118,43,5.181,65,1.572,77,2.013,79,0.886,84,2.559,100,3.391,105,1.165,114,3.666,118,7.581,132,0.927,139,2.366,147,1.028,192,4.117,238,3.85,260,1.659,501,4.175,605,5.942,830,7.37,902,5.756,924,7.634,940,5.942,1106,6.405,1301,5.441,1372,5.384,1380,7.991,1515,6.704,1529,5.911,1735,6.405,2019,5.756,2244,7.079,2245,7.079,2246,7.079,2247,7.079,2341,8.343,2342,8.343]],["t/726",[2,0.854,37,1.376,52,0.56,71,4.621,83,3.779,84,2.704,86,3.306,133,1.405,143,1.042,147,0.995,151,3.213,163,5.751,167,2.202,177,3.922,225,2.704,350,3.028,445,4.682,478,2.726,564,4.931,667,4.945,830,6.884,1017,4.858,1216,5.751,1447,7.483,2004,5.908,2338,7.483]],["t/728",[0,2.718,2,0.803,8,0.929,28,1.696,39,4.038,47,5.036,52,0.527,54,3.081,57,4.419,58,2.565,65,1.563,74,1.908,75,3.829,76,0.688,90,1.947,98,5.56,111,1.767,132,1.177,133,1.135,134,2.525,135,2.371,147,0.803,149,4.654,156,6.371,165,3.865,197,6.371,206,4.154,250,1.684,271,3.612,272,6.123,284,5.411,319,3.337,368,2.318,466,5.774,468,5.194,475,4.493,577,4.216,685,5.276,689,7.06,838,5.911,902,5.725,995,7.54,1077,6.303,1214,5.725,1358,5.911,1365,6.838,1366,6.668,1403,5.153,1688,5.153,1703,6.668,2019,5.725,2085,7.54,2086,5.911,2087,5.911,2088,6.123,2343,8.298]],["t/730",[8,1.049,13,3.291,153,3.044,195,1.65,503,4.324]],["t/732",[2,0.94,8,1.087,14,1.482,37,1.301,47,4.078,52,0.69,53,3.369,54,3.607,55,4.078,56,3.297,65,1.968,76,0.948,77,1.937,79,1.032,83,2.952,92,2.259,95,3.613,97,2.651,105,1.459,119,1.923,124,3.228,133,1.429,134,2.442,137,3.446,138,2.841,139,2.311,143,1.146,144,3.333,147,1.051,155,1.323,158,3.194,159,1.444,166,3.053,168,2.897,178,1.329,207,1.923,216,4.675,250,1.629,260,1.596,293,3.486,319,4.202,320,3.009,437,4.421,466,4.675,467,3.446,468,4.205,503,3.704,577,4.936,679,3.607]],["t/734",[2,0.671,14,1.575,27,2.743,28,0.613,29,2.503,35,0.751,36,0.751,37,0.811,52,0.667,56,1.233,65,1.978,74,0.522,76,0.877,79,1.177,93,1.982,97,0.992,104,1.721,105,1.061,108,0.756,110,1.785,111,1.028,114,3.898,132,0.77,133,0.411,141,1.216,143,0.305,147,0.586,150,1.195,153,0.975,155,1.258,159,1.453,160,1.086,167,1.486,173,0.858,174,0.947,175,2.775,178,1.664,179,1.827,180,2.109,183,0.871,184,1.412,188,0.943,189,0.913,195,1.066,200,1.43,205,2.412,207,1.45,222,1.165,226,1.027,238,1.385,243,2.49,244,1.792,250,1.407,260,1.764,264,2.902,271,1.094,272,2.215,285,2.355,304,0.762,315,1.125,316,1.064,317,2.848,322,0.735,323,1.116,324,1.242,325,0.885,326,2.475,327,2.093,328,2.093,329,2.093,330,2.093,331,2.349,332,1.318,333,1.369,334,0.851,335,1.743,336,1.581,337,1.703,338,1.716,339,1.703,340,0.851,341,1.927,342,1.703,343,0.851,344,1.838,345,1.951,346,1.966,347,1.966,348,1.716,349,0.858,351,1.64,353,1.39,354,1.743,355,1.73,356,0.871,357,0.845,358,1.369,359,0.832,360,1.318,361,1.785,362,0.871,363,0.878,364,0.845,365,0.858,366,1.756,367,1.756,368,1.69,369,1.279,370,1.298,371,1.251,372,0.871,373,1.348,375,1.401,376,0.885,377,2.419,378,1.39,379,0.778,381,0.858,382,0.858,383,0.858,384,0.851,385,0.858,386,0.858,387,0.858,388,1.251,389,0.851,390,1.308,391,0.858,392,0.858,393,0.864,394,0.858,398,0.851,399,0.858,400,0.858,401,0.858,402,0.864,403,0.864,404,0.858,405,0.864,406,0.864,407,0.871,408,0.808,409,0.858,410,0.858,412,1.379,415,0.832,417,1.233,420,1.401,422,1.328,423,0.838,424,0.845,425,1.412,426,0.82,427,0.858,429,1.328,430,0.832,431,0.79,432,0.832,433,0.814,465,1.481,486,1,506,1.683,512,2.57,513,2.529,532,1.22,551,1.525,658,1.074,682,2.011,685,3.069,923,2.547,1066,3.758,1075,1.549,1152,1.104,1153,1.104,1154,1.481,1157,1.104,1158,1.104,1159,2.226,1160,1.104,1161,1.094,1162,1.104,1163,1.183,1164,1.104,1165,1.104,1170,5.704,1309,7.243,1364,6.658,1533,2.215,1569,4.121,1595,8.002,1688,7.138,1703,2.412,1733,7.695,2086,2.138,2087,3.438,2088,3.561,2344,4.826,2345,4.826,2346,4.826,2347,6.053,2348,7.371,2349,8.432,2350,6.885,2351,10.222,2352,3.002,2353,2.728,2354,2.728,2355,2.728,2356,5.883,2357,4.095,2358,7.373,2359,3.705,2360,2.547,2361,4.095,2362,2.728,2363,2.728,2364,5.5,2365,2.728,2366,2.728,2367,2.728,2368,2.547,2369,2.547,2370,2.547,2371,2.728,2372,4.386,2373,2.728,2374,2.728,2375,2.728,2376,2.728,2377,2.305,2378,2.728,2379,2.728,2380,2.728,2381,2.728,2382,2.728,2383,3.002,2384,2.547,2385,2.547,2386,2.728,2387,2.728,2388,4.386,2389,2.728,2390,2.728,2391,2.728,2392,2.728,2393,2.728]],["t/736",[66,4.289,153,2.881,264,4.085,564,4.257,685,7.133,1170,6.812,1371,5.067,1733,6.119,2086,7.342,2355,10.194,2394,8.758,2395,10.308,2396,8.869]],["t/738",[2,0.842,46,4.794,65,1.639,66,3.897,79,0.924,97,2.875,114,3.824,132,0.967,133,1.395,143,0.883,145,4.177,146,6.681,147,0.842,149,4.88,150,3.464,224,3.171,260,1.731,344,2.307,466,5.939,468,4.56,495,5.675,501,3.654,516,5.831,532,3.537,604,5.284,795,6.994,1023,6.199,1077,5.534,1170,6.19,1307,6.994,1364,5.831,1365,6.004,1408,6.199,1688,6.714,1733,6.004,2120,6.994,2121,6.681]],["t/740",[2,0.739,8,0.212,14,0.957,27,3.032,28,1.059,29,2.803,35,1.296,36,1.296,37,1.13,46,1.808,52,0.599,61,1.025,65,1.818,66,2.455,67,1.46,76,0.781,79,1.001,93,2.077,97,1.084,99,1.721,104,2.274,105,1.299,108,1.305,110,2.357,111,1.553,114,3.205,119,1.83,132,1.033,133,0.259,135,1.835,141,1.837,143,0.192,147,0.183,155,0.656,159,1.361,160,1.641,167,1.963,174,1.017,178,1.662,192,0.935,195,0.333,200,2.043,207,2.022,222,1.76,240,1.043,243,2.868,244,2.176,250,1.713,260,2.088,264,1.174,285,1.863,304,1.315,321,2.789,322,1.268,323,1.199,324,1.877,325,1.527,326,2.985,327,2.764,328,2.764,329,2.764,330,2.764,331,2.705,332,2.24,333,2.068,334,1.47,335,2.43,336,2.204,337,2.375,338,2.393,339,2.375,340,1.47,341,2.449,342,2.375,343,1.47,344,2.428,345,2.577,346,2.597,347,2.597,348,2.393,349,1.481,350,2.252,351,2.287,352,1.54,353,2.1,354,2.593,355,1.835,356,1.504,357,1.458,358,2.068,359,1.436,360,1.991,361,2.226,362,1.504,363,1.516,364,1.458,365,1.481,366,2.449,367,2.449,368,2.357,369,1.553,370,1.577,371,1.52,372,1.504,373,2.037,374,1.54,375,2.116,376,1.527,377,2.597,378,1.688,379,2.242,380,1.554,381,1.481,382,1.481,383,1.481,384,1.47,385,1.481,386,1.481,387,1.481,388,1.891,389,1.47,390,2.224,391,1.481,392,1.481,393,1.492,394,1.481,395,1.554,396,2.732,397,2.297,398,1.47,399,1.481,400,1.481,401,1.481,402,1.492,403,1.492,404,1.481,405,1.492,406,1.492,407,1.504,408,1.394,409,1.481,410,1.481,411,1.554,412,1.675,413,1.526,414,1.526,415,1.436,416,1.512,417,0.778,420,1.701,421,1.554,422,2.006,423,1.447,424,1.458,425,2.133,426,1.415,427,1.481,428,1.554,429,2.006,430,1.436,431,1.364,432,1.436,433,1.405,435,1.242,436,1.568,444,2.705,479,0.795,502,1.235,526,1.025,532,0.77,658,0.677,1152,0.697,1153,0.697,1157,0.697,1158,0.697,1159,1.598,1160,0.697,1161,0.69,1162,0.697,1163,0.746,1164,0.697,1165,0.697,1170,3.559,1197,0.897,1292,1.454,1307,1.522,1364,2.199,1374,1.397,1408,2.338,1569,5.353,1595,6.054,1610,1.349,1688,5.24,1733,5.032,2087,1.349,2088,1.397,2123,3.205,2348,2.52,2350,1.607,2357,4.973,2359,7.138,2360,1.607,2368,1.607,2370,1.607,2377,3.335,2384,1.607,2397,1.721,2398,1.894,2399,1.894,2400,6.421,2401,5.861,2402,6.892,2403,3.282,2404,1.894,2405,1.894,2406,3.282,2407,1.894,2408,1.894,2409,1.894,2410,1.894,2411,1.894]],["t/742",[2,0.751,14,0.781,27,2.937,28,0.865,29,2.703,35,1.058,36,1.058,37,1.008,52,0.682,54,0.53,61,0.772,65,1.501,66,2.071,67,0.859,71,0.747,74,0.444,76,0.846,77,0.344,79,1.155,83,0.94,86,1.302,93,2.064,95,0.642,104,2.069,105,1.261,108,1.066,110,2.145,111,1.341,117,1.095,119,1.509,132,0.926,133,0.579,135,1.209,138,1.425,141,1.587,143,0.352,145,0.684,146,1.095,147,0.336,149,2.374,150,0.568,153,0.463,155,1.204,159,1.437,160,1.417,166,1.33,167,1.786,173,1.209,174,1.236,175,1.853,178,1.664,179,1.277,180,1.791,181,1.82,191,1.21,195,0.45,200,1.777,207,1.803,210,0.627,222,1.52,243,2.739,244,2.473,250,1.527,260,1.999,264,3.229,268,0.866,285,2.183,304,1.074,315,0.535,316,1.231,317,2.361,321,1.711,322,1.036,323,0.979,324,1.621,325,1.248,326,2.806,327,2.515,328,2.515,329,2.515,330,2.515,331,2.584,332,1.906,333,1.786,334,1.2,335,2.166,336,1.965,337,2.117,338,2.133,339,2.117,340,1.2,341,2.26,342,2.117,343,1.2,344,2.251,345,2.345,346,2.363,347,2.363,348,2.133,349,1.209,350,1.597,351,2.039,352,0.906,353,1.814,354,2.294,355,1.8,356,1.228,357,1.191,358,1.786,359,1.173,360,1.72,361,2.05,362,1.228,363,1.238,364,1.191,365,1.209,366,2.183,367,2.183,368,2.101,369,1.436,370,1.457,371,1.405,372,1.228,373,1.759,374,0.906,375,1.828,376,1.248,377,2.49,378,1.56,379,1.884,380,0.914,381,1.209,382,1.209,383,1.209,384,1.2,385,1.209,386,1.209,387,1.209,388,1.633,389,1.2,390,1.892,391,1.209,392,1.209,393,1.219,394,1.209,395,0.914,396,1.938,397,1.514,398,1.2,399,1.209,400,1.209,401,1.209,402,1.219,403,1.219,404,1.209,405,1.219,406,1.219,407,1.228,408,1.139,409,1.209,410,1.209,411,0.914,412,1.548,413,0.898,414,0.898,415,1.173,416,0.89,417,1.427,420,1.572,421,0.914,422,1.733,423,1.182,424,1.191,425,1.842,426,1.156,427,1.209,428,0.914,429,1.733,430,1.173,431,1.114,432,1.173,433,1.147,435,0.54,436,0.923,438,0.984,444,2.248,465,1.261,466,0.831,467,3.578,468,1.82,478,2.158,479,1.073,506,0.8,512,2.254,513,2.218,532,1.039,540,0.885,541,1.052,551,0.725,575,1.433,598,1.408,658,0.914,685,4.62,760,0.968,790,1.095,898,0.815,917,1.146,1068,1.296,1077,6.355,1152,0.94,1153,0.94,1154,1.261,1157,0.94,1158,0.94,1159,1.993,1160,0.94,1161,0.931,1162,0.94,1163,1.007,1164,0.94,1165,0.94,1169,0.93,1170,2.57,1197,0.675,1219,1.296,1285,0.848,1331,0.93,1337,0.984,1341,1.962,1364,3.945,1365,6.145,1393,0.955,1394,3.249,1529,0.848,1569,4.472,1595,7.286,1688,3.656,1733,6.855,1750,5.578,2086,3.47,2087,5.935,2088,5.551,2121,1.095,2123,1.886,2134,2.322,2348,5.359,2349,6.921,2356,4.597,2359,5.359,2361,2.947,2369,2.947,2377,1.962,2385,2.947,2394,6.555,2397,1.296,2412,5.062,2413,6.945,2414,6.165,2415,5.651,2416,4.597,2417,4.996,2418,1.426,2419,1.426,2420,1.426,2421,1.426,2422,1.426,2423,4.427,2424,2.322,2425,5.923,2426,3.591,2427,4.427,2428,5.923,2429,5.923,2430,1.296,2431,2.322,2432,2.169,2433,2.169,2434,1.296,2435,1.296,2436,2.322,2437,1.296,2438,1.296,2439,1.296,2440,1.426,2441,1.296,2442,1.296,2443,1.296,2444,1.296,2445,2.322,2446,1.296,2447,1.296,2448,1.296,2449,2.322,2450,1.296,2451,1.296,2452,1.296,2453,1.296,2454,2.322,2455,1.296,2456,1.296]],["t/744",[2,0.714,8,0.729,13,0.682,14,0.817,23,1.56,27,2.959,28,1.077,29,2.726,35,1.107,36,1.107,37,1.035,50,0.958,52,0.697,56,0.797,64,1.154,65,1.764,67,1.127,76,0.857,77,0.809,79,1.12,83,0.714,93,2.061,97,0.641,101,1.588,104,2.166,105,1.218,108,1.115,110,2.245,111,1.386,116,2.896,119,1.768,132,0.946,133,1.329,134,2.654,135,1.701,137,0.833,138,1.904,141,1.64,142,1.205,143,0.197,144,1.392,148,1.301,149,1.089,150,0.773,155,0.56,159,1.266,160,1.465,167,1.826,174,0.869,178,1.661,182,0.707,191,0.919,192,0.958,195,0.591,200,1.825,207,1.851,208,1.432,210,0.853,222,1.571,243,2.769,244,3.791,250,1.808,260,2.002,264,3.246,271,0.707,284,1.266,285,0.973,304,1.123,314,1.509,319,2.12,320,1.257,321,2.452,322,1.084,323,1.024,324,1.676,325,1.305,326,2.847,327,2.57,328,2.57,329,2.57,330,2.57,331,2.612,332,2.015,333,1.846,334,1.255,335,2.224,336,2.017,337,2.174,338,2.19,339,2.174,340,1.255,341,2.302,342,2.174,343,1.255,344,2.257,345,2.397,346,2.415,347,2.415,348,2.19,349,1.265,350,1.919,351,2.093,352,1.189,353,1.875,354,2.386,355,2.207,356,1.285,357,1.246,358,1.846,359,1.227,360,1.778,361,2.065,362,1.285,363,1.295,364,1.246,365,1.265,366,2.241,367,2.241,368,2.157,369,1.397,370,1.418,371,1.367,372,1.285,373,1.819,374,1.189,375,1.89,376,1.305,377,2.573,378,1.875,379,2.003,380,1.199,381,1.265,382,1.265,383,1.265,384,1.255,385,1.265,386,1.265,387,1.265,388,1.688,389,1.255,390,2,391,1.265,392,1.265,393,1.275,394,1.265,395,1.199,396,2.329,397,1.885,398,1.255,399,1.265,400,1.265,401,1.265,402,1.275,403,1.275,404,1.265,405,1.275,406,1.275,407,1.285,408,1.191,409,1.265,410,1.265,411,1.199,412,1.506,413,1.178,414,1.178,415,1.227,416,1.167,417,2.165,420,1.529,421,1.199,422,1.791,423,1.236,424,1.483,425,1.904,426,1.209,427,1.265,428,1.199,429,1.791,430,1.227,431,1.165,432,1.227,433,1.2,435,1.269,436,1.211,444,2.746,465,1.655,466,1.953,467,2.796,468,2.32,471,1.647,472,1.647,532,0.789,551,3.308,570,1.301,658,0.694,667,1.089,679,1.245,685,5.867,690,1.474,725,1.205,760,0.735,880,1.234,1023,1.383,1077,6.533,1092,1.647,1152,0.714,1153,0.714,1154,3.213,1157,0.714,1158,0.714,1159,1.628,1160,0.714,1161,1.613,1162,0.714,1164,0.714,1165,0.714,1168,1.301,1197,1.588,1198,3.959,1247,1.432,1300,1.764,1341,4.999,1362,2.389,1365,6.46,1454,1.647,1459,1.647,1569,4.769,1638,1.647,1940,4.472,1941,4.472,1946,2.845,2086,1.383,2120,2.695,2123,2.474,2142,1.764,2143,3.047,2144,3.047,2145,4.789,2146,4.789,2147,4.789,2359,6.159,2377,2.574,2394,5.233,2412,2.695,2413,5.931,2425,5.525,2426,5.05,2428,5.525,2429,7.701,2432,2.845,2433,3.756,2449,5.917,2450,4.023,2451,3.047,2452,1.764,2453,3.047,2454,3.047,2455,1.764,2456,1.764,2457,1.941,2458,1.941,2459,3.353,2460,1.941,2461,1.941,2462,1.941,2463,1.941,2464,1.941,2465,3.353,2466,4.427,2467,1.941,2468,1.941,2469,1.941]],["t/746",[2,0.425,14,1.195,27,2.433,28,0.897,29,2.189,35,0.48,36,0.48,37,0.588,52,0.713,65,1.732,69,0.734,76,0.92,79,1.206,84,0.589,93,2.055,104,1.299,105,0.731,108,0.483,110,1.346,111,0.707,114,2.597,132,0.657,133,0.6,134,0.584,141,0.837,143,0.195,145,0.921,147,0.321,155,1.239,159,1.406,160,0.747,167,1.121,173,0.549,174,0.652,175,2.213,178,1.665,179,1.784,180,2.233,183,0.557,184,0.971,188,0.603,189,0.584,200,1.037,206,1.663,207,1.052,212,1.022,222,0.801,238,0.886,243,2.117,244,1.233,250,0.891,260,1.46,264,2.114,285,1.878,304,0.487,315,0.72,316,1.556,317,2.881,322,0.47,323,0.444,324,0.855,325,0.566,326,2.014,327,1.579,328,1.579,329,1.579,330,1.579,331,1.997,332,0.907,333,0.942,334,0.544,335,1.264,336,1.146,337,1.235,338,1.245,339,1.235,340,0.544,341,1.499,342,1.235,343,0.544,344,1.386,345,1.472,346,1.483,347,1.483,348,1.245,349,0.549,351,1.19,353,0.956,354,1.264,355,1.254,356,0.557,357,0.54,358,0.942,359,0.532,360,0.907,361,1.346,362,0.557,363,0.561,364,0.54,365,0.549,366,1.274,367,1.274,368,1.226,369,0.88,370,0.893,371,0.861,372,0.557,373,0.928,375,0.964,376,0.566,377,2.564,378,0.956,379,0.498,381,0.549,382,0.549,383,0.549,384,0.544,385,0.549,386,0.549,387,0.549,388,0.861,389,0.544,390,0.9,391,0.549,392,0.549,393,0.553,394,0.549,398,0.544,399,0.549,400,0.549,401,0.549,402,0.553,403,0.553,404,0.549,405,0.553,406,0.553,407,0.557,408,0.516,409,0.549,410,0.549,412,0.949,415,0.532,417,0.788,420,0.964,422,0.914,423,0.536,424,0.54,425,0.971,426,0.524,427,0.549,429,0.914,430,0.532,431,0.505,432,0.532,433,0.52,437,2.418,465,0.947,466,1.934,467,4.576,479,0.806,512,3.147,513,3.097,575,1.862,658,0.687,752,1.252,849,1.166,877,1.474,916,1.543,986,1.252,1077,5.75,1152,0.706,1153,0.706,1154,0.947,1157,0.706,1158,0.706,1159,1.614,1160,0.706,1161,0.699,1162,0.706,1163,0.756,1164,0.706,1165,0.706,1170,4.214,1173,1.022,1309,6.239,1364,5.683,1365,4.464,1569,3.109,1595,8.618,1688,6.666,1733,7.864,1750,4.537,1937,1.474,2086,4.21,2087,7.721,2088,7.864,2151,1.744,2348,6.332,2349,9.422,2350,5.015,2351,9.473,2353,5.37,2354,5.37,2356,8.218,2357,2.818,2358,5.88,2359,2.55,2360,1.629,2361,6.776,2362,1.744,2363,1.744,2364,3.988,2365,1.744,2366,1.744,2367,1.744,2368,1.629,2369,6.521,2370,1.629,2371,1.744,2372,3.018,2373,1.744,2374,1.744,2375,1.744,2376,1.744,2377,1.474,2378,1.744,2379,1.744,2380,1.744,2381,1.744,2382,1.744,2384,1.629,2385,6.521,2386,1.744,2387,1.744,2388,3.018,2389,1.744,2390,1.744,2391,1.744,2392,1.744,2393,1.744,2394,6.417,2412,4.203,2413,6.176,2414,8.127,2415,5.889,2416,4.438,2417,4.438,2423,7.256,2424,3.018,2425,6.776,2426,2.818,2427,5.37,2428,5.015,2429,5.015,2430,1.744,2431,6.307,2432,1.629,2433,1.629,2434,1.744,2435,1.744,2436,6.307,2437,1.744,2438,1.744,2439,1.744,2441,1.744,2442,1.744,2443,1.744,2444,1.744,2445,6.307,2446,1.744,2447,1.744,2448,1.744,2470,7.985,2471,3.321,2472,7.985,2473,3.321,2474,3.321,2475,7.985,2476,3.321,2477,3.321,2478,1.92,2479,1.92,2480,1.92,2481,1.92,2482,1.92,2483,1.92,2484,1.92,2485,1.92,2486,1.92,2487,1.92,2488,1.92,2489,1.92,2490,1.92,2491,1.92,2492,1.92,2493,1.92,2494,1.92,2495,1.92,2496,1.92,2497,1.92,2498,1.92,2499,1.92]],["t/748",[26,3.465,52,0.728,76,0.914,79,1.244,141,1.183,147,0.774,150,1.869,153,1.526,155,1.459,159,1.661,173,1.342,174,0.921,175,3.314,178,1.672,179,2.924,180,3.222,183,1.363,184,1.988,188,1.476,189,1.429,210,2.064,218,4.128,271,1.711,314,2.114,315,1.761,316,2.832,317,3.91,512,4.949,513,4.87,575,3.813,1077,5.569,1170,4.128,1337,3.24,1364,6.227,1365,6.042,1425,3.597,1569,5.206,1688,6.475,1733,7.4,2089,4.268,2090,6.178,2121,3.606,2348,8.006,2412,7.038,2413,7.038,2414,7.886,2415,7.886,2416,7.432,2417,7.432,2500,4.697,2501,10.428]],["t/750",[0,2.851,2,0.842,8,1.141,28,2.083,37,1.494,47,4.422,52,0.648,53,3.654,54,3.232,55,4.422,65,1.921,74,1.512,76,0.896,79,0.924,92,2.449,132,0.967,139,2.426,143,1.034,147,0.987,153,2.827,169,3.917,182,3.171,195,1.533,207,2.085,216,5.069,260,1.731,293,3.78,448,5.284,577,5.18,1359,5.069]],["t/752",[1,5.582,8,1.226,111,1.914,132,1.154,137,3.86,139,2.139,147,1.061,260,2.066,271,3.275,449,5.716,486,2.995,571,4.637,572,6.775,1075,4.637,1150,6.023,1211,5.716,1372,4.867,1380,7.224,1735,6.901]],["t/754",[8,1.207,13,3.885,14,1.454,26,5.811,31,4.88,37,1.287,41,5.114,47,4.002,52,0.658,72,3.285,74,1.669,76,0.932,79,1.101,105,1.342,132,1.067,137,3.382,138,2.303,139,2.285,143,1.094,147,0.762,150,3.135,153,2.558,165,3.071,167,2.059,169,3.545,172,3.235,178,1.418,182,2.87,187,3.256,204,4.063,207,1.887,216,4.588,226,2.694,242,3.374,258,2.694,260,1.566,268,3.256,276,3.78,302,4.88,486,2.624,501,4.032,503,3.635,523,5.811,679,3.848,690,3.461,898,5.487,922,3.78,1013,3.832,1045,5.346,1179,4.127,1216,6.263,1752,7.443,2502,7.157]],["t/756",[8,1.047,13,3.285,204,4.824,207,2.241,486,3.116,501,3.926]],["t/758",[2,0.796,8,0.92,13,2.889,26,6.069,52,0.671,58,2.543,74,1.713,95,3.702,105,1.377,110,2.117,128,3.845,132,1.095,147,1.06,172,4.05,238,3.795,243,2.18,250,1.669,271,2.997,304,2.087,305,4.994,319,4.403,446,6.609,475,4.453,479,3.453,564,3.948,571,4.243,572,6.886,577,4.179,626,5.858,679,3.661,863,5.674,881,8.078,1045,5.447,1075,5.086,1229,4.612,1235,5.107,1236,6.609,1359,4.791,1372,5.338,1450,6.609,1458,7.474,1578,6.314,1602,5.363,2253,5.858,2503,8.225,2504,8.225,2505,7.569,2506,8.107,2507,8.225]],["t/760",[17,4.841,26,7.465,32,4.732,41,5.589,77,2.441,147,0.832,161,3.455,210,3.775,218,5.216,319,3.455,571,4.431,572,6.598,739,6.595,881,6.338,1045,5.548,1075,4.431,1101,7.806,1103,7.289,1285,5.106,1332,6.595,1335,5.926,1619,8.13,1646,6.903,1661,8.585,2253,6.118,2255,8.13,2505,7.767,2506,6.595,2508,8.585,2509,9.126,2510,8.59,2511,7.806]],["t/762",[8,0.874,17,3.515,41,5.095,52,0.496,64,4.642,74,2.009,95,3.515,132,0.868,145,4.586,147,0.756,165,3.045,187,3.244,195,1.375,218,6.269,260,1.553,264,3.848,319,4.152,445,4.354,516,6.402,564,3.749,739,7.926,881,7.618,1075,4.029,1239,7.139,1285,6.137,1371,4.462,1372,4.228,1403,7.182,1463,5.466,1752,7.123,2158,6.84,2255,6.276,2506,7.926,2509,6.627,2512,9.382,2513,8.683,2514,8.683,2515,9.382,2516,8.683,2517,8.683,2518,9.382,2519,8.683]],["t/765",[41,5.488,52,0.68,58,2.18,79,1.224,133,0.964,137,3.027,138,2.062,143,0.715,145,3.384,147,0.868,155,1.467,159,1.465,161,2.835,165,4.337,173,2.015,174,1.383,178,1.662,179,2.975,180,2.999,183,2.046,184,2.622,187,3.259,188,2.215,189,2.145,192,3.479,217,3.479,225,2.162,250,1.431,258,2.411,320,2.643,323,1.631,478,2.18,486,2.987,504,5.022,506,3.954,532,3.643,605,5.022,863,4.864,1045,5.351,1075,5.085,1150,4.724,1211,4.483,1372,4.854,1403,4.378,1464,4.864,1522,4.598,1752,7.156,2020,7.654,2520,6.407,2521,7.051]],["t/767",[0,0.33,2,0.682,8,0.291,14,0.873,17,3.169,27,2.991,28,0.966,29,2.759,35,1.183,36,1.183,37,1.075,41,5.3,52,0.657,58,0.311,65,1.6,67,1.087,69,0.385,76,0.855,79,1.109,83,0.371,86,0.378,93,2.147,104,2.181,105,1.227,108,1.191,110,2.262,111,1.455,119,1.524,128,0.471,132,1.004,133,0.443,135,1.565,138,0.759,141,1.721,143,0.435,147,0.098,151,0.946,155,0.599,159,1.306,160,1.537,165,3.39,167,1.883,174,0.928,178,1.663,182,0.367,187,2.908,195,0.57,200,1.895,203,0.657,207,1.953,214,0.809,215,0.555,217,0.497,218,2.304,222,1.649,225,0.309,227,0.576,243,2.811,244,2.362,250,1.628,260,2.045,264,1.691,268,0.342,271,0.367,284,0.657,285,2.2,304,1.2,319,2.333,321,2.473,322,1.157,323,1.094,324,1.759,325,1.394,326,2.906,327,2.652,328,2.652,329,2.652,330,2.652,331,2.652,332,2.07,333,1.937,334,1.341,335,2.31,336,2.095,337,2.257,338,2.275,339,2.257,340,1.341,341,2.364,342,2.257,343,1.341,344,2.329,345,2.473,346,2.491,347,2.491,348,2.275,349,1.351,350,1.875,351,2.174,352,1.147,353,1.967,354,2.446,355,1.888,356,1.372,357,1.331,358,1.937,359,1.311,360,1.866,361,2.159,362,1.372,363,1.383,364,1.331,365,1.351,366,2.328,367,2.328,368,2.24,369,1.537,370,1.56,371,1.504,372,1.372,373,1.908,374,1.147,375,1.983,376,1.394,377,2.678,378,1.67,379,2.006,380,1.157,381,1.351,382,1.351,383,1.351,384,1.341,385,1.351,386,1.351,387,1.351,388,1.772,389,1.341,390,2.055,391,1.351,392,1.351,393,1.362,394,1.351,395,1.157,396,2.275,397,1.832,398,1.341,399,1.351,400,1.351,401,1.351,402,1.362,403,1.362,404,1.351,405,1.362,406,1.362,407,1.372,408,1.272,409,1.351,410,1.351,411,1.157,412,1.657,413,1.136,414,1.136,415,1.311,416,1.126,417,1.067,420,1.683,421,1.157,422,1.88,423,1.321,424,1.331,425,1.998,426,1.291,427,1.351,428,1.157,429,1.88,430,1.311,431,1.244,432,1.311,433,1.282,435,0.983,436,1.168,444,1.751,445,0.849,449,0.641,465,0.497,475,0.545,478,0.311,486,0.336,488,0.915,489,0.915,490,0.555,551,0.512,557,0.587,592,0.52,619,0.675,658,0.929,667,0.565,681,0.809,690,0.443,725,0.626,739,2.913,760,0.705,862,0.961,881,4.28,1017,1.026,1045,4.661,1075,0.52,1150,0.675,1152,0.955,1153,0.955,1154,0.497,1157,0.955,1158,0.955,1159,2.015,1160,0.955,1161,0.946,1162,0.955,1163,1.023,1164,0.955,1165,0.955,1197,0.477,1211,0.641,1222,1.74,1224,2.474,1227,1.74,1229,0.565,1285,4.185,1332,0.773,1337,0.695,1349,0.626,1361,0.743,1403,0.626,1463,1.928,1464,6.179,1470,1.184,1473,0.695,1476,0.641,1481,0.695,1610,0.718,1619,0.809,1725,0.743,1752,5.931,2020,5.471,2031,3.639,2036,4.013,2042,3.639,2055,1.326,2078,0.743,2079,0.743,2081,0.743,2158,2.413,2160,0.855,2183,0.695,2255,6.336,2506,4.453,2509,4.922,2511,3.448,2512,5.271,2513,5.271,2514,5.271,2515,5.271,2516,5.271,2517,5.271,2518,5.271,2519,5.271,2522,4.978,2523,5.537,2524,6.093,2525,2.94,2526,5.123,2527,1.692,2528,1.862,2529,2.597,2530,2.597,2531,1.862,2532,3.235,2533,1.007,2534,1.862,2535,2.94,2536,1.862,2537,1.862,2538,2.597,2539,1.007,2540,1.007,2541,1.007,2542,2.597,2543,1.862,2544,1.862,2545,2.597,2546,1.007,2547,5.537,2548,6.832,2549,3.235,2550,1.862,2551,2.597,2552,1.862,2553,1.862,2554,0.915,2555,3.235,2556,1.007,2557,1.862,2558,1.862,2559,1.007,2560,1.007,2561,1.007,2562,1.007,2563,2.597,2564,1.007,2565,1.007,2566,1.007,2567,1.007,2568,1.007,2569,1.862,2570,1.862,2571,1.007,2572,1.007,2573,1.007,2574,1.007,2575,1.007,2576,1.007,2577,1.007,2578,1.007,2579,1.007,2580,1.007,2581,1.007,2582,1.007,2583,1.007,2584,1.007,2585,1.007,2586,1.007,2587,1.007,2588,1.007,2589,1.007,2590,1.007,2591,1.007,2592,1.007]],["t/769",[2,0.71,8,0.653,14,0.749,27,2.915,28,0.829,29,2.68,35,1.014,36,1.014,37,0.982,39,0.453,41,4.502,46,0.513,47,0.473,50,0.855,52,0.68,56,0.383,61,0.938,64,1.443,65,1.776,67,1.363,69,0.356,71,0.488,72,0.319,74,1.923,76,0.837,79,1.214,80,1.234,83,1.492,86,1.52,87,1.392,93,1.847,95,0.419,104,2.128,105,1.197,108,1.021,110,2.156,111,1.4,119,1.896,122,1.535,132,0.918,133,0.758,134,0.283,135,1.743,137,0.744,138,1.046,141,1.599,142,0.579,143,0.849,144,1.485,147,0.614,150,0.966,151,0.34,155,1.337,159,1.476,160,1.372,165,3.086,167,1.893,168,0.336,169,0.78,170,0.643,171,1.101,172,0.997,173,1.492,174,1.331,175,1.039,178,1.665,179,2.107,180,2.408,181,0.664,182,0.631,183,0.881,184,1.425,187,2.401,188,1.124,189,0.924,195,0.714,196,0.749,198,0.847,200,1.77,207,1.757,210,0.409,217,0.46,218,1.474,219,1.278,222,1.472,224,0.885,226,0.319,242,2.309,243,2.71,244,2.985,250,1.488,251,0.799,253,0.579,258,0.319,260,1.951,261,0.715,264,2.68,268,0.587,274,1.335,293,0.752,299,0.715,302,1.817,303,1.33,304,1.48,305,1.844,306,0.791,307,0.791,308,0.791,309,0.664,310,0.664,315,1.341,316,1.437,317,1.958,319,0.976,320,1.341,321,2.383,322,0.993,323,0.938,324,1.57,325,1.195,326,2.781,327,2.462,328,2.462,329,2.462,330,2.462,331,2.557,332,2.002,333,1.73,334,1.15,335,2.112,336,1.915,337,2.064,338,2.079,339,2.064,340,1.15,341,2.219,342,2.064,343,1.15,344,2.162,345,2.295,346,2.313,347,2.313,348,2.079,349,1.159,350,2.252,351,1.987,352,1.437,353,1.757,354,2.349,355,1.159,356,1.177,357,1.141,358,1.73,359,1.124,360,1.666,361,1.888,362,1.177,363,1.186,364,1.141,365,1.159,366,2.128,367,2.128,368,2.048,369,1.075,370,1.091,371,1.051,372,1.177,373,1.704,374,1.437,375,1.77,376,1.195,377,2.313,378,1.168,379,2.144,380,1.451,381,1.159,382,1.159,383,1.159,384,1.15,385,1.159,386,1.159,387,1.159,388,1.582,389,1.15,390,1.987,391,1.159,392,1.159,393,1.168,394,1.159,395,1.451,396,2.623,397,2.182,398,1.15,399,1.159,400,1.159,401,1.159,402,1.168,403,1.168,404,1.159,405,1.168,406,1.168,407,1.177,408,1.091,409,1.159,410,1.159,411,1.451,412,1.159,413,1.424,414,1.424,415,1.124,416,1.412,417,1.248,420,1.177,421,1.451,422,1.678,423,1.133,424,1.141,425,1.784,426,1.107,427,1.282,428,1.451,429,1.678,430,1.124,431,1.067,432,1.124,433,1.099,435,0.919,436,1.464,444,2.557,445,2.38,478,0.75,479,0.391,486,0.31,490,0.513,512,2.781,513,2.736,515,0.791,516,0.624,523,1.278,532,0.704,540,1.076,548,0.624,558,0.643,598,0.513,603,0.554,667,1.361,679,0.346,681,0.749,682,0.624,692,0.749,711,2.76,717,1.195,725,0.579,739,1.864,760,1.977,831,1.195,855,0.843,862,1.252,880,0.592,881,1.791,919,0.847,982,0.938,1017,0.513,1045,4.371,1075,0.481,1141,1.47,1142,0.488,1169,1.583,1197,0.82,1198,1.499,1229,2.274,1239,4.035,1273,0.715,1285,1.443,1288,0.749,1301,0.608,1319,0.847,1337,0.643,1361,0.687,1370,1.234,1372,1.644,1375,0.592,1393,0.624,1403,3.243,1463,2.653,1464,1.195,1520,0.847,1592,0.847,1601,0.791,1610,2.163,1639,0.847,1646,0.749,1673,0.715,1725,0.687,1752,6.504,1794,0.847,1880,1.574,2020,7.035,2021,5.609,2044,3.441,2154,0.749,2158,3.321,2183,0.643,2251,0.847,2502,0.847,2506,1.864,2522,0.847,2523,8.988,2525,3.685,2527,3.685,2535,3.685,2547,6.165,2554,1.574,2593,0.932,2594,3.034,2595,3.037,2596,0.791,2597,0.932,2598,1.732,2599,0.932,2600,1.732,2601,2.428,2602,0.932,2603,0.932,2604,3.037,2605,1.732,2606,0.932,2607,0.932,2608,0.932,2609,0.932,2610,0.932,2611,0.932,2612,0.932,2613,1.732,2614,1.732]],["t/771",[2,0.949,8,1.25,13,2.864,52,0.518,54,3.027,65,1.536,76,0.872,77,2.367,79,0.866,84,2.5,105,1.139,111,1.736,122,3.5,132,1.089,138,2.384,139,1.94,143,1.151,147,1.081,155,1.032,168,2.943,169,3.67,191,3.861,192,4.023,239,4.572,242,3.445,259,4.95,260,1.95,268,3.325,293,3.541,302,4.142,309,5.807,315,3.056,316,2.89,486,2.716,490,4.491,544,4.341,572,5.316,577,4.142,1075,5.059,1106,6.259,1142,5.139,1150,5.462,1198,4.023,1211,5.184,1372,5.31,1403,5.062,1515,6.551,1529,4.846,1539,6.918,1735,6.259,2019,5.624,2244,6.918,2245,6.918,2246,6.918,2247,6.918]],["t/773",[1,4.785,8,1.061,13,2.707,37,1.27,52,0.698,54,3.811,76,0.94,79,1.09,84,2.363,90,1.808,92,2.667,97,2.546,122,3.309,132,1.243,138,2.254,139,1.833,143,1.135,147,1.083,156,5.916,164,6.519,165,4.287,169,4.266,187,2.421,200,2.239,226,2.635,255,3.852,259,4.679,268,3.882,302,5.215,315,2.889,316,2.731,323,1.783,490,4.245,509,3.2,544,4.103,546,5.131,571,4.889,593,5.489,611,4.402,619,6.35,898,6.117,1142,4.966,1299,5.489,1328,5.489,1359,4.489,1372,4.172,1425,4.62,1788,7.002,2505,5.916,2615,5.916]],["t/775",[2,0.792,8,1.223,13,3.926,14,1.51,31,4.994,37,1.317,39,3.981,47,4.157,52,0.52,74,1.708,76,0.906,79,0.869,86,3.067,105,1.373,119,1.96,132,0.909,137,3.513,138,2.393,139,2.338,143,1.109,147,1.02,150,3.256,153,2.657,164,4.765,165,3.833,167,2.107,172,3.361,178,1.441,204,4.22,207,1.96,216,4.765,255,3.325,257,4.674,258,2.798,268,2.774,486,2.726,501,4.126,503,3.775,509,3.397,546,4.43,611,4.674,679,3.912,898,4.674,922,3.927,1013,3.981,1142,4.287,1179,4.287,1407,5.335,1425,4.424]],["t/777",[8,1.047,13,3.285,204,4.824,207,2.241,486,3.116,501,3.926]],["t/779",[8,0.998,77,2.153,84,3.172,110,2.296,132,0.991,147,1.088,170,6.154,172,4.249,238,4.116,479,3.745,564,4.282,571,5.335,863,6.154,1013,4.341,1075,5.335,1359,5.196,1372,5.6,1578,6.848,1600,7.569,1602,5.817,2253,6.354,2505,6.848]],["t/781",[17,3.895,52,0.645,74,1.934,84,3.116,90,2.03,104,2.149,147,0.838,164,6.484,165,4.341,187,3.193,210,3.803,225,2.654,255,3.517,260,1.721,318,7.343,509,3.594,541,7.498,611,4.944,1103,7.343,1108,7.498,1328,7.238,1372,4.686,1425,5.01,2253,6.164,2505,6.644,2508,7.343,2615,6.644,2616,8.654]],["t/783",[17,5.103,52,0.548,164,5.022,187,3.644,195,1.518,255,3.504,257,5.793,260,1.715,264,3.627,509,3.58,534,7.948,611,5.793,1216,7.491,1425,4.848,1463,5.152,1751,6.619,2158,5.482,2617,9.788,2618,6.929,2619,9.214,2620,6.929,2621,7.316]],["t/786",[0,0.356,1,0.675,2,0.706,8,0.449,14,1.058,27,3.014,28,1.016,29,2.784,35,1.244,36,1.244,37,1.105,51,0.66,52,0.68,54,0.404,65,1.739,67,1.521,74,0.189,76,0.793,79,1.103,84,1.232,86,0.749,90,0.255,93,2.046,97,0.359,104,2.232,105,1.279,108,1.253,110,2.315,111,1.593,119,1.747,132,1.008,133,0.149,135,1.73,137,1.19,141,1.836,143,0.203,147,0.438,151,0.728,155,1.203,159,1.454,160,1.594,164,2.339,166,0.628,167,1.927,173,0.982,174,1.246,178,1.665,179,1.037,180,2.013,182,1.01,183,0.804,184,1.323,188,0.871,189,0.843,192,0.536,195,0.352,200,1.949,206,0.544,207,1.977,222,1.709,224,0.728,225,0.613,243,2.843,244,1.847,250,1.675,251,0.502,255,3.91,257,3.78,260,2.066,264,0.715,274,0.878,276,0.522,285,1.92,304,1.262,315,1.506,316,1.424,317,1.506,321,2.851,322,1.217,323,1.15,324,1.823,325,1.466,326,2.95,327,2.714,328,2.714,329,2.714,330,2.714,331,2.682,332,2.177,333,2.009,334,1.41,335,2.376,336,2.155,337,2.322,338,2.34,339,2.322,340,1.41,341,2.411,342,2.322,343,1.41,344,2.383,345,2.53,346,2.55,347,2.55,348,2.34,349,1.421,350,2.149,351,2.236,352,1.424,353,2.04,354,2.537,355,1.814,356,1.443,357,1.4,358,2.009,359,1.379,360,1.934,361,2.187,362,1.443,363,1.455,364,1.4,365,1.421,366,2.394,367,2.394,368,2.304,369,1.519,370,1.542,371,1.486,372,1.443,373,1.978,374,1.424,375,2.056,376,1.466,377,2.55,378,1.651,379,2.172,380,1.437,381,1.421,382,1.421,383,1.421,384,1.41,385,1.421,386,1.421,387,1.421,388,1.837,389,1.41,390,2.161,391,1.421,392,1.421,393,1.432,394,1.421,395,1.437,396,2.608,397,2.166,398,1.41,399,1.421,400,1.421,401,1.421,402,1.432,403,1.432,404,1.421,405,1.432,406,1.432,407,1.443,408,1.338,409,1.421,410,1.421,411,1.437,412,1.638,413,1.411,414,1.411,415,1.379,416,1.398,417,0.821,420,1.664,421,1.437,422,1.949,423,1.389,424,1.512,425,2.072,426,1.358,427,1.421,428,1.437,429,1.949,430,1.379,431,1.309,432,1.379,433,1.348,435,1.301,436,1.45,444,1.853,465,0.536,497,0.922,509,3.478,546,0.589,571,1.031,658,0.715,690,0.478,760,1.049,858,2.043,948,0.922,1108,0.802,1118,0.66,1152,0.735,1153,0.735,1154,0.536,1155,0.802,1157,0.735,1158,0.735,1159,1.664,1160,0.735,1161,0.728,1162,0.735,1163,0.787,1164,0.735,1165,0.735,1197,0.515,1214,0.75,1229,1.12,1230,0.675,1237,0.835,1244,0.988,1314,0.802,1328,3.827,1359,1.164,1371,1.141,1407,0.709,1425,2.419,1463,1.015,1470,5.326,1473,0.75,1476,2.554,1481,0.75,1552,0.802,1891,0.802,1900,1.974,1937,0.835,2070,0.874,2273,1.695,2615,5.079,2622,7.419,2623,1.695,2624,3.997,2625,1.087,2626,1.695,2627,1.087,2628,1.087,2629,1.998,2630,1.998]],["t/788",[0,0.826,2,0.671,8,0.6,13,0.886,14,1.153,17,4.768,27,2.931,28,0.855,29,2.697,35,1.046,36,1.046,37,1.001,52,0.664,65,1.408,67,0.847,72,0.862,73,2.887,76,0.771,79,1.153,83,1.539,84,1.283,93,2.032,104,2.057,105,1.201,108,1.054,110,2.133,111,1.33,119,1.285,132,0.92,133,0.572,135,1.196,141,1.573,143,0.425,147,0.519,151,3.314,155,1.315,159,1.432,160,1.405,165,0.983,167,1.776,173,1.196,174,1.225,178,1.666,179,1.263,180,2.273,183,1.214,184,1.827,187,3.328,188,1.315,189,1.273,195,0.737,200,1.765,206,2.095,207,1.79,222,1.507,224,0.919,225,0.773,227,1.44,243,2.732,250,1.517,251,1.931,255,2.18,257,2.391,260,1.969,276,1.21,285,2.168,304,1.062,315,2.341,316,2.214,317,2.341,321,2.433,322,1.024,323,0.968,324,1.608,325,1.233,326,2.796,327,2.501,328,2.501,329,2.501,330,2.501,331,2.577,332,1.892,333,1.771,334,1.187,335,2.152,336,1.952,337,2.103,338,2.119,339,2.103,340,1.187,341,2.249,342,2.103,343,1.187,344,2.196,345,2.332,346,2.35,347,2.35,348,2.119,349,1.196,350,1.581,351,2.025,352,0.894,353,1.798,354,2.28,355,1.785,356,1.214,357,1.178,358,1.771,359,1.16,360,1.705,361,2.038,362,1.214,363,1.224,364,1.178,365,1.196,366,2.168,367,2.168,368,2.087,369,1.422,370,1.443,371,1.391,372,1.214,373,1.744,374,0.894,375,1.812,376,1.233,377,2.438,378,1.545,379,1.796,380,0.902,381,1.196,382,1.196,383,1.196,384,1.187,385,1.196,386,1.196,387,1.196,388,1.619,389,1.187,390,1.878,391,1.196,392,1.196,393,1.205,394,1.196,395,0.902,396,1.919,397,1.497,398,1.187,399,1.196,400,1.196,401,1.196,402,1.205,403,1.205,404,1.196,405,1.205,406,1.205,407,1.214,408,1.126,409,1.196,410,1.196,411,0.902,412,1.533,413,0.886,414,0.886,415,1.16,416,0.878,420,1.557,421,0.902,422,1.718,423,1.169,424,1.51,425,1.827,426,1.143,427,1.196,428,0.902,429,1.718,430,1.16,431,1.101,432,1.16,433,1.134,435,0.954,436,0.91,478,1.931,481,1.321,509,2.877,517,1.644,571,1.3,622,1.499,658,0.902,760,0.954,1152,0.927,1153,0.927,1157,0.927,1158,0.927,1159,1.973,1160,0.927,1161,0.919,1162,0.927,1163,0.993,1164,0.927,1165,0.927,1171,1.644,1173,1.342,1222,1.689,1224,1.644,1227,1.689,1298,2.026,1328,4.935,1371,2.391,1386,5.322,1419,1.796,1425,4.556,1529,1.499,1850,2.291,1853,3.088,1857,2.291,2055,5.639,2078,1.86,2079,3.088,2081,1.86,2158,4.405,2615,5.319,2617,8.055,2621,5.878,2622,6.658,2623,2.139,2624,3.363,2626,2.139,2631,2.521,2632,3.803,2633,4.185,2634,2.291,2635,2.521,2636,2.291,2637,2.521,2638,2.521,2639,2.291,2640,2.521,2641,2.521,2642,2.521]],["t/790",[0,0.78,2,0.703,14,0.951,17,4.194,27,3.03,28,1.053,29,2.8,35,1.288,36,1.288,37,1.127,51,1.446,52,0.567,65,1.453,67,0.8,69,0.91,70,2.164,74,0.414,76,0.74,79,0.97,83,0.876,84,1.224,93,2.119,104,2.268,105,1.276,108,1.297,110,2.351,111,1.546,119,1.444,122,1.022,132,1.035,133,0.326,135,1.14,141,1.829,143,0.242,151,2.446,155,0.652,159,1.357,160,1.634,164,1.387,167,1.958,174,1.01,178,1.662,187,2.98,192,1.175,195,0.703,200,1.987,206,1.192,207,2.015,222,1.752,225,0.73,242,0.836,243,2.864,250,1.707,260,2.109,271,1.454,285,2.651,304,1.307,316,1.414,321,2.357,322,1.261,323,1.191,324,1.869,325,1.518,326,2.98,327,2.757,328,2.757,329,2.757,330,2.757,331,2.702,332,2.106,333,2.059,334,1.461,335,2.422,336,2.197,337,2.367,338,2.385,339,2.367,340,1.461,341,2.443,342,2.367,343,1.461,344,2.421,345,2.57,346,2.59,347,2.59,348,2.385,349,1.472,350,1.518,351,2.28,352,0.844,353,2.091,354,2.501,355,2.204,356,1.495,357,1.449,358,2.059,359,1.428,360,1.983,361,2.297,362,1.495,363,1.506,364,1.449,365,1.472,366,2.441,367,2.441,368,2.349,369,1.779,370,1.805,371,1.74,372,1.495,373,2.028,374,0.844,375,2.107,376,1.518,377,2.59,378,1.933,379,1.883,380,0.852,381,1.472,382,1.472,383,1.472,384,1.461,385,1.472,386,1.472,387,1.472,388,1.883,389,1.461,390,2.09,391,1.472,392,1.472,393,1.483,394,1.472,395,0.852,396,1.842,397,1.427,398,1.461,399,1.472,400,1.472,401,1.472,402,1.483,403,1.483,404,1.472,405,1.483,406,1.483,407,1.495,408,1.386,409,1.472,410,1.472,411,0.852,412,1.918,413,0.836,414,0.836,415,1.428,416,0.829,420,1.948,421,0.852,422,1.998,423,1.439,424,1.449,425,2.124,426,1.406,427,1.472,428,0.852,429,1.998,430,1.428,431,1.355,432,1.428,433,1.396,435,0.901,436,0.86,475,1.289,478,0.736,479,1,482,1.479,526,1.289,541,1.757,550,2.164,564,1.143,571,1.228,658,1.427,760,0.901,876,2.021,902,2.753,982,1.289,1152,1.468,1153,1.468,1157,1.468,1158,1.468,1159,2.671,1160,1.468,1161,1.454,1162,1.468,1163,1.572,1164,1.468,1165,1.468,1222,2.674,1224,2.602,1227,2.674,1318,1.828,1371,2.28,1407,1.553,1425,3.269,1453,2.021,1500,2.021,1615,2.021,1616,2.164,1853,1.757,1959,2.164,2520,2.164,2618,5.393,2619,6.099,2622,5.393,2624,1.914,2632,3.626,2634,2.164,2636,2.164,2639,2.164,2643,5.151,2644,2.164,2645,5.151,2646,2.381,2647,2.381,2648,2.381,2649,2.381,2650,2.381,2651,7.009,2652,3.991,2653,2.164,2654,2.381,2655,3.626,2656,2.381,2657,2.381,2658,2.164,2659,2.381,2660,2.381]],["t/792",[0,1.275,2,0.618,8,0.184,12,1.171,14,0.989,17,3.695,27,2.893,28,0.795,29,2.658,35,0.973,36,0.973,37,1,50,0.811,51,0.998,52,0.67,54,0.61,56,0.675,65,1.203,67,0.552,69,1.109,74,0.286,76,0.77,79,1.195,80,0.668,83,1.431,84,2.193,86,0.616,93,1.956,101,2.537,104,1.983,105,1.175,108,0.98,110,2.056,111,1.522,116,0.8,119,0.932,120,1.021,122,2.015,132,0.887,133,0.809,135,0.829,137,1.671,141,1.489,143,0.6,147,0.572,151,1.057,155,1.369,159,1.485,160,1.33,164,3.958,165,3.81,167,1.803,173,1.341,174,1.253,177,4.181,178,1.667,179,1.417,180,2.613,182,0.599,183,1.129,184,1.729,187,3.07,188,1.223,189,1.428,195,0.511,200,1.689,206,1.452,207,1.788,210,0.722,222,1.427,224,1.057,225,0.889,226,0.562,227,0.939,242,0.577,243,2.682,250,1.515,251,0.758,255,2.762,257,4.422,260,1.926,268,0.557,271,0.599,274,1.274,276,1.392,285,2.44,304,0.987,315,2.798,316,2.744,317,2.995,320,1.76,322,0.952,323,0.9,324,1.522,325,1.147,326,2.728,327,2.411,328,2.411,329,2.411,330,2.411,331,2.53,332,1.744,333,1.677,334,1.103,335,2.059,336,1.868,337,2.012,338,2.028,339,2.012,340,1.103,341,2.221,342,2.012,343,1.103,344,2.176,345,2.248,346,2.265,347,2.265,348,2.028,349,1.112,350,1.147,351,1.938,352,0.583,353,1.703,354,2.149,355,1.825,356,1.129,357,1.095,358,1.677,359,1.079,360,1.615,361,1.993,362,1.129,363,1.138,364,1.095,365,1.112,366,2.075,367,2.075,368,1.997,369,1.42,370,1.441,371,1.389,372,1.129,373,1.651,374,0.583,375,1.716,376,1.147,377,2.328,378,1.542,379,1.533,380,0.588,381,1.112,382,1.112,383,1.112,384,1.103,385,1.112,386,1.112,387,1.112,388,1.533,389,1.103,390,1.731,391,1.112,392,1.112,393,1.121,394,1.112,395,0.588,396,1.392,397,1.037,398,1.103,399,1.112,400,1.112,401,1.112,402,1.121,403,1.121,404,1.112,405,1.121,406,1.121,407,1.129,408,1.047,409,1.112,410,1.112,411,0.588,412,1.531,413,0.577,414,0.577,415,1.079,416,0.572,420,1.554,421,0.588,422,1.627,423,1.087,424,1.321,425,1.729,426,1.063,427,1.112,428,0.588,429,1.627,430,1.079,431,1.024,432,1.079,433,1.055,436,0.593,438,1.134,478,0.508,479,0.69,481,0.861,486,0.548,490,0.905,503,0.758,509,3.317,512,2.499,513,2.459,526,0.89,528,0.905,534,4.363,571,1.496,593,1.171,602,1.101,611,0.939,622,0.977,658,1.037,725,1.021,760,1.098,876,2.461,971,0.922,982,0.89,1066,1.801,1141,1.395,1142,0.861,1152,1.067,1153,1.067,1157,1.067,1158,1.067,1159,2.175,1160,1.067,1161,1.057,1162,1.067,1163,1.142,1164,1.067,1165,1.067,1171,2.538,1216,2.538,1222,1.101,1224,1.072,1227,1.101,1316,1.395,1328,5.316,1358,1.171,1359,0.957,1371,1.657,1386,3.815,1425,4.433,1509,1.494,1522,1.072,1527,1.321,1529,0.977,1593,1.321,1606,1.395,1630,6.175,1744,1.494,1751,6.132,1816,1.134,1819,1.134,1823,1.134,1853,1.213,1867,1.494,1868,1.494,1872,1.494,1917,1.494,1952,1.321,2338,1.395,2594,4.545,2596,1.395,2615,5.73,2620,2.33,2621,1.395,2622,5.747,2623,1.395,2624,2.33,2626,1.395,2644,1.494,2661,2.635,2662,1.644,2663,1.494,2664,5.804,2665,1.644,2666,3.891,2667,2.635,2668,2.9,2669,1.644,2670,1.644,2671,1.644,2672,2.9,2673,1.644,2674,1.494,2675,1.494,2676,1.644,2677,1.494,2678,1.494,2679,3.891,2680,1.644,2681,1.644,2682,1.644,2683,1.644,2684,1.644,2685,5.913]],["t/794",[8,1.012,42,7.672,52,0.574,75,4.173,84,2.773,108,2.277,114,4.581,131,6.238,132,1.004,137,4.476,156,6.942,165,3.526,225,2.773,271,3.295,571,4.664,717,6.238,1292,6.942,1309,6.238,1462,7.672,2663,8.216,2686,9.042]],["t/796",[1,4.669,8,1.045,13,2.641,37,1.36,52,0.716,54,3.942,74,1.764,76,0.945,79,1.127,84,2.306,88,4.004,89,3.71,90,2.561,91,3.876,92,2.627,94,4.542,96,5.548,97,2.484,122,3.228,132,1.253,138,2.199,139,1.789,143,1.144,147,1.077,155,0.952,165,2.932,169,4.201,175,3.472,176,5.935,186,4.142,200,2.398,225,2.306,226,2.571,253,4.669,259,4.565,268,3.896,273,5.038,302,5.158,315,2.819,316,2.665,467,4.008,473,4.469,474,4.102,483,6.38,484,5.548,490,4.142,509,4.215,544,4.004,546,5.054,898,6.236,1142,4.891,1299,5.355,1372,4.071]],["t/798",[2,0.774,8,1.214,13,3.902,14,1.477,31,4.926,37,1.398,39,3.892,47,4.064,52,0.508,57,4.259,66,3.706,74,1.813,76,0.899,79,0.849,86,2.998,90,1.876,91,3.321,96,5.901,105,1.457,119,1.916,132,0.888,133,1.094,137,3.434,138,2.339,139,2.482,143,1.127,147,1.05,150,3.183,153,2.598,167,2.078,172,3.285,178,1.484,204,4.126,207,1.916,216,4.659,255,3.251,258,2.735,268,3.287,273,5.359,474,3.515,478,2.473,486,2.665,501,4.07,503,3.691,509,3.321,546,4.33,679,4.027,838,5.697,898,4.569,922,3.839,1013,3.892,1142,4.191,1179,4.191,1407,5.216]],["t/800",[8,1.047,13,3.285,204,4.824,207,2.241,486,3.116,501,3.926]],["t/802",[8,0.987,10,7.483,77,2.128,84,3.151,88,5.79,89,5.07,91,3.662,94,4.291,110,2.27,132,0.98,134,2.683,147,1.084,172,4.22,238,4.069,479,3.702,564,4.233,696,5.476,863,6.084,1075,5.3,1359,5.137,1372,5.563,1578,6.77,1600,7.483,1602,5.751,2253,6.281,2687,8.013]],["t/804",[52,0.691,54,3.274,84,3.434,88,4.696,90,2.708,91,4.65,94,4.999,97,2.913,106,2.938,147,0.854,175,3.016,176,5.607,177,3.922,186,4.858,211,5.038,225,2.704,260,1.754,273,5.908,1372,4.775,2253,6.281,2508,7.483,2687,8.013]],["t/806",[41,4.231,52,0.545,90,2.521,91,3.56,94,4.172,176,6.426,186,6.382,187,3.176,195,1.51,211,4.898,237,5.915,264,3.844,273,5.745,474,3.768,611,5.774,838,6.107,1178,8.636,1433,8.894,1434,7.457,1463,5.135,1888,8.918,2158,5.452,2618,8.121,2620,6.89]],["t/809",[0,0.36,1,0.683,2,0.709,8,0.51,14,1.066,27,3.018,28,1.024,29,2.787,35,1.253,36,1.253,37,1.11,50,0.543,51,0.668,52,0.671,65,1.745,67,1.533,74,0.191,76,0.795,79,1.096,84,1.064,86,0.757,88,1.075,89,0.997,90,1.719,93,2.052,97,0.363,100,0.447,104,2.24,105,1.283,108,1.262,110,2.323,111,1.516,119,1.756,132,1.012,133,0.15,135,1.742,137,1.202,141,1.846,143,0.112,147,0.442,151,0.736,155,1.153,159,1.434,160,1.602,164,0.641,166,0.635,167,1.934,171,0.699,173,0.8,174,1.196,175,2.506,176,5.093,177,3.792,178,1.664,179,0.845,180,1.756,182,1.02,183,0.586,184,1.015,188,0.635,189,0.614,195,0.493,200,1.958,206,0.551,207,1.985,222,1.719,224,0.736,225,0.619,243,2.847,244,3.123,250,1.682,251,1.292,260,2.071,264,0.722,268,0.373,274,0.887,275,0.884,276,0.528,285,1.931,304,1.272,315,1.301,316,0.992,317,1.049,321,2.864,322,1.227,323,1.159,324,1.833,325,1.477,326,2.956,327,2.723,328,2.723,329,2.723,330,2.723,331,2.686,332,2.187,333,2.02,334,1.421,335,2.386,336,2.164,337,2.332,338,2.35,339,2.332,340,1.421,341,2.418,342,2.332,343,1.421,344,2.392,345,2.539,346,2.559,347,2.559,348,2.35,349,1.432,350,2.16,351,2.246,352,1.436,353,2.051,354,2.546,355,1.826,356,1.454,357,1.41,358,2.02,359,1.389,360,1.945,361,2.195,362,1.454,363,1.466,364,1.41,365,1.432,366,2.405,367,2.405,368,2.314,369,1.53,370,1.553,371,1.497,372,1.454,373,1.989,374,1.436,375,2.067,376,1.477,377,2.559,378,1.662,379,2.181,380,1.449,381,1.432,382,1.432,383,1.432,384,1.421,385,1.432,386,1.432,387,1.432,388,1.847,389,1.421,390,2.171,391,1.432,392,1.432,393,1.443,394,1.432,395,1.449,396,2.621,397,2.18,398,1.421,399,1.432,400,1.432,401,1.432,402,1.443,403,1.443,404,1.432,405,1.443,406,1.443,407,1.454,408,1.348,409,1.432,410,1.432,411,1.449,412,1.649,413,1.423,414,1.423,415,1.389,416,1.41,417,1.664,420,1.675,421,1.449,422,1.959,423,1.4,424,1.41,425,2.083,426,1.368,427,1.432,428,1.449,429,1.959,430,1.389,431,1.319,432,1.389,433,1.358,435,1.313,436,1.463,444,1.87,465,0.543,497,0.933,509,3.385,526,0.596,532,0.447,546,0.596,658,0.722,690,0.483,760,1.06,922,0.528,1045,0.567,1118,0.668,1152,0.743,1153,0.743,1154,0.543,1157,0.743,1158,0.743,1159,1.678,1160,0.743,1161,0.736,1162,0.743,1163,0.796,1164,0.743,1165,0.743,1197,0.521,1214,1.393,1229,1.132,1230,0.683,1237,0.844,1291,0.844,1314,0.812,1337,0.759,1359,1.176,1371,0.628,1407,0.717,1434,7.517,1463,1.026,1470,3.187,1473,0.759,1476,1.284,1481,0.759,1552,0.812,1602,0.717,1816,0.759,1819,1.931,1823,0.759,1900,1.438,1937,0.844,2273,1.714,2688,7.443,2689,1,2690,1.623,2691,1.835,2692,4.027,2693,1.1,2694,1,2695,1.623,2696,1,2697,1,2698,1.835,2699,2.019]],["t/811",[0,0.801,2,0.659,8,0.587,13,0.858,14,0.969,27,2.918,28,0.833,29,2.683,35,1.02,36,1.02,37,0.986,52,0.689,65,1.386,67,0.821,73,1.686,76,0.841,79,1.16,84,0.75,86,0.916,88,1.301,89,1.206,90,1.231,93,2.098,94,1.189,103,1.062,104,2.031,105,1.187,108,1.027,110,2.106,111,1.304,119,1.632,132,0.909,133,0.334,135,1.165,141,1.543,143,0.248,147,0.508,151,3.281,155,1.273,159,1.396,160,1.378,165,0.953,167,1.753,173,0.698,174,1.03,175,3.401,176,4.678,177,3.028,178,1.665,179,1.231,180,2.072,183,0.709,184,1.193,186,5.728,187,3.408,188,0.768,189,0.744,195,0.43,200,1.738,206,1.224,207,1.763,222,1.478,224,0.891,225,0.75,227,1.396,242,0.858,243,2.714,244,1.514,250,1.493,251,2.422,253,1.518,260,1.954,264,2.436,274,1.074,285,2.135,304,1.035,315,1.967,316,1.86,317,1.967,321,2.392,322,0.998,323,0.943,324,1.577,325,1.202,326,2.772,327,2.469,328,2.469,329,2.469,330,2.469,331,2.561,332,1.859,333,1.737,334,1.156,335,2.119,336,1.922,337,2.071,338,2.086,339,2.071,340,1.156,341,2.224,342,2.071,343,1.156,344,2.168,345,2.302,346,2.32,347,2.32,348,2.086,349,1.165,350,1.547,351,1.994,352,0.866,353,1.764,354,2.248,355,1.751,356,1.183,357,1.148,358,1.737,359,1.13,360,1.673,361,2.009,362,1.183,363,1.193,364,1.148,365,1.165,366,2.135,367,2.135,368,2.055,369,1.391,370,1.412,371,1.361,372,1.183,373,1.711,374,0.866,375,1.778,376,1.202,377,2.553,378,1.511,379,1.766,380,0.874,381,1.165,382,1.165,383,1.165,384,1.156,385,1.165,386,1.165,387,1.165,388,1.588,389,1.156,390,1.846,391,1.165,392,1.165,393,1.174,394,1.165,395,0.874,396,1.877,397,1.459,398,1.156,399,1.165,400,1.165,401,1.165,402,1.174,403,1.174,404,1.165,405,1.174,406,1.174,407,1.183,408,1.097,409,1.165,410,1.165,411,0.874,412,1.5,413,0.858,414,0.858,415,1.13,416,0.851,417,1.004,418,2.424,420,1.523,421,0.874,422,1.685,423,1.139,424,1.477,425,1.792,426,1.114,427,1.165,428,0.874,429,1.685,430,1.13,431,1.073,432,1.13,433,1.105,435,0.925,436,0.882,465,1.206,478,1.622,481,1.281,509,2.828,510,4.923,517,1.594,526,1.323,558,1.686,622,1.453,658,0.874,696,1.518,760,0.925,1152,0.899,1153,0.899,1154,1.206,1157,0.899,1158,0.899,1159,1.93,1160,0.899,1161,0.891,1162,0.899,1163,0.963,1164,0.899,1165,0.899,1173,1.301,1214,1.686,1222,3.516,1224,3.422,1227,3.516,1298,1.964,1342,1.686,1346,1.686,1371,2.33,1419,1.741,1433,6.731,1434,7.489,1463,3.46,1470,2.593,1473,1.686,1476,1.554,1481,1.686,1529,1.453,2055,5.56,2078,1.803,2079,3.009,2081,1.803,2158,4.33,2688,7.546,2690,1.964,2692,3.277,2695,1.964,2700,2.444,2701,6.686,2702,3.706,2703,5.248,2704,2.221,2705,5.248,2706,2.221,2707,2.444,2708,5.248,2709,2.221,2710,2.444,2711,2.444]],["t/813",[0,1.526,2,0.6,12,1.479,14,0.656,27,2.843,28,0.726,29,2.606,32,1.144,35,0.889,36,0.889,37,0.968,41,5.001,52,0.68,54,0.771,65,1.361,66,0.794,67,0.698,69,1.358,76,0.818,79,1.196,83,1.713,84,1.428,86,0.779,90,2.267,91,1.934,93,1.842,104,1.891,105,1.187,108,0.895,110,1.961,111,1.538,119,1.116,120,1.29,122,4.579,132,0.846,133,0.754,135,1.015,137,0.892,138,0.607,141,1.389,143,0.686,147,0.534,155,1.361,159,1.467,160,1.241,167,1.705,169,0.935,173,1.331,174,1.216,175,3.702,176,5.89,177,3.88,178,1.667,179,1.406,180,2.586,183,1.031,184,1.613,186,4.682,187,2.671,188,1.464,189,1.081,195,0.82,200,1.597,207,1.619,210,0.913,220,1.669,222,1.331,224,1.295,225,0.637,226,0.71,242,0.729,243,2.617,250,1.372,251,0.958,260,1.871,268,0.704,274,1.562,276,1.706,285,1.961,304,0.902,315,2.855,316,2.819,317,3.271,320,2.067,322,0.87,323,0.822,324,1.42,325,1.047,326,2.642,327,2.299,328,2.299,329,2.299,330,2.299,331,2.469,332,1.693,333,1.564,334,1.008,335,1.946,336,1.765,337,1.902,338,1.916,339,1.902,340,1.008,341,2.092,342,1.902,343,1.008,344,2.019,345,2.143,346,2.16,347,2.16,348,1.916,349,1.015,350,1.373,351,1.832,352,0.736,353,1.588,354,2.08,355,1.576,356,1.031,357,1,358,1.564,359,0.985,360,1.506,361,1.859,362,1.031,363,1.039,364,1,365,1.015,366,1.961,367,1.961,368,1.887,369,1.235,370,1.253,371,1.208,372,1.031,373,1.54,374,0.736,375,1.6,376,1.047,377,2.255,378,1.341,379,1.607,380,0.743,381,1.015,382,1.015,383,1.015,384,1.008,385,1.015,386,1.015,387,1.015,388,1.43,389,1.008,390,1.68,391,1.015,392,1.015,393,1.023,394,1.015,395,0.743,396,1.666,397,1.271,398,1.008,399,1.015,400,1.015,401,1.015,402,1.023,403,1.023,404,1.015,405,1.023,406,1.023,407,1.031,408,0.956,409,1.015,410,1.015,411,0.743,412,1.331,413,0.729,414,0.729,415,0.985,416,0.723,418,2.112,420,1.352,421,0.743,422,1.517,423,0.992,424,1.311,425,1.613,426,0.97,427,1.015,428,0.743,429,1.517,430,0.985,431,0.935,432,0.985,433,0.963,436,0.75,438,1.433,478,0.642,479,0.872,490,1.144,509,3.623,510,6.12,512,3.301,513,3.248,528,1.144,532,0.844,540,1.29,593,1.479,602,1.391,658,0.743,679,0.771,696,1.29,754,1.887,971,1.165,982,1.124,1066,1.29,1152,0.764,1153,0.764,1157,0.764,1158,0.764,1159,1.713,1160,0.764,1161,0.757,1162,0.764,1163,0.818,1164,0.764,1165,0.764,1171,1.354,1247,1.532,1342,1.433,1346,1.433,1358,1.479,1359,1.21,1371,2.03,1375,1.32,1434,7.285,1606,1.762,1685,1.762,1708,1.669,1711,1.594,1715,1.669,1952,1.669,2594,5.26,2596,1.762,2618,4.981,2651,6.921,2653,1.887,2655,3.229,2658,1.887,2661,1.887,2674,1.887,2675,1.887,2677,1.887,2678,1.887,2688,8.533,2690,3.743,2692,3.743,2695,2.856,2712,3.554,2713,2.077,2714,2.077,2715,2.077,2716,2.077,2717,2.077,2718,2.077,2719,2.077]],["t/815",[2,0.665,8,0.131,14,0.964,27,2.994,28,0.974,29,2.763,35,1.192,36,1.192,37,1.079,52,0.661,65,1.761,66,1.997,67,1.427,74,0.372,76,0.797,79,1.117,84,0.657,86,0.44,88,0.624,89,0.579,90,1.225,91,0.487,93,2.053,94,1.438,104,2.189,105,1.259,108,1.2,110,2.27,111,1.463,119,1.892,122,2.836,132,0.98,133,0.16,135,1.804,141,1.731,143,0.119,147,0.207,155,1.183,159,1.389,160,1.546,167,1.89,169,0.528,173,0.335,174,1.025,175,2.508,176,5.466,177,3.769,178,1.665,179,0.646,180,1.45,183,0.34,184,0.626,186,3.299,187,2.368,188,0.369,189,0.357,195,0.207,200,1.903,207,1.93,222,1.658,237,7.436,243,2.816,244,1.939,250,1.635,253,2.959,260,2.043,264,2.013,273,0.786,278,0.563,285,1.516,304,1.209,314,0.528,315,1.368,316,1.293,317,1.958,321,2.217,322,1.166,323,1.102,324,1.769,325,1.405,326,2.913,327,2.661,328,2.661,329,2.661,330,2.661,331,2.657,332,2.156,333,1.948,334,1.351,335,2.32,336,2.104,337,2.267,338,2.285,339,2.267,340,1.351,341,2.372,342,2.267,343,1.351,344,2.337,345,2.481,346,2.5,347,2.5,348,2.285,349,1.362,350,2.221,351,2.184,352,1.505,353,1.978,354,2.508,355,1.608,356,1.383,357,1.341,358,1.948,359,1.321,360,1.876,361,2.112,362,1.383,363,1.394,364,1.341,365,1.362,366,2.338,367,2.338,368,2.25,369,1.384,370,1.405,371,1.354,372,1.383,373,1.919,374,1.505,375,1.994,376,1.405,377,2.556,378,1.504,379,2.197,380,1.519,381,1.362,382,1.362,383,1.362,384,1.351,385,1.362,386,1.362,387,1.362,388,1.781,389,1.351,390,2.14,391,1.362,392,1.362,393,1.372,394,1.362,395,1.519,396,2.696,397,2.258,398,1.351,399,1.362,400,1.362,401,1.362,402,1.372,403,1.372,404,1.362,405,1.372,406,1.372,407,1.383,408,1.282,409,1.362,410,1.362,411,1.519,412,1.492,413,1.491,414,1.491,415,1.321,416,1.478,417,0.88,418,1.273,420,1.516,421,1.519,422,1.89,423,1.331,424,1.341,425,2.009,426,1.301,427,1.362,428,1.519,429,1.89,430,1.321,431,1.254,432,1.321,433,1.292,435,0.811,436,1.533,444,3.478,465,0.579,473,0.697,474,4.793,478,0.363,509,3.279,510,2.375,512,1.943,513,1.912,658,0.419,690,0.515,696,0.728,1045,1.105,1152,0.431,1153,0.431,1154,0.579,1157,0.431,1158,0.431,1159,1.087,1160,0.431,1161,0.427,1162,0.431,1163,0.462,1164,0.431,1165,0.431,1197,1.399,1340,0.809,1341,0.9,1342,0.809,1343,0.995,1345,0.995,1346,0.809,1394,0.9,1463,0.596,1470,4.014,1476,1.362,1500,0.995,1701,1.066,1816,0.809,1819,1.477,1823,0.809,1888,0.942,1900,1.525,2620,0.942,2664,5.736,2667,1.946,2688,8.197,2689,1.066,2690,2.375,2691,1.946,2692,4.522,2694,1.066,2695,2.375,2696,1.066,2697,1.066,2698,1.066,2701,3.858,2702,1.946,2704,1.066,2706,1.066,2709,1.066,2720,1.173,2721,2.955,2722,1.173,2723,1.173,2724,1.173,2725,1.173,2726,1.173,2727,1.173,2728,1.173,2729,1.173]],["t/817",[0,3.009,37,1.409,52,0.583,74,1.596,76,0.761,84,2.817,145,4.409,195,1.617,217,4.533,240,5.06,528,5.06,849,6.387,1169,5.99]]],"invertedIndex":[["",{"_index":178,"t":{"16":{"position":[[962,1],[997,1],[1009,1],[1019,2],[1022,2],[1038,1],[1048,2],[1051,2],[1064,1],[1074,2],[1077,2],[1089,1],[1099,2],[1102,1],[1104,2],[1119,1],[1134,1],[1146,1],[1179,1],[1181,1],[1198,1],[1200,1],[1202,2],[1218,1],[1251,1],[1253,1],[1270,1],[1272,1],[1274,2],[1287,1],[1320,1],[1322,1],[1339,1],[1341,1],[1343,2],[1355,1],[1388,1],[1390,1],[1407,1],[1409,1],[1411,1],[1413,1],[1415,1],[1417,1],[1892,1],[1939,1],[1941,1],[1976,1],[1988,1],[1998,2],[2001,2],[2017,1],[2027,2],[2030,2],[2043,1],[2053,2],[2056,2],[2068,1],[2078,2],[2081,1],[2083,2],[2098,1],[2113,1],[2125,1],[2158,1],[2160,1],[2201,2],[2204,1],[2221,1],[2223,1],[2225,2],[2241,1],[2274,1],[2276,1],[2317,2],[2320,1],[2337,1],[2339,1],[2341,2],[2354,1],[2387,1],[2389,1],[2430,2],[2433,1],[2450,1],[2452,1],[2454,2],[2466,1],[2499,1],[2501,1],[2542,2],[2545,1],[2562,1],[2564,1],[2566,1],[2568,1],[2570,1],[2572,2],[2575,1],[2608,1],[2620,1],[2630,2],[2633,1],[2635,2],[2650,1],[2665,1],[2677,1],[2710,1],[2712,1],[2729,1],[2731,1],[2733,1],[2735,1],[2737,1],[2739,2],[2742,1],[2759,1],[2761,1],[2763,1],[5083,1],[6486,3],[6779,1],[6801,1],[6803,1],[6838,1],[6850,1],[6860,2],[6863,2],[6879,1],[6889,2],[6892,2],[6905,1],[6915,2],[6918,2],[6930,1],[6940,2],[6943,1],[6945,2],[6960,1],[6975,1],[6987,1],[7020,1],[7022,1],[7039,1],[7041,1],[7043,2],[7059,1],[7092,1],[7094,1],[7111,1],[7113,1],[7115,2],[7128,1],[7161,1],[7163,1],[7180,1],[7182,1],[7184,2],[7196,1],[7229,1],[7231,1],[7248,1],[7250,1],[7252,1],[7254,1],[7256,1],[7258,2],[7261,1],[7278,1],[7280,1],[7282,1],[7856,1],[7878,1],[7880,1],[7915,1],[7927,1],[7937,2],[7940,1],[7942,2],[7957,1],[7972,1],[7984,1],[8017,1],[8019,1],[8036,1],[8038,1],[8040,1],[8042,1],[8044,1],[8046,1],[8048,1],[8050,1],[9342,1],[9344,1],[9423,2],[9426,1],[10502,1],[10504,2],[10561,1],[10640,2],[10643,1],[10645,1],[10647,2],[10659,5],[10714,1],[10724,4],[10785,2],[10788,1],[10790,1],[10792,2],[10844,1],[10933,2],[10936,2],[11013,1],[11091,2],[11094,1],[11419,1],[11441,1],[11443,1],[11478,1],[11490,1],[11501,1],[11512,1],[11514,1],[11524,2],[11527,2],[11530,1],[11551,1],[11574,1],[11576,1],[11578,1],[11580,1],[11582,2],[11595,1],[11605,2],[11608,1],[11610,2],[11625,1],[11640,1],[11652,1],[11685,1],[11687,1],[11704,1],[11706,1],[11708,2],[11721,1],[11754,1],[11756,1],[11773,1],[11775,1],[11777,1],[11779,1],[11781,1],[11783,1],[11785,1],[11787,1],[11857,1],[11859,1],[11938,2],[11941,1],[12308,2],[12380,2],[12404,1],[12417,1],[12419,1],[12446,2],[12546,1],[12604,2],[12688,2],[12828,2],[12877,3],[12881,2],[12902,1],[12912,1],[12914,1],[13006,1],[13079,2],[13082,3],[13086,2],[13097,1],[13123,2],[13202,1],[13244,1],[13258,1],[13260,2],[13363,2],[13452,2],[13537,2],[13678,2],[13784,2],[13794,2],[13801,1],[13803,2],[13806,2],[13822,1],[13834,2],[13872,1],[13879,2],[14072,2],[14075,1],[14097,2],[14170,2],[14178,1],[14180,1],[14196,1],[14217,2],[14289,2],[14381,1],[14441,1],[14468,1],[14470,2],[14572,1],[14594,1],[14606,1],[14662,2],[14719,1],[14773,2],[14886,1],[14940,2],[15046,2],[15063,1],[15096,1],[15098,1],[15100,2],[15128,1],[15169,1],[15180,1],[15197,1],[15204,1],[15228,1],[15247,1],[15272,2],[15296,1],[15331,2],[15351,1],[15377,1],[15544,1],[15584,1],[15620,1],[15677,1],[15711,1],[15824,1],[15857,1],[15962,1],[15964,1],[16022,1],[16086,1],[16146,1],[16198,1],[16273,1],[16311,1],[16415,2],[16472,1],[16483,1],[16523,1],[16542,1],[16726,1],[16773,1],[16775,1],[16866,1],[17017,1],[17058,1],[17073,2],[17115,1],[17127,2],[17162,1],[17188,2],[17247,1],[17279,2],[17645,1],[17663,1],[17700,1],[17719,1],[17920,2],[17992,2],[18016,1],[18029,1],[18031,1],[18058,2],[18158,1],[18216,2],[18300,2],[18440,2],[18489,3],[18493,2],[18514,1],[18524,1],[18526,1],[18618,1],[18691,2],[18694,3],[18698,2],[18709,1],[18735,2],[18814,1],[18856,1],[18870,1],[18872,2],[18975,2],[19064,2],[19149,2],[19290,2],[19396,2],[19406,2],[19413,1],[19415,2],[19418,2],[19434,1],[19446,2],[19484,1],[19491,2],[19684,2],[19687,1],[19709,2],[19782,2],[19790,1],[19792,1],[19808,1],[19829,2],[19901,2],[19993,1],[20053,1],[20080,1],[20082,2],[20184,1],[20206,1],[20218,1],[20274,2],[20331,1],[20385,2],[20498,1],[20552,2],[20658,2],[20675,1],[20708,1],[20710,1],[20712,2],[20740,1],[20781,1],[20792,1],[20809,1],[20816,1],[20840,1],[20859,1],[20884,2],[20908,1],[20943,2],[20963,1],[20989,1],[21156,1],[21196,1],[21232,1],[21289,1],[21323,1],[21436,1],[21469,1],[21574,1],[21576,1],[21634,1],[21698,1],[21758,1],[21810,1],[21885,1],[21923,1],[22027,2],[22084,1],[22095,1],[22135,1],[22154,1],[22338,1],[22385,1],[22387,1],[22478,1],[22629,1],[22670,1],[22685,2],[22727,1],[22739,2],[22774,1],[22800,2],[22859,1],[22891,2],[23692,2],[23764,2],[23788,1],[23801,1],[23803,1],[23830,2],[23930,1],[23988,2],[24072,2],[24212,2],[24261,3],[24280,1],[24424,3],[24428,2],[24448,1],[24512,2],[24591,1],[24633,1],[24647,1],[24649,2],[24752,2],[24841,2],[24926,2],[25067,2],[25173,2],[25183,2],[25190,1],[25192,2],[25195,2],[25211,1],[25223,2],[25261,1],[25268,2],[25419,1],[25441,2],[25520,2],[25528,1],[25530,1],[25586,1],[25607,2],[25679,2],[25771,1],[25831,1],[25858,1],[25860,2],[25962,1],[25984,1],[25996,1],[26052,2],[26109,1],[26163,2],[26276,1],[26330,2],[26436,2],[26453,1],[26486,1],[26488,1],[26499,1],[26546,1],[26584,1],[26608,1],[26625,1],[26639,2],[26655,1],[26693,2],[26713,1],[26777,1],[26944,1],[26984,1],[27020,1],[27077,1],[27111,1],[27224,1],[27257,1],[27362,1],[27364,1],[27422,1],[27486,1],[27559,1],[27611,1],[27717,1],[27847,1],[27858,1],[28089,1],[28136,1],[28138,1],[28229,1],[28234,2],[28355,2],[28358,1],[28452,2],[28508,2],[28548,2],[28606,1],[28639,2],[28685,2],[30011,1],[30013,1],[30089,2],[30092,1]]},"54":{"position":[[802,1],[849,1],[851,1],[868,2],[871,1],[904,1],[916,1],[926,2],[929,1],[931,2],[946,1],[961,1],[973,1],[1006,1],[1008,1],[1025,1],[1027,1],[1029,1],[1031,1],[1033,1],[1035,2],[1038,1],[1071,1],[1086,1],[1107,1],[1119,3],[1144,1],[1146,2],[1158,1],[1169,1],[1180,1],[1182,1],[1192,2],[1195,2],[1198,1],[1218,1],[1232,1],[1244,3],[1276,2],[1298,1],[1310,3],[1334,1],[1336,1],[1338,1],[1340,1],[1342,1],[1344,2],[1364,1],[1374,2],[1377,2],[1390,1],[1401,1],[1412,1],[1414,1],[1424,2],[1427,2],[1430,1],[1451,1],[1463,3],[1488,1],[1490,2],[1493,1],[1513,1],[1527,1],[1539,3],[1571,2],[1593,1],[1605,3],[1630,1],[1632,1],[1634,1],[1636,1],[1638,1],[1640,2],[1653,1],[1664,1],[1675,1],[1677,1],[1687,2],[1690,2],[1693,1],[1714,1],[1726,3],[1750,1],[1752,2],[1755,1],[1775,1],[1789,1],[1801,3],[1833,2],[1855,1],[1867,3],[1892,1],[1894,1],[1896,1],[1898,1],[1900,1],[1902,1],[1904,2],[1919,1],[1934,1],[1945,1],[1978,1],[1980,1],[1997,2],[2000,1],[2041,1],[2043,1],[2045,2],[2065,1],[2098,1],[2100,1],[2119,1],[2121,1],[2123,2],[2136,1],[2169,1],[2171,1],[2188,2],[2191,1],[2232,1],[2234,1],[2236,2],[2249,1],[2282,1],[2284,1],[2301,2],[2304,1],[2345,1],[2347,1],[2349,1],[2351,1],[2353,1],[2355,2],[2358,1],[2393,1],[2408,1],[2429,1],[2441,3],[2466,1],[2468,2],[2480,1],[2491,1],[2502,1],[2504,1],[2514,2],[2517,2],[2520,1],[2540,1],[2554,1],[2566,3],[2598,2],[2620,1],[2632,3],[2656,1],[2658,1],[2660,1],[2662,1],[2664,1],[2666,2],[2686,1],[2696,2],[2699,2],[2712,1],[2723,1],[2734,1],[2736,1],[2746,2],[2749,2],[2752,1],[2773,1],[2785,3],[2810,1],[2812,2],[2815,1],[2835,1],[2849,1],[2861,3],[2893,2],[2915,1],[2927,3],[2952,1],[2954,1],[2956,1],[2958,1],[2960,1],[2962,2],[2975,1],[2986,1],[2997,1],[2999,1],[3009,2],[3012,2],[3015,1],[3036,1],[3048,3],[3072,1],[3074,2],[3077,1],[3097,1],[3111,1],[3123,3],[3155,2],[3177,1],[3189,3],[3214,1],[3216,1],[3218,1],[3220,1],[3222,1],[3224,1],[3226,2],[3241,1],[3256,1],[3267,1],[3300,1],[3302,1],[3319,2],[3322,1],[3363,1],[3365,1],[3367,2],[3387,1],[3420,1],[3422,1],[3441,1],[3443,1],[3445,2],[3458,1],[3491,1],[3493,1],[3510,2],[3513,1],[3554,1],[3556,1],[3558,2],[3571,1],[3604,1],[3606,1],[3623,2],[3626,1],[3667,1],[3669,1],[3671,1],[3673,1],[3675,1],[3677,1],[3679,1],[3681,1]]},"56":{"position":[[20,5],[942,4],[1138,1],[1169,1],[1181,1],[1191,2],[1194,1],[1196,2],[1211,1],[1226,1],[1238,1],[1271,1],[1273,1],[1290,2],[1293,1],[1312,2],[1315,1],[1354,1],[1356,1],[1358,1],[1360,1],[1362,1],[1364,1],[1949,1],[1951,2],[2011,1],[2082,2],[2085,1],[2087,1],[2089,2],[2101,5],[2159,1],[2227,2],[2230,1],[2232,1],[2234,2],[2297,1],[2378,2],[2381,2],[2421,1],[2492,2],[2495,1]]},"58":{"position":[[226,1],[261,1],[273,1],[283,2],[286,2],[299,1],[310,1],[321,1],[323,1],[333,2],[336,2],[339,1],[360,1],[383,1],[385,1],[387,1],[389,1],[391,2],[408,1],[429,1],[452,1],[454,1],[456,2],[471,1],[486,1],[498,1],[531,1],[533,1],[550,1],[552,1],[554,2],[567,1],[600,1],[602,1],[619,1],[621,1],[623,1],[625,1],[627,1],[629,1],[1489,1],[1491,2],[1540,1],[1619,2],[1622,1],[1665,1],[1667,2],[1715,1],[1794,2],[1797,1],[1961,1],[1963,2],[2013,1],[2092,2],[2095,1]]},"60":{"position":[[485,1],[532,1],[534,1],[551,2],[554,1],[587,1],[599,1],[609,2],[612,1],[614,2],[629,1],[644,1],[656,1],[689,1],[691,1],[708,2],[711,1],[752,1],[754,1],[756,1],[758,1],[760,1],[762,2],[765,1],[800,1],[819,1],[829,2],[832,2],[845,1],[856,1],[867,1],[869,1],[879,2],[882,2],[885,1],[905,1],[919,1],[931,3],[963,2],[985,1],[997,3],[1022,1],[1024,1],[1026,1],[1028,1],[1030,1],[1032,1],[1034,2],[1049,1],[1064,1],[1083,1],[1116,1],[1118,1],[1137,1],[1139,1],[1141,2],[1154,1],[1187,1],[1189,1],[1206,1],[1208,1],[1210,1],[1212,1],[1214,1],[1216,1],[1218,1],[1220,1],[1512,1],[1534,1],[1536,1],[1571,1],[1583,1],[1594,1],[1605,1],[1607,1],[1617,2],[1620,2],[1623,1],[1643,1],[1657,1],[1669,3],[1701,2],[1723,1],[1735,3],[1760,1],[1762,1],[1764,1],[1766,1],[1768,1],[1770,1],[1772,2],[1787,1],[1802,1],[1814,1],[1847,1],[1849,1],[1866,1],[1868,1],[1870,1],[1872,1],[1874,1],[1876,1],[1878,1],[1880,1],[2088,1],[2090,2],[2158,1],[2250,2],[2253,2],[2296,1],[2370,2],[2373,1],[2442,1],[2444,2],[2492,1],[2571,2],[2574,1]]},"62":{"position":[[225,1],[247,1],[249,1],[284,1],[296,1],[307,1],[318,1],[320,1],[330,2],[333,2],[336,1],[357,1],[380,1],[382,1],[384,1],[386,1],[388,1],[390,2],[405,1],[420,1],[432,1],[465,1],[467,1],[484,1],[486,1],[488,1],[490,1],[492,1],[494,1],[496,1],[498,1],[713,1],[715,1],[794,2],[797,1],[840,1],[842,1],[921,2],[924,1]]},"64":{"position":[[253,1],[275,1],[277,1],[312,1],[324,1],[342,1],[353,1],[355,1],[376,1],[408,1],[410,2],[413,1],[434,1],[457,1],[459,1],[461,1],[463,1],[465,1],[467,2],[482,1],[497,1],[509,1],[542,1],[544,1],[561,1],[563,1],[565,1],[567,1],[569,1],[571,1],[573,1],[575,1],[753,1],[755,1],[834,2],[837,1],[895,1],[897,1],[985,2],[988,1]]},"66":{"position":[[316,1],[338,1],[340,1],[375,1],[387,1],[403,1],[413,1],[423,2],[426,2],[441,1],[462,1],[486,1],[488,1],[490,1],[492,1],[494,2],[509,1],[524,1],[536,1],[569,1],[571,1],[588,1],[590,1],[592,1],[594,1],[596,1],[598,1],[600,1],[602,1],[765,1],[767,1],[846,2],[849,1],[954,1],[956,1],[1036,2],[1039,1]]},"68":{"position":[[424,1],[440,1],[451,1],[484,1],[492,1],[500,1],[508,2],[511,1],[519,1],[538,1],[558,1],[560,1],[562,3],[575,1],[608,1],[616,1],[624,1],[632,2],[635,1],[643,1],[662,1],[683,1],[685,1],[693,1],[712,1],[723,1],[744,1],[763,1],[795,1],[830,3],[834,3],[1059,1],[1106,1],[1108,1],[1138,1],[1149,1],[1159,2],[1162,2],[1175,1],[1186,1],[1197,1],[1199,1],[1209,2],[1212,2],[1215,1],[1236,1],[1258,1],[1260,1],[1262,1],[1264,1],[1266,2],[1279,1],[1290,1],[1301,1],[1303,1],[1313,2],[1316,2],[1319,1],[1340,1],[1363,1],[1365,2],[1368,1],[1388,1],[1402,1],[1425,2],[1447,1],[1470,1],[1472,1],[1474,1],[1476,1],[1478,1],[1480,1],[1482,2],[1497,1],[1512,1],[1523,1],[1556,1],[1558,1],[1575,1],[1577,1],[1579,2],[1592,1],[1625,1],[1627,1],[1644,1],[1646,1],[1648,2],[1661,1],[1694,1],[1696,1],[1713,1],[1715,1],[1717,1],[1719,1],[1721,1],[1723,1],[1725,1],[1727,1],[1894,1],[1941,1],[1943,1],[1973,1],[1985,1],[1996,1],[2007,1],[2009,1],[2019,2],[2022,2],[2025,1],[2046,1],[2069,1],[2071,2],[2074,1],[2094,1],[2108,1],[2131,2],[2153,1],[2176,1],[2178,1],[2180,1],[2182,1],[2184,1],[2186,1],[2188,2],[2203,1],[2218,1],[2230,1],[2263,1],[2265,1],[2282,1],[2284,1],[2286,1],[2288,1],[2290,1],[2292,1],[2294,1],[2296,1]]},"80":{"position":[[196,1],[243,1],[245,1],[262,2],[265,1],[300,1],[312,1],[322,2],[325,2],[338,1],[348,2],[351,2],[363,1],[373,2],[376,1],[378,2],[393,1],[408,1],[420,1],[453,1],[455,1],[472,1],[474,1],[476,2],[489,1],[522,1],[524,1],[541,1],[543,1],[545,2],[557,1],[590,1],[592,1],[609,1],[611,1],[613,1],[615,1],[617,1],[619,1],[621,1],[623,1],[756,2],[828,2],[852,1],[865,1],[867,1],[894,2],[994,1],[1052,2],[1136,2],[1276,2],[1325,3],[1335,1],[1364,1],[1366,1],[1455,1],[1457,1],[1474,2],[1477,1],[1512,1],[1524,1],[1534,2],[1537,2],[1550,1],[1560,2],[1563,2],[1575,1],[1585,2],[1588,1],[1590,2],[1605,1],[1620,1],[1632,1],[1665,1],[1667,1],[1684,1],[1686,1],[1688,2],[1701,1],[1734,1],[1736,1],[1753,1],[1755,1],[1757,2],[1769,1],[1802,1],[1804,1],[1821,1],[1823,1],[1825,1],[1827,1],[1829,1],[1831,1],[1833,1],[1835,3],[1839,2],[1845,1],[1896,2],[1975,1],[2017,1],[2031,1],[2033,2],[2136,2],[2225,2],[2310,2],[2451,2],[2557,2],[2567,2],[2574,1],[2576,2],[2579,2],[2595,1],[2607,2],[2645,1],[2688,1],[3156,2],[3232,2],[3239,1],[3261,2],[3264,2],[3287,1],[3309,2],[3407,2],[3414,1],[3416,2],[3419,2],[3435,1],[3437,2],[3466,1],[3517,2],[3589,2],[3681,1],[3741,1],[3768,1],[3770,2],[3872,1],[3894,1],[3906,1],[3962,2],[4019,1],[4073,2],[4186,1],[4240,2],[4346,2],[4363,1],[4396,1],[4398,1],[4414,1],[4845,1],[4949,1],[4998,2],[5031,1],[5082,1],[5249,1],[5289,1],[5325,1],[5382,1],[5416,1],[5529,1],[5562,1],[5667,1],[5669,1],[5727,1],[5791,1],[5940,1],[6370,1],[6442,1],[6476,1],[6700,1],[6747,1],[6749,1],[6840,1]]},"86":{"position":[[34,1],[47,1],[49,1],[76,2],[89,1],[102,1],[139,1],[197,2],[264,2],[369,3],[379,1],[393,1],[395,1],[449,3],[460,1],[503,1],[517,1],[538,2],[629,2],[698,2],[803,2],[813,2],[820,1],[822,2],[825,2],[841,1],[853,2],[905,2],[1059,2],[1066,1],[1068,2],[1071,2],[1087,1],[1089,1],[1165,1],[1225,1],[1252,1],[1272,1],[1294,1],[1306,1],[1362,2],[1403,1],[1456,2],[1561,2],[1578,1],[1621,1],[1694,1],[1701,1],[1720,3],[1724,1],[1726,1],[1883,1],[1919,1],[1963,1],[1997,1],[1999,1],[2057,1],[2152,1],[2174,1],[2201,1],[2215,1],[2230,1],[2377,1],[2416,1],[2454,1]]},"94":{"position":[[549,2],[607,1],[643,3],[647,2],[722,2],[725,1],[734,1],[766,2],[769,3],[773,2],[803,1],[811,2],[814,2],[817,1],[823,1],[853,1],[867,1],[910,1],[912,2],[1447,1],[1453,2],[1521,1],[1553,1],[1597,1]]},"96":{"position":[[255,1],[299,1],[335,1],[378,1],[388,1],[546,2],[555,1],[576,2],[579,3],[648,1],[654,1],[683,1],[697,1],[716,1],[718,3],[722,3],[865,1],[898,1],[932,1],[973,2],[1008,1],[1010,2],[1053,1],[1085,2],[1088,2],[1091,2],[1094,2],[1169,1],[1205,3],[1232,1],[1281,1],[1373,2],[1404,1],[1412,2],[1415,2],[1418,1],[1424,1],[1454,1],[1468,1],[1511,1],[1513,1],[1608,1],[1740,1],[1746,1],[1748,2],[1781,2],[1860,2],[1946,1],[1960,1],[1966,2],[1981,2],[2056,2],[2101,1],[2137,2],[2144,1],[2185,1],[2187,2],[2298,3],[2355,1],[2387,1],[2394,2],[2434,2],[2470,2],[2522,1],[2524,1],[2531,1],[2533,1],[2557,1]]},"98":{"position":[[226,1],[270,1],[306,1],[373,1],[379,1],[405,1],[436,1],[485,1],[545,1],[563,1],[580,1],[621,1],[635,1],[654,1],[656,3],[660,3],[849,1],[884,1],[897,1],[899,1],[926,2],[939,1],[952,1],[990,1],[1026,1],[1090,1],[1096,1],[1098,2],[1150,1],[1208,2],[1337,3],[1347,1],[1357,1],[1359,1],[1396,1],[1470,2],[1473,3],[1491,1],[1536,1],[1538,1],[1552,1],[1571,1],[1573,3],[1577,3],[1694,1],[1727,1],[1761,1],[1843,2],[1878,1],[1880,2],[1923,1],[1955,2],[1958,2],[1961,2],[1964,2],[2032,1],[2068,3],[2095,1],[2147,1],[2192,1],[2234,1],[2399,1],[2407,2],[2410,2],[2413,1],[2419,1],[2449,1],[2463,1],[2506,1],[2508,1],[2768,1],[2950,1],[2956,1],[2958,2],[2991,2],[3070,2],[3156,1],[3170,1],[3176,2],[3191,2],[3266,2],[3311,1],[3347,2],[3354,1],[3395,1],[3397,2],[3508,3],[3634,1],[3666,1],[3673,2],[3713,2],[3749,2],[3801,1],[3803,1],[3810,1],[3812,1],[3836,1],[3876,1],[3878,2],[3913,2],[3953,2],[3989,2],[4043,2],[4088,1],[4261,1],[4263,2],[4356,1],[4396,1],[4398,2],[4511,1],[4532,2],[4625,2],[4756,2],[4766,2],[4773,1],[4863,1],[4875,2],[4918,2],[5138,2],[5141,1],[5156,2],[5233,2],[5240,1],[5333,1],[5355,1],[5440,1],[5442,2],[5487,1]]},"102":{"position":[[359,1],[397,1],[411,1],[432,2],[523,2],[592,2],[697,2],[707,2],[714,1],[716,2],[719,2],[735,1],[737,1]]},"104":{"position":[[93,1]]},"112":{"position":[[101,2],[125,1],[138,1],[140,1],[167,2],[267,1],[325,2],[409,2],[549,2],[598,3],[609,1],[651,1],[665,1],[667,2],[770,2],[859,2],[944,2],[1085,2],[1191,2],[1201,2],[1208,1],[1210,2],[1213,2],[1229,1],[1241,2],[1279,1],[1281,2],[1373,1],[1433,1],[1460,1],[1462,2],[1564,1],[1586,1],[1598,1],[1654,2],[1711,1],[1765,2],[1878,1],[1932,2],[2038,2],[2055,1],[2088,1],[2090,1],[2188,1],[2228,1],[2264,1],[2321,1],[2355,1],[2468,1],[2501,1],[2606,1],[2608,1],[2666,1]]},"114":{"position":[[107,2],[128,1],[138,1],[140,1],[232,1],[295,2],[298,3],[302,2],[313,1],[325,2],[508,2],[511,1],[533,2],[606,2],[614,1],[616,1],[632,1],[634,2],[662,1],[703,1],[714,1],[731,1],[738,1],[762,1],[781,1],[796,2],[820,1],[855,2],[875,1],[882,1],[942,1],[994,1],[1069,1],[1107,1],[1201,2],[1258,1],[1269,1],[1309,1],[1328,1],[1388,1],[1435,1],[1437,1],[1528,1],[1669,1]]},"124":{"position":[[101,2],[125,1],[138,1],[140,1],[167,2],[267,1],[325,2],[409,2],[549,2],[598,3],[609,1],[651,1],[665,1],[667,2],[770,2],[859,2],[944,2],[1085,2],[1191,2],[1201,2],[1208,1],[1210,2],[1213,2],[1229,1],[1241,2],[1279,1],[1281,2],[1373,1],[1433,1],[1460,1],[1462,2],[1564,1],[1586,1],[1598,1],[1654,2],[1711,1],[1765,2],[1878,1],[1932,2],[2038,2],[2055,1],[2088,1],[2090,1],[2188,1],[2228,1],[2264,1],[2321,1],[2355,1],[2468,1],[2501,1],[2606,1],[2608,1],[2666,1]]},"126":{"position":[[117,1],[261,3],[265,2],[285,1],[335,2],[486,1],[508,2],[587,2],[595,1],[597,1],[653,1],[664,1],[711,1],[749,1],[773,1],[790,1],[804,2],[820,1],[858,2],[878,1],[923,1],[996,1],[1048,1],[1154,1],[1284,1],[1295,1],[1402,1],[1449,1],[1451,1],[1542,1],[1547,2],[1668,2],[1671,1]]},"140":{"position":[[134,1]]},"142":{"position":[[1154,1],[1184,1],[1399,1],[1429,1],[1813,1],[1853,1],[2514,1],[2557,1],[2610,1],[3841,1],[3868,1],[4066,1],[4093,1],[4480,1],[4499,1],[4513,1],[4539,1],[5145,1],[5188,1],[5241,1]]},"144":{"position":[[1522,1],[1549,1],[1586,1],[1612,1],[1661,1],[3041,1],[3063,1],[3099,1],[3139,1],[3165,1],[3214,1]]},"150":{"position":[[273,1],[296,1],[416,1]]},"152":{"position":[[651,2],[656,1],[733,2],[738,1]]},"170":{"position":[[98,1],[111,1],[113,1],[140,2],[153,1],[166,1],[203,1],[261,2],[355,2],[494,3],[505,1],[548,1],[562,1],[583,2],[674,2],[769,2],[910,2],[920,2],[927,1],[929,2],[932,2],[948,1],[960,2],[999,1],[1075,1],[1135,1],[1162,1],[1182,1],[1204,1],[1216,1],[1272,2],[1339,1],[1393,2],[1506,1],[1559,2],[1576,1],[1609,1],[1611,1],[1697,1],[1737,1],[1781,1],[1824,1],[1857,1],[1859,1],[1917,1]]},"172":{"position":[[411,1],[443,1],[445,1],[472,2],[485,1],[517,1],[554,1],[612,2],[680,2],[820,2],[939,1],[985,1],[1024,2],[1027,1],[1029,3],[1040,1],[1083,1],[1097,1],[1118,2],[1209,2],[1278,2],[1419,2],[1619,1],[1662,2],[1738,2],[1741,2],[1744,2],[1754,2],[1761,1],[1763,2],[1766,2],[1782,1],[1794,2],[1833,1],[1909,1],[1969,1],[1996,1],[2016,1],[2038,1],[2050,1],[2106,2],[2147,1],[2201,2],[2314,1],[2368,2],[2486,1],[2506,1],[2515,1],[2552,1],[2578,1],[2589,1],[2646,2],[2649,2],[2652,2],[2669,1],[2702,1],[2704,1],[2861,1],[2992,1],[3032,1],[3066,1],[3107,1],[3139,1],[3252,1],[3284,1],[3401,1],[3416,1],[3474,1]]},"188":{"position":[[94,1],[157,1]]},"190":{"position":[[101,2],[125,1],[138,1],[140,1],[167,2],[267,1],[325,2],[409,2],[549,2],[598,3],[609,1],[651,1],[665,1],[667,2],[770,2],[859,2],[944,2],[1085,2],[1191,2],[1201,2],[1208,1],[1210,2],[1213,2],[1229,1],[1241,2],[1279,1],[1281,2],[1373,1],[1433,1],[1460,1],[1462,2],[1564,1],[1586,1],[1598,1],[1654,2],[1711,1],[1765,2],[1878,1],[1932,2],[2038,2],[2055,1],[2088,1],[2090,1],[2188,1],[2228,1],[2264,1],[2321,1],[2355,1],[2468,1],[2501,1],[2606,1],[2608,1],[2666,1]]},"192":{"position":[[121,1],[135,1],[137,1],[200,1],[202,2],[259,3],[268,2],[348,1],[350,1],[467,2],[470,2],[473,2],[564,2],[644,2],[651,1],[653,2],[656,2],[672,1],[721,1],[758,1],[766,1],[773,1],[797,1],[816,1],[831,1],[833,3],[858,1],[890,3],[894,1],[946,1],[1000,1],[1084,1],[1199,2],[1202,2],[1205,2],[1262,1],[1355,1],[1402,1],[1404,1],[1495,1],[1512,1],[1527,1],[1594,2]]},"194":{"position":[[151,1],[214,1],[277,1],[290,1],[292,1],[294,1],[357,1],[359,2],[416,3],[425,2],[506,1],[508,1],[625,2],[628,2],[631,2],[722,2],[802,2],[809,1],[811,2],[814,2],[830,1],[880,1],[917,1],[925,1],[932,1],[956,1],[975,1],[990,1],[992,3],[1017,1],[1049,3],[1053,1],[1105,1],[1159,1],[1243,1],[1359,2],[1362,2],[1365,2],[1422,1],[1515,1],[1562,1],[1564,1],[1655,1],[1673,1],[1688,1],[1755,2]]},"204":{"position":[[453,1],[500,1],[502,1],[519,2],[522,1],[556,1],[570,1],[580,2],[583,1],[585,2],[600,1],[615,1],[629,1],[662,1],[664,1],[681,1],[683,1],[685,1],[687,1],[689,1],[691,2],[694,1],[729,1],[741,1],[751,2],[754,1],[756,2],[771,1],[786,1],[798,1],[831,1],[833,1],[877,1],[879,1],[881,1],[883,1],[885,1],[887,1],[889,1],[891,1],[1058,1]]},"206":{"position":[[93,1]]},"211":{"position":[[187,1],[189,2],[249,1],[336,2],[339,1]]},"213":{"position":[[142,2],[214,2],[238,1],[251,1],[253,1],[280,2],[380,1],[438,2],[522,2],[662,2],[711,3],[747,1],[761,1],[763,1],[829,1],[831,2],[888,3],[911,2],[990,1],[1032,1],[1046,1],[1048,2],[1151,2],[1240,2],[1325,2],[1466,2],[1572,2],[1582,2],[1589,1],[1591,2],[1594,2],[1610,1],[1622,2],[1660,1],[1667,2],[1747,1],[1749,1],[1869,2],[1872,2],[1875,2],[1966,2],[2046,2],[2053,1],[2055,2],[2058,2],[2074,1],[2095,2],[2167,2],[2259,1],[2319,1],[2346,1],[2348,2],[2450,1],[2472,1],[2484,1],[2540,2],[2597,1],[2651,2],[2764,1],[2818,2],[2924,2],[2941,1],[2974,1],[2976,1],[3025,1],[3062,1],[3070,1],[3077,1],[3101,1],[3122,1],[3138,1],[3140,3],[3165,1],[3197,3],[3220,1],[3387,1],[3427,1],[3463,1],[3520,1],[3554,1],[3667,1],[3700,1],[3805,1],[3807,1],[3865,1],[3929,1],[3981,1],[4035,1],[4119,1],[4237,2],[4240,2],[4243,2],[4300,1],[4517,1],[4564,1],[4566,1],[4657,1],[4674,1],[4689,1],[4759,2],[4828,1],[4896,1],[4898,2]]},"215":{"position":[[152,2],[224,2],[248,1],[261,1],[263,1],[290,2],[390,1],[448,2],[532,2],[672,2],[721,3],[725,2],[746,1],[756,1],[758,1],[850,1],[920,2],[923,3],[927,2],[938,1],[964,2],[1043,1],[1085,1],[1099,1],[1101,2],[1204,2],[1293,2],[1378,2],[1519,2],[1625,2],[1635,2],[1642,1],[1644,2],[1647,2],[1663,1],[1675,2],[1713,1],[1720,2],[1910,2],[1913,1],[1935,2],[2008,2],[2016,1],[2018,1],[2034,1],[2055,2],[2127,2],[2219,1],[2279,1],[2306,1],[2308,2],[2410,1],[2432,1],[2444,1],[2500,2],[2557,1],[2611,2],[2724,1],[2778,2],[2884,2],[2901,1],[2934,1],[2936,1],[2938,2],[2966,1],[3007,1],[3018,1],[3035,1],[3042,1],[3066,1],[3085,1],[3107,2],[3131,1],[3166,2],[3186,1],[3212,1],[3379,1],[3419,1],[3455,1],[3512,1],[3546,1],[3659,1],[3692,1],[3797,1],[3799,1],[3857,1],[3921,1],[3981,1],[4033,1],[4108,1],[4146,1],[4247,2],[4304,1],[4315,1],[4355,1],[4374,1],[4558,1],[4605,1],[4607,1],[4698,1],[4846,1],[4887,1],[4902,2],[4944,1],[4956,2],[4991,1],[5014,2],[5070,1],[5102,2],[5317,2],[5389,2],[5413,1],[5426,1],[5428,1],[5455,2],[5555,1],[5613,2],[5697,2],[5837,2],[5886,3],[5890,2],[5911,1],[5921,1],[5923,1],[6015,1],[6086,2],[6089,3],[6093,2],[6104,1],[6131,2],[6210,1],[6252,1],[6266,1],[6268,2],[6371,2],[6460,2],[6545,2],[6686,2],[6792,2],[6802,2],[6809,1],[6811,2],[6814,2],[6830,1],[6842,2],[6880,1],[6887,2],[7078,2],[7081,1],[7103,2],[7176,2],[7184,1],[7186,1],[7203,1],[7224,2],[7296,2],[7388,1],[7448,1],[7475,1],[7477,2],[7579,1],[7601,1],[7613,1],[7669,2],[7726,1],[7780,2],[7893,1],[7947,2],[8053,2],[8070,1],[8103,1],[8105,1],[8107,2],[8135,1],[8176,1],[8187,1],[8204,1],[8211,1],[8236,1],[8255,1],[8277,2],[8301,1],[8336,2],[8356,1],[8383,1],[8550,1],[8590,1],[8626,1],[8683,1],[8717,1],[8830,1],[8863,1],[8968,1],[8970,1],[9028,1],[9092,1],[9152,1],[9204,1],[9279,1],[9317,1],[9419,2],[9476,1],[9487,1],[9527,1],[9546,1],[9731,1],[9778,1],[9780,1],[9871,1],[10020,1],[10062,1],[10078,2],[10121,1],[10133,2],[10168,1],[10191,2],[10247,1],[10279,2]]},"221":{"position":[[435,1],[482,1],[484,1],[501,2],[504,1],[534,1],[546,1],[556,2],[559,1],[561,2],[576,1],[591,1],[603,1],[636,1],[638,1],[655,1],[657,1],[659,1],[661,1],[663,1],[665,2],[668,1],[703,1],[715,1],[725,2],[728,1],[730,2],[745,1],[760,1],[772,1],[805,1],[807,1],[845,1],[847,1],[849,1],[851,1],[853,1],[855,1],[857,1],[859,1],[1078,1],[1080,2],[1141,1],[1226,2],[1229,1],[1457,2],[1529,2],[1553,1],[1566,1],[1568,1],[1595,2],[1695,1],[1753,2],[1837,2],[1977,2],[2026,3],[2030,2],[2051,1],[2061,1],[2063,1],[2155,1],[2220,2],[2223,3],[2227,2],[2238,1],[2265,2],[2344,1],[2386,1],[2400,1],[2402,2],[2505,2],[2594,2],[2679,2],[2820,2],[2926,2],[2936,2],[2943,1],[2945,2],[2948,2],[2964,1],[2976,2],[3014,1],[3021,2],[3206,2],[3209,1],[3231,2],[3304,2],[3312,1],[3314,1],[3331,1],[3352,2],[3424,2],[3516,1],[3576,1],[3603,1],[3605,2],[3707,1],[3729,1],[3741,1],[3797,2],[3854,1],[3908,2],[4021,1],[4075,2],[4181,2],[4198,1],[4231,1],[4233,1],[4235,2],[4263,1],[4304,1],[4315,1],[4332,1],[4339,1],[4358,1],[4377,1],[4399,2],[4423,1],[4458,2],[4478,1],[4505,1],[4672,1],[4712,1],[4748,1],[4805,1],[4839,1],[4952,1],[4985,1],[5090,1],[5092,1],[5150,1],[5214,1],[5274,1],[5326,1],[5401,1],[5439,1],[5535,2],[5592,1],[5603,1],[5643,1],[5662,1],[5847,1],[5894,1],[5896,1],[5987,1],[6130,1],[6172,1],[6182,2],[6219,1],[6231,2],[6266,1],[6289,2],[6345,1],[6377,2],[6520,2],[6592,2],[6616,1],[6629,1],[6631,1],[6658,2],[6758,1],[6816,2],[6900,2],[7040,2],[7089,3],[7125,1],[7139,1],[7141,2],[7180,1],[7244,1],[7246,2],[7303,3],[7326,2],[7405,1],[7447,1],[7461,1],[7463,2],[7566,2],[7655,2],[7740,2],[7881,2],[7987,2],[7997,2],[8004,1],[8006,2],[8009,2],[8025,1],[8037,2],[8075,1],[8082,2],[8162,1],[8164,1],[8166,2],[8321,2],[8324,2],[8327,2],[8418,2],[8498,2],[8505,1],[8507,2],[8510,2],[8526,1],[8547,2],[8619,2],[8711,1],[8771,1],[8798,1],[8800,2],[8902,1],[8924,1],[8936,1],[8992,2],[9049,1],[9103,2],[9216,1],[9270,2],[9376,2],[9393,1],[9426,1],[9428,1],[9477,1],[9514,1],[9516,2],[9561,1],[9568,1],[9592,1],[9611,1],[9627,1],[9629,3],[9654,1],[9686,3],[9709,1],[9876,1],[9916,1],[9952,1],[10009,1],[10043,1],[10156,1],[10189,1],[10294,1],[10296,1],[10354,1],[10418,1],[10470,1],[10524,1],[10608,1],[10665,1],[10762,2],[10765,2],[10768,2],[10825,1],[11042,1],[11089,1],[11091,1],[11182,1],[11199,1],[11214,1],[11282,2],[11351,2],[11390,1],[11456,1],[11458,2],[11860,2],[11932,2],[11956,1],[11969,1],[11971,1],[11998,2],[12098,1],[12156,2],[12240,2],[12380,2],[12429,3],[12433,2],[12454,1],[12464,1],[12466,1],[12558,1],[12628,2],[12631,3],[12635,2],[12646,1],[12672,2],[12751,1],[12793,1],[12807,1],[12809,2],[12912,2],[13001,2],[13086,2],[13227,2],[13333,2],[13343,2],[13350,1],[13352,2],[13355,2],[13371,1],[13383,2],[13421,1],[13428,2],[13618,2],[13621,1],[13643,2],[13716,2],[13724,1],[13726,1],[13742,1],[13763,2],[13835,2],[13927,1],[13987,1],[14014,1],[14016,2],[14118,1],[14140,1],[14152,1],[14208,2],[14265,1],[14319,2],[14432,1],[14486,2],[14592,2],[14609,1],[14642,1],[14644,1],[14646,2],[14674,1],[14715,1],[14726,1],[14743,1],[14750,1],[14774,1],[14793,1],[14815,2],[14839,1],[14874,2],[14894,1],[14920,1],[15087,1],[15127,1],[15163,1],[15220,1],[15254,1],[15367,1],[15400,1],[15505,1],[15507,1],[15565,1],[15629,1],[15689,1],[15741,1],[15816,1],[15854,1],[15955,2],[16012,1],[16023,1],[16063,1],[16082,1],[16266,1],[16313,1],[16315,1],[16406,1],[16554,1],[16595,1],[16610,2],[16652,1],[16664,2],[16699,1],[16722,2],[16778,1],[16810,2],[16883,2],[16955,2],[16979,1],[16992,1],[16994,1],[17021,2],[17121,1],[17179,2],[17263,2],[17403,2],[17452,3],[17456,2],[17477,1],[17487,1],[17489,1],[17581,1],[17652,2],[17655,3],[17659,2],[17670,1],[17697,2],[17776,1],[17818,1],[17832,1],[17834,2],[17937,2],[18026,2],[18111,2],[18252,2],[18358,2],[18368,2],[18375,1],[18377,2],[18380,2],[18396,1],[18408,2],[18446,1],[18453,2],[18644,2],[18647,1],[18669,2],[18742,2],[18750,1],[18752,1],[18769,1],[18790,2],[18862,2],[18954,1],[19014,1],[19041,1],[19043,2],[19145,1],[19167,1],[19179,1],[19235,2],[19292,1],[19346,2],[19459,1],[19513,2],[19619,2],[19636,1],[19669,1],[19671,1],[19673,2],[19701,1],[19742,1],[19753,1],[19770,1],[19777,1],[19802,1],[19821,1],[19843,2],[19867,1],[19902,2],[19922,1],[19949,1],[20116,1],[20156,1],[20192,1],[20249,1],[20283,1],[20396,1],[20429,1],[20534,1],[20536,1],[20594,1],[20658,1],[20718,1],[20770,1],[20845,1],[20883,1],[20985,2],[21042,1],[21053,1],[21093,1],[21112,1],[21297,1],[21344,1],[21346,1],[21437,1],[21586,1],[21628,1],[21644,2],[21687,1],[21699,2],[21734,1],[21757,2],[21813,1],[21845,2],[21976,1],[22070,1]]},"223":{"position":[[93,1]]},"225":{"position":[[69,1]]},"230":{"position":[[404,2],[476,2],[500,1],[513,1],[515,1],[542,2],[642,1],[700,2],[784,2],[924,2],[973,3],[1010,1],[1023,1],[1025,1],[1027,1],[1091,1],[1093,2],[1150,3],[1173,2],[1252,1],[1294,1],[1308,1],[1310,2],[1413,2],[1502,2],[1587,2],[1728,2],[1834,2],[1844,2],[1851,1],[1853,2],[1856,2],[1872,1],[1884,2],[1922,1],[1929,2],[2010,1],[2012,1],[2130,2],[2133,2],[2136,2],[2227,2],[2307,2],[2314,1],[2316,2],[2319,2],[2335,1],[2356,2],[2428,2],[2520,1],[2580,1],[2607,1],[2609,2],[2711,1],[2733,1],[2745,1],[2801,2],[2858,1],[2912,2],[3025,1],[3079,2],[3185,2],[3202,1],[3235,1],[3237,1],[3287,1],[3324,1],[3332,1],[3339,1],[3363,1],[3382,1],[3398,1],[3400,3],[3425,1],[3457,3],[3480,1],[3647,1],[3687,1],[3723,1],[3780,1],[3814,1],[3927,1],[3960,1],[4065,1],[4067,1],[4125,1],[4189,1],[4241,1],[4295,1],[4379,1],[4496,2],[4499,2],[4502,2],[4559,1],[4776,1],[4823,1],[4825,1],[4916,1],[4934,1],[4949,1],[5017,2],[5087,1],[5153,1],[5155,2]]},"232":{"position":[[115,1],[134,2],[195,2],[267,2],[291,1],[304,1],[306,1],[333,2],[433,1],[491,2],[575,2],[715,2],[764,3],[768,2],[789,1],[799,1],[801,1],[893,1],[963,2],[966,3],[970,2],[981,1],[1008,2],[1087,1],[1129,1],[1143,1],[1145,2],[1248,2],[1337,2],[1422,2],[1563,2],[1669,2],[1679,2],[1686,1],[1688,2],[1691,2],[1707,1],[1719,2],[1757,1],[1764,2],[1954,2],[1957,1],[1979,2],[2052,2],[2060,1],[2062,1],[2079,1],[2100,2],[2172,2],[2264,1],[2324,1],[2351,1],[2353,2],[2455,1],[2477,1],[2489,1],[2545,2],[2602,1],[2656,2],[2769,1],[2823,2],[2929,2],[2946,1],[2979,1],[2981,1],[2983,2],[3011,1],[3052,1],[3063,1],[3080,1],[3087,1],[3111,1],[3130,1],[3152,2],[3176,1],[3211,2],[3231,1],[3258,1],[3425,1],[3465,1],[3501,1],[3558,1],[3592,1],[3705,1],[3738,1],[3843,1],[3845,1],[3903,1],[3967,1],[4027,1],[4079,1],[4154,1],[4192,1],[4293,2],[4350,1],[4361,1],[4401,1],[4420,1],[4605,1],[4652,1],[4654,1],[4745,1],[4893,1],[4935,1],[4950,2],[4992,1],[5004,2],[5039,1],[5062,2],[5118,1],[5150,2]]},"238":{"position":[[340,1],[387,1],[389,1],[406,2],[409,1],[441,1],[453,1],[463,2],[466,1],[468,2],[483,1],[498,1],[510,1],[543,1],[545,1],[562,1],[564,1],[566,1],[568,1],[570,1],[572,1],[574,1],[576,1],[777,1]]},"240":{"position":[[134,1]]},"245":{"position":[[127,1],[129,2],[154,1],[220,2],[223,1],[452,2],[524,2],[548,1],[561,1],[563,1],[590,2],[690,1],[748,2],[832,2],[972,2],[1021,3],[1025,2],[1046,1],[1056,1],[1058,1],[1150,1],[1210,2],[1213,3],[1217,2],[1228,1],[1254,2],[1333,1],[1375,1],[1389,1],[1391,2],[1494,2],[1583,2],[1668,2],[1809,2],[1915,2],[1925,2],[1932,1],[1934,2],[1937,2],[1953,1],[1965,2],[2003,1],[2010,2],[2190,2],[2193,1],[2215,2],[2288,2],[2296,1],[2298,1],[2314,1],[2335,2],[2407,2],[2499,1],[2559,1],[2586,1],[2588,2],[2690,1],[2712,1],[2724,1],[2780,2],[2837,1],[2891,2],[3004,1],[3058,2],[3164,2],[3181,1],[3214,1],[3216,1],[3218,2],[3246,1],[3287,1],[3298,1],[3315,1],[3322,1],[3346,1],[3365,1],[3377,2],[3401,1],[3436,2],[3456,1],[3482,1],[3649,1],[3689,1],[3725,1],[3782,1],[3816,1],[3929,1],[3962,1],[4067,1],[4069,1],[4127,1],[4191,1],[4251,1],[4303,1],[4378,1],[4416,1],[4507,2],[4564,1],[4575,1],[4615,1],[4634,1],[4818,1],[4865,1],[4867,1],[4958,1],[5096,1],[5137,1],[5152,2],[5194,1],[5206,2],[5241,1],[5254,2],[5300,1],[5332,2]]},"247":{"position":[[163,2],[235,2],[259,1],[272,1],[274,1],[301,2],[401,1],[459,2],[543,2],[683,2],[732,3],[769,1],[782,1],[784,1],[786,1],[846,1],[848,2],[905,3],[928,2],[1007,1],[1049,1],[1063,1],[1065,2],[1168,2],[1257,2],[1342,2],[1483,2],[1589,2],[1599,2],[1606,1],[1608,2],[1611,2],[1627,1],[1639,2],[1677,1],[1684,2],[1765,1],[1767,1],[1881,2],[1884,2],[1887,2],[1978,2],[2058,2],[2065,1],[2067,2],[2070,2],[2086,1],[2107,2],[2179,2],[2271,1],[2331,1],[2358,1],[2360,2],[2462,1],[2484,1],[2496,1],[2552,2],[2609,1],[2663,2],[2776,1],[2830,2],[2936,2],[2953,1],[2986,1],[2988,1],[3038,1],[3075,1],[3083,1],[3090,1],[3114,1],[3133,1],[3145,1],[3147,3],[3172,1],[3204,3],[3227,1],[3394,1],[3434,1],[3470,1],[3527,1],[3561,1],[3674,1],[3707,1],[3812,1],[3814,1],[3872,1],[3936,1],[3988,1],[4042,1],[4126,1],[4239,2],[4242,2],[4245,2],[4302,1],[4519,1],[4566,1],[4568,1],[4659,1],[4677,1],[4692,1],[4756,2],[4826,1],[4888,1],[4890,2],[5224,2],[5296,2],[5320,1],[5333,1],[5335,1],[5362,2],[5462,1],[5520,2],[5604,2],[5744,2],[5793,3],[5797,2],[5818,1],[5828,1],[5830,1],[5922,1],[5982,2],[5985,3],[5989,2],[6000,1],[6027,2],[6106,1],[6148,1],[6162,1],[6164,2],[6267,2],[6356,2],[6441,2],[6582,2],[6688,2],[6698,2],[6705,1],[6707,2],[6710,2],[6726,1],[6738,2],[6776,1],[6783,2],[6963,2],[6966,1],[6988,2],[7061,2],[7069,1],[7071,1],[7088,1],[7109,2],[7181,2],[7273,1],[7333,1],[7360,1],[7362,2],[7464,1],[7486,1],[7498,1],[7554,2],[7611,1],[7665,2],[7778,1],[7832,2],[7938,2],[7955,1],[7988,1],[7990,1],[7992,2],[8020,1],[8061,1],[8072,1],[8089,1],[8096,1],[8120,1],[8139,1],[8151,2],[8175,1],[8210,2],[8230,1],[8257,1],[8424,1],[8464,1],[8500,1],[8557,1],[8591,1],[8704,1],[8737,1],[8842,1],[8844,1],[8902,1],[8966,1],[9026,1],[9078,1],[9153,1],[9191,1],[9282,2],[9339,1],[9350,1],[9390,1],[9409,1],[9594,1],[9641,1],[9643,1],[9734,1],[9872,1],[9914,1],[9929,2],[9971,1],[9983,2],[10018,1],[10031,2],[10077,1],[10109,2]]},"257":{"position":[[77,2],[101,1],[114,1],[116,1],[143,2],[243,1],[301,2],[385,2],[525,2],[574,3],[585,1],[627,1],[641,1],[643,2],[746,2],[835,2],[920,2],[1061,2],[1167,2],[1177,2],[1184,1],[1186,2],[1189,2],[1205,1],[1217,2],[1255,1],[1257,2],[1349,1],[1409,1],[1436,1],[1438,2],[1540,1],[1562,1],[1574,1],[1630,2],[1687,1],[1741,2],[1854,1],[1908,2],[2014,2],[2031,1],[2064,1],[2066,1],[2164,1],[2204,1],[2240,1],[2297,1],[2331,1],[2444,1],[2477,1],[2582,1],[2584,1],[2642,1]]},"259":{"position":[[101,1],[103,3],[129,1],[131,3],[148,1],[238,2],[328,2],[335,1],[337,2],[340,2],[356,1],[367,1],[369,3],[395,1],[397,3],[414,1],[519,1],[577,1],[634,1],[681,1],[683,1],[774,1],[1254,1],[1256,3],[1282,1],[1397,1],[1487,2],[1696,2],[1703,1],[1705,2],[1708,2],[1724,1],[1735,1],[1737,3],[1763,1],[1878,1],[1983,1],[2160,1],[2217,1],[2264,1],[2266,1],[2357,1]]},"261":{"position":[[240,1],[287,1],[289,1],[306,2],[309,1],[341,1],[353,1],[363,2],[366,1],[368,2],[383,1],[398,1],[410,1],[443,1],[445,1],[462,1],[464,1],[466,1],[468,1],[470,1],[472,2],[475,1],[508,1],[519,1],[529,2],[532,1],[534,2],[549,1],[564,1],[575,1],[608,1],[610,1],[650,2],[653,1],[670,1],[672,1],[674,1],[676,1],[678,1],[680,2],[683,1],[713,1],[724,1],[734,2],[737,1],[739,2],[754,1],[769,1],[780,1],[813,1],[815,1],[855,2],[858,1],[875,1],[877,1],[879,1],[881,1],[883,1],[885,1],[887,1],[889,1],[1084,1],[1118,1],[1120,3],[1137,1],[1227,2],[1334,2],[1341,1],[1343,2],[1346,2],[1362,1],[1373,1],[1407,1],[1409,3],[1426,1],[1531,1],[1604,1],[1661,1],[1708,1],[1710,1],[1801,1],[2086,1],[2120,1],[2235,1],[2325,2],[2551,2],[2558,1],[2560,2],[2563,2],[2579,1],[2590,1],[2624,1],[2739,1],[2844,1],[3036,1],[3093,1],[3140,1],[3142,1],[3233,1]]},"273":{"position":[[1067,2]]},"275":{"position":[[18,1],[60,1],[99,1],[268,1]]},"279":{"position":[[511,1],[558,1],[560,1],[592,1],[604,1],[614,2],[617,1],[619,2],[634,1],[649,1],[661,1],[694,1],[696,1],[713,2],[716,1],[746,2],[749,2],[752,1],[793,1],[795,1],[797,1],[799,1],[801,1],[803,2],[806,1],[837,1],[851,1],[861,2],[864,2],[882,1],[892,2],[895,1],[897,2],[912,1],[927,1],[941,1],[974,1],[976,1],[993,1],[995,1],[997,2],[1015,1],[1048,1],[1050,1],[1067,1],[1069,1],[1071,1],[1073,1],[1075,1],[1077,1],[1079,1],[1081,1],[1282,1],[1377,1]]},"281":{"position":[[134,1]]},"283":{"position":[[69,1]]},"288":{"position":[[249,2],[321,2],[345,1],[358,1],[360,1],[387,2],[487,1],[545,2],[629,2],[769,2],[818,3],[854,1],[868,1],[870,1],[927,1],[929,2],[986,3],[1009,2],[1088,1],[1130,1],[1144,1],[1146,2],[1249,2],[1338,2],[1423,2],[1564,2],[1670,2],[1680,2],[1687,1],[1689,2],[1692,2],[1708,1],[1720,2],[1758,1],[1765,2],[1845,1],[1847,1],[1958,2],[1961,2],[1964,2],[2055,2],[2135,2],[2142,1],[2144,2],[2147,2],[2163,1],[2184,2],[2256,2],[2348,1],[2408,1],[2435,1],[2437,2],[2539,1],[2561,1],[2573,1],[2629,2],[2686,1],[2740,2],[2853,1],[2907,2],[3013,2],[3030,1],[3063,1],[3065,1],[3114,1],[3151,1],[3159,1],[3166,1],[3187,1],[3206,1],[3218,1],[3220,3],[3245,1],[3277,3],[3300,1],[3467,1],[3507,1],[3543,1],[3600,1],[3634,1],[3747,1],[3780,1],[3885,1],[3887,1],[3945,1],[4009,1],[4061,1],[4115,1],[4199,1],[4308,2],[4311,2],[4314,2],[4371,1],[4588,1],[4635,1],[4637,1],[4728,1],[4745,1],[4760,1],[4821,2],[4890,1],[4949,1],[4951,2],[5153,2],[5225,2],[5249,1],[5262,1],[5264,1],[5291,2],[5391,1],[5449,2],[5533,2],[5673,2],[5722,3],[5759,1],[5772,1],[5774,1],[5776,1],[5833,1],[5835,2],[5892,3],[5915,2],[5994,1],[6036,1],[6050,1],[6052,2],[6155,2],[6244,2],[6329,2],[6470,2],[6576,2],[6586,2],[6593,1],[6595,2],[6598,2],[6614,1],[6626,2],[6664,1],[6671,2],[6752,1],[6754,1],[6865,2],[6868,2],[6871,2],[6962,2],[7042,2],[7049,1],[7051,2],[7054,2],[7070,1],[7091,2],[7163,2],[7255,1],[7315,1],[7342,1],[7344,2],[7446,1],[7468,1],[7480,1],[7536,2],[7593,1],[7647,2],[7760,1],[7814,2],[7920,2],[7937,1],[7970,1],[7972,1],[8022,1],[8059,1],[8067,1],[8074,1],[8095,1],[8114,1],[8126,1],[8128,3],[8153,1],[8185,3],[8208,1],[8375,1],[8415,1],[8451,1],[8508,1],[8542,1],[8655,1],[8688,1],[8793,1],[8795,1],[8853,1],[8917,1],[8969,1],[9023,1],[9107,1],[9217,2],[9220,2],[9223,2],[9280,1],[9497,1],[9544,1],[9546,1],[9637,1],[9655,1],[9670,1],[9731,2],[9801,1],[9860,1],[9862,2],[10331,2],[10403,2],[10427,1],[10440,1],[10442,1],[10469,2],[10569,1],[10627,2],[10711,2],[10851,2],[10900,3],[10936,1],[10950,1],[10952,2],[10989,1],[11058,1],[11060,2],[11072,1],[11085,1],[11087,1],[11089,2],[11134,3],[11138,1],[11195,1],[11197,2],[11254,3],[11277,2],[11356,1],[11398,1],[11412,1],[11414,2],[11517,2],[11606,2],[11691,2],[11832,2],[11938,2],[11948,2],[11955,1],[11957,2],[11960,2],[11976,1],[11988,2],[12026,1],[12033,2],[12113,1],[12115,1],[12117,2],[12275,2],[12278,2],[12281,2],[12341,1],[12343,1],[12345,2],[12390,3],[12503,2],[12506,2],[12509,2],[12600,2],[12680,2],[12687,1],[12689,2],[12692,2],[12708,1],[12729,2],[12801,2],[12893,1],[12953,1],[12980,1],[12982,2],[13084,1],[13106,1],[13118,1],[13174,2],[13231,1],[13285,2],[13398,1],[13452,2],[13558,2],[13575,1],[13608,1],[13610,1],[13659,1],[13696,1],[13698,2],[13741,1],[13748,1],[13781,1],[13800,1],[13812,1],[13814,3],[13826,1],[13863,1],[13865,2],[13910,3],[13920,1],[13927,1],[13948,1],[13967,1],[13979,1],[13981,3],[14006,1],[14038,3],[14061,1],[14228,1],[14268,1],[14304,1],[14361,1],[14395,1],[14508,1],[14541,1],[14646,1],[14648,1],[14706,1],[14770,1],[14822,1],[14876,1],[14960,1],[15017,1],[15117,2],[15120,2],[15123,2],[15168,1],[15212,3],[15268,2],[15271,2],[15274,2],[15331,1],[15548,1],[15595,1],[15597,1],[15688,1],[15705,1],[15720,1],[15806,1],[15821,1],[15882,2],[15951,2],[15988,1],[16059,1],[16061,2],[16128,2],[16173,3],[16177,1],[16236,1],[16238,2]]},"290":{"position":[[227,1],[229,2],[260,1],[331,2],[334,2],[363,1],[437,2],[440,1]]},"306":{"position":[[576,1],[623,1],[625,1],[642,2],[645,1],[680,1],[692,1],[702,2],[705,1],[707,2],[722,1],[737,1],[749,1],[782,1],[784,1],[801,2],[804,1],[843,1],[845,1],[847,1],[849,1],[851,1],[853,2],[856,1],[887,1],[899,1],[909,2],[912,1],[914,2],[929,1],[944,1],[956,1],[989,1],[991,1],[1008,1],[1010,1],[1012,1],[1014,1],[1016,1],[1018,1],[1020,1],[1022,1],[1137,1],[1139,2],[1201,1],[1287,2],[1290,2],[1331,1],[1403,2],[1406,2],[1446,1],[1517,2],[1520,1],[1687,1]]},"308":{"position":[[93,1]]},"312":{"position":[[291,2],[363,2],[387,1],[400,1],[402,1],[429,2],[529,1],[587,2],[671,2],[811,2],[860,3],[864,2],[885,1],[895,1],[897,1],[989,1],[1060,2],[1063,3],[1067,2],[1078,1],[1104,2],[1183,1],[1225,1],[1239,1],[1241,2],[1344,2],[1433,2],[1518,2],[1659,2],[1765,2],[1775,2],[1782,1],[1784,2],[1787,2],[1803,1],[1815,2],[1853,1],[1860,2],[2051,2],[2054,1],[2076,2],[2149,2],[2157,1],[2159,1],[2175,1],[2196,2],[2268,2],[2360,1],[2420,1],[2447,1],[2449,2],[2551,1],[2573,1],[2585,1],[2641,2],[2698,1],[2752,2],[2865,1],[2919,2],[3025,2],[3042,1],[3075,1],[3077,1],[3079,2],[3107,1],[3148,1],[3159,1],[3176,1],[3183,1],[3208,1],[3227,1],[3249,2],[3273,1],[3308,2],[3328,1],[3354,1],[3521,1],[3561,1],[3597,1],[3654,1],[3688,1],[3801,1],[3834,1],[3939,1],[3941,1],[3999,1],[4063,1],[4123,1],[4175,1],[4250,1],[4288,1],[4390,2],[4447,1],[4458,1],[4498,1],[4517,1],[4701,1],[4748,1],[4750,1],[4841,1],[4990,1],[5031,1],[5047,2],[5090,1],[5102,2],[5137,1],[5160,2],[5216,1],[5248,2],[5321,2],[5393,2],[5417,1],[5430,1],[5432,1],[5459,2],[5559,1],[5617,2],[5701,2],[5841,2],[5890,3],[5894,2],[5915,1],[5925,1],[5927,1],[6019,1],[6089,2],[6092,3],[6096,2],[6107,1],[6133,2],[6212,1],[6254,1],[6268,1],[6270,2],[6373,2],[6462,2],[6547,2],[6688,2],[6794,2],[6804,2],[6811,1],[6813,2],[6816,2],[6832,1],[6844,2],[6882,1],[6889,2],[7079,2],[7082,1],[7104,2],[7177,2],[7185,1],[7187,1],[7203,1],[7224,2],[7296,2],[7388,1],[7448,1],[7475,1],[7477,2],[7579,1],[7601,1],[7613,1],[7669,2],[7726,1],[7780,2],[7893,1],[7947,2],[8053,2],[8070,1],[8103,1],[8105,1],[8107,2],[8135,1],[8176,1],[8187,1],[8204,1],[8211,1],[8235,1],[8254,1],[8276,2],[8300,1],[8335,2],[8355,1],[8381,1],[8548,1],[8588,1],[8624,1],[8681,1],[8715,1],[8828,1],[8861,1],[8966,1],[8968,1],[9026,1],[9090,1],[9150,1],[9202,1],[9277,1],[9315,1],[9416,2],[9473,1],[9484,1],[9524,1],[9543,1],[9727,1],[9774,1],[9776,1],[9867,1],[10015,1],[10056,1],[10071,2],[10113,1],[10125,2],[10160,1],[10183,2],[10239,1],[10271,2]]},"314":{"position":[[370,1],[417,1],[419,1],[436,2],[439,1],[474,1],[487,1],[497,2],[500,2],[513,1],[523,2],[526,1],[528,2],[543,1],[558,1],[571,1],[604,1],[606,1],[623,1],[625,1],[627,2],[640,1],[673,1],[675,1],[692,2],[695,1],[734,1],[736,1],[738,1],[740,1],[742,1],[744,2],[747,1],[778,1],[790,1],[800,2],[803,1],[805,2],[820,1],[835,1],[847,1],[880,1],[882,1],[899,1],[901,1],[903,1],[905,1],[907,1],[909,1],[911,1],[913,1]]},"316":{"position":[[473,1],[520,1],[522,1],[539,2],[542,1],[577,1],[590,1],[600,2],[603,2],[616,1],[632,1],[642,1],[652,2],[655,2],[670,1],[691,1],[715,1],[717,1],[719,1],[721,1],[723,2],[738,1],[753,1],[766,1],[799,1],[801,1],[818,1],[820,1],[822,2],[835,1],[868,1],[870,1],[887,2],[890,1],[929,1],[931,1],[933,1],[935,1],[937,1],[939,2],[942,1],[973,1],[985,1],[995,2],[998,1],[1000,2],[1015,1],[1030,1],[1042,1],[1075,1],[1077,1],[1094,1],[1096,1],[1098,1],[1100,1],[1102,1],[1104,1],[1106,1],[1108,1]]},"318":{"position":[[410,2],[482,2],[506,1],[519,1],[521,1],[548,2],[648,1],[706,2],[790,2],[930,2],[979,3],[1015,1],[1029,1],[1031,2],[1085,1],[1156,1],[1158,2],[1215,3],[1238,2],[1317,1],[1359,1],[1373,1],[1375,2],[1478,2],[1567,2],[1652,2],[1793,2],[1899,2],[1909,2],[1916,1],[1918,2],[1921,2],[1937,1],[1949,2],[1987,1],[1994,2],[2074,1],[2076,1],[2078,2],[2255,2],[2258,2],[2261,2],[2352,2],[2432,2],[2439,1],[2441,2],[2444,2],[2460,1],[2481,2],[2553,2],[2645,1],[2705,1],[2732,1],[2734,2],[2836,1],[2858,1],[2870,1],[2926,2],[2983,1],[3037,2],[3150,1],[3204,2],[3310,2],[3327,1],[3360,1],[3362,1],[3411,1],[3448,1],[3450,2],[3510,1],[3517,1],[3541,1],[3561,1],[3583,1],[3585,3],[3610,1],[3642,3],[3665,1],[3832,1],[3872,1],[3908,1],[3965,1],[3999,1],[4112,1],[4145,1],[4250,1],[4252,1],[4310,1],[4374,1],[4426,1],[4480,1],[4564,1],[4621,1],[4740,2],[4743,2],[4746,2],[4803,1],[5020,1],[5067,1],[5069,1],[5160,1],[5177,1],[5192,1],[5267,2],[5336,2],[5390,1],[5463,1],[5465,2],[5895,2],[5967,2],[5991,1],[6004,1],[6006,1],[6033,2],[6133,1],[6191,2],[6275,2],[6415,2],[6464,3],[6468,2],[6489,1],[6499,1],[6501,1],[6593,1],[6663,2],[6666,3],[6670,2],[6681,1],[6708,2],[6787,1],[6829,1],[6843,1],[6845,2],[6948,2],[7037,2],[7122,2],[7263,2],[7369,2],[7379,2],[7386,1],[7388,2],[7391,2],[7407,1],[7419,2],[7457,1],[7464,2],[7654,2],[7657,1],[7679,2],[7752,2],[7760,1],[7762,1],[7779,1],[7800,2],[7872,2],[7964,1],[8024,1],[8051,1],[8053,2],[8155,1],[8177,1],[8189,1],[8245,2],[8302,1],[8356,2],[8469,1],[8523,2],[8629,2],[8646,1],[8679,1],[8681,1],[8683,2],[8711,1],[8752,1],[8763,1],[8780,1],[8787,1],[8811,1],[8830,1],[8852,2],[8876,1],[8911,2],[8931,1],[8958,1],[9125,1],[9165,1],[9201,1],[9258,1],[9292,1],[9405,1],[9438,1],[9543,1],[9545,1],[9603,1],[9667,1],[9727,1],[9779,1],[9854,1],[9892,1],[9993,2],[10050,1],[10061,1],[10101,1],[10120,1],[10305,1],[10352,1],[10354,1],[10445,1],[10593,1],[10635,1],[10650,2],[10692,1],[10704,2],[10739,1],[10762,2],[10818,1],[10850,2],[11129,2],[11201,2],[11225,1],[11238,1],[11240,1],[11267,2],[11367,1],[11425,2],[11509,2],[11649,2],[11698,3],[11702,2],[11723,1],[11733,1],[11735,1],[11827,1],[11898,2],[11901,3],[11905,2],[11916,1],[11942,2],[12021,1],[12063,1],[12077,1],[12079,2],[12182,2],[12271,2],[12356,2],[12497,2],[12603,2],[12613,2],[12620,1],[12622,2],[12625,2],[12641,1],[12653,2],[12691,1],[12698,2],[12889,2],[12892,1],[12914,2],[12987,2],[12995,1],[12997,1],[13013,1],[13034,2],[13106,2],[13198,1],[13258,1],[13285,1],[13287,2],[13389,1],[13411,1],[13423,1],[13479,2],[13536,1],[13590,2],[13703,1],[13757,2],[13863,2],[13880,1],[13913,1],[13915,1],[13917,2],[13945,1],[13986,1],[13997,1],[14014,1],[14021,1],[14046,1],[14065,1],[14087,2],[14111,1],[14146,2],[14166,1],[14192,1],[14359,1],[14399,1],[14435,1],[14492,1],[14526,1],[14639,1],[14672,1],[14777,1],[14779,1],[14837,1],[14901,1],[14961,1],[15013,1],[15088,1],[15126,1],[15228,2],[15285,1],[15296,1],[15336,1],[15355,1],[15539,1],[15586,1],[15588,1],[15679,1],[15828,1],[15869,1],[15885,2],[15928,1],[15940,2],[15975,1],[15998,2],[16054,1],[16086,2]]},"328":{"position":[[485,1],[532,1],[534,1],[551,2],[554,1],[589,1],[601,1],[611,2],[614,2],[627,1],[637,2],[640,1],[642,2],[657,1],[672,1],[684,1],[717,1],[719,1],[736,1],[738,1],[740,2],[753,1],[786,1],[788,1],[805,1],[807,1],[809,1],[811,1],[813,1],[815,1],[817,1],[819,1],[934,1],[936,1],[1020,2],[1023,1],[1190,1]]},"330":{"position":[[93,1]]},"336":{"position":[[280,1],[327,1],[329,1],[346,2],[349,1],[384,1],[396,1],[407,1],[418,1],[420,1],[430,2],[433,2],[436,1],[457,1],[480,1],[482,1],[484,1],[486,1],[488,2],[501,1],[511,2],[514,1],[516,2],[531,1],[546,1],[558,1],[591,1],[593,1],[610,1],[612,1],[614,2],[627,1],[660,1],[662,1],[679,1],[681,1],[683,1],[685,1],[687,1],[689,1],[691,1],[693,1]]},"338":{"position":[[325,2],[397,2],[421,1],[434,1],[436,1],[463,2],[563,1],[621,2],[705,2],[845,2],[894,3],[898,2],[919,1],[929,1],[931,1],[1023,1],[1101,2],[1104,3],[1108,2],[1119,1],[1145,2],[1224,1],[1266,1],[1280,1],[1282,2],[1385,2],[1474,2],[1559,2],[1700,2],[1806,2],[1816,2],[1823,1],[1825,2],[1828,2],[1844,1],[1856,2],[1894,1],[1901,2],[2099,2],[2102,1],[2124,2],[2197,2],[2205,1],[2207,1],[2223,1],[2244,2],[2316,2],[2408,1],[2468,1],[2495,1],[2497,2],[2599,1],[2621,1],[2633,1],[2689,2],[2746,1],[2800,2],[2913,1],[2967,2],[3073,2],[3090,1],[3123,1],[3125,1],[3127,2],[3155,1],[3196,1],[3207,1],[3224,1],[3231,1],[3254,1],[3273,1],[3304,2],[3328,1],[3363,2],[3383,1],[3409,1],[3576,1],[3616,1],[3652,1],[3709,1],[3743,1],[3856,1],[3889,1],[3994,1],[3996,1],[4054,1],[4118,1],[4178,1],[4230,1],[4305,1],[4343,1],[4452,2],[4509,1],[4520,1],[4560,1],[4579,1],[4763,1],[4810,1],[4812,1],[4903,1],[5059,1],[5100,1],[5114,2],[5155,1],[5167,2],[5202,1],[5234,2],[5299,1],[5331,2]]},"345":{"position":[[177,1],[224,1],[226,1],[243,2],[246,1],[276,1],[288,1],[298,2],[301,1],[303,2],[318,1],[333,1],[345,1],[378,1],[380,1],[397,1],[399,1],[401,1],[403,1],[405,1],[407,2],[410,1],[445,1],[457,1],[467,2],[470,1],[472,2],[487,1],[502,1],[514,1],[547,1],[549,1],[566,2],[569,1],[607,1],[609,1],[611,1],[613,1],[615,1],[617,1],[619,1],[621,1],[682,1],[684,2],[749,1],[828,2],[831,2],[887,1],[953,2],[956,1],[1269,2],[1341,2],[1365,1],[1378,1],[1380,1],[1407,2],[1507,1],[1565,2],[1649,2],[1789,2],[1838,3],[1842,2],[1863,1],[1873,1],[1875,1],[1967,1],[2035,2],[2038,3],[2042,2],[2053,1],[2079,2],[2158,1],[2200,1],[2214,1],[2216,2],[2319,2],[2408,2],[2493,2],[2634,2],[2740,2],[2750,2],[2757,1],[2759,2],[2762,2],[2778,1],[2790,2],[2828,1],[2835,2],[3023,2],[3026,1],[3048,2],[3121,2],[3129,1],[3131,1],[3147,1],[3168,2],[3240,2],[3332,1],[3392,1],[3419,1],[3421,2],[3523,1],[3545,1],[3557,1],[3613,2],[3670,1],[3724,2],[3837,1],[3891,2],[3997,2],[4014,1],[4047,1],[4049,1],[4051,2],[4079,1],[4120,1],[4131,1],[4148,1],[4155,1],[4179,1],[4198,1],[4218,2],[4242,1],[4277,2],[4297,1],[4323,1],[4490,1],[4530,1],[4566,1],[4623,1],[4657,1],[4770,1],[4803,1],[4908,1],[4910,1],[4968,1],[5032,1],[5092,1],[5144,1],[5219,1],[5257,1],[5356,2],[5413,1],[5424,1],[5464,1],[5483,1],[5667,1],[5714,1],[5716,1],[5807,1],[5953,1],[5994,1],[6009,2],[6051,1],[6063,2],[6098,1],[6119,2],[6173,1],[6205,2]]},"347":{"position":[[179,1],[226,1],[228,1],[245,2],[248,1],[283,1],[295,1],[305,2],[308,2],[321,1],[332,1],[343,1],[345,1],[355,2],[358,2],[361,1],[382,1],[405,1],[407,1],[409,1],[411,1],[413,1],[415,2],[430,1],[445,1],[457,1],[490,1],[492,1],[509,2],[512,1],[550,1],[552,1],[554,2],[567,1],[600,1],[602,1],[619,2],[622,1],[660,1],[662,1],[664,1],[666,1],[668,1],[670,1],[672,1],[674,1],[909,1],[919,1],[929,1],[974,1],[985,1],[987,1],[1031,1],[1042,1],[1066,1],[1068,1],[1070,2],[1073,1],[1117,1],[1131,1],[1169,1],[1171,1],[1173,1],[1175,1],[1177,1],[1179,1],[1181,1],[1183,1]]},"355":{"position":[[605,1],[652,1],[654,1],[671,2],[674,1],[715,1],[727,1],[738,1],[749,1],[751,1],[761,2],[764,2],[767,1],[788,1],[811,1],[813,1],[815,1],[817,1],[819,2],[832,1],[842,2],[845,1],[847,2],[862,1],[877,1],[889,1],[922,1],[924,1],[941,1],[943,1],[945,2],[958,1],[991,1],[993,1],[1010,1],[1012,1],[1014,1],[1016,1],[1018,1],[1020,1],[1022,1],[1024,1],[1199,1],[1381,1],[1392,1]]},"359":{"position":[[93,1]]},"361":{"position":[[139,1]]},"367":{"position":[[457,1],[504,1],[506,1],[523,2],[526,1],[567,1],[579,1],[590,1],[601,1],[603,1],[613,2],[616,2],[619,1],[640,1],[663,1],[665,1],[667,1],[669,1],[671,2],[684,1],[694,2],[697,1],[699,2],[714,1],[729,1],[741,1],[774,1],[776,1],[793,2],[796,1],[837,1],[839,1],[841,2],[854,1],[887,1],[889,1],[906,2],[909,1],[950,1],[952,1],[954,1],[956,1],[958,1],[960,2],[963,1],[994,1],[1008,1],[1018,2],[1021,1],[1023,2],[1038,1],[1053,1],[1067,1],[1100,1],[1102,1],[1119,1],[1121,1],[1123,1],[1125,1],[1127,1],[1129,1],[1131,1],[1133,1]]},"369":{"position":[[273,2],[345,2],[369,1],[382,1],[384,1],[411,2],[511,1],[569,2],[653,2],[793,2],[842,3],[878,1],[892,1],[894,2],[937,1],[1011,2],[1053,1],[1125,1],[1127,2],[1184,3],[1207,2],[1286,1],[1328,1],[1342,1],[1344,2],[1447,2],[1536,2],[1621,2],[1762,2],[1868,2],[1878,2],[1885,1],[1887,2],[1890,2],[1906,1],[1918,2],[1956,1],[1963,2],[2043,1],[2045,1],[2047,2],[2215,2],[2218,1],[2220,2],[2386,2],[2389,2],[2392,2],[2483,2],[2563,2],[2570,1],[2572,2],[2575,2],[2591,1],[2612,2],[2684,2],[2776,1],[2836,1],[2863,1],[2865,2],[2967,1],[2989,1],[3001,1],[3057,2],[3114,1],[3168,2],[3281,1],[3335,2],[3441,2],[3458,1],[3491,1],[3493,1],[3542,1],[3579,1],[3581,2],[3630,1],[3637,1],[3661,1],[3682,1],[3705,2],[3708,2],[3756,1],[3763,1],[3787,1],[3808,1],[3830,1],[3832,3],[3857,1],[3889,3],[3912,1],[4079,1],[4119,1],[4155,1],[4212,1],[4246,1],[4359,1],[4392,1],[4497,1],[4499,1],[4557,1],[4621,1],[4673,1],[4727,1],[4811,1],[4868,1],[4978,2],[4991,1],[5099,2],[5102,2],[5105,2],[5162,1],[5379,1],[5426,1],[5428,1],[5519,1],[5536,1],[5551,1],[5700,2],[5769,2],[5812,1],[5887,2],[5890,2],[5932,1],[6006,1],[6008,2],[6209,2],[6281,2],[6305,1],[6318,1],[6320,1],[6347,2],[6447,1],[6505,2],[6589,2],[6729,2],[6778,3],[6782,2],[6803,1],[6813,1],[6815,1],[6907,1],[6980,2],[6983,3],[6987,2],[6998,1],[7024,2],[7103,1],[7145,1],[7159,1],[7161,2],[7264,2],[7353,2],[7438,2],[7579,2],[7685,2],[7695,2],[7702,1],[7704,2],[7707,2],[7723,1],[7735,2],[7773,1],[7780,2],[7973,2],[7976,1],[7998,2],[8071,2],[8079,1],[8081,1],[8097,1],[8118,2],[8190,2],[8282,1],[8342,1],[8369,1],[8371,2],[8473,1],[8495,1],[8507,1],[8563,2],[8620,1],[8674,2],[8787,1],[8841,2],[8947,2],[8964,1],[8997,1],[8999,1],[9001,2],[9029,1],[9070,1],[9081,1],[9098,1],[9105,1],[9129,1],[9150,1],[9173,2],[9197,1],[9232,2],[9252,1],[9278,1],[9445,1],[9485,1],[9521,1],[9578,1],[9612,1],[9725,1],[9758,1],[9863,1],[9865,1],[9923,1],[9987,1],[10047,1],[10099,1],[10174,1],[10212,1],[10316,2],[10373,1],[10384,1],[10424,1],[10443,1],[10627,1],[10674,1],[10676,1],[10767,1],[10918,1],[10959,1],[10974,2],[11016,1],[11030,2],[11067,1],[11091,2],[11148,1],[11180,2]]},"371":{"position":[[175,2],[247,2],[271,1],[284,1],[286,1],[313,2],[413,1],[471,2],[555,2],[695,2],[744,3],[780,1],[794,1],[796,2],[875,1],[967,2],[1047,1],[1137,1],[1139,2],[1196,3],[1219,2],[1298,1],[1340,1],[1354,1],[1356,2],[1459,2],[1548,2],[1633,2],[1774,2],[1880,2],[1890,2],[1897,1],[1899,2],[1902,2],[1918,1],[1930,2],[1968,1],[1975,2],[2055,1],[2057,1],[2059,2],[2281,2],[2284,1],[2286,2],[2508,2],[2511,2],[2514,2],[2605,2],[2685,2],[2692,1],[2694,2],[2697,2],[2713,1],[2734,2],[2806,2],[2898,1],[2958,1],[2985,1],[2987,2],[3089,1],[3111,1],[3123,1],[3179,2],[3236,1],[3290,2],[3403,1],[3457,2],[3563,2],[3580,1],[3613,1],[3615,1],[3664,1],[3701,1],[3703,2],[3788,1],[3795,1],[3837,1],[3856,1],[3881,2],[3884,2],[3970,1],[3977,1],[4018,1],[4037,1],[4062,1],[4064,3],[4089,1],[4121,3],[4144,1],[4311,1],[4351,1],[4387,1],[4444,1],[4478,1],[4591,1],[4624,1],[4729,1],[4731,1],[4789,1],[4853,1],[4905,1],[4959,1],[5043,1],[5100,1],[5264,2],[5277,1],[5441,2],[5444,2],[5447,2],[5504,1],[5721,1],[5768,1],[5770,1],[5861,1],[5878,1],[5893,1],[6078,2],[6147,2],[6226,1],[6319,2],[6322,2],[6402,1],[6494,1],[6496,2]]},"373":{"position":[[121,2],[193,2],[217,1],[230,1],[232,1],[259,2],[359,1],[417,2],[501,2],[641,2],[690,3],[694,2],[715,1],[725,1],[727,1],[819,1],[892,2],[895,3],[899,2],[910,1],[936,2],[1015,1],[1057,1],[1071,1],[1073,2],[1176,2],[1265,2],[1350,2],[1491,2],[1597,2],[1607,2],[1614,1],[1616,2],[1619,2],[1635,1],[1647,2],[1685,1],[1692,2],[1885,2],[1888,1],[1910,2],[1983,2],[1991,1],[1993,1],[2009,1],[2030,2],[2102,2],[2194,1],[2254,1],[2281,1],[2283,2],[2385,1],[2407,1],[2419,1],[2475,2],[2532,1],[2586,2],[2699,1],[2753,2],[2859,2],[2876,1],[2909,1],[2911,1],[2913,2],[2941,1],[2982,1],[2993,1],[3010,1],[3017,1],[3041,1],[3060,1],[3085,2],[3109,1],[3144,2],[3164,1],[3190,1],[3357,1],[3397,1],[3433,1],[3490,1],[3524,1],[3637,1],[3670,1],[3775,1],[3777,1],[3835,1],[3899,1],[3959,1],[4011,1],[4086,1],[4124,1],[4228,2],[4285,1],[4296,1],[4336,1],[4355,1],[4539,1],[4586,1],[4588,1],[4679,1],[4830,1],[4871,1],[4886,2],[4928,1],[4940,2],[4975,1],[5001,2],[5060,1],[5092,2]]},"379":{"position":[[385,1],[432,1],[434,1],[451,2],[454,1],[489,1],[501,1],[511,2],[514,2],[527,1],[537,2],[540,1],[542,2],[557,1],[572,1],[584,1],[617,1],[619,1],[636,1],[638,1],[640,2],[653,1],[686,1],[688,1],[705,1],[707,1],[709,1],[711,1],[713,1],[715,1],[717,1],[719,1]]},"385":{"position":[[204,2],[276,2],[300,1],[313,1],[315,1],[342,2],[442,1],[500,2],[584,2],[724,2],[773,3],[809,1],[823,1],[825,1],[903,1],[905,2],[962,3],[985,2],[1064,1],[1106,1],[1120,1],[1122,2],[1225,2],[1314,2],[1399,2],[1540,2],[1646,2],[1656,2],[1663,1],[1665,2],[1668,2],[1684,1],[1696,2],[1734,1],[1741,2],[1821,1],[1823,1],[1955,2],[1958,2],[1961,2],[2052,2],[2132,2],[2139,1],[2141,2],[2144,2],[2160,1],[2181,2],[2253,2],[2345,1],[2405,1],[2432,1],[2434,2],[2536,1],[2558,1],[2570,1],[2626,2],[2683,1],[2737,2],[2850,1],[2904,2],[3010,2],[3027,1],[3060,1],[3062,1],[3111,1],[3148,1],[3156,1],[3163,1],[3186,1],[3205,1],[3236,1],[3238,3],[3263,1],[3295,3],[3318,1],[3485,1],[3525,1],[3561,1],[3618,1],[3652,1],[3765,1],[3798,1],[3903,1],[3905,1],[3963,1],[4027,1],[4079,1],[4133,1],[4217,1],[4347,2],[4350,2],[4353,2],[4410,1],[4627,1],[4674,1],[4676,1],[4767,1],[4784,1],[4799,1],[4881,2],[4950,1],[5030,1],[5032,2]]},"387":{"position":[[225,2],[297,2],[321,1],[334,1],[336,1],[363,2],[463,1],[521,2],[605,2],[745,2],[794,3],[798,2],[819,1],[829,1],[831,1],[923,1],[1001,2],[1004,3],[1008,2],[1019,1],[1045,2],[1124,1],[1166,1],[1180,1],[1182,2],[1285,2],[1374,2],[1459,2],[1600,2],[1706,2],[1716,2],[1723,1],[1725,2],[1728,2],[1744,1],[1756,2],[1794,1],[1801,2],[1999,2],[2002,1],[2024,2],[2097,2],[2105,1],[2107,1],[2123,1],[2144,2],[2216,2],[2308,1],[2368,1],[2395,1],[2397,2],[2499,1],[2521,1],[2533,1],[2589,2],[2646,1],[2700,2],[2813,1],[2867,2],[2973,2],[2990,1],[3023,1],[3025,1],[3027,2],[3055,1],[3096,1],[3107,1],[3124,1],[3131,1],[3154,1],[3173,1],[3204,2],[3228,1],[3263,2],[3283,1],[3309,1],[3476,1],[3516,1],[3552,1],[3609,1],[3643,1],[3756,1],[3789,1],[3894,1],[3896,1],[3954,1],[4018,1],[4078,1],[4130,1],[4205,1],[4243,1],[4352,2],[4409,1],[4420,1],[4460,1],[4479,1],[4663,1],[4710,1],[4712,1],[4803,1],[4959,1],[5000,1],[5014,2],[5055,1],[5067,2],[5102,1],[5134,2],[5199,1],[5231,2],[5475,2],[5547,2],[5571,1],[5584,1],[5586,1],[5613,2],[5713,1],[5771,2],[5855,2],[5995,2],[6044,3],[6048,2],[6069,1],[6079,1],[6081,1],[6173,1],[6251,2],[6254,3],[6258,2],[6269,1],[6296,2],[6375,1],[6417,1],[6431,1],[6433,2],[6536,2],[6625,2],[6710,2],[6851,2],[6957,2],[6967,2],[6974,1],[6976,2],[6979,2],[6995,1],[7007,2],[7045,1],[7052,2],[7250,2],[7253,1],[7275,2],[7348,2],[7356,1],[7358,1],[7375,1],[7396,2],[7468,2],[7560,1],[7620,1],[7647,1],[7649,2],[7751,1],[7773,1],[7785,1],[7841,2],[7898,1],[7952,2],[8065,1],[8119,2],[8225,2],[8242,1],[8275,1],[8277,1],[8279,2],[8307,1],[8348,1],[8359,1],[8376,1],[8383,1],[8406,1],[8425,1],[8456,2],[8480,1],[8515,2],[8535,1],[8562,1],[8729,1],[8769,1],[8805,1],[8862,1],[8896,1],[9009,1],[9042,1],[9147,1],[9149,1],[9207,1],[9271,1],[9331,1],[9383,1],[9458,1],[9496,1],[9605,2],[9662,1],[9673,1],[9713,1],[9732,1],[9917,1],[9964,1],[9966,1],[10057,1],[10213,1],[10255,1],[10269,2],[10310,1],[10322,2],[10357,1],[10389,2],[10454,1],[10486,2]]},"397":{"position":[[1269,3]]},"399":{"position":[[284,3],[2135,3],[2620,1]]},"403":{"position":[[1340,1],[1407,1],[2546,1],[4054,1],[4118,1],[4734,1],[4799,1],[5060,1],[5062,1],[5146,2],[5149,1],[6375,1],[6442,1],[6444,1],[6510,1]]},"405":{"position":[[1647,1],[1761,1],[1878,1],[2019,1],[2147,1],[2286,1]]},"415":{"position":[[887,2]]},"419":{"position":[[382,1],[404,1],[406,1],[437,2],[440,2],[443,1],[475,1],[487,1],[497,2],[500,1],[502,1],[504,2],[507,1],[540,1],[552,1],[562,2],[565,2],[578,1],[589,1],[600,1],[602,1],[612,2],[615,2],[618,1],[638,1],[652,1],[664,3],[689,2],[711,1],[723,3],[748,1],[750,1],[752,1],[754,1],[756,1],[758,1],[760,1],[762,2],[765,1],[800,1],[812,1],[822,2],[825,2],[838,1],[848,2],[851,2],[866,1],[877,1],[888,1],[890,1],[911,1],[923,3],[948,1],[950,2],[953,1],[973,1],[987,1],[999,3],[1024,2],[1046,1],[1058,3],[1083,1],[1085,1],[1087,1],[1089,1],[1091,1],[1093,1],[1095,1],[1097,1],[1099,2],[1126,1],[1128,1],[1130,2],[1168,1],[1237,2],[1240,2],[1287,1],[1365,2],[1368,2],[1427,1],[1507,2],[1510,2],[1550,1],[1625,2],[1628,1],[1834,1],[1836,2],[1895,1],[1972,2],[1975,1],[2552,1],[2562,1],[2588,2],[2611,1],[2613,1],[2644,2],[2647,2],[2650,1],[2682,1],[2694,1],[2704,2],[2707,1],[2709,2],[2724,1],[2739,1],[2751,1],[2784,1],[2786,1],[2803,1],[2805,1],[2807,1],[2809,1],[2811,1],[2813,2],[2816,1],[2849,1],[2861,1],[2871,2],[2874,2],[2887,1],[2898,1],[2909,1],[2911,1],[2921,2],[2924,2],[2927,1],[2947,1],[2961,1],[2973,3],[2998,2],[3020,1],[3032,3],[3057,1],[3059,1],[3061,1],[3063,1],[3065,1],[3067,1],[3069,2],[3084,1],[3099,1],[3111,1],[3144,1],[3146,1],[3165,1],[3167,1],[3169,2],[3182,1],[3215,1],[3217,1],[3234,1],[3236,1],[3238,1],[3240,1],[3242,1],[3244,2],[3247,1],[3282,1],[3294,1],[3304,2],[3307,2],[3320,1],[3330,2],[3333,2],[3348,1],[3359,1],[3370,1],[3372,1],[3393,1],[3405,3],[3430,1],[3432,2],[3435,1],[3455,1],[3469,1],[3481,3],[3506,2],[3528,1],[3540,3],[3565,1],[3567,1],[3569,1],[3571,1],[3573,1],[3575,1],[3577,2],[3592,1],[3607,1],[3619,1],[3652,1],[3654,1],[3673,1],[3675,1],[3677,2],[3690,1],[3723,1],[3725,1],[3742,1],[3744,1],[3746,2],[3761,1],[3794,2],[3797,1],[3799,1],[3801,1],[3803,1],[3805,2],[3832,1]]},"421":{"position":[[104,1],[106,2],[148,1],[212,2],[215,1],[488,1],[510,1],[512,1],[543,2],[546,1],[548,1],[550,1],[600,1],[602,2],[649,1],[718,2],[721,1]]},"423":{"position":[[92,1],[94,1],[163,2],[166,1],[244,2],[247,1],[322,2],[325,1],[447,1],[449,1],[529,2],[532,1],[1643,1],[1665,1],[1667,1],[1698,2],[1701,2],[1704,1],[1736,1],[1748,1],[1758,2],[1761,1],[1763,2],[1778,1],[1793,1],[1805,1],[1838,1],[1840,1],[1857,1],[1859,1],[1861,1],[1863,1],[1865,1],[1867,2],[1870,1],[1903,1],[1915,1],[1925,2],[1928,2],[1941,1],[1952,1],[1963,1],[1965,1],[1975,2],[1978,2],[1981,1],[2001,1],[2015,1],[2027,3],[2052,2],[2074,1],[2086,3],[2111,1],[2113,1],[2115,1],[2117,1],[2119,1],[2121,1],[2123,2],[2138,1],[2153,1],[2165,1],[2198,1],[2200,1],[2219,1],[2221,1],[2223,2],[2236,1],[2269,1],[2271,1],[2288,2],[2291,1],[2331,1],[2333,1],[2335,1],[2337,1],[2339,1],[2341,2],[2344,1],[2379,1],[2391,1],[2401,2],[2404,2],[2417,1],[2427,2],[2430,2],[2445,1],[2456,1],[2467,1],[2469,1],[2490,1],[2502,3],[2527,1],[2529,2],[2532,1],[2552,1],[2566,1],[2578,3],[2603,2],[2625,1],[2637,3],[2662,1],[2664,1],[2666,1],[2668,1],[2670,1],[2672,1],[2674,2],[2689,1],[2704,1],[2716,1],[2749,1],[2751,1],[2770,1],[2772,1],[2774,2],[2787,1],[2820,1],[2822,1],[2839,2],[2842,1],[2882,1],[2884,1],[2886,2],[2901,1],[2934,2],[2937,1],[2939,1],[2941,1],[2943,1],[2945,2],[2972,1],[3092,1],[3094,2],[3160,1],[3240,2],[3243,1]]},"425":{"position":[[144,1],[146,2],[197,1],[207,4],[264,2],[267,1],[852,1],[874,1],[876,1],[907,2],[910,2],[913,1],[948,1],[960,1],[970,2],[973,1],[975,2],[990,1],[1005,1],[1017,1],[1050,1],[1052,1],[1069,2],[1072,1],[1102,2],[1105,1],[1107,1],[1109,1],[1111,1],[1113,1],[1115,1],[1117,2],[1144,1],[1223,1],[1225,2],[1293,1],[1365,2],[1368,1],[1837,2],[1899,1],[1901,1],[2097,1],[2099,4],[2168,1],[2170,2],[2238,1],[2310,2],[2313,1],[2337,1],[2712,1],[2761,1],[2763,2],[2942,1],[2944,2],[3010,2],[3257,1]]},"429":{"position":[[1154,1],[1201,1],[1203,1],[1220,2],[1223,1],[1256,1],[1268,1],[1278,2],[1281,2],[1294,1],[1305,1],[1316,1],[1318,1],[1328,2],[1331,2],[1334,1],[1354,1],[1368,1],[1391,2],[1413,1],[1436,1],[1438,1],[1440,1],[1442,1],[1444,1],[1446,1],[1448,2],[1463,1],[1478,1],[1490,1],[1523,1],[1525,1],[1544,2],[1547,1],[1588,1],[1590,1],[1592,2],[1605,1],[1638,1],[1640,1],[1657,1],[1659,1],[1661,1],[1663,1],[1665,1],[1667,1],[1669,1],[1671,1],[1903,1],[1917,1],[1919,1],[1999,1],[2001,2],[2058,3],[2067,2],[2147,1],[2149,1],[2283,2],[2286,2],[2289,2],[2380,2],[2460,2],[2467,1],[2469,2],[2472,2],[2488,1],[2537,1],[2574,1],[2582,1],[2589,1],[2625,1],[2644,1],[2664,1],[2666,3],[2691,1],[2723,3],[2727,1],[2779,1],[2833,1],[2917,1],[3049,2],[3052,2],[3055,2],[3112,1],[3205,1],[3252,1],[3254,1],[3345,1],[3362,1],[3377,1],[3461,2],[3530,1],[3612,1],[3614,2]]},"437":{"position":[[878,1],[925,1],[927,1],[944,2],[947,1],[982,1],[993,1],[1003,2],[1006,2],[1019,1],[1029,2],[1032,2],[1048,1],[1069,1],[1081,3],[1106,1],[1108,1],[1110,2],[1125,1],[1140,1],[1151,1],[1184,1],[1186,1],[1211,1],[1213,1],[1215,2],[1228,1],[1261,1],[1263,1],[1280,1],[1282,1],[1284,1],[1286,1],[1288,1],[1290,2],[1293,1],[1332,1],[1344,1],[1354,2],[1357,1],[1359,2],[1374,1],[1389,1],[1401,1],[1434,1],[1436,1],[1453,1],[1455,1],[1457,1],[1459,1],[1461,1],[1463,1],[1465,1],[1467,1],[1582,1],[1584,2],[1638,1],[1720,2],[1723,2],[1769,1],[1846,2],[1849,2],[1894,1],[1970,2],[1973,2],[2018,1],[2094,2],[2097,2],[2141,1],[2216,2],[2219,1],[2526,1],[2676,1]]},"439":{"position":[[114,1]]},"441":{"position":[[116,1]]},"445":{"position":[[291,2],[363,2],[387,1],[400,1],[402,1],[429,2],[529,1],[587,2],[671,2],[811,2],[860,3],[864,2],[885,1],[895,1],[897,1],[989,1],[1063,2],[1066,3],[1070,2],[1081,1],[1107,2],[1186,1],[1228,1],[1242,1],[1244,2],[1347,2],[1436,2],[1521,2],[1662,2],[1768,2],[1778,2],[1785,1],[1787,2],[1790,2],[1806,1],[1818,2],[1856,1],[1863,2],[2057,2],[2060,1],[2082,2],[2155,2],[2163,1],[2165,1],[2181,1],[2202,2],[2274,2],[2366,1],[2426,1],[2453,1],[2455,2],[2557,1],[2579,1],[2591,1],[2647,2],[2704,1],[2758,2],[2871,1],[2925,2],[3031,2],[3048,1],[3081,1],[3083,1],[3085,2],[3113,1],[3154,1],[3165,1],[3182,1],[3189,1],[3214,1],[3236,1],[3258,2],[3282,1],[3317,2],[3337,1],[3363,1],[3530,1],[3570,1],[3606,1],[3663,1],[3697,1],[3810,1],[3843,1],[3948,1],[3950,1],[4008,1],[4072,1],[4132,1],[4184,1],[4259,1],[4297,1],[4402,2],[4459,1],[4470,1],[4510,1],[4529,1],[4713,1],[4760,1],[4762,1],[4853,1],[5005,1],[5046,1],[5062,2],[5105,1],[5120,2],[5158,1],[5181,2],[5237,1],[5269,2],[5342,2],[5414,2],[5438,1],[5451,1],[5453,1],[5480,2],[5580,1],[5638,2],[5722,2],[5862,2],[5911,3],[5915,2],[5936,1],[5946,1],[5948,1],[6040,1],[6113,2],[6116,3],[6120,2],[6131,1],[6157,2],[6236,1],[6278,1],[6292,1],[6294,2],[6397,2],[6486,2],[6571,2],[6712,2],[6818,2],[6828,2],[6835,1],[6837,2],[6840,2],[6856,1],[6868,2],[6906,1],[6913,2],[7106,2],[7109,1],[7131,2],[7204,2],[7212,1],[7214,1],[7230,1],[7251,2],[7323,2],[7415,1],[7475,1],[7502,1],[7504,2],[7606,1],[7628,1],[7640,1],[7696,2],[7753,1],[7807,2],[7920,1],[7974,2],[8080,2],[8097,1],[8130,1],[8132,1],[8134,2],[8162,1],[8203,1],[8214,1],[8231,1],[8238,1],[8262,1],[8284,1],[8306,2],[8330,1],[8365,2],[8385,1],[8411,1],[8578,1],[8618,1],[8654,1],[8711,1],[8745,1],[8858,1],[8891,1],[8996,1],[8998,1],[9056,1],[9120,1],[9180,1],[9232,1],[9307,1],[9345,1],[9449,2],[9506,1],[9517,1],[9557,1],[9576,1],[9760,1],[9807,1],[9809,1],[9900,1],[10051,1],[10092,1],[10107,2],[10149,1],[10164,2],[10202,1],[10225,2],[10281,1],[10313,2]]},"447":{"position":[[409,1],[456,1],[458,1],[475,2],[478,1],[513,1],[524,1],[534,2],[537,2],[550,1],[560,2],[563,2],[579,1],[600,1],[612,3],[637,1],[639,2],[656,1],[674,1],[685,1],[687,1],[708,1],[720,3],[745,1],[747,2],[750,1],[770,1],[784,1],[796,3],[820,2],[842,1],[854,3],[879,1],[881,1],[883,1],[885,1],[887,1],[889,1],[891,2],[906,1],[921,1],[932,1],[965,1],[967,1],[992,1],[994,1],[996,2],[1009,1],[1042,1],[1044,1],[1061,1],[1063,1],[1065,1],[1067,1],[1069,1],[1071,2],[1074,1],[1113,1],[1125,1],[1135,2],[1138,1],[1140,2],[1155,1],[1170,1],[1182,1],[1215,1],[1217,1],[1234,1],[1236,1],[1238,1],[1240,1],[1242,1],[1244,1],[1246,1],[1248,1]]},"449":{"position":[[251,2],[323,2],[347,1],[360,1],[362,1],[389,2],[489,1],[547,2],[631,2],[771,2],[820,3],[824,2],[845,1],[855,1],[857,1],[949,1],[1024,2],[1027,3],[1031,2],[1042,1],[1068,2],[1147,1],[1189,1],[1203,1],[1205,2],[1308,2],[1397,2],[1482,2],[1623,2],[1729,2],[1739,2],[1746,1],[1748,2],[1751,2],[1767,1],[1779,2],[1817,1],[1824,2],[2019,2],[2022,1],[2044,2],[2117,2],[2125,1],[2127,1],[2143,1],[2164,2],[2236,2],[2328,1],[2388,1],[2415,1],[2417,2],[2519,1],[2541,1],[2553,1],[2609,2],[2666,1],[2720,2],[2833,1],[2887,2],[2993,2],[3010,1],[3043,1],[3045,1],[3047,2],[3075,1],[3116,1],[3127,1],[3144,1],[3151,1],[3176,1],[3199,1],[3221,2],[3245,1],[3280,2],[3300,1],[3326,1],[3493,1],[3533,1],[3569,1],[3626,1],[3660,1],[3773,1],[3806,1],[3911,1],[3913,1],[3971,1],[4035,1],[4095,1],[4147,1],[4222,1],[4260,1],[4366,2],[4423,1],[4434,1],[4474,1],[4493,1],[4677,1],[4724,1],[4726,1],[4817,1],[4970,1],[5011,1],[5027,2],[5070,1],[5086,2],[5125,1],[5148,2],[5204,1],[5236,2],[5466,2],[5538,2],[5562,1],[5575,1],[5577,1],[5604,2],[5704,1],[5762,2],[5846,2],[5986,2],[6035,3],[6039,2],[6060,1],[6070,1],[6072,1],[6164,1],[6238,2],[6241,3],[6245,2],[6256,1],[6283,2],[6362,1],[6404,1],[6418,1],[6420,2],[6523,2],[6612,2],[6697,2],[6838,2],[6944,2],[6954,2],[6961,1],[6963,2],[6966,2],[6982,1],[6994,2],[7032,1],[7039,2],[7233,2],[7236,1],[7258,2],[7331,2],[7339,1],[7341,1],[7358,1],[7379,2],[7451,2],[7543,1],[7603,1],[7630,1],[7632,2],[7734,1],[7756,1],[7768,1],[7824,2],[7881,1],[7935,2],[8048,1],[8102,2],[8208,2],[8225,1],[8258,1],[8260,1],[8262,2],[8290,1],[8331,1],[8342,1],[8359,1],[8366,1],[8390,1],[8413,1],[8435,2],[8459,1],[8494,2],[8514,1],[8541,1],[8708,1],[8748,1],[8784,1],[8841,1],[8875,1],[8988,1],[9021,1],[9126,1],[9128,1],[9186,1],[9250,1],[9310,1],[9362,1],[9437,1],[9475,1],[9580,2],[9637,1],[9648,1],[9688,1],[9707,1],[9892,1],[9939,1],[9941,1],[10032,1],[10184,1],[10226,1],[10241,2],[10283,1],[10299,2],[10338,1],[10361,2],[10417,1],[10449,2]]},"455":{"position":[[454,1],[501,1],[503,1],[520,2],[523,1],[556,1],[568,1],[578,2],[581,1],[583,2],[598,1],[613,1],[625,1],[658,1],[660,1],[677,1],[679,1],[681,1],[683,1],[685,1],[687,2],[690,1],[725,1],[737,1],[747,2],[750,1],[752,2],[767,1],[782,1],[794,1],[827,1],[829,1],[846,1],[848,1],[850,1],[852,1],[854,1],[856,1],[858,1],[860,1],[1061,1]]},"457":{"position":[[134,1]]},"463":{"position":[[460,1],[507,1],[509,1],[526,2],[529,1],[562,1],[574,1],[584,2],[587,1],[589,2],[604,1],[619,1],[631,1],[664,1],[666,1],[683,1],[685,1],[687,1],[689,1],[691,1],[693,2],[696,1],[731,1],[743,1],[753,2],[756,2],[769,1],[779,2],[782,1],[784,2],[799,1],[814,1],[826,1],[859,1],[861,1],[880,1],[882,1],[884,2],[897,1],[930,1],[932,1],[949,1],[951,1],[953,1],[955,1],[957,1],[959,1],[961,1],[963,1]]},"465":{"position":[[286,1],[333,1],[335,1],[352,2],[355,1],[388,1],[400,1],[410,2],[413,1],[415,2],[430,1],[445,1],[457,1],[490,1],[492,1],[509,1],[511,1],[513,1],[515,1],[517,1],[519,2],[522,1],[557,1],[569,1],[579,2],[582,2],[595,1],[606,1],[617,1],[619,1],[629,2],[632,2],[635,1],[655,1],[669,1],[692,2],[714,1],[737,1],[739,1],[741,1],[743,1],[745,1],[747,1],[749,2],[764,1],[779,1],[791,1],[824,1],[826,1],[845,1],[847,1],[849,2],[862,1],[895,1],[897,1],[914,1],[916,1],[918,1],[920,1],[922,1],[924,1],[926,1],[928,1]]},"467":{"position":[[179,2],[251,2],[275,1],[288,1],[290,1],[317,2],[417,1],[475,2],[559,2],[699,2],[748,3],[784,1],[798,1],[800,1],[864,1],[866,2],[923,3],[946,2],[1025,1],[1067,1],[1081,1],[1083,2],[1186,2],[1275,2],[1360,2],[1501,2],[1607,2],[1617,2],[1624,1],[1626,2],[1629,2],[1645,1],[1657,2],[1695,1],[1702,2],[1782,1],[1784,1],[1902,2],[1905,2],[1908,2],[1999,2],[2079,2],[2086,1],[2088,2],[2091,2],[2107,1],[2128,2],[2200,2],[2292,1],[2352,1],[2379,1],[2381,2],[2483,1],[2505,1],[2517,1],[2573,2],[2630,1],[2684,2],[2797,1],[2851,2],[2957,2],[2974,1],[3007,1],[3009,1],[3058,1],[3095,1],[3103,1],[3110,1],[3133,1],[3152,1],[3169,1],[3171,3],[3196,1],[3228,3],[3251,1],[3418,1],[3458,1],[3494,1],[3551,1],[3585,1],[3698,1],[3731,1],[3836,1],[3838,1],[3896,1],[3960,1],[4012,1],[4066,1],[4150,1],[4266,2],[4269,2],[4272,2],[4329,1],[4546,1],[4593,1],[4595,1],[4686,1],[4703,1],[4718,1],[4786,2],[4855,1],[4921,1],[4923,2]]},"469":{"position":[[181,2],[253,2],[277,1],[290,1],[292,1],[319,2],[419,1],[477,2],[561,2],[701,2],[750,3],[786,1],[800,1],[802,2],[864,1],[946,1],[948,2],[1005,3],[1028,2],[1107,1],[1149,1],[1163,1],[1165,2],[1268,2],[1357,2],[1442,2],[1583,2],[1689,2],[1699,2],[1706,1],[1708,2],[1711,2],[1727,1],[1739,2],[1777,1],[1784,2],[1864,1],[1866,1],[1868,2],[2064,2],[2067,2],[2070,2],[2161,2],[2241,2],[2248,1],[2250,2],[2253,2],[2269,1],[2290,2],[2362,2],[2454,1],[2514,1],[2541,1],[2543,2],[2645,1],[2667,1],[2679,1],[2735,2],[2792,1],[2846,2],[2959,1],[3013,2],[3119,2],[3136,1],[3169,1],[3171,1],[3220,1],[3257,1],[3259,2],[3327,1],[3334,1],[3361,1],[3380,1],[3411,1],[3413,3],[3438,1],[3470,3],[3493,1],[3660,1],[3700,1],[3736,1],[3793,1],[3827,1],[3940,1],[3973,1],[4078,1],[4080,1],[4138,1],[4202,1],[4254,1],[4308,1],[4392,1],[4449,1],[4587,2],[4590,2],[4593,2],[4650,1],[4867,1],[4914,1],[4916,1],[5007,1],[5024,1],[5039,1],[5125,2],[5194,2],[5256,1],[5340,1],[5342,2]]},"471":{"position":[[298,2],[370,2],[394,1],[407,1],[409,1],[436,2],[536,1],[594,2],[678,2],[818,2],[867,3],[871,2],[892,1],[902,1],[904,1],[996,1],[1074,2],[1077,3],[1081,2],[1092,1],[1118,2],[1197,1],[1239,1],[1253,1],[1255,2],[1358,2],[1447,2],[1532,2],[1673,2],[1779,2],[1789,2],[1796,1],[1798,2],[1801,2],[1817,1],[1829,2],[1867,1],[1874,2],[2072,2],[2075,1],[2097,2],[2170,2],[2178,1],[2180,1],[2196,1],[2217,2],[2289,2],[2381,1],[2441,1],[2468,1],[2470,2],[2572,1],[2594,1],[2606,1],[2662,2],[2719,1],[2773,2],[2886,1],[2940,2],[3046,2],[3063,1],[3096,1],[3098,1],[3100,2],[3128,1],[3169,1],[3180,1],[3197,1],[3204,1],[3227,1],[3246,1],[3277,2],[3301,1],[3336,2],[3356,1],[3382,1],[3549,1],[3589,1],[3625,1],[3682,1],[3716,1],[3829,1],[3862,1],[3967,1],[3969,1],[4027,1],[4091,1],[4151,1],[4203,1],[4278,1],[4316,1],[4425,2],[4482,1],[4493,1],[4533,1],[4552,1],[4736,1],[4783,1],[4785,1],[4876,1],[5032,1],[5073,1],[5087,2],[5128,1],[5140,2],[5175,1],[5207,2],[5272,1],[5304,2],[6115,2]]},"477":{"position":[[358,1],[405,1],[407,1],[424,2],[427,1],[462,1],[472,1],[482,2],[485,1],[487,2],[502,1],[517,1],[527,1],[560,1],[562,1],[579,2],[582,1],[612,2],[615,1],[617,1],[619,1],[621,1],[623,1],[625,1],[627,1],[629,1],[830,1]]},"479":{"position":[[134,1]]},"485":{"position":[[365,2],[437,2],[461,1],[474,1],[476,1],[503,2],[603,1],[661,2],[745,2],[885,2],[934,3],[970,1],[984,1],[986,2],[1030,1],[1102,1],[1104,2],[1161,3],[1184,2],[1263,1],[1305,1],[1319,1],[1321,2],[1424,2],[1513,2],[1598,2],[1739,2],[1845,2],[1855,2],[1862,1],[1864,2],[1867,2],[1883,1],[1895,2],[1933,1],[1940,2],[2020,1],[2022,1],[2024,2],[2192,2],[2195,2],[2198,2],[2289,2],[2369,2],[2376,1],[2378,2],[2381,2],[2397,1],[2418,2],[2490,2],[2582,1],[2642,1],[2669,1],[2671,2],[2773,1],[2795,1],[2807,1],[2863,2],[2920,1],[2974,2],[3087,1],[3141,2],[3247,2],[3264,1],[3297,1],[3299,1],[3348,1],[3385,1],[3387,2],[3437,1],[3444,1],[3465,1],[3482,1],[3511,1],[3513,3],[3538,1],[3570,3],[3593,1],[3760,1],[3800,1],[3836,1],[3893,1],[3927,1],[4040,1],[4073,1],[4178,1],[4180,1],[4238,1],[4302,1],[4354,1],[4408,1],[4492,1],[4549,1],[4659,2],[4662,2],[4665,2],[4722,1],[4939,1],[4986,1],[4988,1],[5079,1],[5096,1],[5111,1],[5187,2],[5256,2],[5300,1],[5374,1],[5376,2],[5635,1],[5637,2],[5785,1],[5851,2],[5854,1],[5983,1],[5985,2],[6160,1],[6244,2],[6247,1]]},"487":{"position":[[119,1],[137,1],[430,2],[502,2],[526,1],[539,1],[541,1],[568,2],[668,1],[726,2],[810,2],[950,2],[999,3],[1003,2],[1024,1],[1034,1],[1036,1],[1128,1],[1202,2],[1205,3],[1209,2],[1220,1],[1246,2],[1325,1],[1367,1],[1381,1],[1383,2],[1486,2],[1575,2],[1660,2],[1801,2],[1907,2],[1917,2],[1924,1],[1926,2],[1929,2],[1945,1],[1957,2],[1995,1],[2002,2],[2196,2],[2199,1],[2221,2],[2294,2],[2302,1],[2304,1],[2320,1],[2341,2],[2413,2],[2505,1],[2565,1],[2592,1],[2594,2],[2696,1],[2718,1],[2730,1],[2786,2],[2843,1],[2897,2],[3010,1],[3064,2],[3170,2],[3187,1],[3220,1],[3222,1],[3224,2],[3252,1],[3293,1],[3304,1],[3321,1],[3328,1],[3351,1],[3368,1],[3397,2],[3421,1],[3456,2],[3476,1],[3502,1],[3669,1],[3709,1],[3745,1],[3802,1],[3836,1],[3949,1],[3982,1],[4087,1],[4089,1],[4147,1],[4211,1],[4271,1],[4323,1],[4398,1],[4436,1],[4541,2],[4598,1],[4609,1],[4649,1],[4668,1],[4852,1],[4899,1],[4901,1],[4992,1],[5144,1],[5185,1],[5199,2],[5240,1],[5250,2],[5283,1],[5313,2],[5376,1],[5408,2]]},"493":{"position":[[391,1],[438,1],[440,1],[457,2],[460,1],[491,1],[502,1],[512,2],[515,2],[528,1],[538,2],[541,1],[543,2],[558,1],[573,1],[584,1],[617,1],[619,1],[636,1],[638,1],[640,2],[653,1],[686,1],[688,1],[705,1],[707,1],[709,1],[711,1],[713,1],[715,1],[717,1],[719,1],[920,1]]},"495":{"position":[[134,1]]},"501":{"position":[[369,1],[416,1],[418,1],[435,2],[438,1],[469,1],[480,1],[490,2],[493,2],[506,1],[516,2],[519,1],[521,2],[536,1],[551,1],[562,1],[595,1],[597,1],[614,1],[616,1],[618,2],[631,1],[664,1],[666,1],[683,1],[685,1],[687,1],[689,1],[691,1],[693,1],[695,1],[697,1]]},"503":{"position":[[908,1],[955,1],[957,1],[974,2],[977,1],[1008,1],[1019,1],[1029,2],[1032,2],[1045,1],[1055,2],[1058,2],[1078,1],[1099,1],[1121,1],[1123,2],[1144,1],[1155,1],[1166,1],[1168,1],[1189,1],[1212,1],[1214,2],[1217,1],[1238,1],[1260,1],[1262,1],[1264,1],[1266,1],[1268,1],[1270,2],[1285,1],[1300,1],[1311,1],[1344,1],[1346,1],[1363,1],[1365,1],[1367,2],[1380,1],[1413,1],[1415,1],[1432,1],[1434,1],[1436,1],[1438,1],[1440,1],[1442,1],[1444,1],[1446,1]]},"505":{"position":[[413,2],[485,2],[509,1],[522,1],[524,1],[551,2],[651,1],[709,2],[793,2],[933,2],[982,3],[1018,1],[1032,1],[1034,2],[1070,1],[1134,2],[1171,1],[1235,1],[1237,2],[1294,3],[1317,2],[1396,1],[1438,1],[1452,1],[1454,2],[1557,2],[1646,2],[1731,2],[1872,2],[1978,2],[1988,2],[1995,1],[1997,2],[2000,2],[2016,1],[2028,2],[2066,1],[2073,2],[2153,1],[2155,1],[2157,2],[2308,2],[2311,1],[2313,2],[2466,2],[2469,2],[2472,2],[2563,2],[2643,2],[2650,1],[2652,2],[2655,2],[2671,1],[2692,2],[2764,2],[2856,1],[2916,1],[2943,1],[2945,2],[3047,1],[3069,1],[3081,1],[3137,2],[3194,1],[3248,2],[3361,1],[3415,2],[3521,2],[3538,1],[3571,1],[3573,1],[3622,1],[3659,1],[3661,2],[3703,1],[3710,1],[3733,1],[3752,1],[3768,2],[3771,2],[3814,1],[3821,1],[3846,1],[3864,1],[3880,1],[3882,3],[3907,1],[3939,3],[3962,1],[4129,1],[4169,1],[4205,1],[4262,1],[4296,1],[4409,1],[4442,1],[4547,1],[4549,1],[4607,1],[4671,1],[4723,1],[4777,1],[4861,1],[4918,1],[5011,2],[5024,1],[5119,2],[5122,2],[5125,2],[5182,1],[5399,1],[5446,1],[5448,1],[5539,1],[5556,1],[5571,1],[5702,2],[5771,2],[5807,1],[5872,2],[5875,2],[5912,1],[5978,1],[5980,2],[6161,2],[6233,2],[6257,1],[6270,1],[6272,1],[6299,2],[6399,1],[6457,2],[6541,2],[6681,2],[6730,3],[6734,2],[6755,1],[6765,1],[6767,1],[6859,1],[6930,2],[6933,3],[6937,2],[6948,1],[6974,2],[7053,1],[7095,1],[7109,1],[7111,2],[7214,2],[7303,2],[7388,2],[7529,2],[7635,2],[7645,2],[7652,1],[7654,2],[7657,2],[7673,1],[7685,2],[7723,1],[7730,2],[7921,2],[7924,1],[7946,2],[8019,2],[8027,1],[8029,1],[8045,1],[8066,2],[8138,2],[8230,1],[8290,1],[8317,1],[8319,2],[8421,1],[8443,1],[8455,1],[8511,2],[8568,1],[8622,2],[8735,1],[8789,2],[8895,2],[8912,1],[8945,1],[8947,1],[8949,2],[8977,1],[9018,1],[9029,1],[9046,1],[9053,1],[9076,1],[9103,1],[9119,2],[9143,1],[9178,2],[9198,1],[9224,1],[9391,1],[9431,1],[9467,1],[9524,1],[9558,1],[9671,1],[9704,1],[9809,1],[9811,1],[9869,1],[9933,1],[9993,1],[10045,1],[10120,1],[10158,1],[10260,2],[10317,1],[10328,1],[10368,1],[10387,1],[10571,1],[10618,1],[10620,1],[10711,1],[10860,1],[10901,1],[10915,2],[10956,1],[10976,2],[11019,1],[11036,2],[11086,1],[11118,2],[11576,2],[11648,2],[11672,1],[11685,1],[11687,1],[11714,2],[11814,1],[11872,2],[11956,2],[12096,2],[12145,3],[12149,2],[12170,1],[12180,1],[12182,1],[12274,1],[12344,2],[12347,3],[12351,2],[12362,1],[12389,2],[12468,1],[12510,1],[12524,1],[12526,2],[12629,2],[12718,2],[12803,2],[12944,2],[13050,2],[13060,2],[13067,1],[13069,2],[13072,2],[13088,1],[13100,2],[13138,1],[13145,2],[13335,2],[13338,1],[13360,2],[13433,2],[13441,1],[13443,1],[13460,1],[13481,2],[13553,2],[13645,1],[13705,1],[13732,1],[13734,2],[13836,1],[13858,1],[13870,1],[13926,2],[13983,1],[14037,2],[14150,1],[14204,2],[14310,2],[14327,1],[14360,1],[14362,1],[14364,2],[14392,1],[14433,1],[14444,1],[14461,1],[14468,1],[14491,1],[14517,1],[14533,2],[14557,1],[14592,2],[14612,1],[14639,1],[14806,1],[14846,1],[14882,1],[14939,1],[14973,1],[15086,1],[15119,1],[15224,1],[15226,1],[15284,1],[15348,1],[15408,1],[15460,1],[15535,1],[15573,1],[15674,2],[15731,1],[15742,1],[15782,1],[15801,1],[15986,1],[16033,1],[16035,1],[16126,1],[16274,1],[16316,1],[16330,2],[16371,1],[16390,2],[16432,1],[16449,2],[16499,1],[16531,2],[16682,2],[16754,2],[16778,1],[16791,1],[16793,1],[16820,2],[16920,1],[16978,2],[17062,2],[17202,2],[17251,3],[17255,2],[17276,1],[17286,1],[17288,1],[17380,1],[17453,2],[17456,3],[17460,2],[17471,1],[17497,2],[17576,1],[17618,1],[17632,1],[17634,2],[17737,2],[17826,2],[17911,2],[18052,2],[18158,2],[18168,2],[18175,1],[18177,2],[18180,2],[18196,1],[18208,2],[18246,1],[18253,2],[18446,2],[18449,1],[18471,2],[18544,2],[18552,1],[18554,1],[18570,1],[18591,2],[18663,2],[18755,1],[18815,1],[18842,1],[18844,2],[18946,1],[18968,1],[18980,1],[19036,2],[19093,1],[19147,2],[19260,1],[19314,2],[19420,2],[19437,1],[19470,1],[19472,1],[19474,2],[19502,1],[19543,1],[19554,1],[19571,1],[19578,1],[19603,1],[19630,1],[19646,2],[19670,1],[19705,2],[19725,1],[19751,1],[19918,1],[19958,1],[19994,1],[20051,1],[20085,1],[20198,1],[20231,1],[20336,1],[20338,1],[20396,1],[20460,1],[20520,1],[20572,1],[20647,1],[20685,1],[20789,2],[20846,1],[20857,1],[20897,1],[20916,1],[21100,1],[21147,1],[21149,1],[21240,1],[21391,1],[21432,1],[21448,2],[21491,1],[21511,2],[21554,1],[21571,2],[21621,1],[21653,2],[21726,2],[21798,2],[21822,1],[21835,1],[21837,1],[21864,2],[21964,1],[22022,2],[22106,2],[22246,2],[22295,3],[22299,2],[22320,1],[22330,1],[22332,1],[22424,1],[22496,2],[22499,3],[22503,2],[22514,1],[22540,2],[22619,1],[22661,1],[22675,1],[22677,2],[22780,2],[22869,2],[22954,2],[23095,2],[23201,2],[23211,2],[23218,1],[23220,2],[23223,2],[23239,1],[23251,2],[23289,1],[23296,2],[23488,2],[23491,1],[23513,2],[23586,2],[23594,1],[23596,1],[23612,1],[23633,2],[23705,2],[23797,1],[23857,1],[23884,1],[23886,2],[23988,1],[24010,1],[24022,1],[24078,2],[24135,1],[24189,2],[24302,1],[24356,2],[24462,2],[24479,1],[24512,1],[24514,1],[24516,2],[24544,1],[24585,1],[24596,1],[24613,1],[24620,1],[24645,1],[24671,1],[24687,2],[24711,1],[24746,2],[24766,1],[24792,1],[24959,1],[24999,1],[25035,1],[25092,1],[25126,1],[25239,1],[25272,1],[25377,1],[25379,1],[25437,1],[25501,1],[25561,1],[25613,1],[25688,1],[25726,1],[25829,2],[25886,1],[25897,1],[25937,1],[25956,1],[26140,1],[26187,1],[26189,1],[26280,1],[26430,1],[26471,1],[26487,2],[26530,1],[26549,2],[26591,1],[26608,2],[26658,1],[26690,2]]},"511":{"position":[[368,1],[415,1],[417,1],[434,2],[437,1],[472,1],[484,1],[494,2],[497,1],[499,2],[514,1],[529,1],[541,1],[574,1],[576,1],[593,1],[595,1],[597,1],[599,1],[601,1],[603,1],[605,1],[607,1],[808,1]]},"513":{"position":[[134,1]]},"519":{"position":[[296,1],[343,1],[345,1],[362,2],[365,1],[400,1],[412,1],[422,2],[425,1],[427,2],[442,1],[457,1],[469,1],[502,1],[504,1],[543,1],[545,1],[547,1],[549,1],[551,1],[553,2],[556,1],[587,1],[599,1],[609,2],[612,1],[614,2],[629,1],[644,1],[656,1],[689,1],[691,1],[708,1],[710,1],[712,1],[714,1],[716,1],[718,1],[720,1],[722,1]]},"521":{"position":[[188,2],[260,2],[284,1],[297,1],[299,1],[326,2],[426,1],[484,2],[568,2],[708,2],[757,3],[793,1],[807,1],[809,1],[875,1],[877,2],[934,3],[957,2],[1036,1],[1078,1],[1092,1],[1094,2],[1197,2],[1286,2],[1371,2],[1512,2],[1618,2],[1628,2],[1635,1],[1637,2],[1640,2],[1656,1],[1668,2],[1706,1],[1713,2],[1793,1],[1795,1],[1915,2],[1918,2],[1921,2],[2012,2],[2092,2],[2099,1],[2101,2],[2104,2],[2120,1],[2141,2],[2213,2],[2305,1],[2365,1],[2392,1],[2394,2],[2496,1],[2518,1],[2530,1],[2586,2],[2643,1],[2697,2],[2810,1],[2864,2],[2970,2],[2987,1],[3020,1],[3022,1],[3071,1],[3108,1],[3116,1],[3123,1],[3148,1],[3167,1],[3184,1],[3186,3],[3211,1],[3243,3],[3266,1],[3433,1],[3473,1],[3509,1],[3566,1],[3600,1],[3713,1],[3746,1],[3851,1],[3853,1],[3911,1],[3975,1],[4027,1],[4081,1],[4165,1],[4283,2],[4286,2],[4289,2],[4346,1],[4563,1],[4610,1],[4612,1],[4703,1],[4720,1],[4735,1],[4805,2],[4874,1],[4942,1],[4944,2]]},"523":{"position":[[521,2],[593,2],[617,1],[630,1],[632,1],[659,2],[759,1],[817,2],[901,2],[1041,2],[1090,3],[1126,1],[1140,1],[1142,2],[1196,1],[1285,1],[1287,2],[1344,3],[1367,2],[1446,1],[1488,1],[1502,1],[1504,2],[1607,2],[1696,2],[1781,2],[1922,2],[2028,2],[2038,2],[2045,1],[2047,2],[2050,2],[2066,1],[2078,2],[2116,1],[2123,2],[2203,1],[2205,1],[2207,2],[2402,2],[2405,2],[2408,2],[2499,2],[2579,2],[2586,1],[2588,2],[2591,2],[2607,1],[2628,2],[2700,2],[2792,1],[2852,1],[2879,1],[2881,2],[2983,1],[3005,1],[3017,1],[3073,2],[3130,1],[3184,2],[3297,1],[3351,2],[3457,2],[3474,1],[3507,1],[3509,1],[3558,1],[3595,1],[3597,2],[3657,1],[3664,1],[3698,1],[3717,1],[3748,1],[3750,3],[3775,1],[3807,3],[3830,1],[3997,1],[4037,1],[4073,1],[4130,1],[4164,1],[4277,1],[4310,1],[4415,1],[4417,1],[4475,1],[4539,1],[4591,1],[4645,1],[4729,1],[4786,1],[4923,2],[4926,2],[4929,2],[4986,1],[5203,1],[5250,1],[5252,1],[5343,1],[5360,1],[5375,1],[5468,2],[5537,2],[5591,1],[5682,1],[5684,2]]},"525":{"position":[[358,2],[430,2],[454,1],[467,1],[469,1],[496,2],[596,1],[654,2],[738,2],[878,2],[927,3],[931,2],[952,1],[962,1],[964,1],[1056,1],[1136,2],[1139,3],[1143,2],[1154,1],[1180,2],[1259,1],[1301,1],[1315,1],[1317,2],[1420,2],[1509,2],[1594,2],[1735,2],[1841,2],[1851,2],[1858,1],[1860,2],[1863,2],[1879,1],[1891,2],[1929,1],[1936,2],[2136,2],[2139,1],[2161,2],[2234,2],[2242,1],[2244,1],[2260,1],[2281,2],[2353,2],[2445,1],[2505,1],[2532,1],[2534,2],[2636,1],[2658,1],[2670,1],[2726,2],[2783,1],[2837,2],[2950,1],[3004,2],[3110,2],[3127,1],[3160,1],[3162,1],[3164,2],[3192,1],[3233,1],[3244,1],[3261,1],[3268,1],[3293,1],[3312,1],[3343,2],[3367,1],[3402,2],[3422,1],[3448,1],[3615,1],[3655,1],[3691,1],[3748,1],[3782,1],[3895,1],[3928,1],[4033,1],[4035,1],[4093,1],[4157,1],[4217,1],[4269,1],[4344,1],[4382,1],[4493,2],[4550,1],[4561,1],[4601,1],[4620,1],[4804,1],[4851,1],[4853,1],[4944,1],[5102,1],[5143,1],[5159,2],[5202,1],[5214,2],[5249,1],[5281,2],[5346,1],[5378,2]]},"531":{"position":[[327,1],[374,1],[376,1],[393,2],[396,1],[427,1],[438,1],[448,2],[451,1],[453,2],[468,1],[483,1],[494,1],[527,1],[529,1],[546,1],[548,1],[550,1],[552,1],[554,1],[556,1],[558,1],[560,1],[761,1]]},"533":{"position":[[134,1]]},"537":{"position":[[267,2],[339,2],[363,1],[376,1],[378,1],[405,2],[505,1],[563,2],[647,2],[787,2],[836,3],[872,1],[886,1],[888,1],[947,1],[1005,1],[1007,2],[1064,3],[1087,2],[1166,1],[1208,1],[1222,1],[1224,2],[1327,2],[1416,2],[1501,2],[1642,2],[1748,2],[1758,2],[1765,1],[1767,2],[1770,2],[1786,1],[1798,2],[1836,1],[1843,2],[1923,1],[1925,1],[2037,2],[2040,1],[2152,2],[2155,2],[2158,2],[2249,2],[2329,2],[2336,1],[2338,2],[2341,2],[2357,1],[2378,2],[2450,2],[2542,1],[2602,1],[2629,1],[2631,2],[2733,1],[2755,1],[2767,1],[2823,2],[2880,1],[2934,2],[3047,1],[3101,2],[3207,2],[3224,1],[3257,1],[3259,1],[3308,1],[3345,1],[3353,1],[3360,1],[3384,1],[3402,1],[3413,2],[3422,1],[3429,1],[3453,1],[3471,1],[3482,1],[3484,3],[3509,1],[3541,3],[3564,1],[3731,1],[3771,1],[3807,1],[3864,1],[3898,1],[4011,1],[4044,1],[4149,1],[4151,1],[4209,1],[4273,1],[4325,1],[4379,1],[4463,1],[4573,2],[4639,2],[4642,2],[4645,2],[4702,1],[4919,1],[4966,1],[4968,1],[5059,1],[5076,1],[5091,1],[5211,2],[5280,1],[5340,2],[5343,1],[5403,1],[5405,2]]},"539":{"position":[[242,1],[289,1],[291,1],[308,2],[311,1],[342,1],[353,1],[364,1],[375,1],[377,1],[387,2],[390,2],[393,1],[413,1],[427,1],[439,3],[463,2],[485,1],[497,3],[526,1],[528,1],[530,1],[532,1],[534,1],[536,2],[548,1],[558,2],[561,1],[563,2],[578,1],[593,1],[604,1],[637,1],[639,1],[655,1],[657,1],[659,2],[671,1],[704,1],[706,1],[723,1],[725,1],[727,1],[729,1],[731,1],[733,2],[736,1],[766,1],[782,1],[792,2],[795,1],[797,2],[812,1],[827,1],[843,1],[876,1],[878,1],[895,1],[897,1],[899,1],[901,1],[903,1],[905,1],[907,1],[909,1]]},"541":{"position":[[274,2],[346,2],[370,1],[383,1],[385,1],[412,2],[512,1],[570,2],[654,2],[794,2],[843,3],[879,1],[893,1],[895,1],[952,1],[1008,1],[1010,2],[1067,3],[1090,2],[1169,1],[1211,1],[1225,1],[1227,2],[1330,2],[1419,2],[1504,2],[1645,2],[1751,2],[1761,2],[1768,1],[1770,2],[1773,2],[1789,1],[1801,2],[1839,1],[1846,2],[1926,1],[1928,1],[2038,2],[2041,1],[2151,2],[2154,2],[2157,2],[2248,2],[2328,2],[2335,1],[2337,2],[2340,2],[2356,1],[2377,2],[2449,2],[2541,1],[2601,1],[2628,1],[2630,2],[2732,1],[2754,1],[2766,1],[2822,2],[2879,1],[2933,2],[3046,1],[3100,2],[3206,2],[3223,1],[3256,1],[3258,1],[3307,1],[3344,1],[3352,1],[3359,1],[3381,1],[3399,1],[3410,2],[3419,1],[3426,1],[3448,1],[3466,1],[3477,1],[3479,3],[3504,1],[3536,3],[3559,1],[3726,1],[3766,1],[3802,1],[3859,1],[3893,1],[4006,1],[4039,1],[4144,1],[4146,1],[4204,1],[4268,1],[4320,1],[4374,1],[4458,1],[4566,2],[4630,2],[4633,2],[4636,2],[4693,1],[4910,1],[4957,1],[4959,1],[5050,1],[5067,1],[5082,1],[5198,2],[5267,1],[5325,2],[5328,1],[5386,1],[5388,2]]},"543":{"position":[[285,2],[357,2],[381,1],[394,1],[396,1],[423,2],[523,1],[581,2],[665,2],[805,2],[854,3],[890,1],[904,1],[906,1],[971,1],[973,2],[1030,3],[1053,2],[1132,1],[1174,1],[1188,1],[1190,2],[1293,2],[1382,2],[1467,2],[1608,2],[1714,2],[1724,2],[1731,1],[1733,2],[1736,2],[1752,1],[1764,2],[1802,1],[1809,2],[1889,1],[1891,1],[2010,2],[2013,2],[2016,2],[2107,2],[2187,2],[2194,1],[2196,2],[2199,2],[2215,1],[2236,2],[2308,2],[2400,1],[2460,1],[2487,1],[2489,2],[2591,1],[2613,1],[2625,1],[2681,2],[2738,1],[2792,2],[2905,1],[2959,2],[3065,2],[3082,1],[3115,1],[3117,1],[3166,1],[3203,1],[3211,1],[3218,1],[3243,1],[3266,1],[3278,1],[3280,3],[3305,1],[3337,3],[3360,1],[3527,1],[3567,1],[3603,1],[3660,1],[3694,1],[3807,1],[3840,1],[3945,1],[3947,1],[4005,1],[4069,1],[4121,1],[4175,1],[4259,1],[4376,2],[4379,2],[4382,2],[4439,1],[4656,1],[4703,1],[4705,1],[4796,1],[4813,1],[4828,1],[4897,2],[4966,1],[5033,1],[5035,2]]},"545":{"position":[[131,2],[203,2],[227,1],[240,1],[242,1],[269,2],[369,1],[427,2],[511,2],[651,2],[700,3],[704,2],[725,1],[735,1],[737,1],[829,1],[888,2],[891,3],[895,2],[906,1],[932,2],[1011,1],[1053,1],[1067,1],[1069,2],[1172,2],[1261,2],[1346,2],[1487,2],[1593,2],[1603,2],[1610,1],[1612,2],[1615,2],[1631,1],[1643,2],[1681,1],[1688,2],[1867,2],[1870,1],[1892,2],[1965,2],[1973,1],[1975,1],[1991,1],[2012,2],[2084,2],[2176,1],[2236,1],[2263,1],[2265,2],[2367,1],[2389,1],[2401,1],[2457,2],[2514,1],[2568,2],[2681,1],[2735,2],[2841,2],[2858,1],[2891,1],[2893,1],[2895,2],[2923,1],[2964,1],[2975,1],[2992,1],[2999,1],[3024,1],[3042,1],[3053,2],[3077,1],[3112,2],[3132,1],[3158,1],[3325,1],[3365,1],[3401,1],[3458,1],[3492,1],[3605,1],[3638,1],[3743,1],[3745,1],[3803,1],[3867,1],[3927,1],[3979,1],[4054,1],[4092,1],[4182,2],[4239,1],[4250,1],[4290,1],[4309,1],[4493,1],[4540,1],[4542,1],[4633,1],[4770,1],[4811,1],[4827,2],[4870,1],[4881,2],[4915,1],[4927,2],[4972,1],[5004,2],[5077,2],[5149,2],[5173,1],[5186,1],[5188,1],[5215,2],[5315,1],[5373,2],[5457,2],[5597,2],[5646,3],[5650,2],[5671,1],[5681,1],[5683,1],[5775,1],[5834,2],[5837,3],[5841,2],[5852,1],[5878,2],[5957,1],[5999,1],[6013,1],[6015,2],[6118,2],[6207,2],[6292,2],[6433,2],[6539,2],[6549,2],[6556,1],[6558,2],[6561,2],[6577,1],[6589,2],[6627,1],[6634,2],[6813,2],[6816,1],[6838,2],[6911,2],[6919,1],[6921,1],[6937,1],[6958,2],[7030,2],[7122,1],[7182,1],[7209,1],[7211,2],[7313,1],[7335,1],[7347,1],[7403,2],[7460,1],[7514,2],[7627,1],[7681,2],[7787,2],[7804,1],[7837,1],[7839,1],[7841,2],[7869,1],[7910,1],[7921,1],[7938,1],[7945,1],[7970,1],[7988,1],[7999,2],[8023,1],[8058,2],[8078,1],[8104,1],[8271,1],[8311,1],[8347,1],[8404,1],[8438,1],[8551,1],[8584,1],[8689,1],[8691,1],[8749,1],[8813,1],[8873,1],[8925,1],[9000,1],[9038,1],[9128,2],[9185,1],[9196,1],[9236,1],[9255,1],[9439,1],[9486,1],[9488,1],[9579,1],[9716,1],[9757,1],[9773,2],[9816,1],[9827,2],[9861,1],[9873,2],[9918,1],[9950,2]]},"547":{"position":[[168,2],[240,2],[264,1],[277,1],[279,1],[306,2],[406,1],[464,2],[548,2],[688,2],[737,3],[774,1],[787,1],[789,1],[791,1],[847,1],[849,2],[906,3],[929,2],[1008,1],[1050,1],[1064,1],[1066,2],[1169,2],[1258,2],[1343,2],[1484,2],[1590,2],[1600,2],[1607,1],[1609,2],[1612,2],[1628,1],[1640,2],[1678,1],[1685,2],[1766,1],[1768,1],[1878,2],[1881,2],[1884,2],[1975,2],[2055,2],[2062,1],[2064,2],[2067,2],[2083,1],[2104,2],[2176,2],[2268,1],[2328,1],[2355,1],[2357,2],[2459,1],[2481,1],[2493,1],[2549,2],[2606,1],[2660,2],[2773,1],[2827,2],[2933,2],[2950,1],[2983,1],[2985,1],[3035,1],[3072,1],[3080,1],[3087,1],[3109,1],[3127,1],[3138,1],[3140,3],[3165,1],[3197,3],[3220,1],[3387,1],[3427,1],[3463,1],[3520,1],[3554,1],[3667,1],[3700,1],[3805,1],[3807,1],[3865,1],[3929,1],[3981,1],[4035,1],[4119,1],[4228,2],[4231,2],[4234,2],[4291,1],[4508,1],[4555,1],[4557,1],[4648,1],[4666,1],[4681,1],[4741,2],[4811,1],[4869,1],[4871,2],[5066,2],[5138,2],[5162,1],[5175,1],[5177,1],[5204,2],[5304,1],[5362,2],[5446,2],[5586,2],[5635,3],[5639,2],[5660,1],[5670,1],[5672,1],[5764,1],[5823,2],[5826,3],[5830,2],[5841,1],[5868,2],[5947,1],[5989,1],[6003,1],[6005,2],[6108,2],[6197,2],[6282,2],[6423,2],[6529,2],[6539,2],[6546,1],[6548,2],[6551,2],[6567,1],[6579,2],[6617,1],[6624,2],[6803,2],[6806,1],[6828,2],[6901,2],[6909,1],[6911,1],[6928,1],[6949,2],[7021,2],[7113,1],[7173,1],[7200,1],[7202,2],[7304,1],[7326,1],[7338,1],[7394,2],[7451,1],[7505,2],[7618,1],[7672,2],[7778,2],[7795,1],[7828,1],[7830,1],[7832,2],[7860,1],[7901,1],[7912,1],[7929,1],[7936,1],[7961,1],[7979,1],[7990,2],[8014,1],[8049,2],[8069,1],[8096,1],[8263,1],[8303,1],[8339,1],[8396,1],[8430,1],[8543,1],[8576,1],[8681,1],[8683,1],[8741,1],[8805,1],[8865,1],[8917,1],[8992,1],[9030,1],[9120,2],[9177,1],[9188,1],[9228,1],[9247,1],[9432,1],[9479,1],[9481,1],[9572,1],[9709,1],[9751,1],[9767,2],[9810,1],[9821,2],[9855,1],[9867,2],[9912,1],[9944,2]]},"553":{"position":[[468,1],[515,1],[517,1],[534,2],[537,1],[572,1],[584,1],[594,2],[597,2],[610,1],[621,1],[632,1],[634,1],[644,2],[647,2],[650,1],[671,1],[683,3],[708,1],[710,1],[712,1],[714,1],[716,1],[718,2],[733,1],[748,1],[760,1],[793,1],[795,1],[812,1],[814,1],[816,2],[829,1],[862,1],[864,1],[881,1],[883,1],[885,1],[887,1],[889,1],[891,1],[893,1],[895,1],[897,1],[899,2],[953,1],[1028,2],[1031,1],[1232,1]]},"555":{"position":[[134,1]]},"562":{"position":[[290,2],[362,2],[386,1],[399,1],[401,1],[428,2],[528,1],[586,2],[670,2],[810,2],[859,3],[863,2],[884,1],[894,1],[896,1],[988,1],[1057,2],[1060,3],[1064,2],[1075,1],[1101,2],[1180,1],[1222,1],[1236,1],[1238,2],[1341,2],[1430,2],[1515,2],[1656,2],[1762,2],[1772,2],[1779,1],[1781,2],[1784,2],[1800,1],[1812,2],[1850,1],[1857,2],[2046,2],[2049,1],[2071,2],[2144,2],[2152,1],[2154,1],[2170,1],[2191,2],[2263,2],[2355,1],[2415,1],[2442,1],[2444,2],[2546,1],[2568,1],[2580,1],[2636,2],[2693,1],[2747,2],[2860,1],[2914,2],[3020,2],[3037,1],[3070,1],[3072,1],[3074,2],[3102,1],[3143,1],[3154,1],[3171,1],[3178,1],[3201,1],[3220,1],[3242,2],[3266,1],[3301,2],[3321,1],[3347,1],[3514,1],[3554,1],[3590,1],[3647,1],[3681,1],[3794,1],[3827,1],[3932,1],[3934,1],[3992,1],[4056,1],[4116,1],[4168,1],[4243,1],[4281,1],[4381,2],[4438,1],[4449,1],[4489,1],[4508,1],[4692,1],[4739,1],[4741,1],[4832,1],[4979,1],[5020,1],[5034,2],[5075,1],[5087,2],[5122,1],[5145,2],[5201,1],[5233,2]]},"569":{"position":[[540,2],[612,2],[636,1],[649,1],[651,1],[678,2],[778,1],[836,2],[920,2],[1060,2],[1109,3],[1113,2],[1137,1],[1146,1],[1148,1],[1184,1],[1242,2],[1245,3],[1249,2],[1259,1],[1401,2],[1480,1],[1522,1],[1536,1],[1538,2],[1641,2],[1730,2],[1815,2],[1956,2],[2062,2],[2072,2],[2079,1],[2081,2],[2084,2],[2100,1],[2112,2],[2150,1],[2157,2],[2320,2],[2323,1],[2345,2],[2417,2],[2425,1],[2427,1],[2560,1],[2581,2],[2653,2],[2745,1],[2805,1],[2832,1],[2834,2],[2936,1],[2958,1],[2970,1],[3026,2],[3083,1],[3137,2],[3250,1],[3304,2],[3410,2],[3427,1],[3460,1],[3462,1],[3477,1],[3525,1],[3532,1],[3555,1],[3574,1],[3589,4],[3594,2],[3602,1],[3604,1],[3737,1],[3758,1],[3925,1],[3965,1],[4001,1],[4058,1],[4092,1],[4205,1],[4238,1],[4343,1],[4345,1],[4403,1],[4467,1],[4525,1],[4585,1],[4660,1],[4751,2],[4754,1],[4765,1],[4804,1],[4815,1],[5139,1],[5186,1],[5188,1],[5279,1],[5361,1],[5512,2],[5550,2],[5595,1],[5597,3],[5606,1],[5628,2],[5653,2],[5682,2],[6112,2],[6184,2],[6208,1],[6221,1],[6223,1],[6250,2],[6350,1],[6408,2],[6492,2],[6632,2],[6681,3],[6685,2],[6709,1],[6718,1],[6720,1],[6756,1],[6795,2],[6798,3],[6802,2],[6812,1],[6954,2],[7033,1],[7075,1],[7089,1],[7091,2],[7194,2],[7283,2],[7368,2],[7509,2],[7615,2],[7625,2],[7632,1],[7634,2],[7637,2],[7653,1],[7665,2],[7703,1],[7710,2],[7835,2],[7838,1],[7860,2],[7932,2],[7940,1],[7942,1],[8075,1],[8096,2],[8168,2],[8260,1],[8320,1],[8347,1],[8349,2],[8451,1],[8473,1],[8485,1],[8541,2],[8598,1],[8652,2],[8765,1],[8819,2],[8925,2],[8942,1],[8975,1],[8977,1],[8992,1],[9040,1],[9047,1],[9068,1],[9083,4],[9088,2],[9096,1],[9098,1],[9231,1],[9252,1],[9419,1],[9459,1],[9495,1],[9552,1],[9586,1],[9699,1],[9732,1],[9837,1],[9839,1],[9897,1],[9961,1],[10019,1],[10079,1],[10154,1],[10226,2],[10229,1],[10240,1],[10279,1],[10290,1],[10614,1],[10661,1],[10663,1],[10754,1],[10816,1],[10967,2],[11005,2],[11050,1],[11052,3],[11061,1],[11086,2],[11115,2],[11528,2],[11600,2],[11624,1],[11637,1],[11639,1],[11666,2],[11766,1],[11824,2],[11908,2],[12048,2],[12097,3],[12101,2],[12125,1],[12134,1],[12136,1],[12172,1],[12221,2],[12224,3],[12228,2],[12238,1],[12380,2],[12459,1],[12501,1],[12515,1],[12517,2],[12620,2],[12709,2],[12794,2],[12935,2],[13041,2],[13051,2],[13058,1],[13060,2],[13063,2],[13079,1],[13091,2],[13129,1],[13136,2],[13271,2],[13274,1],[13296,2],[13368,2],[13376,1],[13378,1],[13511,1],[13532,2],[13604,2],[13696,1],[13756,1],[13783,1],[13785,2],[13887,1],[13909,1],[13921,1],[13977,2],[14034,1],[14088,2],[14201,1],[14255,2],[14361,2],[14378,1],[14411,1],[14413,1],[14428,1],[14476,1],[14487,1],[14506,1],[14529,4],[14534,2],[14542,1],[14544,1],[14677,1],[14698,1],[14865,1],[14905,1],[14941,1],[14998,1],[15032,1],[15145,1],[15178,1],[15283,1],[15285,1],[15343,1],[15407,1],[15465,1],[15525,1],[15600,1],[15682,2],[15685,1],[15696,1],[15735,1],[15746,1],[16070,1],[16117,1],[16119,1],[16210,1],[16282,1],[16433,2],[16459,2],[16500,2],[16533,2],[16572,2]]},"571":{"position":[[743,2],[815,2],[839,1],[852,1],[854,1],[881,2],[981,1],[1039,2],[1123,2],[1263,2],[1312,3],[1316,2],[1340,1],[1349,1],[1351,1],[1387,1],[1445,2],[1448,3],[1452,2],[1462,1],[1464,2],[1486,2],[1565,1],[1607,1],[1621,1],[1623,2],[1726,2],[1815,2],[1900,2],[2041,2],[2147,2],[2157,2],[2164,1],[2166,2],[2169,2],[2185,1],[2197,2],[2235,1],[2242,2],[2405,2],[2408,1],[2430,2],[2502,2],[2510,1],[2512,1],[2524,2],[2527,1],[2548,2],[2620,2],[2712,1],[2772,1],[2799,1],[2801,2],[2903,1],[2925,1],[2937,1],[2993,2],[3050,1],[3104,2],[3217,1],[3271,2],[3377,2],[3394,1],[3427,1],[3429,1],[3444,1],[3492,1],[3499,1],[3522,1],[3541,1],[3556,4],[3561,2],[3569,1],[3571,1],[3583,2],[3586,1],[3607,1],[3774,1],[3814,1],[3850,1],[3907,1],[3941,1],[4054,1],[4087,1],[4192,1],[4194,1],[4252,1],[4316,1],[4374,1],[4434,1],[4509,1],[4600,2],[4603,1],[4614,1],[4653,1],[4664,1],[4870,1],[4917,1],[4919,1],[5010,1],[5092,1],[5114,4],[5125,2],[5163,2],[5208,1],[5210,3],[5219,1],[5241,2],[5266,2],[5295,2]]},"576":{"position":[[281,2],[353,2],[377,1],[390,1],[392,1],[419,2],[519,1],[577,2],[661,2],[801,2],[850,3],[860,1],[867,1],[869,1],[907,1],[929,2],[998,2],[1037,2],[1094,3],[1098,2],[1106,1],[1108,3],[1131,2],[1210,1],[1252,1],[1266,1],[1268,2],[1371,2],[1460,2],[1545,2],[1686,2],[1792,2],[1802,2],[1809,1],[1811,2],[1814,2],[1830,1],[1842,2],[1880,1],[1887,2],[1977,2],[2064,2],[2103,2],[2177,1],[2199,2],[2273,2],[2281,1],[2283,1],[2291,4],[2315,2],[2387,2],[2479,1],[2539,1],[2566,1],[2568,2],[2670,1],[2692,1],[2704,1],[2760,2],[2817,1],[2871,2],[2984,1],[3038,2],[3144,2],[3161,1],[3194,1],[3196,1],[3211,1],[3245,1],[3280,1],[3291,1],[3303,2],[3350,1],[3372,2],[3411,2],[3435,1],[3470,2],[3482,1],[3484,1],[3492,3],[3496,1],[3517,1],[3684,1],[3724,1],[3760,1],[3817,1],[3851,1],[3964,1],[3997,1],[4102,1],[4104,1],[4162,1],[4226,1],[4288,1],[4352,1],[4429,1],[4515,2],[4573,1],[4584,1],[4625,1],[4636,1],[4845,1],[4892,1],[4894,1],[4985,1],[5114,1],[5135,4],[5158,2],[5219,2],[5311,2],[5369,1],[5483,1],[5485,1],[5487,1],[5489,1],[5491,1],[5493,1],[5615,2],[5687,2],[5711,1],[5724,1],[5726,1],[5753,2],[5853,1],[5911,2],[5995,2],[6135,2],[6184,3],[6194,1],[6201,1],[6203,1],[6241,1],[6263,2],[6332,2],[6371,2],[6428,3],[6432,2],[6440,1],[6442,3],[6465,2],[6544,1],[6586,1],[6600,1],[6602,2],[6705,2],[6794,2],[6879,2],[7020,2],[7126,2],[7136,2],[7143,1],[7145,2],[7148,2],[7164,1],[7176,2],[7214,1],[7221,2],[7311,2],[7398,2],[7437,2],[7511,1],[7533,2],[7607,2],[7615,1],[7617,1],[7625,4],[7649,2],[7721,2],[7813,1],[7873,1],[7900,1],[7902,2],[8004,1],[8026,1],[8038,1],[8094,2],[8151,1],[8205,2],[8318,1],[8372,2],[8478,2],[8495,1],[8528,1],[8530,1],[8545,1],[8579,1],[8614,1],[8625,1],[8637,2],[8684,1],[8706,2],[8745,2],[8769,1],[8804,2],[8816,1],[8818,1],[8826,3],[8830,1],[8851,1],[9018,1],[9058,1],[9094,1],[9151,1],[9185,1],[9298,1],[9331,1],[9436,1],[9438,1],[9496,1],[9560,1],[9622,1],[9686,1],[9763,1],[9849,2],[9907,1],[9918,1],[9959,1],[9970,1],[10179,1],[10226,1],[10228,1],[10319,1],[10448,1],[10469,4],[10492,2],[10553,2],[10645,2],[10703,1],[10798,1],[10800,1],[10802,1],[10804,1],[10806,1],[10808,1],[10810,1]]},"583":{"position":[[202,2],[274,2],[298,1],[311,1],[313,1],[340,2],[440,1],[498,2],[582,2],[722,2],[771,3],[790,1],[952,1],[966,2],[1035,2],[1038,2],[1041,3],[1045,2],[1065,1],[1129,2],[1208,1],[1250,1],[1264,1],[1266,2],[1369,2],[1458,2],[1543,2],[1684,2],[1790,2],[1800,2],[1807,1],[1809,2],[1812,2],[1828,1],[1840,2],[1878,1],[1885,2],[2199,2],[2202,2],[2205,1],[2227,2],[2306,2],[2314,1],[2316,1],[2372,1],[2393,2],[2465,2],[2557,1],[2617,1],[2644,1],[2646,2],[2748,1],[2770,1],[2782,1],[2838,2],[2895,1],[2949,2],[3062,1],[3116,2],[3222,2],[3239,1],[3272,1],[3274,1],[3285,1],[3332,1],[3370,1],[3393,1],[3410,1],[3441,1],[3469,1],[3481,1],[3502,1],[3551,1],[3553,1],[3555,2],[3571,1],[3609,2],[3629,1],[3693,1],[3860,1],[3900,1],[3936,1],[3993,1],[4027,1],[4140,1],[4173,1],[4278,1],[4280,1],[4338,1],[4402,1],[4475,1],[4527,1],[4633,1],[4888,1],[4890,1],[4892,1],[4903,1],[5134,1],[5181,1],[5183,1],[5274,1],[5279,2],[5421,1],[5437,1],[5513,1],[5515,1],[5517,2],[5520,1],[5613,2],[5668,2],[5708,2],[5766,1],[5799,2],[5863,1],[5865,1],[5867,2],[5907,1],[5930,1],[5949,1],[5972,1],[5974,2]]},"593":{"position":[[349,1]]},"595":{"position":[[134,1]]},"601":{"position":[[432,1],[479,1],[481,1],[498,2],[501,1],[536,1],[548,1],[559,1],[570,1],[572,1],[582,2],[585,2],[588,1],[609,1],[632,1],[634,1],[636,1],[638,1],[640,2],[653,1],[663,2],[666,1],[668,2],[683,1],[698,1],[710,1],[743,1],[745,1],[762,2],[765,1],[795,2],[798,2],[801,1],[840,1],[842,1],[844,2],[857,1],[890,1],[892,1],[909,2],[912,1],[951,1],[953,1],[955,1],[957,1],[959,1],[961,2],[964,1],[995,1],[1007,1],[1017,2],[1020,1],[1022,2],[1037,1],[1052,1],[1064,1],[1097,1],[1099,1],[1116,1],[1118,1],[1120,1],[1122,1],[1124,1],[1126,1],[1128,1],[1130,1]]},"605":{"position":[[243,1],[290,1],[292,1],[309,2],[312,1],[347,1],[359,1],[370,1],[381,1],[383,1],[393,2],[396,2],[399,1],[420,1],[443,1],[445,1],[447,1],[449,1],[451,2],[464,1],[474,2],[477,1],[479,2],[494,1],[509,1],[521,1],[554,1],[556,1],[573,2],[576,1],[606,2],[609,2],[612,1],[651,1],[653,1],[655,2],[668,1],[701,1],[703,1],[720,2],[723,1],[762,1],[764,1],[766,1],[768,1],[770,1],[772,2],[775,1],[806,1],[818,1],[828,2],[831,1],[833,2],[848,1],[863,1],[875,1],[908,1],[910,1],[927,1],[929,1],[931,1],[933,1],[935,1],[937,1],[939,1],[941,1],[1156,1],[1158,1],[1234,2],[1237,1],[1418,2],[1490,2],[1514,1],[1527,1],[1529,1],[1556,2],[1656,1],[1714,2],[1798,2],[1938,2],[1987,3],[1991,2],[2012,1],[2022,1],[2024,1],[2116,1],[2186,2],[2189,3],[2193,2],[2204,1],[2230,2],[2309,1],[2351,1],[2365,1],[2367,2],[2470,2],[2559,2],[2644,2],[2785,2],[2891,2],[2901,2],[2908,1],[2910,2],[2913,2],[2929,1],[2941,2],[2979,1],[2986,2],[3176,2],[3179,1],[3201,2],[3274,2],[3282,1],[3284,1],[3300,1],[3321,2],[3393,2],[3485,1],[3545,1],[3572,1],[3574,2],[3676,1],[3698,1],[3710,1],[3766,2],[3823,1],[3877,2],[3990,1],[4044,2],[4150,2],[4167,1],[4200,1],[4202,1],[4204,2],[4232,1],[4273,1],[4284,1],[4301,1],[4308,1],[4332,1],[4351,1],[4373,2],[4397,1],[4432,2],[4452,1],[4478,1],[4645,1],[4685,1],[4721,1],[4778,1],[4812,1],[4925,1],[4958,1],[5063,1],[5065,1],[5123,1],[5187,1],[5247,1],[5299,1],[5374,1],[5412,1],[5513,2],[5570,1],[5581,1],[5621,1],[5640,1],[5824,1],[5871,1],[5873,1],[5964,1],[6112,1],[6153,1],[6168,2],[6210,1],[6222,2],[6257,1],[6280,2],[6336,1],[6368,2],[6752,1],[6754,1],[6827,2],[6830,1],[7011,2],[7083,2],[7107,1],[7120,1],[7122,1],[7149,2],[7249,1],[7307,2],[7391,2],[7531,2],[7580,3],[7584,2],[7605,1],[7615,1],[7617,1],[7709,1],[7779,2],[7782,3],[7786,2],[7797,1],[7823,2],[7902,1],[7944,1],[7958,1],[7960,2],[8063,2],[8152,2],[8237,2],[8378,2],[8484,2],[8494,2],[8501,1],[8503,2],[8506,2],[8522,1],[8534,2],[8572,1],[8579,2],[8769,2],[8772,1],[8794,2],[8867,2],[8875,1],[8877,1],[8893,1],[8914,2],[8986,2],[9078,1],[9138,1],[9165,1],[9167,2],[9269,1],[9291,1],[9303,1],[9359,2],[9416,1],[9470,2],[9583,1],[9637,2],[9743,2],[9760,1],[9793,1],[9795,1],[9797,2],[9825,1],[9866,1],[9877,1],[9894,1],[9901,1],[9925,1],[9944,1],[9966,2],[9990,1],[10025,2],[10045,1],[10071,1],[10238,1],[10278,1],[10314,1],[10371,1],[10405,1],[10518,1],[10551,1],[10656,1],[10658,1],[10716,1],[10780,1],[10840,1],[10892,1],[10967,1],[11005,1],[11106,2],[11163,1],[11174,1],[11214,1],[11233,1],[11417,1],[11464,1],[11466,1],[11557,1],[11705,1],[11746,1],[11761,2],[11803,1],[11815,2],[11850,1],[11873,2],[11929,1],[11961,2],[12596,1],[12598,1],[12672,2],[12675,1],[12761,2],[12764,1],[13253,2],[13325,2],[13349,1],[13362,1],[13364,1],[13391,2],[13491,1],[13549,2],[13633,2],[13773,2],[13822,3],[13826,2],[13847,1],[13857,1],[13859,1],[13951,1],[14024,2],[14027,3],[14031,2],[14042,1],[14068,2],[14147,1],[14189,1],[14203,1],[14205,2],[14308,2],[14397,2],[14482,2],[14623,2],[14729,2],[14739,2],[14746,1],[14748,2],[14751,2],[14767,1],[14779,2],[14817,1],[14824,2],[15017,2],[15020,1],[15042,2],[15115,2],[15123,1],[15125,1],[15141,1],[15162,2],[15234,2],[15326,1],[15386,1],[15413,1],[15415,2],[15517,1],[15539,1],[15551,1],[15607,2],[15664,1],[15718,2],[15831,1],[15885,2],[15991,2],[16008,1],[16041,1],[16043,1],[16045,2],[16073,1],[16114,1],[16125,1],[16142,1],[16149,1],[16176,1],[16195,1],[16217,2],[16241,1],[16276,2],[16296,1],[16322,1],[16489,1],[16529,1],[16565,1],[16622,1],[16656,1],[16769,1],[16802,1],[16907,1],[16909,1],[16967,1],[17031,1],[17091,1],[17143,1],[17218,1],[17256,1],[17360,2],[17417,1],[17428,1],[17468,1],[17487,1],[17671,1],[17718,1],[17720,1],[17811,1],[17962,1],[18003,1],[18021,2],[18066,1],[18078,2],[18113,1],[18136,2],[18192,1],[18224,2],[18979,1],[18981,1],[19058,2],[19061,1],[19148,2],[19151,1],[19232,2],[19235,1],[19321,2],[19324,1],[19508,2],[19580,2],[19604,1],[19617,1],[19619,1],[19646,2],[19746,1],[19804,2],[19888,2],[20028,2],[20077,3],[20081,2],[20102,1],[20112,1],[20114,1],[20206,1],[20276,2],[20279,3],[20283,2],[20294,1],[20320,2],[20399,1],[20441,1],[20455,1],[20457,2],[20560,2],[20649,2],[20734,2],[20875,2],[20981,2],[20991,2],[20998,1],[21000,2],[21003,2],[21019,1],[21031,2],[21069,1],[21076,2],[21266,2],[21269,1],[21291,2],[21364,2],[21372,1],[21374,1],[21390,1],[21411,2],[21483,2],[21575,1],[21635,1],[21662,1],[21664,2],[21766,1],[21788,1],[21800,1],[21856,2],[21913,1],[21967,2],[22080,1],[22134,2],[22240,2],[22257,1],[22290,1],[22292,1],[22294,2],[22322,1],[22363,1],[22374,1],[22391,1],[22398,1],[22422,1],[22441,1],[22463,2],[22487,1],[22522,2],[22542,1],[22568,1],[22735,1],[22775,1],[22811,1],[22868,1],[22902,1],[23015,1],[23048,1],[23153,1],[23155,1],[23213,1],[23277,1],[23337,1],[23389,1],[23464,1],[23502,1],[23603,2],[23660,1],[23671,1],[23711,1],[23730,1],[23914,1],[23961,1],[23963,1],[24054,1],[24202,1],[24243,1],[24258,2],[24300,1],[24312,2],[24347,1],[24370,2],[24426,1],[24458,2],[24898,1],[24900,1],[24977,2],[24980,1],[25165,2],[25237,2],[25261,1],[25274,1],[25276,1],[25303,2],[25403,1],[25461,2],[25545,2],[25685,2],[25734,3],[25738,2],[25759,1],[25769,1],[25771,1],[25863,1],[25934,2],[25937,3],[25941,2],[25952,1],[25978,2],[26057,1],[26099,1],[26113,1],[26115,2],[26218,2],[26307,2],[26392,2],[26533,2],[26639,2],[26649,2],[26656,1],[26658,2],[26661,2],[26677,1],[26689,2],[26727,1],[26734,2],[26925,2],[26928,1],[26950,2],[27023,2],[27031,1],[27033,1],[27049,1],[27070,2],[27142,2],[27234,1],[27294,1],[27321,1],[27323,2],[27425,1],[27447,1],[27459,1],[27515,2],[27572,1],[27626,2],[27739,1],[27793,2],[27899,2],[27916,1],[27949,1],[27951,1],[27953,2],[27981,1],[28022,1],[28033,1],[28050,1],[28057,1],[28082,1],[28101,1],[28123,2],[28147,1],[28182,2],[28202,1],[28228,1],[28395,1],[28435,1],[28471,1],[28528,1],[28562,1],[28675,1],[28708,1],[28813,1],[28815,1],[28873,1],[28937,1],[28997,1],[29049,1],[29124,1],[29162,1],[29264,2],[29321,1],[29332,1],[29372,1],[29391,1],[29575,1],[29622,1],[29624,1],[29715,1],[29864,1],[29905,1],[29921,2],[29964,1],[29976,2],[30011,1],[30034,2],[30090,1],[30122,2]]},"607":{"position":[[256,1],[303,1],[305,1],[322,2],[325,1],[360,1],[372,1],[393,1],[416,1],[418,2],[431,1],[441,2],[444,1],[446,2],[461,1],[476,2],[479,1],[481,2],[484,1],[515,1],[527,1],[537,2],[540,1],[542,2],[557,1],[572,1],[584,1],[617,1],[619,1],[636,1],[638,1],[640,1],[642,1],[644,1],[646,1],[648,1],[650,1],[1000,1],[1002,1],[1078,2],[1081,1],[1263,2],[1335,2],[1359,1],[1372,1],[1374,1],[1401,2],[1501,1],[1559,2],[1643,2],[1783,2],[1832,3],[1836,2],[1857,1],[1867,1],[1869,1],[1961,1],[2031,2],[2034,3],[2038,2],[2049,1],[2076,2],[2155,1],[2197,1],[2211,1],[2213,2],[2316,2],[2405,2],[2490,2],[2631,2],[2737,2],[2747,2],[2754,1],[2756,2],[2759,2],[2775,1],[2787,2],[2825,1],[2832,2],[3022,2],[3025,1],[3047,2],[3120,2],[3128,1],[3130,1],[3147,1],[3168,2],[3240,2],[3332,1],[3392,1],[3419,1],[3421,2],[3523,1],[3545,1],[3557,1],[3613,2],[3670,1],[3724,2],[3837,1],[3891,2],[3997,2],[4014,1],[4047,1],[4049,1],[4051,2],[4079,1],[4120,1],[4131,1],[4148,1],[4155,1],[4179,1],[4198,1],[4220,2],[4244,1],[4279,2],[4299,1],[4326,1],[4493,1],[4533,1],[4569,1],[4626,1],[4660,1],[4773,1],[4806,1],[4911,1],[4913,1],[4971,1],[5035,1],[5095,1],[5147,1],[5222,1],[5260,1],[5361,2],[5418,1],[5429,1],[5469,1],[5488,1],[5673,1],[5720,1],[5722,1],[5813,1],[5961,1],[6003,1],[6018,2],[6060,1],[6072,2],[6107,1],[6130,2],[6186,1],[6218,2],[6669,1],[6671,1],[6744,2],[6747,1],[6932,2],[7004,2],[7028,1],[7041,1],[7043,1],[7070,2],[7170,1],[7228,2],[7312,2],[7452,2],[7501,3],[7505,2],[7526,1],[7536,1],[7538,1],[7630,1],[7703,2],[7706,3],[7710,2],[7721,1],[7748,2],[7827,1],[7869,1],[7883,1],[7885,2],[7988,2],[8077,2],[8162,2],[8303,2],[8409,2],[8419,2],[8426,1],[8428,2],[8431,2],[8447,1],[8459,2],[8497,1],[8504,2],[8697,2],[8700,1],[8722,2],[8795,2],[8803,1],[8805,1],[8822,1],[8843,2],[8915,2],[9007,1],[9067,1],[9094,1],[9096,2],[9198,1],[9220,1],[9232,1],[9288,2],[9345,1],[9399,2],[9512,1],[9566,2],[9672,2],[9689,1],[9722,1],[9724,1],[9726,2],[9754,1],[9795,1],[9806,1],[9823,1],[9830,1],[9857,1],[9876,1],[9898,2],[9922,1],[9957,2],[9977,1],[10004,1],[10171,1],[10211,1],[10247,1],[10304,1],[10338,1],[10451,1],[10484,1],[10589,1],[10591,1],[10649,1],[10713,1],[10773,1],[10825,1],[10900,1],[10938,1],[11042,2],[11099,1],[11110,1],[11150,1],[11169,1],[11354,1],[11401,1],[11403,1],[11494,1],[11645,1],[11687,1],[11705,2],[11750,1],[11762,2],[11797,1],[11820,2],[11876,1],[11908,2],[12344,1],[12346,1],[12418,2],[12421,1],[12507,2],[12510,1],[12693,2],[12765,2],[12789,1],[12802,1],[12804,1],[12831,2],[12931,1],[12989,2],[13073,2],[13213,2],[13262,3],[13266,2],[13287,1],[13297,1],[13299,1],[13391,1],[13462,2],[13465,3],[13469,2],[13480,1],[13507,2],[13586,1],[13628,1],[13642,1],[13644,2],[13747,2],[13836,2],[13921,2],[14062,2],[14168,2],[14178,2],[14185,1],[14187,2],[14190,2],[14206,1],[14218,2],[14256,1],[14263,2],[14454,2],[14457,1],[14479,2],[14552,2],[14560,1],[14562,1],[14579,1],[14600,2],[14672,2],[14764,1],[14824,1],[14851,1],[14853,2],[14955,1],[14977,1],[14989,1],[15045,2],[15102,1],[15156,2],[15269,1],[15323,2],[15429,2],[15446,1],[15479,1],[15481,1],[15483,2],[15511,1],[15552,1],[15563,1],[15580,1],[15587,1],[15612,1],[15631,1],[15653,2],[15677,1],[15712,2],[15732,1],[15759,1],[15926,1],[15966,1],[16002,1],[16059,1],[16093,1],[16206,1],[16239,1],[16344,1],[16346,1],[16404,1],[16468,1],[16528,1],[16580,1],[16655,1],[16693,1],[16795,2],[16852,1],[16863,1],[16903,1],[16922,1],[17107,1],[17154,1],[17156,1],[17247,1],[17396,1],[17438,1],[17454,2],[17497,1],[17509,2],[17544,1],[17567,2],[17623,1],[17655,2],[18166,1],[18168,1],[18246,2],[18249,1],[18435,2],[18507,2],[18531,1],[18544,1],[18546,1],[18573,2],[18673,1],[18731,2],[18815,2],[18955,2],[19004,3],[19008,2],[19029,1],[19039,1],[19041,1],[19133,1],[19205,2],[19208,3],[19212,2],[19223,1],[19249,2],[19328,1],[19370,1],[19384,1],[19386,2],[19489,2],[19578,2],[19663,2],[19804,2],[19910,2],[19920,2],[19927,1],[19929,2],[19932,2],[19948,1],[19960,2],[19998,1],[20005,2],[20197,2],[20200,1],[20222,2],[20295,2],[20303,1],[20305,1],[20321,1],[20342,2],[20414,2],[20506,1],[20566,1],[20593,1],[20595,2],[20697,1],[20719,1],[20731,1],[20787,2],[20844,1],[20898,2],[21011,1],[21065,2],[21171,2],[21188,1],[21221,1],[21223,1],[21225,2],[21253,1],[21294,1],[21305,1],[21322,1],[21329,1],[21355,1],[21374,1],[21396,2],[21420,1],[21455,2],[21475,1],[21501,1],[21668,1],[21708,1],[21744,1],[21801,1],[21835,1],[21948,1],[21981,1],[22086,1],[22088,1],[22146,1],[22210,1],[22270,1],[22322,1],[22397,1],[22435,1],[22538,2],[22595,1],[22606,1],[22646,1],[22665,1],[22849,1],[22896,1],[22898,1],[22989,1],[23139,1],[23180,1],[23197,2],[23241,1],[23253,2],[23288,1],[23311,2],[23367,1],[23399,2]]},"613":{"position":[[432,1],[479,1],[481,1],[498,2],[501,1],[536,1],[548,1],[558,2],[561,1],[563,2],[578,1],[593,1],[605,1],[638,1],[640,1],[657,1],[659,1],[661,1],[663,1],[665,1],[667,2],[670,1],[703,1],[715,1],[725,2],[728,1],[730,2],[745,1],[760,1],[772,1],[805,1],[807,1],[824,1],[826,1],[828,1],[830,1],[832,1],[834,1],[836,1],[838,1],[1005,1]]},"615":{"position":[[93,1]]},"620":{"position":[[289,1],[336,1],[338,1],[355,2],[358,1],[393,1],[405,1],[415,2],[418,2],[431,1],[441,2],[444,1],[446,2],[461,1],[476,1],[488,1],[521,1],[523,1],[542,1],[544,1],[546,2],[559,1],[592,1],[594,1],[611,1],[613,1],[615,1],[617,1],[619,1],[621,2],[624,1],[657,1],[669,1],[679,2],[682,1],[684,2],[699,1],[714,1],[726,1],[759,1],[761,1],[778,1],[780,1],[782,1],[784,1],[786,1],[788,1],[790,1],[792,1]]},"622":{"position":[[417,2],[489,2],[513,1],[526,1],[528,1],[555,2],[655,1],[713,2],[797,2],[937,2],[986,3],[1022,1],[1036,1],[1038,2],[1139,1],[1220,1],[1222,2],[1279,3],[1302,2],[1381,1],[1423,1],[1437,1],[1439,2],[1542,2],[1631,2],[1716,2],[1857,2],[1963,2],[1973,2],[1980,1],[1982,2],[1985,2],[2001,1],[2013,2],[2051,1],[2058,2],[2138,1],[2140,1],[2142,2],[2376,2],[2379,2],[2382,2],[2473,2],[2553,2],[2560,1],[2562,2],[2565,2],[2581,1],[2602,2],[2674,2],[2766,1],[2826,1],[2853,1],[2855,2],[2957,1],[2979,1],[2991,1],[3047,2],[3104,1],[3158,2],[3271,1],[3325,2],[3431,2],[3448,1],[3481,1],[3483,1],[3532,1],[3569,1],[3571,2],[3678,1],[3685,1],[3714,1],[3733,1],[3761,1],[3763,3],[3788,1],[3820,3],[3843,1],[4010,1],[4050,1],[4086,1],[4143,1],[4177,1],[4290,1],[4323,1],[4428,1],[4430,1],[4488,1],[4552,1],[4604,1],[4658,1],[4742,1],[4799,1],[4975,2],[4978,2],[4981,2],[5038,1],[5255,1],[5302,1],[5304,1],[5395,1],[5412,1],[5427,1],[5512,2],[5581,2],[5682,1],[5765,1],[5767,2]]},"624":{"position":[[232,2],[304,2],[328,1],[341,1],[343,1],[370,2],[470,1],[528,2],[612,2],[752,2],[801,3],[805,2],[826,1],[836,1],[838,1],[930,1],[1011,2],[1014,3],[1018,2],[1029,1],[1055,2],[1134,1],[1176,1],[1190,1],[1192,2],[1295,2],[1384,2],[1469,2],[1610,2],[1716,2],[1726,2],[1733,1],[1735,2],[1738,2],[1754,1],[1766,2],[1804,1],[1811,2],[2012,2],[2015,1],[2037,2],[2110,2],[2118,1],[2120,1],[2136,1],[2157,2],[2229,2],[2321,1],[2381,1],[2408,1],[2410,2],[2512,1],[2534,1],[2546,1],[2602,2],[2659,1],[2713,2],[2826,1],[2880,2],[2986,2],[3003,1],[3036,1],[3038,1],[3040,2],[3068,1],[3109,1],[3120,1],[3137,1],[3144,1],[3173,1],[3192,1],[3220,2],[3244,1],[3279,2],[3299,1],[3325,1],[3492,1],[3532,1],[3568,1],[3625,1],[3659,1],[3772,1],[3805,1],[3910,1],[3912,1],[3970,1],[4034,1],[4094,1],[4146,1],[4221,1],[4259,1],[4371,2],[4428,1],[4439,1],[4479,1],[4498,1],[4682,1],[4729,1],[4731,1],[4822,1],[4981,1],[5022,1],[5042,2],[5089,1],[5101,2],[5136,1],[5165,2],[5227,1],[5259,2]]},"628":{"position":[[283,1],[330,1],[332,1],[349,2],[352,1],[386,1],[407,1],[417,2],[420,2],[433,1],[444,1],[455,1],[457,1],[467,2],[470,2],[473,1],[493,1],[507,1],[539,2],[561,1],[595,1],[597,1],[599,1],[601,1],[603,1],[605,1],[607,2],[622,1],[637,1],[658,1],[691,1],[693,1],[710,1],[712,1],[714,2],[727,1],[760,1],[762,1],[779,1],[781,1],[783,1],[785,1],[787,1],[789,2],[792,1],[823,1],[846,1],[856,2],[859,1],[861,2],[876,1],[891,1],[914,1],[947,1],[949,1],[966,1],[968,1],[970,1],[972,1],[974,1],[976,1],[978,1],[980,1]]},"630":{"position":[[142,2],[214,2],[238,1],[251,1],[253,1],[280,2],[380,1],[438,2],[522,2],[662,2],[711,3],[747,1],[761,1],[763,2],[815,1],[893,2],[958,1],[1044,1],[1046,2],[1103,3],[1126,2],[1205,1],[1247,1],[1261,1],[1263,2],[1366,2],[1455,2],[1540,2],[1681,2],[1787,2],[1797,2],[1804,1],[1806,2],[1809,2],[1825,1],[1837,2],[1875,1],[1882,2],[1962,1],[1964,1],[1966,2],[2147,2],[2150,1],[2152,2],[2355,2],[2358,2],[2361,2],[2452,2],[2532,2],[2539,1],[2541,2],[2544,2],[2560,1],[2581,2],[2653,2],[2745,1],[2805,1],[2832,1],[2834,2],[2936,1],[2958,1],[2970,1],[3026,2],[3083,1],[3137,2],[3250,1],[3304,2],[3410,2],[3427,1],[3460,1],[3462,1],[3511,1],[3548,1],[3550,2],[3608,1],[3615,1],[3639,1],[3669,1],[3687,2],[3690,2],[3761,1],[3768,1],[3796,1],[3824,1],[3849,1],[3851,3],[3876,1],[3908,3],[3931,1],[4098,1],[4138,1],[4174,1],[4231,1],[4265,1],[4378,1],[4411,1],[4516,1],[4518,1],[4576,1],[4640,1],[4692,1],[4746,1],[4830,1],[4887,1],[5010,2],[5023,1],[5168,2],[5171,2],[5174,2],[5231,1],[5448,1],[5495,1],[5497,1],[5588,1],[5605,1],[5620,1],[5787,2],[5856,2],[5908,1],[5987,2],[5990,2],[6055,1],[6143,1],[6145,2]]},"632":{"position":[[161,2],[233,2],[257,1],[270,1],[272,1],[299,2],[399,1],[457,2],[541,2],[681,2],[730,3],[734,2],[755,1],[765,1],[767,1],[859,1],[932,2],[935,3],[939,2],[950,1],[976,2],[1055,1],[1097,1],[1111,1],[1113,2],[1216,2],[1305,2],[1390,2],[1531,2],[1637,2],[1647,2],[1654,1],[1656,2],[1659,2],[1675,1],[1687,2],[1725,1],[1732,2],[1925,2],[1928,1],[1950,2],[2023,2],[2031,1],[2033,1],[2049,1],[2070,2],[2142,2],[2234,1],[2294,1],[2321,1],[2323,2],[2425,1],[2447,1],[2459,1],[2515,2],[2572,1],[2626,2],[2739,1],[2793,2],[2899,2],[2916,1],[2949,1],[2951,1],[2953,2],[2981,1],[3022,1],[3033,1],[3050,1],[3057,1],[3081,1],[3100,1],[3125,2],[3149,1],[3184,2],[3204,1],[3230,1],[3397,1],[3437,1],[3473,1],[3530,1],[3564,1],[3677,1],[3710,1],[3815,1],[3817,1],[3875,1],[3939,1],[3999,1],[4051,1],[4126,1],[4164,1],[4268,2],[4325,1],[4336,1],[4376,1],[4395,1],[4579,1],[4626,1],[4628,1],[4719,1],[4870,1],[4911,1],[4926,2],[4968,1],[4980,2],[5015,1],[5041,2],[5100,1],[5132,2]]},"634":{"position":[[142,2],[214,2],[238,1],[251,1],[253,1],[280,2],[380,1],[438,2],[522,2],[662,2],[711,3],[748,1],[761,1],[763,1],[765,2],[815,1],[901,1],[903,2],[960,3],[983,2],[1062,1],[1104,1],[1118,1],[1120,2],[1223,2],[1312,2],[1397,2],[1538,2],[1644,2],[1654,2],[1661,1],[1663,2],[1666,2],[1682,1],[1694,2],[1732,1],[1739,2],[1820,1],[1822,1],[1824,2],[2012,2],[2015,2],[2018,2],[2109,2],[2189,2],[2196,1],[2198,2],[2201,2],[2217,1],[2238,2],[2310,2],[2402,1],[2462,1],[2489,1],[2491,2],[2593,1],[2615,1],[2627,1],[2683,2],[2740,1],[2794,2],[2907,1],[2961,2],[3067,2],[3084,1],[3117,1],[3119,1],[3169,1],[3206,1],[3208,2],[3264,1],[3271,1],[3299,1],[3327,1],[3352,1],[3354,3],[3379,1],[3411,3],[3434,1],[3601,1],[3641,1],[3677,1],[3734,1],[3768,1],[3881,1],[3914,1],[4019,1],[4021,1],[4079,1],[4143,1],[4195,1],[4249,1],[4333,1],[4391,1],[4521,2],[4524,2],[4527,2],[4584,1],[4801,1],[4848,1],[4850,1],[4941,1],[4959,1],[4974,1],[5064,2],[5134,2],[5184,1],[5272,1],[5274,2],[5531,2],[5603,2],[5627,1],[5640,1],[5642,1],[5669,2],[5769,1],[5827,2],[5911,2],[6051,2],[6100,3],[6104,2],[6125,1],[6135,1],[6137,1],[6229,1],[6302,2],[6305,3],[6309,2],[6320,1],[6347,2],[6426,1],[6468,1],[6482,1],[6484,2],[6587,2],[6676,2],[6761,2],[6902,2],[7008,2],[7018,2],[7025,1],[7027,2],[7030,2],[7046,1],[7058,2],[7096,1],[7103,2],[7296,2],[7299,1],[7321,2],[7394,2],[7402,1],[7404,1],[7421,1],[7442,2],[7514,2],[7606,1],[7666,1],[7693,1],[7695,2],[7797,1],[7819,1],[7831,1],[7887,2],[7944,1],[7998,2],[8111,1],[8165,2],[8271,2],[8288,1],[8321,1],[8323,1],[8325,2],[8353,1],[8394,1],[8405,1],[8422,1],[8429,1],[8453,1],[8472,1],[8497,2],[8521,1],[8556,2],[8576,1],[8603,1],[8770,1],[8810,1],[8846,1],[8903,1],[8937,1],[9050,1],[9083,1],[9188,1],[9190,1],[9248,1],[9312,1],[9372,1],[9424,1],[9499,1],[9537,1],[9641,2],[9698,1],[9709,1],[9749,1],[9768,1],[9953,1],[10000,1],[10002,1],[10093,1],[10244,1],[10286,1],[10301,2],[10343,1],[10355,2],[10390,1],[10416,2],[10475,1],[10507,2],[10581,2],[10653,2],[10677,1],[10690,1],[10692,1],[10719,2],[10819,1],[10877,2],[10961,2],[11101,2],[11150,3],[11154,2],[11175,1],[11185,1],[11187,1],[11279,1],[11356,2],[11359,3],[11363,2],[11374,1],[11400,2],[11479,1],[11521,1],[11535,1],[11537,2],[11640,2],[11729,2],[11814,2],[11955,2],[12061,2],[12071,2],[12078,1],[12080,2],[12083,2],[12099,1],[12111,2],[12149,1],[12156,2],[12353,2],[12356,1],[12378,2],[12451,2],[12459,1],[12461,1],[12477,1],[12498,2],[12570,2],[12662,1],[12722,1],[12749,1],[12751,2],[12853,1],[12875,1],[12887,1],[12943,2],[13000,1],[13054,2],[13167,1],[13221,2],[13327,2],[13344,1],[13377,1],[13379,1],[13381,2],[13409,1],[13450,1],[13461,1],[13478,1],[13485,1],[13509,1],[13539,1],[13557,2],[13581,1],[13616,2],[13636,1],[13662,1],[13829,1],[13869,1],[13905,1],[13962,1],[13996,1],[14109,1],[14142,1],[14247,1],[14249,1],[14307,1],[14371,1],[14431,1],[14483,1],[14558,1],[14596,1],[14704,2],[14761,1],[14772,1],[14812,1],[14831,1],[15015,1],[15062,1],[15064,1],[15155,1],[15310,1],[15351,1],[15366,2],[15408,1],[15431,2],[15477,1],[15496,2],[15548,1],[15580,2]]},"642":{"position":[[353,1],[400,1],[402,1],[437,1],[449,1],[459,2],[462,2],[477,1],[498,1],[510,3],[535,1],[537,1],[539,1],[541,2],[544,1],[561,1],[563,1],[565,1],[639,1],[641,1],[716,2],[719,1],[797,2],[800,1],[968,1],[1015,1],[1017,1],[1052,1],[1064,1],[1074,2],[1077,2],[1093,1],[1114,1],[1126,3],[1151,1],[1153,1],[1155,1],[1157,2],[1160,1],[1177,1],[1179,1],[1181,1]]},"644":{"position":[[405,1],[452,1],[454,1],[489,1],[501,1],[511,2],[514,2],[527,1],[538,1],[549,1],[551,1],[561,2],[564,2],[567,1],[588,1],[611,1],[613,1],[615,1],[617,1],[619,2],[635,1],[656,1],[668,3],[693,1],[695,2],[710,1],[731,1],[743,3],[768,1],[770,1],[772,1],[774,2],[777,1],[794,1],[796,1],[798,1],[923,2],[995,2],[1019,1],[1032,1],[1034,1],[1061,2],[1161,1],[1219,2],[1303,2],[1443,2],[1492,3],[1496,2],[1517,1],[1527,1],[1529,1],[1621,1],[1693,2],[1696,3],[1700,2],[1711,1],[1737,2],[1816,1],[1858,1],[1872,1],[1874,2],[1977,2],[2066,2],[2151,2],[2292,2],[2398,2],[2408,2],[2415,1],[2417,2],[2420,2],[2436,1],[2448,2],[2486,1],[2493,2],[2685,2],[2688,1],[2710,2],[2783,2],[2791,1],[2793,1],[2809,1],[2830,2],[2902,2],[2994,1],[3054,1],[3081,1],[3083,2],[3185,1],[3207,1],[3219,1],[3275,2],[3332,1],[3386,2],[3499,1],[3553,2],[3659,2],[3676,1],[3709,1],[3711,1],[3713,2],[3741,1],[3782,1],[3793,1],[3810,1],[3817,1],[3841,1],[3863,1],[3884,2],[3908,1],[3943,2],[3963,1],[3989,1],[4156,1],[4196,1],[4232,1],[4289,1],[4323,1],[4436,1],[4469,1],[4574,1],[4576,1],[4634,1],[4698,1],[4758,1],[4810,1],[4885,1],[4923,1],[5026,2],[5083,1],[5094,1],[5134,1],[5153,1],[5337,1],[5384,1],[5386,1],[5477,1],[5627,1],[5668,1],[5683,2],[5725,1],[5740,2],[5778,1],[5800,2],[5855,1],[5887,2],[5960,2],[6032,2],[6056,1],[6069,1],[6071,1],[6098,2],[6198,1],[6256,2],[6340,2],[6480,2],[6529,3],[6533,2],[6554,1],[6564,1],[6566,1],[6658,1],[6729,2],[6732,3],[6736,2],[6747,1],[6773,2],[6852,1],[6894,1],[6908,1],[6910,2],[7013,2],[7102,2],[7187,2],[7328,2],[7434,2],[7444,2],[7451,1],[7453,2],[7456,2],[7472,1],[7484,2],[7522,1],[7529,2],[7720,2],[7723,1],[7745,2],[7818,2],[7826,1],[7828,1],[7844,1],[7865,2],[7937,2],[8029,1],[8089,1],[8116,1],[8118,2],[8220,1],[8242,1],[8254,1],[8310,2],[8367,1],[8421,2],[8534,1],[8588,2],[8694,2],[8711,1],[8744,1],[8746,1],[8748,2],[8776,1],[8817,1],[8828,1],[8845,1],[8852,1],[8876,1],[8897,1],[8918,2],[8942,1],[8977,2],[8997,1],[9023,1],[9190,1],[9230,1],[9266,1],[9323,1],[9357,1],[9470,1],[9503,1],[9608,1],[9610,1],[9668,1],[9732,1],[9792,1],[9844,1],[9919,1],[9957,1],[10059,2],[10116,1],[10127,1],[10167,1],[10186,1],[10370,1],[10417,1],[10419,1],[10510,1],[10659,1],[10700,1],[10715,2],[10757,1],[10771,2],[10808,1],[10830,2],[10885,1],[10917,2]]},"646":{"position":[[232,2],[304,2],[328,1],[341,1],[343,1],[370,2],[470,1],[528,2],[612,2],[752,2],[801,3],[837,1],[851,1],[853,2],[898,1],[970,1],[972,2],[1029,3],[1052,2],[1131,1],[1173,1],[1187,1],[1189,2],[1292,2],[1381,2],[1466,2],[1607,2],[1713,2],[1723,2],[1730,1],[1732,2],[1735,2],[1751,1],[1763,2],[1801,1],[1808,2],[1888,1],[1890,1],[1892,2],[2061,2],[2064,2],[2067,2],[2158,2],[2238,2],[2245,1],[2247,2],[2250,2],[2266,1],[2287,2],[2359,2],[2451,1],[2511,1],[2538,1],[2540,2],[2642,1],[2664,1],[2676,1],[2732,2],[2789,1],[2843,2],[2956,1],[3010,2],[3116,2],[3133,1],[3166,1],[3168,1],[3217,1],[3254,1],[3256,2],[3307,1],[3314,1],[3341,1],[3360,1],[3381,1],[3383,3],[3408,1],[3440,3],[3463,1],[3630,1],[3670,1],[3706,1],[3763,1],[3797,1],[3910,1],[3943,1],[4048,1],[4050,1],[4108,1],[4172,1],[4224,1],[4278,1],[4362,1],[4419,1],[4530,2],[4533,2],[4536,2],[4593,1],[4810,1],[4857,1],[4859,1],[4950,1],[4967,1],[4982,1],[5058,2],[5127,2],[5172,1],[5246,1],[5248,2],[5424,2],[5496,2],[5520,1],[5533,1],[5535,1],[5562,2],[5662,1],[5720,2],[5804,2],[5944,2],[5993,3],[5997,2],[6018,1],[6028,1],[6030,1],[6122,1],[6197,2],[6200,3],[6204,2],[6215,1],[6241,2],[6320,1],[6362,1],[6376,1],[6378,2],[6481,2],[6570,2],[6655,2],[6796,2],[6902,2],[6912,2],[6919,1],[6921,2],[6924,2],[6940,1],[6952,2],[6990,1],[6997,2],[7192,2],[7195,1],[7217,2],[7290,2],[7298,1],[7300,1],[7316,1],[7337,2],[7409,2],[7501,1],[7561,1],[7588,1],[7590,2],[7692,1],[7714,1],[7726,1],[7782,2],[7839,1],[7893,2],[8006,1],[8060,2],[8166,2],[8183,1],[8216,1],[8218,1],[8220,2],[8248,1],[8289,1],[8300,1],[8317,1],[8324,1],[8351,1],[8373,1],[8394,2],[8418,1],[8453,2],[8473,1],[8499,1],[8666,1],[8706,1],[8742,1],[8799,1],[8833,1],[8946,1],[8979,1],[9084,1],[9086,1],[9144,1],[9208,1],[9268,1],[9320,1],[9395,1],[9433,1],[9539,2],[9596,1],[9607,1],[9647,1],[9666,1],[9850,1],[9897,1],[9899,1],[9990,1],[10143,1],[10184,1],[10202,2],[10247,1],[10262,2],[10300,1],[10322,2],[10377,1],[10409,2]]},"648":{"position":[[207,2],[279,2],[303,1],[316,1],[318,1],[345,2],[445,1],[503,2],[587,2],[727,2],[776,3],[780,2],[804,1],[813,1],[815,1],[843,2],[853,1],[1119,2],[1198,1],[1240,1],[1254,1],[1256,2],[1359,2],[1448,2],[1533,2],[1674,2],[1780,2],[1790,2],[1797,1],[1799,2],[1802,2],[1818,1],[1830,2],[1868,1],[1875,2],[1919,2],[1991,2],[1999,1],[2001,1],[2258,1],[2279,2],[2351,2],[2443,1],[2503,1],[2530,1],[2532,2],[2634,1],[2656,1],[2668,1],[2724,2],[2781,1],[2835,2],[2948,1],[3002,2],[3108,2],[3125,1],[3158,1],[3160,1],[3175,1],[3212,2],[3220,1],[3222,1],[3479,1],[3500,1],[3667,1],[3707,1],[3743,1],[3800,1],[3834,1],[3947,1],[3980,1],[4085,1],[4087,1],[4145,1],[4209,1],[4267,1],[4327,1],[4402,1],[4427,1],[4466,1],[4477,1],[4925,1],[4972,1],[4974,1],[5065,1],[5067,1],[5342,2],[5368,2],[5866,2],[5938,2],[5962,1],[5975,1],[5977,1],[6004,2],[6104,1],[6162,2],[6246,2],[6386,2],[6435,3],[6471,1],[6485,1],[6487,1],[6557,1],[6629,1],[6631,2],[6688,3],[6711,2],[6790,1],[6832,1],[6846,1],[6848,2],[6951,2],[7040,2],[7125,2],[7266,2],[7372,2],[7382,2],[7389,1],[7391,2],[7394,2],[7410,1],[7422,2],[7460,1],[7467,2],[7547,1],[7549,1],[7672,2],[7675,1],[7801,2],[7804,2],[7807,2],[7898,2],[7978,2],[7985,1],[7987,2],[7990,2],[8006,1],[8027,2],[8099,2],[8191,1],[8251,1],[8278,1],[8280,2],[8382,1],[8404,1],[8416,1],[8472,2],[8529,1],[8583,2],[8696,1],[8750,2],[8856,2],[8873,1],[8906,1],[8908,1],[8957,1],[8994,1],[9002,1],[9009,1],[9033,1],[9052,1],[9073,2],[9082,1],[9089,1],[9116,1],[9135,1],[9156,1],[9158,3],[9183,1],[9215,3],[9238,1],[9405,1],[9445,1],[9481,1],[9538,1],[9572,1],[9685,1],[9718,1],[9823,1],[9825,1],[9883,1],[9947,1],[9999,1],[10053,1],[10137,1],[10258,2],[10338,2],[10341,2],[10344,2],[10401,1],[10618,1],[10665,1],[10667,1],[10758,1],[10775,1],[10790,1],[10935,2],[11004,1],[11075,2],[11078,1],[11152,1],[11154,2],[11314,2],[11386,2],[11410,1],[11423,1],[11425,1],[11452,2],[11552,1],[11610,2],[11694,2],[11834,2],[11883,3],[11920,1],[11933,1],[11935,1],[11937,1],[12007,1],[12079,1],[12081,2],[12138,3],[12161,2],[12240,1],[12282,1],[12296,1],[12298,2],[12401,2],[12490,2],[12575,2],[12716,2],[12822,2],[12832,2],[12839,1],[12841,2],[12844,2],[12860,1],[12872,2],[12910,1],[12917,2],[12998,1],[13000,1],[13123,2],[13126,1],[13252,2],[13255,2],[13258,2],[13349,2],[13429,2],[13436,1],[13438,2],[13441,2],[13457,1],[13478,2],[13550,2],[13642,1],[13702,1],[13729,1],[13731,2],[13833,1],[13855,1],[13867,1],[13923,2],[13980,1],[14034,2],[14147,1],[14201,2],[14307,2],[14324,1],[14357,1],[14359,1],[14409,1],[14446,1],[14454,1],[14461,1],[14485,1],[14504,1],[14525,2],[14534,1],[14541,1],[14568,1],[14587,1],[14608,1],[14610,3],[14635,1],[14667,3],[14690,1],[14857,1],[14897,1],[14933,1],[14990,1],[15024,1],[15137,1],[15170,1],[15275,1],[15277,1],[15335,1],[15399,1],[15451,1],[15505,1],[15589,1],[15711,2],[15791,2],[15794,2],[15797,2],[15854,1],[16071,1],[16118,1],[16120,1],[16211,1],[16229,1],[16244,1],[16389,2],[16459,1],[16530,2],[16533,1],[16607,1],[16609,2],[16877,2],[16949,2],[16973,1],[16986,1],[16988,1],[17015,2],[17115,1],[17173,2],[17257,2],[17397,2],[17446,3],[17450,2],[17471,1],[17481,1],[17483,1],[17575,1],[17647,2],[17650,3],[17654,2],[17665,1],[17691,2],[17770,1],[17812,1],[17826,1],[17828,2],[17931,2],[18020,2],[18105,2],[18246,2],[18352,2],[18362,2],[18369,1],[18371,2],[18374,2],[18390,1],[18402,2],[18440,1],[18447,2],[18639,2],[18642,1],[18664,2],[18737,2],[18745,1],[18747,1],[18763,1],[18784,2],[18856,2],[18948,1],[19008,1],[19035,1],[19037,2],[19139,1],[19161,1],[19173,1],[19229,2],[19286,1],[19340,2],[19453,1],[19507,2],[19613,2],[19630,1],[19663,1],[19665,1],[19667,2],[19695,1],[19736,1],[19747,1],[19764,1],[19771,1],[19795,1],[19817,1],[19838,2],[19862,1],[19897,2],[19917,1],[19943,1],[20110,1],[20150,1],[20186,1],[20243,1],[20277,1],[20390,1],[20423,1],[20528,1],[20530,1],[20588,1],[20652,1],[20712,1],[20764,1],[20839,1],[20877,1],[20980,2],[21037,1],[21048,1],[21088,1],[21107,1],[21291,1],[21338,1],[21340,1],[21431,1],[21581,1],[21622,1],[21637,2],[21679,1],[21694,2],[21732,1],[21754,2],[21809,1],[21841,2],[21959,2],[22031,2],[22055,1],[22068,1],[22070,1],[22097,2],[22197,1],[22255,2],[22339,2],[22479,2],[22528,3],[22532,2],[22553,1],[22563,1],[22565,1],[22657,1],[22726,2],[22729,3],[22733,2],[22744,1],[22771,2],[22850,1],[22892,1],[22906,1],[22908,2],[23011,2],[23100,2],[23185,2],[23326,2],[23432,2],[23442,2],[23449,1],[23451,2],[23454,2],[23470,1],[23482,2],[23520,1],[23527,2],[23716,2],[23719,1],[23741,2],[23814,2],[23822,1],[23824,1],[23841,1],[23862,2],[23934,2],[24026,1],[24086,1],[24113,1],[24115,2],[24217,1],[24239,1],[24251,1],[24307,2],[24364,1],[24418,2],[24531,1],[24585,2],[24691,2],[24708,1],[24741,1],[24743,1],[24745,2],[24773,1],[24814,1],[24825,1],[24842,1],[24849,1],[24873,1],[24892,1],[24913,2],[24937,1],[24972,2],[24992,1],[25019,1],[25186,1],[25226,1],[25262,1],[25319,1],[25353,1],[25466,1],[25499,1],[25604,1],[25606,1],[25664,1],[25728,1],[25788,1],[25840,1],[25915,1],[25953,1],[26053,2],[26110,1],[26121,1],[26161,1],[26180,1],[26365,1],[26412,1],[26414,1],[26505,1],[26652,1],[26694,1],[26709,2],[26751,1],[26763,2],[26798,1],[26820,2],[26875,1],[26907,2]]},"650":{"position":[[216,1],[263,1],[265,1],[300,1],[312,1],[322,2],[325,2],[341,1],[362,1],[374,3],[399,1],[401,1],[403,1],[405,2],[408,1],[425,1],[427,1],[429,1]]},"658":{"position":[[782,1],[941,1]]},"660":{"position":[[1296,1],[1343,1],[1345,1],[1362,2],[1365,1],[1404,1],[1416,1],[1426,2],[1429,2],[1451,1],[1461,2],[1464,2],[1485,1],[1495,2],[1498,1],[1500,2],[1515,1],[1530,1],[1542,1],[1575,1],[1577,1],[1594,1],[1596,1],[1598,2],[1620,1],[1653,1],[1655,1],[1672,1],[1674,1],[1676,2],[1697,1],[1730,1],[1732,1],[1749,1],[1751,1],[1753,1],[1755,1],[1757,1],[1759,2],[1762,1],[1796,1],[1807,1],[1817,2],[1820,2],[1834,1],[1844,2],[1847,2],[1861,1],[1881,1],[1895,1],[1907,3],[1931,2],[1953,1],[1965,3],[1999,1],[2001,1],[2003,2],[2016,1],[2027,1],[2038,1],[2040,1],[2060,1],[2074,1],[2086,3],[2110,2],[2132,1],[2144,3],[2177,1],[2179,1],[2181,2],[2184,1],[2204,1],[2218,1],[2230,3],[2256,2],[2278,1],[2290,3],[2323,1],[2325,1],[2327,2],[2330,1],[2351,1],[2363,3],[2389,1],[2391,1],[2393,1],[2395,1],[2397,2],[2414,1],[2435,1],[2447,3],[2473,1],[2475,2],[2490,1],[2511,1],[2523,3],[2548,1],[2550,2],[2565,1],[2586,1],[2598,3],[2623,1],[2625,1],[2627,2],[2642,1],[2657,1],[2668,1],[2701,1],[2703,1],[2728,1],[2730,1],[2732,2],[2746,1],[2779,1],[2781,1],[2806,1],[2808,1],[2810,1],[2812,1],[2814,1],[2816,1],[2818,1],[2820,1],[3229,1],[3243,1],[3245,2],[3300,1],[3377,2],[3432,1],[3509,2],[3564,1],[3641,2],[3696,1],[3773,2],[3828,1],[3905,2],[3938,1],[4005,2],[4048,1],[4116,1],[4118,2],[4175,3],[4184,2],[4264,1],[4266,1],[4268,2],[4451,2],[4454,1],[4456,2],[4639,2],[4642,1],[4644,2],[4827,2],[4830,1],[4832,2],[5015,2],[5018,1],[5020,2],[5203,2],[5206,1],[5208,2],[5359,2],[5362,1],[5364,2],[5527,2],[5530,2],[5533,2],[5624,2],[5704,2],[5711,1],[5713,2],[5716,2],[5732,1],[5781,1],[5818,1],[5820,2],[5881,1],[5888,1],[5912,1],[5940,1],[5959,2],[5962,2],[6023,1],[6030,1],[6054,1],[6082,1],[6101,2],[6104,2],[6165,1],[6172,1],[6196,1],[6224,1],[6243,2],[6246,2],[6307,1],[6314,1],[6338,1],[6366,1],[6385,2],[6388,2],[6449,1],[6456,1],[6480,1],[6508,1],[6527,2],[6530,2],[6569,1],[6576,1],[6605,1],[6623,1],[6637,2],[6640,2],[6689,1],[6696,1],[6725,1],[6745,1],[6759,1],[6761,3],[6786,1],[6818,3],[6822,1],[6874,1],[6928,1],[7012,1],[7069,1],[7194,2],[7207,1],[7332,2],[7345,1],[7470,2],[7483,1],[7608,2],[7621,1],[7746,2],[7759,1],[7852,2],[7865,1],[7970,2],[7973,2],[7976,2],[8033,1],[8126,1],[8173,1],[8175,1],[8266,1],[8283,1],[8298,1],[8816,2],[8885,2],[8940,1],[9018,2],[9021,2],[9076,1],[9154,2],[9157,2],[9212,1],[9290,2],[9293,2],[9348,1],[9426,2],[9429,2],[9484,1],[9562,2],[9565,2],[9598,1],[9666,2],[9669,2],[9712,1],[9782,1],[9784,2]]},"666":{"position":[[268,2],[289,1],[299,1],[301,1],[393,1],[457,2],[460,3],[464,2],[475,1],[487,2],[671,2],[674,1],[696,2],[769,2],[777,1],[779,1],[795,1],[797,2],[825,1],[866,1],[877,1],[894,1],[901,1],[925,1],[946,1],[960,2],[984,1],[1019,2],[1039,1],[1046,1],[1106,1],[1158,1],[1233,1],[1271,1],[1366,2],[1423,1],[1434,1],[1474,1],[1493,1],[1553,1],[1600,1],[1602,1],[1693,1],[1835,1],[1876,1],[1891,2],[1933,1],[1947,2],[1984,1],[1999,2],[2047,1],[2079,2],[2159,2],[2180,1],[2190,1],[2192,1],[2284,1],[2350,2],[2353,3],[2357,2],[2368,1],[2380,2],[2566,2],[2569,1],[2591,2],[2664,2],[2672,1],[2674,1],[2690,1],[2692,2],[2720,1],[2761,1],[2772,1],[2789,1],[2796,1],[2820,1],[2843,1],[2857,2],[2881,1],[2916,2],[2936,1],[2943,1],[3003,1],[3055,1],[3130,1],[3168,1],[3265,2],[3322,1],[3333,1],[3373,1],[3392,1],[3452,1],[3499,1],[3501,1],[3592,1],[3736,1],[3777,1],[3792,2],[3834,1],[3850,2],[3889,1],[3904,2],[3952,1],[3984,2],[4011,1],[4076,2],[4097,1],[4107,1],[4109,1],[4201,1],[4265,2],[4268,3],[4272,2],[4283,1],[4295,2],[4479,2],[4482,1],[4504,2],[4577,2],[4585,1],[4587,1],[4603,1],[4605,2],[4633,1],[4674,1],[4685,1],[4702,1],[4709,1],[4733,1],[4754,1],[4768,2],[4792,1],[4827,2],[4847,1],[4854,1],[4914,1],[4966,1],[5041,1],[5079,1],[5174,2],[5231,1],[5242,1],[5282,1],[5301,1],[5361,1],[5408,1],[5410,1],[5501,1],[5643,1],[5684,1],[5699,2],[5741,1],[5755,2],[5792,1],[5807,2],[5855,1],[5887,2],[5902,1],[5972,2],[5993,1],[6003,1],[6005,1],[6097,1],[6163,2],[6166,3],[6170,2],[6181,1],[6194,2],[6380,2],[6383,1],[6405,2],[6478,2],[6486,1],[6488,1],[6505,1],[6507,2],[6535,1],[6576,1],[6587,1],[6604,1],[6611,1],[6635,1],[6658,1],[6672,2],[6696,1],[6731,2],[6751,1],[6759,1],[6819,1],[6871,1],[6946,1],[6984,1],[7081,2],[7138,1],[7149,1],[7189,1],[7208,1],[7269,1],[7316,1],[7318,1],[7409,1],[7553,1],[7595,1],[7610,2],[7652,1],[7668,2],[7707,1],[7722,2],[7770,1],[7802,2],[7818,1],[7886,2],[7907,1],[7917,1],[7919,1],[8011,1],[8075,2],[8078,3],[8082,2],[8093,1],[8106,2],[8290,2],[8293,1],[8315,2],[8388,2],[8396,1],[8398,1],[8415,1],[8417,2],[8445,1],[8486,1],[8497,1],[8514,1],[8521,1],[8545,1],[8566,1],[8580,2],[8604,1],[8639,2],[8659,1],[8667,1],[8727,1],[8779,1],[8854,1],[8892,1],[8987,2],[9044,1],[9055,1],[9095,1],[9114,1],[9175,1],[9222,1],[9224,1],[9315,1],[9457,1],[9499,1],[9514,2],[9556,1],[9570,2],[9607,1],[9622,2],[9670,1],[9702,2],[9718,1],[9788,2],[9809,1],[9819,1],[9821,1],[9913,1],[9979,2],[9982,3],[9986,2],[9997,1],[10010,2],[10196,2],[10199,1],[10221,2],[10294,2],[10302,1],[10304,1],[10321,1],[10323,2],[10351,1],[10392,1],[10403,1],[10420,1],[10427,1],[10451,1],[10474,1],[10488,2],[10512,1],[10547,2],[10567,1],[10575,1],[10635,1],[10687,1],[10762,1],[10800,1],[10897,2],[10954,1],[10965,1],[11005,1],[11024,1],[11085,1],[11132,1],[11134,1],[11225,1],[11369,1],[11411,1],[11426,2],[11468,1],[11484,2],[11523,1],[11538,2],[11586,1],[11618,2]]},"668":{"position":[[1343,1],[1382,1],[1394,1],[1404,2],[1407,2],[1429,1],[1447,1],[1458,1],[1460,1],[1470,2],[1473,2],[1476,1],[1497,1],[1509,3],[1543,1],[1545,1],[1547,1],[1549,1],[1551,2],[1577,1],[1588,1],[1599,1],[1601,1],[1611,2],[1614,2],[1617,1],[1638,1],[1650,3],[1684,1],[1686,1],[1688,1],[1690,1],[1692,2],[1713,1],[1731,1],[1742,1],[1744,1],[1765,1],[1777,3],[1815,1],[1817,2],[1820,1],[1841,1],[1853,3],[1887,1],[1889,1],[1891,1],[1893,1],[1895,2],[1917,1],[1927,2],[1930,1],[1932,2],[1947,1],[1962,1],[1974,1],[2007,1],[2009,1],[2026,1],[2028,1],[2030,2],[2052,1],[2085,1],[2087,1],[2104,1],[2106,1],[2108,2],[2134,1],[2167,1],[2169,1],[2186,1],[2188,1],[2190,2],[2212,1],[2245,1],[2247,1],[2264,1],[2266,1],[2268,1],[2270,1],[2272,1],[2274,1],[2846,2],[2867,1],[2877,1],[2879,1],[2971,1],[3035,2],[3038,3],[3042,2],[3053,1],[3066,2],[3250,2],[3253,1],[3275,2],[3348,2],[3356,1],[3358,1],[3375,1],[3377,2],[3405,1],[3446,1],[3457,1],[3474,1],[3481,1],[3505,1],[3526,1],[3540,2],[3564,1],[3599,2],[3619,1],[3627,1],[3687,1],[3739,1],[3814,1],[3852,1],[3947,2],[4004,1],[4015,1],[4055,1],[4074,1],[4135,1],[4182,1],[4184,1],[4275,1],[4417,1],[4459,1],[4474,2],[4516,1],[4530,2],[4567,1],[4582,2],[4630,1],[4662,2],[4852,2],[4924,2],[4948,1],[4961,1],[4963,1],[4990,2],[5090,1],[5148,2],[5232,2],[5372,2],[5421,3],[5457,1],[5471,1],[5473,2],[5531,1],[5607,1],[5609,2],[5666,3],[5689,2],[5768,1],[5810,1],[5824,1],[5826,2],[5929,2],[6018,2],[6103,2],[6244,2],[6350,2],[6360,2],[6367,1],[6369,2],[6372,2],[6388,1],[6400,2],[6438,1],[6445,2],[6525,1],[6527,1],[6529,2],[6715,2],[6718,2],[6721,2],[6812,2],[6892,2],[6899,1],[6901,2],[6904,2],[6920,1],[6941,2],[7013,2],[7105,1],[7165,1],[7192,1],[7194,2],[7296,1],[7318,1],[7330,1],[7386,2],[7443,1],[7497,2],[7610,1],[7664,2],[7770,2],[7787,1],[7820,1],[7822,1],[7871,1],[7908,1],[7910,2],[7974,1],[7981,1],[8005,1],[8033,1],[8052,1],[8054,3],[8079,1],[8111,3],[8134,1],[8301,1],[8341,1],[8377,1],[8434,1],[8468,1],[8581,1],[8614,1],[8719,1],[8721,1],[8779,1],[8843,1],[8895,1],[8949,1],[9033,1],[9090,1],[9218,2],[9221,2],[9224,2],[9281,1],[9498,1],[9545,1],[9547,1],[9638,1],[9655,1],[9670,1],[9750,2],[9819,2],[9877,1],[9955,1],[9957,2],[10099,2],[10120,1],[10130,1],[10132,1],[10224,1],[10288,2],[10291,3],[10295,2],[10306,1],[10318,2],[10502,2],[10505,1],[10527,2],[10600,2],[10608,1],[10610,1],[10626,1],[10628,2],[10656,1],[10697,1],[10708,1],[10725,1],[10732,1],[10756,1],[10777,1],[10791,2],[10815,1],[10850,2],[10870,1],[10877,1],[10937,1],[10989,1],[11064,1],[11102,1],[11197,2],[11254,1],[11265,1],[11305,1],[11324,1],[11384,1],[11431,1],[11433,1],[11524,1],[11666,1],[11707,1],[11722,2],[11764,1],[11778,2],[11815,1],[11830,2],[11878,1],[11910,2]]},"670":{"position":[[1184,2],[1256,2],[1280,1],[1293,1],[1295,1],[1322,2],[1422,1],[1480,2],[1564,2],[1704,2],[1753,3],[1790,1],[1803,1],[1805,1],[1807,2],[1892,1],[1968,1],[1970,2],[2027,3],[2050,2],[2129,1],[2171,1],[2185,1],[2187,2],[2290,2],[2379,2],[2464,2],[2605,2],[2711,2],[2721,2],[2728,1],[2730,2],[2733,2],[2749,1],[2761,2],[2799,1],[2806,2],[2887,1],[2889,1],[2891,2],[3104,2],[3107,2],[3110,2],[3201,2],[3281,2],[3288,1],[3290,2],[3293,2],[3309,1],[3330,2],[3402,2],[3494,1],[3554,1],[3581,1],[3583,2],[3685,1],[3707,1],[3719,1],[3775,2],[3832,1],[3886,2],[3999,1],[4053,2],[4159,2],[4176,1],[4209,1],[4211,1],[4261,1],[4298,1],[4300,2],[4391,1],[4398,1],[4422,1],[4450,1],[4469,1],[4471,3],[4496,1],[4528,3],[4551,1],[4718,1],[4758,1],[4794,1],[4851,1],[4885,1],[4998,1],[5031,1],[5136,1],[5138,1],[5196,1],[5260,1],[5312,1],[5366,1],[5450,1],[5508,1],[5663,2],[5666,2],[5669,2],[5726,1],[5943,1],[5990,1],[5992,1],[6083,1],[6101,1],[6116,1],[6196,2],[6266,2],[6351,1],[6429,1],[6431,2],[6631,2],[6652,1],[6662,1],[6664,1],[6756,1],[6820,2],[6842,1],[6856,1],[6858,1],[6933,1],[6935,1],[6937,4],[6942,2],[6953,1],[6965,2],[7149,2],[7226,1],[7356,1],[7358,1],[7360,1],[7362,1],[7384,2],[7457,2],[7465,1],[7467,1],[7483,1],[7485,2],[7513,1],[7554,1],[7565,1],[7582,1],[7589,1],[7613,1],[7634,1],[7648,2],[7668,1],[7794,4],[7820,1],[7855,2],[7875,1],[7882,1],[7942,1],[7994,1],[8069,1],[8107,1],[8202,2],[8337,2],[8340,2],[8397,1],[8408,1],[8448,1],[8467,1],[8527,1],[8574,1],[8576,1],[8667,1],[8922,1],[8963,1],[8978,2],[9020,1],[9034,2],[9071,1],[9086,2],[9135,1],[9137,1],[9139,2],[9179,1],[9203,1],[9231,1],[9251,2],[9271,1],[9303,2],[9456,2],[9477,1],[9487,1],[9489,1],[9581,1],[9645,2],[9667,1],[9681,1],[9683,1],[9758,1],[9760,1],[9762,4],[9767,2],[9778,1],[9791,2],[9975,2],[10052,1],[10182,1],[10184,1],[10186,1],[10188,1],[10210,2],[10283,2],[10291,1],[10293,1],[10310,1],[10312,2],[10340,1],[10381,1],[10392,1],[10409,1],[10416,1],[10440,1],[10461,1],[10475,2],[10495,1],[10621,4],[10647,1],[10682,2],[10702,1],[10710,1],[10770,1],[10822,1],[10897,1],[10935,1],[11030,2],[11165,2],[11168,2],[11225,1],[11236,1],[11276,1],[11295,1],[11356,1],[11403,1],[11405,1],[11496,1],[11751,1],[11793,1],[11808,2],[11850,1],[11864,2],[11901,1],[11916,2],[11965,1],[11967,1],[11969,2],[12009,1],[12033,1],[12061,1],[12081,2],[12101,1],[12133,2]]},"672":{"position":[[634,1],[681,1],[683,1],[700,2],[703,1],[742,1],[754,1],[764,2],[767,2],[789,1],[807,1],[818,1],[820,1],[830,2],[833,2],[836,1],[857,1],[869,3],[903,1],[905,1],[907,1],[909,1],[911,2],[937,1],[948,1],[959,1],[961,1],[971,2],[974,2],[977,1],[998,1],[1010,3],[1044,1],[1046,1],[1048,1],[1050,1],[1052,2],[1073,1],[1091,1],[1102,1],[1104,1],[1125,1],[1137,3],[1175,1],[1177,2],[1180,1],[1201,1],[1213,3],[1247,1],[1249,1],[1251,1],[1253,1],[1255,2],[1277,1],[1287,2],[1290,1],[1292,2],[1307,1],[1322,1],[1334,1],[1367,1],[1369,1],[1386,1],[1388,1],[1390,2],[1412,1],[1445,1],[1447,1],[1464,1],[1466,1],[1468,2],[1494,1],[1527,1],[1529,1],[1546,1],[1548,1],[1550,2],[1572,1],[1605,1],[1607,1],[1624,1],[1626,1],[1628,1],[1630,1],[1632,1],[1634,2],[1637,1],[1671,1],[1682,1],[1692,2],[1695,2],[1709,1],[1719,2],[1722,2],[1736,1],[1756,1],[1770,1],[1782,3],[1806,2],[1828,1],[1840,3],[1874,1],[1876,1],[1878,2],[1891,1],[1902,1],[1913,1],[1915,1],[1936,1],[1948,3],[1974,1],[1976,2],[1979,1],[1999,1],[2013,1],[2025,3],[2049,2],[2071,1],[2083,3],[2116,1],[2118,1],[2120,2],[2123,1],[2143,1],[2157,1],[2169,3],[2195,2],[2217,1],[2229,3],[2262,1],[2264,1],[2266,1],[2268,1],[2270,1],[2272,2],[2289,1],[2310,1],[2322,3],[2348,1],[2350,2],[2365,1],[2386,1],[2398,3],[2423,1],[2425,2],[2440,1],[2461,1],[2473,3],[2498,1],[2500,1],[2502,2],[2517,1],[2532,1],[2543,1],[2576,1],[2578,1],[2603,1],[2605,1],[2607,2],[2621,1],[2654,1],[2656,1],[2681,1],[2683,1],[2685,1],[2687,1],[2689,1],[2691,1],[2693,1],[2695,1],[2768,1],[2782,1],[2784,2],[2839,1],[2916,2],[2971,1],[3048,2],[3103,1],[3180,2],[3235,1],[3312,2],[3367,1],[3444,2],[3477,1],[3544,2],[3587,1],[3655,1],[3657,2],[3714,3],[3723,2],[3803,1],[3805,1],[3807,2],[3990,2],[3993,1],[3995,2],[4178,2],[4181,1],[4183,2],[4366,2],[4369,1],[4371,2],[4554,2],[4557,1],[4559,2],[4742,2],[4745,1],[4747,2],[4898,2],[4901,1],[4903,2],[5066,2],[5069,2],[5072,2],[5163,2],[5243,2],[5250,1],[5252,2],[5255,2],[5271,1],[5320,1],[5357,1],[5359,2],[5420,1],[5427,1],[5451,1],[5479,1],[5498,2],[5501,2],[5562,1],[5569,1],[5593,1],[5621,1],[5640,2],[5643,2],[5704,1],[5711,1],[5735,1],[5763,1],[5782,2],[5785,2],[5846,1],[5853,1],[5877,1],[5905,1],[5924,2],[5927,2],[5988,1],[5995,1],[6019,1],[6047,1],[6066,2],[6069,2],[6108,1],[6115,1],[6144,1],[6162,1],[6176,2],[6179,2],[6228,1],[6235,1],[6264,1],[6284,1],[6298,1],[6300,3],[6325,1],[6357,3],[6361,1],[6413,1],[6467,1],[6551,1],[6608,1],[6733,2],[6746,1],[6871,2],[6884,1],[7009,2],[7022,1],[7147,2],[7160,1],[7285,2],[7298,1],[7391,2],[7404,1],[7509,2],[7512,2],[7515,2],[7572,1],[7665,1],[7712,1],[7714,1],[7805,1],[7822,1],[7837,1],[8355,2],[8424,2],[8479,1],[8557,2],[8560,2],[8615,1],[8693,2],[8696,2],[8751,1],[8829,2],[8832,2],[8887,1],[8965,2],[8968,2],[9023,1],[9101,2],[9104,2],[9137,1],[9205,2],[9208,2],[9251,1],[9321,1],[9323,2]]},"678":{"position":[[410,1],[579,1],[878,1],[1158,1],[1278,1]]},"690":{"position":[[800,1],[847,1],[849,1],[866,2],[869,1],[902,1],[925,1],[935,2],[938,2],[966,1],[976,2],[979,2],[1000,1],[1010,2],[1013,1],[1015,2],[1030,1],[1045,1],[1068,1],[1101,1],[1103,1],[1120,1],[1122,1],[1124,2],[1152,1],[1185,1],[1187,1],[1204,1],[1206,1],[1208,2],[1229,1],[1262,1],[1264,1],[1281,1],[1283,1],[1285,1],[1287,1],[1289,1],[1291,1],[1293,1],[1295,1]]},"692":{"position":[[559,2],[631,2],[655,1],[668,1],[670,1],[697,2],[797,1],[855,2],[939,2],[1079,2],[1128,3],[1164,1],[1178,1],[1180,1],[1252,1],[1254,2],[1311,3],[1334,2],[1413,1],[1455,1],[1469,1],[1471,2],[1574,2],[1663,2],[1748,2],[1889,2],[1995,2],[2005,2],[2012,1],[2014,2],[2017,2],[2033,1],[2045,2],[2083,1],[2090,2],[2170,1],[2172,1],[2298,2],[2301,2],[2304,2],[2395,2],[2475,2],[2482,1],[2484,2],[2487,2],[2503,1],[2524,2],[2596,2],[2688,1],[2748,1],[2775,1],[2777,2],[2879,1],[2901,1],[2913,1],[2969,2],[3026,1],[3080,2],[3193,1],[3247,2],[3353,2],[3370,1],[3403,1],[3405,1],[3454,1],[3491,1],[3499,1],[3506,1],[3530,1],[3560,1],[3573,1],[3575,3],[3600,1],[3632,3],[3655,1],[3822,1],[3862,1],[3898,1],[3955,1],[3989,1],[4102,1],[4135,1],[4240,1],[4242,1],[4300,1],[4364,1],[4416,1],[4470,1],[4554,1],[4678,2],[4681,2],[4684,2],[4741,1],[4958,1],[5005,1],[5007,1],[5098,1],[5115,1],[5130,1],[5206,2],[5275,1],[5349,1],[5351,2],[5515,2],[5587,2],[5611,1],[5624,1],[5626,1],[5653,2],[5753,1],[5811,2],[5895,2],[6035,2],[6084,3],[6120,1],[6134,1],[6136,1],[6212,1],[6214,2],[6271,3],[6294,2],[6373,1],[6415,1],[6429,1],[6431,2],[6534,2],[6623,2],[6708,2],[6849,2],[6955,2],[6965,2],[6972,1],[6974,2],[6977,2],[6993,1],[7005,2],[7043,1],[7050,2],[7130,1],[7132,1],[7262,2],[7265,2],[7268,2],[7359,2],[7439,2],[7446,1],[7448,2],[7451,2],[7467,1],[7488,2],[7560,2],[7652,1],[7712,1],[7739,1],[7741,2],[7843,1],[7865,1],[7877,1],[7933,2],[7990,1],[8044,2],[8157,1],[8211,2],[8317,2],[8334,1],[8367,1],[8369,1],[8418,1],[8455,1],[8463,1],[8470,1],[8494,1],[8528,1],[8541,1],[8543,3],[8568,1],[8600,3],[8623,1],[8790,1],[8830,1],[8866,1],[8923,1],[8957,1],[9070,1],[9103,1],[9208,1],[9210,1],[9268,1],[9332,1],[9384,1],[9438,1],[9522,1],[9650,2],[9653,2],[9656,2],[9713,1],[9930,1],[9977,1],[9979,1],[10070,1],[10087,1],[10102,1],[10182,2],[10251,1],[10329,1],[10331,2],[10503,2],[10575,2],[10599,1],[10612,1],[10614,1],[10641,2],[10741,1],[10799,2],[10883,2],[11023,2],[11072,3],[11108,1],[11122,1],[11124,1],[11197,1],[11274,1],[11343,1],[11345,2],[11402,3],[11425,2],[11504,1],[11546,1],[11560,1],[11562,2],[11665,2],[11754,2],[11839,2],[11980,2],[12086,2],[12096,2],[12103,1],[12105,2],[12108,2],[12124,1],[12136,2],[12174,1],[12181,2],[12261,1],[12263,1],[12389,2],[12392,1],[12522,2],[12525,1],[12648,2],[12651,2],[12654,2],[12745,2],[12825,2],[12832,1],[12834,2],[12837,2],[12853,1],[12874,2],[12946,2],[13038,1],[13098,1],[13125,1],[13127,2],[13229,1],[13251,1],[13263,1],[13319,2],[13376,1],[13430,2],[13543,1],[13597,2],[13703,2],[13720,1],[13753,1],[13755,1],[13804,1],[13841,1],[13849,1],[13856,1],[13880,1],[13910,1],[13923,2],[13932,1],[13939,1],[13963,1],[13997,1],[14010,2],[14019,1],[14026,1],[14050,1],[14077,1],[14090,1],[14092,3],[14117,1],[14149,3],[14172,1],[14339,1],[14379,1],[14415,1],[14472,1],[14506,1],[14619,1],[14652,1],[14757,1],[14759,1],[14817,1],[14881,1],[14933,1],[14987,1],[15071,1],[15195,2],[15279,2],[15356,2],[15359,2],[15362,2],[15419,1],[15636,1],[15683,1],[15685,1],[15776,1],[15793,1],[15808,1],[16029,2],[16098,1],[16172,2],[16175,1],[16253,2],[16256,1],[16327,1],[16329,2],[16794,2],[16866,2],[16890,1],[16903,1],[16905,1],[16932,2],[17032,1],[17090,2],[17174,2],[17314,2],[17363,3],[17367,2],[17388,1],[17398,1],[17400,1],[17492,1],[17564,2],[17567,3],[17571,2],[17582,1],[17608,2],[17687,1],[17729,1],[17743,1],[17745,2],[17848,2],[17937,2],[18022,2],[18163,2],[18269,2],[18279,2],[18286,1],[18288,2],[18291,2],[18307,1],[18319,2],[18357,1],[18364,2],[18556,2],[18559,1],[18581,2],[18654,2],[18662,1],[18664,1],[18680,1],[18701,2],[18773,2],[18865,1],[18925,1],[18952,1],[18954,2],[19056,1],[19078,1],[19090,1],[19146,2],[19203,1],[19257,2],[19370,1],[19424,2],[19530,2],[19547,1],[19580,1],[19582,1],[19584,2],[19612,1],[19653,1],[19664,1],[19681,1],[19688,1],[19712,1],[19742,1],[19755,2],[19779,1],[19814,2],[19834,1],[19860,1],[20027,1],[20067,1],[20103,1],[20160,1],[20194,1],[20307,1],[20340,1],[20445,1],[20447,1],[20505,1],[20569,1],[20629,1],[20681,1],[20756,1],[20794,1],[20897,2],[20954,1],[20965,1],[21005,1],[21024,1],[21208,1],[21255,1],[21257,1],[21348,1],[21498,1],[21539,1],[21554,2],[21596,1],[21619,2],[21665,1],[21679,2],[21726,1],[21758,2],[21912,2],[21984,2],[22008,1],[22021,1],[22023,1],[22050,2],[22150,1],[22208,2],[22292,2],[22432,2],[22481,3],[22485,2],[22506,1],[22516,1],[22518,1],[22610,1],[22679,2],[22682,3],[22686,2],[22697,1],[22724,2],[22803,1],[22845,1],[22859,1],[22861,2],[22964,2],[23053,2],[23138,2],[23279,2],[23385,2],[23395,2],[23402,1],[23404,2],[23407,2],[23423,1],[23435,2],[23473,1],[23480,2],[23669,2],[23672,1],[23694,2],[23767,2],[23775,1],[23777,1],[23794,1],[23815,2],[23887,2],[23979,1],[24039,1],[24066,1],[24068,2],[24170,1],[24192,1],[24204,1],[24260,2],[24317,1],[24371,2],[24484,1],[24538,2],[24644,2],[24661,1],[24694,1],[24696,1],[24698,2],[24726,1],[24767,1],[24778,1],[24795,1],[24802,1],[24826,1],[24853,1],[24866,2],[24890,1],[24925,2],[24945,1],[24972,1],[25139,1],[25179,1],[25215,1],[25272,1],[25306,1],[25419,1],[25452,1],[25557,1],[25559,1],[25617,1],[25681,1],[25741,1],[25793,1],[25868,1],[25906,1],[26006,2],[26063,1],[26074,1],[26114,1],[26133,1],[26318,1],[26365,1],[26367,1],[26458,1],[26605,1],[26647,1],[26662,2],[26704,1],[26724,2],[26767,1],[26781,2],[26828,1],[26860,2]]},"694":{"position":[[1423,1],[1470,1],[1472,1],[1505,1],[1519,1],[1529,2],[1532,2],[1553,1],[1563,2],[1566,2],[1590,1],[1601,1],[1612,1],[1614,1],[1624,2],[1627,2],[1630,1],[1651,1],[1676,1],[1678,2],[1681,1],[1702,1],[1733,1],[1735,1],[1737,1],[1739,1],[1741,2],[1769,1],[1780,1],[1791,1],[1793,1],[1803,2],[1806,2],[1809,1],[1830,1],[1855,1],[1857,2],[1860,1],[1881,1],[1912,1],[1914,1],[1916,1],[1918,1],[1920,2],[1941,1],[1952,1],[1963,1],[1965,1],[1975,2],[1978,2],[1981,1],[2002,1],[2027,1],[2029,1],[2031,1],[2033,1],[2035,1],[2037,2],[2052,1],[2067,1],[2081,1],[2114,1],[2116,1],[2133,1],[2135,1],[2137,2],[2158,1],[2191,1],[2193,1],[2210,1],[2212,1],[2214,2],[2238,1],[2271,1],[2273,1],[2290,1],[2292,1],[2294,2],[2322,1],[2355,1],[2357,1],[2374,1],[2376,1],[2378,2],[2399,1],[2432,1],[2434,1],[2451,1],[2453,1],[2455,1],[2457,1],[2459,1],[2461,1],[2463,1],[2465,1],[2977,2],[3049,2],[3073,1],[3086,1],[3088,1],[3115,2],[3215,1],[3273,2],[3357,2],[3497,2],[3546,3],[3582,1],[3596,1],[3598,1],[3668,1],[3732,1],[3805,1],[3870,1],[3872,2],[3929,3],[3952,2],[4031,1],[4073,1],[4087,1],[4089,2],[4192,2],[4281,2],[4366,2],[4507,2],[4613,2],[4623,2],[4630,1],[4632,2],[4635,2],[4651,1],[4663,2],[4701,1],[4708,2],[4788,1],[4790,1],[4913,2],[4916,1],[5033,2],[5036,1],[5162,2],[5165,1],[5284,2],[5287,2],[5290,2],[5381,2],[5461,2],[5468,1],[5470,2],[5473,2],[5489,1],[5510,2],[5582,2],[5674,1],[5734,1],[5761,1],[5763,2],[5865,1],[5887,1],[5899,1],[5955,2],[6012,1],[6066,2],[6179,1],[6233,2],[6339,2],[6356,1],[6389,1],[6391,1],[6440,1],[6477,1],[6485,1],[6492,1],[6516,1],[6543,1],[6556,2],[6565,1],[6572,1],[6596,1],[6617,1],[6630,2],[6639,1],[6646,1],[6673,1],[6700,1],[6713,2],[6722,1],[6729,1],[6755,1],[6776,1],[6789,1],[6791,3],[6816,1],[6848,3],[6871,1],[7038,1],[7078,1],[7114,1],[7171,1],[7205,1],[7318,1],[7351,1],[7456,1],[7458,1],[7516,1],[7580,1],[7632,1],[7686,1],[7770,1],[7891,2],[7962,2],[8042,2],[8115,2],[8118,2],[8121,2],[8178,1],[8395,1],[8442,1],[8444,1],[8535,1],[8552,1],[8567,1],[8840,2],[8909,1],[8980,2],[8983,1],[9048,2],[9051,1],[9125,2],[9128,1],[9195,1],[9197,2],[9405,2],[9477,2],[9501,1],[9514,1],[9516,1],[9543,2],[9643,1],[9701,2],[9785,2],[9925,2],[9974,3],[9978,2],[9999,1],[10009,1],[10011,1],[10103,1],[10178,2],[10181,3],[10185,2],[10196,1],[10222,2],[10301,1],[10343,1],[10357,1],[10359,2],[10462,2],[10551,2],[10636,2],[10777,2],[10883,2],[10893,2],[10900,1],[10902,2],[10905,2],[10921,1],[10933,2],[10971,1],[10978,2],[11173,2],[11176,1],[11198,2],[11271,2],[11279,1],[11281,1],[11297,1],[11318,2],[11390,2],[11482,1],[11542,1],[11569,1],[11571,2],[11673,1],[11695,1],[11707,1],[11763,2],[11820,1],[11874,2],[11987,1],[12041,2],[12147,2],[12164,1],[12197,1],[12199,1],[12201,2],[12229,1],[12270,1],[12281,1],[12298,1],[12305,1],[12332,1],[12362,1],[12375,2],[12399,1],[12434,2],[12454,1],[12480,1],[12647,1],[12687,1],[12723,1],[12780,1],[12814,1],[12927,1],[12960,1],[13065,1],[13067,1],[13125,1],[13189,1],[13249,1],[13301,1],[13376,1],[13414,1],[13520,2],[13577,1],[13588,1],[13628,1],[13647,1],[13831,1],[13878,1],[13880,1],[13971,1],[14124,1],[14165,1],[14183,2],[14228,1],[14251,2],[14297,1],[14311,2],[14358,1],[14390,2]]},"696":{"position":[[431,1],[470,1],[484,1],[494,2],[497,2],[518,1],[528,2],[531,1],[533,2],[548,1],[563,1],[577,1],[610,1],[612,1],[629,1],[631,1],[633,2],[654,1],[687,1],[689,1],[706,1],[708,1],[710,1],[712,1],[714,1],[716,1],[1190,1],[1237,1],[1239,1],[1256,2],[1259,1],[1292,1],[1306,1],[1316,2],[1319,2],[1340,1],[1350,2],[1353,2],[1377,1],[1388,1],[1399,1],[1401,1],[1411,2],[1414,2],[1417,1],[1438,1],[1463,1],[1465,2],[1468,1],[1489,1],[1520,1],[1522,1],[1524,1],[1526,1],[1528,2],[1556,1],[1567,1],[1578,1],[1580,1],[1590,2],[1593,2],[1596,1],[1617,1],[1642,1],[1644,2],[1647,1],[1668,1],[1699,1],[1701,1],[1703,1],[1705,1],[1707,2],[1728,1],[1739,1],[1750,1],[1752,1],[1762,2],[1765,2],[1768,1],[1789,1],[1814,1],[1816,1],[1818,1],[1820,1],[1822,1],[1824,2],[1839,1],[1854,1],[1868,1],[1901,1],[1903,1],[1920,2],[1923,1],[1972,1],[1974,1],[1976,2],[1997,1],[2030,1],[2032,1],[2049,2],[2052,1],[2107,1],[2109,1],[2111,2],[2135,1],[2168,1],[2170,1],[2187,1],[2189,1],[2191,2],[2219,1],[2252,1],[2254,1],[2271,1],[2273,1],[2275,2],[2296,1],[2329,1],[2331,1],[2348,1],[2350,1],[2352,1],[2354,1],[2356,1],[2358,2],[2361,1],[2400,1],[2414,1],[2424,2],[2427,2],[2448,1],[2458,2],[2461,1],[2463,2],[2478,1],[2493,1],[2507,1],[2540,1],[2542,1],[2559,1],[2561,1],[2563,2],[2584,1],[2617,1],[2619,1],[2636,1],[2638,1],[2640,1],[2642,1],[2644,1],[2646,1],[2648,1],[2650,1],[2880,2],[2952,2],[2976,1],[2989,1],[2991,1],[3018,2],[3118,1],[3176,2],[3260,2],[3400,2],[3449,3],[3485,1],[3499,1],[3501,1],[3585,1],[3661,1],[3663,2],[3720,3],[3743,2],[3822,1],[3864,1],[3878,1],[3880,2],[3983,2],[4072,2],[4157,2],[4298,2],[4404,2],[4414,2],[4421,1],[4423,2],[4426,2],[4442,1],[4454,2],[4492,1],[4499,2],[4579,1],[4581,1],[4718,2],[4721,1],[4851,2],[4854,2],[4857,2],[4948,2],[5028,2],[5035,1],[5037,2],[5040,2],[5056,1],[5077,2],[5149,2],[5241,1],[5301,1],[5328,1],[5330,2],[5432,1],[5454,1],[5466,1],[5522,2],[5579,1],[5633,2],[5746,1],[5800,2],[5906,2],[5923,1],[5956,1],[5958,1],[6007,1],[6044,1],[6052,1],[6059,1],[6086,1],[6113,1],[6137,2],[6146,1],[6153,1],[6179,1],[6200,1],[6224,1],[6226,3],[6251,1],[6283,3],[6306,1],[6473,1],[6513,1],[6549,1],[6606,1],[6640,1],[6753,1],[6786,1],[6891,1],[6893,1],[6951,1],[7015,1],[7067,1],[7121,1],[7205,1],[7340,2],[7424,2],[7427,2],[7430,2],[7487,1],[7704,1],[7751,1],[7753,1],[7844,1],[7861,1],[7876,1],[8039,2],[8108,1],[8193,2],[8196,1],[8274,1],[8276,2],[8573,2],[8645,2],[8669,1],[8682,1],[8684,1],[8711,2],[8811,1],[8869,2],[8953,2],[9093,2],[9142,3],[9178,1],[9192,1],[9194,1],[9289,1],[9384,1],[9467,1],[9549,1],[9551,2],[9608,3],[9631,2],[9710,1],[9752,1],[9766,1],[9768,2],[9871,2],[9960,2],[10045,2],[10186,2],[10292,2],[10302,2],[10309,1],[10311,2],[10314,2],[10330,1],[10342,2],[10380,1],[10387,2],[10467,1],[10469,1],[10617,2],[10620,1],[10768,2],[10771,1],[10907,2],[10910,1],[11046,2],[11049,2],[11052,2],[11143,2],[11223,2],[11230,1],[11232,2],[11235,2],[11251,1],[11272,2],[11344,2],[11436,1],[11496,1],[11523,1],[11525,2],[11627,1],[11649,1],[11661,1],[11717,2],[11774,1],[11828,2],[11941,1],[11995,2],[12101,2],[12118,1],[12151,1],[12153,1],[12202,1],[12239,1],[12247,1],[12254,1],[12303,1],[12330,1],[12343,2],[12352,1],[12359,1],[12408,1],[12435,1],[12448,2],[12457,1],[12464,1],[12507,1],[12528,1],[12541,2],[12550,1],[12557,1],[12600,1],[12621,1],[12634,1],[12636,3],[12661,1],[12693,3],[12716,1],[12883,1],[12923,1],[12959,1],[13016,1],[13050,1],[13163,1],[13196,1],[13301,1],[13303,1],[13361,1],[13425,1],[13477,1],[13531,1],[13615,1],[13761,2],[13863,2],[13953,2],[14043,2],[14046,2],[14049,2],[14106,1],[14323,1],[14370,1],[14372,1],[14463,1],[14480,1],[14495,1],[14851,2],[14920,1],[15016,2],[15019,1],[15115,2],[15118,1],[15202,2],[15205,1],[15289,1],[15291,2],[15672,2],[15744,2],[15768,1],[15781,1],[15783,1],[15810,2],[15910,1],[15968,2],[16052,2],[16192,2],[16241,3],[16245,2],[16266,1],[16276,1],[16278,1],[16370,1],[16439,2],[16442,3],[16446,2],[16457,1],[16483,2],[16562,1],[16604,1],[16618,1],[16620,2],[16723,2],[16812,2],[16897,2],[17038,2],[17144,2],[17154,2],[17161,1],[17163,2],[17166,2],[17182,1],[17194,2],[17232,1],[17239,2],[17428,2],[17431,1],[17453,2],[17526,2],[17534,1],[17536,1],[17552,1],[17573,2],[17645,2],[17737,1],[17797,1],[17824,1],[17826,2],[17928,1],[17950,1],[17962,1],[18018,2],[18075,1],[18129,2],[18242,1],[18296,2],[18402,2],[18419,1],[18452,1],[18454,1],[18456,2],[18484,1],[18525,1],[18536,1],[18553,1],[18560,1],[18581,1],[18611,1],[18624,2],[18648,1],[18683,2],[18703,1],[18729,1],[18896,1],[18936,1],[18972,1],[19029,1],[19063,1],[19176,1],[19209,1],[19314,1],[19316,1],[19374,1],[19438,1],[19498,1],[19550,1],[19625,1],[19663,1],[19763,2],[19820,1],[19831,1],[19871,1],[19890,1],[20074,1],[20121,1],[20123,1],[20214,1],[20361,1],[20402,1],[20414,2],[20453,1],[20476,2],[20522,1],[20536,2],[20583,1],[20615,2]]},"698":{"position":[[1016,1],[1063,1],[1065,1],[1082,2],[1085,1],[1118,1],[1132,1],[1142,2],[1145,2],[1166,1],[1176,2],[1179,2],[1203,1],[1214,1],[1225,1],[1227,1],[1248,1],[1273,1],[1275,2],[1278,1],[1299,1],[1330,1],[1332,1],[1334,1],[1336,1],[1338,2],[1366,1],[1377,1],[1388,1],[1390,1],[1411,1],[1436,1],[1438,2],[1441,1],[1462,1],[1493,1],[1495,1],[1497,1],[1499,1],[1501,2],[1522,1],[1533,1],[1544,1],[1546,1],[1567,1],[1592,1],[1594,1],[1596,1],[1598,1],[1600,1],[1602,2],[1617,1],[1632,1],[1646,1],[1679,1],[1681,1],[1698,2],[1701,1],[1750,1],[1752,1],[1754,2],[1775,1],[1808,1],[1810,1],[1827,2],[1830,1],[1885,1],[1887,1],[1889,1],[1891,1],[1893,1],[1895,2],[1898,1],[1937,1],[1951,1],[1961,2],[1964,2],[1985,1],[1995,2],[1998,1],[2000,2],[2015,1],[2030,1],[2044,1],[2077,1],[2079,1],[2096,1],[2098,1],[2100,2],[2121,1],[2154,1],[2156,1],[2173,1],[2175,1],[2177,1],[2179,1],[2181,1],[2183,1],[2185,1],[2187,1],[3075,2],[3147,2],[3171,1],[3184,1],[3186,1],[3213,2],[3313,1],[3371,2],[3455,2],[3595,2],[3644,3],[3680,1],[3694,1],[3696,1],[3770,1],[3848,1],[3918,1],[3920,2],[3977,3],[4000,2],[4079,1],[4121,1],[4135,1],[4137,2],[4240,2],[4329,2],[4414,2],[4555,2],[4661,2],[4671,2],[4678,1],[4680,2],[4683,2],[4699,1],[4711,2],[4749,1],[4756,2],[4836,1],[4838,1],[4965,2],[4968,1],[5099,2],[5102,1],[5226,2],[5229,2],[5232,2],[5323,2],[5403,2],[5410,1],[5412,2],[5415,2],[5431,1],[5452,2],[5524,2],[5616,1],[5676,1],[5703,1],[5705,2],[5807,1],[5829,1],[5841,1],[5897,2],[5954,1],[6008,2],[6121,1],[6175,2],[6281,2],[6298,1],[6331,1],[6333,1],[6382,1],[6419,1],[6427,1],[6434,1],[6459,1],[6489,1],[6502,2],[6511,1],[6518,1],[6543,1],[6577,1],[6590,2],[6599,1],[6606,1],[6631,1],[6658,1],[6671,1],[6673,3],[6698,1],[6730,3],[6753,1],[6920,1],[6960,1],[6996,1],[7053,1],[7087,1],[7200,1],[7233,1],[7338,1],[7340,1],[7398,1],[7462,1],[7514,1],[7568,1],[7652,1],[7777,2],[7862,2],[7940,2],[7943,2],[7946,2],[8003,1],[8220,1],[8267,1],[8269,1],[8360,1],[8377,1],[8392,1],[8616,2],[8685,1],[8760,2],[8763,1],[8842,2],[8845,1],[8917,1],[8919,2],[9381,2],[9453,2],[9477,1],[9490,1],[9492,1],[9519,2],[9619,1],[9677,2],[9761,2],[9901,2],[9950,3],[9954,2],[9975,1],[9985,1],[9987,1],[10079,1],[10152,2],[10155,3],[10159,2],[10170,1],[10197,2],[10276,1],[10318,1],[10332,1],[10334,2],[10437,2],[10526,2],[10611,2],[10752,2],[10858,2],[10868,2],[10875,1],[10877,2],[10880,2],[10896,1],[10908,2],[10946,1],[10953,2],[11146,2],[11149,1],[11171,2],[11244,2],[11252,1],[11254,1],[11271,1],[11292,2],[11364,2],[11456,1],[11516,1],[11543,1],[11545,2],[11647,1],[11669,1],[11681,1],[11737,2],[11794,1],[11848,2],[11961,1],[12015,2],[12121,2],[12138,1],[12171,1],[12173,1],[12175,2],[12203,1],[12244,1],[12255,1],[12272,1],[12279,1],[12304,1],[12334,1],[12347,2],[12371,1],[12406,2],[12426,1],[12453,1],[12620,1],[12660,1],[12696,1],[12753,1],[12787,1],[12900,1],[12933,1],[13038,1],[13040,1],[13098,1],[13162,1],[13222,1],[13274,1],[13349,1],[13387,1],[13491,2],[13548,1],[13559,1],[13599,1],[13618,1],[13803,1],[13850,1],[13852,1],[13943,1],[14094,1],[14136,1],[14152,2],[14195,1],[14218,2],[14264,1],[14278,2],[14325,1],[14357,2]]},"706":{"position":[[410,1],[579,1],[590,1]]},"716":{"position":[[1158,1],[1205,1],[1207,1],[1224,2],[1227,1],[1263,1],[1281,1],[1291,2],[1294,2],[1315,1],[1325,2],[1328,2],[1341,1],[1351,2],[1354,2],[1366,1],[1376,2],[1379,1],[1381,2],[1396,1],[1411,1],[1429,1],[1462,1],[1464,1],[1481,1],[1483,1],[1485,2],[1506,1],[1539,1],[1541,1],[1558,1],[1560,1],[1562,2],[1575,1],[1608,1],[1610,1],[1627,1],[1629,1],[1631,2],[1643,1],[1676,1],[1678,1],[1695,1],[1697,1],[1699,1],[1701,1],[1703,1],[1705,1],[1707,1],[1709,1]]},"718":{"position":[[730,1],[777,1],[779,1],[796,2],[799,1],[835,1],[853,1],[863,2],[866,2],[887,1],[897,2],[900,2],[913,1],[923,2],[926,2],[938,1],[948,2],[951,1],[953,2],[968,1],[983,1],[1001,1],[1034,1],[1036,1],[1053,1],[1055,1],[1057,2],[1078,1],[1111,1],[1113,1],[1130,1],[1132,1],[1134,2],[1147,1],[1180,1],[1182,1],[1199,1],[1201,1],[1203,2],[1215,1],[1248,1],[1250,1],[1267,1],[1269,1],[1271,1],[1273,1],[1275,1],[1277,1],[1279,1],[1281,1],[1508,1],[1544,1],[1556,1],[1566,2],[1569,1],[1571,2],[1586,1],[1601,1],[1613,1],[1646,1],[1648,1],[1665,1],[1667,1],[1669,1],[1671,1],[1673,1],[1675,1],[2116,2],[2188,2],[2212,1],[2225,1],[2227,1],[2254,2],[2354,1],[2412,2],[2496,2],[2636,2],[2685,3],[2721,1],[2735,1],[2737,2],[2790,1],[2868,1],[2870,2],[2927,3],[2950,2],[3029,1],[3071,1],[3085,1],[3087,2],[3190,2],[3279,2],[3364,2],[3505,2],[3611,2],[3621,2],[3628,1],[3630,2],[3633,2],[3649,1],[3661,2],[3699,1],[3706,2],[3786,1],[3788,1],[3790,2],[3973,2],[3976,2],[3979,2],[4070,2],[4150,2],[4157,1],[4159,2],[4162,2],[4178,1],[4199,2],[4271,2],[4363,1],[4423,1],[4450,1],[4452,2],[4554,1],[4576,1],[4588,1],[4644,2],[4701,1],[4755,2],[4868,1],[4922,2],[5028,2],[5045,1],[5078,1],[5080,1],[5129,1],[5166,1],[5168,2],[5227,1],[5234,1],[5257,1],[5282,1],[5307,1],[5309,3],[5334,1],[5366,3],[5389,1],[5556,1],[5596,1],[5632,1],[5689,1],[5723,1],[5836,1],[5869,1],[5974,1],[5976,1],[6034,1],[6098,1],[6150,1],[6204,1],[6288,1],[6345,1],[6470,2],[6473,2],[6476,2],[6533,1],[6750,1],[6797,1],[6799,1],[6890,1],[6907,1],[6922,1],[7004,2],[7073,2],[7126,1],[7206,1],[7208,2],[7395,2],[7467,2],[7491,1],[7504,1],[7506,1],[7533,2],[7633,1],[7691,2],[7775,2],[7915,2],[7964,3],[7968,2],[7989,1],[7999,1],[8001,1],[8093,1],[8171,2],[8174,3],[8178,2],[8189,1],[8215,2],[8294,1],[8336,1],[8350,1],[8352,2],[8455,2],[8544,2],[8629,2],[8770,2],[8876,2],[8886,2],[8893,1],[8895,2],[8898,2],[8914,1],[8926,2],[8964,1],[8971,2],[9169,2],[9172,1],[9194,2],[9267,2],[9275,1],[9277,1],[9293,1],[9314,2],[9386,2],[9478,1],[9538,1],[9565,1],[9567,2],[9669,1],[9691,1],[9703,1],[9759,2],[9816,1],[9870,2],[9983,1],[10037,2],[10143,2],[10160,1],[10193,1],[10195,1],[10197,2],[10225,1],[10266,1],[10277,1],[10294,1],[10301,1],[10324,1],[10349,1],[10374,2],[10398,1],[10433,2],[10453,1],[10479,1],[10646,1],[10686,1],[10722,1],[10779,1],[10813,1],[10926,1],[10959,1],[11064,1],[11066,1],[11124,1],[11188,1],[11248,1],[11300,1],[11375,1],[11413,1],[11522,2],[11579,1],[11590,1],[11630,1],[11649,1],[11833,1],[11880,1],[11882,1],[11973,1],[12129,1],[12170,1],[12184,2],[12225,1],[12243,2],[12284,1],[12310,2],[12369,1],[12401,2],[12542,2],[12614,2],[12638,1],[12651,1],[12653,1],[12680,2],[12780,1],[12838,2],[12922,2],[13062,2],[13111,3],[13147,1],[13161,1],[13163,2],[13216,1],[13294,1],[13296,2],[13353,3],[13376,2],[13455,1],[13497,1],[13511,1],[13513,2],[13616,2],[13705,2],[13790,2],[13931,2],[14037,2],[14047,2],[14054,1],[14056,2],[14059,2],[14075,1],[14087,2],[14125,1],[14132,2],[14212,1],[14214,1],[14216,2],[14399,2],[14402,2],[14405,2],[14496,2],[14576,2],[14583,1],[14585,2],[14588,2],[14604,1],[14625,2],[14697,2],[14789,1],[14849,1],[14876,1],[14878,2],[14980,1],[15002,1],[15014,1],[15070,2],[15127,1],[15181,2],[15294,1],[15348,2],[15454,2],[15471,1],[15504,1],[15506,1],[15555,1],[15592,1],[15594,2],[15653,1],[15660,1],[15689,1],[15708,1],[15733,1],[15735,3],[15760,1],[15792,3],[15815,1],[15982,1],[16022,1],[16058,1],[16115,1],[16149,1],[16262,1],[16295,1],[16400,1],[16402,1],[16460,1],[16524,1],[16576,1],[16630,1],[16714,1],[16771,1],[16896,2],[16899,2],[16902,2],[16959,1],[17176,1],[17223,1],[17225,1],[17316,1],[17333,1],[17348,1],[17430,2],[17499,2],[17552,1],[17632,1],[17634,2],[17778,2],[17850,2],[17874,1],[17887,1],[17889,1],[17916,2],[18016,1],[18074,2],[18158,2],[18298,2],[18347,3],[18351,2],[18372,1],[18382,1],[18384,1],[18476,1],[18554,2],[18557,3],[18561,2],[18572,1],[18598,2],[18677,1],[18719,1],[18733,1],[18735,2],[18838,2],[18927,2],[19012,2],[19153,2],[19259,2],[19269,2],[19276,1],[19278,2],[19281,2],[19297,1],[19309,2],[19347,1],[19354,2],[19552,2],[19555,1],[19577,2],[19650,2],[19658,1],[19660,1],[19676,1],[19697,2],[19769,2],[19861,1],[19921,1],[19948,1],[19950,2],[20052,1],[20074,1],[20086,1],[20142,2],[20199,1],[20253,2],[20366,1],[20420,2],[20526,2],[20543,1],[20576,1],[20578,1],[20580,2],[20608,1],[20649,1],[20660,1],[20677,1],[20684,1],[20713,1],[20732,1],[20757,2],[20781,1],[20816,2],[20836,1],[20862,1],[21029,1],[21069,1],[21105,1],[21162,1],[21196,1],[21309,1],[21342,1],[21447,1],[21449,1],[21507,1],[21571,1],[21631,1],[21683,1],[21758,1],[21796,1],[21905,2],[21962,1],[21973,1],[22013,1],[22032,1],[22216,1],[22263,1],[22265,1],[22356,1],[22512,1],[22553,1],[22573,2],[22620,1],[22632,2],[22667,1],[22693,2],[22752,1],[22784,2],[22934,2],[23006,2],[23030,1],[23043,1],[23045,1],[23072,2],[23172,1],[23230,2],[23314,2],[23454,2],[23503,3],[23507,2],[23528,1],[23538,1],[23540,1],[23632,1],[23716,2],[23719,3],[23723,2],[23734,1],[23761,2],[23840,1],[23882,1],[23896,1],[23898,2],[24001,2],[24090,2],[24175,2],[24316,2],[24422,2],[24432,2],[24439,1],[24441,2],[24444,2],[24460,1],[24472,2],[24510,1],[24517,2],[24721,2],[24724,1],[24746,2],[24819,2],[24827,1],[24829,1],[24846,1],[24867,2],[24939,2],[25031,1],[25091,1],[25118,1],[25120,2],[25222,1],[25244,1],[25256,1],[25312,2],[25369,1],[25423,2],[25536,1],[25590,2],[25696,2],[25713,1],[25746,1],[25748,1],[25750,2],[25778,1],[25819,1],[25830,1],[25847,1],[25854,1],[25883,1],[25908,1],[25933,2],[25957,1],[25992,2],[26012,1],[26039,1],[26206,1],[26246,1],[26282,1],[26339,1],[26373,1],[26486,1],[26519,1],[26624,1],[26626,1],[26684,1],[26748,1],[26808,1],[26860,1],[26935,1],[26973,1],[27088,2],[27145,1],[27156,1],[27196,1],[27215,1],[27400,1],[27447,1],[27449,1],[27540,1],[27702,1],[27744,1],[27764,2],[27811,1],[27829,2],[27870,1],[27896,2],[27955,1],[27987,2],[28051,1],[28053,1],[28055,2],[28188,2],[28191,1],[28193,2],[28312,2],[28315,1],[28317,2],[28438,2],[28441,1],[28501,2],[28573,2],[28597,1],[28610,1],[28612,1],[28639,2],[28739,1],[28797,2],[28881,2],[29021,2],[29070,3],[29106,1],[29120,1],[29122,2],[29177,1],[29258,2],[29306,1],[29380,2],[29429,1],[29503,1],[29505,2],[29562,3],[29585,2],[29664,1],[29706,1],[29720,1],[29722,2],[29825,2],[29914,2],[29999,2],[30140,2],[30246,2],[30256,2],[30263,1],[30265,2],[30268,2],[30284,1],[30296,2],[30334,1],[30341,2],[30421,1],[30423,1],[30425,2],[30612,2],[30615,1],[30617,2],[30790,2],[30793,1],[30795,2],[30970,2],[30973,2],[30976,2],[31067,2],[31147,2],[31154,1],[31156,2],[31159,2],[31175,1],[31196,2],[31268,2],[31360,1],[31420,1],[31447,1],[31449,2],[31551,1],[31573,1],[31585,1],[31641,2],[31698,1],[31752,2],[31865,1],[31919,2],[32025,2],[32042,1],[32075,1],[32077,1],[32126,1],[32163,1],[32165,2],[32226,1],[32233,1],[32256,1],[32283,1],[32308,2],[32311,2],[32365,1],[32372,1],[32397,1],[32415,1],[32440,2],[32443,2],[32498,1],[32505,1],[32530,1],[32549,1],[32574,1],[32576,3],[32601,1],[32633,3],[32656,1],[32823,1],[32863,1],[32899,1],[32956,1],[32990,1],[33103,1],[33136,1],[33241,1],[33243,1],[33301,1],[33365,1],[33417,1],[33471,1],[33555,1],[33612,1],[33741,2],[33754,1],[33869,2],[33882,1],[33999,2],[34002,2],[34005,2],[34062,1],[34279,1],[34326,1],[34328,1],[34419,1],[34436,1],[34451,1],[34682,2],[34751,2],[34806,1],[34888,2],[34891,2],[34939,1],[35014,2],[35017,2],[35066,1],[35142,1],[35144,2],[35348,2],[35420,2],[35444,1],[35457,1],[35459,1],[35486,2],[35586,1],[35644,2],[35728,2],[35868,2],[35917,3],[35921,2],[35942,1],[35952,1],[35954,1],[36046,1],[36124,2],[36127,3],[36131,2],[36142,1],[36168,2],[36247,1],[36289,1],[36303,1],[36305,2],[36408,2],[36497,2],[36582,2],[36723,2],[36829,2],[36839,2],[36846,1],[36848,2],[36851,2],[36867,1],[36879,2],[36917,1],[36924,2],[37122,2],[37125,1],[37147,2],[37220,2],[37228,1],[37230,1],[37246,1],[37267,2],[37339,2],[37431,1],[37491,1],[37518,1],[37520,2],[37622,1],[37644,1],[37656,1],[37712,2],[37769,1],[37823,2],[37936,1],[37990,2],[38096,2],[38113,1],[38146,1],[38148,1],[38150,2],[38178,1],[38219,1],[38230,1],[38247,1],[38254,1],[38277,1],[38302,1],[38327,2],[38351,1],[38386,2],[38406,1],[38432,1],[38599,1],[38639,1],[38675,1],[38732,1],[38766,1],[38879,1],[38912,1],[39017,1],[39019,1],[39077,1],[39141,1],[39201,1],[39253,1],[39328,1],[39366,1],[39475,2],[39532,1],[39543,1],[39583,1],[39602,1],[39786,1],[39833,1],[39835,1],[39926,1],[40082,1],[40123,1],[40137,2],[40178,1],[40196,2],[40237,1],[40263,2],[40322,1],[40354,2]]},"720":{"position":[[177,2],[249,2],[273,1],[286,1],[288,1],[315,2],[415,1],[473,2],[557,2],[697,2],[746,3],[750,2],[771,1],[781,1],[783,1],[875,1],[947,2],[950,3],[954,2],[965,1],[992,2],[1071,1],[1113,1],[1127,1],[1129,2],[1232,2],[1321,2],[1406,2],[1547,2],[1653,2],[1663,2],[1670,1],[1672,2],[1675,2],[1691,1],[1703,2],[1741,1],[1748,2],[1940,2],[1943,1],[1965,2],[2038,2],[2046,1],[2048,1],[2065,1],[2086,2],[2158,2],[2250,1],[2310,1],[2337,1],[2339,2],[2441,1],[2463,1],[2475,1],[2531,2],[2588,1],[2642,2],[2755,1],[2809,2],[2915,2],[2932,1],[2965,1],[2967,1],[2969,2],[2997,1],[3038,1],[3049,1],[3066,1],[3073,1],[3096,1],[3115,1],[3140,2],[3164,1],[3199,2],[3219,1],[3246,1],[3413,1],[3453,1],[3489,1],[3546,1],[3580,1],[3693,1],[3726,1],[3831,1],[3833,1],[3891,1],[3955,1],[4015,1],[4067,1],[4142,1],[4180,1],[4283,2],[4340,1],[4351,1],[4391,1],[4410,1],[4595,1],[4642,1],[4644,1],[4735,1],[4885,1],[4927,1],[4941,2],[4982,1],[4994,2],[5029,1],[5055,2],[5114,1],[5146,2],[5765,1],[5979,1],[6026,1],[6028,1],[6045,2],[6048,1],[6084,1],[6102,1],[6112,2],[6115,2],[6136,1],[6147,1],[6158,1],[6160,1],[6170,2],[6173,2],[6176,1],[6197,1],[6226,1],[6228,1],[6230,1],[6232,1],[6234,2],[6247,1],[6258,1],[6269,1],[6271,1],[6281,2],[6284,2],[6287,1],[6308,1],[6339,1],[6341,2],[6344,1],[6365,1],[6394,1],[6396,1],[6398,1],[6400,1],[6402,2],[6414,1],[6424,2],[6427,1],[6429,2],[6444,1],[6459,1],[6477,1],[6510,1],[6512,1],[6529,1],[6531,1],[6533,2],[6554,1],[6587,1],[6589,1],[6606,1],[6608,1],[6610,2],[6623,1],[6656,1],[6658,1],[6675,1],[6677,1],[6679,2],[6691,1],[6724,1],[6726,1],[6743,1],[6745,1],[6747,1],[6749,1],[6751,1],[6753,1],[6755,1],[6757,1],[6877,2],[6949,2],[6973,1],[6986,1],[6988,1],[7015,2],[7115,1],[7173,2],[7257,2],[7397,2],[7446,3],[7450,2],[7471,1],[7481,1],[7483,1],[7575,1],[7647,2],[7650,3],[7654,2],[7665,1],[7691,2],[7770,1],[7812,1],[7826,1],[7828,2],[7931,2],[8020,2],[8105,2],[8246,2],[8352,2],[8362,2],[8369,1],[8371,2],[8374,2],[8390,1],[8402,2],[8440,1],[8447,2],[8639,2],[8642,1],[8664,2],[8737,2],[8745,1],[8747,1],[8763,1],[8784,2],[8856,2],[8948,1],[9008,1],[9035,1],[9037,2],[9139,1],[9161,1],[9173,1],[9229,2],[9286,1],[9340,2],[9453,1],[9507,2],[9613,2],[9630,1],[9663,1],[9665,1],[9667,2],[9695,1],[9736,1],[9747,1],[9764,1],[9771,1],[9794,1],[9813,1],[9838,2],[9862,1],[9897,2],[9917,1],[9943,1],[10110,1],[10150,1],[10186,1],[10243,1],[10277,1],[10390,1],[10423,1],[10528,1],[10530,1],[10588,1],[10652,1],[10712,1],[10764,1],[10839,1],[10877,1],[10980,2],[11037,1],[11048,1],[11088,1],[11107,1],[11291,1],[11338,1],[11340,1],[11431,1],[11581,1],[11622,1],[11636,2],[11677,1],[11689,2],[11724,1],[11750,2],[11809,1],[11841,2]]},"722":{"position":[[1909,1],[1943,1],[1965,1],[1975,2],[1978,2],[1991,1],[2001,2],[2004,2],[2017,1],[2027,2],[2030,1],[2032,2],[2047,1],[2062,1],[2084,1],[2117,1],[2119,1],[2141,1],[2143,1],[2145,2],[2158,1],[2191,1],[2193,1],[2210,2],[2213,1],[2263,2],[2266,1],[2318,2],[2321,1],[2365,2],[2368,1],[2411,1],[2413,1],[2415,2],[2428,1],[2461,1],[2463,1],[2480,2],[2483,1],[2533,2],[2536,1],[2588,2],[2591,1],[2635,2],[2638,1],[2681,1],[2683,1],[2685,1],[2687,1],[2689,1],[2691,1],[3338,1],[3372,1],[3394,1],[3404,2],[3407,2],[3420,1],[3430,2],[3433,2],[3446,1],[3457,1],[3468,1],[3470,1],[3480,2],[3483,2],[3486,1],[3507,1],[3530,1],[3532,1],[3534,1],[3536,1],[3538,1],[3540,2],[3555,1],[3570,1],[3592,1],[3625,1],[3627,1],[3649,1],[3651,1],[3653,2],[3666,1],[3699,1],[3701,1],[3718,2],[3721,1],[3771,2],[3774,1],[3826,2],[3829,1],[3873,2],[3876,1],[3919,1],[3921,1],[3923,2],[3936,1],[3969,1],[3971,1],[3988,2],[3991,1],[4041,2],[4044,1],[4096,2],[4099,1],[4143,2],[4146,1],[4189,1],[4191,1],[4193,1],[4195,1],[4197,1],[4199,1],[4947,1],[4994,1],[4996,1],[5013,2],[5016,1],[5052,1],[5070,1],[5080,2],[5083,2],[5104,1],[5115,1],[5126,1],[5128,1],[5138,2],[5141,2],[5144,1],[5165,1],[5194,1],[5196,1],[5198,1],[5200,1],[5202,2],[5215,1],[5226,1],[5237,1],[5239,1],[5249,2],[5252,2],[5255,1],[5276,1],[5307,1],[5309,2],[5312,1],[5333,1],[5362,1],[5364,1],[5366,1],[5368,1],[5370,2],[5382,1],[5392,2],[5395,1],[5397,2],[5412,1],[5427,1],[5445,1],[5478,1],[5480,1],[5497,1],[5499,1],[5501,2],[5522,1],[5555,1],[5557,1],[5574,1],[5576,1],[5578,2],[5591,1],[5624,1],[5626,1],[5643,1],[5645,1],[5647,2],[5659,1],[5692,1],[5694,1],[5711,1],[5713,1],[5715,1],[5717,1],[5719,1],[5721,2],[5724,1],[5758,1],[5780,1],[5790,2],[5793,2],[5806,1],[5816,2],[5819,2],[5832,1],[5843,1],[5854,1],[5856,1],[5866,2],[5869,2],[5872,1],[5893,1],[5916,1],[5918,1],[5920,1],[5922,1],[5924,1],[5926,2],[5941,1],[5956,1],[5978,1],[6011,1],[6013,1],[6035,1],[6037,1],[6039,2],[6052,1],[6085,1],[6087,1],[6104,2],[6107,1],[6157,2],[6160,1],[6212,2],[6215,1],[6259,2],[6262,1],[6305,1],[6307,1],[6309,2],[6322,1],[6355,1],[6357,1],[6374,2],[6377,1],[6427,2],[6430,1],[6482,2],[6485,1],[6529,2],[6532,1],[6575,1],[6577,1],[6579,1],[6581,1],[6583,1],[6585,1],[6587,1],[6589,1],[6921,2],[6993,2],[7017,1],[7030,1],[7032,1],[7059,2],[7159,1],[7217,2],[7301,2],[7441,2],[7490,3],[7526,1],[7540,1],[7542,1],[7632,1],[7733,1],[7838,1],[7840,2],[7897,3],[7920,2],[7999,1],[8041,1],[8055,1],[8057,2],[8160,2],[8249,2],[8334,2],[8475,2],[8581,2],[8591,2],[8598,1],[8600,2],[8603,2],[8619,1],[8631,2],[8669,1],[8676,2],[8756,1],[8758,1],[8901,2],[8904,1],[9058,2],[9061,1],[9220,2],[9223,2],[9226,2],[9317,2],[9397,2],[9404,1],[9406,2],[9409,2],[9425,1],[9446,2],[9518,2],[9610,1],[9670,1],[9697,1],[9699,2],[9801,1],[9823,1],[9835,1],[9891,2],[9948,1],[10002,2],[10115,1],[10169,2],[10275,2],[10292,1],[10325,1],[10327,1],[10376,1],[10413,1],[10421,1],[10428,1],[10463,1],[10492,1],[10512,2],[10521,1],[10528,1],[10563,1],[10592,1],[10623,2],[10632,1],[10639,1],[10674,1],[10703,1],[10739,1],[10741,3],[10766,1],[10798,3],[10821,1],[10988,1],[11028,1],[11064,1],[11121,1],[11155,1],[11268,1],[11301,1],[11406,1],[11408,1],[11466,1],[11530,1],[11582,1],[11636,1],[11720,1],[11861,2],[11969,2],[12082,2],[12085,2],[12088,2],[12145,1],[12362,1],[12409,1],[12411,1],[12502,1],[12519,1],[12534,1],[12832,2],[12901,1],[12992,2],[12995,1],[13097,2],[13100,1],[13207,1],[13209,2],[13517,2],[13589,2],[13613,1],[13626,1],[13628,1],[13655,2],[13755,1],[13813,2],[13897,2],[14037,2],[14086,3],[14122,1],[14136,1],[14138,2],[14252,1],[14338,1],[14340,2],[14397,3],[14420,2],[14499,1],[14541,1],[14555,1],[14557,2],[14660,2],[14749,2],[14834,2],[14975,2],[15081,2],[15091,2],[15098,1],[15100,2],[15103,2],[15119,1],[15131,2],[15169,1],[15176,2],[15256,1],[15258,1],[15260,2],[15512,2],[15515,2],[15518,2],[15609,2],[15689,2],[15696,1],[15698,2],[15701,2],[15717,1],[15738,2],[15810,2],[15902,1],[15962,1],[15989,1],[15991,2],[16093,1],[16115,1],[16127,1],[16183,2],[16240,1],[16294,2],[16407,1],[16461,2],[16567,2],[16584,1],[16617,1],[16619,1],[16668,1],[16705,1],[16707,2],[16827,1],[16834,1],[16876,1],[16895,1],[16915,1],[16917,3],[16942,1],[16974,3],[16997,1],[17164,1],[17204,1],[17240,1],[17297,1],[17331,1],[17444,1],[17477,1],[17582,1],[17584,1],[17642,1],[17706,1],[17758,1],[17812,1],[17896,1],[17953,1],[18147,2],[18150,2],[18153,2],[18210,1],[18427,1],[18474,1],[18476,1],[18567,1],[18584,1],[18599,1],[18689,2],[18758,2],[18872,1],[18960,1],[18962,2],[19254,2],[19326,2],[19350,1],[19363,1],[19365,1],[19392,2],[19492,1],[19550,2],[19634,2],[19774,2],[19823,3],[19859,1],[19873,1],[19875,2],[19982,1],[20050,1],[20119,1],[20121,2],[20178,3],[20201,2],[20280,1],[20322,1],[20336,1],[20338,2],[20441,2],[20530,2],[20615,2],[20756,2],[20862,2],[20872,2],[20879,1],[20881,2],[20884,2],[20900,1],[20912,2],[20950,1],[20957,2],[21037,1],[21039,1],[21041,2],[21267,2],[21270,1],[21393,2],[21396,2],[21399,2],[21490,2],[21570,2],[21577,1],[21579,2],[21582,2],[21598,1],[21619,2],[21691,2],[21783,1],[21843,1],[21870,1],[21872,2],[21974,1],[21996,1],[22008,1],[22064,2],[22121,1],[22175,2],[22288,1],[22342,2],[22448,2],[22465,1],[22498,1],[22500,1],[22549,1],[22586,1],[22588,2],[22701,1],[22708,1],[22731,1],[22750,1],[22770,2],[22779,1],[22786,1],[22811,1],[22830,1],[22850,1],[22852,3],[22877,1],[22909,3],[22932,1],[23099,1],[23139,1],[23175,1],[23232,1],[23266,1],[23379,1],[23412,1],[23517,1],[23519,1],[23577,1],[23641,1],[23693,1],[23747,1],[23831,1],[23888,1],[24056,2],[24133,2],[24136,2],[24139,2],[24196,1],[24413,1],[24460,1],[24462,1],[24553,1],[24570,1],[24585,1],[24725,2],[24794,2],[24901,1],[24970,2],[24973,1],[25044,1],[25046,2],[25279,2],[25351,2],[25375,1],[25388,1],[25390,1],[25417,2],[25517,1],[25575,2],[25659,2],[25799,2],[25848,3],[25884,1],[25898,1],[25900,1],[25979,1],[26059,1],[26061,2],[26118,3],[26141,2],[26220,1],[26262,1],[26276,1],[26278,2],[26381,2],[26470,2],[26555,2],[26696,2],[26802,2],[26812,2],[26819,1],[26821,2],[26824,2],[26840,1],[26852,2],[26890,1],[26897,2],[26977,1],[26979,1],[27111,2],[27114,1],[27248,2],[27251,2],[27254,2],[27345,2],[27425,2],[27432,1],[27434,2],[27437,2],[27453,1],[27474,2],[27546,2],[27638,1],[27698,1],[27725,1],[27727,2],[27829,1],[27851,1],[27863,1],[27919,2],[27976,1],[28030,2],[28143,1],[28197,2],[28303,2],[28320,1],[28353,1],[28355,1],[28404,1],[28441,1],[28449,1],[28456,1],[28479,1],[28498,1],[28529,2],[28538,1],[28545,1],[28570,1],[28589,1],[28620,1],[28622,3],[28647,1],[28679,3],[28702,1],[28869,1],[28909,1],[28945,1],[29002,1],[29036,1],[29149,1],[29182,1],[29287,1],[29289,1],[29347,1],[29411,1],[29463,1],[29517,1],[29601,1],[29731,2],[29819,2],[29822,2],[29825,2],[29882,1],[30099,1],[30146,1],[30148,1],[30239,1],[30256,1],[30271,1],[30433,2],[30502,1],[30582,2],[30585,1],[30667,1],[30669,2],[30932,2],[31004,2],[31028,1],[31041,1],[31043,1],[31070,2],[31170,1],[31228,2],[31312,2],[31452,2],[31501,3],[31537,1],[31551,1],[31553,1],[31655,1],[31657,2],[31714,3],[31737,2],[31816,1],[31858,1],[31872,1],[31874,2],[31977,2],[32066,2],[32151,2],[32292,2],[32398,2],[32408,2],[32415,1],[32417,2],[32420,2],[32436,1],[32448,2],[32486,1],[32493,2],[32573,1],[32575,1],[32731,2],[32734,2],[32737,2],[32828,2],[32908,2],[32915,1],[32917,2],[32920,2],[32936,1],[32957,2],[33029,2],[33121,1],[33181,1],[33208,1],[33210,2],[33312,1],[33334,1],[33346,1],[33402,2],[33459,1],[33513,2],[33626,1],[33680,2],[33786,2],[33803,1],[33836,1],[33838,1],[33887,1],[33924,1],[33932,1],[33939,1],[33981,1],[34000,1],[34036,1],[34038,3],[34063,1],[34095,3],[34118,1],[34285,1],[34325,1],[34361,1],[34418,1],[34452,1],[34565,1],[34598,1],[34703,1],[34705,1],[34763,1],[34827,1],[34879,1],[34933,1],[35017,1],[35171,2],[35174,2],[35177,2],[35234,1],[35451,1],[35498,1],[35500,1],[35591,1],[35608,1],[35623,1],[35729,2],[35798,1],[35902,1],[35904,2],[36097,2],[36169,2],[36193,1],[36206,1],[36208,1],[36235,2],[36335,1],[36393,2],[36477,2],[36617,2],[36666,3],[36702,1],[36716,1],[36718,1],[36803,1],[36805,2],[36862,3],[36885,2],[36964,1],[37006,1],[37020,1],[37022,2],[37125,2],[37214,2],[37299,2],[37440,2],[37546,2],[37556,2],[37563,1],[37565,2],[37568,2],[37584,1],[37596,2],[37634,1],[37641,2],[37721,1],[37723,1],[37862,2],[37865,2],[37868,2],[37959,2],[38039,2],[38046,1],[38048,2],[38051,2],[38067,1],[38088,2],[38160,2],[38252,1],[38312,1],[38339,1],[38341,2],[38443,1],[38465,1],[38477,1],[38533,2],[38590,1],[38644,2],[38757,1],[38811,2],[38917,2],[38934,1],[38967,1],[38969,1],[39018,1],[39055,1],[39063,1],[39070,1],[39095,1],[39114,1],[39150,1],[39152,3],[39177,1],[39209,3],[39232,1],[39399,1],[39439,1],[39475,1],[39532,1],[39566,1],[39679,1],[39712,1],[39817,1],[39819,1],[39877,1],[39941,1],[39993,1],[40047,1],[40131,1],[40268,2],[40271,2],[40274,2],[40331,1],[40548,1],[40595,1],[40597,1],[40688,1],[40705,1],[40720,1],[40809,2],[40878,1],[40965,1],[40967,2],[41293,2],[41365,2],[41389,1],[41402,1],[41404,1],[41431,2],[41531,1],[41589,2],[41673,2],[41813,2],[41862,3],[41866,2],[41887,1],[41897,1],[41899,1],[41991,1],[42060,2],[42063,3],[42067,2],[42078,1],[42105,2],[42184,1],[42226,1],[42240,1],[42242,2],[42345,2],[42434,2],[42519,2],[42660,2],[42766,2],[42776,2],[42783,1],[42785,2],[42788,2],[42804,1],[42816,2],[42854,1],[42861,2],[43050,2],[43053,1],[43075,2],[43148,2],[43156,1],[43158,1],[43175,1],[43196,2],[43268,2],[43360,1],[43420,1],[43447,1],[43449,2],[43551,1],[43573,1],[43585,1],[43641,2],[43698,1],[43752,2],[43865,1],[43919,2],[44025,2],[44042,1],[44075,1],[44077,1],[44079,2],[44107,1],[44148,1],[44159,1],[44176,1],[44183,1],[44208,1],[44227,1],[44247,2],[44271,1],[44306,2],[44326,1],[44353,1],[44520,1],[44560,1],[44596,1],[44653,1],[44687,1],[44800,1],[44833,1],[44938,1],[44940,1],[44998,1],[45062,1],[45122,1],[45174,1],[45249,1],[45287,1],[45387,2],[45444,1],[45455,1],[45495,1],[45514,1],[45699,1],[45746,1],[45748,1],[45839,1],[45986,1],[46028,1],[46044,2],[46087,1],[46099,2],[46134,1],[46155,2],[46209,1],[46241,2],[46385,2],[46457,2],[46481,1],[46494,1],[46496,1],[46523,2],[46623,1],[46681,2],[46765,2],[46905,2],[46954,3],[46958,2],[46979,1],[46989,1],[46991,1],[47083,1],[47168,2],[47171,3],[47175,2],[47186,1],[47212,2],[47291,1],[47333,1],[47347,1],[47349,2],[47452,2],[47541,2],[47626,2],[47767,2],[47873,2],[47883,2],[47890,1],[47892,2],[47895,2],[47911,1],[47923,2],[47961,1],[47968,2],[48173,2],[48176,1],[48198,2],[48271,2],[48279,1],[48281,1],[48297,1],[48318,2],[48390,2],[48482,1],[48542,1],[48569,1],[48571,2],[48673,1],[48695,1],[48707,1],[48763,2],[48820,1],[48874,2],[48987,1],[49041,2],[49147,2],[49164,1],[49197,1],[49199,1],[49201,2],[49229,1],[49270,1],[49281,1],[49298,1],[49305,1],[49330,1],[49349,1],[49385,2],[49409,1],[49444,2],[49464,1],[49490,1],[49657,1],[49697,1],[49733,1],[49790,1],[49824,1],[49937,1],[49970,1],[50075,1],[50077,1],[50135,1],[50199,1],[50259,1],[50311,1],[50386,1],[50424,1],[50540,2],[50597,1],[50608,1],[50648,1],[50667,1],[50851,1],[50898,1],[50900,1],[50991,1],[51154,1],[51195,1],[51211,2],[51254,1],[51266,2],[51301,1],[51338,2],[51408,1],[51440,2]]},"732":{"position":[[784,1],[943,1]]},"734":{"position":[[891,1],[938,1],[940,1],[957,2],[960,1],[993,1],[1014,1],[1024,2],[1027,1],[1029,2],[1044,1],[1059,1],[1080,1],[1113,1],[1115,1],[1132,1],[1134,1],[1136,1],[1138,1],[1140,1],[1142,2],[1145,1],[1179,1],[1191,1],[1201,2],[1204,2],[1226,1],[1246,1],[1260,1],[1272,3],[1297,2],[1319,1],[1331,3],[1365,1],[1367,1],[1369,2],[1384,1],[1394,2],[1397,2],[1410,1],[1421,1],[1432,1],[1434,1],[1455,1],[1467,3],[1494,1],[1496,2],[1499,1],[1520,1],[1532,3],[1566,1],[1568,1],[1570,1],[1572,1],[1574,2],[1589,1],[1610,1],[1622,3],[1647,1],[1649,1],[1651,2],[1666,1],[1681,1],[1693,1],[1726,1],[1728,1],[1747,1],[1749,1],[1751,2],[1766,1],[1799,1],[1801,1],[1818,1],[1820,1],[1822,1],[1824,1],[1826,1],[1828,2],[1831,1],[1869,1],[1882,1],[1892,2],[1895,2],[1910,1],[1930,1],[1944,1],[1956,3],[1982,2],[2004,1],[2016,3],[2041,1],[2043,1],[2045,1],[2047,2],[2062,1],[2077,1],[2090,1],[2123,1],[2125,1],[2145,1],[2147,1],[2149,1],[2151,1],[2153,1],[2155,1],[2157,1],[2159,1],[2650,2],[2722,2],[2746,1],[2759,1],[2761,1],[2788,2],[2888,1],[2946,2],[3030,2],[3170,2],[3219,3],[3255,1],[3269,1],[3271,2],[3326,1],[3405,2],[3465,1],[3545,2],[3640,1],[3721,2],[3785,1],[3863,1],[3865,2],[3922,3],[3945,2],[4024,1],[4066,1],[4080,1],[4082,2],[4185,2],[4274,2],[4359,2],[4500,2],[4606,2],[4616,2],[4623,1],[4625,2],[4628,2],[4644,1],[4656,2],[4694,1],[4701,2],[4781,1],[4783,1],[4785,2],[4970,2],[4973,1],[4975,2],[5166,2],[5169,1],[5171,2],[5398,2],[5401,1],[5403,2],[5597,2],[5600,2],[5603,2],[5694,2],[5774,2],[5781,1],[5783,2],[5786,2],[5802,1],[5823,2],[5895,2],[5987,1],[6047,1],[6074,1],[6076,2],[6178,1],[6200,1],[6212,1],[6268,2],[6325,1],[6379,2],[6492,1],[6546,2],[6652,2],[6669,1],[6702,1],[6704,1],[6753,1],[6790,1],[6792,2],[6853,1],[6860,1],[6884,1],[6912,1],[6933,2],[6936,2],[7002,1],[7009,1],[7037,1],[7058,1],[7083,2],[7086,2],[7187,1],[7194,1],[7225,1],[7244,1],[7269,2],[7272,2],[7342,1],[7349,1],[7384,1],[7404,1],[7422,1],[7424,3],[7449,1],[7481,3],[7504,1],[7671,1],[7711,1],[7747,1],[7804,1],[7838,1],[7951,1],[7984,1],[8089,1],[8091,1],[8149,1],[8213,1],[8265,1],[8319,1],[8403,1],[8460,1],[8587,2],[8600,1],[8733,2],[8746,1],[8915,2],[8928,1],[9064,2],[9067,2],[9070,2],[9127,1],[9344,1],[9391,1],[9393,1],[9484,1],[9501,1],[9516,1],[9835,2],[9904,2],[9959,1],[10039,2],[10042,2],[10102,1],[10183,2],[10186,2],[10281,1],[10363,2],[10366,2],[10430,1],[10510,1],[10512,2]]},"740":{"position":[[477,2],[549,2],[573,1],[586,1],[588,1],[615,2],[715,1],[773,2],[857,2],[997,2],[1046,3],[1050,2],[1071,1],[1081,1],[1083,1],[1175,1],[1243,2],[1246,3],[1250,2],[1261,1],[1287,2],[1366,1],[1408,1],[1422,1],[1424,2],[1527,2],[1616,2],[1701,2],[1842,2],[1948,2],[1958,2],[1965,1],[1967,2],[1970,2],[1986,1],[1998,2],[2036,1],[2043,2],[2231,2],[2234,1],[2256,2],[2329,2],[2337,1],[2339,1],[2355,1],[2376,2],[2448,2],[2540,1],[2600,1],[2627,1],[2629,2],[2731,1],[2753,1],[2765,1],[2821,2],[2878,1],[2932,2],[3045,1],[3099,2],[3205,2],[3222,1],[3255,1],[3257,1],[3259,2],[3287,1],[3328,1],[3339,1],[3356,1],[3363,1],[3387,1],[3408,1],[3426,2],[3450,1],[3485,2],[3505,1],[3531,1],[3698,1],[3738,1],[3774,1],[3831,1],[3865,1],[3978,1],[4011,1],[4116,1],[4118,1],[4176,1],[4240,1],[4300,1],[4352,1],[4427,1],[4465,1],[4564,2],[4621,1],[4632,1],[4672,1],[4691,1],[4875,1],[4922,1],[4924,1],[5015,1],[5161,1],[5202,1],[5217,2],[5259,1],[5273,2],[5310,1],[5329,2],[5381,1],[5413,2],[5588,2],[5660,2],[5684,1],[5697,1],[5699,1],[5726,2],[5826,1],[5884,2],[5968,2],[6108,2],[6157,3],[6161,2],[6182,1],[6192,1],[6194,1],[6286,1],[6358,2],[6361,3],[6365,2],[6376,1],[6402,2],[6481,1],[6523,1],[6537,1],[6539,2],[6642,2],[6731,2],[6816,2],[6957,2],[7063,2],[7073,2],[7080,1],[7082,2],[7085,2],[7101,1],[7113,2],[7151,1],[7158,2],[7350,2],[7353,1],[7375,2],[7448,2],[7456,1],[7458,1],[7474,1],[7495,2],[7567,2],[7659,1],[7719,1],[7746,1],[7748,2],[7850,1],[7872,1],[7884,1],[7940,2],[7997,1],[8051,2],[8164,1],[8218,2],[8324,2],[8341,1],[8374,1],[8376,1],[8378,2],[8406,1],[8447,1],[8458,1],[8475,1],[8482,1],[8510,1],[8531,1],[8549,2],[8573,1],[8608,2],[8628,1],[8654,1],[8821,1],[8861,1],[8897,1],[8954,1],[8988,1],[9101,1],[9134,1],[9239,1],[9241,1],[9299,1],[9363,1],[9423,1],[9475,1],[9550,1],[9588,1],[9691,2],[9748,1],[9759,1],[9799,1],[9818,1],[10002,1],[10049,1],[10051,1],[10142,1],[10292,1],[10333,1],[10352,2],[10398,1],[10412,2],[10449,1],[10468,2],[10520,1],[10552,2],[10732,2],[10804,2],[10828,1],[10841,1],[10843,1],[10870,2],[10970,1],[11028,2],[11112,2],[11252,2],[11301,3],[11337,1],[11351,1],[11353,2],[11407,1],[11485,1],[11487,2],[11544,3],[11567,2],[11646,1],[11688,1],[11702,1],[11704,2],[11807,2],[11896,2],[11981,2],[12122,2],[12228,2],[12238,2],[12245,1],[12247,2],[12250,2],[12266,1],[12278,2],[12316,1],[12323,2],[12403,1],[12405,1],[12407,2],[12591,2],[12594,2],[12597,2],[12688,2],[12768,2],[12775,1],[12777,2],[12780,2],[12796,1],[12817,2],[12889,2],[12981,1],[13041,1],[13068,1],[13070,2],[13172,1],[13194,1],[13206,1],[13262,2],[13319,1],[13373,2],[13486,1],[13540,2],[13646,2],[13663,1],[13696,1],[13698,1],[13747,1],[13784,1],[13786,2],[13846,1],[13853,1],[13877,1],[13905,1],[13926,1],[13928,3],[13953,1],[13985,3],[14008,1],[14175,1],[14215,1],[14251,1],[14308,1],[14342,1],[14455,1],[14488,1],[14593,1],[14595,1],[14653,1],[14717,1],[14769,1],[14823,1],[14907,1],[14964,1],[15090,2],[15093,2],[15096,2],[15153,1],[15370,1],[15417,1],[15419,1],[15510,1],[15527,1],[15542,1],[15624,2],[15693,2],[15747,1],[15827,1],[15829,2],[15944,2],[16016,2],[16040,1],[16053,1],[16055,1],[16082,2],[16182,1],[16240,2],[16324,2],[16464,2],[16513,3],[16517,2],[16538,1],[16548,1],[16550,1],[16642,1],[16710,2],[16713,3],[16717,2],[16728,1],[16755,2],[16834,1],[16876,1],[16890,1],[16892,2],[16995,2],[17084,2],[17169,2],[17310,2],[17416,2],[17426,2],[17433,1],[17435,2],[17438,2],[17454,1],[17466,2],[17504,1],[17511,2],[17699,2],[17702,1],[17724,2],[17797,2],[17805,1],[17807,1],[17824,1],[17845,2],[17917,2],[18009,1],[18069,1],[18096,1],[18098,2],[18200,1],[18222,1],[18234,1],[18290,2],[18347,1],[18401,2],[18514,1],[18568,2],[18674,2],[18691,1],[18724,1],[18726,1],[18728,2],[18756,1],[18797,1],[18808,1],[18825,1],[18832,1],[18856,1],[18877,1],[18895,2],[18919,1],[18954,2],[18974,1],[19001,1],[19168,1],[19208,1],[19244,1],[19301,1],[19335,1],[19448,1],[19481,1],[19586,1],[19588,1],[19646,1],[19710,1],[19770,1],[19822,1],[19897,1],[19935,1],[20034,2],[20091,1],[20102,1],[20142,1],[20161,1],[20346,1],[20393,1],[20395,1],[20486,1],[20632,1],[20674,1],[20689,2],[20731,1],[20745,2],[20782,1],[20801,2],[20853,1],[20885,2]]},"742":{"position":[[300,1],[335,1],[345,1],[355,2],[358,1],[360,2],[375,1],[390,1],[400,1],[433,1],[435,1],[452,1],[454,1],[456,1],[458,1],[460,1],[462,1],[525,1],[568,1],[578,1],[588,2],[591,1],[593,2],[608,1],[623,1],[633,1],[666,1],[668,1],[685,1],[687,1],[689,1],[691,1],[693,1],[695,1],[1535,1],[1568,1],[1589,1],[1599,2],[1602,2],[1634,1],[1644,2],[1647,2],[1671,1],[1681,2],[1684,2],[1707,1],[1725,1],[1736,1],[1738,1],[1758,1],[1772,1],[1784,3],[1820,2],[1842,1],[1854,3],[1877,1],[1879,1],[1881,2],[1884,1],[1904,1],[1918,1],[1930,3],[1974,2],[1996,1],[2008,3],[2031,1],[2033,1],[2035,1],[2037,1],[2039,1],[2041,1],[2043,2],[2058,1],[2073,1],[2094,1],[2127,1],[2129,1],[2146,1],[2148,1],[2150,2],[2182,1],[2215,1],[2217,1],[2246,1],[2248,1],[2250,2],[2274,1],[2307,1],[2309,1],[2330,1],[2332,1],[2334,1],[2336,1],[2338,1],[2340,1],[3075,1],[3109,1],[3121,1],[3131,2],[3134,2],[3156,1],[3176,1],[3190,1],[3202,3],[3227,2],[3249,1],[3261,3],[3295,1],[3297,1],[3299,2],[3314,1],[3324,2],[3327,2],[3356,1],[3374,1],[3385,1],[3387,1],[3408,1],[3420,3],[3454,1],[3456,2],[3459,1],[3479,1],[3493,1],[3505,3],[3530,2],[3552,1],[3564,3],[3599,1],[3601,1],[3603,1],[3605,1],[3607,1],[3609,2],[3622,1],[3633,1],[3644,1],[3646,1],[3667,1],[3679,3],[3706,1],[3708,2],[3711,1],[3732,1],[3744,3],[3785,1],[3787,1],[3789,1],[3791,1],[3793,2],[3808,1],[3829,1],[3841,3],[3866,1],[3868,1],[3870,2],[3885,1],[3900,1],[3912,1],[3945,1],[3947,1],[3966,1],[3968,1],[3970,2],[3985,1],[4018,1],[4020,1],[4037,1],[4039,1],[4041,1],[4043,1],[4045,1],[4047,1],[4592,2],[4664,2],[4688,1],[4701,1],[4703,1],[4730,2],[4830,1],[4888,2],[4972,2],[5112,2],[5161,3],[5165,2],[5186,1],[5196,1],[5198,1],[5290,1],[5353,2],[5356,3],[5360,2],[5371,1],[5398,2],[5477,1],[5519,1],[5533,1],[5535,2],[5638,2],[5727,2],[5812,2],[5953,2],[6059,2],[6069,2],[6076,1],[6078,2],[6081,2],[6097,1],[6109,2],[6147,1],[6154,2],[6337,2],[6340,1],[6362,2],[6435,2],[6443,1],[6445,1],[6462,1],[6483,2],[6555,2],[6647,1],[6707,1],[6734,1],[6736,2],[6838,1],[6860,1],[6872,1],[6928,2],[6985,1],[7039,2],[7152,1],[7206,2],[7312,2],[7329,1],[7362,1],[7364,1],[7366,2],[7394,1],[7435,1],[7446,1],[7463,1],[7470,1],[7489,1],[7510,1],[7528,2],[7552,1],[7587,2],[7607,1],[7634,1],[7801,1],[7841,1],[7877,1],[7934,1],[7968,1],[8081,1],[8114,1],[8219,1],[8221,1],[8279,1],[8343,1],[8403,1],[8455,1],[8530,1],[8568,1],[8662,2],[8719,1],[8730,1],[8770,1],[8789,1],[8974,1],[9021,1],[9023,1],[9114,1],[9255,1],[9297,1],[9307,2],[9344,1],[9358,2],[9395,1],[9414,2],[9466,1],[9498,2],[9824,2],[9896,2],[9920,1],[9933,1],[9935,1],[9962,2],[10062,1],[10120,2],[10204,2],[10344,2],[10393,3],[10429,1],[10443,1],[10445,2],[10512,1],[10598,2],[10664,1],[10750,2],[10838,1],[10945,1],[10947,2],[11004,3],[11027,2],[11106,1],[11148,1],[11162,1],[11164,2],[11267,2],[11356,2],[11441,2],[11582,2],[11688,2],[11698,2],[11705,1],[11707,2],[11710,2],[11726,1],[11738,2],[11776,1],[11783,2],[11863,1],[11865,1],[11867,2],[12071,2],[12074,1],[12076,2],[12279,2],[12282,1],[12284,2],[12531,2],[12534,2],[12537,2],[12628,2],[12708,2],[12715,1],[12717,2],[12720,2],[12736,1],[12757,2],[12829,2],[12921,1],[12981,1],[13008,1],[13010,2],[13112,1],[13134,1],[13146,1],[13202,2],[13259,1],[13313,2],[13426,1],[13480,2],[13586,2],[13603,1],[13636,1],[13638,1],[13687,1],[13724,1],[13726,2],[13799,1],[13806,1],[13835,1],[13865,1],[13886,2],[13889,2],[13961,1],[13968,1],[13997,1],[14027,1],[14048,2],[14051,2],[14145,1],[14152,1],[14195,1],[14233,1],[14254,1],[14256,3],[14281,1],[14313,3],[14336,1],[14503,1],[14543,1],[14579,1],[14636,1],[14670,1],[14783,1],[14816,1],[14921,1],[14923,1],[14981,1],[15045,1],[15097,1],[15151,1],[15235,1],[15292,1],[15438,2],[15451,1],[15596,2],[15609,1],[15798,2],[15801,2],[15804,2],[15861,1],[16078,1],[16125,1],[16127,1],[16218,1],[16235,1],[16250,1],[16531,2],[16600,2],[16667,1],[16754,2],[16757,2],[16823,1],[16910,2],[16913,2],[17001,1],[17110,1],[17112,2],[17364,2],[17436,2],[17460,1],[17473,1],[17475,1],[17502,2],[17602,1],[17660,2],[17744,2],[17884,2],[17933,3],[17969,1],[17983,1],[17985,2],[18052,1],[18132,2],[18175,1],[18240,1],[18242,2],[18299,3],[18322,2],[18401,1],[18443,1],[18457,1],[18459,2],[18562,2],[18651,2],[18736,2],[18877,2],[18983,2],[18993,2],[19000,1],[19002,2],[19005,2],[19021,1],[19033,2],[19071,1],[19078,2],[19158,1],[19160,1],[19162,2],[19360,2],[19363,1],[19365,2],[19525,2],[19528,2],[19531,2],[19622,2],[19702,2],[19709,1],[19711,2],[19714,2],[19730,1],[19751,2],[19823,2],[19915,1],[19975,1],[20002,1],[20004,2],[20106,1],[20128,1],[20140,1],[20196,2],[20253,1],[20307,2],[20420,1],[20474,2],[20580,2],[20597,1],[20630,1],[20632,1],[20681,1],[20718,1],[20720,2],[20793,1],[20800,1],[20824,1],[20841,1],[20874,2],[20877,2],[20926,1],[20933,1],[20957,1],[20974,1],[20993,1],[20995,3],[21020,1],[21052,3],[21075,1],[21242,1],[21282,1],[21318,1],[21375,1],[21409,1],[21522,1],[21555,1],[21660,1],[21662,1],[21720,1],[21784,1],[21836,1],[21890,1],[21974,1],[22031,1],[22171,2],[22184,1],[22286,2],[22289,2],[22292,2],[22349,1],[22566,1],[22613,1],[22615,1],[22706,1],[22723,1],[22738,1],[22886,2],[22955,2],[23022,1],[23103,2],[23106,2],[23149,1],[23216,1],[23218,2],[23486,2],[23558,2],[23582,1],[23595,1],[23597,1],[23624,2],[23724,1],[23782,2],[23866,2],[24006,2],[24055,3],[24059,2],[24080,1],[24090,1],[24092,1],[24184,1],[24252,2],[24255,3],[24259,2],[24270,1],[24296,2],[24375,1],[24417,1],[24431,1],[24433,2],[24536,2],[24625,2],[24710,2],[24851,2],[24957,2],[24967,2],[24974,1],[24976,2],[24979,2],[24995,1],[25007,2],[25045,1],[25052,2],[25240,2],[25243,1],[25265,2],[25338,2],[25346,1],[25348,1],[25364,1],[25385,2],[25457,2],[25549,1],[25609,1],[25636,1],[25638,2],[25740,1],[25762,1],[25774,1],[25830,2],[25887,1],[25941,2],[26054,1],[26108,2],[26214,2],[26231,1],[26264,1],[26266,1],[26268,2],[26296,1],[26337,1],[26348,1],[26365,1],[26372,1],[26396,1],[26417,1],[26435,2],[26459,1],[26494,2],[26514,1],[26540,1],[26707,1],[26747,1],[26783,1],[26840,1],[26874,1],[26987,1],[27020,1],[27125,1],[27127,1],[27185,1],[27249,1],[27309,1],[27361,1],[27436,1],[27474,1],[27573,2],[27630,1],[27641,1],[27681,1],[27700,1],[27884,1],[27931,1],[27933,1],[28024,1],[28170,1],[28211,1],[28226,2],[28268,1],[28282,2],[28319,1],[28338,2],[28390,1],[28422,2]]},"744":{"position":[[1137,2],[1209,2],[1233,1],[1246,1],[1248,1],[1275,2],[1375,1],[1433,2],[1517,2],[1657,2],[1706,3],[1743,1],[1756,1],[1758,1],[1760,2],[1854,1],[1934,2],[2004,1],[2069,1],[2071,2],[2128,3],[2151,2],[2230,1],[2272,1],[2286,1],[2288,2],[2391,2],[2480,2],[2565,2],[2706,2],[2812,2],[2822,2],[2829,1],[2831,2],[2834,2],[2850,1],[2862,2],[2900,1],[2907,2],[2988,1],[2990,1],[2992,2],[3217,2],[3220,1],[3222,2],[3409,2],[3412,2],[3415,2],[3506,2],[3586,2],[3593,1],[3595,2],[3598,2],[3614,1],[3635,2],[3707,2],[3799,1],[3859,1],[3886,1],[3888,2],[3990,1],[4012,1],[4024,1],[4080,2],[4137,1],[4191,2],[4304,1],[4358,2],[4464,2],[4481,1],[4514,1],[4516,1],[4566,1],[4603,1],[4605,2],[4705,1],[4712,1],[4736,1],[4753,1],[4786,2],[4789,2],[4865,1],[4872,1],[4896,1],[4913,1],[4932,1],[4934,3],[4959,1],[4991,3],[5014,1],[5181,1],[5221,1],[5257,1],[5314,1],[5348,1],[5461,1],[5494,1],[5599,1],[5601,1],[5659,1],[5723,1],[5775,1],[5829,1],[5913,1],[5971,1],[6138,2],[6151,1],[6280,2],[6283,2],[6286,2],[6343,1],[6560,1],[6607,1],[6609,1],[6700,1],[6718,1],[6733,1],[6881,2],[6951,2],[7045,1],[7126,2],[7129,2],[7199,1],[7266,1],[7268,2],[7832,2],[7904,2],[7928,1],[7941,1],[7943,1],[7970,2],[8070,1],[8128,2],[8212,2],[8352,2],[8401,3],[8405,2],[8426,1],[8436,1],[8438,1],[8530,1],[8598,2],[8620,1],[8634,1],[8636,1],[8714,2],[8717,1],[8781,1],[8783,1],[8785,4],[8790,2],[8801,1],[8827,2],[8906,1],[8948,1],[8962,1],[8964,2],[9067,2],[9156,2],[9241,2],[9382,2],[9488,2],[9498,2],[9505,1],[9507,2],[9510,2],[9526,1],[9538,2],[9576,1],[9583,2],[9771,2],[9848,1],[9981,2],[9984,1],[10103,1],[10105,1],[10107,1],[10109,1],[10131,2],[10204,2],[10212,1],[10214,1],[10230,1],[10251,2],[10323,2],[10415,1],[10475,1],[10502,1],[10504,2],[10606,1],[10628,1],[10640,1],[10696,2],[10753,1],[10807,2],[10920,1],[10974,2],[11080,2],[11097,1],[11130,1],[11132,1],[11134,2],[11162,1],[11203,1],[11214,1],[11231,1],[11238,1],[11262,1],[11283,1],[11301,2],[11321,1],[11519,4],[11545,1],[11580,2],[11600,1],[11626,1],[11793,1],[11833,1],[11869,1],[11926,1],[11960,1],[12073,1],[12106,1],[12211,1],[12213,1],[12271,1],[12335,1],[12395,1],[12447,1],[12522,1],[12560,1],[12659,2],[12867,2],[12870,2],[12927,1],[12938,1],[12978,1],[12997,1],[13181,1],[13228,1],[13230,1],[13321,1],[13648,1],[13689,1],[13704,2],[13746,1],[13760,2],[13797,1],[13816,2],[13869,1],[13871,1],[13873,2],[13913,1],[13937,1],[13954,1],[13995,1],[14019,1],[14036,1],[14056,2],[14076,1],[14108,2],[14288,2],[14360,2],[14384,1],[14397,1],[14399,1],[14426,2],[14526,1],[14584,2],[14668,2],[14808,2],[14857,3],[14861,2],[14882,1],[14892,1],[14894,1],[14986,1],[15054,2],[15076,1],[15090,1],[15092,1],[15170,2],[15173,1],[15237,1],[15239,1],[15241,4],[15246,2],[15257,1],[15284,2],[15363,1],[15405,1],[15419,1],[15421,2],[15524,2],[15613,2],[15698,2],[15839,2],[15945,2],[15955,2],[15962,1],[15964,2],[15967,2],[15983,1],[15995,2],[16033,1],[16040,2],[16228,2],[16305,1],[16438,2],[16441,1],[16560,1],[16562,1],[16564,1],[16566,1],[16588,2],[16661,2],[16669,1],[16671,1],[16688,1],[16709,2],[16781,2],[16873,1],[16933,1],[16960,1],[16962,2],[17064,1],[17086,1],[17098,1],[17154,2],[17211,1],[17265,2],[17378,1],[17432,2],[17538,2],[17555,1],[17588,1],[17590,1],[17592,2],[17620,1],[17661,1],[17672,1],[17689,1],[17696,1],[17720,1],[17741,1],[17759,2],[17779,1],[17977,4],[18003,1],[18038,2],[18058,1],[18085,1],[18252,1],[18292,1],[18328,1],[18385,1],[18419,1],[18532,1],[18565,1],[18670,1],[18672,1],[18730,1],[18794,1],[18854,1],[18906,1],[18981,1],[19019,1],[19118,2],[19326,2],[19329,2],[19386,1],[19397,1],[19437,1],[19456,1],[19641,1],[19688,1],[19690,1],[19781,1],[20108,1],[20150,1],[20165,2],[20207,1],[20221,2],[20258,1],[20277,2],[20330,1],[20332,1],[20334,2],[20374,1],[20398,1],[20415,1],[20456,1],[20480,1],[20497,1],[20517,2],[20537,1],[20569,2]]},"746":{"position":[[800,1],[847,1],[849,1],[866,2],[869,1],[902,1],[923,1],[933,2],[936,2],[968,1],[978,2],[981,2],[1005,1],[1015,2],[1018,2],[1041,1],[1059,1],[1070,1],[1072,1],[1092,1],[1106,1],[1118,3],[1154,2],[1176,1],[1188,3],[1211,1],[1213,1],[1215,2],[1218,1],[1238,1],[1252,1],[1264,3],[1308,2],[1330,1],[1342,3],[1365,1],[1367,1],[1369,1],[1371,1],[1373,1],[1375,1],[1377,2],[1392,1],[1407,1],[1428,1],[1461,1],[1463,1],[1480,1],[1482,1],[1484,2],[1516,1],[1549,1],[1551,1],[1580,1],[1582,1],[1584,2],[1608,1],[1641,1],[1643,1],[1664,1],[1666,1],[1668,1],[1670,1],[1672,1],[1674,2],[1677,1],[1711,1],[1723,1],[1733,2],[1736,2],[1758,1],[1778,1],[1792,1],[1804,3],[1829,2],[1851,1],[1863,3],[1897,1],[1899,1],[1901,2],[1916,1],[1926,2],[1929,2],[1958,1],[1976,1],[1987,1],[1989,1],[2010,1],[2022,3],[2056,1],[2058,2],[2061,1],[2081,1],[2095,1],[2107,3],[2132,2],[2154,1],[2166,3],[2201,1],[2203,1],[2205,1],[2207,1],[2209,1],[2211,2],[2224,1],[2235,1],[2246,1],[2248,1],[2269,1],[2281,3],[2308,1],[2310,2],[2313,1],[2334,1],[2346,3],[2387,1],[2389,1],[2391,1],[2393,1],[2395,2],[2410,1],[2431,1],[2443,3],[2468,1],[2470,1],[2472,2],[2487,1],[2502,1],[2514,1],[2547,1],[2549,1],[2568,1],[2570,1],[2572,2],[2587,1],[2620,1],[2622,1],[2639,1],[2641,1],[2643,1],[2645,1],[2647,1],[2649,2],[2652,1],[2690,1],[2703,1],[2713,2],[2716,2],[2731,1],[2751,1],[2765,1],[2777,3],[2803,2],[2825,1],[2837,3],[2862,1],[2864,1],[2866,1],[2868,2],[2883,1],[2898,1],[2911,1],[2944,1],[2946,1],[2966,1],[2968,1],[2970,1],[2972,1],[2974,1],[2976,2],[2979,1],[3014,1],[3024,1],[3034,2],[3037,1],[3039,2],[3054,1],[3069,1],[3079,1],[3112,1],[3114,1],[3131,1],[3133,1],[3135,1],[3137,1],[3139,1],[3141,2],[3144,1],[3187,1],[3197,1],[3207,2],[3210,1],[3212,2],[3227,1],[3242,1],[3252,1],[3285,1],[3287,1],[3304,1],[3306,1],[3308,1],[3310,1],[3312,1],[3314,1],[3316,1],[3318,1],[3378,2],[3450,2],[3474,1],[3487,1],[3489,1],[3516,2],[3616,1],[3674,2],[3758,2],[3898,2],[3947,3],[3983,1],[3997,1],[3999,2],[4054,1],[4133,2],[4193,1],[4273,2],[4368,1],[4449,2],[4513,1],[4592,2],[4657,1],[4741,2],[4807,1],[4892,2],[4959,1],[5045,2],[5112,1],[5198,2],[5264,1],[5350,2],[5415,1],[5501,2],[5566,1],[5652,2],[5740,1],[5847,1],[5849,2],[5906,3],[5929,2],[6008,1],[6050,1],[6064,1],[6066,2],[6169,2],[6258,2],[6343,2],[6484,2],[6590,2],[6600,2],[6607,1],[6609,2],[6612,2],[6628,1],[6640,2],[6678,1],[6685,2],[6765,1],[6767,1],[6769,2],[6954,2],[6957,1],[6959,2],[7150,2],[7153,1],[7155,2],[7382,2],[7385,1],[7387,2],[7581,2],[7584,1],[7586,2],[7786,2],[7789,1],[7791,2],[7993,2],[7996,1],[7998,2],[8202,2],[8205,1],[8207,2],[8411,2],[8414,1],[8416,2],[8619,2],[8622,1],[8624,2],[8826,2],[8829,1],[8831,2],[9033,2],[9036,1],[9038,2],[9285,2],[9288,2],[9291,2],[9382,2],[9462,2],[9469,1],[9471,2],[9474,2],[9490,1],[9511,2],[9583,2],[9675,1],[9735,1],[9762,1],[9764,2],[9866,1],[9888,1],[9900,1],[9956,2],[10013,1],[10067,2],[10180,1],[10234,2],[10340,2],[10357,1],[10390,1],[10392,1],[10441,1],[10478,1],[10480,2],[10541,1],[10548,1],[10572,1],[10600,1],[10621,2],[10624,2],[10690,1],[10697,1],[10725,1],[10746,1],[10771,2],[10774,2],[10875,1],[10882,1],[10913,1],[10932,1],[10957,2],[10960,2],[11030,1],[11037,1],[11072,1],[11092,1],[11110,2],[11113,2],[11184,1],[11191,1],[11218,1],[11248,1],[11269,2],[11272,2],[11344,1],[11351,1],[11379,1],[11409,1],[11430,2],[11433,2],[11506,1],[11513,1],[11542,1],[11572,1],[11593,2],[11596,2],[11669,1],[11676,1],[11705,1],[11735,1],[11756,2],[11759,2],[11831,1],[11838,1],[11867,1],[11897,1],[11918,2],[11921,2],[11992,1],[11999,1],[12028,1],[12058,1],[12079,2],[12082,2],[12153,1],[12160,1],[12189,1],[12219,1],[12240,2],[12243,2],[12337,1],[12344,1],[12387,1],[12425,1],[12446,1],[12448,3],[12473,1],[12505,3],[12528,1],[12695,1],[12735,1],[12771,1],[12828,1],[12862,1],[12975,1],[13008,1],[13113,1],[13115,1],[13173,1],[13237,1],[13289,1],[13343,1],[13427,1],[13484,1],[13611,2],[13624,1],[13757,2],[13770,1],[13939,2],[13952,1],[14088,2],[14101,1],[14243,2],[14256,1],[14400,2],[14413,1],[14559,2],[14572,1],[14718,2],[14731,1],[14876,2],[14889,1],[15033,2],[15046,1],[15190,2],[15203,1],[15392,2],[15395,2],[15398,2],[15455,1],[15672,1],[15719,1],[15721,1],[15812,1],[15829,1],[15844,1],[16862,2],[16931,2],[16986,1],[17066,2],[17069,2],[17129,1],[17210,2],[17213,2],[17308,1],[17390,2],[17393,2],[17457,1],[17537,2],[17540,2],[17605,1],[17690,2],[17693,2],[17759,1],[17845,2],[17848,2],[17915,1],[18002,2],[18005,2],[18072,1],[18159,2],[18162,2],[18228,1],[18315,2],[18318,2],[18383,1],[18470,2],[18473,2],[18538,1],[18625,2],[18628,2],[18716,1],[18825,1],[18827,2]]},"748":{"position":[[1013,1],[1060,1],[1062,1],[1079,2],[1082,1],[1113,1],[1124,1],[1134,2],[1137,1],[1139,2],[1154,1],[1169,1],[1180,1],[1213,1],[1215,1],[1232,1],[1234,1],[1236,1],[1238,1],[1240,1],[1242,2],[1245,1],[1278,1],[1288,1],[1298,2],[1301,2],[1323,1],[1333,2],[1336,2],[1368,1],[1378,2],[1381,2],[1405,1],[1415,2],[1418,2],[1441,1],[1459,1],[1470,1],[1472,1],[1492,1],[1506,1],[1518,3],[1554,2],[1576,1],[1588,3],[1611,1],[1613,1],[1615,2],[1618,1],[1638,1],[1652,1],[1664,3],[1708,2],[1730,1],[1742,3],[1765,1],[1767,1],[1769,1],[1771,1],[1773,1],[1775,1],[1777,2],[1792,1],[1807,1],[1817,1],[1850,1],[1852,1],[1869,1],[1871,1],[1873,2],[1895,1],[1928,1],[1930,1],[1947,1],[1949,1],[1951,2],[1983,1],[2016,1],[2018,1],[2047,1],[2049,1],[2051,2],[2075,1],[2108,1],[2110,1],[2131,1],[2133,1],[2135,1],[2137,1],[2139,1],[2141,2],[2144,1],[2178,1],[2190,1],[2200,2],[2203,2],[2225,1],[2245,1],[2259,1],[2271,3],[2296,2],[2318,1],[2330,3],[2364,1],[2366,1],[2368,2],[2383,1],[2393,2],[2396,2],[2425,1],[2443,1],[2454,1],[2456,1],[2477,1],[2489,3],[2523,1],[2525,2],[2528,1],[2548,1],[2562,1],[2574,3],[2599,2],[2621,1],[2633,3],[2668,1],[2670,1],[2672,1],[2674,1],[2676,1],[2678,2],[2691,1],[2702,1],[2713,1],[2715,1],[2736,1],[2748,3],[2775,1],[2777,2],[2780,1],[2801,1],[2813,3],[2854,1],[2856,1],[2858,1],[2860,1],[2862,2],[2877,1],[2898,1],[2910,3],[2935,1],[2937,1],[2939,2],[2954,1],[2969,1],[2981,1],[3014,1],[3016,1],[3035,1],[3037,1],[3039,2],[3054,1],[3087,1],[3089,1],[3106,1],[3108,1],[3110,1],[3112,1],[3114,1],[3116,2],[3119,1],[3157,1],[3170,1],[3180,2],[3183,2],[3198,1],[3218,1],[3232,1],[3244,3],[3270,2],[3292,1],[3304,3],[3329,1],[3331,1],[3333,1],[3335,2],[3350,1],[3365,1],[3378,1],[3411,1],[3413,1],[3433,1],[3435,1],[3437,1],[3439,1],[3441,1],[3443,2],[3446,1],[3481,1],[3491,1],[3501,2],[3504,1],[3506,2],[3521,1],[3536,1],[3546,1],[3579,1],[3581,1],[3598,1],[3600,1],[3602,1],[3604,1],[3606,1],[3608,2],[3611,1],[3654,1],[3664,1],[3674,2],[3677,1],[3679,2],[3694,1],[3709,1],[3719,1],[3752,1],[3754,1],[3771,1],[3773,1],[3775,1],[3777,1],[3779,1],[3781,1],[3783,1],[3785,1]]},"754":{"position":[[441,1],[835,1],[1027,1]]},"765":{"position":[[797,1],[844,1],[846,1],[863,2],[866,1],[900,1],[921,1],[931,2],[934,1],[936,2],[951,1],[966,1],[987,1],[1020,1],[1022,1],[1039,1],[1041,1],[1043,1],[1045,1],[1047,1],[1049,2],[1052,1],[1083,1],[1099,1],[1109,2],[1112,1],[1114,2],[1129,1],[1144,1],[1160,1],[1193,1],[1195,1],[1220,1],[1222,1],[1224,1],[1226,1],[1228,1],[1230,2],[1233,1],[1272,1],[1284,1],[1294,2],[1297,1],[1299,2],[1314,1],[1329,1],[1341,1],[1374,1],[1376,1],[1393,1],[1395,1],[1397,1],[1399,1],[1401,1],[1403,1],[1405,1],[1407,1]]},"767":{"position":[[246,2],[318,2],[342,1],[355,1],[357,1],[384,2],[484,1],[542,2],[626,2],[766,2],[815,3],[851,1],[865,1],[867,2],[929,1],[1006,2],[1068,1],[1145,2],[1220,1],[1300,2],[1368,1],[1451,2],[1532,1],[1618,2],[1699,1],[1778,1],[1780,2],[1837,3],[1860,2],[1939,1],[1981,1],[1995,1],[1997,2],[2100,2],[2189,2],[2274,2],[2415,2],[2521,2],[2531,2],[2538,1],[2540,2],[2543,2],[2559,1],[2571,2],[2609,1],[2616,2],[2696,1],[2698,1],[2700,2],[2890,2],[2893,1],[2895,2],[3085,2],[3088,1],[3090,2],[3296,2],[3299,1],[3301,2],[3503,2],[3506,1],[3508,2],[3726,2],[3729,1],[3731,2],[3943,2],[3946,2],[3949,2],[4040,2],[4120,2],[4127,1],[4129,2],[4132,2],[4148,1],[4169,2],[4241,2],[4333,1],[4393,1],[4420,1],[4422,2],[4524,1],[4546,1],[4558,1],[4614,2],[4671,1],[4725,2],[4838,1],[4892,2],[4998,2],[5015,1],[5048,1],[5050,1],[5099,1],[5136,1],[5138,2],[5206,1],[5213,1],[5237,1],[5265,1],[5284,2],[5287,2],[5355,1],[5362,1],[5386,1],[5414,1],[5433,2],[5436,2],[5517,1],[5524,1],[5548,1],[5576,1],[5598,2],[5601,2],[5675,1],[5682,1],[5712,1],[5740,1],[5759,2],[5762,2],[5849,1],[5856,1],[5886,1],[5914,1],[5936,2],[5939,2],[6026,1],[6033,1],[6063,1],[6091,1],[6107,1],[6109,3],[6134,1],[6166,3],[6189,1],[6356,1],[6396,1],[6432,1],[6489,1],[6523,1],[6636,1],[6669,1],[6774,1],[6776,1],[6834,1],[6898,1],[6950,1],[7004,1],[7088,1],[7145,1],[7277,2],[7290,1],[7422,2],[7435,1],[7583,2],[7596,1],[7740,2],[7753,1],[7913,2],[7926,1],[8080,2],[8083,2],[8086,2],[8143,1],[8360,1],[8407,1],[8409,1],[8500,1],[8517,1],[8532,1],[9013,2],[9082,2],[9144,1],[9222,2],[9225,2],[9287,1],[9365,2],[9368,2],[9443,1],[9524,2],[9527,2],[9595,1],[9679,2],[9682,2],[9763,1],[9850,2],[9853,2],[9934,1],[10015,1],[10017,2],[10202,2],[10274,2],[10298,1],[10311,1],[10313,1],[10340,2],[10440,1],[10498,2],[10582,2],[10722,2],[10771,3],[10807,1],[10821,1],[10823,2],[10893,1],[10969,2],[11043,1],[11119,2],[11194,1],[11274,1],[11276,2],[11333,3],[11356,2],[11435,1],[11477,1],[11491,1],[11493,2],[11596,2],[11685,2],[11770,2],[11911,2],[12017,2],[12027,2],[12034,1],[12036,2],[12039,2],[12055,1],[12067,2],[12105,1],[12112,2],[12192,1],[12194,1],[12196,2],[12393,2],[12396,1],[12398,2],[12599,2],[12602,1],[12604,2],[12811,2],[12814,2],[12817,2],[12908,2],[12988,2],[12995,1],[12997,2],[13000,2],[13016,1],[13037,2],[13109,2],[13201,1],[13261,1],[13288,1],[13290,2],[13392,1],[13414,1],[13426,1],[13482,2],[13539,1],[13593,2],[13706,1],[13760,2],[13866,2],[13883,1],[13916,1],[13918,1],[13967,1],[14004,1],[14006,2],[14082,1],[14089,1],[14122,1],[14145,1],[14159,2],[14162,2],[14242,1],[14249,1],[14282,1],[14305,1],[14319,2],[14322,2],[14403,1],[14410,1],[14442,1],[14465,1],[14485,1],[14487,3],[14512,1],[14544,3],[14567,1],[14734,1],[14774,1],[14810,1],[14867,1],[14901,1],[15014,1],[15047,1],[15152,1],[15154,1],[15212,1],[15276,1],[15328,1],[15382,1],[15466,1],[15523,1],[15662,2],[15675,1],[15818,2],[15831,1],[15980,2],[15983,2],[15986,2],[16043,1],[16260,1],[16307,1],[16309,1],[16400,1],[16417,1],[16432,1],[16666,2],[16735,2],[16805,1],[16882,2],[16885,2],[16959,1],[17036,2],[17039,2],[17114,1],[17196,1],[17198,2],[17383,2],[17455,2],[17479,1],[17492,1],[17494,1],[17521,2],[17621,1],[17679,2],[17763,2],[17903,2],[17952,3],[17988,1],[18002,1],[18004,2],[18061,1],[18133,2],[18181,1],[18253,2],[18312,1],[18385,1],[18387,2],[18444,3],[18467,2],[18546,1],[18588,1],[18602,1],[18604,2],[18707,2],[18796,2],[18881,2],[19022,2],[19128,2],[19138,2],[19145,1],[19147,2],[19150,2],[19166,1],[19178,2],[19216,1],[19223,2],[19303,1],[19305,1],[19307,2],[19487,2],[19490,1],[19492,2],[19663,2],[19666,1],[19668,2],[19852,2],[19855,2],[19858,2],[19949,2],[20029,2],[20036,1],[20038,2],[20041,2],[20057,1],[20078,2],[20150,2],[20242,1],[20302,1],[20329,1],[20331,2],[20433,1],[20455,1],[20467,1],[20523,2],[20580,1],[20634,2],[20747,1],[20801,2],[20907,2],[20924,1],[20957,1],[20959,1],[21008,1],[21045,1],[21047,2],[21110,1],[21117,1],[21141,1],[21160,1],[21183,2],[21186,2],[21240,1],[21247,1],[21271,1],[21290,1],[21313,2],[21316,2],[21381,1],[21388,1],[21415,1],[21434,1],[21456,1],[21458,3],[21483,1],[21515,3],[21538,1],[21705,1],[21745,1],[21781,1],[21838,1],[21872,1],[21985,1],[22018,1],[22123,1],[22125,1],[22183,1],[22247,1],[22299,1],[22353,1],[22437,1],[22494,1],[22616,2],[22629,1],[22742,2],[22755,1],[22881,2],[22884,2],[22887,2],[22944,1],[23161,1],[23208,1],[23210,1],[23301,1],[23318,1],[23333,1],[23552,2],[23621,2],[23678,1],[23751,2],[23754,2],[23802,1],[23875,2],[23878,2],[23937,1],[24012,1],[24014,2],[25041,2],[25113,2],[25137,1],[25150,1],[25152,1],[25179,2],[25279,1],[25337,2],[25421,2],[25561,2],[25610,3],[25614,2],[25635,1],[25645,1],[25647,1],[25739,1],[25810,2],[25813,3],[25817,2],[25828,1],[25854,2],[25933,1],[25975,1],[25989,1],[25991,2],[26094,2],[26183,2],[26268,2],[26409,2],[26515,2],[26525,2],[26532,1],[26534,2],[26537,2],[26553,1],[26565,2],[26603,1],[26610,2],[26801,2],[26804,1],[26826,2],[26899,2],[26907,1],[26909,1],[26925,1],[26946,2],[27018,2],[27110,1],[27170,1],[27197,1],[27199,2],[27301,1],[27323,1],[27335,1],[27391,2],[27448,1],[27502,2],[27615,1],[27669,2],[27775,2],[27792,1],[27825,1],[27827,1],[27829,2],[27857,1],[27898,1],[27909,1],[27926,1],[27933,1],[27957,1],[27976,1],[27999,2],[28023,1],[28058,2],[28078,1],[28104,1],[28271,1],[28311,1],[28347,1],[28404,1],[28438,1],[28551,1],[28584,1],[28689,1],[28691,1],[28749,1],[28813,1],[28873,1],[28925,1],[29000,1],[29038,1],[29140,2],[29197,1],[29208,1],[29248,1],[29267,1],[29451,1],[29498,1],[29500,1],[29591,1],[29740,1],[29781,1],[29796,2],[29838,1],[29850,2],[29885,1],[29909,2],[29966,1],[29998,2],[30220,2],[30292,2],[30316,1],[30329,1],[30331,1],[30358,2],[30458,1],[30516,2],[30600,2],[30740,2],[30789,3],[30793,2],[30814,1],[30824,1],[30826,1],[30918,1],[30989,2],[30992,3],[30996,2],[31007,1],[31034,2],[31113,1],[31155,1],[31169,1],[31171,2],[31274,2],[31363,2],[31448,2],[31589,2],[31695,2],[31705,2],[31712,1],[31714,2],[31717,2],[31733,1],[31745,2],[31783,1],[31790,2],[31981,2],[31984,1],[32006,2],[32079,2],[32087,1],[32089,1],[32106,1],[32127,2],[32199,2],[32291,1],[32351,1],[32378,1],[32380,2],[32482,1],[32504,1],[32516,1],[32572,2],[32629,1],[32683,2],[32796,1],[32850,2],[32956,2],[32973,1],[33006,1],[33008,1],[33010,2],[33038,1],[33079,1],[33090,1],[33107,1],[33114,1],[33138,1],[33157,1],[33180,2],[33204,1],[33239,2],[33259,1],[33286,1],[33453,1],[33493,1],[33529,1],[33586,1],[33620,1],[33733,1],[33766,1],[33871,1],[33873,1],[33931,1],[33995,1],[34055,1],[34107,1],[34182,1],[34220,1],[34322,2],[34379,1],[34390,1],[34430,1],[34449,1],[34634,1],[34681,1],[34683,1],[34774,1],[34923,1],[34965,1],[34980,2],[35022,1],[35034,2],[35069,1],[35093,2],[35150,1],[35182,2],[35256,2],[35328,2],[35352,1],[35365,1],[35367,1],[35394,2],[35494,1],[35552,2],[35636,2],[35776,2],[35825,3],[35829,2],[35850,1],[35860,1],[35862,1],[35954,1],[36029,2],[36032,3],[36036,2],[36047,1],[36073,2],[36152,1],[36194,1],[36208,1],[36210,2],[36313,2],[36402,2],[36487,2],[36628,2],[36734,2],[36744,2],[36751,1],[36753,2],[36756,2],[36772,1],[36784,2],[36822,1],[36829,2],[37024,2],[37027,1],[37049,2],[37122,2],[37130,1],[37132,1],[37148,1],[37169,2],[37241,2],[37333,1],[37393,1],[37420,1],[37422,2],[37524,1],[37546,1],[37558,1],[37614,2],[37671,1],[37725,2],[37838,1],[37892,2],[37998,2],[38015,1],[38048,1],[38050,1],[38052,2],[38080,1],[38121,1],[38132,1],[38149,1],[38156,1],[38189,1],[38212,1],[38226,2],[38250,1],[38285,2],[38305,1],[38331,1],[38498,1],[38538,1],[38574,1],[38631,1],[38665,1],[38778,1],[38811,1],[38916,1],[38918,1],[38976,1],[39040,1],[39100,1],[39152,1],[39227,1],[39265,1],[39371,2],[39428,1],[39439,1],[39479,1],[39498,1],[39682,1],[39729,1],[39731,1],[39822,1],[39975,1],[40016,1],[40040,2],[40091,1],[40107,2],[40146,1],[40161,2],[40209,1],[40241,2],[40314,2],[40386,2],[40410,1],[40423,1],[40425,1],[40452,2],[40552,1],[40610,2],[40694,2],[40834,2],[40883,3],[40887,2],[40908,1],[40918,1],[40920,1],[41012,1],[41088,2],[41091,3],[41095,2],[41106,1],[41132,2],[41211,1],[41253,1],[41267,1],[41269,2],[41372,2],[41461,2],[41546,2],[41687,2],[41793,2],[41803,2],[41810,1],[41812,2],[41815,2],[41831,1],[41843,2],[41881,1],[41888,2],[42084,2],[42087,1],[42109,2],[42182,2],[42190,1],[42192,1],[42208,1],[42229,2],[42301,2],[42393,1],[42453,1],[42480,1],[42482,2],[42584,1],[42606,1],[42618,1],[42674,2],[42731,1],[42785,2],[42898,1],[42952,2],[43058,2],[43075,1],[43108,1],[43110,1],[43112,2],[43140,1],[43181,1],[43192,1],[43209,1],[43216,1],[43240,1],[43268,1],[43287,2],[43311,1],[43346,2],[43366,1],[43392,1],[43559,1],[43599,1],[43635,1],[43692,1],[43726,1],[43839,1],[43872,1],[43977,1],[43979,1],[44037,1],[44101,1],[44161,1],[44213,1],[44288,1],[44326,1],[44433,2],[44490,1],[44501,1],[44541,1],[44560,1],[44744,1],[44791,1],[44793,1],[44884,1],[45038,1],[45079,1],[45094,2],[45136,1],[45157,2],[45201,1],[45221,2],[45274,1],[45306,2]]},"769":{"position":[[342,2],[414,2],[438,1],[451,1],[453,1],[480,2],[580,1],[638,2],[722,2],[862,2],[911,3],[915,2],[936,1],[946,1],[948,1],[1040,1],[1107,2],[1110,3],[1114,2],[1125,1],[1156,2],[1235,1],[1277,1],[1291,1],[1293,2],[1396,2],[1485,2],[1570,2],[1711,2],[1817,2],[1827,2],[1834,1],[1836,2],[1839,2],[1855,1],[1867,2],[1905,1],[1912,2],[2099,2],[2102,1],[2124,2],[2197,2],[2205,1],[2207,1],[2228,1],[2249,2],[2321,2],[2413,1],[2473,1],[2500,1],[2502,2],[2604,1],[2626,1],[2638,1],[2694,2],[2751,1],[2805,2],[2918,1],[2972,2],[3078,2],[3095,1],[3128,1],[3130,1],[3132,2],[3160,1],[3201,1],[3212,1],[3229,1],[3236,1],[3260,1],[3279,1],[3298,2],[3322,1],[3357,2],[3377,1],[3408,1],[3575,1],[3615,1],[3651,1],[3708,1],[3742,1],[3855,1],[3888,1],[3993,1],[3995,1],[4053,1],[4117,1],[4177,1],[4229,1],[4304,1],[4342,1],[4440,2],[4497,1],[4508,1],[4548,1],[4567,1],[4756,1],[4803,1],[4805,1],[4896,1],[5041,1],[5087,1],[5102,2],[5144,1],[5156,2],[5191,1],[5211,2],[5264,1],[5296,2],[5610,1],[5644,1],[5665,1],[5675,2],[5678,2],[5691,1],[5701,2],[5704,1],[5706,2],[5721,1],[5736,1],[5757,1],[5790,1],[5792,1],[5809,1],[5811,1],[5813,2],[5826,1],[5859,1],[5861,1],[5878,1],[5880,1],[5882,1],[5884,1],[5886,1],[5888,1],[6771,1],[6818,1],[6820,1],[6837,2],[6840,1],[6874,1],[6895,1],[6905,2],[6908,2],[6921,1],[6931,2],[6934,1],[6936,2],[6951,1],[6966,1],[6987,1],[7020,1],[7022,1],[7039,1],[7041,1],[7043,2],[7056,1],[7089,1],[7091,1],[7108,1],[7110,1],[7112,1],[7114,1],[7116,1],[7118,2],[7121,1],[7152,1],[7168,1],[7178,2],[7181,1],[7183,2],[7198,1],[7213,1],[7229,1],[7262,1],[7264,1],[7289,1],[7291,1],[7293,1],[7295,1],[7297,1],[7299,2],[7302,1],[7341,1],[7353,1],[7363,2],[7366,1],[7368,2],[7383,1],[7398,1],[7414,1],[7447,1],[7449,1],[7466,1],[7468,1],[7470,1],[7472,1],[7474,1],[7476,1],[7478,1],[7480,1],[7677,2],[7749,2],[7773,1],[7786,1],[7788,1],[7815,2],[7915,1],[7973,2],[8057,2],[8197,2],[8246,3],[8250,2],[8271,1],[8281,1],[8283,1],[8375,1],[8442,2],[8445,3],[8449,2],[8460,1],[8487,2],[8566,1],[8608,1],[8622,1],[8624,2],[8727,2],[8816,2],[8901,2],[9042,2],[9148,2],[9158,2],[9165,1],[9167,2],[9170,2],[9186,1],[9198,2],[9236,1],[9243,2],[9430,2],[9433,1],[9455,2],[9528,2],[9536,1],[9538,1],[9555,1],[9576,2],[9648,2],[9740,1],[9800,1],[9827,1],[9829,2],[9931,1],[9953,1],[9965,1],[10021,2],[10078,1],[10132,2],[10245,1],[10299,2],[10405,2],[10422,1],[10455,1],[10457,1],[10459,2],[10487,1],[10528,1],[10539,1],[10556,1],[10563,1],[10587,1],[10606,1],[10625,2],[10649,1],[10684,2],[10704,1],[10731,1],[10898,1],[10938,1],[10974,1],[11031,1],[11065,1],[11178,1],[11211,1],[11316,1],[11318,1],[11376,1],[11440,1],[11500,1],[11552,1],[11627,1],[11665,1],[11763,2],[11820,1],[11831,1],[11871,1],[11890,1],[12075,1],[12122,1],[12124,1],[12215,1],[12360,1],[12402,1],[12417,2],[12459,1],[12471,2],[12506,1],[12526,2],[12579,1],[12611,2],[13017,2],[13089,2],[13113,1],[13126,1],[13128,1],[13155,2],[13255,1],[13313,2],[13397,2],[13537,2],[13586,3],[13590,2],[13611,1],[13621,1],[13623,1],[13715,1],[13791,2],[13794,3],[13798,2],[13809,1],[13836,2],[13915,1],[13957,1],[13971,1],[13973,2],[14076,2],[14165,2],[14250,2],[14391,2],[14497,2],[14507,2],[14514,1],[14516,2],[14519,2],[14535,1],[14547,2],[14585,1],[14592,2],[14788,2],[14791,1],[14813,2],[14886,2],[14894,1],[14896,1],[14913,1],[14934,2],[15006,2],[15098,1],[15158,1],[15185,1],[15187,2],[15289,1],[15311,1],[15323,1],[15379,2],[15436,1],[15490,2],[15603,1],[15657,2],[15763,2],[15780,1],[15813,1],[15815,1],[15817,2],[15845,1],[15886,1],[15897,1],[15914,1],[15921,1],[15954,1],[15973,1],[15992,2],[16016,1],[16051,2],[16071,1],[16098,1],[16265,1],[16305,1],[16341,1],[16398,1],[16432,1],[16545,1],[16578,1],[16683,1],[16685,1],[16743,1],[16807,1],[16867,1],[16919,1],[16994,1],[17032,1],[17139,2],[17196,1],[17207,1],[17247,1],[17266,1],[17451,1],[17498,1],[17500,1],[17591,1],[17745,1],[17787,1],[17811,2],[17862,1],[17874,2],[17909,1],[17929,2],[17982,1],[18014,2],[18218,1],[18230,1],[18250,1],[18264,1],[18287,2],[18309,1],[18344,1],[18346,1],[18348,1],[18350,1],[19095,1],[19129,1],[19150,1],[19160,2],[19163,2],[19176,1],[19187,1],[19198,1],[19200,1],[19210,2],[19213,2],[19216,1],[19236,1],[19250,1],[19282,2],[19304,1],[19331,1],[19333,1],[19335,1],[19337,1],[19339,1],[19341,1],[19343,2],[19358,1],[19373,1],[19394,1],[19427,1],[19429,1],[19446,1],[19448,1],[19450,2],[19463,1],[19496,1],[19498,1],[19515,1],[19517,1],[19519,1],[19521,1],[19523,1],[19525,1],[20002,1],[20066,1],[20147,1],[20212,1],[20214,1],[20287,1],[20610,1],[20672,1],[21750,1],[21797,1],[21799,1],[21816,2],[21819,1],[21853,1],[21874,1],[21884,2],[21887,2],[21900,1],[21911,1],[21922,1],[21924,1],[21934,2],[21937,2],[21940,1],[21960,1],[21974,1],[22006,2],[22028,1],[22055,1],[22057,1],[22059,1],[22061,1],[22063,1],[22065,1],[22067,2],[22082,1],[22097,1],[22118,1],[22151,1],[22153,1],[22170,1],[22172,1],[22174,2],[22187,1],[22220,1],[22222,1],[22239,1],[22241,1],[22243,1],[22245,1],[22247,1],[22249,2],[22252,1],[22283,1],[22299,1],[22309,2],[22312,1],[22314,2],[22329,1],[22344,1],[22360,1],[22393,1],[22395,1],[22420,1],[22422,1],[22424,1],[22426,1],[22428,1],[22430,2],[22433,1],[22472,1],[22484,1],[22494,2],[22497,1],[22499,2],[22514,1],[22529,1],[22541,1],[22574,1],[22576,1],[22593,1],[22595,1],[22597,1],[22599,1],[22601,1],[22603,1],[22605,1],[22607,1],[22765,2],[22837,2],[22861,1],[22874,1],[22876,1],[22903,2],[23003,1],[23061,2],[23145,2],[23285,2],[23334,3],[23338,2],[23359,1],[23369,1],[23371,1],[23463,1],[23539,2],[23542,3],[23546,2],[23557,1],[23583,2],[23662,1],[23704,1],[23718,1],[23720,2],[23823,2],[23912,2],[23997,2],[24138,2],[24244,2],[24254,2],[24261,1],[24263,2],[24266,2],[24282,1],[24294,2],[24332,1],[24339,2],[24535,2],[24538,1],[24560,2],[24633,2],[24641,1],[24643,1],[24659,1],[24680,2],[24752,2],[24844,1],[24904,1],[24931,1],[24933,2],[25035,1],[25057,1],[25069,1],[25125,2],[25182,1],[25236,2],[25349,1],[25403,2],[25509,2],[25526,1],[25559,1],[25561,1],[25563,2],[25591,1],[25632,1],[25643,1],[25660,1],[25667,1],[25700,1],[25719,1],[25738,2],[25762,1],[25797,2],[25817,1],[25843,1],[26010,1],[26050,1],[26086,1],[26143,1],[26177,1],[26290,1],[26323,1],[26428,1],[26430,1],[26488,1],[26552,1],[26612,1],[26664,1],[26739,1],[26777,1],[26884,2],[26941,1],[26952,1],[26992,1],[27011,1],[27195,1],[27242,1],[27244,1],[27335,1],[27489,1],[27530,1],[27554,2],[27605,1],[27617,2],[27652,1],[27672,2],[27725,1],[27757,2],[28942,1],[28989,1],[28991,1],[29008,2],[29011,1],[29045,1],[29066,1],[29076,2],[29079,2],[29092,1],[29103,1],[29114,1],[29116,1],[29126,2],[29129,2],[29132,1],[29152,1],[29166,1],[29198,2],[29220,1],[29254,1],[29256,1],[29258,1],[29260,1],[29262,1],[29264,1],[29266,2],[29281,1],[29296,1],[29317,1],[29350,1],[29352,1],[29369,1],[29371,1],[29373,2],[29386,1],[29419,1],[29421,1],[29438,1],[29440,1],[29442,1],[29444,1],[29446,1],[29448,2],[29451,1],[29482,1],[29498,1],[29508,2],[29511,2],[29535,1],[29555,1],[29569,1],[29596,2],[29618,1],[29641,1],[29643,1],[29645,1],[29647,2],[29662,1],[29677,1],[29693,1],[29726,1],[29728,1],[29753,1],[29755,1],[29757,1],[29759,1],[29761,1],[29763,2],[29766,1],[29805,1],[29817,1],[29827,2],[29830,1],[29832,2],[29847,1],[29862,1],[29874,1],[29907,1],[29909,1],[29926,1],[29928,1],[29930,1],[29932,1],[29934,1],[29936,1],[29938,1],[29940,1],[30428,2],[30500,2],[30524,1],[30537,1],[30539,1],[30566,2],[30666,1],[30724,2],[30808,2],[30948,2],[30997,3],[31001,2],[31022,1],[31032,1],[31034,1],[31126,1],[31193,2],[31196,3],[31200,2],[31211,1],[31237,2],[31316,1],[31358,1],[31372,1],[31374,2],[31477,2],[31566,2],[31651,2],[31792,2],[31898,2],[31908,2],[31915,1],[31917,2],[31920,2],[31936,1],[31948,2],[31986,1],[31993,2],[32180,2],[32183,1],[32205,2],[32278,2],[32286,1],[32288,1],[32304,1],[32325,2],[32397,2],[32489,1],[32549,1],[32576,1],[32578,2],[32680,1],[32702,1],[32714,1],[32770,2],[32827,1],[32881,2],[32994,1],[33048,2],[33154,2],[33171,1],[33204,1],[33206,1],[33208,2],[33236,1],[33277,1],[33288,1],[33305,1],[33312,1],[33336,1],[33355,1],[33374,2],[33398,1],[33433,2],[33453,1],[33479,1],[33646,1],[33686,1],[33722,1],[33779,1],[33813,1],[33926,1],[33959,1],[34064,1],[34066,1],[34124,1],[34188,1],[34248,1],[34300,1],[34375,1],[34413,1],[34511,2],[34568,1],[34579,1],[34619,1],[34638,1],[34822,1],[34869,1],[34871,1],[34962,1],[35107,1],[35148,1],[35163,2],[35205,1],[35217,2],[35252,1],[35272,2],[35325,1],[35357,2],[35726,1],[35793,2],[36066,1],[36100,1],[36121,1],[36131,2],[36134,2],[36147,1],[36158,1],[36169,1],[36171,1],[36181,2],[36184,2],[36187,1],[36207,1],[36221,1],[36253,2],[36275,1],[36309,1],[36311,1],[36313,1],[36315,1],[36317,1],[36319,1],[36321,2],[36336,1],[36351,1],[36372,1],[36405,1],[36407,1],[36424,1],[36426,1],[36428,2],[36441,1],[36474,1],[36476,1],[36493,1],[36495,1],[36497,1],[36499,1],[36501,1],[36503,1],[36630,1],[36664,1],[36685,1],[36695,2],[36698,2],[36711,1],[36731,1],[36745,1],[36777,2],[36799,1],[36833,1],[36835,1],[36837,1],[36839,2],[36854,1],[36869,1],[36890,1],[36923,1],[36925,1],[36942,1],[36944,1],[36946,1],[36948,1],[36950,1],[36952,1],[37035,1],[37105,1],[37288,1],[37360,1],[37362,1],[37435,1],[37437,1],[37515,1],[37887,1],[37934,1],[37936,1],[37953,2],[37956,1],[37990,1],[38011,1],[38021,2],[38024,2],[38037,1],[38057,1],[38071,1],[38103,2],[38125,1],[38159,1],[38161,1],[38163,1],[38165,2],[38180,1],[38195,1],[38216,1],[38249,1],[38251,1],[38268,1],[38270,1],[38272,1],[38274,1],[38276,1],[38278,2],[38281,1],[38312,1],[38328,1],[38338,2],[38341,2],[38365,1],[38385,1],[38399,1],[38426,2],[38448,1],[38471,1],[38473,1],[38475,1],[38477,2],[38492,1],[38507,1],[38523,1],[38556,1],[38558,1],[38583,1],[38585,1],[38587,1],[38589,1],[38591,1],[38593,2],[38596,1],[38635,1],[38647,1],[38657,2],[38660,1],[38662,2],[38677,1],[38692,1],[38704,1],[38737,1],[38739,1],[38756,1],[38758,1],[38760,1],[38762,1],[38764,1],[38766,1],[38768,1],[38770,1],[39415,2],[39487,2],[39511,1],[39524,1],[39526,1],[39553,2],[39653,1],[39711,2],[39795,2],[39935,2],[39984,3],[39988,2],[40009,1],[40019,1],[40021,1],[40113,1],[40180,2],[40183,3],[40187,2],[40198,1],[40224,2],[40303,1],[40345,1],[40359,1],[40361,2],[40464,2],[40553,2],[40638,2],[40779,2],[40885,2],[40895,2],[40902,1],[40904,2],[40907,2],[40923,1],[40935,2],[40973,1],[40980,2],[41167,2],[41170,1],[41192,2],[41265,2],[41273,1],[41275,1],[41291,1],[41312,2],[41384,2],[41476,1],[41536,1],[41563,1],[41565,2],[41667,1],[41689,1],[41701,1],[41757,2],[41814,1],[41868,2],[41981,1],[42035,2],[42141,2],[42158,1],[42191,1],[42193,1],[42195,2],[42223,1],[42264,1],[42275,1],[42292,1],[42299,1],[42323,1],[42342,1],[42361,2],[42385,1],[42420,2],[42440,1],[42466,1],[42633,1],[42673,1],[42709,1],[42766,1],[42800,1],[42913,1],[42946,1],[43051,1],[43053,1],[43111,1],[43175,1],[43235,1],[43287,1],[43362,1],[43400,1],[43498,2],[43555,1],[43566,1],[43606,1],[43625,1],[43809,1],[43856,1],[43858,1],[43949,1],[44094,1],[44135,1],[44150,2],[44192,1],[44204,2],[44239,1],[44259,2],[44312,1],[44344,2]]},"775":{"position":[[428,1],[610,1],[767,1]]},"786":{"position":[[452,1],[499,1],[501,1],[518,2],[521,1],[552,1],[564,1],[574,2],[577,2],[591,1],[601,2],[604,2],[617,1],[627,2],[630,2],[647,1],[657,2],[660,2],[672,1],[682,2],[685,1],[687,2],[702,1],[717,1],[729,1],[762,1],[764,1],[781,1],[783,1],[785,2],[799,1],[832,1],[834,1],[851,1],[853,1],[855,2],[868,1],[901,1],[903,1],[920,1],[922,1],[924,2],[941,1],[974,1],[976,1],[993,1],[995,1],[997,2],[1009,1],[1042,1],[1044,1],[1061,1],[1063,1],[1065,1],[1067,1],[1069,1],[1071,1],[1073,1],[1075,1],[1324,1],[1371,1],[1373,1],[1390,2],[1393,1],[1424,1],[1436,1],[1446,2],[1449,1],[1451,2],[1466,1],[1481,1],[1493,1],[1526,1],[1528,1],[1545,1],[1547,1],[1549,1],[1551,1],[1553,1],[1555,1],[1557,1],[1559,1],[1877,2],[1949,2],[1973,1],[1986,1],[1988,1],[2015,2],[2115,1],[2173,2],[2257,2],[2397,2],[2446,3],[2482,1],[2496,1],[2498,1],[2571,1],[2573,2],[2630,3],[2653,2],[2732,1],[2774,1],[2788,1],[2790,2],[2893,2],[2982,2],[3067,2],[3208,2],[3314,2],[3324,2],[3331,1],[3333,2],[3336,2],[3352,1],[3364,2],[3402,1],[3409,2],[3489,1],[3491,1],[3618,2],[3621,2],[3624,2],[3715,2],[3795,2],[3802,1],[3804,2],[3807,2],[3823,1],[3844,2],[3916,2],[4008,1],[4068,1],[4095,1],[4097,2],[4199,1],[4221,1],[4233,1],[4289,2],[4346,1],[4400,2],[4513,1],[4567,2],[4673,2],[4690,1],[4723,1],[4725,1],[4774,1],[4811,1],[4819,1],[4826,1],[4850,1],[4869,1],[4894,1],[4896,3],[4921,1],[4953,3],[4976,1],[5143,1],[5183,1],[5219,1],[5276,1],[5310,1],[5423,1],[5456,1],[5561,1],[5563,1],[5621,1],[5685,1],[5737,1],[5791,1],[5875,1],[6000,2],[6003,2],[6006,2],[6063,1],[6280,1],[6327,1],[6329,1],[6420,1],[6437,1],[6452,1],[6529,2],[6598,1],[6673,1],[6675,2],[6868,2],[6940,2],[6964,1],[6977,1],[6979,1],[7006,2],[7106,1],[7164,2],[7248,2],[7388,2],[7437,3],[7441,2],[7462,1],[7472,1],[7474,1],[7566,1],[7639,2],[7642,3],[7646,2],[7657,1],[7683,2],[7762,1],[7804,1],[7818,1],[7820,2],[7923,2],[8012,2],[8097,2],[8238,2],[8344,2],[8354,2],[8361,1],[8363,2],[8366,2],[8382,1],[8394,2],[8432,1],[8439,2],[8632,2],[8635,1],[8657,2],[8730,2],[8738,1],[8740,1],[8756,1],[8777,2],[8849,2],[8941,1],[9001,1],[9028,1],[9030,2],[9132,1],[9154,1],[9166,1],[9222,2],[9279,1],[9333,2],[9446,1],[9500,2],[9606,2],[9623,1],[9656,1],[9658,1],[9660,2],[9688,1],[9729,1],[9740,1],[9757,1],[9764,1],[9788,1],[9807,1],[9832,2],[9856,1],[9891,2],[9911,1],[9937,1],[10104,1],[10144,1],[10180,1],[10237,1],[10271,1],[10384,1],[10417,1],[10522,1],[10524,1],[10582,1],[10646,1],[10706,1],[10758,1],[10833,1],[10871,1],[10975,2],[11032,1],[11043,1],[11083,1],[11102,1],[11286,1],[11333,1],[11335,1],[11426,1],[11577,1],[11618,1],[11633,2],[11675,1],[11687,2],[11722,1],[11748,2],[11807,1],[11839,2],[11976,2],[12048,2],[12072,1],[12085,1],[12087,1],[12114,2],[12214,1],[12272,2],[12356,2],[12496,2],[12545,3],[12581,1],[12595,1],[12597,1],[12670,1],[12672,2],[12729,3],[12752,2],[12831,1],[12873,1],[12887,1],[12889,2],[12992,2],[13081,2],[13166,2],[13307,2],[13413,2],[13423,2],[13430,1],[13432,2],[13435,2],[13451,1],[13463,2],[13501,1],[13508,2],[13588,1],[13590,1],[13717,2],[13720,2],[13723,2],[13814,2],[13894,2],[13901,1],[13903,2],[13906,2],[13922,1],[13943,2],[14015,2],[14107,1],[14167,1],[14194,1],[14196,2],[14298,1],[14320,1],[14332,1],[14388,2],[14445,1],[14499,2],[14612,1],[14666,2],[14772,2],[14789,1],[14822,1],[14824,1],[14873,1],[14910,1],[14918,1],[14925,1],[14949,1],[14968,1],[14993,1],[14995,3],[15020,1],[15052,3],[15075,1],[15242,1],[15282,1],[15318,1],[15375,1],[15409,1],[15522,1],[15555,1],[15660,1],[15662,1],[15720,1],[15784,1],[15836,1],[15890,1],[15974,1],[16099,2],[16102,2],[16105,2],[16162,1],[16379,1],[16426,1],[16428,1],[16519,1],[16536,1],[16551,1],[16628,2],[16697,1],[16772,1],[16774,2],[16924,2],[16996,2],[17020,1],[17033,1],[17035,1],[17062,2],[17162,1],[17220,2],[17304,2],[17444,2],[17493,3],[17497,2],[17518,1],[17528,1],[17530,1],[17622,1],[17695,2],[17698,3],[17702,2],[17713,1],[17739,2],[17818,1],[17860,1],[17874,1],[17876,2],[17979,2],[18068,2],[18153,2],[18294,2],[18400,2],[18410,2],[18417,1],[18419,2],[18422,2],[18438,1],[18450,2],[18488,1],[18495,2],[18688,2],[18691,1],[18713,2],[18786,2],[18794,1],[18796,1],[18812,1],[18833,2],[18905,2],[18997,1],[19057,1],[19084,1],[19086,2],[19188,1],[19210,1],[19222,1],[19278,2],[19335,1],[19389,2],[19502,1],[19556,2],[19662,2],[19679,1],[19712,1],[19714,1],[19716,2],[19744,1],[19785,1],[19796,1],[19813,1],[19820,1],[19844,1],[19863,1],[19888,2],[19912,1],[19947,2],[19967,1],[19993,1],[20160,1],[20200,1],[20236,1],[20293,1],[20327,1],[20440,1],[20473,1],[20578,1],[20580,1],[20638,1],[20702,1],[20762,1],[20814,1],[20889,1],[20927,1],[21031,2],[21088,1],[21099,1],[21139,1],[21158,1],[21342,1],[21389,1],[21391,1],[21482,1],[21633,1],[21674,1],[21689,2],[21731,1],[21743,2],[21778,1],[21804,2],[21863,1],[21895,2],[21968,2],[22040,2],[22064,1],[22077,1],[22079,1],[22106,2],[22206,1],[22264,2],[22348,2],[22488,2],[22537,3],[22541,2],[22562,1],[22572,1],[22574,1],[22666,1],[22739,2],[22742,3],[22746,2],[22757,1],[22784,2],[22863,1],[22905,1],[22919,1],[22921,2],[23024,2],[23113,2],[23198,2],[23339,2],[23445,2],[23455,2],[23462,1],[23464,2],[23467,2],[23483,1],[23495,2],[23533,1],[23540,2],[23733,2],[23736,1],[23758,2],[23831,2],[23839,1],[23841,1],[23858,1],[23879,2],[23951,2],[24043,1],[24103,1],[24130,1],[24132,2],[24234,1],[24256,1],[24268,1],[24324,2],[24381,1],[24435,2],[24548,1],[24602,2],[24708,2],[24725,1],[24758,1],[24760,1],[24762,2],[24790,1],[24831,1],[24842,1],[24859,1],[24866,1],[24890,1],[24909,1],[24934,2],[24958,1],[24993,2],[25013,1],[25040,1],[25207,1],[25247,1],[25283,1],[25340,1],[25374,1],[25487,1],[25520,1],[25625,1],[25627,1],[25685,1],[25749,1],[25809,1],[25861,1],[25936,1],[25974,1],[26078,2],[26135,1],[26146,1],[26186,1],[26205,1],[26390,1],[26437,1],[26439,1],[26530,1],[26681,1],[26723,1],[26738,2],[26780,1],[26792,2],[26827,1],[26853,2],[26912,1],[26944,2],[27438,1],[27485,1],[27487,1],[27504,2],[27507,1],[27538,1],[27550,1],[27561,1],[27572,1],[27574,1],[27584,2],[27587,2],[27590,1],[27611,1],[27635,1],[27637,1],[27639,1],[27641,1],[27643,2],[27657,1],[27668,1],[27679,1],[27681,1],[27691,2],[27694,2],[27697,1],[27718,1],[27741,1],[27743,1],[27745,1],[27747,1],[27749,2],[27762,1],[27773,1],[27784,1],[27786,1],[27796,2],[27799,2],[27802,1],[27823,1],[27850,1],[27852,1],[27854,1],[27856,1],[27858,2],[27875,1],[27886,1],[27897,1],[27899,1],[27909,2],[27912,2],[27915,1],[27936,1],[27958,1],[27960,1],[27962,1],[27964,1],[27966,2],[27978,1],[27988,2],[27991,1],[27993,2],[28008,1],[28023,1],[28035,1],[28068,1],[28070,1],[28087,1],[28089,1],[28091,2],[28105,1],[28138,1],[28140,1],[28157,1],[28159,1],[28161,2],[28174,1],[28207,1],[28209,1],[28226,1],[28228,1],[28230,2],[28247,1],[28280,1],[28282,1],[28299,1],[28301,1],[28303,2],[28315,1],[28348,1],[28350,1],[28367,1],[28369,1],[28371,1],[28373,1],[28375,1],[28377,1],[28379,1],[28381,1],[28494,1],[28525,1],[28537,1],[28548,1],[28559,1],[28561,1],[28571,2],[28574,2],[28577,1],[28598,1],[28622,1],[28624,1],[28626,1],[28628,1],[28630,1],[28632,2],[28647,1],[28662,1],[28674,1],[28707,1],[28709,1],[28726,1],[28728,1],[28730,1],[28732,1],[28734,1],[28736,1],[29119,2],[29191,2],[29215,1],[29228,1],[29230,1],[29257,2],[29357,1],[29415,2],[29499,2],[29639,2],[29688,3],[29692,2],[29713,1],[29723,1],[29725,1],[29817,1],[29890,2],[29893,3],[29897,2],[29908,1],[29934,2],[30013,1],[30055,1],[30069,1],[30071,2],[30174,2],[30263,2],[30348,2],[30489,2],[30595,2],[30605,2],[30612,1],[30614,2],[30617,2],[30633,1],[30645,2],[30683,1],[30690,2],[30883,2],[30886,1],[30908,2],[30981,2],[30989,1],[30991,1],[31007,1],[31028,2],[31100,2],[31192,1],[31252,1],[31279,1],[31281,2],[31383,1],[31405,1],[31417,1],[31473,2],[31530,1],[31584,2],[31697,1],[31751,2],[31857,2],[31874,1],[31907,1],[31909,1],[31911,2],[31939,1],[31980,1],[31991,1],[32008,1],[32015,1],[32039,1],[32058,1],[32083,2],[32107,1],[32142,2],[32162,1],[32188,1],[32355,1],[32395,1],[32431,1],[32488,1],[32522,1],[32635,1],[32668,1],[32773,1],[32775,1],[32833,1],[32897,1],[32957,1],[33009,1],[33084,1],[33122,1],[33226,2],[33283,1],[33294,1],[33334,1],[33353,1],[33537,1],[33584,1],[33586,1],[33677,1],[33828,1],[33869,1],[33884,2],[33926,1],[33938,2],[33973,1],[33999,2],[34058,1],[34090,2],[34163,2],[34235,2],[34259,1],[34272,1],[34274,1],[34301,2],[34401,1],[34459,2],[34543,2],[34683,2],[34732,3],[34736,2],[34757,1],[34767,1],[34769,1],[34861,1],[34934,2],[34937,3],[34941,2],[34952,1],[34978,2],[35057,1],[35099,1],[35113,1],[35115,2],[35218,2],[35307,2],[35392,2],[35533,2],[35639,2],[35649,2],[35656,1],[35658,2],[35661,2],[35677,1],[35689,2],[35727,1],[35734,2],[35927,2],[35930,1],[35952,2],[36025,2],[36033,1],[36035,1],[36051,1],[36072,2],[36144,2],[36236,1],[36296,1],[36323,1],[36325,2],[36427,1],[36449,1],[36461,1],[36517,2],[36574,1],[36628,2],[36741,1],[36795,2],[36901,2],[36918,1],[36951,1],[36953,1],[36955,2],[36983,1],[37024,1],[37035,1],[37052,1],[37059,1],[37083,1],[37102,1],[37127,2],[37151,1],[37186,2],[37206,1],[37232,1],[37399,1],[37439,1],[37475,1],[37532,1],[37566,1],[37679,1],[37712,1],[37817,1],[37819,1],[37877,1],[37941,1],[38001,1],[38053,1],[38128,1],[38166,1],[38270,2],[38327,1],[38338,1],[38378,1],[38397,1],[38581,1],[38628,1],[38630,1],[38721,1],[38872,1],[38913,1],[38928,2],[38970,1],[38982,2],[39017,1],[39043,2],[39102,1],[39134,2]]},"788":{"position":[[421,1],[468,1],[470,1],[501,1],[513,1],[523,2],[526,1],[528,2],[543,1],[558,1],[570,1],[603,1],[605,1],[622,2],[625,1],[664,1],[666,1],[668,1],[670,1],[672,1],[674,1],[676,1],[678,1],[1048,1],[1095,1],[1097,1],[1114,2],[1117,1],[1148,1],[1160,1],[1171,1],[1182,1],[1184,1],[1194,2],[1197,2],[1200,1],[1221,1],[1245,1],[1247,1],[1249,1],[1251,1],[1253,2],[1267,1],[1278,1],[1289,1],[1291,1],[1301,2],[1304,2],[1307,1],[1328,1],[1351,1],[1353,1],[1355,1],[1357,1],[1359,2],[1372,1],[1383,1],[1394,1],[1396,1],[1406,2],[1409,2],[1412,1],[1433,1],[1460,1],[1462,1],[1464,1],[1466,1],[1468,2],[1485,1],[1496,1],[1507,1],[1509,1],[1519,2],[1522,2],[1525,1],[1546,1],[1568,1],[1570,1],[1572,1],[1574,1],[1576,2],[1588,1],[1598,2],[1601,1],[1603,2],[1618,1],[1633,1],[1645,1],[1678,1],[1680,1],[1697,2],[1700,1],[1739,1],[1741,1],[1743,2],[1757,1],[1790,1],[1792,1],[1809,2],[1812,1],[1851,1],[1853,1],[1855,2],[1868,1],[1901,1],[1903,1],[1920,2],[1923,1],[1962,1],[1964,1],[1966,2],[1983,1],[2016,1],[2018,1],[2035,2],[2038,1],[2077,1],[2079,1],[2081,2],[2093,1],[2126,1],[2128,1],[2145,2],[2148,1],[2187,1],[2189,1],[2191,1],[2193,1],[2195,1],[2197,1],[2199,1],[2201,1],[2396,2],[2468,2],[2492,1],[2505,1],[2507,1],[2534,2],[2634,1],[2692,2],[2776,2],[2916,2],[2965,3],[3001,1],[3015,1],[3017,2],[3074,1],[3155,2],[3225,1],[3319,1],[3321,2],[3378,3],[3401,2],[3480,1],[3522,1],[3536,1],[3538,2],[3641,2],[3730,2],[3815,2],[3956,2],[4062,2],[4072,2],[4079,1],[4081,2],[4084,2],[4100,1],[4112,2],[4150,1],[4157,2],[4237,1],[4239,1],[4241,2],[4430,2],[4433,1],[4435,2],[4651,2],[4654,2],[4657,2],[4748,2],[4828,2],[4835,1],[4837,2],[4840,2],[4856,1],[4877,2],[4949,2],[5041,1],[5101,1],[5128,1],[5130,2],[5232,1],[5254,1],[5266,1],[5322,2],[5379,1],[5433,2],[5546,1],[5600,2],[5706,2],[5723,1],[5756,1],[5758,1],[5807,1],[5844,1],[5846,2],[5909,1],[5916,1],[5943,1],[5962,1],[5991,2],[5994,2],[6070,1],[6077,1],[6123,1],[6141,1],[6166,1],[6168,3],[6193,1],[6225,3],[6248,1],[6415,1],[6455,1],[6491,1],[6548,1],[6582,1],[6695,1],[6728,1],[6833,1],[6835,1],[6893,1],[6957,1],[7009,1],[7063,1],[7147,1],[7204,1],[7335,2],[7348,1],[7506,2],[7509,2],[7512,2],[7569,1],[7786,1],[7833,1],[7835,1],[7926,1],[7943,1],[7958,1],[8136,2],[8205,2],[8262,1],[8344,2],[8347,2],[8417,1],[8513,1],[8515,2],[8863,2],[8935,2],[8959,1],[8972,1],[8974,1],[9001,2],[9101,1],[9159,2],[9243,2],[9383,2],[9432,3],[9436,2],[9457,1],[9467,1],[9469,1],[9561,1],[9636,2],[9639,3],[9643,2],[9654,1],[9680,2],[9759,1],[9801,1],[9815,1],[9817,2],[9920,2],[10009,2],[10094,2],[10235,2],[10341,2],[10351,2],[10358,1],[10360,2],[10363,2],[10379,1],[10391,2],[10429,1],[10436,2],[10631,2],[10634,1],[10656,2],[10729,2],[10737,1],[10739,1],[10755,1],[10776,2],[10848,2],[10940,1],[11000,1],[11027,1],[11029,2],[11131,1],[11153,1],[11165,1],[11221,2],[11278,1],[11332,2],[11445,1],[11499,2],[11605,2],[11622,1],[11655,1],[11657,1],[11659,2],[11687,1],[11728,1],[11739,1],[11756,1],[11763,1],[11790,1],[11808,1],[11833,2],[11857,1],[11892,2],[11912,1],[11938,1],[12105,1],[12145,1],[12181,1],[12238,1],[12272,1],[12385,1],[12418,1],[12523,1],[12525,1],[12583,1],[12647,1],[12707,1],[12759,1],[12834,1],[12872,1],[12978,2],[13035,1],[13046,1],[13086,1],[13105,1],[13289,1],[13336,1],[13338,1],[13429,1],[13582,1],[13623,1],[13641,2],[13686,1],[13697,2],[13731,1],[13757,2],[13816,1],[13848,2]]},"790":{"position":[[347,2],[419,2],[443,1],[456,1],[458,1],[485,2],[585,1],[643,2],[727,2],[867,2],[916,3],[952,1],[966,1],[968,1],[1065,1],[1067,2],[1124,3],[1147,2],[1226,1],[1268,1],[1282,1],[1284,2],[1387,2],[1476,2],[1561,2],[1702,2],[1808,2],[1818,2],[1825,1],[1827,2],[1830,2],[1846,1],[1858,2],[1896,1],[1903,2],[1983,1],[1985,1],[2136,2],[2139,2],[2142,2],[2233,2],[2313,2],[2320,1],[2322,2],[2325,2],[2341,1],[2362,2],[2434,2],[2526,1],[2586,1],[2613,1],[2615,2],[2717,1],[2739,1],[2751,1],[2807,2],[2864,1],[2918,2],[3031,1],[3085,2],[3191,2],[3208,1],[3241,1],[3243,1],[3292,1],[3329,1],[3337,1],[3344,1],[3388,1],[3407,1],[3436,1],[3438,3],[3463,1],[3495,3],[3518,1],[3685,1],[3725,1],[3761,1],[3818,1],[3852,1],[3965,1],[3998,1],[4103,1],[4105,1],[4163,1],[4227,1],[4279,1],[4333,1],[4417,1],[4566,2],[4569,2],[4572,2],[4629,1],[4846,1],[4893,1],[4895,1],[4986,1],[5003,1],[5018,1],[5119,2],[5188,1],[5287,1],[5289,2],[5871,2],[5943,2],[5967,1],[5980,1],[5982,1],[6009,2],[6109,1],[6167,2],[6251,2],[6391,2],[6440,3],[6476,1],[6490,1],[6492,2],[6545,1],[6621,1],[6623,2],[6680,3],[6703,2],[6782,1],[6824,1],[6838,1],[6840,2],[6943,2],[7032,2],[7117,2],[7258,2],[7364,2],[7374,2],[7381,1],[7383,2],[7386,2],[7402,1],[7414,2],[7452,1],[7459,2],[7539,1],[7541,1],[7543,2],[7724,2],[7727,2],[7730,2],[7821,2],[7901,2],[7908,1],[7910,2],[7913,2],[7929,1],[7950,2],[8022,2],[8114,1],[8174,1],[8201,1],[8203,2],[8305,1],[8327,1],[8339,1],[8395,2],[8452,1],[8506,2],[8619,1],[8673,2],[8779,2],[8796,1],[8829,1],[8831,1],[8880,1],[8917,1],[8919,2],[8978,1],[8985,1],[9010,1],[9029,1],[9056,1],[9058,3],[9083,1],[9115,3],[9138,1],[9305,1],[9345,1],[9381,1],[9438,1],[9472,1],[9585,1],[9618,1],[9723,1],[9725,1],[9783,1],[9847,1],[9899,1],[9953,1],[10037,1],[10094,1],[10217,2],[10220,2],[10223,2],[10280,1],[10497,1],[10544,1],[10546,1],[10637,1],[10654,1],[10669,1],[10749,2],[10818,2],[10871,1],[10949,1],[10951,2],[11066,2],[11138,2],[11162,1],[11175,1],[11177,1],[11204,2],[11304,1],[11362,2],[11446,2],[11586,2],[11635,3],[11639,2],[11660,1],[11670,1],[11672,1],[11764,1],[11837,2],[11840,3],[11844,2],[11855,1],[11881,2],[11960,1],[12002,1],[12016,1],[12018,2],[12121,2],[12210,2],[12295,2],[12436,2],[12542,2],[12552,2],[12559,1],[12561,2],[12564,2],[12580,1],[12592,2],[12630,1],[12637,2],[12830,2],[12833,1],[12855,2],[12928,2],[12936,1],[12938,1],[12954,1],[12975,2],[13047,2],[13139,1],[13199,1],[13226,1],[13228,2],[13330,1],[13352,1],[13364,1],[13420,2],[13477,1],[13531,2],[13644,1],[13698,2],[13804,2],[13821,1],[13854,1],[13856,1],[13858,2],[13886,1],[13927,1],[13938,1],[13955,1],[13962,1],[13987,1],[14005,1],[14030,2],[14054,1],[14089,2],[14109,1],[14135,1],[14302,1],[14342,1],[14378,1],[14435,1],[14469,1],[14582,1],[14615,1],[14720,1],[14722,1],[14780,1],[14844,1],[14904,1],[14956,1],[15031,1],[15069,1],[15173,2],[15230,1],[15241,1],[15281,1],[15300,1],[15484,1],[15531,1],[15533,1],[15624,1],[15775,1],[15816,1],[15832,2],[15875,1],[15886,2],[15920,1],[15946,2],[16005,1],[16037,2]]},"792":{"position":[[965,1],[1012,1],[1014,1],[1053,1],[1065,1],[1075,2],[1078,1],[1080,2],[1095,1],[1110,1],[1122,1],[1155,1],[1157,1],[1174,1],[1176,1],[1178,1],[1180,1],[1182,1],[1184,1],[1186,1],[1188,1],[1527,1],[1574,1],[1576,1],[1607,1],[1619,1],[1630,1],[1641,1],[1643,1],[1653,2],[1656,2],[1659,1],[1680,1],[1704,1],[1706,1],[1708,1],[1710,1],[1712,2],[1726,1],[1737,1],[1748,1],[1750,1],[1760,2],[1763,2],[1766,1],[1787,1],[1810,1],[1812,1],[1814,1],[1816,1],[1818,2],[1831,1],[1842,1],[1853,1],[1855,1],[1865,2],[1868,2],[1871,1],[1892,1],[1919,1],[1921,1],[1923,1],[1925,1],[1927,2],[1944,1],[1955,1],[1966,1],[1968,1],[1978,2],[1981,2],[1984,1],[2005,1],[2027,1],[2029,1],[2031,1],[2033,1],[2035,2],[2047,1],[2057,2],[2060,2],[2072,1],[2082,2],[2085,1],[2087,2],[2102,1],[2117,1],[2129,1],[2162,1],[2164,1],[2181,2],[2184,1],[2223,1],[2225,1],[2227,2],[2241,1],[2274,1],[2276,1],[2293,2],[2296,1],[2335,1],[2337,1],[2339,2],[2352,1],[2385,1],[2387,1],[2404,2],[2407,1],[2446,1],[2448,1],[2450,2],[2467,1],[2500,1],[2502,1],[2519,2],[2522,1],[2561,1],[2563,1],[2565,2],[2577,1],[2610,1],[2612,1],[2629,2],[2632,1],[2671,1],[2673,1],[2675,2],[2687,1],[2720,1],[2722,1],[2747,1],[2749,1],[2751,1],[2753,1],[2755,1],[2757,1],[2759,1],[2761,1],[2990,2],[3062,2],[3086,1],[3099,1],[3101,1],[3128,2],[3228,1],[3286,2],[3370,2],[3510,2],[3559,3],[3595,1],[3609,1],[3611,1],[3685,1],[3768,1],[3770,2],[3827,3],[3850,2],[3929,1],[3971,1],[3985,1],[3987,2],[4090,2],[4179,2],[4264,2],[4405,2],[4511,2],[4521,2],[4528,1],[4530,2],[4533,2],[4549,1],[4561,2],[4599,1],[4606,2],[4686,1],[4688,1],[4815,2],[4818,1],[4955,2],[4958,2],[4961,2],[5052,2],[5132,2],[5139,1],[5141,2],[5144,2],[5160,1],[5181,2],[5253,2],[5345,1],[5405,1],[5432,1],[5434,2],[5536,1],[5558,1],[5570,1],[5626,2],[5683,1],[5737,2],[5850,1],[5904,2],[6010,2],[6027,1],[6060,1],[6062,1],[6111,1],[6148,1],[6156,1],[6163,1],[6187,1],[6206,1],[6231,2],[6240,1],[6247,1],[6282,1],[6300,1],[6325,1],[6327,3],[6352,1],[6384,3],[6407,1],[6574,1],[6614,1],[6650,1],[6707,1],[6741,1],[6854,1],[6887,1],[6992,1],[6994,1],[7052,1],[7116,1],[7168,1],[7222,1],[7306,1],[7431,2],[7522,2],[7525,2],[7528,2],[7585,1],[7802,1],[7849,1],[7851,1],[7942,1],[7959,1],[7974,1],[8134,2],[8203,1],[8278,2],[8281,1],[8366,1],[8368,2],[9045,2],[9117,2],[9141,1],[9154,1],[9156,1],[9183,2],[9283,1],[9341,2],[9425,2],[9565,2],[9614,3],[9618,2],[9639,1],[9649,1],[9651,1],[9743,1],[9815,2],[9818,3],[9822,2],[9833,1],[9864,2],[9943,1],[9985,1],[9999,1],[10001,2],[10104,2],[10193,2],[10278,2],[10419,2],[10525,2],[10535,2],[10542,1],[10544,2],[10547,2],[10563,1],[10575,2],[10613,1],[10620,2],[10812,2],[10815,1],[10837,2],[10910,2],[10918,1],[10920,1],[10941,1],[10962,2],[11034,2],[11126,1],[11186,1],[11213,1],[11215,2],[11317,1],[11339,1],[11351,1],[11407,2],[11464,1],[11518,2],[11631,1],[11685,2],[11791,2],[11808,1],[11841,1],[11843,1],[11845,2],[11873,1],[11914,1],[11925,1],[11942,1],[11949,1],[11973,1],[11991,1],[12016,2],[12040,1],[12075,2],[12095,1],[12126,1],[12293,1],[12333,1],[12369,1],[12426,1],[12460,1],[12573,1],[12606,1],[12711,1],[12713,1],[12771,1],[12835,1],[12895,1],[12947,1],[13022,1],[13060,1],[13163,2],[13220,1],[13231,1],[13271,1],[13290,1],[13479,1],[13526,1],[13528,1],[13619,1],[13769,1],[13815,1],[13830,2],[13872,1],[13883,2],[13917,1],[13943,2],[14002,1],[14034,2],[14217,1],[14239,1],[14241,1],[14252,1],[14263,1],[14274,1],[14276,1],[14286,2],[14289,2],[14292,1],[14312,1],[14326,1],[14348,2],[14370,1],[14397,1],[14399,1],[14401,1],[14403,1],[14405,1],[14407,1],[14409,1],[14411,1],[14413,1],[14892,2],[14982,2],[15092,1],[15150,3],[15154,1],[15212,3],[15597,2],[15669,2],[15693,1],[15706,1],[15708,1],[15735,2],[15835,1],[15893,2],[15977,2],[16117,2],[16166,3],[16202,1],[16216,1],[16218,1],[16313,1],[16315,2],[16372,3],[16395,2],[16474,1],[16516,1],[16530,1],[16532,2],[16635,2],[16724,2],[16809,2],[16950,2],[17056,2],[17066,2],[17073,1],[17075,2],[17078,2],[17094,1],[17106,2],[17144,1],[17151,2],[17231,1],[17233,1],[17382,2],[17385,2],[17388,2],[17479,2],[17559,2],[17566,1],[17568,2],[17571,2],[17587,1],[17608,2],[17680,2],[17772,1],[17832,1],[17859,1],[17861,2],[17963,1],[17985,1],[17997,1],[18053,2],[18110,1],[18164,2],[18277,1],[18331,2],[18437,2],[18454,1],[18487,1],[18489,1],[18538,1],[18575,1],[18583,1],[18590,1],[18632,1],[18655,1],[18680,1],[18682,3],[18707,1],[18739,3],[18762,1],[18929,1],[18969,1],[19005,1],[19062,1],[19096,1],[19209,1],[19242,1],[19347,1],[19349,1],[19407,1],[19471,1],[19523,1],[19577,1],[19661,1],[19808,2],[19811,2],[19814,2],[19871,1],[20088,1],[20135,1],[20137,1],[20228,1],[20245,1],[20260,1],[20359,2],[20428,1],[20525,1],[20527,2],[21213,1],[21260,1],[21262,1],[21279,2],[21282,1],[21313,1],[21324,1],[21335,1],[21346,1],[21348,1],[21358,2],[21361,2],[21364,1],[21384,1],[21405,1],[21427,2],[21442,1],[21464,1],[21466,1],[21468,1],[21470,1],[21472,1],[21474,2],[21491,1],[21502,1],[21513,1],[21515,1],[21525,2],[21528,2],[21531,1],[21552,1],[21574,1],[21576,1],[21578,1],[21580,1],[21582,2],[21595,1],[21606,1],[21617,1],[21619,1],[21629,2],[21632,2],[21635,1],[21656,1],[21683,1],[21685,2],[21688,1],[21708,1],[21729,1],[21752,2],[21767,1],[21789,1],[21791,1],[21793,1],[21795,1],[21797,1],[21799,2],[21813,1],[21824,1],[21835,1],[21837,1],[21847,2],[21850,2],[21853,1],[21874,1],[21897,1],[21899,1],[21901,1],[21903,1],[21905,2],[21918,1],[21929,1],[21940,1],[21942,1],[21952,2],[21955,2],[21958,1],[21979,1],[22003,1],[22005,2],[22008,1],[22028,1],[22049,1],[22072,2],[22087,1],[22109,1],[22111,1],[22113,1],[22115,1],[22117,1],[22119,2],[22131,1],[22141,2],[22144,1],[22146,2],[22161,1],[22176,1],[22188,1],[22221,1],[22223,1],[22240,2],[22243,1],[22282,2],[22285,1],[22332,1],[22334,1],[22336,2],[22350,1],[22383,1],[22385,1],[22402,2],[22405,1],[22444,2],[22447,1],[22494,1],[22496,1],[22498,2],[22511,1],[22544,1],[22546,1],[22563,2],[22566,1],[22605,2],[22608,1],[22655,1],[22657,1],[22659,2],[22676,1],[22709,1],[22711,1],[22728,2],[22731,1],[22770,2],[22773,1],[22820,1],[22822,1],[22824,2],[22836,1],[22869,1],[22871,1],[22888,2],[22891,1],[22930,2],[22933,1],[22980,1],[22982,1],[22984,2],[22996,1],[23029,1],[23031,1],[23056,1],[23058,1],[23060,1],[23062,1],[23064,1],[23066,2],[23069,1],[23108,1],[23119,1],[23129,2],[23132,2],[23149,1],[23159,2],[23162,1],[23164,2],[23179,1],[23194,1],[23205,1],[23238,1],[23240,1],[23265,1],[23267,1],[23269,2],[23286,1],[23319,1],[23321,1],[23338,2],[23341,1],[23380,2],[23383,1],[23430,1],[23432,1],[23434,1],[23436,1],[23438,1],[23440,1],[23442,1],[23444,1]]},"798":{"position":[[428,1],[610,1],[858,1],[869,1]]},"809":{"position":[[517,1],[564,1],[566,1],[583,2],[586,1],[621,1],[632,1],[642,2],[645,2],[658,1],[668,2],[671,2],[687,1],[697,2],[700,2],[713,1],[723,2],[726,1],[728,2],[743,1],[758,1],[769,1],[802,1],[804,1],[821,1],[823,1],[825,2],[838,1],[871,1],[873,1],[890,1],[892,1],[894,2],[910,1],[943,1],[945,1],[962,1],[964,1],[966,2],[979,1],[1012,1],[1014,1],[1031,1],[1033,1],[1035,1],[1037,1],[1039,1],[1041,1],[1043,1],[1045,1],[1271,1],[1306,1],[1318,1],[1328,2],[1331,1],[1333,2],[1348,1],[1363,1],[1375,1],[1408,1],[1410,1],[1427,1],[1429,1],[1431,1],[1433,1],[1435,1],[1437,1],[1874,2],[1946,2],[1970,1],[1983,1],[1985,1],[2012,2],[2112,1],[2170,2],[2254,2],[2394,2],[2443,3],[2479,1],[2493,1],[2495,1],[2571,1],[2573,2],[2630,3],[2653,2],[2732,1],[2774,1],[2788,1],[2790,2],[2893,2],[2982,2],[3067,2],[3208,2],[3314,2],[3324,2],[3331,1],[3333,2],[3336,2],[3352,1],[3364,2],[3402,1],[3409,2],[3489,1],[3491,1],[3621,2],[3624,2],[3627,2],[3718,2],[3798,2],[3805,1],[3807,2],[3810,2],[3826,1],[3847,2],[3919,2],[4011,1],[4071,1],[4098,1],[4100,2],[4202,1],[4224,1],[4236,1],[4292,2],[4349,1],[4403,2],[4516,1],[4570,2],[4676,2],[4693,1],[4726,1],[4728,1],[4777,1],[4814,1],[4822,1],[4829,1],[4853,1],[4875,1],[4900,1],[4902,3],[4927,1],[4959,3],[4982,1],[5149,1],[5189,1],[5225,1],[5282,1],[5316,1],[5429,1],[5462,1],[5567,1],[5569,1],[5627,1],[5691,1],[5743,1],[5797,1],[5881,1],[6009,2],[6012,2],[6015,2],[6072,1],[6289,1],[6336,1],[6338,1],[6429,1],[6446,1],[6461,1],[6541,2],[6610,1],[6688,1],[6690,2],[6886,2],[6958,2],[6982,1],[6995,1],[6997,1],[7024,2],[7124,1],[7182,2],[7266,2],[7406,2],[7455,3],[7459,2],[7480,1],[7490,1],[7492,1],[7584,1],[7660,2],[7663,3],[7667,2],[7678,1],[7704,2],[7783,1],[7825,1],[7839,1],[7841,2],[7944,2],[8033,2],[8118,2],[8259,2],[8365,2],[8375,2],[8382,1],[8384,2],[8387,2],[8403,1],[8415,2],[8453,1],[8460,2],[8656,2],[8659,1],[8681,2],[8754,2],[8762,1],[8764,1],[8780,1],[8801,2],[8873,2],[8965,1],[9025,1],[9052,1],[9054,2],[9156,1],[9178,1],[9190,1],[9246,2],[9303,1],[9357,2],[9470,1],[9524,2],[9630,2],[9647,1],[9680,1],[9682,1],[9684,2],[9712,1],[9753,1],[9764,1],[9781,1],[9788,1],[9812,1],[9834,1],[9859,2],[9883,1],[9918,2],[9938,1],[9964,1],[10131,1],[10171,1],[10207,1],[10264,1],[10298,1],[10411,1],[10444,1],[10549,1],[10551,1],[10609,1],[10673,1],[10733,1],[10785,1],[10860,1],[10898,1],[11005,2],[11062,1],[11073,1],[11113,1],[11132,1],[11316,1],[11363,1],[11365,1],[11456,1],[11610,1],[11651,1],[11666,2],[11708,1],[11723,2],[11761,1],[11787,2],[11846,1],[11878,2],[12013,2],[12085,2],[12109,1],[12122,1],[12124,1],[12151,2],[12251,1],[12309,2],[12393,2],[12533,2],[12582,3],[12618,1],[12632,1],[12634,1],[12706,1],[12708,2],[12765,3],[12788,2],[12867,1],[12909,1],[12923,1],[12925,2],[13028,2],[13117,2],[13202,2],[13343,2],[13449,2],[13459,2],[13466,1],[13468,2],[13471,2],[13487,1],[13499,2],[13537,1],[13544,2],[13624,1],[13626,1],[13752,2],[13755,2],[13758,2],[13849,2],[13929,2],[13936,1],[13938,2],[13941,2],[13957,1],[13978,2],[14050,2],[14142,1],[14202,1],[14229,1],[14231,2],[14333,1],[14355,1],[14367,1],[14423,2],[14480,1],[14534,2],[14647,1],[14701,2],[14807,2],[14824,1],[14857,1],[14859,1],[14908,1],[14945,1],[14953,1],[14960,1],[14984,1],[15002,1],[15027,1],[15029,3],[15054,1],[15086,3],[15109,1],[15276,1],[15316,1],[15352,1],[15409,1],[15443,1],[15556,1],[15589,1],[15694,1],[15696,1],[15754,1],[15818,1],[15870,1],[15924,1],[16008,1],[16132,2],[16135,2],[16138,2],[16195,1],[16412,1],[16459,1],[16461,1],[16552,1],[16569,1],[16584,1],[16660,2],[16729,1],[16803,1],[16805,2],[16955,2],[17027,2],[17051,1],[17064,1],[17066,1],[17093,2],[17193,1],[17251,2],[17335,2],[17475,2],[17524,3],[17528,2],[17549,1],[17559,1],[17561,1],[17653,1],[17725,2],[17728,3],[17732,2],[17743,1],[17769,2],[17848,1],[17890,1],[17904,1],[17906,2],[18009,2],[18098,2],[18183,2],[18324,2],[18430,2],[18440,2],[18447,1],[18449,2],[18452,2],[18468,1],[18480,2],[18518,1],[18525,2],[18717,2],[18720,1],[18742,2],[18815,2],[18823,1],[18825,1],[18841,1],[18862,2],[18934,2],[19026,1],[19086,1],[19113,1],[19115,2],[19217,1],[19239,1],[19251,1],[19307,2],[19364,1],[19418,2],[19531,1],[19585,2],[19691,2],[19708,1],[19741,1],[19743,1],[19745,2],[19773,1],[19814,1],[19825,1],[19842,1],[19849,1],[19873,1],[19891,1],[19916,2],[19940,1],[19975,2],[19995,1],[20021,1],[20188,1],[20228,1],[20264,1],[20321,1],[20355,1],[20468,1],[20501,1],[20606,1],[20608,1],[20666,1],[20730,1],[20790,1],[20842,1],[20917,1],[20955,1],[21058,2],[21115,1],[21126,1],[21166,1],[21185,1],[21369,1],[21416,1],[21418,1],[21509,1],[21659,1],[21700,1],[21715,2],[21757,1],[21768,2],[21802,1],[21828,2],[21887,1],[21919,2],[21992,2],[22064,2],[22088,1],[22101,1],[22103,1],[22130,2],[22230,1],[22288,2],[22372,2],[22512,2],[22561,3],[22565,2],[22586,1],[22596,1],[22598,1],[22690,1],[22763,2],[22766,3],[22770,2],[22781,1],[22808,2],[22887,1],[22929,1],[22943,1],[22945,2],[23048,2],[23137,2],[23222,2],[23363,2],[23469,2],[23479,2],[23486,1],[23488,2],[23491,2],[23507,1],[23519,2],[23557,1],[23564,2],[23757,2],[23760,1],[23782,2],[23855,2],[23863,1],[23865,1],[23882,1],[23903,2],[23975,2],[24067,1],[24127,1],[24154,1],[24156,2],[24258,1],[24280,1],[24292,1],[24348,2],[24405,1],[24459,2],[24572,1],[24626,2],[24732,2],[24749,1],[24782,1],[24784,1],[24786,2],[24814,1],[24855,1],[24866,1],[24883,1],[24890,1],[24914,1],[24933,1],[24958,2],[24982,1],[25017,2],[25037,1],[25064,1],[25231,1],[25271,1],[25307,1],[25364,1],[25398,1],[25511,1],[25544,1],[25649,1],[25651,1],[25709,1],[25773,1],[25833,1],[25885,1],[25960,1],[25998,1],[26102,2],[26159,1],[26170,1],[26210,1],[26229,1],[26414,1],[26461,1],[26463,1],[26554,1],[26705,1],[26747,1],[26762,2],[26804,1],[26816,2],[26851,1],[26877,2],[26936,1],[26968,2],[27438,1],[27485,1],[27487,1],[27504,2],[27507,1],[27542,1],[27553,1],[27563,2],[27566,2],[27579,1],[27590,1],[27601,1],[27603,1],[27613,2],[27616,2],[27619,1],[27640,1],[27662,1],[27664,1],[27666,1],[27668,1],[27670,2],[27686,1],[27697,1],[27708,1],[27710,1],[27720,2],[27723,2],[27726,1],[27747,1],[27770,1],[27772,1],[27774,1],[27776,1],[27778,2],[27791,1],[27802,1],[27813,1],[27815,1],[27825,2],[27828,2],[27831,1],[27852,1],[27878,1],[27880,1],[27882,1],[27884,1],[27886,1],[27888,2],[27903,1],[27918,1],[27929,1],[27962,1],[27964,1],[27981,1],[27983,1],[27985,2],[27998,1],[28031,1],[28033,1],[28050,1],[28052,1],[28054,2],[28070,1],[28103,1],[28105,1],[28122,1],[28124,1],[28126,2],[28139,1],[28172,1],[28174,1],[28191,1],[28193,1],[28195,1],[28197,1],[28199,1],[28201,1],[28203,1],[28205,1],[28631,2],[28703,2],[28727,1],[28740,1],[28742,1],[28769,2],[28869,1],[28927,2],[29011,2],[29151,2],[29200,3],[29204,2],[29225,1],[29235,1],[29237,1],[29329,1],[29401,2],[29404,3],[29408,2],[29419,1],[29445,2],[29524,1],[29566,1],[29580,1],[29582,2],[29685,2],[29774,2],[29859,2],[30000,2],[30106,2],[30116,2],[30123,1],[30125,2],[30128,2],[30144,1],[30156,2],[30194,1],[30201,2],[30393,2],[30396,1],[30418,2],[30491,2],[30499,1],[30501,1],[30517,1],[30538,2],[30610,2],[30702,1],[30762,1],[30789,1],[30791,2],[30893,1],[30915,1],[30927,1],[30983,2],[31040,1],[31094,2],[31207,1],[31261,2],[31367,2],[31384,1],[31417,1],[31419,1],[31421,2],[31449,1],[31490,1],[31501,1],[31518,1],[31525,1],[31549,1],[31567,1],[31592,2],[31616,1],[31651,2],[31671,1],[31697,1],[31864,1],[31904,1],[31940,1],[31997,1],[32031,1],[32144,1],[32177,1],[32282,1],[32284,1],[32342,1],[32406,1],[32466,1],[32518,1],[32593,1],[32631,1],[32734,2],[32791,1],[32802,1],[32842,1],[32861,1],[33045,1],[33092,1],[33094,1],[33185,1],[33335,1],[33376,1],[33391,2],[33433,1],[33444,2],[33478,1],[33504,2],[33563,1],[33595,2],[33668,2],[33740,2],[33764,1],[33777,1],[33779,1],[33806,2],[33906,1],[33964,2],[34048,2],[34188,2],[34237,3],[34241,2],[34262,1],[34272,1],[34274,1],[34366,1],[34439,2],[34442,3],[34446,2],[34457,1],[34483,2],[34562,1],[34604,1],[34618,1],[34620,2],[34723,2],[34812,2],[34897,2],[35038,2],[35144,2],[35154,2],[35161,1],[35163,2],[35166,2],[35182,1],[35194,2],[35232,1],[35239,2],[35432,2],[35435,1],[35457,2],[35530,2],[35538,1],[35540,1],[35556,1],[35577,2],[35649,2],[35741,1],[35801,1],[35828,1],[35830,2],[35932,1],[35954,1],[35966,1],[36022,2],[36079,1],[36133,2],[36246,1],[36300,2],[36406,2],[36423,1],[36456,1],[36458,1],[36460,2],[36488,1],[36529,1],[36540,1],[36557,1],[36564,1],[36588,1],[36607,1],[36632,2],[36656,1],[36691,2],[36711,1],[36737,1],[36904,1],[36944,1],[36980,1],[37037,1],[37071,1],[37184,1],[37217,1],[37322,1],[37324,1],[37382,1],[37446,1],[37506,1],[37558,1],[37633,1],[37671,1],[37775,2],[37832,1],[37843,1],[37883,1],[37902,1],[38086,1],[38133,1],[38135,1],[38226,1],[38377,1],[38418,1],[38433,2],[38475,1],[38487,2],[38522,1],[38548,2],[38607,1],[38639,2]]},"811":{"position":[[680,1],[727,1],[729,1],[746,2],[749,1],[784,1],[795,1],[805,2],[808,2],[821,1],[832,1],[843,1],[845,1],[855,2],[858,2],[861,1],[882,1],[904,1],[906,1],[908,1],[910,1],[912,2],[928,1],[939,1],[950,1],[952,1],[962,2],[965,2],[968,1],[989,1],[1012,1],[1014,1],[1016,1],[1018,1],[1020,2],[1033,1],[1044,1],[1055,1],[1057,1],[1067,2],[1070,2],[1073,1],[1094,1],[1120,1],[1122,1],[1124,1],[1126,1],[1128,1],[1130,2],[1145,1],[1160,1],[1171,1],[1204,1],[1206,1],[1223,2],[1226,1],[1267,1],[1269,1],[1271,2],[1284,1],[1317,1],[1319,1],[1336,2],[1339,1],[1380,1],[1382,1],[1384,2],[1400,1],[1433,1],[1435,1],[1452,2],[1455,1],[1496,1],[1498,1],[1500,2],[1513,1],[1546,1],[1548,1],[1565,2],[1568,1],[1609,1],[1611,1],[1613,1],[1615,1],[1617,1],[1619,2],[1622,1],[1655,1],[1667,1],[1677,2],[1680,1],[1682,2],[1697,1],[1712,1],[1724,1],[1757,1],[1759,1],[1776,1],[1778,1],[1780,1],[1782,1],[1784,1],[1786,1],[1788,1],[1790,1],[2153,2],[2225,2],[2249,1],[2262,1],[2264,1],[2291,2],[2391,1],[2449,2],[2533,2],[2673,2],[2722,3],[2758,1],[2772,1],[2774,2],[2829,1],[2893,1],[2957,1],[3024,2],[3086,1],[3167,1],[3169,2],[3226,3],[3249,2],[3328,1],[3370,1],[3384,1],[3386,2],[3489,2],[3578,2],[3663,2],[3804,2],[3910,2],[3920,2],[3927,1],[3929,2],[3932,2],[3948,1],[3960,2],[3998,1],[4005,2],[4085,1],[4087,1],[4089,2],[4259,2],[4262,1],[4379,2],[4382,1],[4502,2],[4505,1],[4507,2],[4702,2],[4705,2],[4708,2],[4799,2],[4879,2],[4886,1],[4888,2],[4891,2],[4907,1],[4928,2],[5000,2],[5092,1],[5152,1],[5179,1],[5181,2],[5283,1],[5305,1],[5317,1],[5373,2],[5430,1],[5484,2],[5597,1],[5651,2],[5757,2],[5774,1],[5807,1],[5809,1],[5858,1],[5895,1],[5897,2],[5958,1],[5965,1],[5989,1],[6008,1],[6023,2],[6032,1],[6039,1],[6063,1],[6082,1],[6097,2],[6106,1],[6113,1],[6140,1],[6159,1],[6174,2],[6177,2],[6245,1],[6252,1],[6284,1],[6303,1],[6328,1],[6330,3],[6355,1],[6387,3],[6410,1],[6577,1],[6617,1],[6653,1],[6710,1],[6744,1],[6857,1],[6890,1],[6995,1],[6997,1],[7055,1],[7119,1],[7171,1],[7225,1],[7309,1],[7366,1],[7478,2],[7549,2],[7623,2],[7636,1],[7773,2],[7776,2],[7779,2],[7836,1],[8053,1],[8100,1],[8102,1],[8193,1],[8210,1],[8225,1],[8502,2],[8571,2],[8626,1],[8691,2],[8694,1],[8759,2],[8762,1],[8830,2],[8833,2],[8895,1],[8978,1],[8980,2],[9334,2],[9406,2],[9430,1],[9443,1],[9445,1],[9472,2],[9572,1],[9630,2],[9714,2],[9854,2],[9903,3],[9907,2],[9928,1],[9938,1],[9940,1],[10032,1],[10108,2],[10111,3],[10115,2],[10126,1],[10152,2],[10231,1],[10273,1],[10287,1],[10289,2],[10392,2],[10481,2],[10566,2],[10707,2],[10813,2],[10823,2],[10830,1],[10832,2],[10835,2],[10851,1],[10863,2],[10901,1],[10908,2],[11104,2],[11107,1],[11129,2],[11202,2],[11210,1],[11212,1],[11228,1],[11249,2],[11321,2],[11413,1],[11473,1],[11500,1],[11502,2],[11604,1],[11626,1],[11638,1],[11694,2],[11751,1],[11805,2],[11918,1],[11972,2],[12078,2],[12095,1],[12128,1],[12130,1],[12132,2],[12160,1],[12201,1],[12212,1],[12229,1],[12236,1],[12263,1],[12282,1],[12307,2],[12331,1],[12366,2],[12386,1],[12412,1],[12579,1],[12619,1],[12655,1],[12712,1],[12746,1],[12859,1],[12892,1],[12997,1],[12999,1],[13057,1],[13121,1],[13181,1],[13233,1],[13308,1],[13346,1],[13453,2],[13510,1],[13521,1],[13561,1],[13580,1],[13764,1],[13811,1],[13813,1],[13904,1],[14058,1],[14099,1],[14117,2],[14162,1],[14174,2],[14209,1],[14235,2],[14294,1],[14326,2]]},"813":{"position":[[736,1],[783,1],[785,1],[802,2],[805,1],[840,1],[852,1],[862,2],[865,2],[877,1],[887,2],[890,2],[903,1],[914,1],[925,1],[927,1],[937,2],[940,2],[943,1],[964,1],[986,1],[988,1],[990,1],[992,1],[994,2],[1010,1],[1021,1],[1032,1],[1034,1],[1044,2],[1047,2],[1050,1],[1071,1],[1094,1],[1096,1],[1098,1],[1100,1],[1102,2],[1115,1],[1126,1],[1137,1],[1139,1],[1149,2],[1152,2],[1155,1],[1176,1],[1202,1],[1204,1],[1206,1],[1208,1],[1210,1],[1212,2],[1227,1],[1242,1],[1254,1],[1287,1],[1289,1],[1310,1],[1312,1],[1314,2],[1326,1],[1359,1],[1361,1],[1378,2],[1381,1],[1422,1],[1424,1],[1426,2],[1439,1],[1472,1],[1474,1],[1491,2],[1494,1],[1535,1],[1537,1],[1539,2],[1555,1],[1588,1],[1590,1],[1607,2],[1610,1],[1651,1],[1653,1],[1655,2],[1668,1],[1701,1],[1703,1],[1720,2],[1723,1],[1764,1],[1766,1],[1768,1],[1770,1],[1772,1],[1774,1],[1776,1],[1778,1],[1986,2],[2058,2],[2082,1],[2095,1],[2097,1],[2124,2],[2224,1],[2282,2],[2366,2],[2506,2],[2555,3],[2591,1],[2605,1],[2607,2],[2654,1],[2731,2],[2793,1],[2879,1],[2881,2],[2938,3],[2961,2],[3040,1],[3082,1],[3096,1],[3098,2],[3201,2],[3290,2],[3375,2],[3516,2],[3622,2],[3632,2],[3639,1],[3641,2],[3644,2],[3660,1],[3672,2],[3710,1],[3717,2],[3797,1],[3799,1],[3801,2],[3976,2],[3979,1],[3981,2],[4181,2],[4184,2],[4187,2],[4278,2],[4358,2],[4365,1],[4367,2],[4370,2],[4386,1],[4407,2],[4479,2],[4571,1],[4631,1],[4658,1],[4660,2],[4762,1],[4784,1],[4796,1],[4852,2],[4909,1],[4963,2],[5076,1],[5130,2],[5236,2],[5253,1],[5286,1],[5288,1],[5337,1],[5374,1],[5376,2],[5429,1],[5436,1],[5461,1],[5480,1],[5507,2],[5510,2],[5578,1],[5585,1],[5622,1],[5641,1],[5666,1],[5668,3],[5693,1],[5725,3],[5748,1],[5915,1],[5955,1],[5991,1],[6048,1],[6082,1],[6195,1],[6228,1],[6333,1],[6335,1],[6393,1],[6457,1],[6509,1],[6563,1],[6647,1],[6704,1],[6821,2],[6834,1],[6976,2],[6979,2],[6982,2],[7039,1],[7256,1],[7303,1],[7305,1],[7396,1],[7413,1],[7428,1],[7594,2],[7663,2],[7710,1],[7788,2],[7791,2],[7853,1],[7941,1],[7943,2],[8464,2],[8536,2],[8560,1],[8573,1],[8575,1],[8602,2],[8702,1],[8760,2],[8844,2],[8984,2],[9033,3],[9037,2],[9058,1],[9068,1],[9070,1],[9162,1],[9236,2],[9239,3],[9243,2],[9254,1],[9285,2],[9364,1],[9406,1],[9420,1],[9422,2],[9525,2],[9614,2],[9699,2],[9840,2],[9946,2],[9956,2],[9963,1],[9965,2],[9968,2],[9984,1],[9996,2],[10034,1],[10041,2],[10235,2],[10238,1],[10260,2],[10333,2],[10341,1],[10343,1],[10364,1],[10385,2],[10457,2],[10549,1],[10609,1],[10636,1],[10638,2],[10740,1],[10762,1],[10774,1],[10830,2],[10887,1],[10941,2],[11054,1],[11108,2],[11214,2],[11231,1],[11264,1],[11266,1],[11268,2],[11296,1],[11337,1],[11348,1],[11365,1],[11372,1],[11397,1],[11416,1],[11441,2],[11465,1],[11500,2],[11520,1],[11551,1],[11718,1],[11758,1],[11794,1],[11851,1],[11885,1],[11998,1],[12031,1],[12136,1],[12138,1],[12196,1],[12260,1],[12320,1],[12372,1],[12447,1],[12485,1],[12590,2],[12647,1],[12658,1],[12698,1],[12717,1],[12906,1],[12953,1],[12955,1],[13046,1],[13198,1],[13244,1],[13260,2],[13303,1],[13315,2],[13350,1],[13376,2],[13435,1],[13467,2],[13634,1],[13646,1],[13657,1],[13668,1],[13670,1],[13680,2],[13683,2],[13686,1],[13707,1],[13733,1],[13735,2],[13738,1],[13758,1],[13772,1],[13795,2],[13817,1],[13840,1],[13842,1],[13844,1],[13846,1],[13848,1],[13850,1],[13852,1],[14391,2],[14483,2],[14593,1],[14649,3],[14653,1],[14666,1],[14735,1],[15184,1],[15231,1],[15233,1],[15250,2],[15253,1],[15288,1],[15299,1],[15310,1],[15321,1],[15323,1],[15333,2],[15336,2],[15339,1],[15359,1],[15380,1],[15402,2],[15417,1],[15440,1],[15442,1],[15444,1],[15446,1],[15448,1],[15450,2],[15463,1],[15474,1],[15485,1],[15487,1],[15497,2],[15500,2],[15503,1],[15524,1],[15546,1],[15548,2],[15551,1],[15571,1],[15592,1],[15615,2],[15630,1],[15653,1],[15655,1],[15657,1],[15659,1],[15661,1],[15663,2],[15679,1],[15690,1],[15701,1],[15703,1],[15713,2],[15716,2],[15719,1],[15740,1],[15763,1],[15765,2],[15768,1],[15788,1],[15809,1],[15835,2],[15850,1],[15873,1],[15875,1],[15877,1],[15879,1],[15881,1],[15883,2],[15896,1],[15907,1],[15918,1],[15920,1],[15930,2],[15933,2],[15936,1],[15957,1],[15983,1],[15985,2],[15988,1],[16008,1],[16029,1],[16052,2],[16067,1],[16090,1],[16092,1],[16094,1],[16096,1],[16098,1],[16100,2],[16113,1],[16123,2],[16126,1],[16128,2],[16143,1],[16158,1],[16170,1],[16203,1],[16205,1],[16226,1],[16228,1],[16230,2],[16242,1],[16275,1],[16277,1],[16294,2],[16297,1],[16338,1],[16340,1],[16342,2],[16355,1],[16388,1],[16390,1],[16407,2],[16410,1],[16451,1],[16453,1],[16455,2],[16471,1],[16504,1],[16506,1],[16523,2],[16526,1],[16567,1],[16569,1],[16571,2],[16584,1],[16617,1],[16619,1],[16636,2],[16639,1],[16680,1],[16682,1],[16684,1],[16686,1],[16688,1],[16690,2],[16693,1],[16726,1],[16738,1],[16748,2],[16751,1],[16753,2],[16768,1],[16783,1],[16795,1],[16828,1],[16830,1],[16847,1],[16849,1],[16851,1],[16853,1],[16855,1],[16857,1],[16859,1],[16861,1]]},"815":{"position":[[948,1],[995,1],[997,1],[1014,2],[1017,1],[1052,1],[1063,1],[1074,1],[1085,1],[1087,1],[1097,2],[1100,2],[1103,1],[1123,1],[1144,1],[1166,2],[1181,1],[1204,1],[1206,1],[1208,1],[1210,1],[1212,1],[1214,2],[1227,1],[1238,1],[1249,1],[1251,1],[1261,2],[1264,2],[1267,1],[1288,1],[1310,1],[1312,2],[1315,1],[1335,1],[1356,1],[1379,2],[1394,1],[1417,1],[1419,1],[1421,1],[1423,1],[1425,1],[1427,2],[1443,1],[1454,1],[1465,1],[1467,1],[1477,2],[1480,2],[1483,1],[1504,1],[1527,1],[1529,2],[1532,1],[1552,1],[1573,1],[1599,2],[1614,1],[1637,1],[1639,1],[1641,1],[1643,1],[1645,1],[1647,2],[1660,1],[1671,1],[1682,1],[1684,1],[1694,2],[1697,2],[1700,1],[1721,1],[1747,1],[1749,2],[1752,1],[1772,1],[1793,1],[1816,2],[1831,1],[1854,1],[1856,1],[1858,1],[1860,1],[1862,1],[1864,2],[1877,1],[1887,2],[1890,1],[1892,2],[1907,1],[1922,1],[1934,1],[1967,1],[1969,1],[1990,1],[1992,1],[1994,2],[2006,1],[2039,1],[2041,1],[2058,2],[2061,1],[2102,1],[2104,1],[2106,2],[2119,1],[2152,1],[2154,1],[2171,2],[2174,1],[2215,1],[2217,1],[2219,2],[2235,1],[2268,1],[2270,1],[2287,2],[2290,1],[2331,1],[2333,1],[2335,2],[2348,1],[2381,1],[2383,1],[2400,2],[2403,1],[2433,2],[2436,2],[2439,1],[2480,1],[2482,1],[2484,1],[2486,1],[2488,1],[2490,2],[2493,1],[2526,1],[2538,1],[2548,2],[2551,1],[2553,2],[2568,1],[2583,1],[2595,1],[2628,1],[2630,1],[2647,1],[2649,1],[2651,1],[2653,1],[2655,1],[2657,1],[2659,1],[2661,1],[2858,2],[2930,2],[2954,1],[2967,1],[2969,1],[2996,2],[3096,1],[3154,2],[3238,2],[3378,2],[3427,3],[3463,1],[3477,1],[3479,2],[3532,1],[3613,2],[3686,1],[3779,2],[3846,1],[3924,1],[3926,2],[3983,3],[4006,2],[4085,1],[4127,1],[4141,1],[4143,2],[4246,2],[4335,2],[4420,2],[4561,2],[4667,2],[4677,2],[4684,1],[4686,2],[4689,2],[4705,1],[4717,2],[4755,1],[4762,2],[4842,1],[4844,1],[4846,2],[5031,2],[5034,1],[5036,2],[5253,2],[5256,1],[5258,2],[5455,2],[5458,2],[5461,2],[5552,2],[5632,2],[5639,1],[5641,2],[5644,2],[5660,1],[5681,2],[5753,2],[5845,1],[5905,1],[5932,1],[5934,2],[6036,1],[6058,1],[6070,1],[6126,2],[6183,1],[6237,2],[6350,1],[6404,2],[6510,2],[6527,1],[6560,1],[6562,1],[6611,1],[6648,1],[6650,2],[6709,1],[6716,1],[6740,1],[6758,1],[6791,2],[6794,2],[6873,1],[6880,1],[6912,1],[6934,1],[6967,2],[6970,2],[7043,1],[7050,1],[7071,1],[7090,1],[7123,1],[7125,3],[7150,1],[7182,3],[7205,1],[7372,1],[7412,1],[7448,1],[7505,1],[7539,1],[7652,1],[7685,1],[7790,1],[7792,1],[7850,1],[7914,1],[7966,1],[8020,1],[8104,1],[8161,1],[8288,2],[8301,1],[8460,2],[8473,1],[8612,2],[8615,2],[8618,2],[8675,1],[8892,1],[8939,1],[8941,1],[9032,1],[9049,1],[9064,1],[9318,2],[9387,2],[9440,1],[9522,2],[9525,2],[9598,1],[9692,2],[9695,2],[9762,1],[9842,1],[9844,2],[9992,2],[10064,2],[10088,1],[10101,1],[10103,1],[10130,2],[10230,1],[10288,2],[10372,2],[10512,2],[10561,3],[10565,2],[10586,1],[10596,1],[10598,1],[10690,1],[10770,2],[10773,3],[10777,2],[10788,1],[10814,2],[10893,1],[10935,1],[10949,1],[10951,2],[11054,2],[11143,2],[11228,2],[11369,2],[11475,2],[11485,2],[11492,1],[11494,2],[11497,2],[11513,1],[11525,2],[11563,1],[11570,2],[11770,2],[11773,1],[11795,2],[11868,2],[11876,1],[11878,1],[11894,1],[11915,2],[11987,2],[12079,1],[12139,1],[12166,1],[12168,2],[12270,1],[12292,1],[12304,1],[12360,2],[12417,1],[12471,2],[12584,1],[12638,2],[12744,2],[12761,1],[12794,1],[12796,1],[12798,2],[12826,1],[12867,1],[12878,1],[12895,1],[12902,1],[12926,1],[12944,1],[12977,2],[13001,1],[13036,2],[13056,1],[13082,1],[13249,1],[13289,1],[13325,1],[13382,1],[13416,1],[13529,1],[13562,1],[13667,1],[13669,1],[13727,1],[13791,1],[13851,1],[13903,1],[13978,1],[14016,1],[14127,2],[14184,1],[14195,1],[14235,1],[14254,1],[14438,1],[14485,1],[14487,1],[14578,1],[14736,1],[14777,1],[14792,2],[14834,1],[14845,2],[14879,1],[14913,2],[14980,1],[15012,2],[15161,2],[15233,2],[15257,1],[15270,1],[15272,1],[15299,2],[15399,1],[15457,2],[15541,2],[15681,2],[15730,3],[15734,2],[15755,1],[15765,1],[15767,1],[15859,1],[15940,2],[15943,3],[15947,2],[15958,1],[15985,2],[16064,1],[16106,1],[16120,1],[16122,2],[16225,2],[16314,2],[16399,2],[16540,2],[16646,2],[16656,2],[16663,1],[16665,2],[16668,2],[16684,1],[16696,2],[16734,1],[16741,2],[16942,2],[16945,1],[16967,2],[17040,2],[17048,1],[17050,1],[17067,1],[17088,2],[17160,2],[17252,1],[17312,1],[17339,1],[17341,2],[17443,1],[17465,1],[17477,1],[17533,2],[17590,1],[17644,2],[17757,1],[17811,2],[17917,2],[17934,1],[17967,1],[17969,1],[17971,2],[17999,1],[18040,1],[18051,1],[18068,1],[18075,1],[18099,1],[18118,1],[18151,2],[18175,1],[18210,2],[18230,1],[18257,1],[18424,1],[18464,1],[18500,1],[18557,1],[18591,1],[18704,1],[18737,1],[18842,1],[18844,1],[18902,1],[18966,1],[19026,1],[19078,1],[19153,1],[19191,1],[19303,2],[19360,1],[19371,1],[19411,1],[19430,1],[19615,1],[19662,1],[19664,1],[19755,1],[19914,1],[19956,1],[19971,2],[20013,1],[20025,2],[20060,1],[20094,2],[20161,1],[20193,2],[20267,2],[20339,2],[20363,1],[20376,1],[20378,1],[20405,2],[20505,1],[20563,2],[20647,2],[20787,2],[20836,3],[20840,2],[20861,1],[20871,1],[20873,1],[20965,1],[21049,2],[21052,3],[21056,2],[21067,1],[21093,2],[21172,1],[21214,1],[21228,1],[21230,2],[21333,2],[21422,2],[21507,2],[21648,2],[21754,2],[21764,2],[21771,1],[21773,2],[21776,2],[21792,1],[21804,2],[21842,1],[21849,2],[22053,2],[22056,1],[22078,2],[22151,2],[22159,1],[22161,1],[22177,1],[22198,2],[22270,2],[22362,1],[22422,1],[22449,1],[22451,2],[22553,1],[22575,1],[22587,1],[22643,2],[22700,1],[22754,2],[22867,1],[22921,2],[23027,2],[23044,1],[23077,1],[23079,1],[23081,2],[23109,1],[23150,1],[23161,1],[23178,1],[23185,1],[23209,1],[23231,1],[23264,2],[23288,1],[23323,2],[23343,1],[23369,1],[23536,1],[23576,1],[23612,1],[23669,1],[23703,1],[23816,1],[23849,1],[23954,1],[23956,1],[24014,1],[24078,1],[24138,1],[24190,1],[24265,1],[24303,1],[24418,2],[24475,1],[24486,1],[24526,1],[24545,1],[24729,1],[24776,1],[24778,1],[24869,1],[25031,1],[25072,1],[25087,2],[25129,1],[25144,2],[25182,1],[25216,2],[25283,1],[25315,2],[25466,2],[25538,2],[25562,1],[25575,1],[25577,1],[25604,2],[25704,1],[25762,2],[25846,2],[25986,2],[26035,3],[26039,2],[26060,1],[26070,1],[26072,1],[26164,1],[26245,2],[26248,3],[26252,2],[26263,1],[26290,2],[26369,1],[26411,1],[26425,1],[26427,2],[26530,2],[26619,2],[26704,2],[26845,2],[26951,2],[26961,2],[26968,1],[26970,2],[26973,2],[26989,1],[27001,2],[27039,1],[27046,2],[27247,2],[27250,1],[27272,2],[27345,2],[27353,1],[27355,1],[27372,1],[27393,2],[27465,2],[27557,1],[27617,1],[27644,1],[27646,2],[27748,1],[27770,1],[27782,1],[27838,2],[27895,1],[27949,2],[28062,1],[28116,2],[28222,2],[28239,1],[28272,1],[28274,1],[28276,2],[28304,1],[28345,1],[28356,1],[28373,1],[28380,1],[28404,1],[28423,1],[28456,2],[28480,1],[28515,2],[28535,1],[28562,1],[28729,1],[28769,1],[28805,1],[28862,1],[28896,1],[29009,1],[29042,1],[29147,1],[29149,1],[29207,1],[29271,1],[29331,1],[29383,1],[29458,1],[29496,1],[29608,2],[29665,1],[29676,1],[29716,1],[29735,1],[29920,1],[29967,1],[29969,1],[30060,1],[30219,1],[30261,1],[30276,2],[30318,1],[30330,2],[30365,1],[30399,2],[30466,1],[30498,2],[30572,2],[30644,2],[30668,1],[30681,1],[30683,1],[30710,2],[30810,1],[30868,2],[30952,2],[31092,2],[31141,3],[31145,2],[31166,1],[31176,1],[31178,1],[31270,1],[31351,2],[31354,3],[31358,2],[31369,1],[31396,2],[31475,1],[31517,1],[31531,1],[31533,2],[31636,2],[31725,2],[31810,2],[31951,2],[32057,2],[32067,2],[32074,1],[32076,2],[32079,2],[32095,1],[32107,2],[32145,1],[32152,2],[32353,2],[32356,1],[32378,2],[32451,2],[32459,1],[32461,1],[32478,1],[32499,2],[32571,2],[32663,1],[32723,1],[32750,1],[32752,2],[32854,1],[32876,1],[32888,1],[32944,2],[33001,1],[33055,2],[33168,1],[33222,2],[33328,2],[33345,1],[33378,1],[33380,1],[33382,2],[33410,1],[33451,1],[33462,1],[33479,1],[33486,1],[33510,1],[33529,1],[33562,2],[33586,1],[33621,2],[33641,1],[33668,1],[33835,1],[33875,1],[33911,1],[33968,1],[34002,1],[34115,1],[34148,1],[34253,1],[34255,1],[34313,1],[34377,1],[34437,1],[34489,1],[34564,1],[34602,1],[34714,2],[34771,1],[34782,1],[34822,1],[34841,1],[35026,1],[35073,1],[35075,1],[35166,1],[35325,1],[35367,1],[35382,2],[35424,1],[35436,2],[35471,1],[35505,2],[35572,1],[35604,2]]}}}],["0.0.0.0:2112/metric",{"_index":1078,"t":{"156":{"position":[[85,21]]}}}],["0.0.0.0:4317",{"_index":1090,"t":{"158":{"position":[[242,13]]}}}],["0.2.0",{"_index":1059,"t":{"152":{"position":[[727,5]]}}}],["0.3.2",{"_index":1056,"t":{"152":{"position":[[645,5]]}}}],["0.4.0",{"_index":1722,"t":{"431":{"position":[[165,5]]}}}],["0.5.0",{"_index":1732,"t":{"431":{"position":[[1067,5]]}}}],["0001",{"_index":1607,"t":{"403":{"position":[[5054,5]]}}}],["03",{"_index":2234,"t":{"698":{"position":[[35,3]]}}}],["06t15:32:11.128z",{"_index":1889,"t":{"569":{"position":[[1362,19],[2540,19],[3717,19],[4941,21],[5485,20],[5800,19],[6915,19],[8055,19],[9211,19],[10416,21],[10940,20],[11233,19],[12341,19],[13491,19],[14657,19],[15872,21],[16406,20],[16690,19]]},"648":{"position":[[1080,19],[2238,19],[3459,19],[4727,21],[5315,20],[5610,19]]}}}],["06t15:32:11.128z\"},{\"key",{"_index":2076,"t":{"648":{"position":[[957,26],[2115,26],[3336,26],[4604,26],[5192,26],[5487,26]]}}}],["1",{"_index":1331,"t":{"275":{"position":[[211,1],[300,1],[688,1]]},"431":{"position":[[0,1]]},"541":{"position":[[207,1]]},"569":{"position":[[294,2]]},"585":{"position":[[338,1]]},"686":{"position":[[267,1],[316,1],[368,1],[401,1],[480,1],[513,1]]},"692":{"position":[[74,1],[123,1],[452,2]]},"694":{"position":[[107,1],[2545,1],[2596,1]]},"696":{"position":[[2766,2],[15548,2]]},"742":{"position":[[9655,1]]}}}],["1.0",{"_index":568,"t":{"60":{"position":[[3328,3]]},"415":{"position":[[927,3]]},"417":{"position":[[143,4],[337,4]]},"419":{"position":[[32,3],[121,3],[1120,5]]},"421":{"position":[[13,3]]},"425":{"position":[[19,4],[3128,3],[3306,4]]},"429":{"position":[[509,4],[876,4],[898,4],[1052,3],[1683,4]]},"431":{"position":[[133,3],[213,3],[499,3],[737,3],[1206,3]]}}}],["1.1",{"_index":184,"t":{"16":{"position":[[1664,3],[1912,6]]},"54":{"position":[[162,3],[822,6]]},"60":{"position":[[307,3],[505,6]]},"68":{"position":[[888,3],[1079,6],[1817,3],[1914,6]]},"80":{"position":[[93,3],[216,6],[1428,6]]},"134":{"position":[[308,3],[349,3]]},"182":{"position":[[217,3],[258,3]]},"204":{"position":[[334,3],[473,6]]},"221":{"position":[[328,3],[455,6]]},"238":{"position":[[283,3],[360,6]]},"261":{"position":[[74,3],[260,6]]},"279":{"position":[[372,3],[531,6]]},"306":{"position":[[462,3],[596,6]]},"314":{"position":[[233,3],[390,6]]},"316":{"position":[[320,3],[493,6]]},"328":{"position":[[403,3],[505,6]]},"336":{"position":[[188,3],[300,6]]},"345":{"position":[[65,3],[197,6]]},"347":{"position":[[65,3],[199,6]]},"355":{"position":[[507,3],[625,6]]},"367":{"position":[[287,3],[477,6]]},"379":{"position":[[303,3],[405,6]]},"399":{"position":[[4117,3]]},"401":{"position":[[2864,3]]},"403":{"position":[[9435,3],[9944,3]]},"413":{"position":[[114,3],[152,4]]},"417":{"position":[[183,4],[273,3]]},"419":{"position":[[2056,3],[2289,3],[2582,5],[3826,5]]},"421":{"position":[[239,3]]},"423":{"position":[[1354,3],[2966,5]]},"425":{"position":[[483,3],[785,3],[1138,5],[3193,3],[3460,3]]},"429":{"position":[[656,4],[820,3],[921,3],[1174,6]]},"431":{"position":[[745,3],[852,3],[1011,3]]},"437":{"position":[[714,3],[898,6]]},"447":{"position":[[197,3],[429,6]]},"455":{"position":[[350,3],[474,6]]},"463":{"position":[[332,3],[480,6]]},"465":{"position":[[136,3],[306,6]]},"477":{"position":[[293,3],[378,6]]},"493":{"position":[[314,3],[411,6]]},"501":{"position":[[292,3],[389,6]]},"503":{"position":[[764,3],[928,6]]},"511":{"position":[[308,3],[388,6]]},"519":{"position":[[187,3],[316,6]]},"531":{"position":[[272,3],[347,6]]},"539":{"position":[[97,3],[262,6]]},"553":{"position":[[376,3],[488,6]]},"601":{"position":[[267,3],[452,6]]},"605":{"position":[[78,3],[263,6]]},"607":{"position":[[139,3],[276,6]]},"613":{"position":[[328,3],[452,6]]},"620":{"position":[[161,3],[309,6]]},"628":{"position":[[98,3],[303,6]]},"642":{"position":[[276,3],[373,6],[890,3],[988,6]]},"644":{"position":[[278,3],[425,6]]},"650":{"position":[[138,3],[236,6]]},"660":{"position":[[887,3],[1316,6]]},"672":{"position":[[87,3],[654,6]]},"690":{"position":[[664,3],[820,6]]},"694":{"position":[[1171,3],[1443,6]]},"696":{"position":[[796,3],[1210,6]]},"698":{"position":[[652,3],[1036,6]]},"716":{"position":[[1018,3],[1178,6]]},"718":{"position":[[590,3],[750,6]]},"720":{"position":[[5789,3],[5999,6]]},"722":{"position":[[4481,3],[4967,6]]},"734":{"position":[[544,3],[911,6]]},"746":{"position":[[87,3],[820,6]]},"748":{"position":[[239,3],[1033,6]]},"765":{"position":[[625,3],[817,6]]},"769":{"position":[[6584,3],[6791,6],[21521,3],[21770,6],[28657,3],[28962,6],[37612,3],[37907,6]]},"786":{"position":[[304,3],[472,6],[1268,3],[1344,6],[27246,3],[27458,6]]},"788":{"position":[[363,3],[441,6],[796,3],[1068,6]]},"792":{"position":[[911,3],[985,6],[1256,3],[1547,6],[20655,3],[21233,6]]},"809":{"position":[[389,3],[537,6],[27278,3],[27458,6]]},"811":{"position":[[420,3],[700,6]]},"813":{"position":[[494,3],[756,6],[14808,3],[15204,6]]},"815":{"position":[[565,3],[968,6]]}}}],["10",{"_index":1348,"t":{"288":{"position":[[10049,2]]},"569":{"position":[[1359,2],[2537,2],[3714,2],[4938,2],[5482,2],[5797,2],[6912,2],[8052,2],[9208,2],[10413,2],[10937,2],[11230,2],[12338,2],[13488,2],[14654,2],[15869,2],[16403,2],[16687,2]]},"585":{"position":[[400,3],[437,2]]},"648":{"position":[[954,2],[1077,2],[2112,2],[2235,2],[3333,2],[3456,2],[4601,2],[4724,2],[5189,2],[5312,2],[5484,2],[5607,2]]}}}],["10.0.0.0/16",{"_index":2428,"t":{"742":{"position":[[10775,11],[12309,11],[14076,11],[15633,11],[16938,11],[18023,11],[19200,11],[20758,11],[22068,11],[22993,11]]},"744":{"position":[[1009,11],[1825,11],[3057,11],[4670,11],[6035,11],[7016,11]]},"746":{"position":[[5677,11],[9063,11],[12268,11],[15227,11],[18653,11]]}}}],["100",{"_index":1277,"t":{"259":{"position":[[2732,4]]},"273":{"position":[[1070,5]]}}}],["1000",{"_index":1232,"t":{"230":{"position":[[70,4]]},"585":{"position":[[182,6]]}}}],["10am",{"_index":2472,"t":{"746":{"position":[[4751,4],[4895,4],[7801,4],[8001,4],[11282,4],[11436,4],[14265,4],[14415,4],[17703,4],[17851,4]]}}}],["11am",{"_index":2423,"t":{"742":{"position":[[10448,4],[11870,4],[13729,4],[15294,4],[16603,4]]},"746":{"position":[[4903,4],[5048,4],[8009,4],[8210,4],[11444,4],[11599,4],[14423,4],[14574,4],[17859,4],[18008,4]]}}}],["128",{"_index":964,"t":{"142":{"position":[[3167,3],[3219,3]]}}}],["12pm",{"_index":2394,"t":{"736":{"position":[[93,4],[179,4],[329,4]]},"742":{"position":[[10456,4],[10601,4],[11878,4],[12079,4],[13737,4],[13892,4],[15302,4],[15453,4],[16611,4],[16760,4],[18162,4],[19395,4],[20907,4],[22213,4],[23136,4]]},"744":{"position":[[1066,4],[1991,4],[3279,4],[4846,4],[6207,4],[7186,4]]},"746":{"position":[[5056,4],[5201,4],[8218,4],[8419,4],[11607,4],[11762,4],[14582,4],[14733,4],[18016,4],[18165,4]]}}}],["13th",{"_index":1718,"t":{"431":{"position":[[12,4]]}}}],["15th",{"_index":1721,"t":{"431":{"position":[[86,4],[1022,4]]}}}],["1pm",{"_index":2425,"t":{"742":{"position":[[10609,3],[12087,3],[13900,3],[15461,3],[16768,3],[18171,3],[19404,3],[20916,3],[22222,3],[23145,3]]},"744":{"position":[[1075,3],[2000,3],[3288,3],[4855,3],[6216,3],[7195,3]]},"746":{"position":[[5209,3],[5353,3],[8427,3],[8627,3],[11770,3],[11924,3],[14741,3],[14891,3],[18173,3],[18321,3]]}}}],["1s",{"_index":1957,"t":{"585":{"position":[[304,3]]}}}],["1uhxcsutp0vkpysnkq1pbb1jezw",{"_index":354,"t":{"16":{"position":[[12964,30],[15298,32],[16899,30],[17249,29],[18576,30],[20910,32],[22511,30],[22861,29],[24336,30],[26548,30],[28263,30],[28608,30]]},"80":{"position":[[1847,29],[3468,29],[5033,29],[6478,29]]},"114":{"position":[[190,30],[822,32],[1561,30]]},"126":{"position":[[173,30],[713,30],[1576,30]]},"192":{"position":[[229,29],[860,29],[1623,31]]},"194":{"position":[[386,29],[1019,29],[1784,31]]},"213":{"position":[[858,29],[3167,29],[4788,31]]},"215":{"position":[[808,30],[3133,32],[4731,30],[5072,29],[5973,30],[8303,32],[9904,30],[10249,29]]},"221":{"position":[[2113,30],[4425,32],[6020,30],[6347,29],[7273,29],[9656,29],[11311,31],[12516,30],[14841,32],[16439,30],[16780,29],[17539,30],[19869,32],[21470,30],[21815,29]]},"230":{"position":[[1120,29],[3427,29],[5046,31]]},"232":{"position":[[851,30],[3178,32],[4778,30],[5120,29]]},"245":{"position":[[1108,30],[3403,32],[4991,30],[5302,29]]},"247":{"position":[[875,29],[3174,29],[4785,31],[5880,30],[8177,32],[9767,30],[10079,29]]},"288":{"position":[[956,29],[3247,29],[4850,31],[5862,29],[8155,29],[9760,31],[11224,29],[14008,29],[15911,31]]},"312":{"position":[[947,30],[3275,32],[4874,30],[5218,29],[5977,30],[8302,32],[9900,30],[10241,29]]},"318":{"position":[[1185,29],[3612,29],[5296,31],[6551,30],[8878,32],[10478,30],[10820,29],[11785,30],[14113,32],[15712,30],[16056,29]]},"338":{"position":[[981,30],[3330,32],[4936,30],[5301,29]]},"345":{"position":[[1925,30],[4244,32],[5840,30],[6175,29]]},"369":{"position":[[1154,29],[3859,29],[5729,31],[6865,30],[9199,32],[10800,30],[11150,29]]},"371":{"position":[[1166,29],[4091,29],[6107,31]]},"373":{"position":[[777,30],[3111,32],[4712,30],[5062,29]]},"385":{"position":[[932,29],[3265,29],[4910,31]]},"387":{"position":[[881,30],[3230,32],[4836,30],[5201,29],[6131,30],[8482,32],[10090,30],[10456,29]]},"429":{"position":[[2028,29],[2693,29],[3490,31]]},"445":{"position":[[947,30],[3284,32],[4886,30],[5239,29],[5998,30],[8332,32],[9933,30],[10283,29]]},"449":{"position":[[907,30],[3247,32],[4850,30],[5206,29],[6122,30],[8461,32],[10065,30],[10419,29]]},"467":{"position":[[893,29],[3198,29],[4815,31]]},"469":{"position":[[975,29],[3440,29],[5154,31]]},"471":{"position":[[954,30],[3303,32],[4909,30],[5274,29]]},"485":{"position":[[1131,29],[3540,29],[5216,31]]},"487":{"position":[[1086,30],[3423,32],[5025,30],[5378,29]]},"505":{"position":[[1264,29],[3909,29],[5731,31],[6817,30],[9145,32],[10744,30],[11088,29],[12232,30],[14559,32],[16159,30],[16501,29],[17338,30],[19672,32],[21273,30],[21623,29],[22382,30],[24713,32],[26313,30],[26660,29]]},"521":{"position":[[904,29],[3213,29],[4834,31]]},"523":{"position":[[1314,29],[3777,29],[5497,31]]},"525":{"position":[[1014,30],[3369,32],[4977,30],[5348,29]]},"537":{"position":[[1034,29],[3511,29],[5240,31]]},"541":{"position":[[1037,29],[3506,29],[5227,31]]},"543":{"position":[[1000,29],[3307,29],[4926,31]]},"545":{"position":[[787,30],[3079,32],[4666,30],[4974,29],[5733,30],[8025,32],[9612,30],[9920,29]]},"547":{"position":[[876,29],[3167,29],[4770,31],[5722,30],[8016,32],[9605,30],[9914,29]]},"562":{"position":[[946,30],[3268,32],[4865,30],[5203,29]]},"576":{"position":[[1064,29],[3437,32],[4542,30],[5082,31],[6398,29],[8771,32],[9876,30],[10416,31]]},"583":{"position":[[846,30],[3334,30],[5308,30],[5768,30]]},"605":{"position":[[2074,30],[4399,32],[5997,30],[6338,29],[7667,30],[9992,32],[11590,30],[11931,29],[13909,30],[16243,32],[17844,30],[18194,29],[20164,30],[22489,32],[24087,30],[24428,29],[25821,30],[28149,32],[29748,30],[30092,29]]},"607":{"position":[[1919,30],[4246,32],[5846,30],[6188,29],[7588,30],[9924,32],[11527,30],[11878,29],[13349,30],[15679,32],[17280,30],[17625,29],[19091,30],[21422,32],[23022,30],[23369,29]]},"622":{"position":[[1249,29],[3790,29],[5541,31]]},"624":{"position":[[888,30],[3246,32],[4855,30],[5229,29]]},"630":{"position":[[1073,29],[3878,29],[5816,31]]},"632":{"position":[[817,30],[3151,32],[4752,30],[5102,29]]},"634":{"position":[[930,29],[3381,29],[5093,31],[6187,30],[8523,32],[10126,30],[10477,29],[11237,30],[13583,32],[15188,30],[15550,29]]},"644":{"position":[[1579,30],[3910,32],[5510,30],[5857,29],[6616,30],[8944,32],[10543,30],[10887,29]]},"646":{"position":[[999,29],[3410,29],[5087,31],[6080,30],[8420,32],[10023,30],[10379,29]]},"648":{"position":[[6658,29],[9185,29],[10964,31],[12108,29],[14637,29],[16418,31],[17533,30],[19864,32],[21464,30],[21811,29],[22615,30],[24939,32],[26538,30],[26877,29]]},"660":{"position":[[4145,29],[6788,29],[8845,31]]},"666":{"position":[[351,30],[986,32],[1726,30],[2049,29],[2242,30],[2883,32],[3625,30],[3954,29],[4159,30],[4794,32],[5534,30],[5857,29],[6055,30],[6698,32],[7442,30],[7772,29],[7969,30],[8606,32],[9348,30],[9672,29],[9871,30],[10514,32],[11258,30],[11588,29]]},"668":{"position":[[2929,30],[3566,32],[4308,30],[4632,29],[5636,29],[8081,29],[9779,31],[10182,30],[10817,32],[11557,30],[11880,29]]},"670":{"position":[[1997,29],[4498,29],[6225,31],[6714,30],[7822,32],[8700,30],[9273,29],[9539,30],[10649,32],[11529,30],[12103,29]]},"672":{"position":[[3684,29],[6327,29],[8384,31]]},"692":{"position":[[1281,29],[3602,29],[5235,31],[6241,29],[8570,29],[10211,31],[11372,29],[14119,29],[16058,31],[17450,30],[19781,32],[21381,30],[21728,29],[22568,30],[24892,32],[26491,30],[26830,29]]},"694":{"position":[[3899,29],[6818,29],[8869,31],[10061,30],[12401,32],[14004,30],[14360,29]]},"696":{"position":[[3690,29],[6253,29],[8068,31],[9578,29],[12663,29],[14880,31],[16328,30],[18650,32],[20247,30],[20585,29]]},"698":{"position":[[3947,29],[6700,29],[8645,31],[10037,30],[12373,32],[13976,30],[14327,29]]},"718":{"position":[[2897,29],[5336,29],[7033,31],[8051,30],[10400,32],[12006,30],[12371,29],[13323,29],[15762,29],[17459,31],[18434,30],[20783,32],[22389,30],[22754,29],[23590,30],[25959,32],[27573,30],[27957,29],[29532,29],[32603,29],[34711,31],[36004,30],[38353,32],[39959,30],[40324,29]]},"720":{"position":[[833,30],[3166,32],[4768,30],[5116,29],[7533,30],[9864,32],[11464,30],[11811,29]]},"722":{"position":[[7867,29],[10768,29],[12861,31],[14367,29],[16944,29],[18718,31],[20148,29],[22879,29],[24754,31],[26088,29],[28649,29],[30462,31],[31684,29],[34065,29],[35758,31],[36832,29],[39179,29],[40838,31],[41949,30],[44273,32],[45872,30],[46211,29],[47041,30],[49411,32],[51024,30],[51410,29]]},"734":{"position":[[3892,29],[7451,29],[9864,31]]},"740":{"position":[[1133,30],[3452,32],[5048,30],[5383,29],[6244,30],[8575,32],[10175,30],[10522,29],[11514,29],[13955,29],[15653,31],[16600,30],[18921,32],[20519,30],[20855,29]]},"742":{"position":[[5248,30],[7554,32],[9147,30],[9468,29],[10974,29],[14283,29],[16560,31],[18269,29],[21022,29],[22915,31],[24142,30],[26461,32],[28057,30],[28392,29]]},"744":{"position":[[2098,29],[4961,29],[6910,31],[8488,30],[11547,32],[13354,30],[14078,29],[14944,30],[18005,32],[19814,30],[20539,29]]},"746":{"position":[[5876,29],[12475,29],[16891,31]]},"767":{"position":[[1807,29],[6136,29],[9042,31],[11303,29],[14514,29],[16695,31],[18414,29],[21485,29],[23581,31],[25697,30],[28025,32],[29624,30],[29968,29],[30876,30],[33206,32],[34807,30],[35152,29],[35912,30],[38252,32],[39855,30],[40211,29],[40970,30],[43313,32],[44917,30],[45276,29]]},"769":{"position":[[998,30],[3324,32],[4929,30],[5266,29],[8333,30],[10651,32],[12248,30],[12581,29],[13673,30],[16018,32],[17624,30],[17984,29],[23421,30],[25764,32],[27368,30],[27727,29],[31084,30],[33400,32],[34995,30],[35327,29],[40071,30],[42387,32],[43982,30],[44314,29]]},"786":{"position":[[2600,29],[4923,29],[6558,31],[7524,30],[9858,32],[11459,30],[11809,29],[12699,29],[15022,29],[16657,31],[17580,30],[19914,32],[21515,30],[21865,29],[22624,30],[24960,32],[26563,30],[26914,29],[29775,30],[32109,32],[33710,30],[34060,29],[34819,30],[37153,32],[38754,30],[39104,29]]},"788":{"position":[[3348,29],[6195,29],[8165,31],[9519,30],[11859,32],[13462,30],[13818,29]]},"790":{"position":[[1094,29],[3465,29],[5148,31],[6650,29],[9085,29],[10778,31],[11722,30],[14056,32],[15657,30],[16007,29]]},"792":{"position":[[3797,29],[6354,29],[8163,31],[9701,30],[12042,32],[13652,30],[14004,29],[16342,29],[18709,29],[20388,31]]},"809":{"position":[[2600,29],[4929,29],[6570,31],[7542,30],[9885,32],[11489,30],[11848,29],[12735,29],[15056,29],[16689,31],[17611,30],[19942,32],[21542,30],[21889,29],[22648,30],[24984,32],[26587,30],[26938,29],[29287,30],[31618,32],[33218,30],[33565,29],[34324,30],[36658,32],[38259,30],[38609,29]]},"811":{"position":[[3196,29],[6357,29],[8531,31],[9990,30],[12333,32],[13937,30],[14296,29]]},"813":{"position":[[2908,29],[5695,29],[7623,31],[9120,30],[11467,32],[13079,30],[13437,29]]},"815":{"position":[[3953,29],[7152,29],[9347,31],[10648,30],[13003,32],[14611,30],[14982,29],[15817,30],[18177,32],[19788,30],[20163,29],[20923,30],[23290,32],[24902,30],[25285,29],[26122,30],[28482,32],[30093,30],[30468,29],[31228,30],[33588,32],[35199,30],[35574,29]]}}}],["2",{"_index":1336,"t":{"275":{"position":[[497,1],[598,1],[693,1]]},"431":{"position":[[77,1]]},"541":{"position":[[213,2]]},"569":{"position":[[5820,2]]},"686":{"position":[[420,1]]},"696":{"position":[[8427,1],[15528,1]]}}}],["20",{"_index":979,"t":{"142":{"position":[[4550,3]]}}}],["2021",{"_index":1888,"t":{"569":{"position":[[1353,5],[2531,5],[3708,5],[4932,5],[5476,5],[5791,5],[6906,5],[8046,5],[9202,5],[10407,5],[10931,5],[11224,5],[12332,5],[13482,5],[14648,5],[15863,5],[16397,5],[16681,5]]},"648":{"position":[[948,5],[1071,5],[2106,5],[2229,5],[3327,5],[3450,5],[4595,5],[4718,5],[5183,5],[5306,5],[5478,5],[5601,5]]},"806":{"position":[[219,4],[337,4],[394,4],[417,4]]},"815":{"position":[[203,4]]}}}],["2023",{"_index":1719,"t":{"431":{"position":[[17,5],[91,5],[771,5],[1027,5]]}}}],["2048",{"_index":774,"t":{"96":{"position":[[2124,5]]},"98":{"position":[[3334,5]]}}}],["25",{"_index":1254,"t":{"259":{"position":[[150,3],[416,3],[794,4],[841,2],[1399,3],[1880,3],[2499,4]]},"261":{"position":[[1139,3],[1428,3],[1838,4],[2237,3],[2741,3],[3392,4]]}}}],["256",{"_index":966,"t":{"142":{"position":[[3193,4],[3245,4],[3266,3]]}}}],["2pm",{"_index":2475,"t":{"746":{"position":[[5360,3],[5504,3],[8634,3],[8834,3],[11931,3],[12085,3],[14898,3],[15048,3],[18328,3],[18476,3]]}}}],["3",{"_index":1335,"t":{"275":{"position":[[492,1]]},"425":{"position":[[1796,1]]},"431":{"position":[[757,1]]},"569":{"position":[[11253,2]]},"581":{"position":[[218,2]]},"686":{"position":[[433,2]]},"696":{"position":[[8433,2]]},"760":{"position":[[98,1]]}}}],["3.8",{"_index":936,"t":{"142":{"position":[[1597,5],[4244,5]]}}}],["3000",{"_index":893,"t":{"138":{"position":[[428,4]]},"146":{"position":[[232,4],[332,4]]}}}],["3000:3000",{"_index":888,"t":{"138":{"position":[[229,9]]},"142":{"position":[[1343,9],[2665,11],[4010,9],[5296,11]]},"144":{"position":[[1466,9],[2985,9]]},"148":{"position":[[342,9],[588,9]]}}}],["3001",{"_index":1027,"t":{"148":{"position":[[475,5]]}}}],["3001:3001",{"_index":1026,"t":{"148":{"position":[[355,9]]}}}],["3002",{"_index":1030,"t":{"148":{"position":[[666,5]]}}}],["3002:3002",{"_index":1029,"t":{"148":{"position":[[601,9]]}}}],["3060",{"_index":229,"t":{"16":{"position":[[4266,4],[4780,4]]}}}],["31st",{"_index":1730,"t":{"431":{"position":[[766,4]]}}}],["3306:3306",{"_index":973,"t":{"142":{"position":[[4352,11]]}}}],["3pm",{"_index":2354,"t":{"734":{"position":[[2519,3]]},"746":{"position":[[5511,3],[8841,3],[12092,3],[15055,3],[18483,3]]}}}],["3s",{"_index":1955,"t":{"585":{"position":[[98,3]]}}}],["4",{"_index":1731,"t":{"431":{"position":[[1015,1]]},"702":{"position":[[42,1]]}}}],["41f4",{"_index":230,"t":{"16":{"position":[[4271,4],[4785,4]]}}}],["42c8",{"_index":2578,"t":{"767":{"position":[[24580,4]]}}}],["4930",{"_index":247,"t":{"16":{"position":[[4721,4]]}}}],["4d5c",{"_index":2583,"t":{"767":{"position":[[24650,4]]}}}],["4da68ce1846c",{"_index":283,"t":{"16":{"position":[[8123,12],[8931,13]]}}}],["4e93",{"_index":281,"t":{"16":{"position":[[8113,4],[8921,4]]}}}],["4fa7",{"_index":280,"t":{"16":{"position":[[8108,4],[8916,4]]}}}],["5",{"_index":948,"t":{"142":{"position":[[1889,1],[4563,1]]},"702":{"position":[[48,2]]},"786":{"position":[[11,1]]}}}],["50",{"_index":1275,"t":{"259":{"position":[[2695,3]]}}}],["512",{"_index":967,"t":{"142":{"position":[[3292,4]]}}}],["526",{"_index":2351,"t":{"734":{"position":[[2300,3],[2372,3],[2420,3],[3461,3],[3538,6],[3616,3],[3714,6],[3748,3],[3811,5],[5031,3],[5159,6],[5242,3],[5391,6],[5430,3],[5508,6],[6992,3],[7078,4],[7157,3],[7264,4],[7299,3],[7369,5],[8655,3],[8727,5],[8816,3],[8909,5],[8954,3],[9014,5],[10098,3],[10178,4],[10257,3],[10358,4],[10393,3],[10457,5]]},"746":{"position":[[4189,3],[4266,6],[4344,3],[4442,6],[4476,3],[4539,5],[7015,3],[7143,6],[7226,3],[7375,6],[7414,3],[7492,6],[10680,3],[10766,4],[10845,3],[10952,4],[10987,3],[11057,5],[13679,3],[13751,5],[13840,3],[13933,5],[13978,3],[14038,5],[17125,3],[17205,4],[17284,3],[17385,4],[17420,3],[17484,5]]}}}],["526\",\"relation\":\"account\",\"object\":\"transaction:a",{"_index":2383,"t":{"734":{"position":[[9782,52]]}}}],["526\",\"relation\":\"account\",\"object\":\"transaction:a\"},{\"user\":\"timeslot:8_9\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2488,"t":{"746":{"position":[[16110,127]]}}}],["526\"},{\"user\":\"account:check",{"_index":2382,"t":{"734":{"position":[[9750,31]]},"746":{"position":[[16078,31]]}}}],["526\"},{\"user\":\"branch:west",{"_index":2380,"t":{"734":{"position":[[9670,26]]},"746":{"position":[[15998,26]]}}}],["5432:5432",{"_index":938,"t":{"142":{"position":[[1715,11]]}}}],["5570c7bf6f59",{"_index":249,"t":{"16":{"position":[[4731,12]]}}}],["5s",{"_index":945,"t":{"142":{"position":[[1865,2],[1877,2]]}}}],["6pm",{"_index":2396,"t":{"736":{"position":[[379,3]]}}}],["7c9c",{"_index":2577,"t":{"767":{"position":[[24575,4]]}}}],["8080",{"_index":890,"t":{"138":{"position":[[352,4]]}}}],["8080:8080",{"_index":886,"t":{"138":{"position":[[203,9]]},"142":{"position":[[1356,9],[2545,11],[4023,9],[5176,11]]},"144":{"position":[[1479,9],[2998,9]]},"148":{"position":[[316,9],[562,9]]},"152":{"position":[[160,9],[296,9]]}}}],["8081",{"_index":892,"t":{"138":{"position":[[388,4]]}}}],["8081:8081",{"_index":887,"t":{"138":{"position":[[216,9]]},"142":{"position":[[1369,9],[2598,11],[4036,9],[5229,11]]},"144":{"position":[[1492,9],[3011,9]]},"148":{"position":[[329,9],[575,9]]},"152":{"position":[[173,9],[309,9]]}}}],["8417",{"_index":282,"t":{"16":{"position":[[8118,4],[8926,4]]}}}],["88fd",{"_index":248,"t":{"16":{"position":[[4726,4]]}}}],["8am",{"_index":2353,"t":{"734":{"position":[[2515,3]]},"746":{"position":[[4595,3],[7589,3],[11116,3],[14103,3],[17543,3]]}}}],["911002051524",{"_index":2580,"t":{"767":{"position":[[24590,12]]}}}],["9329",{"_index":2579,"t":{"767":{"position":[[24585,4]]}}}],["9590",{"_index":231,"t":{"16":{"position":[[4276,4],[4790,4]]}}}],["9am",{"_index":2470,"t":{"746":{"position":[[4602,3],[4744,3],[7596,3],[7794,3],[11123,3],[11275,3],[14110,3],[14258,3],[17550,3],[17696,3]]}}}],["_",{"_index":658,"t":{"86":{"position":[[898,2]]},"98":{"position":[[5149,2]]},"192":{"position":[[547,2]]},"194":{"position":[[705,2]]},"213":{"position":[[1949,2]]},"221":{"position":[[8401,2]]},"230":{"position":[[2210,2]]},"247":{"position":[[1961,2]]},"288":{"position":[[2038,2],[6945,2],[12583,2]]},"318":{"position":[[2335,2]]},"369":{"position":[[2466,2]]},"371":{"position":[[2588,2]]},"385":{"position":[[2035,2]]},"401":{"position":[[2606,3]]},"429":{"position":[[2363,2]]},"467":{"position":[[1982,2]]},"469":{"position":[[2144,2]]},"485":{"position":[[2272,2]]},"505":{"position":[[2546,2]]},"521":{"position":[[1995,2]]},"523":{"position":[[2482,2]]},"537":{"position":[[2232,2]]},"541":{"position":[[2231,2]]},"543":{"position":[[2090,2]]},"547":{"position":[[1958,2]]},"622":{"position":[[2456,2]]},"630":{"position":[[2435,2]]},"634":{"position":[[2092,2]]},"646":{"position":[[2141,2]]},"648":{"position":[[7881,2],[13332,2]]},"660":{"position":[[5607,2]]},"668":{"position":[[6795,2]]},"670":{"position":[[3184,2]]},"672":{"position":[[5146,2]]},"692":{"position":[[2378,2],[7342,2],[12728,2]]},"694":{"position":[[5364,2]]},"696":{"position":[[4931,2],[11126,2]]},"698":{"position":[[5306,2]]},"718":{"position":[[4053,2],[14479,2],[31050,2]]},"722":{"position":[[9300,2],[15592,2],[21473,2],[27328,2],[32811,2],[37942,2]]},"734":{"position":[[5677,2]]},"740":{"position":[[12671,2]]},"742":{"position":[[12611,2],[19605,2]]},"744":{"position":[[3489,2]]},"746":{"position":[[9365,2]]},"767":{"position":[[4023,2],[12891,2],[19932,2]]},"786":{"position":[[3698,2],[13797,2]]},"788":{"position":[[4731,2]]},"790":{"position":[[2216,2],[7804,2]]},"792":{"position":[[5035,2],[17462,2]]},"809":{"position":[[3701,2],[13832,2]]},"811":{"position":[[4782,2]]},"813":{"position":[[4261,2]]},"815":{"position":[[5535,2]]}}}],["_object",{"_index":2146,"t":{"670":{"position":[[7767,8],[10594,8]]},"744":{"position":[[11409,8],[11492,8],[17867,8],[17950,8]]}}}],["_thi",{"_index":595,"t":{"68":{"position":[[502,5],[626,5]]}}}],["a/an",{"_index":1566,"t":{"401":{"position":[[607,4]]}}}],["a/an/th",{"_index":1562,"t":{"401":{"position":[[430,8]]}}}],["a/th",{"_index":1554,"t":{"399":{"position":[[2113,5],[2158,5]]}}}],["abac",{"_index":6,"t":{"2":{"position":[[71,5]]},"10":{"position":[[504,5]]}}}],["abc",{"_index":1736,"t":{"437":{"position":[[522,3],[565,3],[1600,3],[2014,3]]}}}],["abil",{"_index":1358,"t":{"290":{"position":[[11,7]]},"312":{"position":[[10354,7]]},"654":{"position":[[396,7]]},"712":{"position":[[156,7],[330,10]]},"728":{"position":[[428,7]]},"792":{"position":[[8451,7]]},"813":{"position":[[8026,7]]}}}],["abov",{"_index":532,"t":{"56":{"position":[[1850,6]]},"58":{"position":[[635,5],[1339,6]]},"60":{"position":[[1275,5],[1909,6]]},"62":{"position":[[531,6],[935,5]]},"64":{"position":[[608,6],[999,5]]},"66":{"position":[[635,6],[1098,5]]},"92":{"position":[[95,6]]},"140":{"position":[[240,5]]},"142":{"position":[[726,6],[3419,6]]},"221":{"position":[[1240,5]]},"232":{"position":[[9,5]]},"245":{"position":[[234,6]]},"263":{"position":[[848,6]]},"273":{"position":[[46,5]]},"312":{"position":[[9,5]]},"347":{"position":[[1218,6]]},"365":{"position":[[48,6]]},"399":{"position":[[4265,5]]},"401":{"position":[[3387,5]]},"419":{"position":[[2235,5]]},"423":{"position":[[15,6]]},"425":{"position":[[294,6]]},"427":{"position":[[568,5]]},"445":{"position":[[9,5]]},"487":{"position":[[9,5]]},"539":{"position":[[1128,6]]},"605":{"position":[[49,6],[24793,6]]},"660":{"position":[[3097,5]]},"664":{"position":[[39,6]]},"666":{"position":[[59,6]]},"718":{"position":[[1694,5]]},"722":{"position":[[1627,6],[2724,5]]},"734":{"position":[[2531,5]]},"738":{"position":[[39,6]]},"740":{"position":[[59,6]]},"742":{"position":[[1119,5],[23290,5]]},"744":{"position":[[826,5]]},"765":{"position":[[283,6],[357,6]]},"769":{"position":[[27984,6],[28545,5]]},"809":{"position":[[1456,5]]},"813":{"position":[[1847,6]]}}}],["academi",{"_index":140,"t":{"14":{"position":[[409,8]]},"68":{"position":[[2747,8]]}}}],["accept",{"_index":194,"t":{"16":{"position":[[3000,8]]},"52":{"position":[[452,8]]},"68":{"position":[[16,8]]},"80":{"position":[[7287,7]]},"399":{"position":[[4310,8]]},"401":{"position":[[3432,8]]},"403":{"position":[[6777,7],[10504,7]]},"431":{"position":[[194,6],[541,8]]},"650":{"position":[[460,6]]}}}],["access",{"_index":74,"t":{"8":{"position":[[67,6],[288,6],[383,6],[493,6]]},"10":{"position":[[14,6],[170,6]]},"14":{"position":[[119,6]]},"16":{"position":[[4484,7],[5200,7],[7508,7],[9468,7],[29506,8],[29545,6],[30300,6]]},"48":{"position":[[30,6]]},"50":{"position":[[151,6]]},"56":{"position":[[1723,6]]},"60":{"position":[[3131,6]]},"70":{"position":[[280,6],[313,6]]},"82":{"position":[[274,6]]},"92":{"position":[[419,6]]},"96":{"position":[[191,6],[788,6]]},"98":{"position":[[4451,6],[5422,6]]},"112":{"position":[[2744,6]]},"124":{"position":[[2744,6]]},"146":{"position":[[252,10]]},"190":{"position":[[2744,6]]},"196":{"position":[[92,6],[130,6],[181,6],[229,6]]},"200":{"position":[[12,6],[64,6],[116,6],[159,6]]},"202":{"position":[[59,6],[329,6],[392,6],[457,6],[565,6]]},"204":{"position":[[1026,6]]},"206":{"position":[[61,6]]},"219":{"position":[[181,6],[256,6],[343,6],[435,6],[611,6]]},"221":{"position":[[21944,6],[21993,7],[22038,6]]},"223":{"position":[[61,6]]},"225":{"position":[[37,6]]},"230":{"position":[[171,6]]},"234":{"position":[[145,6],[179,7]]},"236":{"position":[[49,6],[101,6]]},"238":{"position":[[635,7],[745,6]]},"240":{"position":[[102,6]]},"249":{"position":[[60,7],[75,6],[121,6],[163,6],[211,7]]},"257":{"position":[[2720,6]]},"263":{"position":[[131,6],[337,8]]},"267":{"position":[[190,6]]},"271":{"position":[[72,6],[222,7]]},"273":{"position":[[211,6],[273,6],[604,6],[685,6],[817,6],[1050,6],[1139,6],[1228,6],[2031,6],[2113,6],[2842,6],[3016,6],[3098,6],[3273,6],[3366,6],[3587,6]]},"275":{"position":[[82,6],[121,6],[240,6],[396,7],[437,6],[524,6],[661,6]]},"279":{"position":[[1140,7],[1250,6],[1300,7],[1345,6]]},"281":{"position":[[102,6]]},"283":{"position":[[37,6]]},"296":{"position":[[126,6],[189,6],[287,6],[505,6],[631,6],[707,6],[754,6],[901,7]]},"304":{"position":[[60,9],[126,9],[279,6],[309,6],[679,6],[743,6],[797,6]]},"306":{"position":[[1655,6]]},"308":{"position":[[61,6]]},"312":{"position":[[10384,7],[10520,7],[10656,9],[10935,6]]},"314":{"position":[[36,9]]},"318":{"position":[[155,6],[5761,6],[10953,7],[10989,6],[16178,6],[16204,6]]},"320":{"position":[[224,6],[256,7]]},"328":{"position":[[1158,6]]},"330":{"position":[[61,6]]},"343":{"position":[[369,6]]},"351":{"position":[[125,6]]},"353":{"position":[[555,6],[800,6]]},"355":{"position":[[257,6],[471,6],[1167,6]]},"357":{"position":[[111,6]]},"359":{"position":[[61,6]]},"365":{"position":[[1037,6]]},"377":{"position":[[49,6],[131,6]]},"383":{"position":[[51,6]]},"391":{"position":[[30,6]]},"393":{"position":[[385,6]]},"401":{"position":[[156,6]]},"409":{"position":[[203,6],[236,6]]},"415":{"position":[[643,6]]},"425":{"position":[[48,6],[1547,6],[3047,6]]},"427":{"position":[[344,7]]},"429":{"position":[[408,6]]},"435":{"position":[[626,7]]},"437":{"position":[[657,6],[2442,6]]},"439":{"position":[[30,6]]},"451":{"position":[[65,7],[217,6],[249,7]]},"453":{"position":[[670,6],[832,6],[937,6]]},"455":{"position":[[919,7],[1029,6]]},"457":{"position":[[102,6]]},"461":{"position":[[84,6],[117,6]]},"471":{"position":[[6138,6]]},"473":{"position":[[396,6]]},"475":{"position":[[49,6],[122,7],[149,6],[214,6],[293,6]]},"477":{"position":[[688,7],[798,6],[1449,7]]},"479":{"position":[[102,6]]},"481":{"position":[[599,7]]},"485":{"position":[[78,7],[108,6],[5490,6]]},"491":{"position":[[292,6],[1191,6]]},"493":{"position":[[778,7],[888,6],[1649,6]]},"495":{"position":[[102,6]]},"497":{"position":[[709,6]]},"509":{"position":[[73,6],[347,6],[410,6],[475,6],[583,6]]},"511":{"position":[[666,7],[776,6]]},"513":{"position":[[102,6]]},"517":{"position":[[443,6]]},"529":{"position":[[49,6],[147,6]]},"531":{"position":[[619,7],[729,6]]},"533":{"position":[[102,6]]},"553":{"position":[[1090,7],[1200,6]]},"555":{"position":[[102,6]]},"574":{"position":[[201,7]]},"581":{"position":[[234,6]]},"585":{"position":[[607,6]]},"587":{"position":[[465,6]]},"593":{"position":[[176,6],[207,7],[317,6]]},"595":{"position":[[102,6]]},"599":{"position":[[421,6]]},"605":{"position":[[1040,6],[6637,6],[13031,7]]},"609":{"position":[[105,6],[432,6]]},"613":{"position":[[973,6]]},"615":{"position":[[61,6]]},"628":{"position":[[173,7],[423,9],[717,9],[1034,7],[1112,6],[1135,6],[1172,6],[1401,6],[1792,6],[2022,6]]},"632":{"position":[[890,9],[1883,9],[3083,9],[4970,9],[4990,8],[5178,6]]},"634":{"position":[[5379,6],[6260,9],[7254,9],[8455,9],[10345,9],[10365,8]]},"636":{"position":[[161,6]]},"646":{"position":[[5358,7]]},"648":{"position":[[16748,7]]},"654":{"position":[[49,6],[160,6],[308,6],[407,6],[568,6],[680,6]]},"660":{"position":[[296,6],[402,6],[720,6]]},"668":{"position":[[223,6],[460,6],[2660,6]]},"670":{"position":[[436,6]]},"674":{"position":[[282,6]]},"678":{"position":[[268,7],[378,6]]},"684":{"position":[[49,6],[182,6],[272,6],[324,6]]},"686":{"position":[[245,6],[294,6],[351,6],[463,6]]},"688":{"position":[[63,6]]},"690":{"position":[[46,6]]},"692":{"position":[[52,6],[101,6],[274,6],[338,6],[16523,6]]},"694":{"position":[[2531,6],[2582,6]]},"696":{"position":[[175,6],[227,6]]},"698":{"position":[[387,6],[2541,6],[2590,6],[2944,6]]},"702":{"position":[[203,6]]},"706":{"position":[[268,7],[378,6]]},"712":{"position":[[355,6]]},"714":{"position":[[643,6]]},"716":{"position":[[255,6],[331,6]]},"718":{"position":[[1328,6]]},"722":{"position":[[1053,6],[1158,6],[1243,6]]},"728":{"position":[[340,6],[439,6],[595,6],[707,6]]},"734":{"position":[[205,6]]},"742":{"position":[[4387,6],[17298,7]]},"750":{"position":[[176,7]]},"754":{"position":[[586,6],[864,8]]},"758":{"position":[[307,6],[583,6]]},"762":{"position":[[529,6],[571,6],[625,6],[674,6],[716,6],[771,6],[823,6],[868,6],[926,6]]},"769":{"position":[[93,6],[276,7],[1071,9],[2063,9],[3262,9],[5146,9],[5166,8],[5429,7],[5595,7],[5681,9],[5816,9],[5895,6],[6659,7],[6911,9],[7046,9],[7604,7],[8406,9],[9394,9],[10589,9],[12461,9],[12481,8],[12784,6],[12909,7],[13755,9],[14752,9],[15956,9],[17864,9],[17884,8],[18931,6],[19045,7],[19166,9],[19453,9],[19560,6],[19625,6],[19776,7],[19889,6],[20034,9],[20355,6],[20560,6],[20640,9],[21151,6],[21271,6],[21596,7],[21890,9],[22177,9],[22692,7],[23503,9],[24499,9],[25702,9],[27607,9],[27627,8],[28046,6],[28163,8],[28227,8],[28283,6],[28567,6],[28732,7],[29082,9],[29376,9],[30015,6],[30362,7],[31157,9],[32144,9],[33338,9],[35207,9],[35227,8],[35628,6],[35761,9],[36009,7],[36137,9],[36431,9],[36583,7],[36701,9],[37070,9],[37167,7],[37687,7],[38027,9],[38919,6],[38961,6],[39015,6],[39064,6],[39106,6],[39161,6],[39213,6],[39258,6],[39316,6],[40144,9],[41131,9],[42325,9],[44194,9],[44214,8],[44500,6],[44544,7],[44579,6],[44626,7],[44654,6],[44695,7],[44726,6],[44770,7],[44805,6],[44852,7],[44881,6],[44922,7],[44956,6],[45003,7],[45041,6],[45091,7],[45123,6],[45167,7]]},"775":{"position":[[665,6],[703,6]]},"781":{"position":[[256,6],[322,6],[464,6],[509,6]]},"786":{"position":[[1122,6]]},"790":{"position":[[83,6]]},"792":{"position":[[91,9]]},"796":{"position":[[260,6],[870,6],[999,6]]},"798":{"position":[[654,6],[683,6],[739,7]]},"809":{"position":[[1092,6]]},"815":{"position":[[394,6],[500,6]]},"817":{"position":[[143,6]]}}}],["accomplish",{"_index":1233,"t":{"230":{"position":[[234,10]]},"447":{"position":[[141,12]]}}}],["accord",{"_index":427,"t":{"16":{"position":[[16634,9],[22246,9],[27990,9]]},"80":{"position":[[6593,9]]},"112":{"position":[[2774,9]]},"124":{"position":[[2774,9]]},"190":{"position":[[2774,9]]},"213":{"position":[[4425,9]]},"215":{"position":[[4466,9],[9639,9]]},"221":{"position":[[5755,9],[10950,9],[16174,9],[21205,9]]},"230":{"position":[[4684,9]]},"232":{"position":[[4513,9]]},"245":{"position":[[4726,9]]},"247":{"position":[[4427,9],[9502,9]]},"257":{"position":[[2750,9]]},"263":{"position":[[524,9]]},"288":{"position":[[4496,9],[9405,9],[15456,9]]},"312":{"position":[[4609,9],[9635,9]]},"318":{"position":[[4928,9],[10213,9],[15447,9]]},"338":{"position":[[4671,9]]},"345":{"position":[[5575,9]]},"369":{"position":[[5287,9],[10535,9]]},"371":{"position":[[5629,9]]},"373":{"position":[[4447,9]]},"385":{"position":[[4535,9]]},"387":{"position":[[4571,9],[9825,9]]},"405":{"position":[[2435,9]]},"423":{"position":[[57,9]]},"445":{"position":[[4621,9],[9668,9]]},"449":{"position":[[4585,9],[9800,9]]},"467":{"position":[[4454,9]]},"469":{"position":[[4775,9]]},"471":{"position":[[4644,9]]},"485":{"position":[[4847,9]]},"487":{"position":[[4760,9]]},"505":{"position":[[5307,9],[10479,9],[15894,9],[21008,9],[26048,9]]},"521":{"position":[[4471,9]]},"523":{"position":[[5111,9]]},"525":{"position":[[4712,9]]},"537":{"position":[[4827,9]]},"541":{"position":[[4818,9]]},"543":{"position":[[4564,9]]},"545":{"position":[[4401,9],[9347,9]]},"547":{"position":[[4416,9],[9340,9]]},"562":{"position":[[4600,9]]},"569":{"position":[[5048,9],[10523,9],[15979,9]]},"571":{"position":[[4779,9]]},"576":{"position":[[4752,9],[10086,9]]},"583":{"position":[[5035,9]]},"605":{"position":[[5732,9],[11325,9],[17579,9],[23822,9],[29483,9]]},"607":{"position":[[5581,9],[11262,9],[17015,9],[22757,9]]},"622":{"position":[[5163,9]]},"624":{"position":[[4590,9]]},"630":{"position":[[5356,9]]},"632":{"position":[[4487,9]]},"634":{"position":[[4709,9],[9861,9],[14923,9]]},"644":{"position":[[5245,9],[10278,9]]},"646":{"position":[[4718,9],[9758,9]]},"648":{"position":[[4834,9],[10526,9],[15979,9],[21199,9],[26273,9]]},"668":{"position":[[9406,9]]},"670":{"position":[[5851,9]]},"692":{"position":[[4866,9],[9838,9],[15544,9],[21116,9],[26226,9]]},"694":{"position":[[8303,9],[13739,9]]},"696":{"position":[[7612,9],[14231,9],[19982,9]]},"698":{"position":[[8128,9],[13711,9]]},"718":{"position":[[6658,9],[11741,9],[17084,9],[22124,9],[27308,9],[34187,9],[39694,9]]},"720":{"position":[[4503,9],[11199,9]]},"722":{"position":[[12270,9],[18335,9],[24321,9],[30007,9],[35359,9],[40456,9],[45607,9],[50759,9]]},"734":{"position":[[9252,9]]},"740":{"position":[[4783,9],[9910,9],[15278,9],[20254,9]]},"742":{"position":[[8882,9],[15986,9],[22474,9],[27792,9]]},"744":{"position":[[6468,9],[13089,9],[19549,9]]},"746":{"position":[[15580,9]]},"767":{"position":[[8268,9],[16168,9],[23069,9],[29359,9],[34542,9],[39590,9],[44652,9]]},"769":{"position":[[4664,9],[11983,9],[12724,9],[17359,9],[27103,9],[34730,9],[43717,9]]},"786":{"position":[[6188,9],[11194,9],[16287,9],[21250,9],[26298,9],[33445,9],[38489,9]]},"788":{"position":[[7694,9],[13197,9]]},"790":{"position":[[4754,9],[10405,9],[15392,9]]},"792":{"position":[[7710,9],[13387,9],[19996,9]]},"809":{"position":[[6197,9],[11224,9],[16320,9],[21277,9],[26322,9],[32953,9],[37994,9]]},"811":{"position":[[7961,9],[13672,9]]},"813":{"position":[[7164,9],[12814,9]]},"815":{"position":[[8800,9],[14346,9],[19523,9],[24637,9],[29828,9],[34934,9]]}}}],["accordingli",{"_index":1639,"t":{"405":{"position":[[3970,12]]},"769":{"position":[[21184,11]]}}}],["account",{"_index":1688,"t":{"425":{"position":[[1534,8],[1604,10]]},"571":{"position":[[175,8]]},"611":{"position":[[612,7]]},"654":{"position":[[584,7]]},"672":{"position":[[9698,8]]},"728":{"position":[[611,7]]},"734":{"position":[[160,7],[225,7],[281,7],[334,7],[616,7],[835,8],[844,9],[883,7],[1155,10],[1871,10],[1972,9],[2079,10],[2135,9],[2207,7],[2285,7],[2357,7],[2405,7],[3286,7],[3446,7],[3601,7],[3733,7],[3759,7],[3827,10],[4800,7],[5016,7],[5227,7],[5415,7],[5441,7],[6807,7],[6977,7],[7142,7],[7284,7],[7310,7],[7386,10],[8474,7],[8640,7],[8801,7],[8939,7],[8965,7],[9919,7],[10083,7],[10242,7],[10378,7],[10404,7]]},"738":{"position":[[223,7],[235,7],[280,7]]},"740":{"position":[[170,7],[194,7],[239,7],[361,7],[383,7],[5521,8],[10609,7],[11367,7],[12421,7],[13800,7],[14977,7],[15707,7]]},"742":{"position":[[894,8],[1029,8],[2349,9],[2751,7],[2803,7],[3085,10],[4176,9]]},"746":{"position":[[342,7],[648,8],[657,9],[696,7],[1687,10],[2692,10],[2793,9],[2900,10],[2956,9],[4014,7],[4174,7],[4329,7],[4461,7],[4487,7],[4555,10],[6784,7],[7000,7],[7211,7],[7399,7],[7425,7],[10495,7],[10665,7],[10830,7],[10972,7],[10998,7],[11074,10],[13498,7],[13664,7],[13825,7],[13963,7],[13989,7],[16946,7],[17110,7],[17269,7],[17405,7],[17431,7],[19201,8]]},"748":{"position":[[555,7],[861,8],[870,9],[909,7],[2154,10],[3159,10],[3260,9],[3367,10],[3423,9]]}}}],["account:check",{"_index":2358,"t":{"734":{"position":[[3520,17],[3696,17],[3793,17],[7060,17],[7246,17],[7351,17]]},"746":{"position":[[4248,17],[4424,17],[4521,17],[10748,17],[10934,17],[11039,17]]}}}],["account_manag",{"_index":2348,"t":{"734":{"position":[[587,16],[665,16],[682,15],[761,15],[995,18],[1061,18],[1207,18],[1347,17],[1548,17],[3357,18],[6886,18]]},"740":{"position":[[11438,18],[13879,18]]},"742":{"position":[[1328,16],[1570,18],[2075,18],[2418,17],[2852,16],[2869,15],[2952,15],[3137,18],[3277,17],[3436,17]]},"746":{"position":[[130,16],[391,16],[408,15],[491,15],[904,18],[1409,18],[1739,18],[1879,17],[2038,17],[4085,18],[10574,18]]},"748":{"position":[[343,16],[604,16],[621,15],[704,15],[1304,18],[1876,18],[2206,18],[2346,17],[2505,17]]}}}],["account_manager_view",{"_index":2417,"t":{"742":{"position":[[2369,24],[2560,22],[2668,24],[2928,23],[3028,22],[3330,25],[3760,24]]},"746":{"position":[[467,23],[567,22],[1932,25],[2362,24]]},"748":{"position":[[680,23],[780,22],[2399,25],[2829,24]]}}}],["achiev",{"_index":1615,"t":{"403":{"position":[[7271,7],[8428,7],[8882,7],[9229,7]]},"628":{"position":[[1186,8]]},"790":{"position":[[210,7]]}}}],["action",{"_index":55,"t":{"6":{"position":[[146,6]]},"263":{"position":[[638,7]]},"393":{"position":[[594,6],[781,6],[855,6],[1158,6]]},"395":{"position":[[106,6],[153,7]]},"397":{"position":[[50,6],[75,7],[1229,6],[1236,8]]},"399":{"position":[[245,6],[252,8],[4406,6],[4436,6]]},"401":{"position":[[555,6],[574,8],[593,8]]},"403":{"position":[[252,6]]},"405":{"position":[[283,6],[511,6],[1576,6]]},"435":{"position":[[114,7],[469,7]]},"503":{"position":[[512,7]]},"658":{"position":[[921,8]]},"660":{"position":[[637,8]]},"670":{"position":[[12248,6]]},"674":{"position":[[205,8]]},"676":{"position":[[184,6]]},"682":{"position":[[272,6]]},"690":{"position":[[241,6],[354,7],[383,7]]},"694":{"position":[[75,7],[2786,7]]},"698":{"position":[[92,7]]},"716":{"position":[[93,6]]},"732":{"position":[[923,8]]},"750":{"position":[[324,8]]}}}],["actual",{"_index":1677,"t":{"423":{"position":[[584,8]]}}}],["ad",{"_index":83,"t":{"8":{"position":[[278,5]]},"16":{"position":[[28909,5]]},"46":{"position":[[41,5]]},"56":{"position":[[451,5],[664,5]]},"84":{"position":[[117,6]]},"96":{"position":[[1142,5]]},"202":{"position":[[102,6]]},"219":{"position":[[77,6]]},"221":{"position":[[6440,6]]},"245":{"position":[[249,5]]},"251":{"position":[[220,5],[332,6]]},"253":{"position":[[246,5],[568,5],[1436,5]]},"318":{"position":[[320,6],[5622,5]]},"369":{"position":[[11,5],[176,6]]},"385":{"position":[[124,6]]},"387":{"position":[[32,5]]},"397":{"position":[[2606,5]]},"399":{"position":[[1646,5],[3488,5]]},"401":{"position":[[1978,5]]},"403":{"position":[[963,5]]},"407":{"position":[[74,6]]},"415":{"position":[[401,6],[435,6],[954,5]]},"435":{"position":[[547,6]]},"487":{"position":[[37,6],[205,6]]},"499":{"position":[[180,6],[354,6]]},"503":{"position":[[173,6]]},"509":{"position":[[120,6]]},"539":{"position":[[935,5],[986,5]]},"541":{"position":[[87,6]]},"601":{"position":[[81,6]]},"611":{"position":[[388,5]]},"624":{"position":[[32,5]]},"658":{"position":[[479,5]]},"664":{"position":[[339,6]]},"668":{"position":[[610,6]]},"692":{"position":[[16443,6]]},"694":{"position":[[2720,6]]},"696":{"position":[[15404,5]]},"698":{"position":[[2975,6]]},"702":{"position":[[4,6]]},"722":{"position":[[1577,6],[19914,5],[21080,5],[22627,5],[23926,5],[24833,5],[41056,5]]},"726":{"position":[[4,6],[80,6]]},"732":{"position":[[480,5]]},"742":{"position":[[9617,5],[17186,5]]},"744":{"position":[[930,6]]},"767":{"position":[[24913,6]]},"769":{"position":[[5915,5],[7482,6],[20438,6],[21015,5],[35693,6],[36995,5]]},"788":{"position":[[56,6],[2296,6]]},"790":{"position":[[257,6]]},"792":{"position":[[677,6],[2777,5],[14779,5]]},"813":{"position":[[1802,5],[1887,6],[14278,5]]}}}],["add",{"_index":478,"t":{"16":{"position":[[29973,3]]},"94":{"position":[[427,3]]},"96":{"position":[[1881,3]]},"98":{"position":[[3091,3]]},"102":{"position":[[184,3],[912,3]]},"104":{"position":[[22,3]]},"188":{"position":[[24,3]]},"192":{"position":[[3,3]]},"204":{"position":[[989,3]]},"206":{"position":[[24,3]]},"211":{"position":[[166,3]]},"219":{"position":[[597,3],[649,3]]},"221":{"position":[[21907,3]]},"223":{"position":[[24,3]]},"245":{"position":[[103,3]]},"259":{"position":[[2861,3]]},"288":{"position":[[17,3]]},"306":{"position":[[1618,3]]},"308":{"position":[[24,3]]},"314":{"position":[[128,3],[926,3]]},"318":{"position":[[39,3]]},"328":{"position":[[1121,3]]},"330":{"position":[[24,3]]},"351":{"position":[[82,3],[139,3]]},"355":{"position":[[1130,3]]},"359":{"position":[[24,3]]},"365":{"position":[[1154,3]]},"367":{"position":[[1159,3]]},"385":{"position":[[7,3]]},"399":{"position":[[2006,3],[3827,3],[3868,3]]},"417":{"position":[[65,3],[217,3]]},"421":{"position":[[405,3]]},"423":{"position":[[892,3],[3018,3],[3291,3]]},"425":{"position":[[2608,3],[3334,3],[3500,3]]},"445":{"position":[[10541,3]]},"447":{"position":[[21,3]]},"451":{"position":[[114,3]]},"475":{"position":[[245,3]]},"491":{"position":[[1590,3]]},"503":{"position":[[405,3],[449,3]]},"505":{"position":[[1037,3],[1137,3],[2160,3],[2316,3],[3664,3],[3774,3],[4920,3],[5026,3],[5774,3],[5878,3],[11458,3],[16595,3]]},"509":{"position":[[36,3]]},"517":{"position":[[330,3]]},"527":{"position":[[109,3]]},"537":{"position":[[171,3],[5498,3],[5550,3]]},"541":{"position":[[24,3]]},"543":{"position":[[110,3],[155,3]]},"613":{"position":[[936,3]]},"615":{"position":[[24,3]]},"630":{"position":[[45,3]]},"646":{"position":[[134,3]]},"668":{"position":[[44,3],[407,3],[2439,3]]},"678":{"position":[[1063,3]]},"692":{"position":[[458,3],[5411,3],[10406,3]]},"694":{"position":[[22,3],[2859,3]]},"696":{"position":[[8465,3]]},"698":{"position":[[2852,3]]},"702":{"position":[[51,3]]},"722":{"position":[[6640,3]]},"726":{"position":[[255,3]]},"742":{"position":[[44,3],[104,3],[792,3],[918,3],[1053,3],[2365,3],[4186,3],[9525,3],[9713,3],[17247,3]]},"765":{"position":[[132,3]]},"767":{"position":[[12,3]]},"769":{"position":[[5504,3],[20547,3],[28363,3]]},"788":{"position":[[230,3],[289,3],[724,3],[2229,3]]},"790":{"position":[[5720,3]]},"792":{"position":[[805,3]]},"798":{"position":[[771,3]]},"811":{"position":[[208,3],[265,3],[2023,3]]},"813":{"position":[[378,3]]},"815":{"position":[[2761,3]]}}}],["add/view",{"_index":1793,"t":{"491":{"position":[[508,8]]},"503":{"position":[[680,8]]}}}],["addit",{"_index":481,"t":{"16":{"position":[[30169,9]]},"204":{"position":[[896,9]]},"238":{"position":[[581,9]]},"279":{"position":[[1086,9]]},"306":{"position":[[1525,9]]},"328":{"position":[[1028,9]]},"355":{"position":[[1029,9]]},"379":{"position":[[724,9]]},"437":{"position":[[2334,9]]},"455":{"position":[[865,9]]},"471":{"position":[[69,8]]},"477":{"position":[[634,9]]},"493":{"position":[[724,9]]},"511":{"position":[[612,9]]},"531":{"position":[[565,9]]},"553":{"position":[[1036,9]]},"589":{"position":[[15,10]]},"613":{"position":[[843,9]]},"788":{"position":[[683,9]]},"792":{"position":[[592,8]]},"811":{"position":[[320,9]]}}}],["addition",{"_index":2399,"t":{"740":{"position":[[10567,13]]}}}],["addr",{"_index":1028,"t":{"148":{"position":[[524,4],[661,4]]},"156":{"position":[[311,4]]}}}],["addr=0.0.0.0:2114",{"_index":1083,"t":{"156":{"position":[[401,17]]}}}],["address",{"_index":1077,"t":{"156":{"position":[[77,7],[272,8]]},"158":{"position":[[234,7],[276,7]]},"296":{"position":[[1090,8]]},"654":{"position":[[524,8]]},"694":{"position":[[500,7]]},"728":{"position":[[193,8],[551,8]]},"738":{"position":[[361,7]]},"742":{"position":[[60,7],[173,7],[481,7],[539,7],[978,7],[1390,7],[2231,7],[4324,7],[4464,7],[9588,7],[10787,7],[10850,7],[12321,7],[12399,7],[14088,7],[14158,7],[15645,7],[15705,7],[16435,7],[16950,7],[17014,7],[17221,7],[18038,7],[18103,7],[19215,7],[19331,7],[20773,7],[20847,7],[22083,7],[22143,7],[22792,7],[23008,7],[23076,7]]},"744":{"position":[[215,8],[1024,7],[1840,7],[1905,7],[3072,7],[3188,7],[4685,7],[4759,7],[6050,7],[6110,7],[6787,7],[7031,7],[7099,7],[7708,7],[8687,7],[9952,7],[11422,7],[12769,7],[13551,7],[13960,7],[14164,7],[15143,7],[16409,7],[17880,7],[19228,7],[20011,7],[20421,7]]},"746":{"position":[[192,7],[756,7],[1565,7],[3158,7],[5689,7],[5752,7],[9075,7],[9153,7],[12280,7],[12350,7],[15239,7],[15299,7],[16766,7],[18665,7],[18729,7]]},"748":{"position":[[405,7],[969,7],[2032,7],[3625,7]]}}}],["adjust",{"_index":1074,"t":{"154":{"position":[[375,6]]},"158":{"position":[[610,6]]}}}],["admin",{"_index":1425,"t":{"340":{"position":[[239,6]]},"453":{"position":[[764,5],[826,5]]},"491":{"position":[[801,5]]},"507":{"position":[[354,6]]},"531":{"position":[[235,5],[313,6],[429,8],[485,8]]},"537":{"position":[[51,5],[919,8],[978,8],[3386,8],[3455,8],[5508,5]]},"539":{"position":[[138,6],[344,8],[662,8],[1052,5],[1096,5],[1321,5]]},"543":{"position":[[73,5]]},"545":{"position":[[32,5],[861,8],[1840,8],[3026,8],[4872,8],[4891,7],[5807,8],[6786,8],[7972,8],[9818,8],[9837,7]]},"547":{"position":[[56,5],[4991,5],[5796,8],[6776,8],[7963,8],[9812,8],[9831,7]]},"660":{"position":[[631,5]]},"678":{"position":[[616,6],[1013,6]]},"684":{"position":[[105,6],[377,7]]},"686":{"position":[[283,5],[452,5]]},"690":{"position":[[102,6],[318,5]]},"692":{"position":[[90,5],[177,6]]},"694":{"position":[[179,6],[2570,6],[2650,6]]},"696":{"position":[[291,6],[2751,5],[8457,7]]},"704":{"position":[[474,6],[536,6]]},"712":{"position":[[482,6],[528,6],[906,6],[1162,6]]},"714":{"position":[[297,5],[391,5]]},"716":{"position":[[631,5],[683,5],[1780,5],[1810,5]]},"718":{"position":[[2756,5],[3809,5],[5187,5],[6363,5],[7092,5],[28076,5],[29143,5],[30446,5],[32186,5],[33632,5],[34772,5]]},"748":{"position":[[280,6],[1115,8],[1171,8]]},"773":{"position":[[402,6],[1170,5],[1208,5]]},"775":{"position":[[659,5],[697,5]]},"781":{"position":[[165,7],[296,6],[458,5],[503,5]]},"783":{"position":[[340,6],[362,6],[568,6]]},"786":{"position":[[438,6],[663,8],[1000,8],[27411,5],[27424,6],[27950,7],[27969,8],[28306,8]]},"788":{"position":[[1009,5],[1022,6],[1560,7],[1579,8],[2084,8],[2263,5],[3199,6],[3278,8],[4479,6],[6038,6],[6125,8],[7391,6],[8391,6],[9595,8],[10590,8],[11792,8],[13688,8],[13707,7]]},"790":{"position":[[5779,6],[11796,8],[12789,8],[13989,8],[15877,8],[15896,7]]},"792":{"position":[[1459,5],[1472,6],[2019,7],[2038,8],[2568,8],[8646,6],[8685,5],[8736,5],[9774,8],[10771,8],[11975,8],[13874,8],[13893,7],[14185,6],[14243,8],[14438,5],[14508,9],[14578,7],[14602,6],[20696,6],[20745,5],[20823,5],[21315,8],[21419,7],[21566,7],[22827,8]]}}}],["administ",{"_index":256,"t":{"16":{"position":[[5506,10]]},"529":{"position":[[322,11]]}}}],["administr",{"_index":1461,"t":{"365":{"position":[[391,13],[886,13]]},"712":{"position":[[315,14],[410,14],[566,13],[632,14],[847,14]]}}}],["advanc",{"_index":485,"t":{"16":{"position":[[30311,8]]},"58":{"position":[[2219,8]]},"60":{"position":[[3490,8],[3523,8],[3554,8]]},"62":{"position":[[1607,8]]},"96":{"position":[[1866,8]]},"98":{"position":[[3076,8]]},"296":{"position":[[1437,8],[1464,8]]},"298":{"position":[[26,8]]},"626":{"position":[[38,8]]},"630":{"position":[[900,8],[2159,8],[3697,8],[5029,8],[5997,8]]},"634":{"position":[[775,8],[1834,8],[3218,8],[4400,8],[5144,8]]},"636":{"position":[[89,8]]}}}],["advantag",{"_index":1148,"t":{"178":{"position":[[238,11]]},"491":{"position":[[992,10]]}}}],["affect",{"_index":216,"t":{"16":{"position":[[3765,6],[3917,6],[8591,6]]},"355":{"position":[[1322,6]]},"361":{"position":[[80,6]]},"427":{"position":[[672,6]]},"431":{"position":[[224,8]]},"453":{"position":[[123,6]]},"491":{"position":[[1340,9]]},"605":{"position":[[989,7]]},"607":{"position":[[849,7],[18000,8]]},"658":{"position":[[723,6]]},"732":{"position":[[725,6]]},"750":{"position":[[162,6]]},"754":{"position":[[382,6]]},"775":{"position":[[551,6]]},"798":{"position":[[551,6]]}}}],["aforement",{"_index":1616,"t":{"403":{"position":[[8082,14]]},"790":{"position":[[222,14]]}}}],["again",{"_index":2598,"t":{"769":{"position":[[7612,6],[22700,6]]}}}],["against",{"_index":613,"t":{"74":{"position":[[643,7],[766,7]]},"273":{"position":[[2697,7],[3673,7]]},"415":{"position":[[1169,7]]},"431":{"position":[[491,7]]}}}],["algorithm",{"_index":740,"t":{"96":{"position":[[557,10]]}}}],["alic",{"_index":1812,"t":{"505":{"position":[[314,5],[1141,5],[2320,5],[3778,5],[5030,5],[5882,5],[16569,5],[26705,5],[26795,5]]},"521":{"position":[[95,5]]},"525":{"position":[[55,5],[225,5],[5426,5],[5531,5]]}}}],["all_objects_view",{"_index":2601,"t":{"769":{"position":[[18323,20],[18598,18],[18796,18]]}}}],["allot",{"_index":1953,"t":{"585":{"position":[[58,8]]}}}],["allow",{"_index":119,"t":{"12":{"position":[[6,6]]},"16":{"position":[[2821,5],[5800,6],[6325,6],[8351,7],[9170,5],[9638,5],[9997,6],[10286,6],[10392,6],[10402,7],[11193,6],[12904,7],[13089,7],[14182,8],[17647,10],[17702,10],[18516,7],[18701,7],[19794,8]]},"40":{"position":[[174,6],[463,6]]},"54":{"position":[[3853,6]]},"56":{"position":[[78,6]]},"58":{"position":[[1236,6]]},"60":{"position":[[2971,5],[3087,5]]},"62":{"position":[[1467,11]]},"64":{"position":[[1444,11]]},"66":{"position":[[1479,11]]},"94":{"position":[[262,6]]},"96":{"position":[[137,6]]},"98":{"position":[[1349,7],[1480,10]]},"114":{"position":[[130,7],[305,7],[618,8],[1711,7]]},"132":{"position":[[154,6]]},"146":{"position":[[48,8]]},"178":{"position":[[364,6]]},"215":{"position":[[748,7],[930,7],[2020,8],[5913,7],[6096,7],[7188,8]]},"221":{"position":[[2053,7],[2230,7],[3316,8],[12456,7],[12638,7],[13728,8],[17479,7],[17662,7],[18754,8]]},"232":{"position":[[117,10],[791,7],[973,7],[2064,8]]},"245":{"position":[[1048,7],[1220,7],[2300,8]]},"247":{"position":[[5820,7],[5992,7],[7073,8]]},"259":{"position":[[2721,7]]},"288":{"position":[[10024,6]]},"312":{"position":[[887,7],[1070,7],[2161,8],[5917,7],[6099,7],[7189,8],[10608,5]]},"314":{"position":[[3,5],[75,5]]},"318":{"position":[[6491,7],[6673,7],[7764,8],[11725,7],[11908,7],[12999,8]]},"326":{"position":[[436,6]]},"338":{"position":[[921,7],[1111,7],[2209,8]]},"343":{"position":[[245,8]]},"345":{"position":[[1865,7],[2045,7],[3133,8]]},"353":{"position":[[143,5]]},"355":{"position":[[436,6]]},"365":{"position":[[453,6],[534,6],[618,6],[709,6]]},"369":{"position":[[6805,7],[6990,7],[8083,8]]},"373":{"position":[[717,7],[902,7],[1995,8]]},"387":{"position":[[821,7],[1011,7],[2109,8],[6071,7],[6261,7],[7360,8]]},"403":{"position":[[3031,6]]},"415":{"position":[[1197,6]]},"423":{"position":[[1061,5],[3329,7]]},"425":{"position":[[600,5],[3383,6]]},"429":{"position":[[18,5],[364,5]]},"435":{"position":[[88,8],[182,7]]},"445":{"position":[[887,7],[1073,7],[2167,8],[5938,7],[6123,7],[7216,8],[10573,5]]},"449":{"position":[[847,7],[1034,7],[2129,8],[6062,7],[6248,7],[7343,8]]},"461":{"position":[[267,5]]},"463":{"position":[[3,5],[134,5]]},"465":{"position":[[3,5]]},"471":{"position":[[894,7],[1084,7],[2182,8]]},"475":{"position":[[156,6]]},"487":{"position":[[121,10],[1026,7],[1212,7],[2306,8]]},"491":{"position":[[276,6],[1139,6]]},"493":{"position":[[1659,7]]},"497":{"position":[[719,7]]},"503":{"position":[[585,5]]},"505":{"position":[[6062,7],[6757,7],[6940,7],[8031,8],[11447,7],[12172,7],[12354,7],[13445,8],[16575,7],[17278,7],[17463,7],[18556,8],[22322,7],[22506,7],[23598,8]]},"525":{"position":[[954,7],[1146,7],[2246,8]]},"529":{"position":[[219,6]]},"545":{"position":[[727,7],[898,7],[1977,8],[5673,7],[5844,7],[6923,8]]},"547":{"position":[[5662,7],[5833,7],[6913,8]]},"562":{"position":[[886,7],[1067,7],[2156,8]]},"593":{"position":[[1049,5]]},"597":{"position":[[680,5]]},"601":{"position":[[1290,5],[1331,6],[1452,6]]},"605":{"position":[[1341,11],[2014,7],[2196,7],[3286,8],[6526,7],[6934,11],[7607,7],[7789,7],[8879,8],[12136,7],[13176,11],[13849,7],[14034,7],[15127,8],[18451,7],[19431,11],[20104,7],[20286,7],[21376,8],[25088,11],[25761,7],[25944,7],[27035,8]]},"607":{"position":[[1185,11],[1859,7],[2041,7],[3132,8],[6393,7],[6854,11],[7528,7],[7713,7],[8807,8],[12087,7],[12615,11],[13289,7],[13472,7],[14564,8],[17894,7],[18358,11],[19031,7],[19215,7],[20307,8]]},"620":{"position":[[114,5]]},"624":{"position":[[828,7],[1021,7],[2122,8]]},"626":{"position":[[105,5]]},"628":{"position":[[1067,6],[1969,6]]},"632":{"position":[[757,7],[942,7],[2035,8],[5167,7]]},"634":{"position":[[6127,7],[6312,7],[7406,8],[11177,7],[11366,7],[12463,8]]},"644":{"position":[[1519,7],[1703,7],[2795,8],[6556,7],[6739,7],[7830,8]]},"646":{"position":[[6020,7],[6207,7],[7302,8]]},"648":{"position":[[17473,7],[17657,7],[18749,8],[22555,7],[22736,7],[23826,8]]},"658":{"position":[[887,8]]},"666":{"position":[[291,7],[467,7],[781,8],[2182,7],[2360,7],[2676,8],[4099,7],[4275,7],[4589,8],[5995,7],[6173,7],[6490,8],[7909,7],[8085,7],[8400,8],[9811,7],[9989,7],[10306,8]]},"668":{"position":[[2869,7],[3045,7],[3360,8],[10122,7],[10298,7],[10612,8]]},"670":{"position":[[6654,7],[6945,7],[7469,8],[9479,7],[9770,7],[10295,8],[12255,7]]},"678":{"position":[[505,5]]},"692":{"position":[[17390,7],[17574,7],[18666,8],[22508,7],[22689,7],[23779,8]]},"694":{"position":[[553,6],[10001,7],[10188,7],[11283,8]]},"696":{"position":[[16268,7],[16449,7],[17538,8]]},"698":{"position":[[9977,7],[10162,7],[11256,8]]},"706":{"position":[[505,5]]},"712":{"position":[[1246,7]]},"718":{"position":[[7991,7],[8181,7],[9279,8],[18374,7],[18564,7],[19662,8],[23530,7],[23726,7],[24831,8],[35944,7],[36134,7],[37232,8]]},"720":{"position":[[773,7],[957,7],[2050,8],[7473,7],[7657,7],[8749,8]]},"722":{"position":[[41889,7],[42070,7],[43160,8],[46981,7],[47178,7],[48283,8]]},"732":{"position":[[889,8]]},"740":{"position":[[1073,7],[1253,7],[2341,8],[6184,7],[6368,7],[7460,8],[16540,7],[16720,7],[17809,8]]},"742":{"position":[[2723,7],[5188,7],[5363,7],[6447,8],[17196,7],[24082,7],[24262,7],[25350,8]]},"744":{"position":[[461,5],[7697,7],[8428,7],[8793,7],[10216,8],[14884,7],[15249,7],[16673,8]]},"767":{"position":[[25637,7],[25820,7],[26911,8],[30816,7],[30999,7],[32091,8],[35852,7],[36039,7],[37134,8],[40910,7],[41098,7],[42194,8]]},"769":{"position":[[938,7],[1117,7],[2209,8],[6232,6],[6505,6],[8273,7],[8452,7],[9540,8],[13613,7],[13801,7],[14898,8],[20322,5],[23361,7],[23549,7],[24645,8],[31024,7],[31203,7],[32290,8],[35610,8],[40011,7],[40190,7],[41277,8]]},"775":{"position":[[354,5]]},"786":{"position":[[7464,7],[7649,7],[8742,8],[17520,7],[17705,7],[18798,8],[22564,7],[22749,7],[23843,8],[29715,7],[29900,7],[30993,8],[34759,7],[34944,7],[36037,8]]},"788":{"position":[[9459,7],[9646,7],[10741,8]]},"790":{"position":[[5497,6],[11662,7],[11847,7],[12940,8]]},"792":{"position":[[9641,7],[9825,7],[10922,8]]},"798":{"position":[[354,5]]},"809":{"position":[[7482,7],[7670,7],[8766,8],[17551,7],[17735,7],[18827,8],[22588,7],[22773,7],[23867,8],[29227,7],[29411,7],[30503,8],[34264,7],[34449,7],[35542,8]]},"811":{"position":[[13,6],[350,5],[9930,7],[10118,7],[11214,8]]},"813":{"position":[[9060,7],[9246,7],[10345,8]]},"815":{"position":[[33,6],[483,5],[10588,7],[10780,7],[11880,8],[15757,7],[15950,7],[17052,8],[20863,7],[21059,7],[22163,8],[26062,7],[26255,7],[27357,8],[31168,7],[31361,7],[32463,8]]}}}],["allowed\":fals",{"_index":1197,"t":{"215":{"position":[[10032,17]]},"221":{"position":[[1317,17],[6142,17],[11679,17],[21598,17]]},"232":{"position":[[4905,17]]},"247":{"position":[[9884,17]]},"318":{"position":[[10605,17]]},"387":{"position":[[10225,17]]},"449":{"position":[[10196,17]]},"505":{"position":[[16286,17]]},"547":{"position":[[9721,17]]},"607":{"position":[[5973,17],[11657,17],[17408,17]]},"634":{"position":[[10256,17]]},"648":{"position":[[26664,17]]},"666":{"position":[[7565,17],[9469,17],[11381,17]]},"668":{"position":[[4429,17]]},"670":{"position":[[9398,18],[11763,17]]},"692":{"position":[[26617,17]]},"698":{"position":[[14106,17]]},"718":{"position":[[27714,17]]},"720":{"position":[[4897,17]]},"722":{"position":[[45998,17]]},"740":{"position":[[20644,17]]},"742":{"position":[[9267,17]]},"744":{"position":[[14211,18],[20120,17]]},"767":{"position":[[34935,17]]},"769":{"position":[[12372,17],[17757,17]]},"786":{"position":[[26693,17]]},"809":{"position":[[26717,17]]},"815":{"position":[[19926,17],[30231,17],[35337,17]]}}}],["allowed\":tru",{"_index":435,"t":{"16":{"position":[[17029,16],[22641,16]]},"114":{"position":[[1681,16]]},"215":{"position":[[4858,16]]},"221":{"position":[[11567,16],[16566,16]]},"245":{"position":[[5108,16]]},"312":{"position":[[96,16],[5002,16],[10027,16]]},"318":{"position":[[15840,16]]},"338":{"position":[[5071,16]]},"345":{"position":[[5965,16]]},"369":{"position":[[10930,16]]},"373":{"position":[[4842,16]]},"387":{"position":[[4971,16]]},"445":{"position":[[96,16],[5017,16],[10063,16]]},"449":{"position":[[4982,16]]},"471":{"position":[[5044,16]]},"487":{"position":[[5156,16]]},"505":{"position":[[10872,16],[21403,16],[26442,16]]},"525":{"position":[[5114,16]]},"545":{"position":[[4782,16],[9728,16]]},"562":{"position":[[4991,16]]},"605":{"position":[[6124,16],[11717,16],[17974,16],[24214,16],[29876,16]]},"607":{"position":[[23151,16]]},"624":{"position":[[4993,16]]},"632":{"position":[[4882,16]]},"634":{"position":[[15322,16]]},"644":{"position":[[5639,16],[10671,16]]},"646":{"position":[[10155,16]]},"648":{"position":[[21593,16]]},"666":{"position":[[1847,16],[3748,16],[5655,16]]},"668":{"position":[[11678,16]]},"670":{"position":[[6574,17],[8934,16]]},"692":{"position":[[21510,16]]},"694":{"position":[[14136,16]]},"696":{"position":[[20373,16]]},"718":{"position":[[12141,16],[22524,16],[40094,16]]},"720":{"position":[[11593,16]]},"722":{"position":[[51166,16]]},"740":{"position":[[5173,16],[10304,16]]},"742":{"position":[[28182,16]]},"744":{"position":[[7756,17],[13660,16]]},"767":{"position":[[29752,16],[39987,16],[45050,16]]},"769":{"position":[[27501,16],[35119,16],[44106,16]]},"786":{"position":[[11589,16],[21645,16],[33840,16],[38884,16]]},"788":{"position":[[13594,16]]},"790":{"position":[[15787,16]]},"809":{"position":[[11622,16],[21671,16],[33347,16],[38389,16]]},"811":{"position":[[14070,16]]},"815":{"position":[[14748,16],[25043,16]]}}}],["allowed\":undefin",{"_index":2596,"t":{"769":{"position":[[5053,21]]},"792":{"position":[[13781,21]]},"813":{"position":[[13210,21]]}}}],["alongsid",{"_index":471,"t":{"16":{"position":[[29194,9]]},"670":{"position":[[666,9]]},"744":{"position":[[7532,9]]}}}],["alpha",{"_index":2512,"t":{"762":{"position":[[132,5],[149,8],[347,5]]},"767":{"position":[[10830,5],[12203,5],[14013,5],[15529,5],[16742,5],[18031,5],[19334,5],[21074,5],[22520,5],[23648,5]]}}}],["alphanumer",{"_index":1573,"t":{"401":{"position":[[2526,12]]}}}],["alreadi",{"_index":880,"t":{"138":{"position":[[101,7]]},"304":{"position":[[168,7]]},"306":{"position":[[1128,8]]},"312":{"position":[[10440,8],[10503,7]]},"328":{"position":[[925,8]]},"437":{"position":[[1573,8]]},"670":{"position":[[725,7]]},"720":{"position":[[5366,7]]},"722":{"position":[[1469,7]]},"744":{"position":[[7591,7]]},"769":{"position":[[18042,7]]}}}],["altern",{"_index":1081,"t":{"156":{"position":[[260,11]]}}}],["although",{"_index":1747,"t":{"449":{"position":[[5309,8]]},"571":{"position":[[472,8],[5320,8]]},"607":{"position":[[17687,9]]}}}],["alway",{"_index":1140,"t":{"174":{"position":[[139,6]]},"397":{"position":[[572,6]]},"421":{"position":[[247,6]]}}}],["ami",{"_index":2264,"t":{"714":{"position":[[136,3],[281,3],[937,3]]},"716":{"position":[[615,3]]},"718":{"position":[[252,3],[1978,3],[2740,3],[3793,3],[5171,3],[6347,3],[7076,3],[7292,3],[40442,3],[40483,3],[40641,3],[40675,3],[40812,3],[40847,3]]},"720":{"position":[[5212,3],[5339,4],[6778,3],[11941,3],[11982,3],[12140,3],[12174,3],[12311,3],[12346,3]]},"722":{"position":[[842,4],[1200,3],[19165,3],[51532,3],[51573,3],[51630,3],[51665,3],[51716,3],[51759,3],[51818,3],[51848,3],[51894,3],[51924,3],[51970,3],[52011,3],[52067,3],[52108,3]]}}}],["amount",{"_index":1098,"t":{"158":{"position":[[650,6]]}}}],["ancestor",{"_index":1609,"t":{"403":{"position":[[5635,10]]}}}],["and/or",{"_index":1457,"t":{"355":{"position":[[245,6]]},"357":{"position":[[99,6]]},"379":{"position":[[263,6]]},"493":{"position":[[275,6]]},"499":{"position":[[117,6]]},"501":{"position":[[253,6]]},"722":{"position":[[1418,6]]}}}],["ann",{"_index":264,"t":{"16":{"position":[[5874,4],[10507,4],[10943,4],[17797,4],[23588,4]]},"56":{"position":[[1857,4],[1954,4],[2384,4]]},"58":{"position":[[1346,4],[1447,4],[1494,4],[1624,4],[1670,4],[1799,4],[1868,4],[1919,4],[1966,4]]},"60":{"position":[[2022,4],[2256,4],[2375,4],[2447,4]]},"62":{"position":[[674,4],[799,4],[1287,4]]},"64":{"position":[[711,4],[843,4],[1223,4],[1274,5],[1463,4],[1545,4],[1695,4]]},"66":{"position":[[692,4],[855,4],[1319,4],[1498,4],[1580,4],[1759,4]]},"110":{"position":[[43,4]]},"122":{"position":[[68,4]]},"213":{"position":[[40,4]]},"215":{"position":[[44,4]]},"221":{"position":[[1366,4],[2163,7],[3149,7],[4341,7],[6174,7],[6203,6],[6408,4],[7144,4],[8169,4],[9519,4],[10667,4],[11354,4],[11615,4]]},"230":{"position":[[103,4],[313,4]]},"232":{"position":[[62,4]]},"245":{"position":[[39,4],[132,4],[285,4],[340,4]]},"247":{"position":[[30,4],[5006,4]]},"290":{"position":[[125,4],[232,4],[358,4]]},"345":{"position":[[834,4],[998,4],[1078,4]]},"365":{"position":[[916,4]]},"369":{"position":[[55,4],[70,4],[897,4],[2050,4],[3584,4],[4870,4],[5772,4]]},"405":{"position":[[1602,4],[1834,4],[1939,4],[2569,4],[2607,4],[2656,4],[2705,4],[2753,4],[3390,4],[3498,4],[3557,4],[3616,4],[3664,4]]},"537":{"position":[[105,4]]},"605":{"position":[[1118,4],[1278,4],[6446,4]]},"630":{"position":[[771,4],[1974,4],[3558,4],[4894,4],[5864,4]]},"632":{"position":[[5159,4]]},"634":{"position":[[5354,4]]},"648":{"position":[[16733,4]]},"660":{"position":[[2856,4],[3248,4],[3380,4],[3512,4],[4271,4],[4459,4],[4647,4],[5823,4],[5965,4],[6107,4],[7071,4],[7209,4],[7347,4],[8888,4],[9024,4],[9160,4]]},"662":{"position":[[54,4],[158,4],[268,4]]},"664":{"position":[[183,4],[379,4]]},"666":{"position":[[120,4],[205,4],[2094,4],[11674,4],[11712,4]]},"668":{"position":[[2476,4],[2646,4],[2698,4],[4691,4],[5476,4],[6532,4],[7913,4],[9092,4],[9822,4]]},"670":{"position":[[213,4],[815,4],[1069,4],[1837,4],[2921,4],[4330,4],[5537,4],[6296,4],[6499,4],[9323,4],[12263,4],[12292,4],[12321,4],[12350,4],[12381,4],[12411,4]]},"672":{"position":[[2787,4],[2919,4],[3051,4],[3810,4],[3998,4],[4186,4],[5362,4],[5504,4],[5646,4],[6610,4],[6748,4],[6886,4],[8427,4],[8563,4],[8699,4]]},"686":{"position":[[136,4],[215,4]]},"692":{"position":[[22,4],[411,4],[462,4],[5415,4],[16578,4],[16655,4],[16681,4],[21792,4],[26916,4],[26968,4],[27003,4],[27140,4],[27179,4],[27328,4],[27360,4]]},"694":{"position":[[30,4],[980,5],[2489,4],[14439,5],[14508,4],[14543,4],[14680,4],[14719,4],[14868,4],[14900,4]]},"696":{"position":[[20783,4],[20818,4],[20953,4],[20992,4],[21139,4],[21171,4]]},"698":{"position":[[39,4],[161,4],[304,4],[2391,4],[2707,4]]},"734":{"position":[[2195,4],[3274,4],[4788,4],[6795,4],[8462,4],[9907,4]]},"736":{"position":[[60,4],[103,4],[148,4],[221,4],[270,4]]},"740":{"position":[[315,4],[20941,4]]},"742":{"position":[[4223,4],[4373,4],[4425,4],[5298,7],[6282,7],[7472,7],[9299,7],[9328,6],[17293,4],[17988,4],[18135,4],[19165,4],[19368,4],[20723,4],[20880,4],[22033,4],[22186,4],[22958,4],[23109,4],[23344,4],[23410,4]]},"744":{"position":[[304,4],[974,4],[1042,4],[1790,4],[1964,4],[3022,4],[3252,4],[4635,4],[4819,4],[6000,4],[6180,4],[6981,4],[7159,4],[7670,4],[14128,4]]},"746":{"position":[[4002,4],[6772,4],[10483,4],[13486,4],[16934,4]]},"762":{"position":[[331,5],[520,4],[562,4],[616,4]]},"767":{"position":[[18007,4],[19310,4],[21050,4],[22496,4],[23624,4],[24495,4],[24819,4]]},"769":{"position":[[84,4],[242,4],[7570,4],[12808,4],[20620,7],[20700,4],[20750,4],[28129,4],[30328,4],[37133,4],[38910,4],[38952,4],[39006,4],[44480,4],[44510,4],[44556,4],[44589,4],[44637,4],[44664,4]]},"783":{"position":[[35,4],[503,4]]},"786":{"position":[[1728,4],[6759,4]]},"806":{"position":[[35,5],[250,5],[456,5]]},"809":{"position":[[11916,4],[27057,4]]},"811":{"position":[[2782,5],[4097,5],[5905,5],[7373,5],[8579,5]]},"815":{"position":[[170,4],[2671,4],[3482,4],[4849,4],[6653,4],[8163,4],[9390,4],[9901,4]]}}}],["anne'",{"_index":1352,"t":{"288":{"position":[[10955,6],[12120,6],[13701,6],[15019,6],[15954,6]]},"668":{"position":[[4733,6]]},"670":{"position":[[429,6]]}}}],["anoth",{"_index":169,"t":{"16":{"position":[[734,7],[3924,7]]},"20":{"position":[[83,7]]},"52":{"position":[[207,8]]},"58":{"position":[[893,7]]},"60":{"position":[[0,7],[219,7],[3067,7]]},"221":{"position":[[6447,7],[11729,7]]},"279":{"position":[[270,7]]},"318":{"position":[[11025,7]]},"326":{"position":[[311,7]]},"334":{"position":[[313,7]]},"349":{"position":[[483,7],[687,7]]},"365":{"position":[[348,7]]},"397":{"position":[[1773,7],[1988,7]]},"399":{"position":[[815,7],[1030,7],[2655,7],[2870,7]]},"401":{"position":[[1145,7],[1360,7]]},"403":{"position":[[4279,7],[7086,7]]},"429":{"position":[[343,7]]},"453":{"position":[[154,8],[454,7]]},"529":{"position":[[107,7],[182,7]]},"539":{"position":[[0,7]]},"609":{"position":[[170,7]]},"622":{"position":[[1066,7],[2170,7],[3599,7],[4826,7],[5609,7]]},"678":{"position":[[804,7]]},"704":{"position":[[403,7]]},"750":{"position":[[137,7]]},"754":{"position":[[761,7]]},"769":{"position":[[20097,7],[20474,7]]},"771":{"position":[[367,7]]},"773":{"position":[[509,7],[1103,7]]},"796":{"position":[[399,7],[1185,7]]},"813":{"position":[[430,7]]},"815":{"position":[[351,7]]}}}],["answer",{"_index":142,"t":{"16":{"position":[[20,7],[3451,6]]},"24":{"position":[[65,6]]},"393":{"position":[[472,7],[1098,6],[1194,6]]},"395":{"position":[[54,6]]},"403":{"position":[[153,7]]},"405":{"position":[[239,6]]},"564":{"position":[[21,6],[113,6]]},"628":{"position":[[1982,6]]},"694":{"position":[[1097,7]]},"722":{"position":[[342,7],[511,7],[674,7]]},"744":{"position":[[696,7]]},"769":{"position":[[54,6]]}}}],["anyon",{"_index":1755,"t":{"465":{"position":[[1121,6]]},"475":{"position":[[414,6],[465,6],[525,6]]},"605":{"position":[[30238,6]]},"694":{"position":[[665,6],[792,6]]},"712":{"position":[[1216,6]]},"720":{"position":[[5434,6]]},"722":{"position":[[2946,6]]}}}],["anyth",{"_index":1065,"t":{"152":{"position":[[930,8]]},"403":{"position":[[869,8]]}}}],["api",{"_index":28,"t":{"4":{"position":[[250,3]]},"16":{"position":[[3024,3],[3264,3],[3310,4],[15992,3],[21604,3],[22992,3],[27392,3],[28824,3],[29453,3]]},"52":{"position":[[127,3],[468,3],[496,3],[641,4],[757,3]]},"56":{"position":[[1000,3]]},"68":{"position":[[40,3]]},"74":{"position":[[1096,5]]},"80":{"position":[[704,4],[5697,3],[7212,3],[7278,3],[7367,3]]},"86":{"position":[[2027,3]]},"98":{"position":[[752,3],[1123,3],[2633,4],[2677,3]]},"104":{"position":[[48,4],[214,3]]},"112":{"position":[[25,4],[61,3],[2636,3]]},"116":{"position":[[114,3],[133,3]]},"124":{"position":[[25,4],[61,3],[2636,3]]},"128":{"position":[[121,3],[147,3]]},"134":{"position":[[96,3],[171,4]]},"138":{"position":[[383,4],[419,4]]},"152":{"position":[[723,3],[1026,3]]},"170":{"position":[[1887,3]]},"172":{"position":[[3444,3]]},"178":{"position":[[209,3]]},"190":{"position":[[25,4],[61,3],[2636,3]]},"192":{"position":[[56,4]]},"194":{"position":[[55,4]]},"196":{"position":[[347,3]]},"200":{"position":[[720,5]]},"213":{"position":[[3835,3]]},"215":{"position":[[25,3],[3827,3],[8998,3]]},"221":{"position":[[5120,3],[10324,3],[15535,3],[20564,3]]},"230":{"position":[[4095,3]]},"232":{"position":[[3873,3]]},"245":{"position":[[326,3],[4097,3]]},"247":{"position":[[3842,3],[5125,3],[8872,3]]},"251":{"position":[[54,3],[176,3]]},"255":{"position":[[139,4]]},"257":{"position":[[37,3],[2612,3]]},"259":{"position":[[2552,3],[2741,3],[2932,3],[2950,3],[3124,3]]},"269":{"position":[[145,4]]},"271":{"position":[[27,3],[173,4]]},"273":{"position":[[1179,3],[1272,3],[1582,3]]},"288":{"position":[[88,4],[3915,3],[8823,3],[10020,3],[10187,3],[14676,3]]},"290":{"position":[[656,3]]},"292":{"position":[[164,3],[189,3]]},"312":{"position":[[3969,3],[8996,3]]},"318":{"position":[[4280,3],[9573,3],[14807,3]]},"338":{"position":[[4024,3]]},"345":{"position":[[979,3],[4938,3]]},"347":{"position":[[793,4]]},"349":{"position":[[844,3],[1423,3]]},"369":{"position":[[4527,3],[9893,3]]},"371":{"position":[[4759,3]]},"373":{"position":[[3805,3]]},"385":{"position":[[3933,3]]},"387":{"position":[[3924,3],[9177,3]]},"403":{"position":[[10487,3]]},"415":{"position":[[373,5]]},"419":{"position":[[4093,4]]},"425":{"position":[[2123,3]]},"431":{"position":[[175,3]]},"445":{"position":[[3978,3],[9026,3]]},"449":{"position":[[3941,3],[9156,3]]},"467":{"position":[[3866,3]]},"469":{"position":[[4108,3]]},"471":{"position":[[3997,3]]},"485":{"position":[[4208,3]]},"487":{"position":[[4117,3]]},"493":{"position":[[1785,3],[1807,3]]},"497":{"position":[[845,3],[867,3]]},"505":{"position":[[4577,3],[9839,3],[15254,3],[20366,3],[25407,3]]},"521":{"position":[[3881,3]]},"523":{"position":[[4445,3]]},"525":{"position":[[4063,3]]},"537":{"position":[[4179,3]]},"541":{"position":[[4174,3]]},"543":{"position":[[3975,3]]},"545":{"position":[[3773,3],[8719,3]]},"547":{"position":[[3835,3],[8711,3]]},"551":{"position":[[102,3]]},"560":{"position":[[10,3],[20,3]]},"562":{"position":[[3962,3],[5260,3]]},"567":{"position":[[9,3],[19,3]]},"569":{"position":[[4373,3],[9867,3],[15313,3]]},"571":{"position":[[9,3],[274,3],[4222,3],[5410,3]]},"574":{"position":[[11,3]]},"576":{"position":[[4132,3],[9466,3]]},"578":{"position":[[307,3]]},"581":{"position":[[16,3],[26,3]]},"583":{"position":[[20,3],[4308,3],[6070,4]]},"589":{"position":[[92,3],[145,3],[159,3],[211,3],[227,3],[281,3],[302,3],[361,3]]},"605":{"position":[[5093,3],[10686,3],[16937,3],[23183,3],[28843,3]]},"607":{"position":[[4941,3],[10619,3],[16374,3],[22116,3]]},"622":{"position":[[4458,3]]},"624":{"position":[[3940,3]]},"630":{"position":[[4546,3]]},"632":{"position":[[3845,3]]},"634":{"position":[[4049,3],[9218,3],[14277,3]]},"644":{"position":[[4604,3],[9638,3]]},"646":{"position":[[4078,3],[5324,3],[9114,3]]},"648":{"position":[[110,3],[4115,3],[9853,3],[15305,3],[20558,3],[25634,3]]},"650":{"position":[[446,3]]},"654":{"position":[[480,3]]},"668":{"position":[[8749,3]]},"670":{"position":[[5166,3]]},"672":{"position":[[9471,3],[9579,3]]},"674":{"position":[[356,3],[381,3]]},"692":{"position":[[4270,3],[9238,3],[14787,3],[20475,3],[25587,3]]},"694":{"position":[[7486,3],[13095,3]]},"696":{"position":[[6921,3],[13331,3],[19344,3]]},"698":{"position":[[7368,3],[13068,3]]},"718":{"position":[[6004,3],[11094,3],[16430,3],[21477,3],[26654,3],[33271,3],[39047,3]]},"720":{"position":[[3861,3],[10558,3]]},"722":{"position":[[11436,3],[17612,3],[23547,3],[29317,3],[34733,3],[39847,3],[44968,3],[50105,3]]},"728":{"position":[[507,3]]},"734":{"position":[[8119,3]]},"740":{"position":[[4146,3],[9269,3],[14623,3],[19616,3]]},"742":{"position":[[8249,3],[14951,3],[21690,3],[27155,3]]},"744":{"position":[[596,4],[5629,3],[12241,3],[18700,3]]},"746":{"position":[[13143,3],[18975,3],[19082,3]]},"750":{"position":[[346,3],[371,3]]},"767":{"position":[[6804,3],[15182,3],[22153,3],[28719,3],[33901,3],[38946,3],[44007,3]]},"769":{"position":[[4023,3],[11346,3],[16713,3],[26458,3],[34094,3],[43081,3]]},"786":{"position":[[5591,3],[10552,3],[15690,3],[20608,3],[25655,3],[32803,3],[37847,3]]},"788":{"position":[[6863,3],[12553,3]]},"790":{"position":[[4133,3],[9753,3],[14750,3]]},"792":{"position":[[7022,3],[12741,3],[19377,3]]},"809":{"position":[[5597,3],[10579,3],[15724,3],[20636,3],[25679,3],[32312,3],[37352,3]]},"811":{"position":[[7025,3],[13027,3]]},"813":{"position":[[6363,3],[12166,3]]},"815":{"position":[[7820,3],[13697,3],[18872,3],[23984,3],[29177,3],[34283,3]]}}}],["api'",{"_index":646,"t":{"80":{"position":[[7325,5]]}}}],["api.openfga.exampl",{"_index":346,"t":{"16":{"position":[[12733,19],[13582,19],[14818,19],[15755,19],[18345,19],[19194,19],[20430,19],[21367,19],[24117,19],[24971,19],[26208,19],[27155,19]]},"80":{"position":[[1181,19],[2355,19],[4118,19],[5460,19]]},"86":{"position":[[309,19],[743,19],[1501,19]]},"102":{"position":[[637,19]]},"112":{"position":[[454,19],[989,19],[1810,19],[2399,19]]},"124":{"position":[[454,19],[989,19],[1810,19],[2399,19]]},"170":{"position":[[400,19],[814,19],[1438,19]]},"172":{"position":[[725,19],[1323,19],[2246,19],[3183,19]]},"190":{"position":[[454,19],[989,19],[1810,19],[2399,19]]},"213":{"position":[[567,19],[1370,19],[2696,19],[3598,19]]},"215":{"position":[[577,19],[1423,19],[2656,19],[3590,19],[5742,19],[6590,19],[7825,19],[8761,19]]},"221":{"position":[[1882,19],[2724,19],[3953,19],[4883,19],[6945,19],[7785,19],[9148,19],[10087,19],[12285,19],[13131,19],[14364,19],[15298,19],[17308,19],[18156,19],[19391,19],[20327,19]]},"230":{"position":[[829,19],[1632,19],[2957,19],[3858,19]]},"232":{"position":[[620,19],[1467,19],[2701,19],[3636,19]]},"245":{"position":[[877,19],[1713,19],[2936,19],[3860,19]]},"247":{"position":[[588,19],[1387,19],[2708,19],[3605,19],[5649,19],[6486,19],[7710,19],[8635,19]]},"257":{"position":[[430,19],[965,19],[1786,19],[2375,19]]},"288":{"position":[[674,19],[1468,19],[2785,19],[3678,19],[5578,19],[6374,19],[7692,19],[8586,19],[10756,19],[11736,19],[13330,19],[14439,19]]},"312":{"position":[[716,19],[1563,19],[2797,19],[3732,19],[5746,19],[6592,19],[7825,19],[8759,19]]},"318":{"position":[[835,19],[1697,19],[3082,19],[4043,19],[6320,19],[7167,19],[8401,19],[9336,19],[11554,19],[12401,19],[13635,19],[14570,19]]},"338":{"position":[[750,19],[1604,19],[2845,19],[3787,19]]},"345":{"position":[[1694,19],[2538,19],[3769,19],[4701,19]]},"369":{"position":[[698,19],[1666,19],[3213,19],[4290,19],[6634,19],[7483,19],[8719,19],[9656,19]]},"371":{"position":[[600,19],[1678,19],[3335,19],[4522,19]]},"373":{"position":[[546,19],[1395,19],[2631,19],[3568,19]]},"385":{"position":[[629,19],[1444,19],[2782,19],[3696,19]]},"387":{"position":[[650,19],[1504,19],[2745,19],[3687,19],[5900,19],[6755,19],[7997,19],[8940,19]]},"445":{"position":[[716,19],[1566,19],[2803,19],[3741,19],[5767,19],[6616,19],[7852,19],[8789,19]]},"449":{"position":[[676,19],[1527,19],[2765,19],[3704,19],[5891,19],[6742,19],[7980,19],[8919,19]]},"467":{"position":[[604,19],[1405,19],[2729,19],[3629,19]]},"469":{"position":[[606,19],[1487,19],[2891,19],[3871,19]]},"471":{"position":[[723,19],[1577,19],[2818,19],[3760,19]]},"485":{"position":[[790,19],[1643,19],[3019,19],[3971,19]]},"487":{"position":[[855,19],[1705,19],[2942,19],[3880,19]]},"505":{"position":[[838,19],[1776,19],[3293,19],[4340,19],[6586,19],[7433,19],[8667,19],[9602,19],[12001,19],[12848,19],[14082,19],[15017,19],[17107,19],[17956,19],[19192,19],[20129,19],[22151,19],[22999,19],[24234,19],[25170,19]]},"521":{"position":[[613,19],[1416,19],[2742,19],[3644,19]]},"523":{"position":[[946,19],[1826,19],[3229,19],[4208,19]]},"525":{"position":[[783,19],[1639,19],[2882,19],[3826,19]]},"537":{"position":[[692,19],[1546,19],[2979,19],[3942,19]]},"541":{"position":[[699,19],[1549,19],[2978,19],[3937,19]]},"543":{"position":[[710,19],[1512,19],[2837,19],[3738,19]]},"545":{"position":[[556,19],[1391,19],[2613,19],[3536,19],[5502,19],[6337,19],[7559,19],[8482,19]]},"547":{"position":[[593,19],[1388,19],[2705,19],[3598,19],[5491,19],[6327,19],[7550,19],[8474,19]]},"562":{"position":[[715,19],[1560,19],[2792,19],[3725,19]]},"569":{"position":[[965,19],[1860,19],[3182,19],[4136,19],[6537,19],[7413,19],[8697,19],[9630,19],[11953,19],[12839,19],[14133,19],[15076,19]]},"571":{"position":[[1168,19],[1945,19],[3149,19],[3985,19]]},"576":{"position":[[706,19],[1590,19],[2916,19],[3895,19],[6040,19],[6924,19],[8250,19],[9229,19]]},"583":{"position":[[627,19],[1588,19],[2994,19],[4071,19]]},"605":{"position":[[1843,19],[2689,19],[3922,19],[4856,19],[7436,19],[8282,19],[9515,19],[10449,19],[13678,19],[14527,19],[15763,19],[16700,19],[19933,19],[20779,19],[22012,19],[22946,19],[25590,19],[26437,19],[27671,19],[28606,19]]},"607":{"position":[[1688,19],[2535,19],[3769,19],[4704,19],[7357,19],[8207,19],[9444,19],[10382,19],[13118,19],[13966,19],[15201,19],[16137,19],[18860,19],[19708,19],[20943,19],[21879,19]]},"622":{"position":[[842,19],[1761,19],[3203,19],[4221,19]]},"624":{"position":[[657,19],[1514,19],[2758,19],[3703,19]]},"630":{"position":[[567,19],[1585,19],[3182,19],[4309,19]]},"632":{"position":[[586,19],[1435,19],[2671,19],[3608,19]]},"634":{"position":[[567,19],[1442,19],[2839,19],[3812,19],[5956,19],[6806,19],[8043,19],[8981,19],[11006,19],[11859,19],[13099,19],[14040,19]]},"644":{"position":[[1348,19],[2196,19],[3431,19],[4367,19],[6385,19],[7232,19],[8466,19],[9401,19]]},"646":{"position":[[657,19],[1511,19],[2888,19],[3841,19],[5849,19],[6700,19],[7938,19],[8877,19]]},"648":{"position":[[632,19],[1578,19],[2880,19],[3878,19],[6291,19],[7170,19],[8628,19],[9616,19],[11739,19],[12620,19],[14079,19],[15068,19],[17302,19],[18150,19],[19385,19],[20321,19],[22384,19],[23230,19],[24463,19],[25397,19]]},"668":{"position":[[5277,19],[6148,19],[7542,19],[8512,19]]},"670":{"position":[[1609,19],[2509,19],[3931,19],[4929,19]]},"692":{"position":[[984,19],[1793,19],[3125,19],[4033,19],[5940,19],[6753,19],[8089,19],[9001,19],[10928,19],[11884,19],[13475,19],[14550,19],[17219,19],[18067,19],[19302,19],[20238,19],[22337,19],[23183,19],[24416,19],[25350,19]]},"694":{"position":[[3402,19],[4411,19],[6111,19],[7249,19],[9830,19],[10681,19],[11919,19],[12858,19]]},"696":{"position":[[3305,19],[4202,19],[5678,19],[6684,19],[8998,19],[10090,19],[11873,19],[13094,19],[16097,19],[16942,19],[18174,19],[19107,19]]},"698":{"position":[[3500,19],[4459,19],[6053,19],[7131,19],[9806,19],[10656,19],[11893,19],[12831,19]]},"718":{"position":[[2541,19],[3409,19],[4800,19],[5767,19],[7820,19],[8674,19],[9915,19],[10857,19],[12967,19],[13835,19],[15226,19],[16193,19],[18203,19],[19057,19],[20298,19],[21240,19],[23359,19],[24220,19],[25468,19],[26417,19],[28926,19],[30044,19],[31797,19],[33034,19],[35773,19],[36627,19],[37868,19],[38810,19]]},"720":{"position":[[602,19],[1451,19],[2687,19],[3624,19],[7302,19],[8150,19],[9385,19],[10321,19]]},"722":{"position":[[7346,19],[8379,19],[10047,19],[11199,19],[13942,19],[14879,19],[16339,19],[17375,19],[19679,19],[20660,19],[22220,19],[23310,19],[25704,19],[26600,19],[28075,19],[29080,19],[31357,19],[32196,19],[33558,19],[34496,19],[36522,19],[37344,19],[38689,19],[39610,19],[41718,19],[42564,19],[43797,19],[44731,19],[46810,19],[47671,19],[48919,19],[49868,19]]},"734":{"position":[[3075,19],[4404,19],[6424,19],[7882,19]]},"740":{"position":[[902,19],[1746,19],[2977,19],[3909,19],[6013,19],[6861,19],[8096,19],[9032,19],[11157,19],[12026,19],[13418,19],[14386,19],[16369,19],[17214,19],[18446,19],[19379,19]]},"742":{"position":[[5017,19],[5857,19],[7084,19],[8012,19],[10249,19],[11486,19],[13358,19],[14714,19],[17789,19],[18781,19],[20352,19],[21453,19],[23911,19],[24755,19],[25986,19],[26918,19]]},"744":{"position":[[1562,19],[2610,19],[4236,19],[5392,19],[8257,19],[9286,19],[10852,19],[12004,19],[14713,19],[15743,19],[17310,19],[18463,19]]},"746":{"position":[[3803,19],[6388,19],[10112,19],[12906,19]]},"767":{"position":[[671,19],[2319,19],[4770,19],[6567,19],[10627,19],[11815,19],[13638,19],[14945,19],[17808,19],[18926,19],[20679,19],[21916,19],[25466,19],[26313,19],[27547,19],[28482,19],[30645,19],[31493,19],[32728,19],[33664,19],[35681,19],[36532,19],[37770,19],[38709,19],[40739,19],[41591,19],[42830,19],[43770,19]]},"769":{"position":[[767,19],[1615,19],[2850,19],[3786,19],[8102,19],[8946,19],[10177,19],[11109,19],[13442,19],[14295,19],[15535,19],[16476,19],[23190,19],[24042,19],[25281,19],[26221,19],[30853,19],[31696,19],[32926,19],[33857,19],[39840,19],[40683,19],[41913,19],[42844,19]]},"786":{"position":[[2302,19],[3112,19],[4445,19],[5354,19],[7293,19],[8142,19],[9378,19],[10315,19],[12401,19],[13211,19],[14544,19],[15453,19],[17349,19],[18198,19],[19434,19],[20371,19],[22393,19],[23243,19],[24480,19],[25418,19],[29544,19],[30393,19],[31629,19],[32566,19],[34588,19],[35437,19],[36673,19],[37610,19]]},"788":{"position":[[2821,19],[3860,19],[5478,19],[6626,19],[9288,19],[10139,19],[11377,19],[12316,19]]},"790":{"position":[[772,19],[1606,19],[2963,19],[3896,19],[6296,19],[7162,19],[8551,19],[9516,19],[11491,19],[12340,19],[13576,19],[14513,19]]},"792":{"position":[[3415,19],[4309,19],[5782,19],[6785,19],[9470,19],[10323,19],[11563,19],[12504,19],[16022,19],[16854,19],[18209,19],[19140,19]]},"809":{"position":[[2299,19],[3112,19],[4448,19],[5360,19],[7311,19],[8163,19],[9402,19],[10342,19],[12438,19],[13247,19],[14579,19],[15487,19],[17380,19],[18228,19],[19463,19],[20399,19],[22417,19],[23267,19],[24504,19],[25442,19],[29056,19],[29904,19],[31139,19],[32075,19],[34093,19],[34942,19],[36178,19],[37115,19]]},"811":{"position":[[2578,19],[3708,19],[5529,19],[6788,19],[9759,19],[10611,19],[11850,19],[12790,19]]},"813":{"position":[[2411,19],[3420,19],[5008,19],[6126,19],[8889,19],[9744,19],[10986,19],[11929,19]]},"815":{"position":[[3283,19],[4465,19],[6282,19],[7583,19],[10417,19],[11273,19],[12516,19],[13460,19],[15586,19],[16444,19],[17689,19],[18635,19],[20692,19],[21552,19],[22799,19],[23747,19],[25891,19],[26749,19],[27994,19],[28940,19],[30997,19],[31855,19],[33100,19],[34046,19]]}}}],["api_host",{"_index":404,"t":{"16":{"position":[[15668,8],[21280,8],[27068,8]]},"80":{"position":[[5373,8]]},"86":{"position":[[1954,8]]},"112":{"position":[[2312,8]]},"124":{"position":[[2312,8]]},"170":{"position":[[1772,8]]},"172":{"position":[[3098,8]]},"190":{"position":[[2312,8]]},"213":{"position":[[3511,8]]},"215":{"position":[[3503,8],[8674,8]]},"221":{"position":[[4796,8],[10000,8],[15211,8],[20240,8]]},"230":{"position":[[3771,8]]},"232":{"position":[[3549,8]]},"245":{"position":[[3773,8]]},"247":{"position":[[3518,8],[8548,8]]},"257":{"position":[[2288,8]]},"288":{"position":[[3591,8],[8499,8],[14352,8]]},"312":{"position":[[3645,8],[8672,8]]},"318":{"position":[[3956,8],[9249,8],[14483,8]]},"338":{"position":[[3700,8]]},"345":{"position":[[4614,8]]},"369":{"position":[[4203,8],[9569,8]]},"371":{"position":[[4435,8]]},"373":{"position":[[3481,8]]},"385":{"position":[[3609,8]]},"387":{"position":[[3600,8],[8853,8]]},"445":{"position":[[3654,8],[8702,8]]},"449":{"position":[[3617,8],[8832,8]]},"467":{"position":[[3542,8]]},"469":{"position":[[3784,8]]},"471":{"position":[[3673,8]]},"485":{"position":[[3884,8]]},"487":{"position":[[3793,8]]},"505":{"position":[[4253,8],[9515,8],[14930,8],[20042,8],[25083,8]]},"521":{"position":[[3557,8]]},"523":{"position":[[4121,8]]},"525":{"position":[[3739,8]]},"537":{"position":[[3855,8]]},"541":{"position":[[3850,8]]},"543":{"position":[[3651,8]]},"545":{"position":[[3449,8],[8395,8]]},"547":{"position":[[3511,8],[8387,8]]},"562":{"position":[[3638,8]]},"569":{"position":[[4049,8],[9543,8],[14989,8]]},"571":{"position":[[3898,8]]},"576":{"position":[[3808,8],[9142,8]]},"583":{"position":[[3984,8]]},"605":{"position":[[4769,8],[10362,8],[16613,8],[22859,8],[28519,8]]},"607":{"position":[[4617,8],[10295,8],[16050,8],[21792,8]]},"622":{"position":[[4134,8]]},"624":{"position":[[3616,8]]},"630":{"position":[[4222,8]]},"632":{"position":[[3521,8]]},"634":{"position":[[3725,8],[8894,8],[13953,8]]},"644":{"position":[[4280,8],[9314,8]]},"646":{"position":[[3754,8],[8790,8]]},"648":{"position":[[3791,8],[9529,8],[14981,8],[20234,8],[25310,8]]},"668":{"position":[[8425,8]]},"670":{"position":[[4842,8]]},"692":{"position":[[3946,8],[8914,8],[14463,8],[20151,8],[25263,8]]},"694":{"position":[[7162,8],[12771,8]]},"696":{"position":[[6597,8],[13007,8],[19020,8]]},"698":{"position":[[7044,8],[12744,8]]},"718":{"position":[[5680,8],[10770,8],[16106,8],[21153,8],[26330,8],[32947,8],[38723,8]]},"720":{"position":[[3537,8],[10234,8]]},"722":{"position":[[11112,8],[17288,8],[23223,8],[28993,8],[34409,8],[39523,8],[44644,8],[49781,8]]},"734":{"position":[[7795,8]]},"740":{"position":[[3822,8],[8945,8],[14299,8],[19292,8]]},"742":{"position":[[7925,8],[14627,8],[21366,8],[26831,8]]},"744":{"position":[[5305,8],[11917,8],[18376,8]]},"746":{"position":[[12819,8]]},"767":{"position":[[6480,8],[14858,8],[21829,8],[28395,8],[33577,8],[38622,8],[43683,8]]},"769":{"position":[[3699,8],[11022,8],[16389,8],[26134,8],[33770,8],[42757,8]]},"786":{"position":[[5267,8],[10228,8],[15366,8],[20284,8],[25331,8],[32479,8],[37523,8]]},"788":{"position":[[6539,8],[12229,8]]},"790":{"position":[[3809,8],[9429,8],[14426,8]]},"792":{"position":[[6698,8],[12417,8],[19053,8]]},"809":{"position":[[5273,8],[10255,8],[15400,8],[20312,8],[25355,8],[31988,8],[37028,8]]},"811":{"position":[[6701,8],[12703,8]]},"813":{"position":[[6039,8],[11842,8]]},"815":{"position":[[7496,8],[13373,8],[18548,8],[23660,8],[28853,8],[33959,8]]}}}],["api_respons",{"_index":668,"t":{"86":{"position":[[2217,12]]}}}],["api_schem",{"_index":402,"t":{"16":{"position":[[15573,10],[21185,10],[26973,10]]},"80":{"position":[[5278,10]]},"112":{"position":[[2217,10]]},"124":{"position":[[2217,10]]},"170":{"position":[[1726,10]]},"172":{"position":[[3021,10]]},"190":{"position":[[2217,10]]},"213":{"position":[[3416,10]]},"215":{"position":[[3408,10],[8579,10]]},"221":{"position":[[4701,10],[9905,10],[15116,10],[20145,10]]},"230":{"position":[[3676,10]]},"232":{"position":[[3454,10]]},"245":{"position":[[3678,10]]},"247":{"position":[[3423,10],[8453,10]]},"257":{"position":[[2193,10]]},"288":{"position":[[3496,10],[8404,10],[14257,10]]},"312":{"position":[[3550,10],[8577,10]]},"318":{"position":[[3861,10],[9154,10],[14388,10]]},"338":{"position":[[3605,10]]},"345":{"position":[[4519,10]]},"369":{"position":[[4108,10],[9474,10]]},"371":{"position":[[4340,10]]},"373":{"position":[[3386,10]]},"385":{"position":[[3514,10]]},"387":{"position":[[3505,10],[8758,10]]},"445":{"position":[[3559,10],[8607,10]]},"449":{"position":[[3522,10],[8737,10]]},"467":{"position":[[3447,10]]},"469":{"position":[[3689,10]]},"471":{"position":[[3578,10]]},"485":{"position":[[3789,10]]},"487":{"position":[[3698,10]]},"505":{"position":[[4158,10],[9420,10],[14835,10],[19947,10],[24988,10]]},"521":{"position":[[3462,10]]},"523":{"position":[[4026,10]]},"525":{"position":[[3644,10]]},"537":{"position":[[3760,10]]},"541":{"position":[[3755,10]]},"543":{"position":[[3556,10]]},"545":{"position":[[3354,10],[8300,10]]},"547":{"position":[[3416,10],[8292,10]]},"562":{"position":[[3543,10]]},"569":{"position":[[3954,10],[9448,10],[14894,10]]},"571":{"position":[[3803,10]]},"576":{"position":[[3713,10],[9047,10]]},"583":{"position":[[3889,10]]},"605":{"position":[[4674,10],[10267,10],[16518,10],[22764,10],[28424,10]]},"607":{"position":[[4522,10],[10200,10],[15955,10],[21697,10]]},"622":{"position":[[4039,10]]},"624":{"position":[[3521,10]]},"630":{"position":[[4127,10]]},"632":{"position":[[3426,10]]},"634":{"position":[[3630,10],[8799,10],[13858,10]]},"644":{"position":[[4185,10],[9219,10]]},"646":{"position":[[3659,10],[8695,10]]},"648":{"position":[[3696,10],[9434,10],[14886,10],[20139,10],[25215,10]]},"668":{"position":[[8330,10]]},"670":{"position":[[4747,10]]},"692":{"position":[[3851,10],[8819,10],[14368,10],[20056,10],[25168,10]]},"694":{"position":[[7067,10],[12676,10]]},"696":{"position":[[6502,10],[12912,10],[18925,10]]},"698":{"position":[[6949,10],[12649,10]]},"718":{"position":[[5585,10],[10675,10],[16011,10],[21058,10],[26235,10],[32852,10],[38628,10]]},"720":{"position":[[3442,10],[10139,10]]},"722":{"position":[[11017,10],[17193,10],[23128,10],[28898,10],[34314,10],[39428,10],[44549,10],[49686,10]]},"734":{"position":[[7700,10]]},"740":{"position":[[3727,10],[8850,10],[14204,10],[19197,10]]},"742":{"position":[[7830,10],[14532,10],[21271,10],[26736,10]]},"744":{"position":[[5210,10],[11822,10],[18281,10]]},"746":{"position":[[12724,10]]},"767":{"position":[[6385,10],[14763,10],[21734,10],[28300,10],[33482,10],[38527,10],[43588,10]]},"769":{"position":[[3604,10],[10927,10],[16294,10],[26039,10],[33675,10],[42662,10]]},"786":{"position":[[5172,10],[10133,10],[15271,10],[20189,10],[25236,10],[32384,10],[37428,10]]},"788":{"position":[[6444,10],[12134,10]]},"790":{"position":[[3714,10],[9334,10],[14331,10]]},"792":{"position":[[6603,10],[12322,10],[18958,10]]},"809":{"position":[[5178,10],[10160,10],[15305,10],[20217,10],[25260,10],[31893,10],[36933,10]]},"811":{"position":[[6606,10],[12608,10]]},"813":{"position":[[5944,10],[11747,10]]},"815":{"position":[[7401,10],[13278,10],[18453,10],[23565,10],[28758,10],[33864,10]]}}}],["apiaudi",{"_index":328,"t":{"16":{"position":[[12327,12],[13142,12],[14236,12],[15395,12],[17939,12],[18754,12],[19848,12],[21007,12],[23711,12],[24531,12],[25626,12],[26795,12]]},"80":{"position":[[775,12],[1915,12],[3536,12],[5100,12]]},"213":{"position":[[161,12],[930,12],[2114,12],[3238,12]]},"215":{"position":[[171,12],[983,12],[2074,12],[3230,12],[5336,12],[6150,12],[7243,12],[8401,12]]},"221":{"position":[[1476,12],[2284,12],[3371,12],[4523,12],[6539,12],[7345,12],[8566,12],[9727,12],[11879,12],[12691,12],[13782,12],[14938,12],[16902,12],[17716,12],[18809,12],[19967,12]]},"230":{"position":[[423,12],[1192,12],[2375,12],[3498,12]]},"232":{"position":[[214,12],[1027,12],[2119,12],[3276,12]]},"245":{"position":[[471,12],[1273,12],[2354,12],[3500,12]]},"247":{"position":[[182,12],[947,12],[2126,12],[3245,12],[5243,12],[6046,12],[7128,12],[8275,12]]},"288":{"position":[[268,12],[1028,12],[2203,12],[3318,12],[5172,12],[5934,12],[7110,12],[8226,12],[10350,12],[11296,12],[12748,12],[14079,12]]},"312":{"position":[[310,12],[1123,12],[2215,12],[3372,12],[5340,12],[6152,12],[7243,12],[8399,12]]},"318":{"position":[[429,12],[1257,12],[2500,12],[3683,12],[5914,12],[6727,12],[7819,12],[8976,12],[11148,12],[11961,12],[13053,12],[14210,12]]},"338":{"position":[[344,12],[1164,12],[2263,12],[3427,12]]},"345":{"position":[[1288,12],[2098,12],[3187,12],[4341,12]]},"369":{"position":[[292,12],[1226,12],[2631,12],[3930,12],[6228,12],[7043,12],[8137,12],[9296,12]]},"371":{"position":[[194,12],[1238,12],[2753,12],[4162,12]]},"373":{"position":[[140,12],[955,12],[2049,12],[3208,12]]},"385":{"position":[[223,12],[1004,12],[2200,12],[3336,12]]},"387":{"position":[[244,12],[1064,12],[2163,12],[3327,12],[5494,12],[6315,12],[7415,12],[8580,12]]},"445":{"position":[[310,12],[1126,12],[2221,12],[3381,12],[5361,12],[6176,12],[7270,12],[8429,12]]},"449":{"position":[[270,12],[1087,12],[2183,12],[3344,12],[5485,12],[6302,12],[7398,12],[8559,12]]},"467":{"position":[[198,12],[965,12],[2147,12],[3269,12]]},"469":{"position":[[200,12],[1047,12],[2309,12],[3511,12]]},"471":{"position":[[317,12],[1137,12],[2236,12],[3400,12]]},"485":{"position":[[384,12],[1203,12],[2437,12],[3611,12]]},"487":{"position":[[449,12],[1265,12],[2360,12],[3520,12]]},"505":{"position":[[432,12],[1336,12],[2711,12],[3980,12],[6180,12],[6993,12],[8085,12],[9242,12],[11595,12],[12408,12],[13500,12],[14657,12],[16701,12],[17516,12],[18610,12],[19769,12],[21745,12],[22559,12],[23652,12],[24810,12]]},"521":{"position":[[207,12],[976,12],[2160,12],[3284,12]]},"523":{"position":[[540,12],[1386,12],[2647,12],[3848,12]]},"525":{"position":[[377,12],[1199,12],[2300,12],[3466,12]]},"537":{"position":[[286,12],[1106,12],[2397,12],[3582,12]]},"541":{"position":[[293,12],[1109,12],[2396,12],[3577,12]]},"543":{"position":[[304,12],[1072,12],[2255,12],[3378,12]]},"545":{"position":[[150,12],[951,12],[2031,12],[3176,12],[5096,12],[5897,12],[6977,12],[8122,12]]},"547":{"position":[[187,12],[948,12],[2123,12],[3238,12],[5085,12],[5887,12],[6968,12],[8114,12]]},"562":{"position":[[309,12],[1120,12],[2210,12],[3365,12]]},"569":{"position":[[559,12],[1420,12],[2600,12],[3776,12],[6131,12],[6973,12],[8115,12],[9270,12],[11547,12],[12399,12],[13551,12],[14716,12]]},"571":{"position":[[762,12],[1505,12],[2567,12],[3625,12]]},"576":{"position":[[300,12],[1150,12],[2334,12],[3535,12],[5634,12],[6484,12],[7668,12],[8869,12]]},"583":{"position":[[221,12],[1148,12],[2412,12],[3711,12]]},"605":{"position":[[1437,12],[2249,12],[3340,12],[4496,12],[7030,12],[7842,12],[8933,12],[10089,12],[13272,12],[14087,12],[15181,12],[16340,12],[19527,12],[20339,12],[21430,12],[22586,12],[25184,12],[25997,12],[27089,12],[28246,12]]},"607":{"position":[[1282,12],[2095,12],[3187,12],[4344,12],[6951,12],[7767,12],[8862,12],[10022,12],[12712,12],[13526,12],[14619,12],[15777,12],[18454,12],[19268,12],[20361,12],[21519,12]]},"622":{"position":[[436,12],[1321,12],[2621,12],[3861,12]]},"624":{"position":[[251,12],[1074,12],[2176,12],[3343,12]]},"630":{"position":[[161,12],[1145,12],[2600,12],[3949,12]]},"632":{"position":[[180,12],[995,12],[2089,12],[3248,12]]},"634":{"position":[[161,12],[1002,12],[2257,12],[3452,12],[5550,12],[6366,12],[7461,12],[8621,12],[10600,12],[11419,12],[12517,12],[13680,12]]},"644":{"position":[[942,12],[1756,12],[2849,12],[4007,12],[5979,12],[6792,12],[7884,12],[9041,12]]},"646":{"position":[[251,12],[1071,12],[2306,12],[3481,12],[5443,12],[6260,12],[7356,12],[8517,12]]},"648":{"position":[[226,12],[1138,12],[2298,12],[3518,12],[5885,12],[6730,12],[8046,12],[9256,12],[11333,12],[12180,12],[13497,12],[14708,12],[16896,12],[17710,12],[18803,12],[19961,12],[21978,12],[22790,12],[23881,12],[25037,12]]},"668":{"position":[[4871,12],[5708,12],[6960,12],[8152,12]]},"670":{"position":[[1203,12],[2069,12],[3349,12],[4569,12]]},"692":{"position":[[578,12],[1353,12],[2543,12],[3673,12],[5534,12],[6313,12],[7507,12],[8641,12],[10522,12],[11444,12],[12893,12],[14190,12],[16813,12],[17627,12],[18720,12],[19878,12],[21931,12],[22743,12],[23834,12],[24990,12]]},"694":{"position":[[2996,12],[3971,12],[5529,12],[6889,12],[9424,12],[10241,12],[11337,12],[12498,12]]},"696":{"position":[[2899,12],[3762,12],[5096,12],[6324,12],[8592,12],[9650,12],[11291,12],[12734,12],[15691,12],[16502,12],[17592,12],[18747,12]]},"698":{"position":[[3094,12],[4019,12],[5471,12],[6771,12],[9400,12],[10216,12],[11311,12],[12471,12]]},"718":{"position":[[2135,12],[2969,12],[4218,12],[5407,12],[7414,12],[8234,12],[9333,12],[10497,12],[12561,12],[13395,12],[14644,12],[15833,12],[17797,12],[18617,12],[19716,12],[20880,12],[22953,12],[23780,12],[24886,12],[26057,12],[28520,12],[29604,12],[31215,12],[32674,12],[35367,12],[36187,12],[37286,12],[38450,12]]},"720":{"position":[[196,12],[1011,12],[2105,12],[3264,12],[6896,12],[7710,12],[8803,12],[9961,12]]},"722":{"position":[[6940,12],[7939,12],[9465,12],[10839,12],[13536,12],[14439,12],[15757,12],[17015,12],[19273,12],[20220,12],[21638,12],[22950,12],[25298,12],[26160,12],[27493,12],[28720,12],[30951,12],[31756,12],[32976,12],[34136,12],[36116,12],[36904,12],[38107,12],[39250,12],[41312,12],[42124,12],[43215,12],[44371,12],[46404,12],[47231,12],[48337,12],[49508,12]]},"734":{"position":[[2669,12],[3964,12],[5842,12],[7522,12]]},"740":{"position":[[496,12],[1306,12],[2395,12],[3549,12],[5607,12],[6421,12],[7514,12],[8672,12],[10751,12],[11586,12],[12836,12],[14026,12],[15963,12],[16774,12],[17864,12],[19019,12]]},"742":{"position":[[4611,12],[5417,12],[6502,12],[7652,12],[9843,12],[11046,12],[12776,12],[14354,12],[17383,12],[18341,12],[19770,12],[21093,12],[23505,12],[24315,12],[25404,12],[26558,12]]},"744":{"position":[[1156,12],[2170,12],[3654,12],[5032,12],[7851,12],[8846,12],[10270,12],[11644,12],[14307,12],[15303,12],[16728,12],[18103,12]]},"746":{"position":[[3397,12],[5948,12],[9530,12],[12546,12]]},"767":{"position":[[265,12],[1879,12],[4188,12],[6207,12],[10221,12],[11375,12],[13056,12],[14585,12],[17402,12],[18486,12],[20097,12],[21556,12],[25060,12],[25873,12],[26965,12],[28122,12],[30239,12],[31053,12],[32146,12],[33304,12],[35275,12],[36092,12],[37188,12],[38349,12],[40333,12],[41151,12],[42248,12],[43410,12]]},"769":{"position":[[361,12],[1175,12],[2268,12],[3426,12],[7696,12],[8506,12],[9595,12],[10749,12],[13036,12],[13855,12],[14953,12],[16116,12],[22784,12],[23602,12],[24699,12],[25861,12],[30447,12],[31256,12],[32344,12],[33497,12],[39434,12],[40243,12],[41331,12],[42484,12]]},"786":{"position":[[1896,12],[2672,12],[3863,12],[4994,12],[6887,12],[7702,12],[8796,12],[9955,12],[11995,12],[12771,12],[13962,12],[15093,12],[16943,12],[17758,12],[18852,12],[20011,12],[21987,12],[22803,12],[23898,12],[25058,12],[29138,12],[29953,12],[31047,12],[32206,12],[34182,12],[34997,12],[36091,12],[37250,12]]},"788":{"position":[[2415,12],[3420,12],[4896,12],[6266,12],[8882,12],[9699,12],[10795,12],[11956,12]]},"790":{"position":[[366,12],[1166,12],[2381,12],[3536,12],[5890,12],[6722,12],[7969,12],[9156,12],[11085,12],[11900,12],[12994,12],[14153,12]]},"792":{"position":[[3009,12],[3869,12],[5200,12],[6425,12],[9064,12],[9883,12],[10981,12],[12144,12],[15616,12],[16414,12],[17627,12],[18780,12]]},"809":{"position":[[1893,12],[2672,12],[3866,12],[5000,12],[6905,12],[7723,12],[8820,12],[9982,12],[12032,12],[12807,12],[13997,12],[15127,12],[16974,12],[17788,12],[18881,12],[20039,12],[22011,12],[22827,12],[23922,12],[25082,12],[28650,12],[29464,12],[30557,12],[31715,12],[33687,12],[34502,12],[35596,12],[36755,12]]},"811":{"position":[[2172,12],[3268,12],[4947,12],[6428,12],[9353,12],[10171,12],[11268,12],[12430,12]]},"813":{"position":[[2005,12],[2980,12],[4426,12],[5766,12],[8483,12],[9304,12],[10404,12],[11569,12]]},"815":{"position":[[2877,12],[4025,12],[5700,12],[7223,12],[10011,12],[10833,12],[11934,12],[13100,12],[15180,12],[16004,12],[17107,12],[18275,12],[20286,12],[21112,12],[22217,12],[23387,12],[25485,12],[26309,12],[27412,12],[28580,12],[30591,12],[31415,12],[32518,12],[33686,12]]}}}],["apicli",{"_index":655,"t":{"86":{"position":[[843,9]]},"170":{"position":[[950,9]]},"172":{"position":[[1784,9]]}}}],["apiclient.openfgaapi.createstore(context.background()).body(openfga.createstorerequest",{"_index":659,"t":{"86":{"position":[[908,87]]}}}],["apiclient.openfgaapi.listobjects(context.background()).body(body).execut",{"_index":457,"t":{"16":{"position":[[25444,75]]},"126":{"position":[[511,75]]},"583":{"position":[[2230,75]]}}}],["apihost",{"_index":342,"t":{"16":{"position":[[12653,8],[13501,8],[14711,7],[18265,8],[19113,8],[20323,7],[24037,8],[24890,8],[26101,7]]},"80":{"position":[[1101,8],[2274,8],[4011,7]]},"86":{"position":[[230,8],[662,8],[1395,7]]},"98":{"position":[[1267,8],[4684,8]]},"102":{"position":[[556,8]]},"112":{"position":[[374,8],[908,8],[1703,7]]},"124":{"position":[[374,8],[908,8],[1703,7]]},"170":{"position":[[320,8],[733,8],[1331,7]]},"172":{"position":[[645,8],[1242,8],[2139,7]]},"190":{"position":[[374,8],[908,8],[1703,7]]},"213":{"position":[[487,8],[1289,8],[2589,7]]},"215":{"position":[[497,8],[1342,8],[2549,7],[5662,8],[6509,8],[7718,7]]},"221":{"position":[[1802,8],[2643,8],[3846,7],[6865,8],[7704,8],[9041,7],[12205,8],[13050,8],[14257,7],[17228,8],[18075,8],[19284,7]]},"230":{"position":[[749,8],[1551,8],[2850,7]]},"232":{"position":[[540,8],[1386,8],[2594,7]]},"245":{"position":[[797,8],[1632,8],[2829,7]]},"247":{"position":[[508,8],[1306,8],[2601,7],[5569,8],[6405,8],[7603,7]]},"257":{"position":[[350,8],[884,8],[1679,7]]},"288":{"position":[[594,8],[1387,8],[2678,7],[5498,8],[6293,8],[7585,7],[10676,8],[11655,8],[13223,7]]},"312":{"position":[[636,8],[1482,8],[2690,7],[5666,8],[6511,8],[7718,7]]},"318":{"position":[[755,8],[1616,8],[2975,7],[6240,8],[7086,8],[8294,7],[11474,8],[12320,8],[13528,7]]},"338":{"position":[[670,8],[1523,8],[2738,7]]},"345":{"position":[[1614,8],[2457,8],[3662,7]]},"369":{"position":[[618,8],[1585,8],[3106,7],[6554,8],[7402,8],[8612,7]]},"371":{"position":[[520,8],[1597,8],[3228,7]]},"373":{"position":[[466,8],[1314,8],[2524,7]]},"385":{"position":[[549,8],[1363,8],[2675,7]]},"387":{"position":[[570,8],[1423,8],[2638,7],[5820,8],[6674,8],[7890,7]]},"445":{"position":[[636,8],[1485,8],[2696,7],[5687,8],[6535,8],[7745,7]]},"449":{"position":[[596,8],[1446,8],[2658,7],[5811,8],[6661,8],[7873,7]]},"467":{"position":[[524,8],[1324,8],[2622,7]]},"469":{"position":[[526,8],[1406,8],[2784,7]]},"471":{"position":[[643,8],[1496,8],[2711,7]]},"485":{"position":[[710,8],[1562,8],[2912,7]]},"487":{"position":[[775,8],[1624,8],[2835,7]]},"505":{"position":[[758,8],[1695,8],[3186,7],[6506,8],[7352,8],[8560,7],[11921,8],[12767,8],[13975,7],[17027,8],[17875,8],[19085,7],[22071,8],[22918,8],[24127,7]]},"521":{"position":[[533,8],[1335,8],[2635,7]]},"523":{"position":[[866,8],[1745,8],[3122,7]]},"525":{"position":[[703,8],[1558,8],[2775,7]]},"537":{"position":[[612,8],[1465,8],[2872,7]]},"541":{"position":[[619,8],[1468,8],[2871,7]]},"543":{"position":[[630,8],[1431,8],[2730,7]]},"545":{"position":[[476,8],[1310,8],[2506,7],[5422,8],[6256,8],[7452,7]]},"547":{"position":[[513,8],[1307,8],[2598,7],[5411,8],[6246,8],[7443,7]]},"562":{"position":[[635,8],[1479,8],[2685,7]]},"569":{"position":[[885,8],[1779,8],[3075,7],[6457,8],[7332,8],[8590,7],[11873,8],[12758,8],[14026,7]]},"571":{"position":[[1088,8],[1864,8],[3042,7]]},"576":{"position":[[626,8],[1509,8],[2809,7],[5960,8],[6843,8],[8143,7]]},"583":{"position":[[547,8],[1507,8],[2887,7]]},"605":{"position":[[1763,8],[2608,8],[3815,7],[7356,8],[8201,8],[9408,7],[13598,8],[14446,8],[15656,7],[19853,8],[20698,8],[21905,7],[25510,8],[26356,8],[27564,7]]},"607":{"position":[[1608,8],[2454,8],[3662,7],[7277,8],[8126,8],[9337,7],[13038,8],[13885,8],[15094,7],[18780,8],[19627,8],[20836,7]]},"622":{"position":[[762,8],[1680,8],[3096,7]]},"624":{"position":[[577,8],[1433,8],[2651,7]]},"630":{"position":[[487,8],[1504,8],[3075,7]]},"632":{"position":[[506,8],[1354,8],[2564,7]]},"634":{"position":[[487,8],[1361,8],[2732,7],[5876,8],[6725,8],[7936,7],[10926,8],[11778,8],[12992,7]]},"644":{"position":[[1268,8],[2115,8],[3324,7],[6305,8],[7151,8],[8359,7]]},"646":{"position":[[577,8],[1430,8],[2781,7],[5769,8],[6619,8],[7831,7]]},"648":{"position":[[552,8],[1497,8],[2773,7],[6211,8],[7089,8],[8521,7],[11659,8],[12539,8],[13972,7],[17222,8],[18069,8],[19278,7],[22304,8],[23149,8],[24356,7]]},"668":{"position":[[5197,8],[6067,8],[7435,7]]},"670":{"position":[[1529,8],[2428,8],[3824,7]]},"692":{"position":[[904,8],[1712,8],[3018,7],[5860,8],[6672,8],[7982,7],[10848,8],[11803,8],[13368,7],[17139,8],[17986,8],[19195,7],[22257,8],[23102,8],[24309,7]]},"694":{"position":[[3322,8],[4330,8],[6004,7],[9750,8],[10600,8],[11812,7]]},"696":{"position":[[3225,8],[4121,8],[5571,7],[8918,8],[10009,8],[11766,7],[16017,8],[16861,8],[18067,7]]},"698":{"position":[[3420,8],[4378,8],[5946,7],[9726,8],[10575,8],[11786,7]]},"718":{"position":[[2461,8],[3328,8],[4693,7],[7740,8],[8593,8],[9808,7],[12887,8],[13754,8],[15119,7],[18123,8],[18976,8],[20191,7],[23279,8],[24139,8],[25361,7],[28846,8],[29963,8],[31690,7],[35693,8],[36546,8],[37761,7]]},"720":{"position":[[522,8],[1370,8],[2580,7],[7222,8],[8069,8],[9278,7]]},"722":{"position":[[7266,8],[8298,8],[9940,7],[13862,8],[14798,8],[16232,7],[19599,8],[20579,8],[22113,7],[25624,8],[26519,8],[27968,7],[31277,8],[32115,8],[33451,7],[36442,8],[37263,8],[38582,7],[41638,8],[42483,8],[43690,7],[46730,8],[47590,8],[48812,7]]},"734":{"position":[[2995,8],[4323,8],[6317,7]]},"740":{"position":[[822,8],[1665,8],[2870,7],[5933,8],[6780,8],[7989,7],[11077,8],[11945,8],[13311,7],[16289,8],[17133,8],[18339,7]]},"742":{"position":[[4937,8],[5776,8],[6977,7],[10169,8],[11405,8],[13251,7],[17709,8],[18700,8],[20245,7],[23831,8],[24674,8],[25879,7]]},"744":{"position":[[1482,8],[2529,8],[4129,7],[8177,8],[9205,8],[10745,7],[14633,8],[15662,8],[17203,7]]},"746":{"position":[[3723,8],[6307,8],[10005,7]]},"767":{"position":[[591,8],[2238,8],[4663,7],[10547,8],[11734,8],[13531,7],[17728,8],[18845,8],[20572,7],[25386,8],[26232,8],[27440,7],[30565,8],[31412,8],[32621,7],[35601,8],[36451,8],[37663,7],[40659,8],[41510,8],[42723,7]]},"769":{"position":[[687,8],[1534,8],[2743,7],[8022,8],[8865,8],[10070,7],[13362,8],[14214,8],[15428,7],[23110,8],[23961,8],[25174,7],[30773,8],[31615,8],[32819,7],[39760,8],[40602,8],[41806,7]]},"786":{"position":[[2222,8],[3031,8],[4338,7],[7213,8],[8061,8],[9271,7],[12321,8],[13130,8],[14437,7],[17269,8],[18117,8],[19327,7],[22313,8],[23162,8],[24373,7],[29464,8],[30312,8],[31522,7],[34508,8],[35356,8],[36566,7]]},"788":{"position":[[2741,8],[3779,8],[5371,7],[9208,8],[10058,8],[11270,7]]},"790":{"position":[[692,8],[1525,8],[2856,7],[6216,8],[7081,8],[8444,7],[11411,8],[12259,8],[13469,7]]},"792":{"position":[[3335,8],[4228,8],[5675,7],[9390,8],[10242,8],[11456,7],[15942,8],[16773,8],[18102,7]]},"809":{"position":[[2219,8],[3031,8],[4341,7],[7231,8],[8082,8],[9295,7],[12358,8],[13166,8],[14472,7],[17300,8],[18147,8],[19356,7],[22337,8],[23186,8],[24397,7],[28976,8],[29823,8],[31032,7],[34013,8],[34861,8],[36071,7]]},"811":{"position":[[2498,8],[3627,8],[5422,7],[9679,8],[10530,8],[11743,7]]},"813":{"position":[[2331,8],[3339,8],[4901,7],[8809,8],[9663,8],[10879,7]]},"815":{"position":[[3203,8],[4384,8],[6175,7],[10337,8],[11192,8],[12409,7],[15506,8],[16363,8],[17582,7],[20612,8],[21471,8],[22692,7],[25811,8],[26668,8],[27887,7],[30917,8],[31774,8],[32993,7]]}}}],["apischem",{"_index":339,"t":{"16":{"position":[[12565,10],[13416,10],[14596,9],[18177,10],[19028,10],[20208,9],[23949,10],[24805,10],[25986,9]]},"80":{"position":[[1013,10],[2189,10],[3896,9]]},"86":{"position":[[158,10],[589,10],[1296,9]]},"98":{"position":[[1169,10],[4585,10]]},"102":{"position":[[483,10]]},"112":{"position":[[286,10],[823,10],[1588,9]]},"124":{"position":[[286,10],[823,10],[1588,9]]},"170":{"position":[[222,10],[634,10],[1206,9]]},"172":{"position":[[573,10],[1169,10],[2040,9]]},"190":{"position":[[286,10],[823,10],[1588,9]]},"213":{"position":[[399,10],[1204,10],[2474,9]]},"215":{"position":[[409,10],[1257,10],[2434,9],[5574,10],[6424,10],[7603,9]]},"221":{"position":[[1714,10],[2558,10],[3731,9],[6777,10],[7619,10],[8926,9],[12117,10],[12965,10],[14142,9],[17140,10],[17990,10],[19169,9]]},"230":{"position":[[661,10],[1466,10],[2735,9]]},"232":{"position":[[452,10],[1301,10],[2479,9]]},"245":{"position":[[709,10],[1547,10],[2714,9]]},"247":{"position":[[420,10],[1221,10],[2486,9],[5481,10],[6320,10],[7488,9]]},"257":{"position":[[262,10],[799,10],[1564,9]]},"288":{"position":[[506,10],[1302,10],[2563,9],[5410,10],[6208,10],[7470,9],[10588,10],[11570,10],[13108,9]]},"312":{"position":[[548,10],[1397,10],[2575,9],[5578,10],[6426,10],[7603,9]]},"318":{"position":[[667,10],[1531,10],[2860,9],[6152,10],[7001,10],[8179,9],[11386,10],[12235,10],[13413,9]]},"338":{"position":[[582,10],[1438,10],[2623,9]]},"345":{"position":[[1526,10],[2372,10],[3547,9]]},"369":{"position":[[530,10],[1500,10],[2991,9],[6466,10],[7317,10],[8497,9]]},"371":{"position":[[432,10],[1512,10],[3113,9]]},"373":{"position":[[378,10],[1229,10],[2409,9]]},"385":{"position":[[461,10],[1278,10],[2560,9]]},"387":{"position":[[482,10],[1338,10],[2523,9],[5732,10],[6589,10],[7775,9]]},"445":{"position":[[548,10],[1400,10],[2581,9],[5599,10],[6450,10],[7630,9]]},"449":{"position":[[508,10],[1361,10],[2543,9],[5723,10],[6576,10],[7758,9]]},"467":{"position":[[436,10],[1239,10],[2507,9]]},"469":{"position":[[438,10],[1321,10],[2669,9]]},"471":{"position":[[555,10],[1411,10],[2596,9]]},"485":{"position":[[622,10],[1477,10],[2797,9]]},"487":{"position":[[687,10],[1539,10],[2720,9]]},"505":{"position":[[670,10],[1610,10],[3071,9],[6418,10],[7267,10],[8445,9],[11833,10],[12682,10],[13860,9],[16939,10],[17790,10],[18970,9],[21983,10],[22833,10],[24012,9]]},"521":{"position":[[445,10],[1250,10],[2520,9]]},"523":{"position":[[778,10],[1660,10],[3007,9]]},"525":{"position":[[615,10],[1473,10],[2660,9]]},"537":{"position":[[524,10],[1380,10],[2757,9]]},"541":{"position":[[531,10],[1383,10],[2756,9]]},"543":{"position":[[542,10],[1346,10],[2615,9]]},"545":{"position":[[388,10],[1225,10],[2391,9],[5334,10],[6171,10],[7337,9]]},"547":{"position":[[425,10],[1222,10],[2483,9],[5323,10],[6161,10],[7328,9]]},"562":{"position":[[547,10],[1394,10],[2570,9]]},"569":{"position":[[797,10],[1694,10],[2960,9],[6369,10],[7247,10],[8475,9],[11785,10],[12673,10],[13911,9]]},"571":{"position":[[1000,10],[1779,10],[2927,9]]},"576":{"position":[[538,10],[1424,10],[2694,9],[5872,10],[6758,10],[8028,9]]},"583":{"position":[[459,10],[1422,10],[2772,9]]},"605":{"position":[[1675,10],[2523,10],[3700,9],[7268,10],[8116,10],[9293,9],[13510,10],[14361,10],[15541,9],[19765,10],[20613,10],[21790,9],[25422,10],[26271,10],[27449,9]]},"607":{"position":[[1520,10],[2369,10],[3547,9],[7189,10],[8041,10],[9222,9],[12950,10],[13800,10],[14979,9],[18692,10],[19542,10],[20721,9]]},"622":{"position":[[674,10],[1595,10],[2981,9]]},"624":{"position":[[489,10],[1348,10],[2536,9]]},"630":{"position":[[399,10],[1419,10],[2960,9]]},"632":{"position":[[418,10],[1269,10],[2449,9]]},"634":{"position":[[399,10],[1276,10],[2617,9],[5788,10],[6640,10],[7821,9],[10838,10],[11693,10],[12877,9]]},"644":{"position":[[1180,10],[2030,10],[3209,9],[6217,10],[7066,10],[8244,9]]},"646":{"position":[[489,10],[1345,10],[2666,9],[5681,10],[6534,10],[7716,9]]},"648":{"position":[[464,10],[1412,10],[2658,9],[6123,10],[7004,10],[8406,9],[11571,10],[12454,10],[13857,9],[17134,10],[17984,10],[19163,9],[22216,10],[23064,10],[24241,9]]},"668":{"position":[[5109,10],[5982,10],[7320,9]]},"670":{"position":[[1441,10],[2343,10],[3709,9]]},"692":{"position":[[816,10],[1627,10],[2903,9],[5772,10],[6587,10],[7867,9],[10760,10],[11718,10],[13253,9],[17051,10],[17901,10],[19080,9],[22169,10],[23017,10],[24194,9]]},"694":{"position":[[3234,10],[4245,10],[5889,9],[9662,10],[10515,10],[11697,9]]},"696":{"position":[[3137,10],[4036,10],[5456,9],[8830,10],[9924,10],[11651,9],[15929,10],[16776,10],[17952,9]]},"698":{"position":[[3332,10],[4293,10],[5831,9],[9638,10],[10490,10],[11671,9]]},"718":{"position":[[2373,10],[3243,10],[4578,9],[7652,10],[8508,10],[9693,9],[12799,10],[13669,10],[15004,9],[18035,10],[18891,10],[20076,9],[23191,10],[24054,10],[25246,9],[28758,10],[29878,10],[31575,9],[35605,10],[36461,10],[37646,9]]},"720":{"position":[[434,10],[1285,10],[2465,9],[7134,10],[7984,10],[9163,9]]},"722":{"position":[[7178,10],[8213,10],[9825,9],[13774,10],[14713,10],[16117,9],[19511,10],[20494,10],[21998,9],[25536,10],[26434,10],[27853,9],[31189,10],[32030,10],[33336,9],[36354,10],[37178,10],[38467,9],[41550,10],[42398,10],[43575,9],[46642,10],[47505,10],[48697,9]]},"734":{"position":[[2907,10],[4238,10],[6202,9]]},"740":{"position":[[734,10],[1580,10],[2755,9],[5845,10],[6695,10],[7874,9],[10989,10],[11860,10],[13196,9],[16201,10],[17048,10],[18224,9]]},"742":{"position":[[4849,10],[5691,10],[6862,9],[10081,10],[11320,10],[13136,9],[17621,10],[18615,10],[20130,9],[23743,10],[24589,10],[25764,9]]},"744":{"position":[[1394,10],[2444,10],[4014,9],[8089,10],[9120,10],[10630,9],[14545,10],[15577,10],[17088,9]]},"746":{"position":[[3635,10],[6222,10],[9890,9]]},"767":{"position":[[503,10],[2153,10],[4548,9],[10459,10],[11649,10],[13416,9],[17640,10],[18760,10],[20457,9],[25298,10],[26147,10],[27325,9],[30477,10],[31327,10],[32506,9],[35513,10],[36366,10],[37548,9],[40571,10],[41425,10],[42608,9]]},"769":{"position":[[599,10],[1449,10],[2628,9],[7934,10],[8780,10],[9955,9],[13274,10],[14129,10],[15313,9],[23022,10],[23876,10],[25059,9],[30685,10],[31530,10],[32704,9],[39672,10],[40517,10],[41691,9]]},"786":{"position":[[2134,10],[2946,10],[4223,9],[7125,10],[7976,10],[9156,9],[12233,10],[13045,10],[14322,9],[17181,10],[18032,10],[19212,9],[22225,10],[23077,10],[24258,9],[29376,10],[30227,10],[31407,9],[34420,10],[35271,10],[36451,9]]},"788":{"position":[[2653,10],[3694,10],[5256,9],[9120,10],[9973,10],[11155,9]]},"790":{"position":[[604,10],[1440,10],[2741,9],[6128,10],[6996,10],[8329,9],[11323,10],[12174,10],[13354,9]]},"792":{"position":[[3247,10],[4143,10],[5560,9],[9302,10],[10157,10],[11341,9],[15854,10],[16688,10],[17987,9]]},"809":{"position":[[2131,10],[2946,10],[4226,9],[7143,10],[7997,10],[9180,9],[12270,10],[13081,10],[14357,9],[17212,10],[18062,10],[19241,9],[22249,10],[23101,10],[24282,9],[28888,10],[29738,10],[30917,9],[33925,10],[34776,10],[35956,9]]},"811":{"position":[[2410,10],[3542,10],[5307,9],[9591,10],[10445,10],[11628,9]]},"813":{"position":[[2243,10],[3254,10],[4786,9],[8721,10],[9578,10],[10764,9]]},"815":{"position":[[3115,10],[4299,10],[6060,9],[10249,10],[11107,10],[12294,9],[15418,10],[16278,10],[17467,9],[20524,10],[21386,10],[22577,9],[25723,10],[26583,10],[27772,9],[30829,10],[31689,10],[32878,9]]}}}],["apitoken",{"_index":1127,"t":{"172":{"position":[[1621,9],[1710,12],[2580,8]]}}}],["apitokenissu",{"_index":327,"t":{"16":{"position":[[12311,15],[13126,15],[14220,15],[15379,15],[17923,15],[18738,15],[19832,15],[20991,15],[23695,15],[24515,15],[25610,15],[26779,15]]},"80":{"position":[[759,15],[1899,15],[3520,15],[5084,15]]},"213":{"position":[[145,15],[914,15],[2098,15],[3222,15]]},"215":{"position":[[155,15],[967,15],[2058,15],[3214,15],[5320,15],[6134,15],[7227,15],[8385,15]]},"221":{"position":[[1460,15],[2268,15],[3355,15],[4507,15],[6523,15],[7329,15],[8550,15],[9711,15],[11863,15],[12675,15],[13766,15],[14922,15],[16886,15],[17700,15],[18793,15],[19951,15]]},"230":{"position":[[407,15],[1176,15],[2359,15],[3482,15]]},"232":{"position":[[198,15],[1011,15],[2103,15],[3260,15]]},"245":{"position":[[455,15],[1257,15],[2338,15],[3484,15]]},"247":{"position":[[166,15],[931,15],[2110,15],[3229,15],[5227,15],[6030,15],[7112,15],[8259,15]]},"288":{"position":[[252,15],[1012,15],[2187,15],[3302,15],[5156,15],[5918,15],[7094,15],[8210,15],[10334,15],[11280,15],[12732,15],[14063,15]]},"312":{"position":[[294,15],[1107,15],[2199,15],[3356,15],[5324,15],[6136,15],[7227,15],[8383,15]]},"318":{"position":[[413,15],[1241,15],[2484,15],[3667,15],[5898,15],[6711,15],[7803,15],[8960,15],[11132,15],[11945,15],[13037,15],[14194,15]]},"338":{"position":[[328,15],[1148,15],[2247,15],[3411,15]]},"345":{"position":[[1272,15],[2082,15],[3171,15],[4325,15]]},"369":{"position":[[276,15],[1210,15],[2615,15],[3914,15],[6212,15],[7027,15],[8121,15],[9280,15]]},"371":{"position":[[178,15],[1222,15],[2737,15],[4146,15]]},"373":{"position":[[124,15],[939,15],[2033,15],[3192,15]]},"385":{"position":[[207,15],[988,15],[2184,15],[3320,15]]},"387":{"position":[[228,15],[1048,15],[2147,15],[3311,15],[5478,15],[6299,15],[7399,15],[8564,15]]},"445":{"position":[[294,15],[1110,15],[2205,15],[3365,15],[5345,15],[6160,15],[7254,15],[8413,15]]},"449":{"position":[[254,15],[1071,15],[2167,15],[3328,15],[5469,15],[6286,15],[7382,15],[8543,15]]},"467":{"position":[[182,15],[949,15],[2131,15],[3253,15]]},"469":{"position":[[184,15],[1031,15],[2293,15],[3495,15]]},"471":{"position":[[301,15],[1121,15],[2220,15],[3384,15]]},"485":{"position":[[368,15],[1187,15],[2421,15],[3595,15]]},"487":{"position":[[433,15],[1249,15],[2344,15],[3504,15]]},"505":{"position":[[416,15],[1320,15],[2695,15],[3964,15],[6164,15],[6977,15],[8069,15],[9226,15],[11579,15],[12392,15],[13484,15],[14641,15],[16685,15],[17500,15],[18594,15],[19753,15],[21729,15],[22543,15],[23636,15],[24794,15]]},"521":{"position":[[191,15],[960,15],[2144,15],[3268,15]]},"523":{"position":[[524,15],[1370,15],[2631,15],[3832,15]]},"525":{"position":[[361,15],[1183,15],[2284,15],[3450,15]]},"537":{"position":[[270,15],[1090,15],[2381,15],[3566,15]]},"541":{"position":[[277,15],[1093,15],[2380,15],[3561,15]]},"543":{"position":[[288,15],[1056,15],[2239,15],[3362,15]]},"545":{"position":[[134,15],[935,15],[2015,15],[3160,15],[5080,15],[5881,15],[6961,15],[8106,15]]},"547":{"position":[[171,15],[932,15],[2107,15],[3222,15],[5069,15],[5871,15],[6952,15],[8098,15]]},"562":{"position":[[293,15],[1104,15],[2194,15],[3349,15]]},"569":{"position":[[543,15],[1404,15],[2584,15],[3760,15],[6115,15],[6957,15],[8099,15],[9254,15],[11531,15],[12383,15],[13535,15],[14700,15]]},"571":{"position":[[746,15],[1489,15],[2551,15],[3609,15]]},"576":{"position":[[284,15],[1134,15],[2318,15],[3519,15],[5618,15],[6468,15],[7652,15],[8853,15]]},"583":{"position":[[205,15],[1132,15],[2396,15],[3695,15]]},"605":{"position":[[1421,15],[2233,15],[3324,15],[4480,15],[7014,15],[7826,15],[8917,15],[10073,15],[13256,15],[14071,15],[15165,15],[16324,15],[19511,15],[20323,15],[21414,15],[22570,15],[25168,15],[25981,15],[27073,15],[28230,15]]},"607":{"position":[[1266,15],[2079,15],[3171,15],[4328,15],[6935,15],[7751,15],[8846,15],[10006,15],[12696,15],[13510,15],[14603,15],[15761,15],[18438,15],[19252,15],[20345,15],[21503,15]]},"622":{"position":[[420,15],[1305,15],[2605,15],[3845,15]]},"624":{"position":[[235,15],[1058,15],[2160,15],[3327,15]]},"630":{"position":[[145,15],[1129,15],[2584,15],[3933,15]]},"632":{"position":[[164,15],[979,15],[2073,15],[3232,15]]},"634":{"position":[[145,15],[986,15],[2241,15],[3436,15],[5534,15],[6350,15],[7445,15],[8605,15],[10584,15],[11403,15],[12501,15],[13664,15]]},"644":{"position":[[926,15],[1740,15],[2833,15],[3991,15],[5963,15],[6776,15],[7868,15],[9025,15]]},"646":{"position":[[235,15],[1055,15],[2290,15],[3465,15],[5427,15],[6244,15],[7340,15],[8501,15]]},"648":{"position":[[210,15],[1122,15],[2282,15],[3502,15],[5869,15],[6714,15],[8030,15],[9240,15],[11317,15],[12164,15],[13481,15],[14692,15],[16880,15],[17694,15],[18787,15],[19945,15],[21962,15],[22774,15],[23865,15],[25021,15]]},"668":{"position":[[4855,15],[5692,15],[6944,15],[8136,15]]},"670":{"position":[[1187,15],[2053,15],[3333,15],[4553,15]]},"692":{"position":[[562,15],[1337,15],[2527,15],[3657,15],[5518,15],[6297,15],[7491,15],[8625,15],[10506,15],[11428,15],[12877,15],[14174,15],[16797,15],[17611,15],[18704,15],[19862,15],[21915,15],[22727,15],[23818,15],[24974,15]]},"694":{"position":[[2980,15],[3955,15],[5513,15],[6873,15],[9408,15],[10225,15],[11321,15],[12482,15]]},"696":{"position":[[2883,15],[3746,15],[5080,15],[6308,15],[8576,15],[9634,15],[11275,15],[12718,15],[15675,15],[16486,15],[17576,15],[18731,15]]},"698":{"position":[[3078,15],[4003,15],[5455,15],[6755,15],[9384,15],[10200,15],[11295,15],[12455,15]]},"718":{"position":[[2119,15],[2953,15],[4202,15],[5391,15],[7398,15],[8218,15],[9317,15],[10481,15],[12545,15],[13379,15],[14628,15],[15817,15],[17781,15],[18601,15],[19700,15],[20864,15],[22937,15],[23764,15],[24870,15],[26041,15],[28504,15],[29588,15],[31199,15],[32658,15],[35351,15],[36171,15],[37270,15],[38434,15]]},"720":{"position":[[180,15],[995,15],[2089,15],[3248,15],[6880,15],[7694,15],[8787,15],[9945,15]]},"722":{"position":[[6924,15],[7923,15],[9449,15],[10823,15],[13520,15],[14423,15],[15741,15],[16999,15],[19257,15],[20204,15],[21622,15],[22934,15],[25282,15],[26144,15],[27477,15],[28704,15],[30935,15],[31740,15],[32960,15],[34120,15],[36100,15],[36888,15],[38091,15],[39234,15],[41296,15],[42108,15],[43199,15],[44355,15],[46388,15],[47215,15],[48321,15],[49492,15]]},"734":{"position":[[2653,15],[3948,15],[5826,15],[7506,15]]},"740":{"position":[[480,15],[1290,15],[2379,15],[3533,15],[5591,15],[6405,15],[7498,15],[8656,15],[10735,15],[11570,15],[12820,15],[14010,15],[15947,15],[16758,15],[17848,15],[19003,15]]},"742":{"position":[[4595,15],[5401,15],[6486,15],[7636,15],[9827,15],[11030,15],[12760,15],[14338,15],[17367,15],[18325,15],[19754,15],[21077,15],[23489,15],[24299,15],[25388,15],[26542,15]]},"744":{"position":[[1140,15],[2154,15],[3638,15],[5016,15],[7835,15],[8830,15],[10254,15],[11628,15],[14291,15],[15287,15],[16712,15],[18087,15]]},"746":{"position":[[3381,15],[5932,15],[9514,15],[12530,15]]},"767":{"position":[[249,15],[1863,15],[4172,15],[6191,15],[10205,15],[11359,15],[13040,15],[14569,15],[17386,15],[18470,15],[20081,15],[21540,15],[25044,15],[25857,15],[26949,15],[28106,15],[30223,15],[31037,15],[32130,15],[33288,15],[35259,15],[36076,15],[37172,15],[38333,15],[40317,15],[41135,15],[42232,15],[43394,15]]},"769":{"position":[[345,15],[1159,15],[2252,15],[3410,15],[7680,15],[8490,15],[9579,15],[10733,15],[13020,15],[13839,15],[14937,15],[16100,15],[22768,15],[23586,15],[24683,15],[25845,15],[30431,15],[31240,15],[32328,15],[33481,15],[39418,15],[40227,15],[41315,15],[42468,15]]},"786":{"position":[[1880,15],[2656,15],[3847,15],[4978,15],[6871,15],[7686,15],[8780,15],[9939,15],[11979,15],[12755,15],[13946,15],[15077,15],[16927,15],[17742,15],[18836,15],[19995,15],[21971,15],[22787,15],[23882,15],[25042,15],[29122,15],[29937,15],[31031,15],[32190,15],[34166,15],[34981,15],[36075,15],[37234,15]]},"788":{"position":[[2399,15],[3404,15],[4880,15],[6250,15],[8866,15],[9683,15],[10779,15],[11940,15]]},"790":{"position":[[350,15],[1150,15],[2365,15],[3520,15],[5874,15],[6706,15],[7953,15],[9140,15],[11069,15],[11884,15],[12978,15],[14137,15]]},"792":{"position":[[2993,15],[3853,15],[5184,15],[6409,15],[9048,15],[9867,15],[10965,15],[12128,15],[15600,15],[16398,15],[17611,15],[18764,15]]},"809":{"position":[[1877,15],[2656,15],[3850,15],[4984,15],[6889,15],[7707,15],[8804,15],[9966,15],[12016,15],[12791,15],[13981,15],[15111,15],[16958,15],[17772,15],[18865,15],[20023,15],[21995,15],[22811,15],[23906,15],[25066,15],[28634,15],[29448,15],[30541,15],[31699,15],[33671,15],[34486,15],[35580,15],[36739,15]]},"811":{"position":[[2156,15],[3252,15],[4931,15],[6412,15],[9337,15],[10155,15],[11252,15],[12414,15]]},"813":{"position":[[1989,15],[2964,15],[4410,15],[5750,15],[8467,15],[9288,15],[10388,15],[11553,15]]},"815":{"position":[[2861,15],[4009,15],[5684,15],[7207,15],[9995,15],[10817,15],[11918,15],[13084,15],[15164,15],[15988,15],[17091,15],[18259,15],[20270,15],[21096,15],[22201,15],[23371,15],[25469,15],[26293,15],[27396,15],[28564,15],[30575,15],[31399,15],[32502,15],[33670,15]]}}}],["app",{"_index":717,"t":{"94":{"position":[[1449,3]]},"96":{"position":[[1962,3]]},"98":{"position":[[3172,3]]},"365":{"position":[[294,3]]},"491":{"position":[[1401,3]]},"710":{"position":[[21,3]]},"769":{"position":[[20957,3],[36985,3]]},"794":{"position":[[113,5]]}}}],["app.get(\"/read/:docu",{"_index":719,"t":{"94":{"position":[[1468,26]]},"96":{"position":[[2302,26]]},"98":{"position":[[3581,26]]}}}],["app.j",{"_index":697,"t":{"94":{"position":[[541,7]]},"96":{"position":[[1113,6]]},"98":{"position":[[2010,7]]}}}],["app.listen(\":3000",{"_index":720,"t":{"94":{"position":[[1501,19]]},"96":{"position":[[2335,19]]},"98":{"position":[[3614,19]]}}}],["app.use(\"/read/:docu",{"_index":809,"t":{"98":{"position":[[3512,26]]}}}],["app.use(checkauthor",{"_index":810,"t":{"98":{"position":[[3553,27]]}}}],["app.use(jwtware.new(jwtware.config",{"_index":777,"t":{"96":{"position":[[2205,35]]},"98":{"position":[[3415,35]]}}}],["appear",{"_index":1548,"t":{"399":{"position":[[371,11],[2036,6]]}}}],["appli",{"_index":12,"t":{"4":{"position":[[70,7]]},"288":{"position":[[10094,7]]},"471":{"position":[[5511,8]]},"605":{"position":[[12408,6]]},"607":{"position":[[12177,7]]},"792":{"position":[[46,5]]},"813":{"position":[[124,7]]}}}],["applic",{"_index":855,"t":{"104":{"position":[[187,11]]},"132":{"position":[[135,13],[238,11]]},"144":{"position":[[272,11]]},"245":{"position":[[8,12]]},"304":{"position":[[241,13]]},"318":{"position":[[16344,11]]},"324":{"position":[[199,12],[281,11],[395,11]]},"338":{"position":[[5462,11]]},"353":{"position":[[125,11],[199,11],[450,11],[656,11],[814,12]]},"355":{"position":[[178,11]]},"357":{"position":[[32,11]]},"383":{"position":[[8,12]]},"387":{"position":[[10627,11]]},"403":{"position":[[3522,11],[6637,11]]},"419":{"position":[[4002,11]]},"467":{"position":[[5059,11]]},"475":{"position":[[168,11]]},"477":{"position":[[1659,11]]},"491":{"position":[[1151,11],[1355,11],[1692,12]]},"505":{"position":[[27172,11]]},"517":{"position":[[18,12]]},"525":{"position":[[5698,11]]},"611":{"position":[[45,11]]},"624":{"position":[[5809,11]]},"712":{"position":[[788,13]]},"769":{"position":[[20833,11],[21082,11]]}}}],["application'",{"_index":1014,"t":{"146":{"position":[[89,13]]}}}],["application/json",{"_index":432,"t":{"16":{"position":[[16848,17],[22460,17],[28211,17]]},"80":{"position":[[6822,17]]},"86":{"position":[[2436,17]]},"114":{"position":[[1510,17]]},"126":{"position":[[1524,17]]},"192":{"position":[[1477,17]]},"194":{"position":[[1637,17]]},"213":{"position":[[4639,17]]},"215":{"position":[[4680,17],[9853,17]]},"221":{"position":[[5969,17],[11164,17],[16388,17],[21419,17]]},"230":{"position":[[4898,17]]},"232":{"position":[[4727,17]]},"245":{"position":[[4940,17]]},"247":{"position":[[4641,17],[9716,17]]},"259":{"position":[[756,17],[2339,17]]},"261":{"position":[[1783,17],[3215,17]]},"288":{"position":[[4710,17],[9619,17],[15670,17]]},"312":{"position":[[4823,17],[9849,17]]},"318":{"position":[[5142,17],[10427,17],[15661,17]]},"338":{"position":[[4885,17]]},"345":{"position":[[5789,17]]},"369":{"position":[[5501,17],[10749,17]]},"371":{"position":[[5843,17]]},"373":{"position":[[4661,17]]},"385":{"position":[[4749,17]]},"387":{"position":[[4785,17],[10039,17]]},"429":{"position":[[3327,17]]},"445":{"position":[[4835,17],[9882,17]]},"449":{"position":[[4799,17],[10014,17]]},"467":{"position":[[4668,17]]},"469":{"position":[[4989,17]]},"471":{"position":[[4858,17]]},"485":{"position":[[5061,17]]},"487":{"position":[[4974,17]]},"505":{"position":[[5521,17],[10693,17],[16108,17],[21222,17],[26262,17]]},"521":{"position":[[4685,17]]},"523":{"position":[[5325,17]]},"525":{"position":[[4926,17]]},"537":{"position":[[5041,17]]},"541":{"position":[[5032,17]]},"543":{"position":[[4778,17]]},"545":{"position":[[4615,17],[9561,17]]},"547":{"position":[[4630,17],[9554,17]]},"562":{"position":[[4814,17]]},"569":{"position":[[5261,17],[10736,17],[16192,17]]},"571":{"position":[[4992,17]]},"576":{"position":[[4967,17],[10301,17]]},"583":{"position":[[5256,17]]},"605":{"position":[[5946,17],[11539,17],[17793,17],[24036,17],[29697,17]]},"607":{"position":[[5795,17],[11476,17],[17229,17],[22971,17]]},"622":{"position":[[5377,17]]},"624":{"position":[[4804,17]]},"630":{"position":[[5570,17]]},"632":{"position":[[4701,17]]},"634":{"position":[[4923,17],[10075,17],[15137,17]]},"644":{"position":[[5459,17],[10492,17]]},"646":{"position":[[4932,17],[9972,17]]},"648":{"position":[[5047,17],[10740,17],[16193,17],[21413,17],[26487,17]]},"660":{"position":[[8248,17]]},"666":{"position":[[1675,17],[3574,17],[5483,17],[7391,17],[9297,17],[11207,17]]},"668":{"position":[[4257,17],[9620,17],[11506,17]]},"670":{"position":[[6065,17],[8649,17],[11478,17]]},"672":{"position":[[7787,17]]},"692":{"position":[[5080,17],[10052,17],[15758,17],[21330,17],[26440,17]]},"694":{"position":[[8517,17],[13953,17]]},"696":{"position":[[7826,17],[14445,17],[20196,17]]},"698":{"position":[[8342,17],[13925,17]]},"718":{"position":[[6872,17],[11955,17],[17298,17],[22338,17],[27522,17],[34401,17],[39908,17]]},"720":{"position":[[4717,17],[11413,17]]},"722":{"position":[[12484,17],[18549,17],[24535,17],[30221,17],[35573,17],[40670,17],[45821,17],[50973,17]]},"734":{"position":[[9466,17]]},"740":{"position":[[4997,17],[10124,17],[15492,17],[20468,17]]},"742":{"position":[[9096,17],[16200,17],[22688,17],[28006,17]]},"744":{"position":[[6682,17],[13303,17],[19763,17]]},"746":{"position":[[15794,17]]},"767":{"position":[[8482,17],[16382,17],[23283,17],[29573,17],[34756,17],[39804,17],[44866,17]]},"769":{"position":[[4878,17],[12197,17],[17573,17],[27317,17],[34944,17],[43931,17]]},"786":{"position":[[6402,17],[11408,17],[16501,17],[21464,17],[26512,17],[33659,17],[38703,17]]},"788":{"position":[[7908,17],[13411,17]]},"790":{"position":[[4968,17],[10619,17],[15606,17]]},"792":{"position":[[7924,17],[13601,17],[20210,17]]},"809":{"position":[[6411,17],[11438,17],[16534,17],[21491,17],[26536,17],[33167,17],[38208,17]]},"811":{"position":[[8175,17],[13886,17]]},"813":{"position":[[7378,17],[13028,17]]},"815":{"position":[[9014,17],[14560,17],[19737,17],[24851,17],[30042,17],[35148,17]]}}}],["application:ifft",{"_index":266,"t":{"16":{"position":[[5986,16]]}}}],["approach",{"_index":2520,"t":{"765":{"position":[[51,8]]},"790":{"position":[[5684,8]]}}}],["appropri",{"_index":790,"t":{"98":{"position":[[137,11]]},"132":{"position":[[337,11]]},"273":{"position":[[3718,12]]},"425":{"position":[[3360,11],[3424,13]]},"742":{"position":[[108,11]]}}}],["approv",{"_index":1750,"t":{"453":{"position":[[680,7]]},"664":{"position":[[393,8]]},"668":{"position":[[2490,8]]},"742":{"position":[[860,8],[995,8],[1232,8],[4237,8],[4452,8],[9562,8],[10804,8],[12338,8],[14105,8],[15662,8],[16967,8]]},"746":{"position":[[5706,8],[9092,8],[12297,8],[15256,8],[18682,8]]}}}],["approved_context",{"_index":2416,"t":{"742":{"position":[[1057,18],[1449,17],[1687,19],[2461,18],[2972,16],[3580,18]]},"746":{"position":[[251,17],[511,16],[1021,19],[2182,18]]},"748":{"position":[[464,17],[724,16],[1421,19],[2649,18]]}}}],["approved_ip_address_rang",{"_index":2415,"t":{"742":{"position":[[922,27],[1168,27],[1359,26],[1509,25],[1605,28],[1946,27],[2153,28],[10888,28],[14197,28]]},"746":{"position":[[161,26],[311,25],[939,28],[1280,27],[1487,28],[5790,28],[12389,28]]},"748":{"position":[[374,26],[524,25],[1339,28],[1680,27],[1954,28]]}}}],["approved_timeslot",{"_index":2414,"t":{"742":{"position":[[796,19],[1136,17],[1412,18],[1477,17],[1650,20],[1800,19],[2253,20],[10548,20],[10700,20],[13837,20],[13999,20]]},"746":{"position":[[214,18],[279,17],[984,20],[1134,19],[1587,20],[4691,20],[4842,20],[4995,20],[5148,20],[5300,20],[5451,20],[5602,20],[11220,20],[11381,20],[11544,20],[11707,20],[11869,20],[12030,20],[12191,20]]},"748":{"position":[[427,18],[492,17],[1384,20],[1534,19],[2054,20]]}}}],["arbitrari",{"_index":1451,"t":{"353":{"position":[[481,9]]},"403":{"position":[[775,9],[5541,9]]}}}],["archiv",{"_index":2260,"t":{"712":{"position":[[696,9],[953,7]]}}}],["array",{"_index":277,"t":{"16":{"position":[[7590,5]]},"34":{"position":[[35,5]]},"259":{"position":[[826,5]]}}}],["articl",{"_index":619,"t":{"76":{"position":[[5,7]]},"84":{"position":[[183,7]]},"136":{"position":[[5,7]]},"168":{"position":[[5,7]]},"393":{"position":[[1054,8]]},"686":{"position":[[624,7]]},"714":{"position":[[1075,7]]},"767":{"position":[[24397,7]]},"773":{"position":[[95,7],[147,8]]}}}],["artifact",{"_index":1115,"t":{"164":{"position":[[139,8]]}}}],["asid",{"_index":2163,"t":{"690":{"position":[[286,5]]},"716":{"position":[[446,5]]}}}],["ask",{"_index":1229,"t":{"221":{"position":[[11703,3]]},"387":{"position":[[95,6]]},"403":{"position":[[180,5]]},"569":{"position":[[478,3]]},"624":{"position":[[95,6]]},"632":{"position":[[85,3]]},"682":{"position":[[218,3]]},"690":{"position":[[186,3]]},"692":{"position":[[16476,3]]},"696":{"position":[[15449,6],[15474,6],[15558,3]]},"716":{"position":[[39,3]]},"718":{"position":[[7276,3],[17705,6]]},"758":{"position":[[280,7]]},"767":{"position":[[24742,3]]},"769":{"position":[[5406,6],[7542,3],[18373,5],[22620,3],[28122,3],[30300,3]]},"786":{"position":[[6743,3],[16835,3]]},"809":{"position":[[6758,3],[16866,3]]}}}],["assert",{"_index":1249,"t":{"251":{"position":[[343,11]]},"405":{"position":[[813,11],[836,9],[984,10],[1039,10],[1140,10],[2423,11],[2529,10],[3754,11],[3770,11],[3790,11],[3996,10]]},"407":{"position":[[105,10]]},"431":{"position":[[385,10]]}}}],["asset",{"_index":1455,"t":{"355":{"position":[[209,5],[267,6],[405,5],[526,5],[684,6]]},"357":{"position":[[63,5],[121,6]]},"365":{"position":[[200,5],[313,5],[474,6],[494,5],[559,6],[579,5],[643,6],[670,5],[734,6],[761,5]]},"367":{"position":[[306,5],[536,6]]},"371":{"position":[[859,6],[942,6],[1031,6],[1113,6],[2122,6],[2350,6],[3766,6],[3858,6],[3948,6],[4039,6],[5162,6],[5340,6],[6210,6],[6386,6]]},"373":{"position":[[868,6],[1861,6],[3062,6],[4977,6],[5020,6]]}}}],["assign",{"_index":103,"t":{"10":{"position":[[46,8]]},"16":{"position":[[7779,8]]},"58":{"position":[[1104,8],[1162,10]]},"60":{"position":[[1342,8]]},"62":{"position":[[1119,8]]},"66":{"position":[[700,8],[1592,8]]},"176":{"position":[[88,6]]},"324":{"position":[[73,8],[410,9]]},"328":{"position":[[344,8]]},"336":{"position":[[757,8]]},"343":{"position":[[180,6]]},"365":{"position":[[909,6]]},"367":{"position":[[1217,8]]},"369":{"position":[[39,6],[78,8],[124,8],[905,8],[1022,8],[2058,8],[2231,8],[3592,8],[3719,8],[4878,8],[5001,8],[5780,8],[5901,8]]},"371":{"position":[[805,8],[976,8],[2068,8],[2295,8],[3712,8],[3893,8],[5108,8],[5285,8],[6156,8],[6331,8]]},"403":{"position":[[1662,8],[4009,10],[4692,10],[7642,10]]},"419":{"position":[[2133,10],[3952,6]]},"423":{"position":[[381,6],[628,6],[732,6],[824,8]]},"425":{"position":[[447,10]]},"437":{"position":[[2239,6]]},"465":{"position":[[992,8]]},"471":{"position":[[6045,9]]},"491":{"position":[[149,8],[673,8],[691,6]]},"501":{"position":[[111,8]]},"503":{"position":[[1601,8]]},"505":{"position":[[138,6]]},"517":{"position":[[363,6]]},"521":{"position":[[11,6]]},"523":{"position":[[281,6]]},"591":{"position":[[77,8],[396,8]]},"642":{"position":[[93,6]]},"646":{"position":[[864,8],[1903,8],[3267,8],[4429,8],[5138,8]]},"678":{"position":[[954,8]]},"698":{"position":[[263,11]]},"811":{"position":[[376,8]]}}}],["assigne",{"_index":1466,"t":{"367":{"position":[[211,8],[440,9],[826,10],[939,10],[996,11],[1055,11]]},"369":{"position":[[968,11],[1084,11],[3663,11],[3789,11],[6938,11],[7931,11],[9131,11],[11018,11],[11040,10]]}}}],["associ",{"_index":1464,"t":{"365":{"position":[[1251,9]]},"591":{"position":[[437,11]]},"628":{"position":[[1074,11],[1480,10],[1873,10]]},"630":{"position":[[917,10],[2176,10],[3714,10],[5046,10],[6014,10]]},"642":{"position":[[606,10]]},"765":{"position":[[446,10]]},"767":{"position":[[891,10],[1030,10],[1169,10],[1330,10],[1481,10],[1648,10],[2724,10],[2919,10],[3114,10],[3331,10],[3538,10],[3761,10],[5162,10],[5311,10],[5460,10],[5631,10],[5792,10],[5969,10],[7168,10],[7313,10],[7458,10],[7625,10],[7782,10],[7955,10],[9106,10],[9249,10],[9392,10],[9557,10],[9712,10],[9883,10]]},"769":{"position":[[19718,10],[19818,10]]}}}],["associated_plan",{"_index":2020,"t":{"628":{"position":[[142,16],[214,15],[388,18],[521,17],[639,18],[1014,15],[1051,15],[1578,15]]},"630":{"position":[[993,18],[3798,18]]},"634":{"position":[[850,18],[3301,18]]},"765":{"position":[[501,15],[669,16],[902,18],[968,18]]},"767":{"position":[[960,18],[1099,18],[1251,18],[1405,18],[1569,18],[1736,18],[5239,18],[5388,18],[5550,18],[5714,18],[5888,18],[6065,18],[41043,18],[42039,18],[43242,18],[45138,18],[45167,17]]},"769":{"position":[[5564,16],[5646,18],[5738,18],[6628,16],[6876,18],[6968,18],[19014,16],[19079,15],[19131,18],[19264,17],[19375,18],[19673,15],[20125,16],[20246,18],[20502,16],[21565,16],[21630,15],[21855,18],[21988,17],[22099,18],[27890,15],[28701,16],[28773,15],[29047,18],[29180,17],[29298,18],[35978,16],[36050,15],[36102,18],[36235,17],[36353,18],[36552,16],[36614,15],[36666,18],[36759,17],[36871,18],[37469,18],[37656,16],[37718,15],[37992,18],[38085,17],[38197,18]]}}}],["assum",{"_index":314,"t":{"16":{"position":[[11292,8],[11793,8]]},"80":{"position":[[0,6]]},"92":{"position":[[0,6],[290,6]]},"110":{"position":[[0,6]]},"122":{"position":[[0,6]]},"142":{"position":[[476,6]]},"188":{"position":[[0,6]]},"194":{"position":[[60,6]]},"204":{"position":[[152,6]]},"221":{"position":[[152,6],[873,6]]},"238":{"position":[[152,6]]},"279":{"position":[[152,6]]},"306":{"position":[[316,6]]},"328":{"position":[[275,6]]},"345":{"position":[[634,6]]},"379":{"position":[[152,6]]},"437":{"position":[[459,6]]},"455":{"position":[[152,6]]},"477":{"position":[[152,6]]},"493":{"position":[[152,6]]},"511":{"position":[[152,6]]},"531":{"position":[[152,6]]},"553":{"position":[[152,6]]},"583":{"position":[[5870,8]]},"605":{"position":[[1077,6],[6601,6],[12448,6],[24800,6]]},"607":{"position":[[921,6],[6572,6],[12198,6],[18067,6]]},"640":{"position":[[11,7]]},"670":{"position":[[9142,8],[11972,8]]},"714":{"position":[[229,6]]},"744":{"position":[[13876,8],[20337,8]]},"748":{"position":[[40,7]]},"815":{"position":[[158,6]]}}}],["async",{"_index":388,"t":{"16":{"position":[[14450,5],[16287,5],[20062,5],[21899,5],[25840,5],[27686,5]]},"80":{"position":[[3750,5],[5889,5]]},"86":{"position":[[1234,5],[2121,5]]},"94":{"position":[[699,5],[805,5]]},"96":{"position":[[616,5],[867,5],[976,5],[1406,5]]},"98":{"position":[[341,5],[1058,5],[1696,5],[1846,5],[2401,5]]},"112":{"position":[[1442,5]]},"114":{"position":[[1083,5]]},"124":{"position":[[1442,5]]},"126":{"position":[[1123,5]]},"170":{"position":[[1144,5]]},"172":{"position":[[1978,5]]},"190":{"position":[[1442,5]]},"192":{"position":[[1060,5]]},"194":{"position":[[1219,5]]},"213":{"position":[[2328,5],[4095,5]]},"215":{"position":[[2288,5],[4122,5],[7457,5],[9293,5]]},"221":{"position":[[3585,5],[5415,5],[8780,5],[10584,5],[13996,5],[15830,5],[19023,5],[20859,5]]},"230":{"position":[[2589,5],[4355,5]]},"232":{"position":[[2333,5],[4168,5]]},"245":{"position":[[2568,5],[4392,5]]},"247":{"position":[[2340,5],[4102,5],[7342,5],[9167,5]]},"257":{"position":[[1418,5]]},"259":{"position":[[484,5],[1948,5]]},"261":{"position":[[1496,5],[2809,5]]},"288":{"position":[[2417,5],[4175,5],[7324,5],[9083,5],[12962,5],[14936,5]]},"312":{"position":[[2429,5],[4264,5],[7457,5],[9291,5]]},"318":{"position":[[2714,5],[4540,5],[8033,5],[9868,5],[13267,5],[15102,5]]},"338":{"position":[[2477,5],[4319,5]]},"345":{"position":[[3401,5],[5233,5]]},"369":{"position":[[2845,5],[4787,5],[8351,5],[10188,5]]},"371":{"position":[[2967,5],[5019,5]]},"373":{"position":[[2263,5],[4100,5]]},"385":{"position":[[2414,5],[4193,5]]},"387":{"position":[[2377,5],[4219,5],[7629,5],[9472,5]]},"429":{"position":[[2893,5]]},"445":{"position":[[2435,5],[4273,5],[7484,5],[9321,5]]},"449":{"position":[[2397,5],[4236,5],[7612,5],[9451,5]]},"467":{"position":[[2361,5],[4126,5]]},"469":{"position":[[2523,5],[4368,5]]},"471":{"position":[[2450,5],[4292,5]]},"485":{"position":[[2651,5],[4468,5]]},"487":{"position":[[2574,5],[4412,5]]},"505":{"position":[[2925,5],[4837,5],[8299,5],[10134,5],[13714,5],[15549,5],[18824,5],[20661,5],[23866,5],[25702,5]]},"521":{"position":[[2374,5],[4141,5]]},"523":{"position":[[2861,5],[4705,5]]},"525":{"position":[[2514,5],[4358,5]]},"537":{"position":[[2611,5],[4439,5]]},"541":{"position":[[2610,5],[4434,5]]},"543":{"position":[[2469,5],[4235,5]]},"545":{"position":[[2245,5],[4068,5],[7191,5],[9014,5]]},"547":{"position":[[2337,5],[4095,5],[7182,5],[9006,5]]},"562":{"position":[[2424,5],[4257,5]]},"569":{"position":[[2814,5],[4637,5],[8329,5],[10131,5],[13765,5],[15577,5]]},"571":{"position":[[2781,5],[4486,5]]},"576":{"position":[[2548,5],[4404,5],[7882,5],[9738,5]]},"583":{"position":[[2626,5],[4602,5]]},"605":{"position":[[3554,5],[5388,5],[9147,5],[10981,5],[15395,5],[17232,5],[21644,5],[23478,5],[27303,5],[29138,5]]},"607":{"position":[[3401,5],[5236,5],[9076,5],[10914,5],[14833,5],[16669,5],[20575,5],[22411,5]]},"622":{"position":[[2835,5],[4718,5]]},"624":{"position":[[2390,5],[4235,5]]},"630":{"position":[[2814,5],[4806,5]]},"632":{"position":[[2303,5],[4140,5]]},"634":{"position":[[2471,5],[4309,5],[7675,5],[9513,5],[12731,5],[14572,5]]},"644":{"position":[[3063,5],[4899,5],[8098,5],[9933,5]]},"646":{"position":[[2520,5],[4338,5],[7570,5],[9409,5]]},"648":{"position":[[2512,5],[4379,5],[8260,5],[10113,5],[13711,5],[15565,5],[19017,5],[20853,5],[24095,5],[25929,5]]},"660":{"position":[[6988,5]]},"666":{"position":[[1247,5],[3144,5],[5055,5],[6960,5],[8868,5],[10776,5]]},"668":{"position":[[3828,5],[7174,5],[9009,5],[11078,5]]},"670":{"position":[[3563,5],[5426,5],[8083,5],[10911,5]]},"672":{"position":[[6527,5]]},"692":{"position":[[2757,5],[4530,5],[7721,5],[9498,5],[13107,5],[15047,5],[18934,5],[20770,5],[24048,5],[25882,5]]},"694":{"position":[[5743,5],[7746,5],[11551,5],[13390,5]]},"696":{"position":[[5310,5],[7181,5],[11505,5],[13591,5],[17806,5],[19639,5]]},"698":{"position":[[5685,5],[7628,5],[11525,5],[13363,5]]},"718":{"position":[[4432,5],[6264,5],[9547,5],[11389,5],[14858,5],[16690,5],[19930,5],[21772,5],[25100,5],[26949,5],[31429,5],[33531,5],[37500,5],[39342,5]]},"720":{"position":[[2319,5],[4156,5],[9017,5],[10853,5]]},"722":{"position":[[9679,5],[11696,5],[15971,5],[17872,5],[21852,5],[23807,5],[27707,5],[29577,5],[33190,5],[34993,5],[38321,5],[40107,5],[43429,5],[45263,5],[48551,5],[50400,5]]},"734":{"position":[[6056,5],[8379,5]]},"740":{"position":[[2609,5],[4441,5],[7728,5],[9564,5],[13050,5],[14883,5],[18078,5],[19911,5]]},"742":{"position":[[6716,5],[8544,5],[12990,5],[15211,5],[19984,5],[21950,5],[25618,5],[27450,5]]},"744":{"position":[[3868,5],[5889,5],[10484,5],[12536,5],[16942,5],[18995,5]]},"746":{"position":[[9744,5],[13403,5]]},"767":{"position":[[4402,5],[7064,5],[13270,5],[15442,5],[20311,5],[22413,5],[27179,5],[29014,5],[32360,5],[34196,5],[37402,5],[39241,5],[42462,5],[44302,5]]},"769":{"position":[[2482,5],[4318,5],[9809,5],[11641,5],[15167,5],[17008,5],[24913,5],[26753,5],[32558,5],[34389,5],[41545,5],[43376,5]]},"786":{"position":[[4077,5],[5851,5],[9010,5],[10847,5],[14176,5],[15950,5],[19066,5],[20903,5],[24112,5],[25950,5],[31261,5],[33098,5],[36305,5],[38142,5]]},"788":{"position":[[5110,5],[7123,5],[11009,5],[12848,5]]},"790":{"position":[[2595,5],[4393,5],[8183,5],[10013,5],[13208,5],[15045,5]]},"792":{"position":[[5414,5],[7282,5],[11195,5],[13036,5],[17841,5],[19637,5]]},"809":{"position":[[4080,5],[5857,5],[9034,5],[10874,5],[14211,5],[15984,5],[19095,5],[20931,5],[24136,5],[25974,5],[30771,5],[32607,5],[35810,5],[37647,5]]},"811":{"position":[[5161,5],[7285,5],[11482,5],[13322,5]]},"813":{"position":[[4640,5],[6623,5],[10618,5],[12461,5]]},"815":{"position":[[5914,5],[8080,5],[12148,5],[13992,5],[17321,5],[19167,5],[22431,5],[24279,5],[27626,5],[29472,5],[32732,5],[34578,5]]}}}],["attempt",{"_index":565,"t":{"60":{"position":[[3260,10]]},"290":{"position":[[598,7]]},"429":{"position":[[1747,10]]},"698":{"position":[[2933,7]]}}}],["attribut",{"_index":109,"t":{"10":{"position":[[154,9],[274,10],[354,10],[421,10]]}}}],["audienc",{"_index":1004,"t":{"144":{"position":[[1804,8],[2125,9],[2141,9],[2484,8],[3129,9]]}}}],["audience=\"oidc",{"_index":1010,"t":{"144":{"position":[[3114,14]]}}}],["auth",{"_index":335,"t":{"16":{"position":[[12476,4],[13290,4],[14500,4],[18088,4],[18902,4],[20112,4],[23860,4],[24679,4],[25890,4]]},"80":{"position":[[924,4],[2063,4],[3800,4]]},"112":{"position":[[197,4],[697,4],[1492,4]]},"124":{"position":[[197,4],[697,4],[1492,4]]},"190":{"position":[[197,4],[697,4],[1492,4]]},"213":{"position":[[310,4],[1078,4],[2378,4]]},"215":{"position":[[320,4],[1131,4],[2338,4],[5485,4],[6298,4],[7507,4]]},"221":{"position":[[1625,4],[2432,4],[3635,4],[6688,4],[7493,4],[8830,4],[12028,4],[12839,4],[14046,4],[17051,4],[17864,4],[19073,4]]},"230":{"position":[[572,4],[1340,4],[2639,4]]},"232":{"position":[[363,4],[1175,4],[2383,4]]},"245":{"position":[[620,4],[1421,4],[2618,4]]},"247":{"position":[[331,4],[1095,4],[2390,4],[5392,4],[6194,4],[7392,4]]},"257":{"position":[[173,4],[673,4],[1468,4]]},"288":{"position":[[417,4],[1176,4],[2467,4],[5321,4],[6082,4],[7374,4],[10499,4],[11444,4],[13012,4]]},"312":{"position":[[459,4],[1271,4],[2479,4],[5489,4],[6300,4],[7507,4]]},"318":{"position":[[578,4],[1405,4],[2764,4],[6063,4],[6875,4],[8083,4],[11297,4],[12109,4],[13317,4]]},"338":{"position":[[493,4],[1312,4],[2527,4]]},"345":{"position":[[1437,4],[2246,4],[3451,4]]},"369":{"position":[[441,4],[1374,4],[2895,4],[6377,4],[7191,4],[8401,4]]},"371":{"position":[[343,4],[1386,4],[3017,4]]},"373":{"position":[[289,4],[1103,4],[2313,4]]},"385":{"position":[[372,4],[1152,4],[2464,4]]},"387":{"position":[[393,4],[1212,4],[2427,4],[5643,4],[6463,4],[7679,4]]},"445":{"position":[[459,4],[1274,4],[2485,4],[5510,4],[6324,4],[7534,4]]},"449":{"position":[[419,4],[1235,4],[2447,4],[5634,4],[6450,4],[7662,4]]},"467":{"position":[[347,4],[1113,4],[2411,4]]},"469":{"position":[[349,4],[1195,4],[2573,4]]},"471":{"position":[[466,4],[1285,4],[2500,4]]},"485":{"position":[[533,4],[1351,4],[2701,4]]},"487":{"position":[[598,4],[1413,4],[2624,4]]},"493":{"position":[[1511,4]]},"497":{"position":[[571,4]]},"505":{"position":[[581,4],[1484,4],[2975,4],[6329,4],[7141,4],[8349,4],[11744,4],[12556,4],[13764,4],[16850,4],[17664,4],[18874,4],[21894,4],[22707,4],[23916,4]]},"521":{"position":[[356,4],[1124,4],[2424,4]]},"523":{"position":[[689,4],[1534,4],[2911,4]]},"525":{"position":[[526,4],[1347,4],[2564,4]]},"537":{"position":[[435,4],[1254,4],[2661,4]]},"541":{"position":[[442,4],[1257,4],[2660,4]]},"543":{"position":[[453,4],[1220,4],[2519,4]]},"545":{"position":[[299,4],[1099,4],[2295,4],[5245,4],[6045,4],[7241,4]]},"547":{"position":[[336,4],[1096,4],[2387,4],[5234,4],[6035,4],[7232,4]]},"562":{"position":[[458,4],[1268,4],[2474,4]]},"569":{"position":[[708,4],[1568,4],[2864,4],[6280,4],[7121,4],[8379,4],[11696,4],[12547,4],[13815,4]]},"571":{"position":[[911,4],[1653,4],[2831,4]]},"576":{"position":[[449,4],[1298,4],[2598,4],[5783,4],[6632,4],[7932,4]]},"583":{"position":[[370,4],[1296,4],[2676,4]]},"605":{"position":[[1586,4],[2397,4],[3604,4],[7179,4],[7990,4],[9197,4],[13421,4],[14235,4],[15445,4],[19676,4],[20487,4],[21694,4],[25333,4],[26145,4],[27353,4]]},"607":{"position":[[1431,4],[2243,4],[3451,4],[7100,4],[7915,4],[9126,4],[12861,4],[13674,4],[14883,4],[18603,4],[19416,4],[20625,4]]},"622":{"position":[[585,4],[1469,4],[2885,4]]},"624":{"position":[[400,4],[1222,4],[2440,4]]},"630":{"position":[[310,4],[1293,4],[2864,4]]},"632":{"position":[[329,4],[1143,4],[2353,4]]},"634":{"position":[[310,4],[1150,4],[2521,4],[5699,4],[6514,4],[7725,4],[10749,4],[11567,4],[12781,4]]},"644":{"position":[[1091,4],[1904,4],[3113,4],[6128,4],[6940,4],[8148,4]]},"646":{"position":[[400,4],[1219,4],[2570,4],[5592,4],[6408,4],[7620,4]]},"648":{"position":[[375,4],[1286,4],[2562,4],[6034,4],[6878,4],[8310,4],[11482,4],[12328,4],[13761,4],[17045,4],[17858,4],[19067,4],[22127,4],[22938,4],[24145,4]]},"668":{"position":[[5020,4],[5856,4],[7224,4]]},"670":{"position":[[1352,4],[2217,4],[3613,4]]},"692":{"position":[[727,4],[1501,4],[2807,4],[5683,4],[6461,4],[7771,4],[10671,4],[11592,4],[13157,4],[16962,4],[17775,4],[18984,4],[22080,4],[22891,4],[24098,4]]},"694":{"position":[[3145,4],[4119,4],[5793,4],[9573,4],[10389,4],[11601,4]]},"696":{"position":[[3048,4],[3910,4],[5360,4],[8741,4],[9798,4],[11555,4],[15840,4],[16650,4],[17856,4]]},"698":{"position":[[3243,4],[4167,4],[5735,4],[9549,4],[10364,4],[11575,4]]},"718":{"position":[[2284,4],[3117,4],[4482,4],[7563,4],[8382,4],[9597,4],[12710,4],[13543,4],[14908,4],[17946,4],[18765,4],[19980,4],[23102,4],[23928,4],[25150,4],[28669,4],[29752,4],[31479,4],[35516,4],[36335,4],[37550,4]]},"720":{"position":[[345,4],[1159,4],[2369,4],[7045,4],[7858,4],[9067,4]]},"722":{"position":[[7089,4],[8087,4],[9729,4],[13685,4],[14587,4],[16021,4],[19422,4],[20368,4],[21902,4],[25447,4],[26308,4],[27757,4],[31100,4],[31904,4],[33240,4],[36265,4],[37052,4],[38371,4],[41461,4],[42272,4],[43479,4],[46553,4],[47379,4],[48601,4]]},"734":{"position":[[2818,4],[4112,4],[6106,4]]},"740":{"position":[[645,4],[1454,4],[2659,4],[5756,4],[6569,4],[7778,4],[10900,4],[11734,4],[13100,4],[16112,4],[16922,4],[18128,4]]},"742":{"position":[[4760,4],[5565,4],[6766,4],[9992,4],[11194,4],[13040,4],[17532,4],[18489,4],[20034,4],[23654,4],[24463,4],[25668,4]]},"744":{"position":[[1305,4],[2318,4],[3918,4],[8000,4],[8994,4],[10534,4],[14456,4],[15451,4],[16992,4]]},"746":{"position":[[3546,4],[6096,4],[9794,4]]},"767":{"position":[[414,4],[2027,4],[4452,4],[10370,4],[11523,4],[13320,4],[17551,4],[18634,4],[20361,4],[25209,4],[26021,4],[27229,4],[30388,4],[31201,4],[32410,4],[35424,4],[36240,4],[37452,4],[40482,4],[41299,4],[42512,4]]},"769":{"position":[[510,4],[1323,4],[2532,4],[7845,4],[8654,4],[9859,4],[13185,4],[14003,4],[15217,4],[22933,4],[23750,4],[24963,4],[30596,4],[31404,4],[32608,4],[39583,4],[40391,4],[41595,4]]},"786":{"position":[[2045,4],[2820,4],[4127,4],[7036,4],[7850,4],[9060,4],[12144,4],[12919,4],[14226,4],[17092,4],[17906,4],[19116,4],[22136,4],[22951,4],[24162,4],[29287,4],[30101,4],[31311,4],[34331,4],[35145,4],[36355,4]]},"788":{"position":[[2564,4],[3568,4],[5160,4],[9031,4],[9847,4],[11059,4]]},"790":{"position":[[515,4],[1314,4],[2645,4],[6039,4],[6870,4],[8233,4],[11234,4],[12048,4],[13258,4]]},"792":{"position":[[3158,4],[4017,4],[5464,4],[9213,4],[10031,4],[11245,4],[15765,4],[16562,4],[17891,4]]},"809":{"position":[[2042,4],[2820,4],[4130,4],[7054,4],[7871,4],[9084,4],[12181,4],[12955,4],[14261,4],[17123,4],[17936,4],[19145,4],[22160,4],[22975,4],[24186,4],[28799,4],[29612,4],[30821,4],[33836,4],[34650,4],[35860,4]]},"811":{"position":[[2321,4],[3416,4],[5211,4],[9502,4],[10319,4],[11532,4]]},"813":{"position":[[2154,4],[3128,4],[4690,4],[8632,4],[9452,4],[10668,4]]},"815":{"position":[[3026,4],[4173,4],[5964,4],[10160,4],[10981,4],[12198,4],[15329,4],[16152,4],[17371,4],[20435,4],[21260,4],[22481,4],[25634,4],[26457,4],[27676,4],[30740,4],[31563,4],[32782,4]]}}}],["auth0",{"_index":15,"t":{"4":{"position":[[122,5]]},"16":{"position":[[3194,5]]},"80":{"position":[[7438,5]]},"724":{"position":[[667,5]]}}}],["authent",{"_index":43,"t":{"6":{"position":[[0,14],[306,15]]},"92":{"position":[[119,12],[396,13]]},"94":{"position":[[1139,14]]},"96":{"position":[[1219,12],[1249,15],[1329,14],[1556,12]]},"98":{"position":[[1519,16],[2082,12],[2112,15],[2282,14]]},"130":{"position":[[122,14]]},"140":{"position":[[354,15]]},"144":{"position":[[18,14],[74,14],[119,14],[162,15],[202,15],[810,14],[899,14],[1266,14],[1738,15],[2259,14],[2343,14],[2423,14],[2791,14]]},"168":{"position":[[179,14]]},"172":{"position":[[30,15]]},"700":{"position":[[48,14]]},"724":{"position":[[212,14]]}}}],["authenticate.j",{"_index":726,"t":{"96":{"position":[[229,16]]}}}],["authn",{"_index":44,"t":{"6":{"position":[[19,6],[430,5]]},"140":{"position":[[454,6]]},"144":{"position":[[643,6],[1526,5],[1553,5],[2077,6],[3045,5],[3067,5],[3103,5]]}}}],["author",{"_index":2,"t":{"2":{"position":[[22,14],[50,14]]},"4":{"position":[[51,13]]},"6":{"position":[[71,13],[399,14]]},"8":{"position":[[13,13]]},"14":{"position":[[41,13],[105,10]]},"16":{"position":[[28,13],[160,13],[374,13],[1430,13],[1455,13],[1621,13],[2765,13],[2965,13],[3458,13],[3527,13],[3615,13],[3777,13],[3841,13],[4157,13],[5289,13],[6617,13],[9114,13],[9582,13],[9959,13],[10266,13],[16731,15],[16816,13],[22343,15],[22428,13],[28094,15],[28179,13],[28662,13],[29385,14],[29400,13]]},"22":{"position":[[3,13]]},"24":{"position":[[72,13]]},"26":{"position":[[140,13]]},"30":{"position":[[60,13]]},"40":{"position":[[136,13],[443,13]]},"52":{"position":[[85,13]]},"54":{"position":[[18,13],[3692,13]]},"60":{"position":[[258,13],[1255,13],[1889,13]]},"62":{"position":[[941,13]]},"64":{"position":[[1005,13]]},"66":{"position":[[1104,13]]},"70":{"position":[[91,14]]},"74":{"position":[[205,13],[364,13],[411,13],[521,13],[623,13],[849,13]]},"76":{"position":[[42,13]]},"80":{"position":[[638,13],[683,13],[6705,15],[6790,13],[7237,13],[7298,13]]},"82":{"position":[[79,13],[247,13]]},"84":{"position":[[47,13],[127,13]]},"90":{"position":[[213,13],[577,13]]},"98":{"position":[[704,10],[2182,9],[4437,10],[5317,15]]},"100":{"position":[[186,13],[268,13]]},"104":{"position":[[26,13]]},"108":{"position":[[222,13],[545,13],[868,13],[1191,13],[1486,13]]},"114":{"position":[[1393,15],[1478,13]]},"116":{"position":[[64,13]]},"120":{"position":[[222,13],[545,13],[868,13],[1191,13],[1486,13]]},"126":{"position":[[1407,15],[1492,13]]},"128":{"position":[[64,13]]},"144":{"position":[[320,14]]},"146":{"position":[[103,13]]},"172":{"position":[[1687,15]]},"174":{"position":[[154,13],[263,13]]},"178":{"position":[[32,13],[183,13],[340,13]]},"186":{"position":[[222,13],[509,13],[796,13],[1083,13],[1342,13]]},"192":{"position":[[1360,15],[1445,13]]},"194":{"position":[[1520,15],[1605,13]]},"196":{"position":[[59,13]]},"198":{"position":[[116,13],[213,13],[269,13]]},"204":{"position":[[187,13],[1265,13],[1539,13]]},"208":{"position":[[187,13],[461,13]]},"213":{"position":[[4522,15],[4607,13]]},"215":{"position":[[4563,15],[4648,13],[9736,15],[9821,13]]},"221":{"position":[[187,13],[1246,13],[5852,15],[5937,13],[11047,15],[11132,13],[16271,15],[16356,13],[21302,15],[21387,13],[22277,13],[22551,13]]},"227":{"position":[[187,13],[461,13]]},"230":{"position":[[4781,15],[4866,13]]},"232":{"position":[[4610,15],[4695,13]]},"236":{"position":[[231,13]]},"238":{"position":[[187,13],[677,13],[984,13],[1258,13]]},"240":{"position":[[34,13]]},"242":{"position":[[187,13],[461,13]]},"245":{"position":[[4823,15],[4908,13]]},"247":{"position":[[4524,15],[4609,13],[9599,15],[9684,13]]},"251":{"position":[[308,13]]},"253":{"position":[[222,13],[544,13],[866,13],[1153,13],[1412,13]]},"259":{"position":[[639,15],[724,13],[2222,15],[2307,13]]},"261":{"position":[[31,13],[1666,15],[1751,13],[3098,15],[3183,13]]},"263":{"position":[[32,13],[693,10]]},"269":{"position":[[169,13],[645,13]]},"279":{"position":[[187,13],[1182,13],[1584,13],[1858,13]]},"281":{"position":[[34,13]]},"285":{"position":[[187,13],[461,13]]},"288":{"position":[[4593,15],[4678,13],[9502,15],[9587,13],[15553,15],[15638,13]]},"294":{"position":[[71,13],[240,13],[299,13]]},"296":{"position":[[33,13],[162,13],[1039,13],[1072,9],[1183,13],[1245,9],[1500,13]]},"298":{"position":[[62,13],[219,13]]},"300":{"position":[[30,13],[140,13],[247,13],[356,13]]},"302":{"position":[[30,13]]},"306":{"position":[[155,13],[1894,13],[2168,13]]},"310":{"position":[[187,13],[461,13]]},"312":{"position":[[15,13],[4706,15],[4791,13],[9732,15],[9817,13]]},"314":{"position":[[177,13]]},"318":{"position":[[259,13],[5025,15],[5110,13],[5598,13],[10310,15],[10395,13],[15544,15],[15629,13]]},"322":{"position":[[55,13]]},"328":{"position":[[156,13],[1397,13],[1671,13]]},"332":{"position":[[187,13],[461,13]]},"336":{"position":[[123,13],[825,13]]},"338":{"position":[[4768,15],[4853,13]]},"345":{"position":[[22,13],[5672,15],[5757,13]]},"347":{"position":[[22,13]]},"349":{"position":[[34,13],[940,13]]},"353":{"position":[[617,13],[717,13]]},"355":{"position":[[360,13]]},"365":{"position":[[18,13],[1131,13],[1304,13]]},"367":{"position":[[231,13]]},"369":{"position":[[5384,15],[5469,13],[10632,15],[10717,13]]},"371":{"position":[[5726,15],[5811,13]]},"373":{"position":[[4544,15],[4629,13]]},"377":{"position":[[241,13]]},"379":{"position":[[187,13],[976,13],[1250,13]]},"381":{"position":[[187,13],[461,13]]},"385":{"position":[[4632,15],[4717,13]]},"387":{"position":[[4668,15],[4753,13],[9922,15],[10007,13]]},"391":{"position":[[53,13],[129,13],[354,13]]},"393":{"position":[[201,13],[340,13],[429,13],[551,13],[633,13],[812,13],[914,13],[1289,13]]},"395":{"position":[[12,13],[368,13]]},"397":{"position":[[343,13],[486,13],[665,13]]},"399":{"position":[[4290,13]]},"401":{"position":[[3412,13]]},"403":{"position":[[3497,13],[10467,13]]},"405":{"position":[[418,13],[471,13],[550,13],[663,13],[1106,13],[3930,13]]},"407":{"position":[[216,13],[293,13]]},"411":{"position":[[165,13]]},"415":{"position":[[1070,13]]},"429":{"position":[[3210,15],[3295,13]]},"431":{"position":[[909,13],[939,13]]},"435":{"position":[[66,14],[590,13]]},"437":{"position":[[176,13],[2883,13],[3157,13]]},"443":{"position":[[187,13],[461,13]]},"445":{"position":[[15,13],[4718,15],[4803,13],[9765,15],[9850,13]]},"449":{"position":[[4682,15],[4767,13],[9897,15],[9982,13]]},"453":{"position":[[333,13]]},"455":{"position":[[187,13],[961,13],[1268,13],[1542,13]]},"457":{"position":[[34,13]]},"459":{"position":[[187,13],[461,13]]},"461":{"position":[[244,13]]},"463":{"position":[[82,13]]},"465":{"position":[[76,13]]},"467":{"position":[[4551,15],[4636,13]]},"469":{"position":[[4872,15],[4957,13]]},"471":{"position":[[41,13],[4741,15],[4826,13]]},"477":{"position":[[187,13],[730,13],[1037,13],[1311,13]]},"479":{"position":[[34,13]]},"481":{"position":[[187,13],[461,13]]},"485":{"position":[[4944,15],[5029,13]]},"487":{"position":[[4857,15],[4942,13]]},"491":{"position":[[95,13]]},"493":{"position":[[187,13],[820,13],[1127,13],[1401,13]]},"495":{"position":[[34,13]]},"497":{"position":[[187,13],[461,13]]},"499":{"position":[[391,13]]},"501":{"position":[[145,13]]},"503":{"position":[[242,13]]},"505":{"position":[[5404,15],[5489,13],[10576,15],[10661,13],[15991,15],[16076,13],[21105,15],[21190,13],[26145,15],[26230,13]]},"511":{"position":[[187,13],[708,13],[1015,13],[1289,13]]},"513":{"position":[[34,13]]},"515":{"position":[[187,13],[461,13]]},"517":{"position":[[310,13]]},"519":{"position":[[41,13],[144,13]]},"521":{"position":[[4568,15],[4653,13]]},"523":{"position":[[5208,15],[5293,13]]},"525":{"position":[[4809,15],[4894,13]]},"531":{"position":[[187,13],[661,13],[968,13],[1242,13]]},"533":{"position":[[34,13]]},"535":{"position":[[187,13],[461,13]]},"537":{"position":[[4924,15],[5009,13]]},"539":{"position":[[43,13]]},"541":{"position":[[4915,15],[5000,13]]},"543":{"position":[[4661,15],[4746,13]]},"545":{"position":[[4498,15],[4583,13],[9444,15],[9529,13]]},"547":{"position":[[4513,15],[4598,13],[9437,15],[9522,13]]},"553":{"position":[[187,13],[1132,13],[1439,13],[1713,13]]},"555":{"position":[[34,13]]},"557":{"position":[[187,13],[461,13]]},"562":{"position":[[4697,15],[4782,13]]},"569":{"position":[[5144,15],[5229,13],[10619,15],[10704,13],[16075,15],[16160,13]]},"571":{"position":[[150,13],[244,13],[4875,15],[4960,13]]},"576":{"position":[[4850,15],[4935,13],[10184,15],[10269,13]]},"583":{"position":[[5139,15],[5224,13],[5822,13]]},"585":{"position":[[765,13]]},"593":{"position":[[249,13],[556,13],[830,13]]},"595":{"position":[[34,13]]},"597":{"position":[[187,13],[461,13]]},"601":{"position":[[1141,13]]},"605":{"position":[[22,13],[5829,15],[5914,13],[11422,15],[11507,13],[17676,15],[17761,13],[23919,15],[24004,13],[24765,13],[29580,15],[29665,13],[30203,13],[30492,13]]},"607":{"position":[[685,13],[5678,15],[5763,13],[11359,15],[11444,13],[17112,15],[17197,13],[22854,15],[22939,13]]},"611":{"position":[[340,13]]},"613":{"position":[[155,13],[1212,13],[1486,13]]},"617":{"position":[[187,13],[461,13]]},"622":{"position":[[5260,15],[5345,13]]},"624":{"position":[[4687,15],[4772,13],[5315,13]]},"628":{"position":[[16,13]]},"630":{"position":[[5453,15],[5538,13]]},"632":{"position":[[21,13],[4584,15],[4669,13]]},"634":{"position":[[4806,15],[4891,13],[9958,15],[10043,13],[15020,15],[15105,13]]},"638":{"position":[[90,13],[183,13]]},"640":{"position":[[260,13],[534,13]]},"642":{"position":[[49,13],[814,13]]},"644":{"position":[[5342,15],[5427,13],[10375,15],[10460,13]]},"646":{"position":[[4815,15],[4900,13],[9855,15],[9940,13]]},"648":{"position":[[4930,15],[5015,13],[10623,15],[10708,13],[16076,15],[16161,13],[21296,15],[21381,13],[26370,15],[26455,13]]},"650":{"position":[[63,13]]},"658":{"position":[[61,13],[865,14]]},"660":{"position":[[108,13],[844,13],[8131,15],[8216,13]]},"664":{"position":[[295,13]]},"666":{"position":[[9,13],[1558,15],[1643,13],[3457,15],[3542,13],[5366,15],[5451,13],[7274,15],[7359,13],[9180,15],[9265,13],[11090,15],[11175,13]]},"668":{"position":[[11,13],[275,11],[2537,13],[2706,11],[4140,15],[4225,13],[4702,11],[5484,11],[6540,11],[7921,11],[9100,11],[9503,15],[9588,13],[9830,11],[11389,15],[11474,13]]},"670":{"position":[[24,9],[967,13],[1845,11],[2929,11],[4338,11],[5545,11],[5948,15],[6033,13],[6304,11],[8532,15],[8617,13],[11361,15],[11446,13]]},"672":{"position":[[21,13],[7670,15],[7755,13]]},"674":{"position":[[175,10],[245,13],[272,9]]},"676":{"position":[[167,13]]},"678":{"position":[[310,13],[482,13]]},"682":{"position":[[36,13]]},"688":{"position":[[147,13]]},"690":{"position":[[597,13]]},"692":{"position":[[4963,15],[5048,13],[9935,15],[10020,13],[15641,15],[15726,13],[21213,15],[21298,13],[26323,15],[26408,13]]},"694":{"position":[[284,13],[1125,13],[8400,15],[8485,13],[13836,15],[13921,13]]},"696":{"position":[[745,13],[7709,15],[7794,13],[14328,15],[14413,13],[20079,15],[20164,13]]},"698":{"position":[[140,13],[8225,15],[8310,13],[13808,15],[13893,13]]},"702":{"position":[[340,13]]},"706":{"position":[[310,13],[482,13]]},"716":{"position":[[416,13],[856,13]]},"718":{"position":[[547,13],[6755,15],[6840,13],[11838,15],[11923,13],[17181,15],[17266,13],[22221,15],[22306,13],[27405,15],[27490,13],[34284,15],[34369,13],[39791,15],[39876,13]]},"720":{"position":[[4600,15],[4685,13],[5608,13],[11296,15],[11381,13]]},"722":{"position":[[1449,13],[3010,13],[4435,13],[12367,15],[12452,13],[18432,15],[18517,13],[24418,15],[24503,13],[30104,15],[30189,13],[35456,15],[35541,13],[40553,15],[40638,13],[45704,15],[45789,13],[50856,15],[50941,13]]},"724":{"position":[[30,13],[90,13],[281,13],[609,13],[686,13]]},"726":{"position":[[126,13]]},"728":{"position":[[96,13]]},"732":{"position":[[61,13],[867,14]]},"734":{"position":[[108,13],[502,13],[9349,15],[9434,13]]},"738":{"position":[[321,13]]},"740":{"position":[[9,13],[4880,15],[4965,13],[10007,15],[10092,13],[15375,15],[15460,13],[20351,15],[20436,13]]},"742":{"position":[[11,13],[75,13],[1104,14],[2647,14],[4284,13],[8979,15],[9064,13],[16083,15],[16168,13],[22571,15],[22656,13],[27889,15],[27974,13]]},"744":{"position":[[24,9],[249,9],[6565,15],[6650,13],[13186,15],[13271,13],[19646,15],[19731,13]]},"746":{"position":[[21,13],[15677,15],[15762,13]]},"750":{"position":[[294,10]]},"758":{"position":[[103,13]]},"767":{"position":[[8365,15],[8450,13],[16265,15],[16350,13],[23166,15],[23251,13],[24212,13],[29456,15],[29541,13],[34639,15],[34724,13],[39687,15],[39772,13],[44749,15],[44834,13]]},"769":{"position":[[4761,15],[4846,13],[6194,13],[6485,13],[12080,15],[12165,13],[17456,15],[17541,13],[21455,13],[27200,15],[27285,13],[27952,13],[34827,15],[34912,13],[35433,13],[37548,13],[43814,15],[43899,13]]},"771":{"position":[[158,13],[580,13]]},"775":{"position":[[331,13]]},"786":{"position":[[261,13],[6285,15],[6370,13],[11291,15],[11376,13],[16384,15],[16469,13],[21347,15],[21432,13],[26395,15],[26480,13],[33542,15],[33627,13],[38586,15],[38671,13]]},"788":{"position":[[320,13],[7791,15],[7876,13],[13294,15],[13379,13]]},"790":{"position":[[4851,15],[4936,13],[10502,15],[10587,13],[15489,15],[15574,13]]},"792":{"position":[[7807,15],[7892,13],[13484,15],[13569,13],[20093,15],[20178,13],[20596,13]]},"798":{"position":[[331,13]]},"809":{"position":[[346,13],[6294,15],[6379,13],[11321,15],[11406,13],[16417,15],[16502,13],[21374,15],[21459,13],[26419,15],[26504,13],[33050,15],[33135,13],[38091,15],[38176,13]]},"811":{"position":[[296,13],[8058,15],[8143,13],[13769,15],[13854,13]]},"813":{"position":[[7261,15],[7346,13],[12911,15],[12996,13],[14749,13]]},"815":{"position":[[8897,15],[8982,13],[14443,15],[14528,13],[19620,15],[19705,13],[24734,15],[24819,13],[29925,15],[30010,13],[35031,15],[35116,13]]}}}],["authorization_id",{"_index":436,"t":{"16":{"position":[[17230,16],[22842,16]]},"215":{"position":[[5053,16],[10230,16]]},"221":{"position":[[6328,16],[16761,16],[21796,16]]},"232":{"position":[[5101,16]]},"245":{"position":[[5283,16]]},"247":{"position":[[10060,16]]},"312":{"position":[[5199,16],[10222,16]]},"318":{"position":[[10801,16],[16037,16]]},"338":{"position":[[5282,16]]},"345":{"position":[[6156,16]]},"369":{"position":[[11131,16]]},"373":{"position":[[5043,16]]},"387":{"position":[[5182,16],[10437,16]]},"445":{"position":[[5220,16],[10264,16]]},"449":{"position":[[5187,16],[10400,16]]},"471":{"position":[[5255,16]]},"487":{"position":[[5359,16]]},"505":{"position":[[11069,16],[16482,16],[21604,16],[26641,16]]},"525":{"position":[[5329,16]]},"545":{"position":[[4955,16],[9901,16]]},"547":{"position":[[9895,16]]},"562":{"position":[[5184,16]]},"605":{"position":[[6319,16],[11912,16],[18175,16],[24409,16],[30073,16]]},"607":{"position":[[6169,16],[11859,16],[17606,16],[23350,16]]},"624":{"position":[[5210,16]]},"632":{"position":[[5083,16]]},"634":{"position":[[10458,16],[15531,16]]},"644":{"position":[[5838,16],[10868,16]]},"646":{"position":[[10360,16]]},"648":{"position":[[21792,16],[26858,16]]},"666":{"position":[[2030,16],[3935,16],[5838,16],[7753,16],[9653,16],[11569,16]]},"668":{"position":[[4613,16],[11861,16]]},"670":{"position":[[9254,16],[12084,16]]},"692":{"position":[[21709,16],[26811,16]]},"694":{"position":[[14341,16]]},"696":{"position":[[20566,16]]},"698":{"position":[[14308,16]]},"718":{"position":[[12352,16],[22735,16],[27938,16],[40305,16]]},"720":{"position":[[5097,16],[11792,16]]},"722":{"position":[[46192,16],[51391,16]]},"740":{"position":[[5364,16],[10503,16],[20836,16]]},"742":{"position":[[9449,16],[28373,16]]},"744":{"position":[[14059,16],[20520,16]]},"767":{"position":[[29949,16],[35133,16],[40192,16],[45257,16]]},"769":{"position":[[5247,16],[12562,16],[17965,16],[27708,16],[35308,16],[44295,16]]},"786":{"position":[[11790,16],[21846,16],[26895,16],[34041,16],[39085,16]]},"788":{"position":[[13799,16]]},"790":{"position":[[15988,16]]},"792":{"position":[[13985,16]]},"809":{"position":[[11829,16],[21870,16],[26919,16],[33546,16],[38590,16]]},"811":{"position":[[14277,16]]},"813":{"position":[[13418,16]]},"815":{"position":[[14963,16],[20144,16],[25266,16],[30449,16],[35555,16]]}}}],["authorization_model_id",{"_index":353,"t":{"16":{"position":[[12940,23],[16871,27],[18552,23],[22483,27],[24312,23],[28237,25],[28583,22]]},"80":{"position":[[1337,23]]},"114":{"position":[[166,23],[1533,27]]},"126":{"position":[[149,23],[1550,25]]},"192":{"position":[[205,23],[1597,25]]},"194":{"position":[[362,23],[1758,25]]},"213":{"position":[[834,23],[4762,25]]},"215":{"position":[[784,23],[4703,27],[5949,23],[9876,27]]},"221":{"position":[[2089,23],[5992,27],[7249,23],[11285,25],[12492,23],[16411,27],[17515,23],[21442,27]]},"230":{"position":[[1096,23],[5020,25]]},"232":{"position":[[827,23],[4750,27]]},"245":{"position":[[1084,23],[4963,27]]},"247":{"position":[[851,23],[4759,25],[5856,23],[9739,27]]},"288":{"position":[[932,23],[4824,25],[5838,23],[9734,25],[11200,23],[15885,25]]},"312":{"position":[[923,23],[4846,27],[5953,23],[9872,27]]},"318":{"position":[[1161,23],[5270,25],[6527,23],[10450,27],[11761,23],[15684,27]]},"338":{"position":[[957,23],[4908,27]]},"345":{"position":[[1901,23],[5812,27]]},"369":{"position":[[1130,23],[5703,25],[6841,23],[10772,27]]},"371":{"position":[[1142,23],[6081,25]]},"373":{"position":[[753,23],[4684,27]]},"385":{"position":[[908,23],[4884,25]]},"387":{"position":[[857,23],[4808,27],[6107,23],[10062,27]]},"429":{"position":[[2004,23],[3464,25]]},"445":{"position":[[923,23],[4858,27],[5974,23],[9905,27]]},"449":{"position":[[883,23],[4822,27],[6098,23],[10037,27]]},"467":{"position":[[869,23],[4789,25]]},"469":{"position":[[951,23],[5128,25]]},"471":{"position":[[930,23],[4881,27]]},"485":{"position":[[1107,23],[5190,25]]},"487":{"position":[[1062,23],[4997,27]]},"505":{"position":[[1240,23],[5705,25],[6793,23],[10716,27],[12208,23],[16131,27],[17314,23],[21245,27],[22358,23],[26285,27]]},"521":{"position":[[880,23],[4808,25]]},"523":{"position":[[1290,23],[5471,25]]},"525":{"position":[[990,23],[4949,27]]},"537":{"position":[[1010,23],[5214,25]]},"541":{"position":[[1013,23],[5201,25]]},"543":{"position":[[976,23],[4900,25]]},"545":{"position":[[763,23],[4638,27],[5709,23],[9584,27]]},"547":{"position":[[852,23],[4744,25],[5698,23],[9577,27]]},"562":{"position":[[922,23],[4837,27]]},"576":{"position":[[1040,23],[4518,23],[5056,25],[6374,23],[9852,23],[10390,25]]},"583":{"position":[[822,23],[5282,25],[5743,22]]},"605":{"position":[[2050,23],[5969,27],[7643,23],[11562,27],[13885,23],[17816,27],[20140,23],[24059,27],[25797,23],[29720,27]]},"607":{"position":[[1895,23],[5818,27],[7564,23],[11499,27],[13325,23],[17252,27],[19067,23],[22994,27]]},"622":{"position":[[1225,23],[5515,25]]},"624":{"position":[[864,23],[4827,27]]},"630":{"position":[[1049,23],[5790,25]]},"632":{"position":[[793,23],[4724,27]]},"634":{"position":[[906,23],[5067,25],[6163,23],[10098,27],[11213,23],[15160,27]]},"644":{"position":[[1555,23],[5482,27],[6592,23],[10515,27]]},"646":{"position":[[975,23],[5061,25],[6056,23],[9995,27]]},"648":{"position":[[6634,23],[10938,25],[12084,23],[16392,25],[17509,23],[21436,27],[22591,23],[26510,27]]},"660":{"position":[[4121,23],[8819,25]]},"666":{"position":[[327,23],[1698,27],[2218,23],[3597,27],[4135,23],[5506,27],[6031,23],[7414,27],[7945,23],[9320,27],[9847,23],[11230,27]]},"668":{"position":[[2905,23],[4280,27],[5612,23],[9753,25],[10158,23],[11529,27]]},"670":{"position":[[1973,23],[6199,25],[6690,23],[8672,27],[9515,23],[11501,27]]},"672":{"position":[[3660,23],[8358,25]]},"692":{"position":[[1257,23],[5209,25],[6217,23],[10185,25],[11348,23],[16032,25],[17426,23],[21353,27],[22544,23],[26463,27]]},"694":{"position":[[3875,23],[8843,25],[10037,23],[13976,27]]},"696":{"position":[[3666,23],[8042,25],[9554,23],[14854,25],[16304,23],[20219,27]]},"698":{"position":[[3923,23],[8619,25],[10013,23],[13948,27]]},"718":{"position":[[2873,23],[7007,25],[8027,23],[11978,27],[13299,23],[17433,25],[18410,23],[22361,27],[23566,23],[27545,27],[29508,23],[34685,25],[35980,23],[39931,27]]},"720":{"position":[[809,23],[4740,27],[7509,23],[11436,27]]},"722":{"position":[[7843,23],[12835,25],[14343,23],[18692,25],[20124,23],[24728,25],[26064,23],[30436,25],[31660,23],[35732,25],[36808,23],[40812,25],[41925,23],[45844,27],[47017,23],[50996,27]]},"734":{"position":[[3868,23],[9838,25]]},"740":{"position":[[1109,23],[5020,27],[6220,23],[10147,27],[11490,23],[15627,25],[16576,23],[20491,27]]},"742":{"position":[[5224,23],[9119,27],[10950,23],[16534,25],[18245,23],[22889,25],[24118,23],[28029,27]]},"744":{"position":[[2074,23],[6884,25],[8464,23],[13326,27],[14920,23],[19786,27]]},"746":{"position":[[5852,23],[16865,25]]},"767":{"position":[[1783,23],[9016,25],[11279,23],[16669,25],[18390,23],[23555,25],[25673,23],[29596,27],[30852,23],[34779,27],[35888,23],[39827,27],[40946,23],[44889,27]]},"769":{"position":[[974,23],[4901,27],[8309,23],[12220,27],[13649,23],[17596,27],[23397,23],[27340,27],[31060,23],[34967,27],[40047,23],[43954,27]]},"786":{"position":[[2576,23],[6532,25],[7500,23],[11431,27],[12675,23],[16631,25],[17556,23],[21487,27],[22600,23],[26535,27],[29751,23],[33682,27],[34795,23],[38726,27]]},"788":{"position":[[3324,23],[8139,25],[9495,23],[13434,27]]},"790":{"position":[[1070,23],[5122,25],[6626,23],[10752,25],[11698,23],[15629,27]]},"792":{"position":[[3773,23],[8137,25],[9677,23],[13624,27],[16318,23],[20362,25]]},"809":{"position":[[2576,23],[6544,25],[7518,23],[11461,27],[12711,23],[16663,25],[17587,23],[21514,27],[22624,23],[26559,27],[29263,23],[33190,27],[34300,23],[38231,27]]},"811":{"position":[[3172,23],[8505,25],[9966,23],[13909,27]]},"813":{"position":[[2884,23],[7597,25],[9096,23],[13051,27]]},"815":{"position":[[3929,23],[9321,25],[10624,23],[14583,27],[15793,23],[19760,27],[20899,23],[24874,27],[26098,23],[30065,27],[31204,23],[35171,27]]}}}],["authorization_model_id=\"1uhxcsutp0vkpysnkq1pbb1jezw",{"_index":420,"t":{"16":{"position":[[16418,53],[22030,53],[27739,53]]},"114":{"position":[[1204,53]]},"126":{"position":[[1176,53]]},"192":{"position":[[1208,53]]},"194":{"position":[[1368,53]]},"213":{"position":[[4246,53],[4901,53]]},"215":{"position":[[4250,53],[9422,53]]},"221":{"position":[[5538,53],[10771,53],[11461,53],[15958,53],[20988,53]]},"230":{"position":[[4505,53],[5158,53]]},"232":{"position":[[4296,53]]},"245":{"position":[[4510,53]]},"247":{"position":[[4248,53],[4893,53],[9285,53]]},"288":{"position":[[4317,53],[4954,53],[9226,53],[9865,53],[15277,53],[16064,54],[16241,53]]},"312":{"position":[[4393,53],[9419,53]]},"318":{"position":[[4749,53],[5468,53],[9996,53],[15231,53]]},"338":{"position":[[4455,53]]},"345":{"position":[[5359,53]]},"369":{"position":[[5108,53],[6011,53],[10319,53]]},"371":{"position":[[5450,53],[6499,53]]},"373":{"position":[[4231,53]]},"385":{"position":[[4356,53],[5035,53]]},"387":{"position":[[4355,53],[9608,53]]},"429":{"position":[[3058,53],[3617,53]]},"445":{"position":[[4405,53],[9452,53]]},"449":{"position":[[4369,53],[9583,53]]},"467":{"position":[[4275,53],[4926,53]]},"469":{"position":[[4596,53],[5345,53]]},"471":{"position":[[4428,53]]},"485":{"position":[[4668,53],[5379,53]]},"487":{"position":[[4544,53]]},"505":{"position":[[5128,53],[5983,53],[10263,53],[15677,53],[20792,53],[25832,53]]},"521":{"position":[[4292,53],[4947,53]]},"523":{"position":[[4932,53],[5687,53]]},"525":{"position":[[4496,53]]},"537":{"position":[[4648,53],[5408,53]]},"541":{"position":[[4639,53],[5391,53]]},"543":{"position":[[4385,53],[5038,53]]},"545":{"position":[[4185,53],[9131,53]]},"547":{"position":[[4237,53],[4874,53],[9123,53]]},"562":{"position":[[4384,53]]},"576":{"position":[[5258,52],[10592,52]]},"583":{"position":[[4655,53]]},"605":{"position":[[5516,53],[11109,53],[17363,53],[23606,53],[29267,53]]},"607":{"position":[[5364,53],[11045,53],[16798,53],[22541,53]]},"622":{"position":[[4984,53],[5770,53]]},"624":{"position":[[4374,53]]},"630":{"position":[[5177,53],[6148,53]]},"632":{"position":[[4271,53]]},"634":{"position":[[4530,53],[5277,53],[9644,53],[14707,53]]},"644":{"position":[[5029,53],[10062,53]]},"646":{"position":[[4539,53],[5251,53],[9542,53]]},"648":{"position":[[10347,53],[11157,53],[15800,53],[16612,53],[20983,53],[26056,53]]},"660":{"position":[[7979,53],[9787,53]]},"666":{"position":[[1369,53],[3268,53],[5177,53],[7084,53],[8990,53],[10900,53]]},"668":{"position":[[3950,53],[9227,53],[9960,53],[11200,53]]},"670":{"position":[[5672,53],[6434,53],[8343,53],[11171,53]]},"672":{"position":[[7518,53],[9326,53]]},"692":{"position":[[4687,53],[5354,53],[9659,53],[10334,53],[15365,53],[16332,53],[20900,53],[26009,53]]},"694":{"position":[[8124,53],[9200,53],[13523,53]]},"696":{"position":[[7433,53],[8279,53],[14052,53],[15294,53],[19766,53]]},"698":{"position":[[7949,53],[8922,53],[13494,53]]},"718":{"position":[[6479,53],[7211,53],[11525,53],[16905,53],[17637,53],[21908,53],[27091,53],[34008,53],[35147,53],[39478,53]]},"720":{"position":[[4286,53],[10983,53]]},"722":{"position":[[12091,53],[13212,53],[18156,53],[18965,53],[24142,53],[25049,53],[29828,53],[30672,53],[35180,53],[35907,53],[40277,53],[40970,53],[45390,53],[50543,53]]},"734":{"position":[[9073,53],[10515,53]]},"740":{"position":[[4567,53],[9694,53],[15099,53],[15832,53],[20037,53]]},"742":{"position":[[8665,53],[15807,53],[17115,53],[22295,53],[23221,53],[27576,53]]},"744":{"position":[[6289,53],[7271,53],[12873,53],[19332,53]]},"746":{"position":[[15401,53],[18830,53]]},"767":{"position":[[8089,53],[10020,53],[15989,53],[17201,53],[22890,53],[24017,53],[29143,53],[34325,53],[39374,53],[44436,53]]},"769":{"position":[[4443,53],[11766,53],[17142,53],[26887,53],[34514,53],[43501,53]]},"786":{"position":[[6009,53],[6678,53],[10978,53],[16108,53],[16777,53],[21034,53],[26081,53],[33229,53],[38273,53]]},"788":{"position":[[7515,53],[8518,53],[12981,53]]},"790":{"position":[[4575,53],[5292,53],[10226,53],[10954,53],[15176,53]]},"792":{"position":[[7531,53],[8371,53],[13166,53],[19817,53],[20530,53]]},"809":{"position":[[6018,53],[6693,53],[11008,53],[16141,53],[16808,53],[21061,53],[26105,53],[32737,53],[37778,53]]},"811":{"position":[[7782,53],[8983,53],[13456,53]]},"813":{"position":[[6985,53],[7946,53],[12593,53]]},"815":{"position":[[8621,53],[9847,53],[14130,53],[19306,53],[24421,53],[29611,53],[34717,53]]}}}],["authorizationmodelid",{"_index":375,"t":{"16":{"position":[[13903,21],[15275,20],[19515,21],[20887,20],[25298,21],[26525,20]]},"114":{"position":[[349,21],[799,20]]},"126":{"position":[[365,21],[690,20]]},"192":{"position":[[476,21],[837,20]]},"194":{"position":[[634,21],[996,20]]},"213":{"position":[[1878,21],[3144,20]]},"215":{"position":[[1744,21],[3110,20],[6911,21],[8280,20]]},"221":{"position":[[3045,21],[4402,20],[8330,21],[9633,20],[13452,21],[14818,20],[18477,21],[19846,20]]},"230":{"position":[[2139,21],[3404,20]]},"232":{"position":[[1788,21],[3155,20]]},"245":{"position":[[2034,21],[3380,20]]},"247":{"position":[[1890,21],[3151,20],[6807,21],[8154,20]]},"288":{"position":[[1967,21],[3224,20],[6874,21],[8132,20],[12512,21],[13985,20]]},"312":{"position":[[1884,21],[3252,20],[6913,21],[8279,20]]},"318":{"position":[[2264,21],[3589,20],[7488,21],[8855,20],[12722,21],[14090,20]]},"338":{"position":[[1925,21],[3307,20]]},"345":{"position":[[2859,21],[4221,20]]},"369":{"position":[[2395,21],[3836,20],[7804,21],[9176,20]]},"371":{"position":[[2517,21],[4068,20]]},"373":{"position":[[1716,21],[3088,20]]},"385":{"position":[[1964,21],[3242,20]]},"387":{"position":[[1825,21],[3207,20],[7076,21],[8459,20]]},"429":{"position":[[2292,21],[2670,20]]},"445":{"position":[[1887,21],[3261,20],[6937,21],[8309,20]]},"449":{"position":[[1848,21],[3224,20],[7063,21],[8438,20]]},"467":{"position":[[1911,21],[3175,20]]},"469":{"position":[[2073,21],[3417,20]]},"471":{"position":[[1898,21],[3280,20]]},"485":{"position":[[2201,21],[3517,20]]},"487":{"position":[[2026,21],[3400,20]]},"505":{"position":[[2475,21],[3886,20],[7754,21],[9122,20],[13169,21],[14536,20],[18277,21],[19649,20],[23320,21],[24690,20]]},"521":{"position":[[1924,21],[3190,20]]},"523":{"position":[[2411,21],[3754,20]]},"525":{"position":[[1960,21],[3346,20]]},"537":{"position":[[2161,21],[3488,20]]},"541":{"position":[[2160,21],[3483,20]]},"543":{"position":[[2019,21],[3284,20]]},"545":{"position":[[1712,21],[3056,20],[6658,21],[8002,20]]},"547":{"position":[[1887,21],[3144,20],[6648,21],[7993,20]]},"562":{"position":[[1881,21],[3245,20]]},"576":{"position":[[2106,21],[3414,20],[7440,21],[8748,20]]},"583":{"position":[[1915,21],[3311,20]]},"605":{"position":[[3010,21],[4376,20],[8603,21],[9969,20],[14848,21],[16220,20],[21100,21],[22466,20],[26758,21],[28126,20]]},"607":{"position":[[2856,21],[4223,20],[8528,21],[9901,20],[14287,21],[15656,20],[20029,21],[21399,20]]},"622":{"position":[[2385,21],[3767,20]]},"624":{"position":[[1835,21],[3223,20]]},"630":{"position":[[2364,21],[3855,20]]},"632":{"position":[[1756,21],[3128,20]]},"634":{"position":[[2021,21],[3358,20],[7127,21],[8500,20],[12180,21],[13560,20]]},"644":{"position":[[2517,21],[3887,20],[7553,21],[8921,20]]},"646":{"position":[[2070,21],[3387,20],[7021,21],[8397,20]]},"648":{"position":[[7810,21],[9162,20],[13261,21],[14614,20],[18471,21],[19841,20],[23551,21],[24916,20]]},"660":{"position":[[5536,21],[6765,20]]},"666":{"position":[[511,21],[963,20],[2404,21],[2860,20],[4319,21],[4771,20],[6218,21],[6675,20],[8130,21],[8583,20],[10034,21],[10491,20]]},"668":{"position":[[3090,21],[3543,20],[6724,21],[8058,20],[10342,21],[10794,20]]},"670":{"position":[[3113,21],[4475,20],[6989,21],[7799,20],[9815,21],[10626,20]]},"672":{"position":[[5075,21],[6304,20]]},"692":{"position":[[2307,21],[3579,20],[7271,21],[8547,20],[12657,21],[14096,20],[18388,21],[19758,20],[23504,21],[24869,20]]},"694":{"position":[[5293,21],[6795,20],[11002,21],[12378,20]]},"696":{"position":[[4860,21],[6230,20],[11055,21],[12640,20],[17263,21],[18627,20]]},"698":{"position":[[5235,21],[6677,20],[10977,21],[12350,20]]},"718":{"position":[[3982,21],[5313,20],[8995,21],[10377,20],[14408,21],[15739,20],[19378,21],[20760,20],[24541,21],[25936,20],[30979,21],[32580,20],[36948,21],[38330,20]]},"720":{"position":[[1772,21],[3143,20],[8471,21],[9841,20]]},"722":{"position":[[9229,21],[10745,20],[15521,21],[16921,20],[21402,21],[22856,20],[27257,21],[28626,20],[32740,21],[34042,20],[37871,21],[39156,20],[42885,21],[44250,20],[47992,21],[49388,20]]},"734":{"position":[[5606,21],[7428,20]]},"740":{"position":[[2067,21],[3429,20],[7182,21],[8552,20],[12600,21],[13932,20],[17535,21],[18898,20]]},"742":{"position":[[6178,21],[7531,20],[12540,21],[14260,20],[19534,21],[20999,20],[25076,21],[26438,20]]},"744":{"position":[[3418,21],[4938,20],[9607,21],[11524,20],[16064,21],[17982,20]]},"746":{"position":[[9294,21],[12452,20]]},"767":{"position":[[3952,21],[6113,20],[12820,21],[14491,20],[19861,21],[21462,20],[26634,21],[28002,20],[31814,21],[33183,20],[36853,21],[38229,20],[41912,21],[43290,20]]},"769":{"position":[[1936,21],[3301,20],[9267,21],[10628,20],[14616,21],[15995,20],[24363,21],[25741,20],[32017,21],[33377,20],[41004,21],[42364,20]]},"786":{"position":[[3627,21],[4900,20],[8463,21],[9835,20],[13726,21],[14999,20],[18519,21],[19891,20],[23564,21],[24937,20],[30714,21],[32086,20],[35758,21],[37130,20]]},"788":{"position":[[4660,21],[6172,20],[10460,21],[11836,20]]},"790":{"position":[[2145,21],[3442,20],[7733,21],[9062,20],[12661,21],[14033,20]]},"792":{"position":[[4964,21],[6331,20],[10644,21],[12019,20],[17391,21],[18686,20]]},"809":{"position":[[3630,21],[4906,20],[8484,21],[9862,20],[13761,21],[15033,20],[18549,21],[19919,20],[23588,21],[24961,20],[30225,21],[31595,20],[35263,21],[36635,20]]},"811":{"position":[[4711,21],[6334,20],[10932,21],[12310,20]]},"813":{"position":[[4190,21],[5672,20],[10065,21],[11444,20]]},"815":{"position":[[5464,21],[7129,20],[11594,21],[12980,20],[16765,21],[18154,20],[21873,21],[23267,20],[27070,21],[28459,20],[32176,21],[33565,20]]}}}],["authorize.j",{"_index":798,"t":{"98":{"position":[[826,13]]}}}],["authorized_us",{"_index":576,"t":{"64":{"position":[[226,15],[390,17],[854,15],[932,18],[1143,17],[1312,17],[1710,15],[1814,18]]}}}],["authz",{"_index":49,"t":{"6":{"position":[[89,6],[439,6]]}}}],["autom",{"_index":1623,"t":{"405":{"position":[[964,9]]}}}],["automat",{"_index":1419,"t":{"334":{"position":[[112,13]]},"403":{"position":[[2315,13]]},"453":{"position":[[807,13]]},"491":{"position":[[1734,13]]},"698":{"position":[[2571,13]]},"788":{"position":[[8730,13]]},"811":{"position":[[9201,13]]}}}],["avail",{"_index":838,"t":{"102":{"position":[[843,9],[1181,9]]},"429":{"position":[[549,10]]},"583":{"position":[[6271,10]]},"710":{"position":[[418,9]]},"728":{"position":[[35,9]]},"798":{"position":[[836,10]]},"806":{"position":[[462,9]]}}}],["avoid",{"_index":873,"t":{"132":{"position":[[208,8]]},"174":{"position":[[217,5]]},"180":{"position":[[40,5]]},"397":{"position":[[716,5]]},"503":{"position":[[167,5]]},"644":{"position":[[3,5]]}}}],["await",{"_index":351,"t":{"16":{"position":[[12916,5],[15130,5],[16485,5],[18528,5],[20742,5],[22097,5],[24282,5],[26657,5],[27860,5]]},"80":{"position":[[1368,5],[4951,5],[6372,5]]},"86":{"position":[[397,5],[1623,5],[2232,5]]},"94":{"position":[[825,5]]},"96":{"position":[[656,5],[1426,5]]},"98":{"position":[[1361,5],[2421,5]]},"114":{"position":[[142,5],[664,5],[1271,5]]},"126":{"position":[[119,5],[822,5],[1297,5]]},"192":{"position":[[89,5],[674,5],[1264,5]]},"194":{"position":[[244,5],[832,5],[1424,5]]},"213":{"position":[[715,5],[2978,5],[4302,5]]},"215":{"position":[[760,5],[2968,5],[4317,5],[5925,5],[8137,5],[9489,5]]},"221":{"position":[[2065,5],[4265,5],[5605,5],[7093,5],[9430,5],[10827,5],[12468,5],[14676,5],[16025,5],[17491,5],[19703,5],[21055,5]]},"230":{"position":[[977,5],[3239,5],[4561,5]]},"232":{"position":[[803,5],[3013,5],[4363,5]]},"245":{"position":[[1060,5],[3248,5],[4577,5]]},"247":{"position":[[736,5],[2990,5],[4304,5],[5832,5],[8022,5],[9352,5]]},"259":{"position":[[154,5],[420,5],[521,5],[1403,5],[1884,5],[1985,5]]},"261":{"position":[[1143,5],[1432,5],[1533,5],[2241,5],[2745,5],[2846,5]]},"288":{"position":[[822,5],[3067,5],[4373,5],[5726,5],[7974,5],[9282,5],[10904,5],[13612,5],[15333,5]]},"312":{"position":[[899,5],[3109,5],[4460,5],[5929,5],[8137,5],[9486,5]]},"318":{"position":[[983,5],[3364,5],[4805,5],[6503,5],[8713,5],[10063,5],[11737,5],[13947,5],[15298,5]]},"338":{"position":[[933,5],[3157,5],[4522,5]]},"345":{"position":[[1877,5],[4081,5],[5426,5]]},"369":{"position":[[846,5],[3495,5],[5164,5],[6817,5],[9031,5],[10386,5]]},"371":{"position":[[748,5],[3617,5],[5506,5]]},"373":{"position":[[729,5],[2943,5],[4298,5]]},"385":{"position":[[777,5],[3064,5],[4412,5]]},"387":{"position":[[833,5],[3057,5],[4422,5],[6083,5],[8309,5],[9675,5]]},"429":{"position":[[1871,5],[2490,5],[3114,5]]},"445":{"position":[[899,5],[3115,5],[4472,5],[5950,5],[8164,5],[9519,5]]},"449":{"position":[[859,5],[3077,5],[4436,5],[6074,5],[8292,5],[9650,5]]},"467":{"position":[[752,5],[3011,5],[4331,5]]},"469":{"position":[[754,5],[3173,5],[4652,5]]},"471":{"position":[[906,5],[3130,5],[4495,5]]},"485":{"position":[[938,5],[3301,5],[4724,5]]},"487":{"position":[[1038,5],[3254,5],[4611,5]]},"505":{"position":[[986,5],[3575,5],[5184,5],[6769,5],[8979,5],[10330,5],[12184,5],[14394,5],[15744,5],[17290,5],[19504,5],[20859,5],[22334,5],[24546,5],[25899,5]]},"521":{"position":[[761,5],[3024,5],[4348,5]]},"523":{"position":[[1094,5],[3511,5],[4988,5]]},"525":{"position":[[966,5],[3194,5],[4563,5]]},"537":{"position":[[840,5],[3261,5],[4704,5]]},"541":{"position":[[847,5],[3260,5],[4695,5]]},"543":{"position":[[858,5],[3119,5],[4441,5]]},"545":{"position":[[739,5],[2925,5],[4252,5],[5685,5],[7871,5],[9198,5]]},"547":{"position":[[741,5],[2987,5],[4293,5],[5674,5],[7862,5],[9190,5]]},"562":{"position":[[898,5],[3104,5],[4451,5]]},"569":{"position":[[1150,5],[4767,5],[6722,5],[10242,5],[12138,5],[15698,5]]},"571":{"position":[[1353,5],[4616,5]]},"576":{"position":[[871,5],[3213,5],[4586,5],[6205,5],[8547,5],[9920,5]]},"583":{"position":[[792,5],[3573,5],[4905,5]]},"605":{"position":[[2026,5],[4234,5],[5583,5],[7619,5],[9827,5],[11176,5],[13861,5],[16075,5],[17430,5],[20116,5],[22324,5],[23673,5],[25773,5],[27983,5],[29334,5]]},"607":{"position":[[1871,5],[4081,5],[5431,5],[7540,5],[9756,5],[11112,5],[13301,5],[15513,5],[16865,5],[19043,5],[21255,5],[22608,5]]},"622":{"position":[[990,5],[3485,5],[5040,5]]},"624":{"position":[[840,5],[3070,5],[4441,5]]},"630":{"position":[[715,5],[3464,5],[5233,5]]},"632":{"position":[[769,5],[2983,5],[4338,5]]},"634":{"position":[[715,5],[3121,5],[4586,5],[6139,5],[8355,5],[9711,5],[11189,5],[13411,5],[14774,5]]},"644":{"position":[[1531,5],[3743,5],[5096,5],[6568,5],[8778,5],[10129,5]]},"646":{"position":[[805,5],[3170,5],[4595,5],[6032,5],[8250,5],[9609,5]]},"648":{"position":[[817,5],[4429,5],[6439,5],[8910,5],[10403,5],[11887,5],[14361,5],[15856,5],[17485,5],[19697,5],[21050,5],[22567,5],[24775,5],[26123,5]]},"660":{"position":[[3197,5],[5734,5],[8035,5]]},"666":{"position":[[303,5],[827,5],[1436,5],[2194,5],[2722,5],[3335,5],[4111,5],[4635,5],[5244,5],[6007,5],[6537,5],[7151,5],[7921,5],[8447,5],[9057,5],[9823,5],[10353,5],[10967,5]]},"668":{"position":[[2881,5],[3407,5],[4017,5],[5425,5],[7824,5],[9283,5],[10134,5],[10658,5],[11267,5]]},"670":{"position":[[1757,5],[4213,5],[5728,5],[6666,5],[7515,5],[8410,5],[9491,5],[10342,5],[11238,5]]},"672":{"position":[[2736,5],[5273,5],[7574,5]]},"692":{"position":[[1132,5],[3407,5],[4743,5],[6088,5],[8371,5],[9715,5],[11076,5],[13757,5],[15421,5],[17402,5],[19614,5],[20967,5],[22520,5],[24728,5],[26076,5]]},"694":{"position":[[3550,5],[6393,5],[8180,5],[10013,5],[12231,5],[13590,5]]},"696":{"position":[[3453,5],[5960,5],[7489,5],[9146,5],[12155,5],[14108,5],[16280,5],[18486,5],[19833,5]]},"698":{"position":[[3648,5],[6335,5],[8005,5],[9989,5],[12205,5],[13561,5]]},"718":{"position":[[2689,5],[5082,5],[6535,5],[8003,5],[10227,5],[11592,5],[13115,5],[15508,5],[16961,5],[18386,5],[20610,5],[21975,5],[23542,5],[25780,5],[27158,5],[29074,5],[32079,5],[34064,5],[35956,5],[38180,5],[39545,5]]},"720":{"position":[[785,5],[2999,5],[4353,5],[7485,5],[9697,5],[11050,5]]},"722":{"position":[[7494,5],[10329,5],[12147,5],[14090,5],[16621,5],[18212,5],[19827,5],[22502,5],[24198,5],[25852,5],[28357,5],[29884,5],[31505,5],[33840,5],[35236,5],[36670,5],[38971,5],[40333,5],[41901,5],[44109,5],[45457,5],[46993,5],[49231,5],[50610,5]]},"734":{"position":[[3223,5],[6706,5],[9129,5]]},"740":{"position":[[1085,5],[3289,5],[4634,5],[6196,5],[8408,5],[9761,5],[11305,5],[13700,5],[15155,5],[16552,5],[18758,5],[20104,5]]},"742":{"position":[[5200,5],[7396,5],[8732,5],[10397,5],[13640,5],[15863,5],[17937,5],[20634,5],[22351,5],[24094,5],[26298,5],[27643,5]]},"744":{"position":[[1710,5],[4518,5],[6345,5],[8440,5],[11164,5],[12940,5],[14896,5],[17622,5],[19399,5]]},"746":{"position":[[3951,5],[10394,5],[15457,5]]},"767":{"position":[[819,5],[5052,5],[8145,5],[10775,5],[13920,5],[16045,5],[17956,5],[20961,5],[22946,5],[25649,5],[27859,5],[29210,5],[30828,5],[33040,5],[34392,5],[35864,5],[38082,5],[39441,5],[40922,5],[43142,5],[44503,5]]},"769":{"position":[[950,5],[3162,5],[4510,5],[8285,5],[10489,5],[11833,5],[13625,5],[15847,5],[17209,5],[23373,5],[25593,5],[26954,5],[31036,5],[33238,5],[34581,5],[40023,5],[42225,5],[43568,5]]},"786":{"position":[[2450,5],[4727,5],[6065,5],[7476,5],[9690,5],[11045,5],[12549,5],[14826,5],[16164,5],[17532,5],[19746,5],[21101,5],[22576,5],[24792,5],[26148,5],[29727,5],[31941,5],[33296,5],[34771,5],[36985,5],[38340,5]]},"788":{"position":[[2969,5],[5760,5],[7571,5],[9471,5],[11689,5],[13048,5]]},"790":{"position":[[920,5],[3245,5],[4631,5],[6444,5],[8833,5],[10282,5],[11674,5],[13888,5],[15243,5]]},"792":{"position":[[3563,5],[6064,5],[7587,5],[9653,5],[11875,5],[13233,5],[16170,5],[18491,5],[19873,5]]},"809":{"position":[[2447,5],[4730,5],[6074,5],[7494,5],[9714,5],[11075,5],[12586,5],[14861,5],[16197,5],[17563,5],[19775,5],[21128,5],[22600,5],[24816,5],[26172,5],[29239,5],[31451,5],[32804,5],[34276,5],[36490,5],[37845,5]]},"811":{"position":[[2726,5],[5811,5],[7838,5],[9942,5],[12162,5],[13523,5]]},"813":{"position":[[2559,5],[5290,5],[7041,5],[9072,5],[11298,5],[12660,5]]},"815":{"position":[[3431,5],[6564,5],[8677,5],[10600,5],[12828,5],[14197,5],[15769,5],[18001,5],[19373,5],[20875,5],[23111,5],[24488,5],[26074,5],[28306,5],[29678,5],[31180,5],[33412,5],[34784,5]]}}}],["awar",{"_index":1937,"t":{"581":{"position":[[241,5]]},"672":{"position":[[9614,5]]},"746":{"position":[[19117,5]]},"786":{"position":[[27145,5]]},"809":{"position":[[27177,5]]}}}],["b",{"_index":555,"t":{"60":{"position":[[2728,1],[2754,1]]},"273":{"position":[[541,2]]},"275":{"position":[[213,1]]},"312":{"position":[[10857,2]]},"318":{"position":[[5522,2]]},"403":{"position":[[2542,3]]},"660":{"position":[[2908,1],[2964,1],[3091,1],[3430,1],[3694,1],[4046,1],[4509,1],[4885,1],[5405,1],[6015,1],[6299,1],[6681,1],[7259,1],[7535,1],[7905,1],[9074,1],[9346,1],[9710,1]]},"662":{"position":[[155,2],[373,2]]},"670":{"position":[[12310,1],[12399,1],[12459,1],[12488,1]]},"672":{"position":[[2969,1],[3233,1],[3585,1],[4048,1],[4424,1],[4944,1],[5554,1],[5838,1],[6220,1],[6798,1],[7074,1],[7444,1],[8613,1],[8885,1],[9249,1]]}}}],["b2b",{"_index":1449,"t":{"353":{"position":[[119,5]]}}}],["b78a",{"_index":2584,"t":{"767":{"position":[[24655,4]]}}}],["back",{"_index":1501,"t":{"373":{"position":[[5123,4]]},"415":{"position":[[960,5]]},"694":{"position":[[1105,5]]}}}],["backward",{"_index":2057,"t":{"644":{"position":[[47,9],[79,9]]},"646":{"position":[[20,9]]}}}],["bank",{"_index":2501,"t":{"748":{"position":[[79,5],[145,4],[258,4],[323,5],[329,6],[1092,7],[1280,7],[1809,7],[1862,6]]}}}],["base",{"_index":101,"t":{"10":{"position":[[8,5],[64,5],[164,5],[223,5],[256,5]]},"12":{"position":[[30,5]]},"16":{"position":[[29379,5]]},"66":{"position":[[144,4],[405,7]]},"92":{"position":[[234,5]]},"158":{"position":[[637,5]]},"296":{"position":[[512,5],[1033,5]]},"316":{"position":[[634,7]]},"391":{"position":[[24,5]]},"399":{"position":[[383,5]]},"401":{"position":[[150,5]]},"405":{"position":[[404,5],[1428,5]]},"437":{"position":[[340,5],[2449,5]]},"439":{"position":[[37,5]]},"491":{"position":[[315,5]]},"499":{"position":[[488,5]]},"583":{"position":[[59,5]]},"668":{"position":[[62,5]]},"670":{"position":[[34,5]]},"674":{"position":[[239,5]]},"688":{"position":[[23,5],[57,5]]},"692":{"position":[[291,5],[345,5]]},"698":{"position":[[2762,5]]},"712":{"position":[[263,4]]},"716":{"position":[[295,5],[325,5]]},"720":{"position":[[5274,5]]},"744":{"position":[[34,5],[259,5]]},"792":{"position":[[24,4],[243,4],[8855,4],[15233,4],[15333,4]]}}}],["base_project_editor",{"_index":2133,"t":{"668":{"position":[[808,21],[978,21],[1202,20],[1272,19],[1554,22],[1793,21],[2111,22]]},"672":{"position":[[209,20],[279,19],[914,22],[1153,21],[1471,22]]}}}],["basic",{"_index":605,"t":{"72":{"position":[[141,5]]},"82":{"position":[[228,6]]},"296":{"position":[[143,6]]},"383":{"position":[[180,5]]},"712":{"position":[[349,5],[560,5]]},"724":{"position":[[7,5]]},"765":{"position":[[377,5]]}}}],["bayer",{"_index":2515,"t":{"762":{"position":[[188,5],[209,8],[380,5]]},"767":{"position":[[10976,5],[12405,5],[14169,5],[15681,5],[16892,5],[18160,5],[19519,5],[21213,5],[22655,5],[23781,5]]}}}],["bc574cf98b54",{"_index":2585,"t":{"767":{"position":[[24660,12]]}}}],["be",{"_index":71,"t":{"8":{"position":[[30,5],[139,5],[322,5]]},"10":{"position":[[209,5]]},"16":{"position":[[3292,5]]},"52":{"position":[[617,5]]},"56":{"position":[[1576,5]]},"273":{"position":[[1527,5]]},"306":{"position":[[1108,5],[2374,5]]},"310":{"position":[[667,5]]},"328":{"position":[[905,5]]},"349":{"position":[[394,5],[558,5]]},"403":{"position":[[7848,5],[7879,5],[7911,5]]},"415":{"position":[[41,5]]},"425":{"position":[[1370,5]]},"437":{"position":[[1553,5]]},"455":{"position":[[1754,5]]},"459":{"position":[[673,5]]},"547":{"position":[[47,5]]},"668":{"position":[[470,5]]},"726":{"position":[[74,5]]},"742":{"position":[[2617,5]]},"769":{"position":[[21009,5]]}}}],["bearer",{"_index":422,"t":{"16":{"position":[[16557,6],[16747,6],[22169,6],[22359,6],[27913,6],[28110,6]]},"80":{"position":[[6516,6],[6721,6]]},"114":{"position":[[1409,6]]},"126":{"position":[[1423,6]]},"144":{"position":[[335,6]]},"172":{"position":[[1703,6]]},"192":{"position":[[1376,6]]},"194":{"position":[[1536,6]]},"213":{"position":[[4348,6],[4538,6]]},"215":{"position":[[4389,6],[4579,6],[9562,6],[9752,6]]},"221":{"position":[[5678,6],[5868,6],[10873,6],[11063,6],[16097,6],[16287,6],[21128,6],[21318,6]]},"230":{"position":[[4607,6],[4797,6]]},"232":{"position":[[4436,6],[4626,6]]},"245":{"position":[[4649,6],[4839,6]]},"247":{"position":[[4350,6],[4540,6],[9425,6],[9615,6]]},"259":{"position":[[655,6],[2238,6]]},"261":{"position":[[1682,6],[3114,6]]},"288":{"position":[[4419,6],[4609,6],[9328,6],[9518,6],[15379,6],[15569,6]]},"312":{"position":[[4532,6],[4722,6],[9558,6],[9748,6]]},"318":{"position":[[4851,6],[5041,6],[10136,6],[10326,6],[15370,6],[15560,6]]},"338":{"position":[[4594,6],[4784,6]]},"345":{"position":[[5498,6],[5688,6]]},"369":{"position":[[5210,6],[5400,6],[10458,6],[10648,6]]},"371":{"position":[[5552,6],[5742,6]]},"373":{"position":[[4370,6],[4560,6]]},"385":{"position":[[4458,6],[4648,6]]},"387":{"position":[[4494,6],[4684,6],[9748,6],[9938,6]]},"429":{"position":[[3226,6]]},"445":{"position":[[4544,6],[4734,6],[9591,6],[9781,6]]},"449":{"position":[[4508,6],[4698,6],[9723,6],[9913,6]]},"467":{"position":[[4377,6],[4567,6]]},"469":{"position":[[4698,6],[4888,6]]},"471":{"position":[[4567,6],[4757,6]]},"485":{"position":[[4770,6],[4960,6]]},"487":{"position":[[4683,6],[4873,6]]},"505":{"position":[[5230,6],[5420,6],[10402,6],[10592,6],[15817,6],[16007,6],[20931,6],[21121,6],[25971,6],[26161,6]]},"521":{"position":[[4394,6],[4584,6]]},"523":{"position":[[5034,6],[5224,6]]},"525":{"position":[[4635,6],[4825,6]]},"537":{"position":[[4750,6],[4940,6]]},"541":{"position":[[4741,6],[4931,6]]},"543":{"position":[[4487,6],[4677,6]]},"545":{"position":[[4324,6],[4514,6],[9270,6],[9460,6]]},"547":{"position":[[4339,6],[4529,6],[9263,6],[9453,6]]},"562":{"position":[[4523,6],[4713,6]]},"569":{"position":[[4971,6],[5160,6],[10446,6],[10635,6],[15902,6],[16091,6]]},"571":{"position":[[4702,6],[4891,6]]},"576":{"position":[[4675,6],[4866,6],[10009,6],[10200,6]]},"583":{"position":[[4958,6],[5155,6]]},"605":{"position":[[5655,6],[5845,6],[11248,6],[11438,6],[17502,6],[17692,6],[23745,6],[23935,6],[29406,6],[29596,6]]},"607":{"position":[[5504,6],[5694,6],[11185,6],[11375,6],[16938,6],[17128,6],[22680,6],[22870,6]]},"622":{"position":[[5086,6],[5276,6]]},"624":{"position":[[4513,6],[4703,6]]},"630":{"position":[[5279,6],[5469,6]]},"632":{"position":[[4410,6],[4600,6]]},"634":{"position":[[4632,6],[4822,6],[9784,6],[9974,6],[14846,6],[15036,6]]},"644":{"position":[[5168,6],[5358,6],[10201,6],[10391,6]]},"646":{"position":[[4641,6],[4831,6],[9681,6],[9871,6]]},"648":{"position":[[4757,6],[4946,6],[10449,6],[10639,6],[15902,6],[16092,6],[21122,6],[21312,6],[26196,6],[26386,6]]},"660":{"position":[[8147,6]]},"666":{"position":[[1574,6],[3473,6],[5382,6],[7290,6],[9196,6],[11106,6]]},"668":{"position":[[4156,6],[9329,6],[9519,6],[11405,6]]},"670":{"position":[[5774,6],[5964,6],[8548,6],[11377,6]]},"672":{"position":[[7686,6]]},"692":{"position":[[4789,6],[4979,6],[9761,6],[9951,6],[15467,6],[15657,6],[21039,6],[21229,6],[26149,6],[26339,6]]},"694":{"position":[[8226,6],[8416,6],[13662,6],[13852,6]]},"696":{"position":[[7535,6],[7725,6],[14154,6],[14344,6],[19905,6],[20095,6]]},"698":{"position":[[8051,6],[8241,6],[13634,6],[13824,6]]},"718":{"position":[[6581,6],[6771,6],[11664,6],[11854,6],[17007,6],[17197,6],[22047,6],[22237,6],[27231,6],[27421,6],[34110,6],[34300,6],[39617,6],[39807,6]]},"720":{"position":[[4426,6],[4616,6],[11122,6],[11312,6]]},"722":{"position":[[12193,6],[12383,6],[18258,6],[18448,6],[24244,6],[24434,6],[29930,6],[30120,6],[35282,6],[35472,6],[40379,6],[40569,6],[45530,6],[45720,6],[50682,6],[50872,6]]},"734":{"position":[[9175,6],[9365,6]]},"740":{"position":[[4706,6],[4896,6],[9833,6],[10023,6],[15201,6],[15391,6],[20177,6],[20367,6]]},"742":{"position":[[8805,6],[8995,6],[15909,6],[16099,6],[22397,6],[22587,6],[27715,6],[27905,6]]},"744":{"position":[[6391,6],[6581,6],[13012,6],[13202,6],[19472,6],[19662,6]]},"746":{"position":[[15503,6],[15693,6]]},"767":{"position":[[8191,6],[8381,6],[16091,6],[16281,6],[22992,6],[23182,6],[29282,6],[29472,6],[34465,6],[34655,6],[39513,6],[39703,6],[44575,6],[44765,6]]},"769":{"position":[[4587,6],[4777,6],[11906,6],[12096,6],[17282,6],[17472,6],[27026,6],[27216,6],[34653,6],[34843,6],[43640,6],[43830,6]]},"786":{"position":[[6111,6],[6301,6],[11117,6],[11307,6],[16210,6],[16400,6],[21173,6],[21363,6],[26221,6],[26411,6],[33368,6],[33558,6],[38412,6],[38602,6]]},"788":{"position":[[7617,6],[7807,6],[13120,6],[13310,6]]},"790":{"position":[[4677,6],[4867,6],[10328,6],[10518,6],[15315,6],[15505,6]]},"792":{"position":[[7633,6],[7823,6],[13310,6],[13500,6],[19919,6],[20109,6]]},"809":{"position":[[6120,6],[6310,6],[11147,6],[11337,6],[16243,6],[16433,6],[21200,6],[21390,6],[26245,6],[26435,6],[32876,6],[33066,6],[37917,6],[38107,6]]},"811":{"position":[[7884,6],[8074,6],[13595,6],[13785,6]]},"813":{"position":[[7087,6],[7277,6],[12737,6],[12927,6]]},"815":{"position":[[8723,6],[8913,6],[14269,6],[14459,6],[19446,6],[19636,6],[24560,6],[24750,6],[29751,6],[29941,6],[34857,6],[35047,6]]}}}],["becam",{"_index":1058,"t":{"152":{"position":[[665,6],[747,6]]}}}],["becki",{"_index":1193,"t":{"215":{"position":[[5153,6],[5196,5]]},"221":{"position":[[11749,6]]},"290":{"position":[[147,6],[254,5],[337,5]]},"306":{"position":[[423,5],[1293,5]]},"312":{"position":[[153,5],[10914,5]]},"318":{"position":[[10932,5],[10973,5],[11052,5]]},"437":{"position":[[540,5],[625,5],[1726,5],[1976,5]]},"445":{"position":[[152,5],[10405,5]]},"449":{"position":[[57,5]]},"543":{"position":[[32,6],[60,5],[184,5]]},"545":{"position":[[23,5]]},"547":{"position":[[4969,5]]}}}],["becom",{"_index":598,"t":{"68":{"position":[[867,7],[1051,7]]},"140":{"position":[[846,7]]},"263":{"position":[[80,7]]},"269":{"position":[[294,7]]},"273":{"position":[[1421,7]]},"314":{"position":[[197,7]]},"336":{"position":[[143,7]]},"367":{"position":[[251,7]]},"401":{"position":[[2689,6]]},"405":{"position":[[1859,7],[2128,7]]},"471":{"position":[[5544,8]]},"525":{"position":[[5417,8]]},"583":{"position":[[6264,6]]},"668":{"position":[[1076,8]]},"690":{"position":[[515,7]]},"696":{"position":[[765,8]]},"742":{"position":[[1281,8],[2780,8]]},"769":{"position":[[36505,7]]}}}],["befor",{"_index":207,"t":{"16":{"position":[[3285,6],[13747,6],[15009,6],[15925,6],[19359,6],[20621,6],[21537,6],[25136,6],[26399,6],[27325,6]]},"52":{"position":[[610,6]]},"80":{"position":[[2520,6],[4309,6],[5630,6]]},"84":{"position":[[110,6]]},"96":{"position":[[0,6]]},"112":{"position":[[0,6],[1154,6],[2001,6],[2569,6]]},"124":{"position":[[0,6],[1154,6],[2001,6],[2569,6]]},"172":{"position":[[889,6],[1488,6],[2437,6],[3352,6]]},"190":{"position":[[0,6],[1154,6],[2001,6],[2569,6]]},"213":{"position":[[1535,6],[2887,6],[3768,6]]},"215":{"position":[[1588,6],[2847,6],[3760,6],[6755,6],[8016,6],[8931,6]]},"221":{"position":[[2889,6],[4144,6],[5053,6],[7950,6],[9339,6],[10257,6],[13296,6],[14555,6],[15468,6],[18321,6],[19582,6],[20497,6]]},"230":{"position":[[1797,6],[3148,6],[4028,6]]},"232":{"position":[[1632,6],[2892,6],[3806,6]]},"245":{"position":[[1878,6],[3127,6],[4030,6]]},"247":{"position":[[1552,6],[2899,6],[3775,6],[6651,6],[7901,6],[8805,6]]},"257":{"position":[[1130,6],[1977,6],[2545,6]]},"263":{"position":[[179,6]]},"269":{"position":[[553,6]]},"273":{"position":[[1520,6],[2577,6]]},"288":{"position":[[1633,6],[2976,6],[3848,6],[6539,6],[7883,6],[8756,6],[11901,6],[13521,6],[14609,6]]},"296":{"position":[[885,6]]},"306":{"position":[[0,6]]},"312":{"position":[[1728,6],[2988,6],[3902,6],[6757,6],[8016,6],[8929,6]]},"318":{"position":[[1862,6],[3273,6],[4213,6],[7332,6],[8592,6],[9506,6],[12566,6],[13826,6],[14740,6]]},"338":{"position":[[1769,6],[3036,6],[3957,6]]},"345":{"position":[[2703,6],[3960,6],[4871,6]]},"355":{"position":[[0,6]]},"369":{"position":[[1831,6],[3404,6],[4460,6],[7648,6],[8910,6],[9826,6]]},"371":{"position":[[1843,6],[3526,6],[4692,6]]},"373":{"position":[[1560,6],[2822,6],[3738,6]]},"385":{"position":[[1609,6],[2973,6],[3866,6]]},"387":{"position":[[1669,6],[2936,6],[3857,6],[6920,6],[8188,6],[9110,6]]},"415":{"position":[[971,6]]},"417":{"position":[[402,6]]},"435":{"position":[[81,6],[610,6]]},"445":{"position":[[1731,6],[2994,6],[3911,6],[6781,6],[8043,6],[8959,6]]},"449":{"position":[[1692,6],[2956,6],[3874,6],[6907,6],[8171,6],[9089,6]]},"467":{"position":[[1570,6],[2920,6],[3799,6]]},"469":{"position":[[1652,6],[3082,6],[4041,6]]},"471":{"position":[[1742,6],[3009,6],[3930,6]]},"485":{"position":[[1808,6],[3210,6],[4141,6]]},"487":{"position":[[1870,6],[3133,6],[4050,6]]},"505":{"position":[[1941,6],[3484,6],[4510,6],[7598,6],[8858,6],[9772,6],[13013,6],[14273,6],[15187,6],[18121,6],[19383,6],[20299,6],[23164,6],[24425,6],[25340,6]]},"521":{"position":[[1581,6],[2933,6],[3814,6]]},"523":{"position":[[1991,6],[3420,6],[4378,6]]},"525":{"position":[[1804,6],[3073,6],[3996,6]]},"537":{"position":[[1711,6],[3170,6],[4112,6]]},"541":{"position":[[1714,6],[3169,6],[4107,6]]},"543":{"position":[[1677,6],[3028,6],[3908,6]]},"545":{"position":[[1556,6],[2804,6],[3706,6],[6502,6],[7750,6],[8652,6]]},"547":{"position":[[1553,6],[2896,6],[3768,6],[6492,6],[7741,6],[8644,6]]},"562":{"position":[[1725,6],[2983,6],[3895,6]]},"569":{"position":[[2025,6],[3373,6],[4306,6],[7578,6],[8888,6],[9800,6],[13004,6],[14324,6],[15246,6]]},"571":{"position":[[2110,6],[3340,6],[4155,6]]},"576":{"position":[[1755,6],[3107,6],[4065,6],[7089,6],[8441,6],[9399,6]]},"583":{"position":[[1753,6],[3185,6],[4241,6]]},"605":{"position":[[2854,6],[4113,6],[5026,6],[8447,6],[9706,6],[10619,6],[14692,6],[15954,6],[16870,6],[20944,6],[22203,6],[23116,6],[26602,6],[27862,6],[28776,6]]},"607":{"position":[[2700,6],[3960,6],[4874,6],[8372,6],[9635,6],[10552,6],[14131,6],[15392,6],[16307,6],[19873,6],[21134,6],[22049,6]]},"622":{"position":[[1926,6],[3394,6],[4391,6]]},"624":{"position":[[1679,6],[2949,6],[3873,6]]},"630":{"position":[[1750,6],[3373,6],[4479,6]]},"632":{"position":[[1600,6],[2862,6],[3778,6]]},"634":{"position":[[1607,6],[3030,6],[3982,6],[6971,6],[8234,6],[9151,6],[12024,6],[13290,6],[14210,6]]},"644":{"position":[[2361,6],[3622,6],[4537,6],[7397,6],[8657,6],[9571,6]]},"646":{"position":[[1676,6],[3079,6],[4011,6],[6865,6],[8129,6],[9047,6]]},"648":{"position":[[1743,6],[3071,6],[4048,6],[7335,6],[8819,6],[9786,6],[12785,6],[14270,6],[15238,6],[16697,6],[18315,6],[19576,6],[20491,6],[23395,6],[24654,6],[25567,6]]},"658":{"position":[[880,6]]},"668":{"position":[[6313,6],[7733,6],[8682,6]]},"670":{"position":[[2674,6],[4122,6],[5099,6]]},"674":{"position":[[158,6]]},"678":{"position":[[243,6]]},"680":{"position":[[73,6]]},"692":{"position":[[236,6],[1958,6],[3316,6],[4203,6],[6918,6],[8280,6],[9171,6],[12049,6],[13666,6],[14720,6],[18232,6],[19493,6],[20408,6],[23348,6],[24607,6],[25520,6]]},"694":{"position":[[4576,6],[6302,6],[7419,6],[10846,6],[12110,6],[13028,6]]},"696":{"position":[[4367,6],[5869,6],[6854,6],[10255,6],[12064,6],[13264,6],[17107,6],[18365,6],[19277,6]]},"698":{"position":[[4624,6],[6244,6],[7301,6],[10821,6],[12084,6],[13001,6]]},"706":{"position":[[243,6]]},"708":{"position":[[73,6]]},"718":{"position":[[3574,6],[4991,6],[5937,6],[8839,6],[10106,6],[11027,6],[14000,6],[15417,6],[16363,6],[19222,6],[20489,6],[21410,6],[24385,6],[25659,6],[26587,6],[30209,6],[31988,6],[33204,6],[36792,6],[38059,6],[38980,6]]},"720":{"position":[[1616,6],[2878,6],[3794,6],[5173,7],[8315,6],[9576,6],[10491,6]]},"722":{"position":[[8544,6],[10238,6],[11369,6],[15044,6],[16530,6],[17545,6],[20825,6],[22411,6],[23480,6],[26765,6],[28266,6],[29250,6],[32361,6],[33749,6],[34666,6],[37509,6],[38880,6],[39780,6],[42729,6],[43988,6],[44901,6],[47836,6],[49110,6],[50038,6]]},"732":{"position":[[882,6]]},"734":{"position":[[4569,6],[6615,6],[8052,6]]},"740":{"position":[[1911,6],[3168,6],[4079,6],[7026,6],[8287,6],[9202,6],[12191,6],[13609,6],[14556,6],[17379,6],[18637,6],[19549,6]]},"742":{"position":[[6022,6],[7275,6],[8182,6],[11651,6],[13549,6],[14884,6],[18946,6],[20543,6],[21623,6],[24920,6],[26177,6],[27088,6]]},"744":{"position":[[2775,6],[4427,6],[5562,6],[9451,6],[11043,6],[12174,6],[15908,6],[17501,6],[18633,6]]},"746":{"position":[[6553,6],[10303,6],[13076,6]]},"750":{"position":[[277,6]]},"754":{"position":[[243,6]]},"756":{"position":[[73,6]]},"767":{"position":[[2484,6],[4961,6],[6737,6],[11980,6],[13829,6],[15115,6],[19091,6],[20870,6],[22086,6],[26478,6],[27738,6],[28652,6],[30103,6],[31658,6],[32919,6],[33834,6],[36697,6],[37961,6],[38879,6],[41756,6],[43021,6],[43940,6]]},"769":{"position":[[1780,6],[3041,6],[3956,6],[9111,6],[10368,6],[11279,6],[14460,6],[15726,6],[16646,6],[24207,6],[25472,6],[26391,6],[31861,6],[33117,6],[34027,6],[40848,6],[42104,6],[43014,6]]},"775":{"position":[[243,6]]},"777":{"position":[[73,6]]},"786":{"position":[[3277,6],[4636,6],[5524,6],[8307,6],[9569,6],[10485,6],[13376,6],[14735,6],[15623,6],[18363,6],[19625,6],[20541,6],[23408,6],[24671,6],[25588,6],[30558,6],[31820,6],[32736,6],[35602,6],[36864,6],[37780,6]]},"788":{"position":[[4025,6],[5669,6],[6796,6],[10304,6],[11568,6],[12486,6]]},"790":{"position":[[1771,6],[3154,6],[4066,6],[7327,6],[8742,6],[9686,6],[12505,6],[13767,6],[14683,6]]},"792":{"position":[[580,6],[4474,6],[5973,6],[6955,6],[10488,6],[11754,6],[12674,6],[17019,6],[18400,6],[19310,6]]},"798":{"position":[[243,6]]},"800":{"position":[[73,6]]},"809":{"position":[[3277,6],[4639,6],[5530,6],[8328,6],[9593,6],[10512,6],[13412,6],[14770,6],[15657,6],[18393,6],[19654,6],[20569,6],[23432,6],[24695,6],[25612,6],[30069,6],[31330,6],[32245,6],[35107,6],[36369,6],[37285,6]]},"811":{"position":[[3873,6],[5720,6],[6958,6],[10776,6],[12041,6],[12960,6]]},"813":{"position":[[3585,6],[5199,6],[6296,6],[9909,6],[11177,6],[12099,6]]},"815":{"position":[[4630,6],[6473,6],[7753,6],[11438,6],[12707,6],[13630,6],[16609,6],[17880,6],[18805,6],[21717,6],[22990,6],[23917,6],[26914,6],[28185,6],[29110,6],[32020,6],[33291,6],[34216,6]]}}}],["beforehand",{"_index":1454,"t":{"353":{"position":[[590,10]]},"670":{"position":[[613,10]]},"744":{"position":[[7479,10]]}}}],["begin",{"_index":515,"t":{"56":{"position":[[43,9]]},"403":{"position":[[193,9]]},"769":{"position":[[38883,9]]}}}],["behavior",{"_index":1149,"t":{"178":{"position":[[382,8]]},"415":{"position":[[678,8],[1215,8]]},"491":{"position":[[1367,9]]},"720":{"position":[[5507,9]]}}}],["behaviour",{"_index":1991,"t":{"607":{"position":[[6490,9]]}}}],["behind",{"_index":2503,"t":{"758":{"position":[[44,6]]}}}],["believ",{"_index":202,"t":{"16":{"position":[[3150,7]]},"68":{"position":[[1732,7]]},"415":{"position":[[202,7]]}}}],["belong",{"_index":1214,"t":{"219":{"position":[[697,7]]},"296":{"position":[[1267,7]]},"654":{"position":[[623,7]]},"718":{"position":[[1795,6]]},"728":{"position":[[650,7]]},"786":{"position":[[1643,6]]},"809":{"position":[[1556,6],[28333,6]]},"811":{"position":[[1869,6]]}}}],["below",{"_index":172,"t":{"16":{"position":[[797,5],[1595,5]]},"54":{"position":[[0,5]]},"60":{"position":[[278,6],[1234,5]]},"142":{"position":[[1526,5],[4173,5]]},"166":{"position":[[18,5]]},"204":{"position":[[145,6]]},"221":{"position":[[145,6]]},"238":{"position":[[145,6]]},"279":{"position":[[145,6]]},"306":{"position":[[124,6],[175,6]]},"328":{"position":[[125,6],[176,6]]},"355":{"position":[[124,6]]},"379":{"position":[[145,6]]},"423":{"position":[[344,5]]},"425":{"position":[[2683,6]]},"429":{"position":[[767,6],[1791,6]]},"437":{"position":[[145,6],[196,6]]},"455":{"position":[[145,6]]},"477":{"position":[[145,6]]},"485":{"position":[[5698,5],[6047,5]]},"493":{"position":[[145,6]]},"511":{"position":[[145,6]]},"531":{"position":[[145,6]]},"553":{"position":[[145,6]]},"593":{"position":[[125,6]]},"613":{"position":[[124,6],[175,6]]},"642":{"position":[[13,5]]},"644":{"position":[[178,6]]},"678":{"position":[[145,6]]},"682":{"position":[[106,6]]},"696":{"position":[[2799,5]]},"706":{"position":[[145,6]]},"710":{"position":[[307,6],[719,6]]},"754":{"position":[[145,6]]},"758":{"position":[[171,6],[761,5]]},"769":{"position":[[21484,5],[37584,5],[44436,6]]},"775":{"position":[[145,6]]},"779":{"position":[[138,6],[340,5]]},"798":{"position":[[145,6]]},"802":{"position":[[176,6],[384,5]]}}}],["best",{"_index":615,"t":{"74":{"position":[[917,4],[932,4],[1026,4],[1041,4]]},"130":{"position":[[48,4]]},"134":{"position":[[100,4],[125,4]]},"162":{"position":[[72,4],[97,4]]},"174":{"position":[[48,4]]},"433":{"position":[[139,4],[164,4]]},"501":{"position":[[37,4]]},"503":{"position":[[34,4]]},"638":{"position":[[141,4]]},"652":{"position":[[261,4],[286,4]]}}}],["beta",{"_index":2513,"t":{"762":{"position":[[138,4],[353,4]]},"767":{"position":[[10836,4],[12209,4],[14019,4],[15535,4],[16748,4],[18037,4],[19340,4],[21080,4],[22526,4],[23654,4]]}}}],["beth",{"_index":1463,"t":{"365":{"position":[[948,4]]},"369":{"position":[[64,5],[116,4],[1014,4],[2223,4],[3711,4],[4993,4],[5893,4]]},"405":{"position":[[1719,4],[2100,4],[2208,4],[2812,4],[2922,4],[2981,4],[3030,4],[3078,4],[3147,4],[3185,4],[3234,4],[3283,4],[3331,4]]},"605":{"position":[[6871,4],[12304,7]]},"660":{"position":[[2916,4],[3644,4],[4835,4],[6249,4],[7485,4],[9296,4]]},"662":{"position":[[376,4]]},"666":{"position":[[4013,4],[5904,4]]},"670":{"position":[[12441,4],[12470,4]]},"672":{"position":[[3183,4],[4374,4],[5788,4],[7024,4],[8835,4]]},"686":{"position":[[141,4],[269,4]]},"692":{"position":[[76,4],[26925,5],[27054,4],[27089,4],[27234,4],[27273,4],[27407,4],[27439,4]]},"694":{"position":[[39,4],[986,5],[2547,4],[14445,5],[14594,4],[14629,4],[14774,4],[14813,4],[14947,4],[14979,4]]},"696":{"position":[[20868,4],[20903,4],[21046,4],[21085,4],[21218,4],[21250,4]]},"698":{"position":[[48,4]]},"762":{"position":[[364,5],[665,4],[707,4],[762,4]]},"767":{"position":[[18136,4],[19495,4],[21189,4],[22631,4],[23757,4]]},"769":{"position":[[39055,4],[39097,4],[39152,4],[44706,4],[44736,4],[44782,4],[44815,4],[44864,4],[44891,4]]},"783":{"position":[[40,4],[482,4]]},"786":{"position":[[11877,4],[27033,4]]},"806":{"position":[[66,5],[283,4]]},"809":{"position":[[1737,4],[6774,4]]},"811":{"position":[[2788,5],[4103,5],[5911,5],[7379,5],[8585,5]]},"815":{"position":[[15027,4]]}}}],["beth'",{"_index":2166,"t":{"692":{"position":[[420,6],[10410,6]]}}}],["bethani",{"_index":2063,"t":{"646":{"position":[[138,7],[856,7],[1895,7],[3259,7],[4421,7],[5130,7],[5332,7]]}}}],["better",{"_index":502,"t":{"52":{"position":[[957,7]]},"178":{"position":[[250,6]]},"328":{"position":[[3,6]]},"397":{"position":[[1013,6]]},"415":{"position":[[260,6]]},"419":{"position":[[1991,6]]},"429":{"position":[[55,6]]},"593":{"position":[[3,6]]},"613":{"position":[[3,6]]},"740":{"position":[[21020,7]]}}}],["between",{"_index":138,"t":{"14":{"position":[[337,7]]},"16":{"position":[[94,7],[2874,7],[5356,7],[5750,7],[9227,7],[9549,7],[9695,7],[9847,7],[10127,7],[11974,7],[12189,7]]},"30":{"position":[[127,7]]},"38":{"position":[[48,7]]},"40":{"position":[[24,7],[304,7]]},"52":{"position":[[901,7]]},"80":{"position":[[7355,7]]},"142":{"position":[[151,7],[620,7]]},"200":{"position":[[363,7]]},"204":{"position":[[1332,7]]},"208":{"position":[[254,7]]},"221":{"position":[[22344,7]]},"227":{"position":[[254,7]]},"236":{"position":[[292,7],[404,7]]},"238":{"position":[[1051,7]]},"242":{"position":[[254,7]]},"245":{"position":[[277,7]]},"247":{"position":[[4998,7]]},"259":{"position":[[1045,7],[2835,7]]},"269":{"position":[[407,7]]},"279":{"position":[[1651,7]]},"285":{"position":[[254,7]]},"306":{"position":[[1961,7]]},"310":{"position":[[254,7]]},"328":{"position":[[1464,7]]},"332":{"position":[[254,7]]},"355":{"position":[[1287,7]]},"361":{"position":[[45,7]]},"377":{"position":[[302,7],[413,7]]},"379":{"position":[[1043,7]]},"381":{"position":[[254,7]]},"403":{"position":[[2735,7],[3713,7],[4397,7],[5761,7],[6041,7],[6954,7]]},"437":{"position":[[2950,7]]},"443":{"position":[[254,7]]},"453":{"position":[[59,7],[545,7]]},"455":{"position":[[1335,7]]},"459":{"position":[[254,7]]},"461":{"position":[[295,7]]},"463":{"position":[[27,7],[202,7]]},"465":{"position":[[29,7]]},"471":{"position":[[5414,7]]},"477":{"position":[[1104,7]]},"481":{"position":[[254,7]]},"493":{"position":[[1194,7],[1599,7],[1751,7],[1854,7]]},"497":{"position":[[254,7],[659,7],[811,7],[914,7]]},"511":{"position":[[1082,7]]},"515":{"position":[[254,7]]},"531":{"position":[[1035,7]]},"535":{"position":[[254,7]]},"549":{"position":[[68,7]]},"553":{"position":[[1506,7]]},"557":{"position":[[254,7]]},"593":{"position":[[623,7]]},"597":{"position":[[254,7]]},"605":{"position":[[30364,7]]},"611":{"position":[[246,7],[421,7]]},"613":{"position":[[1279,7]]},"617":{"position":[[254,7]]},"622":{"position":[[72,7]]},"640":{"position":[[327,7]]},"652":{"position":[[199,7]]},"658":{"position":[[128,7],[688,7]]},"678":{"position":[[1108,7]]},"704":{"position":[[153,7]]},"722":{"position":[[563,7],[6693,7]]},"732":{"position":[[128,7],[690,7]]},"742":{"position":[[18154,7],[19387,7],[20899,7],[22205,7],[23128,7]]},"744":{"position":[[1058,7],[1983,7],[3271,7],[4838,7],[6199,7],[7178,7]]},"754":{"position":[[347,7]]},"765":{"position":[[488,7]]},"767":{"position":[[141,7],[10088,7],[17269,7]]},"769":{"position":[[6082,7],[6348,7],[12800,7],[20576,7],[35644,7]]},"771":{"position":[[488,7]]},"773":{"position":[[246,7]]},"775":{"position":[[516,7]]},"796":{"position":[[128,7]]},"798":{"position":[[516,7]]},"813":{"position":[[31,7]]}}}],["beyond",{"_index":1545,"t":{"397":{"position":[[2646,6]]},"399":{"position":[[1686,6],[3528,6]]},"401":{"position":[[2018,6]]},"403":{"position":[[1003,6]]}}}],["bill",{"_index":2686,"t":{"794":{"position":[[64,7]]}}}],["bit",{"_index":583,"t":{"68":{"position":[[113,3]]},"142":{"position":[[641,3]]}}}],["block",{"_index":239,"t":{"16":{"position":[[4412,6],[5128,6],[7436,6]]},"54":{"position":[[87,6]]},"56":{"position":[[2547,7]]},"58":{"position":[[2149,7]]},"62":{"position":[[1538,7]]},"66":{"position":[[232,5],[308,7],[476,9],[867,7],[991,10],[1306,9],[1356,8],[1767,7],[1837,10]]},"142":{"position":[[1537,5],[4184,5]]},"296":{"position":[[596,5],[667,7],[1329,6],[1375,6]]},"304":{"position":[[106,8],[397,5],[541,10],[581,8]]},"312":{"position":[[10471,8],[10643,7],[10725,7],[10822,7],[10870,8]]},"314":{"position":[[21,9],[134,7],[278,8],[476,10],[560,10],[984,7]]},"316":{"position":[[30,7],[128,8],[263,7],[365,8],[423,7],[579,10],[705,9],[755,10]]},"318":{"position":[[77,7],[205,7],[309,7],[1042,7],[1116,10],[2089,7],[3461,7],[3543,10],[4631,7],[5347,7],[5535,8],[5673,8],[16223,8]]},"322":{"position":[[45,6],[191,6]]},"451":{"position":[[182,5]]},"489":{"position":[[255,5]]},"771":{"position":[[612,5]]}}}],["block_list",{"_index":1176,"t":{"202":{"position":[[360,10]]},"509":{"position":[[378,10]]}}}],["blocklist",{"_index":581,"t":{"66":{"position":[[1077,11]]},"451":{"position":[[148,10]]},"489":{"position":[[226,10]]}}}],["blog",{"_index":1462,"t":{"365":{"position":[[596,4],[687,4]]},"475":{"position":[[438,4]]},"794":{"position":[[181,4]]}}}],["blue",{"_index":1550,"t":{"399":{"position":[[472,5]]}}}],["bob",{"_index":1415,"t":{"328":{"position":[[337,3]]},"338":{"position":[[54,3],[113,3],[195,3]]},"385":{"position":[[49,3]]},"387":{"position":[[121,3],[5285,3]]},"419":{"position":[[1133,3]]},"421":{"position":[[109,5],[158,6],[284,6]]},"461":{"position":[[452,3],[507,3],[607,3],[759,3]]},"467":{"position":[[88,3]]},"469":{"position":[[9,3]]},"471":{"position":[[195,3],[5422,3],[5553,3],[5744,3]]},"485":{"position":[[5757,3]]},"487":{"position":[[60,3],[181,3]]},"505":{"position":[[263,3],[1041,3],[2164,3],[3668,3],[4924,3],[5778,3],[6058,3],[11133,3],[11203,3],[11436,3]]},"553":{"position":[[300,3],[902,3]]},"562":{"position":[[178,3],[5355,3]]},"569":{"position":[[434,3],[5960,3]]},"571":{"position":[[544,3],[617,3],[5329,3],[5500,3]]},"576":{"position":[[143,3],[10945,3]]},"714":{"position":[[140,3],[331,3],[734,3]]},"716":{"position":[[665,3]]},"718":{"position":[[290,3],[28058,3],[29125,3],[30428,3],[32168,3],[33614,3],[34754,3]]},"722":{"position":[[622,3],[706,3],[847,4],[1100,3],[25175,3]]}}}],["bodi",{"_index":373,"t":{"16":{"position":[[13874,4],[16306,4],[19486,4],[21918,4],[25263,4],[26494,4],[27712,4]]},"80":{"position":[[3113,4],[3220,7],[4840,4]]},"86":{"position":[[2169,4]]},"98":{"position":[[4913,4]]},"114":{"position":[[320,4],[1102,4]]},"126":{"position":[[330,4],[659,4],[1149,4]]},"192":{"position":[[263,4],[1079,4]]},"194":{"position":[[420,4],[1238,4]]},"213":{"position":[[1662,4],[4114,4]]},"215":{"position":[[1715,4],[4141,4],[6882,4],[9312,4]]},"221":{"position":[[3016,4],[5434,4],[8077,4],[10603,4],[13423,4],[15849,4],[18448,4],[20878,4]]},"230":{"position":[[1924,4],[4374,4]]},"232":{"position":[[1759,4],[4187,4]]},"245":{"position":[[2005,4],[4411,4]]},"247":{"position":[[1679,4],[4121,4],[6778,4],[9186,4]]},"288":{"position":[[1760,4],[4194,4],[6666,4],[9102,4],[12028,4],[14955,4]]},"312":{"position":[[1855,4],[4283,4],[6884,4],[9310,4]]},"318":{"position":[[1989,4],[4559,4],[7459,4],[9887,4],[12693,4],[15121,4]]},"338":{"position":[[1896,4],[4338,4]]},"345":{"position":[[2830,4],[5252,4]]},"369":{"position":[[1958,4],[4806,4],[7775,4],[10207,4]]},"371":{"position":[[1970,4],[5038,4]]},"373":{"position":[[1687,4],[4119,4]]},"385":{"position":[[1736,4],[4212,4]]},"387":{"position":[[1796,4],[4238,4],[7047,4],[9491,4]]},"429":{"position":[[2062,4],[2912,4]]},"445":{"position":[[1858,4],[4292,4],[6908,4],[9340,4]]},"449":{"position":[[1819,4],[4255,4],[7034,4],[9470,4]]},"467":{"position":[[1697,4],[4145,4]]},"469":{"position":[[1779,4],[4387,4]]},"471":{"position":[[1869,4],[4311,4]]},"485":{"position":[[1935,4],[4487,4]]},"487":{"position":[[1997,4],[4431,4]]},"505":{"position":[[2068,4],[4856,4],[7725,4],[10153,4],[13140,4],[15568,4],[18248,4],[20680,4],[23291,4],[25721,4]]},"521":{"position":[[1708,4],[4160,4]]},"523":{"position":[[2118,4],[4724,4]]},"525":{"position":[[1931,4],[4377,4]]},"537":{"position":[[1838,4],[4458,4]]},"541":{"position":[[1841,4],[4453,4]]},"543":{"position":[[1804,4],[4254,4]]},"545":{"position":[[1683,4],[4087,4],[6629,4],[9033,4]]},"547":{"position":[[1680,4],[4114,4],[6619,4],[9025,4]]},"562":{"position":[[1852,4],[4276,4]]},"569":{"position":[[2152,4],[4655,4],[7705,4],[10149,4],[13131,4],[15595,4]]},"571":{"position":[[2237,4],[4504,4]]},"576":{"position":[[1882,4],[4424,4],[7216,4],[9758,4]]},"583":{"position":[[1880,4],[3280,4],[4628,4]]},"605":{"position":[[2981,4],[5407,4],[8574,4],[11000,4],[14819,4],[17251,4],[21071,4],[23497,4],[26729,4],[29157,4]]},"607":{"position":[[2827,4],[5255,4],[8499,4],[10933,4],[14258,4],[16688,4],[20000,4],[22430,4]]},"622":{"position":[[2053,4],[4737,4]]},"624":{"position":[[1806,4],[4254,4]]},"630":{"position":[[1877,4],[4825,4]]},"632":{"position":[[1727,4],[4159,4]]},"634":{"position":[[1734,4],[4328,4],[7098,4],[9532,4],[12151,4],[14591,4]]},"644":{"position":[[2488,4],[4918,4],[7524,4],[9952,4]]},"646":{"position":[[1803,4],[4357,4],[6992,4],[9428,4]]},"648":{"position":[[1870,4],[4397,4],[7462,4],[10132,4],[12912,4],[15584,4],[18442,4],[20872,4],[23522,4],[25948,4]]},"660":{"position":[[4179,4],[7007,4]]},"666":{"position":[[482,4],[1266,4],[2375,4],[3163,4],[4290,4],[5074,4],[6189,4],[6979,4],[8101,4],[8887,4],[10005,4],[10795,4]]},"668":{"position":[[3061,4],[3847,4],[6440,4],[9028,4],[10313,4],[11097,4]]},"670":{"position":[[2801,4],[5445,4],[6960,4],[8102,4],[9786,4],[10930,4]]},"672":{"position":[[3718,4],[6546,4]]},"692":{"position":[[2085,4],[4549,4],[7045,4],[9517,4],[12176,4],[15066,4],[18359,4],[20789,4],[23475,4],[25901,4]]},"694":{"position":[[4703,4],[7765,4],[10973,4],[13409,4]]},"696":{"position":[[4494,4],[7200,4],[10382,4],[13610,4],[17234,4],[19658,4]]},"698":{"position":[[4751,4],[7647,4],[10948,4],[13382,4]]},"718":{"position":[[3701,4],[6283,4],[8966,4],[11408,4],[14127,4],[16709,4],[19349,4],[21791,4],[24512,4],[26968,4],[30336,4],[33550,4],[36919,4],[39361,4]]},"720":{"position":[[1743,4],[4175,4],[8442,4],[10872,4]]},"722":{"position":[[8671,4],[11715,4],[15171,4],[17891,4],[20952,4],[23826,4],[26892,4],[29596,4],[32488,4],[35012,4],[37636,4],[40126,4],[42856,4],[45282,4],[47963,4],[50419,4]]},"734":{"position":[[4696,4],[8398,4]]},"740":{"position":[[2038,4],[4460,4],[7153,4],[9583,4],[12318,4],[14902,4],[17506,4],[19930,4]]},"742":{"position":[[6149,4],[8563,4],[11778,4],[15230,4],[19073,4],[21969,4],[25047,4],[27469,4]]},"744":{"position":[[2902,4],[5908,4],[9578,4],[12555,4],[16035,4],[19014,4]]},"746":{"position":[[6680,4],[13422,4]]},"767":{"position":[[2611,4],[7083,4],[12107,4],[15461,4],[19218,4],[22432,4],[26605,4],[29033,4],[31785,4],[34215,4],[36824,4],[39260,4],[41883,4],[44321,4]]},"769":{"position":[[1907,4],[4337,4],[9238,4],[11660,4],[14587,4],[17027,4],[24334,4],[26772,4],[31988,4],[34408,4],[40975,4],[43395,4]]},"786":{"position":[[3404,4],[5870,4],[8434,4],[10866,4],[13503,4],[15969,4],[18490,4],[20922,4],[23535,4],[25969,4],[30685,4],[33117,4],[35729,4],[38161,4]]},"788":{"position":[[4152,4],[7142,4],[10431,4],[12867,4]]},"790":{"position":[[1898,4],[4412,4],[7454,4],[10032,4],[12632,4],[15064,4]]},"792":{"position":[[4601,4],[7301,4],[10615,4],[13055,4],[17146,4],[19656,4]]},"809":{"position":[[3404,4],[5876,4],[8455,4],[10893,4],[13539,4],[16003,4],[18520,4],[20950,4],[23559,4],[25993,4],[30196,4],[32626,4],[35234,4],[37666,4]]},"811":{"position":[[4000,4],[7304,4],[10903,4],[13341,4]]},"813":{"position":[[3712,4],[6642,4],[10036,4],[12480,4]]},"815":{"position":[[4757,4],[8099,4],[11565,4],[14011,4],[16736,4],[19186,4],[21844,4],[24298,4],[27041,4],[29491,4],[32147,4],[34597,4]]}}}],["body_str",{"_index":641,"t":{"80":{"position":[[5928,11]]}}}],["book",{"_index":1792,"t":{"491":{"position":[[456,8],[517,8],[1594,8]]},"499":{"position":[[76,7],[187,8],[217,8],[339,7],[437,8]]},"503":{"position":[[432,9],[637,8],[689,9]]},"505":{"position":[[72,8],[6078,8],[11462,8],[16599,8]]},"611":{"position":[[582,5],[603,8]]}}}],["booking_add",{"_index":1803,"t":{"491":{"position":[[1462,16]]},"503":{"position":[[848,14],[1061,16],[1489,13]]},"505":{"position":[[12304,16],[13295,16],[14493,16],[16373,16],[16400,15],[22456,16],[23448,16],[24647,16],[26532,16],[26559,15],[26735,13],[26989,13],[27065,14]]}}}],["booking_view",{"_index":1808,"t":{"503":{"position":[[876,15],[1126,17],[1470,14]]},"505":{"position":[[6889,17],[7880,17],[9078,17],[10958,17],[10986,16],[11142,14],[11309,14],[11404,15],[17412,17],[18405,17],[19605,17],[21493,17],[21521,16],[26716,14],[26901,14],[27045,15]]}}}],["bookshelf",{"_index":2006,"t":{"611":{"position":[[563,9]]}}}],["bootstrap",{"_index":874,"t":{"132":{"position":[[260,12]]}}}],["both",{"_index":112,"t":{"10":{"position":[[327,4]]},"58":{"position":[[859,4],[1243,4]]},"64":{"position":[[1290,4]]},"66":{"position":[[1334,4]]},"130":{"position":[[168,4]]},"288":{"position":[[10116,4]]},"334":{"position":[[210,4]]},"403":{"position":[[8025,4]]},"435":{"position":[[214,4]]},"437":{"position":[[640,4]]},"447":{"position":[[96,4]]},"503":{"position":[[1465,4]]},"601":{"position":[[1275,4]]},"611":{"position":[[298,4]]},"668":{"position":[[213,4],[969,4]]},"678":{"position":[[608,4]]},"698":{"position":[[192,4]]},"702":{"position":[[290,4]]}}}],["bound",{"_index":473,"t":{"16":{"position":[[29493,5],[29532,5]]},"48":{"position":[[17,5]]},"56":{"position":[[1710,5]]},"60":{"position":[[3118,5]]},"429":{"position":[[395,5]]},"471":{"position":[[6125,5]]},"475":{"position":[[109,5],[280,5]]},"477":{"position":[[1436,5]]},"481":{"position":[[586,5]]},"485":{"position":[[65,5],[95,5],[5477,5]]},"599":{"position":[[408,5]]},"605":{"position":[[1027,5],[6624,5]]},"796":{"position":[[857,5]]},"815":{"position":[[381,5]]}}}],["branch",{"_index":1733,"t":{"431":{"position":[[1181,9]]},"734":{"position":[[309,6],[563,6],[641,7],[649,8],[703,6],[970,9],[1181,9],[1288,8],[1683,9],[1738,8],[2240,6],[2318,6],[2332,6],[3319,6],[3562,6],[3576,6],[3678,9],[4833,6],[5188,6],[5202,6],[6840,6],[7103,6],[7117,6],[7227,9],[8507,6],[8762,6],[8776,6],[9952,6],[10203,6],[10217,6]]},"736":{"position":[[75,7]]},"738":{"position":[[303,6]]},"740":{"position":[[262,6],[411,7],[10640,6],[11400,6],[12454,6],[13833,6],[15010,6],[15740,6]]},"742":{"position":[[777,8],[911,6],[1046,6],[1253,6],[1304,6],[1545,9],[2498,6],[2716,6],[2828,7],[2836,8],[2890,6],[2994,6],[3111,9],[3218,8],[3521,8],[3902,9],[3957,8],[10505,6],[10657,6],[10831,6],[11927,6],[12135,6],[12365,6],[13786,6],[13948,6],[14132,6],[15351,6],[15509,6],[15689,6],[16660,6],[16816,6],[16994,6]]},"746":{"position":[[106,6],[367,7],[375,8],[429,6],[533,6],[879,9],[1713,9],[1820,8],[2123,8],[2504,9],[2559,8],[4047,6],[4290,6],[4304,6],[4406,9],[4650,6],[4800,6],[4952,6],[5105,6],[5257,6],[5408,6],[5559,6],[5733,6],[6817,6],[7172,6],[7186,6],[7644,6],[7850,6],[8058,6],[8267,6],[8475,6],[8682,6],[8889,6],[9119,6],[10528,6],[10791,6],[10805,6],[10915,9],[11171,6],[11331,6],[11493,6],[11656,6],[11818,6],[11979,6],[12140,6],[12324,6],[13531,6],[13786,6],[13800,6],[14158,6],[14314,6],[14472,6],[14631,6],[14789,6],[14946,6],[15103,6],[15283,6],[16979,6],[17230,6],[17244,6],[17598,6],[17752,6],[17908,6],[18065,6],[18221,6],[18376,6],[18531,6],[18709,6]]},"748":{"position":[[299,6],[580,7],[588,8],[642,6],[746,6],[1255,9],[2180,9],[2287,8],[2590,8],[2971,9],[3026,8]]}}}],["branch'",{"_index":2347,"t":{"734":{"position":[[360,8],[401,8],[447,8]]}}}],["branch:east",{"_index":2403,"t":{"740":{"position":[[11465,12],[13907,12]]}}}],["branch:west",{"_index":2356,"t":{"734":{"position":[[3384,12],[3648,12],[6914,12],[7196,12]]},"742":{"position":[[10577,12],[10729,12],[10925,12],[13867,12],[14029,12],[14235,12]]},"746":{"position":[[4112,12],[4376,12],[4720,12],[4871,12],[5024,12],[5177,12],[5329,12],[5480,12],[5631,12],[5827,12],[10602,12],[10884,12],[11250,12],[11411,12],[11574,12],[11737,12],[11899,12],[12060,12],[12221,12],[12427,12]]}}}],["branch‚Äô",{"_index":2352,"t":{"734":{"position":[[2485,8]]}}}],["break",{"_index":795,"t":{"98":{"position":[[448,6],[497,6],[556,6]]},"491":{"position":[[1066,8]]},"664":{"position":[[54,5]]},"738":{"position":[[54,5]]}}}],["breviti",{"_index":1578,"t":{"401":{"position":[[2755,8]]},"710":{"position":[[595,8]]},"758":{"position":[[633,8]]},"779":{"position":[[211,8]]},"802":{"position":[[249,8]]}}}],["bring",{"_index":2251,"t":{"710":{"position":[[94,8]]},"769":{"position":[[20294,6]]}}}],["browser",{"_index":2139,"t":{"670":{"position":[[274,7]]}}}],["budget",{"_index":1434,"t":{"345":{"position":[[733,6]]},"622":{"position":[[1129,9],[2233,9],[3662,9],[4889,9],[5672,9]]},"806":{"position":[[224,6],[399,6]]},"809":{"position":[[1774,6],[2562,8],[3611,9],[4892,7],[6000,8],[6531,9],[6680,7],[6819,8],[7651,8],[8647,8],[9851,7],[10996,8],[11599,10],[11778,8],[11821,7],[12697,8],[13742,9],[15019,7],[16123,8],[16650,9],[16795,7],[17716,8],[18708,8],[19908,7],[21049,8],[21648,10],[21819,8],[21862,7],[22754,8],[23748,8],[24950,7],[26093,8],[26694,10],[26868,8],[26911,7],[29392,8],[30384,8],[31584,7],[32725,8],[33324,10],[33495,8],[33538,7],[34430,8],[35423,8],[36624,7],[37766,8],[38366,10],[38539,8],[38582,7]]},"811":{"position":[[2087,7],[3079,6],[3158,8],[4562,6],[4692,9],[6232,6],[6320,7],[7690,6],[7764,8],[8492,9],[8888,6],[8970,7],[10099,8],[11095,8],[12299,7],[13444,8],[14047,10],[14226,8],[14269,7]]},"813":{"position":[[2786,6],[2870,8],[4036,6],[4171,9],[5565,6],[5658,7],[6888,6],[6967,8],[7584,9],[7846,6],[7933,7],[9227,8],[10226,8],[11433,7],[12581,8],[13187,10],[13367,8],[13410,7],[14359,6],[14419,8]]}}}],["build",{"_index":238,"t":{"16":{"position":[[4403,8],[5119,8],[7427,8]]},"52":{"position":[[48,5]]},"54":{"position":[[78,8]]},"56":{"position":[[2538,8]]},"58":{"position":[[2140,8]]},"62":{"position":[[1529,8]]},"98":{"position":[[4840,5]]},"168":{"position":[[29,5],[246,5]]},"172":{"position":[[130,8],[171,8]]},"269":{"position":[[384,5]]},"296":{"position":[[1320,8],[1402,5]]},"298":{"position":[[210,5]]},"304":{"position":[[232,8]]},"322":{"position":[[36,8],[182,8],[218,5]]},"349":{"position":[[998,8]]},"353":{"position":[[704,8]]},"399":{"position":[[4223,8]]},"401":{"position":[[3345,8]]},"574":{"position":[[177,5]]},"611":{"position":[[645,9]]},"660":{"position":[[95,8]]},"672":{"position":[[9595,5]]},"682":{"position":[[27,5]]},"710":{"position":[[252,5]]},"724":{"position":[[255,5]]},"734":{"position":[[95,8]]},"746":{"position":[[19098,5]]},"758":{"position":[[94,5]]},"779":{"position":[[82,5]]},"802":{"position":[[114,5]]}}}],["built",{"_index":1515,"t":{"391":{"position":[[260,5]]},"700":{"position":[[178,5]]},"724":{"position":[[449,5]]},"771":{"position":[[760,5]]}}}],["bulk",{"_index":1427,"t":{"343":{"position":[[379,5]]}}}],["busi",{"_index":1448,"t":{"353":{"position":[[98,8],[110,8]]},"710":{"position":[[29,10]]}}}],["button",{"_index":1617,"t":{"403":{"position":[[10642,6]]}}}],["c",{"_index":556,"t":{"60":{"position":[[2777,1],[2823,1]]},"273":{"position":[[987,2]]},"275":{"position":[[302,1]]},"312":{"position":[[10911,2]]},"318":{"position":[[10929,2]]},"660":{"position":[[2914,1],[3014,1],[3562,1],[3826,1],[4697,1],[5073,1],[6157,1],[6441,1],[7397,1],[7673,1],[9210,1],[9482,1]]},"662":{"position":[[265,2]]},"666":{"position":[[11764,2]]},"670":{"position":[[9375,2],[12339,1],[12429,1],[12518,1],[12546,1]]},"672":{"position":[[3101,1],[3365,1],[4236,1],[4612,1],[5696,1],[5980,1],[6936,1],[7212,1],[8749,1],[9021,1]]}}}],["c.locals(\"object",{"_index":816,"t":{"98":{"position":[[4325,18]]}}}],["c.locals(\"rel",{"_index":814,"t":{"98":{"position":[[4102,20],[4146,20],[4192,20],[4231,20]]}}}],["c.locals(\"user\").(*jwt.token",{"_index":781,"t":{"96":{"position":[[2397,29]]},"98":{"position":[[3676,29],[3916,29]]}}}],["c.locals(\"usernam",{"_index":812,"t":{"98":{"position":[[4016,20]]}}}],["c.method",{"_index":813,"t":{"98":{"position":[[4075,12]]}}}],["c.next",{"_index":817,"t":{"98":{"position":[[4387,8],[5478,8]]}}}],["c.params(\"docu",{"_index":786,"t":{"96":{"position":[[2535,21]]},"98":{"position":[[3814,21],[4358,21]]}}}],["c.sendstring(c.params(\"docu",{"_index":723,"t":{"94":{"position":[[1562,34]]}}}],["c.sendstring(nam",{"_index":785,"t":{"96":{"position":[[2504,17]]},"98":{"position":[[3783,17]]}}}],["c571",{"_index":2582,"t":{"767":{"position":[[24645,4]]}}}],["cab",{"_index":1786,"t":{"487":{"position":[[64,3]]}}}],["call",{"_index":250,"t":{"16":{"position":[[4898,6],[13754,7],[15016,7],[15932,7],[17341,4],[17556,7],[19366,7],[20628,7],[21544,7],[23068,4],[23315,7],[25143,7],[26406,7],[27332,7]]},"42":{"position":[[21,4]]},"44":{"position":[[28,4]]},"52":{"position":[[745,7]]},"54":{"position":[[3829,6]]},"60":{"position":[[3028,6],[3274,4]]},"80":{"position":[[2527,7],[4316,7],[5637,7]]},"86":{"position":[[2337,7]]},"96":{"position":[[14,4]]},"98":{"position":[[182,4],[697,6],[2622,4],[2662,4]]},"112":{"position":[[7,7],[1161,7],[2008,7],[2576,7]]},"124":{"position":[[7,7],[1161,7],[2008,7],[2576,7]]},"144":{"position":[[284,7]]},"172":{"position":[[896,7],[1495,7],[2444,7],[3359,7]]},"178":{"position":[[213,5]]},"190":{"position":[[7,7],[1161,7],[2008,7],[2576,7]]},"196":{"position":[[351,5]]},"213":{"position":[[1542,7],[2894,7],[3775,7]]},"215":{"position":[[7,4],[1595,7],[2854,7],[3767,7],[6762,7],[8023,7],[8938,7]]},"221":{"position":[[900,6],[932,6],[1349,6],[2896,7],[4151,7],[5060,7],[7957,7],[9346,7],[10264,7],[11598,6],[11742,6],[13303,7],[14562,7],[15475,7],[18328,7],[19589,7],[20504,7]]},"230":{"position":[[1804,7],[3155,7],[4035,7]]},"232":{"position":[[1639,7],[2899,7],[3813,7]]},"238":{"position":[[224,6]]},"245":{"position":[[311,4],[1885,7],[3134,7],[4037,7]]},"247":{"position":[[1559,7],[2906,7],[3782,7],[5107,4],[6658,7],[7908,7],[8812,7]]},"251":{"position":[[32,4]]},"255":{"position":[[114,7]]},"257":{"position":[[1137,7],[1984,7],[2552,7]]},"259":{"position":[[1053,5]]},"261":{"position":[[1031,4],[1905,6]]},"267":{"position":[[17,4],[80,4]]},"269":{"position":[[120,4],[503,4]]},"271":{"position":[[0,4],[143,4]]},"279":{"position":[[224,6],[283,6]]},"288":{"position":[[70,7],[1640,7],[2983,7],[3855,7],[6546,7],[7890,7],[8763,7],[10191,4],[11908,7],[13528,7],[14616,7]]},"290":{"position":[[462,6],[660,4]]},"306":{"position":[[347,6]]},"312":{"position":[[127,6],[1735,7],[2995,7],[3909,7],[6764,7],[8023,7],[8936,7]]},"318":{"position":[[1869,7],[3280,7],[4220,7],[7339,7],[8599,7],[9513,7],[12573,7],[13833,7],[14747,7]]},"328":{"position":[[306,6]]},"338":{"position":[[1776,7],[3043,7],[3964,7]]},"345":{"position":[[964,4],[2710,7],[3967,7],[4878,7]]},"347":{"position":[[777,4]]},"355":{"position":[[202,6]]},"357":{"position":[[56,6]]},"365":{"position":[[328,6],[356,6]]},"367":{"position":[[168,6]]},"369":{"position":[[1838,7],[3411,7],[4467,7],[7655,7],[8917,7],[9833,7]]},"371":{"position":[[1850,7],[3533,7],[4699,7]]},"373":{"position":[[1567,7],[2829,7],[3745,7]]},"379":{"position":[[224,6]]},"385":{"position":[[1616,7],[2980,7],[3873,7]]},"387":{"position":[[1676,7],[2943,7],[3864,7],[6927,7],[8195,7],[9117,7]]},"393":{"position":[[266,5]]},"423":{"position":[[647,5]]},"425":{"position":[[2108,4]]},"429":{"position":[[264,6],[633,6]]},"437":{"position":[[491,6]]},"445":{"position":[[126,6],[1738,7],[3001,7],[3918,7],[6788,7],[8050,7],[8966,7]]},"449":{"position":[[1699,7],[2963,7],[3881,7],[6914,7],[8178,7],[9096,7]]},"467":{"position":[[1577,7],[2927,7],[3806,7]]},"469":{"position":[[1659,7],[3089,7],[4048,7]]},"471":{"position":[[1749,7],[3016,7],[3937,7],[5889,6]]},"477":{"position":[[224,6]]},"485":{"position":[[1815,7],[3217,7],[4148,7]]},"487":{"position":[[1877,7],[3140,7],[4057,7]]},"493":{"position":[[224,6],[1556,6]]},"497":{"position":[[616,6]]},"505":{"position":[[1948,7],[3491,7],[4517,7],[7605,7],[8865,7],[9779,7],[13020,7],[14280,7],[15194,7],[18128,7],[19390,7],[20306,7],[23171,7],[24432,7],[25347,7]]},"511":{"position":[[227,6]]},"521":{"position":[[1588,7],[2940,7],[3821,7]]},"523":{"position":[[1998,7],[3427,7],[4385,7]]},"525":{"position":[[1811,7],[3080,7],[4003,7]]},"537":{"position":[[1718,7],[3177,7],[4119,7]]},"541":{"position":[[1721,7],[3176,7],[4114,7]]},"543":{"position":[[1684,7],[3035,7],[3915,7]]},"545":{"position":[[1563,7],[2811,7],[3713,7],[6509,7],[7757,7],[8659,7]]},"547":{"position":[[1560,7],[2903,7],[3775,7],[6499,7],[7748,7],[8651,7]]},"553":{"position":[[224,6]]},"562":{"position":[[13,6],[146,4],[1732,7],[2990,7],[3902,7]]},"569":{"position":[[12,6],[2032,7],[3380,7],[4313,7],[6048,5],[7585,7],[8895,7],[9807,7],[11464,5],[13011,7],[14331,7],[15253,7]]},"571":{"position":[[2117,7],[3347,7],[4162,7]]},"574":{"position":[[239,4],[299,5]]},"576":{"position":[[218,4],[1762,7],[3114,7],[4072,7],[5351,4],[5552,4],[7096,7],[8448,7],[9406,7],[10685,4]]},"578":{"position":[[11,4],[311,4]]},"583":{"position":[[1760,7],[3192,7],[4248,7]]},"605":{"position":[[2861,7],[4120,7],[5033,7],[8454,7],[9713,7],[10626,7],[14699,7],[15961,7],[16877,7],[20951,7],[22210,7],[23123,7],[26609,7],[27869,7],[28783,7]]},"607":{"position":[[2707,7],[3967,7],[4881,7],[8379,7],[9642,7],[10559,7],[14138,7],[15399,7],[16314,7],[19880,7],[21141,7],[22056,7]]},"622":{"position":[[1933,7],[3401,7],[4398,7]]},"624":{"position":[[1686,7],[2956,7],[3880,7]]},"630":{"position":[[1757,7],[3380,7],[4486,7]]},"632":{"position":[[1607,7],[2869,7],[3785,7]]},"634":{"position":[[1614,7],[3037,7],[3989,7],[6978,7],[8241,7],[9158,7],[12031,7],[13297,7],[14217,7]]},"644":{"position":[[2368,7],[3629,7],[4544,7],[7404,7],[8664,7],[9578,7]]},"646":{"position":[[1683,7],[3086,7],[4018,7],[6872,7],[8136,7],[9054,7]]},"648":{"position":[[1750,7],[3078,7],[4055,7],[7342,7],[8826,7],[9793,7],[12792,7],[14277,7],[15245,7],[18322,7],[19583,7],[20498,7],[23402,7],[24661,7],[25574,7]]},"654":{"position":[[484,4]]},"658":{"position":[[233,4]]},"668":{"position":[[6320,7],[7740,7],[8689,7]]},"670":{"position":[[469,6],[498,6],[793,5],[2681,7],[4129,7],[5106,7]]},"692":{"position":[[1965,7],[3323,7],[4210,7],[6925,7],[8287,7],[9178,7],[12056,7],[13673,7],[14727,7],[18239,7],[19500,7],[20415,7],[23355,7],[24614,7],[25527,7]]},"694":{"position":[[4583,7],[6309,7],[7426,7],[10853,7],[12117,7],[13035,7]]},"696":{"position":[[4374,7],[5876,7],[6861,7],[10262,7],[12071,7],[13271,7],[17114,7],[18372,7],[19284,7]]},"698":{"position":[[4631,7],[6251,7],[7308,7],[10828,7],[12091,7],[13008,7]]},"702":{"position":[[253,6]]},"714":{"position":[[263,6]]},"716":{"position":[[893,6]]},"718":{"position":[[3581,7],[4998,7],[5944,7],[8846,7],[10113,7],[11034,7],[14007,7],[15424,7],[16370,7],[19229,7],[20496,7],[21417,7],[24392,7],[25666,7],[26594,7],[30216,7],[31995,7],[33211,7],[36799,7],[38066,7],[38987,7]]},"720":{"position":[[1623,7],[2885,7],[3801,7],[8322,7],[9583,7],[10498,7]]},"722":{"position":[[8551,7],[10245,7],[11376,7],[15051,7],[16537,7],[17552,7],[20832,7],[22418,7],[23487,7],[26772,7],[28273,7],[29257,7],[32368,7],[33756,7],[34673,7],[37516,7],[38887,7],[39787,7],[42736,7],[43995,7],[44908,7],[47843,7],[49117,7],[50045,7]]},"728":{"position":[[511,4]]},"732":{"position":[[234,4]]},"734":{"position":[[2449,4],[4576,7],[6622,7],[8059,7]]},"740":{"position":[[1918,7],[3175,7],[4086,7],[7033,7],[8294,7],[9209,7],[12198,7],[13616,7],[14563,7],[17386,7],[18644,7],[19556,7]]},"742":{"position":[[6029,7],[7282,7],[8189,7],[11658,7],[13556,7],[14891,7],[18953,7],[20550,7],[21630,7],[24927,7],[26184,7],[27095,7]]},"744":{"position":[[528,4],[581,4],[2782,7],[4434,7],[5569,7],[7335,6],[7364,6],[7659,5],[9458,7],[11050,7],[12181,7],[15915,7],[17508,7],[18640,7]]},"746":{"position":[[6560,7],[10310,7],[13083,7]]},"758":{"position":[[378,6]]},"765":{"position":[[470,4]]},"767":{"position":[[2491,7],[4968,7],[6744,7],[11987,7],[13836,7],[15122,7],[19098,7],[20877,7],[22093,7],[26485,7],[27745,7],[28659,7],[31665,7],[32926,7],[33841,7],[36704,7],[37968,7],[38886,7],[41763,7],[43028,7],[43947,7]]},"769":{"position":[[1787,7],[3048,7],[3963,7],[9118,7],[10375,7],[11286,7],[14467,7],[15733,7],[16653,7],[24214,7],[25479,7],[26398,7],[31868,7],[33124,7],[34034,7],[40855,7],[42111,7],[43021,7]]},"786":{"position":[[3284,7],[4643,7],[5531,7],[8314,7],[9576,7],[10492,7],[13383,7],[14742,7],[15630,7],[18370,7],[19632,7],[20548,7],[23415,7],[24678,7],[25595,7],[30565,7],[31827,7],[32743,7],[35609,7],[36871,7],[37787,7]]},"788":{"position":[[4032,7],[5676,7],[6803,7],[10311,7],[11575,7],[12493,7]]},"790":{"position":[[1778,7],[3161,7],[4073,7],[7334,7],[8749,7],[9693,7],[12512,7],[13774,7],[14690,7]]},"792":{"position":[[567,7],[4481,7],[5980,7],[6962,7],[10495,7],[11761,7],[12681,7],[17026,7],[18407,7],[19317,7]]},"809":{"position":[[3284,7],[4646,7],[5537,7],[8335,7],[9600,7],[10519,7],[13419,7],[14777,7],[15664,7],[18400,7],[19661,7],[20576,7],[23439,7],[24702,7],[25619,7],[30076,7],[31337,7],[32252,7],[35114,7],[36376,7],[37292,7]]},"811":{"position":[[3880,7],[5727,7],[6965,7],[10783,7],[12048,7],[12967,7]]},"813":{"position":[[3592,7],[5206,7],[6303,7],[9916,7],[11184,7],[12106,7]]},"815":{"position":[[4637,7],[6480,7],[7760,7],[11445,7],[12714,7],[13637,7],[16616,7],[17887,7],[18812,7],[21724,7],[22997,7],[23924,7],[26921,7],[28192,7],[29117,7],[32027,7],[33298,7],[34223,7]]}}}],["camelcas",{"_index":588,"t":{"68":{"position":[[170,10]]}}}],["camera",{"_index":829,"t":{"100":{"position":[[220,6]]},"676":{"position":[[219,6]]},"682":{"position":[[82,6]]}}}],["campaign",{"_index":2269,"t":{"714":{"position":[[669,9]]},"722":{"position":[[428,9],[597,8],[999,8],[1083,8],[6844,8],[30742,8],[30780,8],[36030,8]]}}}],["can't",{"_index":1177,"t":{"202":{"position":[[386,5]]},"290":{"position":[[691,5]]},"509":{"position":[[404,5]]}}}],["can_change_own",{"_index":1570,"t":{"401":{"position":[[2324,16],[3021,17]]},"403":{"position":[[9028,17],[9317,17],[9837,17],[10426,17]]},"405":{"position":[[2771,16],[3106,16],[3349,16],[3692,16]]}}}],["can_create_docu",{"_index":1571,"t":{"401":{"position":[[2348,19],[2441,19],[2696,21],[3138,20],[3261,20]]}}}],["can_create_fold",{"_index":1572,"t":{"401":{"position":[[2374,17],[2467,17],[3112,18],[3289,18]]}}}],["can_delet",{"_index":1743,"t":{"445":{"position":[[10545,10]]},"447":{"position":[[53,10],[318,11],[642,13]]},"449":{"position":[[981,13],[1976,13],[3178,13],[5072,13],[5096,12],[6195,13],[7190,13],[8392,13],[10285,13],[10309,12]]},"660":{"position":[[1228,11],[2400,13]]},"666":{"position":[[2315,13],[2531,13],[2822,13],[3836,13],[3860,12],[6128,13],[6345,13],[6637,13],[7654,13],[7678,12],[9944,13],[10161,13],[10453,13],[11470,13],[11494,12]]},"672":{"position":[[566,11],[2275,13]]}}}],["can_edit",{"_index":2054,"t":{"642":{"position":[[326,9],[465,11]]},"644":{"position":[[378,9],[698,11],[809,8],[6689,11],[7680,11],[8878,11],[10759,11],[10781,10]]},"660":{"position":[[1255,9],[2478,11]]},"672":{"position":[[593,9],[2353,11]]}}}],["can_read",{"_index":1658,"t":{"419":{"position":[[341,8],[854,11],[2513,9],[3336,11],[3749,11]]},"423":{"position":[[1604,9],[2433,11],[2889,11]]}}}],["can_renam",{"_index":538,"t":{"58":{"position":[[207,11],[394,13],[796,11],[823,10],[944,10],[1810,10]]}}}],["can_shar",{"_index":508,"t":{"54":{"position":[[249,10],[541,10],[1073,12],[2395,12],[3990,10]]},"401":{"position":[[2275,9],[2968,10]]},"403":{"position":[[6981,10],[7359,10],[7519,9],[8401,9],[8855,9],[9202,9],[9619,10],[10208,10]]},"405":{"position":[[2625,9],[2950,9],[3203,9],[3526,9]]}}}],["can_view",{"_index":1569,"t":{"401":{"position":[[2308,8],[2392,8],[2986,9],[3166,9]]},"403":{"position":[[8148,9],[8516,9],[9674,9],[10263,9]]},"405":{"position":[[2723,8],[3048,8],[3301,8],[3634,8]]},"660":{"position":[[1279,9],[2553,11]]},"666":{"position":[[424,11],[638,11],[927,11],[1935,11],[1957,10],[4232,11],[4446,11],[4735,11],[5743,11],[5765,10],[8042,11],[8257,11],[8547,11],[9558,11],[9580,10]]},"668":{"position":[[3002,11],[3217,11],[3507,11],[4518,11],[4540,10],[10255,11],[10469,11],[10758,11],[11766,11],[11788,10]]},"670":{"position":[[6787,11],[7116,11],[7615,11],[9022,11],[9044,10],[9612,11],[9942,11],[10442,11],[11852,11],[11874,10]]},"672":{"position":[[617,9],[2428,11]]},"734":{"position":[[784,9],[861,9],[1577,11],[1898,11]]},"740":{"position":[[1206,11],[2194,11],[3389,11],[5261,11],[5283,10],[6321,11],[7313,11],[8512,11],[10400,11],[10422,10],[16673,11],[17662,11],[18858,11],[20733,11],[20755,10]]},"742":{"position":[[3058,9],[3796,11],[5316,11],[6300,11],[7491,11],[9346,11],[9368,10],[24215,11],[25203,11],[26398,11],[28270,11],[28292,10]]},"744":{"position":[[8561,11],[9734,11],[11264,11],[13748,11],[13770,10],[15017,11],[16191,11],[17722,11],[20209,11],[20231,10]]},"746":{"position":[[597,9],[674,9],[2398,11],[2719,11]]},"748":{"position":[[810,9],[887,9],[2865,11],[3186,11]]}}}],["can_writ",{"_index":1568,"t":{"401":{"position":[[2298,9],[3003,10]]},"403":{"position":[[8605,10],[8970,10],[9782,10],[10371,10]]},"405":{"position":[[2674,9],[2999,9],[3252,9],[3585,9]]},"437":{"position":[[318,9],[810,10],[1035,12]]},"445":{"position":[[1021,12],[2015,12],[3216,12],[5107,12],[5130,11],[6071,12],[7064,12],[8264,12],[10151,12],[10174,11]]},"447":{"position":[[293,10],[566,12]]},"642":{"position":[[940,10],[1080,12]]},"644":{"position":[[353,10],[622,12],[1652,12],[2644,12],[3843,12],[5727,12],[5750,11]]},"646":{"position":[[6156,12],[7151,12],[8353,12],[10249,12],[10272,11]]},"648":{"position":[[17606,12],[18598,12],[19797,12],[21681,12],[21704,11]]},"650":{"position":[[188,10],[328,12]]}}}],["can‚Äôt",{"_index":1676,"t":{"423":{"position":[[375,5]]}}}],["captur",{"_index":1071,"t":{"154":{"position":[[109,8]]}}}],["care",{"_index":1961,"t":{"585":{"position":[[799,4]]}}}],["carl",{"_index":1385,"t":{"306":{"position":[[433,6],[1409,4]]},"312":{"position":[[144,4],[10480,4],[10814,4],[10860,4]]},"318":{"position":[[69,4],[129,4],[197,4],[301,4],[1034,4],[2081,4],[3453,4],[4623,4],[5339,4],[5525,4],[5665,4],[5746,4],[5819,4]]},"437":{"position":[[583,4],[635,4],[1852,4],[2100,4]]},"445":{"position":[[143,4],[10415,5]]},"449":{"position":[[5260,4],[5334,4]]},"660":{"position":[[2966,4],[3776,4],[5023,4],[6391,4],[7623,4],[9432,4]]},"662":{"position":[[432,4]]},"666":{"position":[[7820,4],[9720,4]]},"670":{"position":[[12500,4],[12528,4]]},"672":{"position":[[3315,4],[4562,4],[5930,4],[7162,4],[8971,4]]}}}],["carolin",{"_index":2350,"t":{"734":{"position":[[2247,8],[3408,8],[4978,8],[6939,8],[8602,8],[10045,8]]},"740":{"position":[[5428,8]]},"746":{"position":[[4136,8],[6962,8],[10627,8],[13626,8],[17072,8]]}}}],["cascad",{"_index":1753,"t":{"461":{"position":[[393,9]]},"465":{"position":[[9,9]]},"467":{"position":[[16,9]]},"471":{"position":[[5492,9]]},"549":{"position":[[134,7]]}}}],["case",{"_index":271,"t":{"16":{"position":[[6363,5],[11951,5],[29819,4]]},"56":{"position":[[1475,4]]},"58":{"position":[[753,4]]},"98":{"position":[[407,4],[455,4],[504,4],[4090,4],[4133,4],[4177,4]]},"202":{"position":[[196,5]]},"211":{"position":[[130,4]]},"219":{"position":[[480,5]]},"273":{"position":[[447,5],[790,5],[1170,5],[1803,5],[2163,4],[2364,5],[2753,5],[3130,4],[3470,5]]},"275":{"position":[[13,4]]},"290":{"position":[[482,4]]},"296":{"position":[[1450,5],[1477,5]]},"298":{"position":[[39,5],[256,4]]},"353":{"position":[[253,6],[367,6]]},"395":{"position":[[144,5]]},"397":{"position":[[417,6]]},"399":{"position":[[4350,5],[4581,5]]},"403":{"position":[[3051,5],[3065,4],[3101,4],[3244,5],[5930,5]]},"425":{"position":[[2845,5]]},"427":{"position":[[132,5],[420,6]]},"429":{"position":[[762,4]]},"453":{"position":[[500,5]]},"483":{"position":[[104,6]]},"509":{"position":[[214,5]]},"517":{"position":[[54,5]]},"519":{"position":[[73,5]]},"527":{"position":[[260,5],[342,5]]},"571":{"position":[[466,5]]},"578":{"position":[[292,4]]},"581":{"position":[[225,4]]},"591":{"position":[[221,5]]},"605":{"position":[[30319,5]]},"609":{"position":[[182,5],[380,5]]},"611":{"position":[[211,4]]},"622":{"position":[[1058,4],[2162,4],[3591,4],[4818,4],[5601,4]]},"626":{"position":[[51,5],[94,4]]},"628":{"position":[[1162,5]]},"634":{"position":[[5348,5]]},"648":{"position":[[5712,5]]},"654":{"position":[[21,5],[287,5]]},"660":{"position":[[2845,4]]},"670":{"position":[[201,5]]},"722":{"position":[[964,5]]},"728":{"position":[[71,5],[319,5]]},"734":{"position":[[2184,4]]},"744":{"position":[[200,4]]},"748":{"position":[[178,5]]},"752":{"position":[[143,4]]},"758":{"position":[[340,4]]},"767":{"position":[[24977,5]]},"790":{"position":[[5491,5],[5666,5]]},"792":{"position":[[8641,4]]},"794":{"position":[[235,5]]}}}],["catch",{"_index":705,"t":{"94":{"position":[[855,5]]},"96":{"position":[[685,5],[1456,5]]},"98":{"position":[[623,5],[1540,5],[2451,5]]}}}],["categori",{"_index":1456,"t":{"355":{"position":[[215,9],[282,9],[411,8],[532,8],[691,10]]},"357":{"position":[[69,9],[136,9]]},"365":{"position":[[206,9],[319,8],[500,8],[585,8],[676,8],[767,8]]},"367":{"position":[[312,8],[543,10]]},"371":{"position":[[866,8],[1038,8],[2129,8],[2357,8],[3773,8],[3955,8],[5169,8],[5347,8],[6217,8],[6393,8]]}}}],["category:logo",{"_index":1487,"t":{"371":{"position":[[949,17],[1120,16],[2263,17],[2490,17],[3865,15],[4046,15],[5247,16],[5424,16],[6060,17],[6303,15],[6478,15]]},"373":{"position":[[875,16],[1868,16],[3069,15],[4211,16],[4811,18],[4984,16],[5027,15]]}}}],["category:logos\"},{\"user\":\"role:media",{"_index":1495,"t":{"371":{"position":[[5970,36]]}}}],["catherin",{"_index":2265,"t":{"714":{"position":[[144,9],[447,9]]},"716":{"position":[[717,9]]},"718":{"position":[[330,9],[12437,9],[13166,9],[14219,9],[15597,9],[16773,9],[17502,9],[22799,10]]},"722":{"position":[[852,9]]}}}],["caus",{"_index":1638,"t":{"405":{"position":[[3887,7]]},"425":{"position":[[3508,5]]},"744":{"position":[[634,6]]}}}],["caution",{"_index":557,"t":{"60":{"position":[[2936,7]]},"318":{"position":[[16232,7]]},"387":{"position":[[10502,7]]},"399":{"position":[[4186,7]]},"401":{"position":[[3308,7]]},"415":{"position":[[0,7]]},"467":{"position":[[4980,7]]},"471":{"position":[[5791,7]]},"477":{"position":[[1586,7]]},"505":{"position":[[27093,7]]},"525":{"position":[[5573,7]]},"624":{"position":[[5684,7]]},"686":{"position":[[515,7]]},"714":{"position":[[966,7]]},"767":{"position":[[24288,7]]}}}],["caveat",{"_index":1938,"t":{"581":{"position":[[316,7]]}}}],["cert",{"_index":988,"t":{"144":{"position":[[727,5],[2176,5]]}}}],["cert=\"/users/myuser/key/server.crt",{"_index":1001,"t":{"144":{"position":[[1625,35],[3178,35]]}}}],["certain",{"_index":54,"t":{"6":{"position":[[138,7],[382,7]]},"16":{"position":[[17412,7],[29859,7]]},"42":{"position":[[92,7]]},"52":{"position":[[270,7]]},"60":{"position":[[2713,7]]},"68":{"position":[[2356,7]]},"106":{"position":[[94,7]]},"202":{"position":[[594,7]]},"263":{"position":[[537,7]]},"273":{"position":[[178,7],[571,7],[1017,7],[1998,7],[2983,7]]},"304":{"position":[[818,7]]},"306":{"position":[[2352,7]]},"310":{"position":[[645,7]]},"312":{"position":[[10370,7]]},"314":{"position":[[968,7]]},"334":{"position":[[86,7],[161,7],[231,7]]},"336":{"position":[[890,7]]},"343":{"position":[[127,7]]},"349":{"position":[[146,7],[281,7],[427,7],[591,7],[667,7],[742,7]]},"365":{"position":[[263,7]]},"367":{"position":[[1201,7],[1228,7]]},"371":{"position":[[67,7]]},"377":{"position":[[80,7]]},"435":{"position":[[461,7]]},"475":{"position":[[80,7]]},"491":{"position":[[299,7],[1203,7]]},"509":{"position":[[612,7]]},"517":{"position":[[90,7],[157,7],[205,7]]},"523":{"position":[[132,7]]},"560":{"position":[[69,7]]},"587":{"position":[[85,7]]},"591":{"position":[[165,7]]},"607":{"position":[[18049,7]]},"658":{"position":[[304,7],[913,7]]},"670":{"position":[[189,7]]},"674":{"position":[[197,7]]},"678":{"position":[[1208,7]]},"704":{"position":[[268,7],[367,7],[668,7]]},"722":{"position":[[251,7]]},"728":{"position":[[130,7]]},"732":{"position":[[305,7],[915,7]]},"742":{"position":[[840,7]]},"750":{"position":[[316,7]]},"771":{"position":[[317,7]]},"773":{"position":[[473,7],[768,7],[1053,7]]},"786":{"position":[[28785,7]]},"792":{"position":[[14462,7]]},"796":{"position":[[363,7],[637,7],[946,7],[1135,7]]},"804":{"position":[[322,7]]},"813":{"position":[[13901,7]]}}}],["certif",{"_index":987,"t":{"144":{"position":[[543,11],[1063,11],[1335,11],[1977,11],[2588,11],[2860,11]]}}}],["certs')}/private.key",{"_index":736,"t":{"96":{"position":[[436,23]]}}}],["certs')}/public.key",{"_index":738,"t":{"96":{"position":[[514,22]]}}}],["chain",{"_index":1765,"t":{"471":{"position":[[5524,5]]},"505":{"position":[[11182,5],[26774,5]]},"525":{"position":[[5397,5]]}}}],["chang",{"_index":80,"t":{"8":{"position":[[242,6],[510,7]]},"152":{"position":[[1063,7]]},"158":{"position":[[264,6]]},"247":{"position":[[10,6]]},"251":{"position":[[46,7],[96,7],[278,8]]},"255":{"position":[[131,7]]},"259":{"position":[[27,7],[1208,8],[2527,7],[2778,7],[2924,7],[3116,7]]},"261":{"position":[[923,7]]},"269":{"position":[[16,8],[137,7],[248,7]]},"273":{"position":[[1759,7],[2195,7],[3154,7]]},"290":{"position":[[625,7],[735,7],[777,8]]},"318":{"position":[[16144,6]]},"336":{"position":[[845,7]]},"367":{"position":[[52,6],[1145,6]]},"397":{"position":[[2404,6],[2484,6]]},"399":{"position":[[1444,6],[1524,6],[3286,6],[3366,6]]},"401":{"position":[[1776,6],[1856,6]]},"403":{"position":[[9118,6]]},"405":{"position":[[1083,6]]},"411":{"position":[[140,7]]},"415":{"position":[[186,7],[650,7]]},"417":{"position":[[10,7],[414,6]]},"419":{"position":[[71,7],[3853,8]]},"425":{"position":[[1620,6],[1655,6],[2881,7]]},"427":{"position":[[325,7],[376,6],[560,7]]},"465":{"position":[[1113,7]]},"471":{"position":[[26,7]]},"491":{"position":[[1676,7],[1758,7]]},"519":{"position":[[129,7]]},"547":{"position":[[4938,7]]},"585":{"position":[[236,6]]},"624":{"position":[[5610,7]]},"638":{"position":[[75,7],[160,8]]},"672":{"position":[[9571,7]]},"694":{"position":[[304,8],[408,6],[465,8]]},"696":{"position":[[728,7]]},"698":{"position":[[2383,7]]},"712":{"position":[[425,6],[512,8],[647,7]]},"720":{"position":[[5495,6]]},"769":{"position":[[21051,7],[21334,7],[28530,6],[36964,7]]},"792":{"position":[[15469,8]]}}}],["channel",{"_index":2004,"t":{"611":{"position":[[472,8],[481,8],[508,8]]},"704":{"position":[[276,8],[527,8]]},"710":{"position":[[557,7]]},"712":{"position":[[233,9],[686,9],[706,9],[897,8],[961,9],[978,9],[1003,9],[1032,8],[1054,9],[1064,7]]},"714":{"position":[[382,8],[540,9],[561,8],[697,8],[765,7],[919,8]]},"716":{"position":[[105,7],[674,8],[1801,8]]},"718":{"position":[[28067,8],[29134,8],[30437,8],[32177,8],[33623,8],[34763,8]]},"722":{"position":[[150,9],[259,8],[946,9],[1092,7],[1192,7],[1266,7],[1300,8],[1337,8],[1437,7],[1548,8],[1648,7],[1919,10],[2742,7],[2972,7],[3067,7],[3348,10],[4220,7],[4676,7],[5734,10],[6730,9],[6853,9],[13275,8],[13297,7],[13317,7],[25123,8],[30751,8]]},"726":{"position":[[65,8]]}}}],["channel:gener",{"_index":2310,"t":{"722":{"position":[[305,15],[637,15],[7612,19],[10494,17],[14222,17],[14319,18],[15344,17],[16791,17],[16897,17],[18036,17],[18842,17],[19118,15],[20030,19],[20100,18],[22752,17],[22832,17],[41208,15],[42041,18],[43031,18],[44229,17],[46136,18],[46174,17],[51822,15],[51863,15],[51898,15],[51939,15],[52551,15],[52594,15]]}}}],["channel:market",{"_index":297,"t":{"16":{"position":[[9093,17]]}}}],["channel:marketing_intern",{"_index":2313,"t":{"722":{"position":[[7702,30],[10594,28],[25948,30],[26029,29],[28500,28],[28591,28],[51974,26],[52026,26],[52071,26],[52123,26],[52170,26],[52224,26],[52272,26],[52326,26],[52630,26],[52684,26]]}}}],["channel:proj_marketing_campaign",{"_index":2311,"t":{"722":{"position":[[458,31],[7803,34],[10705,33],[31620,34],[34002,33],[36768,34],[39116,33],[46284,31],[47133,34],[48138,34],[49351,33],[51303,34],[51357,33],[52731,31],[52790,31]]}}}],["channel_archiv",{"_index":1790,"t":{"491":{"position":[[362,17]]}}}],["channels_admin",{"_index":2271,"t":{"716":{"position":[[963,15],[1092,15],[1297,17],[1488,17],[1816,16]]},"718":{"position":[[118,15],[294,14],[664,15],[869,17],[1060,17],[28138,17],[29207,17],[32258,17]]},"720":{"position":[[5389,14],[5737,14],[5863,15],[5927,14],[6118,17],[6322,16],[6536,17]]},"722":{"position":[[2301,16],[2571,16],[3809,16],[4079,16],[4555,15],[4619,14],[5086,17],[5290,16],[5504,17],[6195,16],[6465,16],[51741,14],[51798,15]]}}}],["charact",{"_index":965,"t":{"142":{"position":[[3171,10],[3223,10],[3270,10]]},"401":{"position":[[2539,11]]},"415":{"position":[[877,9]]}}}],["characterist",{"_index":162,"t":{"16":{"position":[[544,16]]},"18":{"position":[[69,16]]},"204":{"position":[[1123,15]]},"208":{"position":[[45,15]]},"221":{"position":[[22135,15]]},"227":{"position":[[45,15]]},"238":{"position":[[842,15]]},"242":{"position":[[45,15]]},"279":{"position":[[1442,15]]},"285":{"position":[[45,15]]},"306":{"position":[[1752,15]]},"310":{"position":[[45,15]]},"328":{"position":[[1255,15]]},"332":{"position":[[45,15]]},"379":{"position":[[834,15]]},"381":{"position":[[45,15]]},"437":{"position":[[2741,15]]},"443":{"position":[[45,15]]},"455":{"position":[[1126,15]]},"459":{"position":[[45,15]]},"477":{"position":[[895,15]]},"481":{"position":[[45,15]]},"493":{"position":[[985,15]]},"497":{"position":[[45,15]]},"511":{"position":[[873,15]]},"515":{"position":[[45,15]]},"531":{"position":[[826,15]]},"535":{"position":[[45,15]]},"553":{"position":[[1297,15]]},"557":{"position":[[45,15]]},"593":{"position":[[414,15]]},"597":{"position":[[45,15]]},"613":{"position":[[1070,15]]},"617":{"position":[[45,15]]},"640":{"position":[[118,15]]}}}],["charl",{"_index":2158,"t":{"686":{"position":[[146,7],[318,7]]},"694":{"position":[[992,8],[2498,7],[9294,7],[14451,7],[15027,7],[15065,7],[15209,7],[15251,7],[15407,7],[15442,7]]},"696":{"position":[[2705,7],[21297,7],[21335,7],[21479,7],[21521,7],[21677,7],[21712,7]]},"702":{"position":[[60,7]]},"762":{"position":[[401,8],[811,7],[856,7],[914,7]]},"767":{"position":[[18256,7],[19671,7],[21319,7],[22757,7],[23881,7]]},"769":{"position":[[39201,7],[39246,7],[39304,7],[44933,7],[44966,7],[45015,7],[45051,7],[45103,7],[45133,7]]},"783":{"position":[[45,8]]},"788":{"position":[[3025,7],[4249,7],[5854,7],[7211,7],[8213,7]]},"806":{"position":[[97,8]]},"811":{"position":[[2794,7],[4109,7],[5917,7],[7385,7],[8591,7]]}}}],["charli",{"_index":1972,"t":{"605":{"position":[[12489,7],[13110,7],[18256,7],[24566,8]]}}}],["chart",{"_index":1114,"t":{"164":{"position":[[86,6],[165,5]]}}}],["chat",{"_index":2342,"t":{"724":{"position":[[713,4]]}}}],["check",{"_index":65,"t":{"6":{"position":[[337,8]]},"14":{"position":[[308,5]]},"16":{"position":[[42,6],[124,6],[3472,7],[12146,5],[12890,5],[15109,5],[16281,5],[16297,8],[17046,6],[17076,5],[17304,5],[17322,5],[17361,5],[17476,5],[17568,5],[17616,5],[17783,5],[18502,5],[20721,5],[21893,5],[21909,8],[22658,6],[22688,5],[22986,5],[28818,5],[28920,5],[29206,5],[29255,5],[29447,5]]},"24":{"position":[[86,7]]},"42":{"position":[[2,5],[41,5]]},"46":{"position":[[52,5]]},"50":{"position":[[0,5]]},"60":{"position":[[3410,7]]},"62":{"position":[[1368,5]]},"64":{"position":[[1347,5]]},"66":{"position":[[1382,5]]},"70":{"position":[[0,5]]},"74":{"position":[[589,5],[637,5],[863,6]]},"90":{"position":[[296,6],[660,6]]},"98":{"position":[[187,5],[746,5],[1633,5],[2627,5],[2671,5],[4415,5],[5307,5]]},"106":{"position":[[46,5]]},"110":{"position":[[24,5]]},"112":{"position":[[19,5]]},"114":{"position":[[3,5],[116,5],[643,5],[1077,5],[1093,8]]},"116":{"position":[[78,6],[108,5],[127,5]]},"124":{"position":[[19,5]]},"128":{"position":[[78,6]]},"134":{"position":[[0,5]]},"150":{"position":[[42,5],[84,5]]},"162":{"position":[[0,5]]},"178":{"position":[[106,5]]},"182":{"position":[[0,5]]},"196":{"position":[[0,5]]},"200":{"position":[[684,6]]},"215":{"position":[[19,5],[734,5],[2947,5],[4116,5],[4132,8],[4875,6],[4905,5],[5126,5],[5899,5],[8116,5],[9287,5],[9303,8],[10050,6],[10081,5]]},"217":{"position":[[0,5]]},"221":{"position":[[1340,5],[2039,5],[4244,5],[5409,5],[5425,8],[6160,6],[6185,5],[11589,5],[12442,5],[14655,5],[15824,5],[15840,8],[16583,6],[16613,5],[17465,5],[19682,5],[20853,5],[20869,8],[21616,6],[21647,5]]},"232":{"position":[[53,5],[777,5],[2992,5],[4162,5],[4178,8],[4923,6],[4953,5]]},"234":{"position":[[0,5]]},"236":{"position":[[198,5]]},"245":{"position":[[320,5],[1034,5],[3227,5],[4386,5],[4402,8],[5125,6],[5155,5]]},"247":{"position":[[5119,5],[5806,5],[8001,5],[9161,5],[9177,8],[9902,6],[9932,5]]},"249":{"position":[[0,5]]},"267":{"position":[[30,5],[85,6]]},"269":{"position":[[508,6]]},"273":{"position":[[408,5],[716,5],[1789,5],[2225,6],[2627,5],[2688,8],[3184,5],[3435,5],[3666,6]]},"292":{"position":[[0,5]]},"312":{"position":[[118,5],[217,5],[873,5],[3088,5],[4258,5],[4274,8],[5019,6],[5050,5],[5903,5],[8116,5],[9285,5],[9301,8],[10044,6],[10074,5]]},"318":{"position":[[3,5],[5737,5],[5800,5],[6477,5],[8692,5],[9862,5],[9878,8],[10623,6],[10653,5],[10964,5],[11033,5],[11711,5],[13926,5],[15096,5],[15112,8],[15857,6],[15888,5]]},"320":{"position":[[0,5]]},"338":{"position":[[185,6],[907,5],[3136,5],[4313,5],[4329,8],[5088,6],[5117,5]]},"340":{"position":[[0,5]]},"345":{"position":[[973,5],[1064,5],[1851,5],[4060,5],[5227,5],[5243,8],[5982,6],[6012,5]]},"349":{"position":[[838,5],[1369,5]]},"365":{"position":[[1044,5]]},"369":{"position":[[6135,5],[6791,5],[9010,5],[10182,5],[10198,8],[10947,6],[10977,5]]},"373":{"position":[[703,5],[2922,5],[4094,5],[4110,8],[4859,6],[4889,5],[5111,6]]},"375":{"position":[[0,5]]},"377":{"position":[[207,6]]},"387":{"position":[[57,5],[807,5],[3036,5],[4213,5],[4229,8],[4988,6],[5017,5],[5260,5],[6057,5],[8288,5],[9466,5],[9482,8],[10243,6],[10272,5]]},"389":{"position":[[0,5]]},"393":{"position":[[354,6],[565,5],[647,5],[826,5],[928,5]]},"405":{"position":[[341,8],[485,5],[564,5]]},"407":{"position":[[147,5]]},"409":{"position":[[0,5]]},"415":{"position":[[1118,6]]},"427":{"position":[[498,7]]},"429":{"position":[[627,5]]},"431":{"position":[[435,7]]},"445":{"position":[[217,5],[873,5],[3094,5],[4267,5],[4283,8],[5034,6],[5065,5],[5924,5],[8143,5],[9315,5],[9331,8],[10080,6],[10110,5]]},"449":{"position":[[46,5],[833,5],[3056,5],[4230,5],[4246,8],[4999,6],[5030,5],[6048,5],[8271,5],[9445,5],[9461,8],[10214,6],[10244,5]]},"451":{"position":[[0,5]]},"461":{"position":[[743,5]]},"471":{"position":[[185,6],[880,5],[3109,5],[4286,5],[4302,8],[5061,6],[5090,5],[5462,5]]},"473":{"position":[[0,5]]},"487":{"position":[[51,5],[1012,5],[3233,5],[4406,5],[4422,8],[5173,6],[5202,5]]},"489":{"position":[[0,5]]},"491":{"position":[[1166,5],[1247,5],[1413,6]]},"493":{"position":[[1566,5],[1779,5],[1801,5],[1830,5]]},"497":{"position":[[626,5],[839,5],[861,5],[890,5]]},"499":{"position":[[446,8]]},"505":{"position":[[169,5],[6048,6],[6743,5],[8958,5],[10128,5],[10144,8],[10889,6],[10918,5],[11511,6],[12158,5],[14373,5],[15543,5],[15559,8],[16304,6],[16333,5],[16559,6],[17264,5],[19483,5],[20655,5],[20671,8],[21420,6],[21451,5],[22308,5],[24525,5],[25696,5],[25712,8],[26459,6],[26490,5]]},"507":{"position":[[0,5]]},"517":{"position":[[411,8]]},"525":{"position":[[940,5],[3173,5],[4352,5],[4368,8],[5131,6],[5162,5]]},"527":{"position":[[0,5]]},"545":{"position":[[713,5],[2904,5],[4062,5],[4078,8],[4799,6],[4830,5],[5659,5],[7850,5],[9008,5],[9024,8],[9745,6],[9776,5]]},"547":{"position":[[5648,5],[7841,5],[9000,5],[9016,8],[9739,6],[9770,5]]},"549":{"position":[[0,5]]},"551":{"position":[[65,6]]},"560":{"position":[[4,5]]},"562":{"position":[[0,5],[151,5],[872,5],[3083,5],[4251,5],[4267,8],[5008,6],[5037,5]]},"564":{"position":[[0,5]]},"578":{"position":[[206,8],[301,5]]},"587":{"position":[[0,5],[38,5]]},"589":{"position":[[0,5],[86,5],[139,5]]},"599":{"position":[[165,8]]},"605":{"position":[[1254,5],[2000,5],[4213,5],[5382,5],[5398,8],[6141,6],[6171,5],[6847,5],[7593,5],[9806,5],[10975,5],[10991,8],[11734,6],[11764,5],[13086,5],[13835,5],[16054,5],[17226,5],[17242,8],[17991,6],[18024,5],[19339,5],[20090,5],[22303,5],[23472,5],[23488,8],[24231,6],[24261,5],[24995,5],[25747,5],[27962,5],[29132,5],[29148,8],[29893,6],[29924,5]]},"607":{"position":[[1098,5],[1845,5],[4060,5],[5230,5],[5246,8],[5991,6],[6021,5],[6764,5],[7514,5],[9735,5],[10908,5],[10924,8],[11675,6],[11708,5],[12527,5],[13275,5],[15492,5],[16663,5],[16679,8],[17426,6],[17457,5],[18264,5],[19017,5],[21234,5],[22405,5],[22421,8],[23168,6],[23200,5]]},"609":{"position":[[0,5]]},"624":{"position":[[57,5],[814,5],[3049,5],[4229,5],[4245,8],[5010,6],[5045,5]]},"632":{"position":[[743,5],[2962,5],[4134,5],[4150,8],[4899,6],[4929,5]]},"634":{"position":[[6113,5],[8334,5],[9507,5],[9523,8],[10274,6],[10304,5],[11163,5],[13390,5],[14566,5],[14582,8],[15339,6],[15369,5]]},"636":{"position":[[0,5]]},"644":{"position":[[1505,5],[3722,5],[4893,5],[4909,8],[5656,6],[5686,5],[6542,5],[8757,5],[9927,5],[9943,8],[10688,6],[10718,5]]},"646":{"position":[[5311,5],[6006,5],[8229,5],[9403,5],[9419,8],[10172,6],[10205,5]]},"648":{"position":[[16800,5],[17459,5],[19676,5],[20847,5],[20863,8],[21610,6],[21640,5],[22541,5],[24754,5],[25923,5],[25939,8],[26682,6],[26712,5]]},"652":{"position":[[207,6]]},"658":{"position":[[213,5],[253,5],[490,5]]},"664":{"position":[[453,7]]},"666":{"position":[[197,7],[277,5],[806,5],[1241,5],[1257,8],[1864,6],[1894,5],[2168,5],[2701,5],[3138,5],[3154,8],[3765,6],[3795,5],[4004,6],[4085,5],[4614,5],[5049,5],[5065,8],[5672,6],[5702,5],[5981,5],[6516,5],[6954,5],[6970,8],[7583,6],[7613,5],[7895,5],[8426,5],[8862,5],[8878,8],[9487,6],[9517,5],[9797,5],[10332,5],[10770,5],[10786,8],[11399,6],[11429,5]]},"668":{"position":[[2800,6],[2855,5],[3386,5],[3822,5],[3838,8],[4447,6],[4477,5],[10046,5],[10108,5],[10637,5],[11072,5],[11088,8],[11695,6],[11725,5]]},"670":{"position":[[463,5],[680,5],[787,5],[6640,5],[7494,5],[8077,5],[8093,8],[8951,6],[8981,5],[9465,5],[10321,5],[10905,5],[10921,8],[11781,6],[11811,5],[12169,5]]},"672":{"position":[[9465,5]]},"674":{"position":[[0,5],[350,5],[375,5]]},"688":{"position":[[161,7]]},"692":{"position":[[17376,5],[19593,5],[20764,5],[20780,8],[21527,6],[21557,5],[22494,5],[24707,5],[25876,5],[25892,8],[26635,6],[26665,5],[26881,5]]},"694":{"position":[[968,8],[9987,5],[12210,5],[13384,5],[13400,8],[14153,6],[14186,5],[14405,5]]},"696":{"position":[[16254,5],[18465,5],[19633,5],[19649,8],[20390,6],[20417,5]]},"698":{"position":[[9963,5],[12184,5],[13357,5],[13373,8],[14124,6],[14155,5]]},"716":{"position":[[430,7]]},"718":{"position":[[1351,8],[7977,5],[10206,5],[11383,5],[11399,8],[12158,6],[12187,5],[18360,5],[20589,5],[21766,5],[21782,8],[22541,6],[22576,5],[23516,5],[25759,5],[26943,5],[26959,8],[27732,6],[27767,5],[35239,5],[35930,5],[38159,5],[39336,5],[39352,8],[40111,6],[40140,5]]},"720":{"position":[[759,5],[2978,5],[4150,5],[4166,8],[4915,6],[4944,5],[7459,5],[9676,5],[10847,5],[10863,8],[11610,6],[11639,5],[11863,5]]},"722":{"position":[[207,5],[41106,5],[41875,5],[44088,5],[45257,5],[45273,8],[46016,6],[46047,5],[46967,5],[49210,5],[50394,5],[50410,8],[51183,6],[51214,5]]},"724":{"position":[[653,5]]},"728":{"position":[[110,5]]},"732":{"position":[[214,5],[254,5],[491,5]]},"734":{"position":[[2276,8],[2348,8],[2396,8],[3437,8],[3592,8],[3724,8],[5007,8],[5218,8],[5406,8],[6968,8],[7133,8],[7275,8],[8631,8],[8792,8],[8930,8],[10074,8],[10233,8],[10369,8]]},"738":{"position":[[430,7]]},"740":{"position":[[308,6],[1059,5],[3268,5],[4435,5],[4451,8],[5190,6],[5220,5],[6170,5],[8387,5],[9558,5],[9574,8],[10321,6],[10355,5],[10589,5],[16526,5],[18737,5],[19905,5],[19921,8],[20662,6],[20692,5]]},"742":{"position":[[4527,6],[5174,5],[7375,5],[8538,5],[8554,8],[9285,6],[9310,5],[23327,8],[24068,5],[26277,5],[27444,5],[27460,8],[28199,6],[28229,5]]},"744":{"position":[[522,5],[590,5],[7329,5],[7546,5],[7653,5],[8414,5],[11143,5],[12530,5],[12546,8],[13677,6],[13707,5],[14870,5],[17601,5],[18989,5],[19005,8],[20138,6],[20168,5]]},"746":{"position":[[4165,8],[4320,8],[4452,8],[6991,8],[7202,8],[7390,8],[10656,8],[10821,8],[10963,8],[13655,8],[13816,8],[13954,8],[17101,8],[17260,8],[17396,8],[18969,5]]},"750":{"position":[[0,5],[365,5]]},"767":{"position":[[24810,5],[25623,5],[27838,5],[29008,5],[29024,8],[29769,6],[29799,5],[30802,5],[33019,5],[34190,5],[34206,8],[34953,6],[34983,5],[35838,5],[38061,5],[39235,5],[39251,8],[40004,6],[40043,5],[40896,5],[43121,5],[44296,5],[44312,8],[45067,6],[45097,5]]},"769":{"position":[[924,5],[3141,5],[4312,5],[4328,8],[5075,6],[5105,5],[8259,5],[10468,5],[11635,5],[11651,8],[12390,6],[12420,5],[13599,5],[15826,5],[17002,5],[17018,8],[17775,6],[17814,5],[18382,5],[20983,6],[23347,5],[25572,5],[26747,5],[26763,8],[27518,6],[27557,5],[31010,5],[33217,5],[34383,5],[34399,8],[35136,6],[35166,5],[37120,5],[38837,6],[39997,5],[42204,5],[43370,5],[43386,8],[44123,6],[44153,5]]},"771":{"position":[[188,6]]},"786":{"position":[[1145,8],[7450,5],[9669,5],[10841,5],[10857,8],[11606,6],[11636,5],[17506,5],[19725,5],[20897,5],[20913,8],[21662,6],[21692,5],[22550,5],[24771,5],[25944,5],[25960,8],[26711,6],[26741,5],[29701,5],[31920,5],[33092,5],[33108,8],[33857,6],[33887,5],[34745,5],[36964,5],[38136,5],[38152,8],[38901,6],[38931,5]]},"788":{"position":[[9445,5],[11668,5],[12842,5],[12858,8],[13611,6],[13644,5]]},"790":{"position":[[5759,5],[11648,5],[13867,5],[15039,5],[15055,8],[15804,6],[15835,5]]},"792":{"position":[[8976,5],[9627,5],[11854,5],[13030,5],[13046,8],[13803,6],[13833,5]]},"809":{"position":[[1115,8],[7468,5],[9693,5],[10868,5],[10884,8],[11639,6],[11669,5],[17537,5],[19754,5],[20925,5],[20941,8],[21688,6],[21718,5],[22574,5],[24795,5],[25968,5],[25984,8],[26735,6],[26765,5],[29213,5],[31430,5],[32601,5],[32617,8],[33364,6],[33394,5],[34250,5],[36469,5],[37641,5],[37657,8],[38406,6],[38436,5]]},"811":{"position":[[9916,5],[12141,5],[13316,5],[13332,8],[14087,6],[14120,5]]},"813":{"position":[[8395,5],[9046,5],[11277,5],[12455,5],[12471,8],[13232,6],[13263,5]]},"815":{"position":[[10574,5],[12807,5],[13986,5],[14002,8],[14765,6],[14795,5],[15743,5],[17980,5],[19161,5],[19177,8],[19944,6],[19974,5],[20849,5],[23090,5],[24273,5],[24289,8],[25060,6],[25090,5],[26048,5],[28285,5],[29466,5],[29482,8],[30249,6],[30279,5],[31154,5],[33391,5],[34572,5],[34588,8],[35355,6],[35385,5]]}}}],["check('bob",{"_index":1802,"t":{"491":{"position":[[1449,12],[1505,12]]}}}],["check(us",{"_index":1445,"t":{"349":{"position":[[860,11]]}}}],["check*i",{"_index":1844,"t":{"525":{"position":[[215,9]]}}}],["checkauthor",{"_index":808,"t":{"98":{"position":[[2638,18]]}}}],["checkauthorization(c",{"_index":818,"t":{"98":{"position":[[4472,20]]}}}],["checki",{"_index":1739,"t":{"445":{"position":[[118,7]]}}}],["checklist",{"_index":1120,"t":{"172":{"position":[[371,10]]}}}],["checkrequest",{"_index":396,"t":{"16":{"position":[[15156,12],[16133,12],[16313,13],[20768,12],[21745,12],[21925,13]]},"114":{"position":[[690,12],[929,12],[1109,13]]},"215":{"position":[[2994,12],[3968,12],[4148,13],[8163,12],[9139,12],[9319,13]]},"221":{"position":[[4291,12],[5261,12],[5441,13],[14702,12],[15676,12],[15856,13],[19729,12],[20705,12],[20885,13]]},"232":{"position":[[3039,12],[4014,12],[4194,13]]},"245":{"position":[[3274,12],[4238,12],[4418,13]]},"247":{"position":[[8048,12],[9013,12],[9193,13]]},"312":{"position":[[3135,12],[4110,12],[4290,13],[8163,12],[9137,12],[9317,13]]},"318":{"position":[[8739,12],[9714,12],[9894,13],[13973,12],[14948,12],[15128,13]]},"338":{"position":[[3183,12],[4165,12],[4345,13]]},"345":{"position":[[4107,12],[5079,12],[5259,13]]},"369":{"position":[[9057,12],[10034,12],[10214,13]]},"373":{"position":[[2969,12],[3946,12],[4126,13]]},"387":{"position":[[3083,12],[4065,12],[4245,13],[8335,12],[9318,12],[9498,13]]},"445":{"position":[[3141,12],[4119,12],[4299,13],[8190,12],[9167,12],[9347,13]]},"449":{"position":[[3103,12],[4082,12],[4262,13],[8318,12],[9297,12],[9477,13]]},"471":{"position":[[3156,12],[4138,12],[4318,13]]},"487":{"position":[[3280,12],[4258,12],[4438,13]]},"505":{"position":[[9005,12],[9980,12],[10160,13],[14420,12],[15395,12],[15575,13],[19530,12],[20507,12],[20687,13],[24572,12],[25548,12],[25728,13]]},"525":{"position":[[3220,12],[4204,12],[4384,13]]},"545":{"position":[[2951,12],[3914,12],[4094,13],[7897,12],[8860,12],[9040,13]]},"547":{"position":[[7888,12],[8852,12],[9032,13]]},"562":{"position":[[3130,12],[4103,12],[4283,13]]},"605":{"position":[[4260,12],[5234,12],[5414,13],[9853,12],[10827,12],[11007,13],[16101,12],[17078,12],[17258,13],[22350,12],[23324,12],[23504,13],[28009,12],[28984,12],[29164,13]]},"607":{"position":[[4107,12],[5082,12],[5262,13],[9782,12],[10760,12],[10940,13],[15539,12],[16515,12],[16695,13],[21281,12],[22257,12],[22437,13]]},"624":{"position":[[3096,12],[4081,12],[4261,13]]},"632":{"position":[[3009,12],[3986,12],[4166,13]]},"634":{"position":[[8381,12],[9359,12],[9539,13],[13437,12],[14418,12],[14598,13]]},"644":{"position":[[3769,12],[4745,12],[4925,13],[8804,12],[9779,12],[9959,13]]},"646":{"position":[[8276,12],[9255,12],[9435,13]]},"648":{"position":[[19723,12],[20699,12],[20879,13],[24801,12],[25775,12],[25955,13]]},"666":{"position":[[853,12],[1093,12],[1273,13],[2748,12],[2990,12],[3170,13],[4661,12],[4901,12],[5081,13],[6563,12],[6806,12],[6986,13],[8473,12],[8714,12],[8894,13],[10379,12],[10622,12],[10802,13]]},"668":{"position":[[3433,12],[3674,12],[3854,13],[10684,12],[10924,12],[11104,13]]},"670":{"position":[[7541,12],[7929,12],[8109,13],[10368,12],[10757,12],[10937,13]]},"692":{"position":[[19640,12],[20616,12],[20796,13],[24754,12],[25728,12],[25908,13]]},"694":{"position":[[12257,12],[13236,12],[13416,13]]},"696":{"position":[[18512,12],[19485,12],[19665,13]]},"698":{"position":[[12231,12],[13209,12],[13389,13]]},"718":{"position":[[10253,12],[11235,12],[11415,13],[20636,12],[21618,12],[21798,13],[25806,12],[26795,12],[26975,13],[38206,12],[39188,12],[39368,13]]},"720":{"position":[[3025,12],[4002,12],[4182,13],[9723,12],[10699,12],[10879,13]]},"722":{"position":[[44135,12],[45109,12],[45289,13],[49257,12],[50246,12],[50426,13]]},"740":{"position":[[3315,12],[4287,12],[4467,13],[8434,12],[9410,12],[9590,13],[18784,12],[19757,12],[19937,13]]},"742":{"position":[[7422,12],[8390,12],[8570,13],[26324,12],[27296,12],[27476,13]]},"744":{"position":[[11190,12],[12382,12],[12562,13],[17648,12],[18841,12],[19021,13]]},"767":{"position":[[27885,12],[28860,12],[29040,13],[33066,12],[34042,12],[34222,13],[38108,12],[39087,12],[39267,13],[43168,12],[44148,12],[44328,13]]},"769":{"position":[[3188,12],[4164,12],[4344,13],[10515,12],[11487,12],[11667,13],[15873,12],[16854,12],[17034,13],[25619,12],[26599,12],[26779,13],[33264,12],[34235,12],[34415,13],[42251,12],[43222,12],[43402,13]]},"786":{"position":[[9716,12],[10693,12],[10873,13],[19772,12],[20749,12],[20929,13],[24818,12],[25796,12],[25976,13],[31967,12],[32944,12],[33124,13],[37011,12],[37988,12],[38168,13]]},"788":{"position":[[11715,12],[12694,12],[12874,13]]},"790":{"position":[[13914,12],[14891,12],[15071,13]]},"792":{"position":[[11901,12],[12882,12],[13062,13]]},"809":{"position":[[9740,12],[10720,12],[10900,13],[19801,12],[20777,12],[20957,13],[24842,12],[25820,12],[26000,13],[31477,12],[32453,12],[32633,13],[36516,12],[37493,12],[37673,13]]},"811":{"position":[[12188,12],[13168,12],[13348,13]]},"813":{"position":[[11324,12],[12307,12],[12487,13]]},"815":{"position":[[12854,12],[13838,12],[14018,13],[18027,12],[19013,12],[19193,13],[23137,12],[24125,12],[24305,13],[28332,12],[29318,12],[29498,13],[33438,12],[34424,12],[34604,13]]}}}],["child",{"_index":316,"t":{"16":{"position":[[11503,8]]},"54":{"position":[[1171,8],[1403,8],[1666,8],[2493,8],[2725,8],[2988,8]]},"58":{"position":[[312,8]]},"60":{"position":[[858,8],[1596,8],[3475,5]]},"62":{"position":[[309,8]]},"64":{"position":[[344,8]]},"68":{"position":[[494,5],[513,5],[618,5],[637,5],[687,5],[1188,8],[1292,8],[1998,8]]},"200":{"position":[[466,5]]},"296":{"position":[[476,5],[528,5]]},"336":{"position":[[409,8]]},"347":{"position":[[334,8]]},"355":{"position":[[740,8]]},"367":{"position":[[592,8]]},"403":{"position":[[5908,5]]},"419":{"position":[[591,8],[879,8],[2900,8],[3361,8]]},"423":{"position":[[1954,8],[2458,8]]},"429":{"position":[[1307,8]]},"437":{"position":[[2397,5],[2465,5]]},"439":{"position":[[53,5]]},"447":{"position":[[676,8]]},"465":{"position":[[608,8]]},"473":{"position":[[69,5]]},"503":{"position":[[1157,8]]},"539":{"position":[[366,8]]},"549":{"position":[[101,5],[178,5]]},"553":{"position":[[623,8]]},"601":{"position":[[561,8]]},"605":{"position":[[372,8]]},"628":{"position":[[446,8]]},"636":{"position":[[199,5],[249,5]]},"644":{"position":[[540,8]]},"660":{"position":[[2029,8]]},"668":{"position":[[1449,8],[1590,8],[1733,8]]},"672":{"position":[[809,8],[950,8],[1093,8],[1904,8]]},"694":{"position":[[1603,8],[1782,8],[1954,8]]},"696":{"position":[[1390,8],[1569,8],[1741,8]]},"698":{"position":[[1216,8],[1379,8],[1535,8]]},"720":{"position":[[6149,8],[6260,8]]},"722":{"position":[[3459,8],[5117,8],[5228,8],[5845,8]]},"734":{"position":[[1423,8]]},"742":{"position":[[1727,8],[3376,8],[3635,8]]},"746":{"position":[[1061,8],[1978,8],[2237,8]]},"748":{"position":[[1461,8],[2445,8],[2704,8]]},"769":{"position":[[7516,5],[18146,5],[19189,8],[21913,8],[29105,8],[36160,8]]},"771":{"position":[[244,5]]},"773":{"position":[[986,5]]},"786":{"position":[[27563,8],[27670,8],[27775,8],[27888,8],[28550,8]]},"788":{"position":[[1173,8],[1280,8],[1385,8],[1498,8]]},"790":{"position":[[44,6],[59,5]]},"792":{"position":[[1632,8],[1739,8],[1844,8],[1957,8],[14129,5],[14265,8],[21337,8],[21504,8],[21608,8],[21826,8],[21931,8]]},"796":{"position":[[1068,5]]},"809":{"position":[[27592,8],[27699,8],[27804,8]]},"811":{"position":[[834,8],[941,8],[1046,8]]},"813":{"position":[[916,8],[1023,8],[1128,8],[13562,5],[13659,8],[15312,8],[15476,8],[15692,8],[15909,8]]},"815":{"position":[[1076,8],[1240,8],[1456,8],[1673,8]]}}}],["children",{"_index":2718,"t":{"813":{"position":[[8074,9]]}}}],["choic",{"_index":610,"t":{"74":{"position":[[124,7]]}}}],["choos",{"_index":1308,"t":{"273":{"position":[[16,6]]},"605":{"position":[[947,6]]},"607":{"position":[[807,6]]},"628":{"position":[[1691,6]]}}}],["chronolog",{"_index":1250,"t":{"255":{"position":[[9,15]]}}}],["claim",{"_index":782,"t":{"96":{"position":[[2427,6]]},"98":{"position":[[3706,6],[3946,6]]}}}],["claims[\"name\"].(str",{"_index":784,"t":{"96":{"position":[[2473,23]]},"98":{"position":[[3752,23],[3992,23]]}}}],["clariti",{"_index":1531,"t":{"397":{"position":[[446,7]]}}}],["class",{"_index":160,"t":{"16":{"position":[[514,5],[14425,5],[15996,5],[20037,5],[21608,5],[25815,5],[27396,5]]},"18":{"position":[[39,5]]},"80":{"position":[[3725,5],[5701,5]]},"86":{"position":[[1209,5],[2031,5]]},"112":{"position":[[1417,5],[2640,5]]},"124":{"position":[[1417,5],[2640,5]]},"170":{"position":[[1119,5],[1891,5]]},"172":{"position":[[1953,5],[3448,5]]},"190":{"position":[[1417,5],[2640,5]]},"204":{"position":[[1088,5]]},"208":{"position":[[10,5]]},"213":{"position":[[2303,5],[3839,5]]},"215":{"position":[[2263,5],[3831,5],[7432,5],[9002,5]]},"221":{"position":[[3560,5],[5124,5],[8755,5],[10328,5],[13971,5],[15539,5],[18998,5],[20568,5],[22100,5]]},"227":{"position":[[10,5]]},"230":{"position":[[2564,5],[4099,5]]},"232":{"position":[[2308,5],[3877,5]]},"238":{"position":[[807,5]]},"242":{"position":[[10,5]]},"245":{"position":[[2543,5],[4101,5]]},"247":{"position":[[2315,5],[3846,5],[7317,5],[8876,5]]},"257":{"position":[[1393,5],[2616,5]]},"279":{"position":[[1407,5]]},"285":{"position":[[10,5]]},"288":{"position":[[2392,5],[3919,5],[7299,5],[8827,5],[12937,5],[14680,5]]},"306":{"position":[[1717,5]]},"310":{"position":[[10,5]]},"312":{"position":[[2404,5],[3973,5],[7432,5],[9000,5]]},"318":{"position":[[2689,5],[4284,5],[8008,5],[9577,5],[13242,5],[14811,5]]},"328":{"position":[[1220,5]]},"332":{"position":[[10,5]]},"338":{"position":[[2452,5],[4028,5]]},"345":{"position":[[3376,5],[4942,5]]},"369":{"position":[[2820,5],[4531,5],[8326,5],[9897,5]]},"371":{"position":[[2942,5],[4763,5]]},"373":{"position":[[2238,5],[3809,5]]},"379":{"position":[[799,5]]},"381":{"position":[[10,5]]},"385":{"position":[[2389,5],[3937,5]]},"387":{"position":[[2352,5],[3928,5],[7604,5],[9181,5]]},"437":{"position":[[2706,5]]},"443":{"position":[[10,5]]},"445":{"position":[[2410,5],[3982,5],[7459,5],[9030,5]]},"449":{"position":[[2372,5],[3945,5],[7587,5],[9160,5]]},"455":{"position":[[1091,5]]},"459":{"position":[[10,5]]},"467":{"position":[[2336,5],[3870,5]]},"469":{"position":[[2498,5],[4112,5]]},"471":{"position":[[2425,5],[4001,5]]},"477":{"position":[[860,5]]},"481":{"position":[[10,5]]},"485":{"position":[[2626,5],[4212,5]]},"487":{"position":[[2549,5],[4121,5]]},"493":{"position":[[950,5]]},"497":{"position":[[10,5]]},"505":{"position":[[2900,5],[4581,5],[8274,5],[9843,5],[13689,5],[15258,5],[18799,5],[20370,5],[23841,5],[25411,5]]},"511":{"position":[[838,5]]},"515":{"position":[[10,5]]},"521":{"position":[[2349,5],[3885,5]]},"523":{"position":[[2836,5],[4449,5]]},"525":{"position":[[2489,5],[4067,5]]},"531":{"position":[[791,5]]},"535":{"position":[[10,5]]},"537":{"position":[[2586,5],[4183,5]]},"541":{"position":[[2585,5],[4178,5]]},"543":{"position":[[2444,5],[3979,5]]},"545":{"position":[[2220,5],[3777,5],[7166,5],[8723,5]]},"547":{"position":[[2312,5],[3839,5],[7157,5],[8715,5]]},"553":{"position":[[1262,5]]},"557":{"position":[[10,5]]},"562":{"position":[[2399,5],[3966,5]]},"569":{"position":[[2789,5],[4377,5],[8304,5],[9871,5],[13740,5],[15317,5]]},"571":{"position":[[2756,5],[4226,5]]},"576":{"position":[[2523,5],[4136,5],[7857,5],[9470,5]]},"583":{"position":[[2601,5],[4312,5]]},"593":{"position":[[379,5]]},"597":{"position":[[10,5]]},"605":{"position":[[3529,5],[5097,5],[9122,5],[10690,5],[15370,5],[16941,5],[21619,5],[23187,5],[27278,5],[28847,5]]},"607":{"position":[[3376,5],[4945,5],[9051,5],[10623,5],[14808,5],[16378,5],[20550,5],[22120,5]]},"613":{"position":[[1035,5]]},"617":{"position":[[10,5]]},"622":{"position":[[2810,5],[4462,5]]},"624":{"position":[[2365,5],[3944,5]]},"630":{"position":[[2789,5],[4550,5]]},"632":{"position":[[2278,5],[3849,5]]},"634":{"position":[[2446,5],[4053,5],[7650,5],[9222,5],[12706,5],[14281,5]]},"640":{"position":[[83,5]]},"644":{"position":[[3038,5],[4608,5],[8073,5],[9642,5]]},"646":{"position":[[2495,5],[4082,5],[7545,5],[9118,5]]},"648":{"position":[[2487,5],[4119,5],[8235,5],[9857,5],[13686,5],[15309,5],[18992,5],[20562,5],[24070,5],[25638,5]]},"668":{"position":[[7149,5],[8753,5]]},"670":{"position":[[3538,5],[5170,5]]},"692":{"position":[[2732,5],[4274,5],[7696,5],[9242,5],[13082,5],[14791,5],[18909,5],[20479,5],[24023,5],[25591,5]]},"694":{"position":[[5718,5],[7490,5],[11526,5],[13099,5]]},"696":{"position":[[5285,5],[6925,5],[11480,5],[13335,5],[17781,5],[19348,5]]},"698":{"position":[[5660,5],[7372,5],[11500,5],[13072,5]]},"718":{"position":[[4407,5],[6008,5],[9522,5],[11098,5],[14833,5],[16434,5],[19905,5],[21481,5],[25075,5],[26658,5],[31404,5],[33275,5],[37475,5],[39051,5]]},"720":{"position":[[2294,5],[3865,5],[8992,5],[10562,5]]},"722":{"position":[[9654,5],[11440,5],[15946,5],[17616,5],[21827,5],[23551,5],[27682,5],[29321,5],[33165,5],[34737,5],[38296,5],[39851,5],[43404,5],[44972,5],[48526,5],[50109,5]]},"734":{"position":[[6031,5],[8123,5]]},"740":{"position":[[2584,5],[4150,5],[7703,5],[9273,5],[13025,5],[14627,5],[18053,5],[19620,5]]},"742":{"position":[[6691,5],[8253,5],[12965,5],[14955,5],[19959,5],[21694,5],[25593,5],[27159,5]]},"744":{"position":[[3843,5],[5633,5],[10459,5],[12245,5],[16917,5],[18704,5]]},"746":{"position":[[9719,5],[13147,5]]},"767":{"position":[[4377,5],[6808,5],[13245,5],[15186,5],[20286,5],[22157,5],[27154,5],[28723,5],[32335,5],[33905,5],[37377,5],[38950,5],[42437,5],[44011,5]]},"769":{"position":[[2457,5],[4027,5],[9784,5],[11350,5],[15142,5],[16717,5],[24888,5],[26462,5],[32533,5],[34098,5],[41520,5],[43085,5]]},"786":{"position":[[4052,5],[5595,5],[8985,5],[10556,5],[14151,5],[15694,5],[19041,5],[20612,5],[24087,5],[25659,5],[31236,5],[32807,5],[36280,5],[37851,5]]},"788":{"position":[[5085,5],[6867,5],[10984,5],[12557,5]]},"790":{"position":[[2570,5],[4137,5],[8158,5],[9757,5],[13183,5],[14754,5]]},"792":{"position":[[5389,5],[7026,5],[11170,5],[12745,5],[17816,5],[19381,5]]},"809":{"position":[[4055,5],[5601,5],[9009,5],[10583,5],[14186,5],[15728,5],[19070,5],[20640,5],[24111,5],[25683,5],[30746,5],[32316,5],[35785,5],[37356,5]]},"811":{"position":[[5136,5],[7029,5],[11457,5],[13031,5]]},"813":{"position":[[4615,5],[6367,5],[10593,5],[12170,5]]},"815":{"position":[[5889,5],[7824,5],[12123,5],[13701,5],[17296,5],[18876,5],[22406,5],[23988,5],[27601,5],[29181,5],[32707,5],[34287,5]]}}}],["classifi",{"_index":301,"t":{"16":{"position":[[9746,10]]}}}],["claus",{"_index":1861,"t":{"539":{"position":[[1172,7]]}}}],["clean",{"_index":2460,"t":{"744":{"position":[[606,5]]}}}],["cli",{"_index":841,"t":{"102":{"position":[[900,4]]}}}],["click",{"_index":607,"t":{"74":{"position":[[46,5],[132,5],[250,5],[336,5],[453,5],[561,5],[669,5],[792,5],[888,5],[993,5],[1102,5]]},"166":{"position":[[115,5],[204,5]]},"200":{"position":[[85,5],[207,5],[324,5],[482,5],[615,5],[726,5],[802,5]]},"296":{"position":[[101,5],[206,5],[321,5],[451,5],[578,5],[682,5],[800,5],[909,5],[995,5],[1165,5],[1302,5],[1419,5],[1537,5],[1632,5]]},"300":{"position":[[98,5],[208,5],[315,5],[424,5]]},"302":{"position":[[98,5]]},"324":{"position":[[112,5],[212,5],[348,5],[454,5]]},"403":{"position":[[10627,5]]},"413":{"position":[[76,5],[157,5]]}}}],["client",{"_index":337,"t":{"16":{"position":[[12505,7],[13319,7],[14529,7],[18117,7],[18931,7],[20141,7],[23889,7],[24708,7],[25919,7]]},"74":{"position":[[76,6],[278,6],[313,6]]},"78":{"position":[[234,7],[520,7],[806,7],[1092,7]]},"80":{"position":[[953,7],[2092,7],[3829,7]]},"98":{"position":[[1127,6],[4854,8]]},"112":{"position":[[65,7],[226,7],[726,7],[1521,7]]},"124":{"position":[[65,7],[226,7],[726,7],[1521,7]]},"168":{"position":[[46,6],[256,7]]},"172":{"position":[[184,7]]},"190":{"position":[[65,7],[226,7],[726,7],[1521,7]]},"213":{"position":[[339,7],[1107,7],[2407,7]]},"215":{"position":[[349,7],[1160,7],[2367,7],[5514,7],[6327,7],[7536,7]]},"221":{"position":[[1654,7],[2461,7],[3664,7],[6717,7],[7522,7],[8859,7],[12057,7],[12868,7],[14075,7],[17080,7],[17893,7],[19102,7]]},"230":{"position":[[601,7],[1369,7],[2668,7]]},"232":{"position":[[392,7],[1204,7],[2412,7]]},"245":{"position":[[649,7],[1450,7],[2647,7]]},"247":{"position":[[360,7],[1124,7],[2419,7],[5421,7],[6223,7],[7421,7]]},"257":{"position":[[41,7],[202,7],[702,7],[1497,7]]},"288":{"position":[[446,7],[1205,7],[2496,7],[5350,7],[6111,7],[7403,7],[10528,7],[11473,7],[13041,7]]},"312":{"position":[[488,7],[1300,7],[2508,7],[5518,7],[6329,7],[7536,7]]},"318":{"position":[[607,7],[1434,7],[2793,7],[6092,7],[6904,7],[8112,7],[11326,7],[12138,7],[13346,7]]},"338":{"position":[[522,7],[1341,7],[2556,7]]},"345":{"position":[[1466,7],[2275,7],[3480,7]]},"369":{"position":[[470,7],[1403,7],[2924,7],[6406,7],[7220,7],[8430,7]]},"371":{"position":[[372,7],[1415,7],[3046,7]]},"373":{"position":[[318,7],[1132,7],[2342,7]]},"385":{"position":[[401,7],[1181,7],[2493,7]]},"387":{"position":[[422,7],[1241,7],[2456,7],[5672,7],[6492,7],[7708,7]]},"445":{"position":[[488,7],[1303,7],[2514,7],[5539,7],[6353,7],[7563,7]]},"449":{"position":[[448,7],[1264,7],[2476,7],[5663,7],[6479,7],[7691,7]]},"467":{"position":[[376,7],[1142,7],[2440,7]]},"469":{"position":[[378,7],[1224,7],[2602,7]]},"471":{"position":[[495,7],[1314,7],[2529,7]]},"485":{"position":[[562,7],[1380,7],[2730,7]]},"487":{"position":[[627,7],[1442,7],[2653,7]]},"505":{"position":[[610,7],[1513,7],[3004,7],[6358,7],[7170,7],[8378,7],[11773,7],[12585,7],[13793,7],[16879,7],[17693,7],[18903,7],[21923,7],[22736,7],[23945,7]]},"521":{"position":[[385,7],[1153,7],[2453,7]]},"523":{"position":[[718,7],[1563,7],[2940,7]]},"525":{"position":[[555,7],[1376,7],[2593,7]]},"537":{"position":[[464,7],[1283,7],[2690,7]]},"541":{"position":[[471,7],[1286,7],[2689,7]]},"543":{"position":[[482,7],[1249,7],[2548,7]]},"545":{"position":[[328,7],[1128,7],[2324,7],[5274,7],[6074,7],[7270,7]]},"547":{"position":[[365,7],[1125,7],[2416,7],[5263,7],[6064,7],[7261,7]]},"562":{"position":[[487,7],[1297,7],[2503,7]]},"569":{"position":[[737,7],[1597,7],[2893,7],[6309,7],[7150,7],[8408,7],[11725,7],[12576,7],[13844,7]]},"571":{"position":[[940,7],[1682,7],[2860,7]]},"576":{"position":[[478,7],[1327,7],[2627,7],[5812,7],[6661,7],[7961,7]]},"583":{"position":[[399,7],[1325,7],[2705,7]]},"605":{"position":[[1615,7],[2426,7],[3633,7],[7208,7],[8019,7],[9226,7],[13450,7],[14264,7],[15474,7],[19705,7],[20516,7],[21723,7],[25362,7],[26174,7],[27382,7]]},"607":{"position":[[1460,7],[2272,7],[3480,7],[7129,7],[7944,7],[9155,7],[12890,7],[13703,7],[14912,7],[18632,7],[19445,7],[20654,7]]},"622":{"position":[[614,7],[1498,7],[2914,7]]},"624":{"position":[[429,7],[1251,7],[2469,7]]},"630":{"position":[[339,7],[1322,7],[2893,7]]},"632":{"position":[[358,7],[1172,7],[2382,7]]},"634":{"position":[[339,7],[1179,7],[2550,7],[5728,7],[6543,7],[7754,7],[10778,7],[11596,7],[12810,7]]},"644":{"position":[[1120,7],[1933,7],[3142,7],[6157,7],[6969,7],[8177,7]]},"646":{"position":[[429,7],[1248,7],[2599,7],[5621,7],[6437,7],[7649,7]]},"648":{"position":[[404,7],[1315,7],[2591,7],[6063,7],[6907,7],[8339,7],[11511,7],[12357,7],[13790,7],[17074,7],[17887,7],[19096,7],[22156,7],[22967,7],[24174,7]]},"668":{"position":[[5049,7],[5885,7],[7253,7]]},"670":{"position":[[1381,7],[2246,7],[3642,7]]},"692":{"position":[[756,7],[1530,7],[2836,7],[5712,7],[6490,7],[7800,7],[10700,7],[11621,7],[13186,7],[16991,7],[17804,7],[19013,7],[22109,7],[22920,7],[24127,7]]},"694":{"position":[[3174,7],[4148,7],[5822,7],[9602,7],[10418,7],[11630,7]]},"696":{"position":[[3077,7],[3939,7],[5389,7],[8770,7],[9827,7],[11584,7],[15869,7],[16679,7],[17885,7]]},"698":{"position":[[3272,7],[4196,7],[5764,7],[9578,7],[10393,7],[11604,7]]},"718":{"position":[[2313,7],[3146,7],[4511,7],[7592,7],[8411,7],[9626,7],[12739,7],[13572,7],[14937,7],[17975,7],[18794,7],[20009,7],[23131,7],[23957,7],[25179,7],[28698,7],[29781,7],[31508,7],[35545,7],[36364,7],[37579,7]]},"720":{"position":[[374,7],[1188,7],[2398,7],[7074,7],[7887,7],[9096,7]]},"722":{"position":[[7118,7],[8116,7],[9758,7],[13714,7],[14616,7],[16050,7],[19451,7],[20397,7],[21931,7],[25476,7],[26337,7],[27786,7],[31129,7],[31933,7],[33269,7],[36294,7],[37081,7],[38400,7],[41490,7],[42301,7],[43508,7],[46582,7],[47408,7],[48630,7]]},"734":{"position":[[2847,7],[4141,7],[6135,7]]},"740":{"position":[[674,7],[1483,7],[2688,7],[5785,7],[6598,7],[7807,7],[10929,7],[11763,7],[13129,7],[16141,7],[16951,7],[18157,7]]},"742":{"position":[[4789,7],[5594,7],[6795,7],[10021,7],[11223,7],[13069,7],[17561,7],[18518,7],[20063,7],[23683,7],[24492,7],[25697,7]]},"744":{"position":[[1334,7],[2347,7],[3947,7],[8029,7],[9023,7],[10563,7],[14485,7],[15480,7],[17021,7]]},"746":{"position":[[3575,7],[6125,7],[9823,7]]},"767":{"position":[[443,7],[2056,7],[4481,7],[10399,7],[11552,7],[13349,7],[17580,7],[18663,7],[20390,7],[25238,7],[26050,7],[27258,7],[30417,7],[31230,7],[32439,7],[35453,7],[36269,7],[37481,7],[40511,7],[41328,7],[42541,7]]},"769":{"position":[[539,7],[1352,7],[2561,7],[7874,7],[8683,7],[9888,7],[13214,7],[14032,7],[15246,7],[22962,7],[23779,7],[24992,7],[30625,7],[31433,7],[32637,7],[39612,7],[40420,7],[41624,7]]},"786":{"position":[[2074,7],[2849,7],[4156,7],[7065,7],[7879,7],[9089,7],[12173,7],[12948,7],[14255,7],[17121,7],[17935,7],[19145,7],[22165,7],[22980,7],[24191,7],[29316,7],[30130,7],[31340,7],[34360,7],[35174,7],[36384,7]]},"788":{"position":[[2593,7],[3597,7],[5189,7],[9060,7],[9876,7],[11088,7]]},"790":{"position":[[544,7],[1343,7],[2674,7],[6068,7],[6899,7],[8262,7],[11263,7],[12077,7],[13287,7]]},"792":{"position":[[3187,7],[4046,7],[5493,7],[9242,7],[10060,7],[11274,7],[15794,7],[16591,7],[17920,7]]},"809":{"position":[[2071,7],[2849,7],[4159,7],[7083,7],[7900,7],[9113,7],[12210,7],[12984,7],[14290,7],[17152,7],[17965,7],[19174,7],[22189,7],[23004,7],[24215,7],[28828,7],[29641,7],[30850,7],[33865,7],[34679,7],[35889,7]]},"811":{"position":[[2350,7],[3445,7],[5240,7],[9531,7],[10348,7],[11561,7]]},"813":{"position":[[2183,7],[3157,7],[4719,7],[8661,7],[9481,7],[10697,7]]},"815":{"position":[[3055,7],[4202,7],[5993,7],[10189,7],[11010,7],[12227,7],[15358,7],[16181,7],[17400,7],[20464,7],[21289,7],[22510,7],[25663,7],[26486,7],[27705,7],[30769,7],[31592,7],[32811,7]]}}}],["clientid",{"_index":329,"t":{"16":{"position":[[12340,8],[13155,8],[14249,8],[15408,8],[17952,8],[18767,8],[19861,8],[21020,8],[23724,8],[24544,8],[25639,8],[26808,8]]},"80":{"position":[[788,8],[1928,8],[3549,8],[5113,8]]},"213":{"position":[[174,8],[943,8],[2127,8],[3251,8]]},"215":{"position":[[184,8],[996,8],[2087,8],[3243,8],[5349,8],[6163,8],[7256,8],[8414,8]]},"221":{"position":[[1489,8],[2297,8],[3384,8],[4536,8],[6552,8],[7358,8],[8579,8],[9740,8],[11892,8],[12704,8],[13795,8],[14951,8],[16915,8],[17729,8],[18822,8],[19980,8]]},"230":{"position":[[436,8],[1205,8],[2388,8],[3511,8]]},"232":{"position":[[227,8],[1040,8],[2132,8],[3289,8]]},"245":{"position":[[484,8],[1286,8],[2367,8],[3513,8]]},"247":{"position":[[195,8],[960,8],[2139,8],[3258,8],[5256,8],[6059,8],[7141,8],[8288,8]]},"288":{"position":[[281,8],[1041,8],[2216,8],[3331,8],[5185,8],[5947,8],[7123,8],[8239,8],[10363,8],[11309,8],[12761,8],[14092,8]]},"312":{"position":[[323,8],[1136,8],[2228,8],[3385,8],[5353,8],[6165,8],[7256,8],[8412,8]]},"318":{"position":[[442,8],[1270,8],[2513,8],[3696,8],[5927,8],[6740,8],[7832,8],[8989,8],[11161,8],[11974,8],[13066,8],[14223,8]]},"338":{"position":[[357,8],[1177,8],[2276,8],[3440,8]]},"345":{"position":[[1301,8],[2111,8],[3200,8],[4354,8]]},"369":{"position":[[305,8],[1239,8],[2644,8],[3943,8],[6241,8],[7056,8],[8150,8],[9309,8]]},"371":{"position":[[207,8],[1251,8],[2766,8],[4175,8]]},"373":{"position":[[153,8],[968,8],[2062,8],[3221,8]]},"385":{"position":[[236,8],[1017,8],[2213,8],[3349,8]]},"387":{"position":[[257,8],[1077,8],[2176,8],[3340,8],[5507,8],[6328,8],[7428,8],[8593,8]]},"445":{"position":[[323,8],[1139,8],[2234,8],[3394,8],[5374,8],[6189,8],[7283,8],[8442,8]]},"449":{"position":[[283,8],[1100,8],[2196,8],[3357,8],[5498,8],[6315,8],[7411,8],[8572,8]]},"467":{"position":[[211,8],[978,8],[2160,8],[3282,8]]},"469":{"position":[[213,8],[1060,8],[2322,8],[3524,8]]},"471":{"position":[[330,8],[1150,8],[2249,8],[3413,8]]},"485":{"position":[[397,8],[1216,8],[2450,8],[3624,8]]},"487":{"position":[[462,8],[1278,8],[2373,8],[3533,8]]},"505":{"position":[[445,8],[1349,8],[2724,8],[3993,8],[6193,8],[7006,8],[8098,8],[9255,8],[11608,8],[12421,8],[13513,8],[14670,8],[16714,8],[17529,8],[18623,8],[19782,8],[21758,8],[22572,8],[23665,8],[24823,8]]},"521":{"position":[[220,8],[989,8],[2173,8],[3297,8]]},"523":{"position":[[553,8],[1399,8],[2660,8],[3861,8]]},"525":{"position":[[390,8],[1212,8],[2313,8],[3479,8]]},"537":{"position":[[299,8],[1119,8],[2410,8],[3595,8]]},"541":{"position":[[306,8],[1122,8],[2409,8],[3590,8]]},"543":{"position":[[317,8],[1085,8],[2268,8],[3391,8]]},"545":{"position":[[163,8],[964,8],[2044,8],[3189,8],[5109,8],[5910,8],[6990,8],[8135,8]]},"547":{"position":[[200,8],[961,8],[2136,8],[3251,8],[5098,8],[5900,8],[6981,8],[8127,8]]},"562":{"position":[[322,8],[1133,8],[2223,8],[3378,8]]},"569":{"position":[[572,8],[1433,8],[2613,8],[3789,8],[6144,8],[6986,8],[8128,8],[9283,8],[11560,8],[12412,8],[13564,8],[14729,8]]},"571":{"position":[[775,8],[1518,8],[2580,8],[3638,8]]},"576":{"position":[[313,8],[1163,8],[2347,8],[3548,8],[5647,8],[6497,8],[7681,8],[8882,8]]},"583":{"position":[[234,8],[1161,8],[2425,8],[3724,8]]},"605":{"position":[[1450,8],[2262,8],[3353,8],[4509,8],[7043,8],[7855,8],[8946,8],[10102,8],[13285,8],[14100,8],[15194,8],[16353,8],[19540,8],[20352,8],[21443,8],[22599,8],[25197,8],[26010,8],[27102,8],[28259,8]]},"607":{"position":[[1295,8],[2108,8],[3200,8],[4357,8],[6964,8],[7780,8],[8875,8],[10035,8],[12725,8],[13539,8],[14632,8],[15790,8],[18467,8],[19281,8],[20374,8],[21532,8]]},"622":{"position":[[449,8],[1334,8],[2634,8],[3874,8]]},"624":{"position":[[264,8],[1087,8],[2189,8],[3356,8]]},"630":{"position":[[174,8],[1158,8],[2613,8],[3962,8]]},"632":{"position":[[193,8],[1008,8],[2102,8],[3261,8]]},"634":{"position":[[174,8],[1015,8],[2270,8],[3465,8],[5563,8],[6379,8],[7474,8],[8634,8],[10613,8],[11432,8],[12530,8],[13693,8]]},"644":{"position":[[955,8],[1769,8],[2862,8],[4020,8],[5992,8],[6805,8],[7897,8],[9054,8]]},"646":{"position":[[264,8],[1084,8],[2319,8],[3494,8],[5456,8],[6273,8],[7369,8],[8530,8]]},"648":{"position":[[239,8],[1151,8],[2311,8],[3531,8],[5898,8],[6743,8],[8059,8],[9269,8],[11346,8],[12193,8],[13510,8],[14721,8],[16909,8],[17723,8],[18816,8],[19974,8],[21991,8],[22803,8],[23894,8],[25050,8]]},"668":{"position":[[4884,8],[5721,8],[6973,8],[8165,8]]},"670":{"position":[[1216,8],[2082,8],[3362,8],[4582,8]]},"692":{"position":[[591,8],[1366,8],[2556,8],[3686,8],[5547,8],[6326,8],[7520,8],[8654,8],[10535,8],[11457,8],[12906,8],[14203,8],[16826,8],[17640,8],[18733,8],[19891,8],[21944,8],[22756,8],[23847,8],[25003,8]]},"694":{"position":[[3009,8],[3984,8],[5542,8],[6902,8],[9437,8],[10254,8],[11350,8],[12511,8]]},"696":{"position":[[2912,8],[3775,8],[5109,8],[6337,8],[8605,8],[9663,8],[11304,8],[12747,8],[15704,8],[16515,8],[17605,8],[18760,8]]},"698":{"position":[[3107,8],[4032,8],[5484,8],[6784,8],[9413,8],[10229,8],[11324,8],[12484,8]]},"718":{"position":[[2148,8],[2982,8],[4231,8],[5420,8],[7427,8],[8247,8],[9346,8],[10510,8],[12574,8],[13408,8],[14657,8],[15846,8],[17810,8],[18630,8],[19729,8],[20893,8],[22966,8],[23793,8],[24899,8],[26070,8],[28533,8],[29617,8],[31228,8],[32687,8],[35380,8],[36200,8],[37299,8],[38463,8]]},"720":{"position":[[209,8],[1024,8],[2118,8],[3277,8],[6909,8],[7723,8],[8816,8],[9974,8]]},"722":{"position":[[6953,8],[7952,8],[9478,8],[10852,8],[13549,8],[14452,8],[15770,8],[17028,8],[19286,8],[20233,8],[21651,8],[22963,8],[25311,8],[26173,8],[27506,8],[28733,8],[30964,8],[31769,8],[32989,8],[34149,8],[36129,8],[36917,8],[38120,8],[39263,8],[41325,8],[42137,8],[43228,8],[44384,8],[46417,8],[47244,8],[48350,8],[49521,8]]},"734":{"position":[[2682,8],[3977,8],[5855,8],[7535,8]]},"740":{"position":[[509,8],[1319,8],[2408,8],[3562,8],[5620,8],[6434,8],[7527,8],[8685,8],[10764,8],[11599,8],[12849,8],[14039,8],[15976,8],[16787,8],[17877,8],[19032,8]]},"742":{"position":[[4624,8],[5430,8],[6515,8],[7665,8],[9856,8],[11059,8],[12789,8],[14367,8],[17396,8],[18354,8],[19783,8],[21106,8],[23518,8],[24328,8],[25417,8],[26571,8]]},"744":{"position":[[1169,8],[2183,8],[3667,8],[5045,8],[7864,8],[8859,8],[10283,8],[11657,8],[14320,8],[15316,8],[16741,8],[18116,8]]},"746":{"position":[[3410,8],[5961,8],[9543,8],[12559,8]]},"767":{"position":[[278,8],[1892,8],[4201,8],[6220,8],[10234,8],[11388,8],[13069,8],[14598,8],[17415,8],[18499,8],[20110,8],[21569,8],[25073,8],[25886,8],[26978,8],[28135,8],[30252,8],[31066,8],[32159,8],[33317,8],[35288,8],[36105,8],[37201,8],[38362,8],[40346,8],[41164,8],[42261,8],[43423,8]]},"769":{"position":[[374,8],[1188,8],[2281,8],[3439,8],[7709,8],[8519,8],[9608,8],[10762,8],[13049,8],[13868,8],[14966,8],[16129,8],[22797,8],[23615,8],[24712,8],[25874,8],[30460,8],[31269,8],[32357,8],[33510,8],[39447,8],[40256,8],[41344,8],[42497,8]]},"786":{"position":[[1909,8],[2685,8],[3876,8],[5007,8],[6900,8],[7715,8],[8809,8],[9968,8],[12008,8],[12784,8],[13975,8],[15106,8],[16956,8],[17771,8],[18865,8],[20024,8],[22000,8],[22816,8],[23911,8],[25071,8],[29151,8],[29966,8],[31060,8],[32219,8],[34195,8],[35010,8],[36104,8],[37263,8]]},"788":{"position":[[2428,8],[3433,8],[4909,8],[6279,8],[8895,8],[9712,8],[10808,8],[11969,8]]},"790":{"position":[[379,8],[1179,8],[2394,8],[3549,8],[5903,8],[6735,8],[7982,8],[9169,8],[11098,8],[11913,8],[13007,8],[14166,8]]},"792":{"position":[[3022,8],[3882,8],[5213,8],[6438,8],[9077,8],[9896,8],[10994,8],[12157,8],[15629,8],[16427,8],[17640,8],[18793,8]]},"809":{"position":[[1906,8],[2685,8],[3879,8],[5013,8],[6918,8],[7736,8],[8833,8],[9995,8],[12045,8],[12820,8],[14010,8],[15140,8],[16987,8],[17801,8],[18894,8],[20052,8],[22024,8],[22840,8],[23935,8],[25095,8],[28663,8],[29477,8],[30570,8],[31728,8],[33700,8],[34515,8],[35609,8],[36768,8]]},"811":{"position":[[2185,8],[3281,8],[4960,8],[6441,8],[9366,8],[10184,8],[11281,8],[12443,8]]},"813":{"position":[[2018,8],[2993,8],[4439,8],[5779,8],[8496,8],[9317,8],[10417,8],[11582,8]]},"815":{"position":[[2890,8],[4038,8],[5713,8],[7236,8],[10024,8],[10846,8],[11947,8],[13113,8],[15193,8],[16017,8],[17120,8],[18288,8],[20299,8],[21125,8],[22230,8],[23400,8],[25498,8],[26322,8],[27425,8],[28593,8],[30604,8],[31428,8],[32531,8],[33699,8]]}}}],["clientsecret",{"_index":330,"t":{"16":{"position":[[12353,12],[13168,12],[14262,12],[15421,12],[17965,12],[18780,12],[19874,12],[21033,12],[23737,12],[24557,12],[25652,12],[26821,12]]},"80":{"position":[[801,12],[1941,12],[3562,12],[5126,12]]},"213":{"position":[[187,12],[956,12],[2140,12],[3264,12]]},"215":{"position":[[197,12],[1009,12],[2100,12],[3256,12],[5362,12],[6176,12],[7269,12],[8427,12]]},"221":{"position":[[1502,12],[2310,12],[3397,12],[4549,12],[6565,12],[7371,12],[8592,12],[9753,12],[11905,12],[12717,12],[13808,12],[14964,12],[16928,12],[17742,12],[18835,12],[19993,12]]},"230":{"position":[[449,12],[1218,12],[2401,12],[3524,12]]},"232":{"position":[[240,12],[1053,12],[2145,12],[3302,12]]},"245":{"position":[[497,12],[1299,12],[2380,12],[3526,12]]},"247":{"position":[[208,12],[973,12],[2152,12],[3271,12],[5269,12],[6072,12],[7154,12],[8301,12]]},"288":{"position":[[294,12],[1054,12],[2229,12],[3344,12],[5198,12],[5960,12],[7136,12],[8252,12],[10376,12],[11322,12],[12774,12],[14105,12]]},"312":{"position":[[336,12],[1149,12],[2241,12],[3398,12],[5366,12],[6178,12],[7269,12],[8425,12]]},"318":{"position":[[455,12],[1283,12],[2526,12],[3709,12],[5940,12],[6753,12],[7845,12],[9002,12],[11174,12],[11987,12],[13079,12],[14236,12]]},"338":{"position":[[370,12],[1190,12],[2289,12],[3453,12]]},"345":{"position":[[1314,12],[2124,12],[3213,12],[4367,12]]},"369":{"position":[[318,12],[1252,12],[2657,12],[3956,12],[6254,12],[7069,12],[8163,12],[9322,12]]},"371":{"position":[[220,12],[1264,12],[2779,12],[4188,12]]},"373":{"position":[[166,12],[981,12],[2075,12],[3234,12]]},"385":{"position":[[249,12],[1030,12],[2226,12],[3362,12]]},"387":{"position":[[270,12],[1090,12],[2189,12],[3353,12],[5520,12],[6341,12],[7441,12],[8606,12]]},"445":{"position":[[336,12],[1152,12],[2247,12],[3407,12],[5387,12],[6202,12],[7296,12],[8455,12]]},"449":{"position":[[296,12],[1113,12],[2209,12],[3370,12],[5511,12],[6328,12],[7424,12],[8585,12]]},"467":{"position":[[224,12],[991,12],[2173,12],[3295,12]]},"469":{"position":[[226,12],[1073,12],[2335,12],[3537,12]]},"471":{"position":[[343,12],[1163,12],[2262,12],[3426,12]]},"485":{"position":[[410,12],[1229,12],[2463,12],[3637,12]]},"487":{"position":[[475,12],[1291,12],[2386,12],[3546,12]]},"505":{"position":[[458,12],[1362,12],[2737,12],[4006,12],[6206,12],[7019,12],[8111,12],[9268,12],[11621,12],[12434,12],[13526,12],[14683,12],[16727,12],[17542,12],[18636,12],[19795,12],[21771,12],[22585,12],[23678,12],[24836,12]]},"521":{"position":[[233,12],[1002,12],[2186,12],[3310,12]]},"523":{"position":[[566,12],[1412,12],[2673,12],[3874,12]]},"525":{"position":[[403,12],[1225,12],[2326,12],[3492,12]]},"537":{"position":[[312,12],[1132,12],[2423,12],[3608,12]]},"541":{"position":[[319,12],[1135,12],[2422,12],[3603,12]]},"543":{"position":[[330,12],[1098,12],[2281,12],[3404,12]]},"545":{"position":[[176,12],[977,12],[2057,12],[3202,12],[5122,12],[5923,12],[7003,12],[8148,12]]},"547":{"position":[[213,12],[974,12],[2149,12],[3264,12],[5111,12],[5913,12],[6994,12],[8140,12]]},"562":{"position":[[335,12],[1146,12],[2236,12],[3391,12]]},"569":{"position":[[585,12],[1446,12],[2626,12],[3802,12],[6157,12],[6999,12],[8141,12],[9296,12],[11573,12],[12425,12],[13577,12],[14742,12]]},"571":{"position":[[788,12],[1531,12],[2593,12],[3651,12]]},"576":{"position":[[326,12],[1176,12],[2360,12],[3561,12],[5660,12],[6510,12],[7694,12],[8895,12]]},"583":{"position":[[247,12],[1174,12],[2438,12],[3737,12]]},"605":{"position":[[1463,12],[2275,12],[3366,12],[4522,12],[7056,12],[7868,12],[8959,12],[10115,12],[13298,12],[14113,12],[15207,12],[16366,12],[19553,12],[20365,12],[21456,12],[22612,12],[25210,12],[26023,12],[27115,12],[28272,12]]},"607":{"position":[[1308,12],[2121,12],[3213,12],[4370,12],[6977,12],[7793,12],[8888,12],[10048,12],[12738,12],[13552,12],[14645,12],[15803,12],[18480,12],[19294,12],[20387,12],[21545,12]]},"622":{"position":[[462,12],[1347,12],[2647,12],[3887,12]]},"624":{"position":[[277,12],[1100,12],[2202,12],[3369,12]]},"630":{"position":[[187,12],[1171,12],[2626,12],[3975,12]]},"632":{"position":[[206,12],[1021,12],[2115,12],[3274,12]]},"634":{"position":[[187,12],[1028,12],[2283,12],[3478,12],[5576,12],[6392,12],[7487,12],[8647,12],[10626,12],[11445,12],[12543,12],[13706,12]]},"644":{"position":[[968,12],[1782,12],[2875,12],[4033,12],[6005,12],[6818,12],[7910,12],[9067,12]]},"646":{"position":[[277,12],[1097,12],[2332,12],[3507,12],[5469,12],[6286,12],[7382,12],[8543,12]]},"648":{"position":[[252,12],[1164,12],[2324,12],[3544,12],[5911,12],[6756,12],[8072,12],[9282,12],[11359,12],[12206,12],[13523,12],[14734,12],[16922,12],[17736,12],[18829,12],[19987,12],[22004,12],[22816,12],[23907,12],[25063,12]]},"668":{"position":[[4897,12],[5734,12],[6986,12],[8178,12]]},"670":{"position":[[1229,12],[2095,12],[3375,12],[4595,12]]},"692":{"position":[[604,12],[1379,12],[2569,12],[3699,12],[5560,12],[6339,12],[7533,12],[8667,12],[10548,12],[11470,12],[12919,12],[14216,12],[16839,12],[17653,12],[18746,12],[19904,12],[21957,12],[22769,12],[23860,12],[25016,12]]},"694":{"position":[[3022,12],[3997,12],[5555,12],[6915,12],[9450,12],[10267,12],[11363,12],[12524,12]]},"696":{"position":[[2925,12],[3788,12],[5122,12],[6350,12],[8618,12],[9676,12],[11317,12],[12760,12],[15717,12],[16528,12],[17618,12],[18773,12]]},"698":{"position":[[3120,12],[4045,12],[5497,12],[6797,12],[9426,12],[10242,12],[11337,12],[12497,12]]},"718":{"position":[[2161,12],[2995,12],[4244,12],[5433,12],[7440,12],[8260,12],[9359,12],[10523,12],[12587,12],[13421,12],[14670,12],[15859,12],[17823,12],[18643,12],[19742,12],[20906,12],[22979,12],[23806,12],[24912,12],[26083,12],[28546,12],[29630,12],[31241,12],[32700,12],[35393,12],[36213,12],[37312,12],[38476,12]]},"720":{"position":[[222,12],[1037,12],[2131,12],[3290,12],[6922,12],[7736,12],[8829,12],[9987,12]]},"722":{"position":[[6966,12],[7965,12],[9491,12],[10865,12],[13562,12],[14465,12],[15783,12],[17041,12],[19299,12],[20246,12],[21664,12],[22976,12],[25324,12],[26186,12],[27519,12],[28746,12],[30977,12],[31782,12],[33002,12],[34162,12],[36142,12],[36930,12],[38133,12],[39276,12],[41338,12],[42150,12],[43241,12],[44397,12],[46430,12],[47257,12],[48363,12],[49534,12]]},"734":{"position":[[2695,12],[3990,12],[5868,12],[7548,12]]},"740":{"position":[[522,12],[1332,12],[2421,12],[3575,12],[5633,12],[6447,12],[7540,12],[8698,12],[10777,12],[11612,12],[12862,12],[14052,12],[15989,12],[16800,12],[17890,12],[19045,12]]},"742":{"position":[[4637,12],[5443,12],[6528,12],[7678,12],[9869,12],[11072,12],[12802,12],[14380,12],[17409,12],[18367,12],[19796,12],[21119,12],[23531,12],[24341,12],[25430,12],[26584,12]]},"744":{"position":[[1182,12],[2196,12],[3680,12],[5058,12],[7877,12],[8872,12],[10296,12],[11670,12],[14333,12],[15329,12],[16754,12],[18129,12]]},"746":{"position":[[3423,12],[5974,12],[9556,12],[12572,12]]},"767":{"position":[[291,12],[1905,12],[4214,12],[6233,12],[10247,12],[11401,12],[13082,12],[14611,12],[17428,12],[18512,12],[20123,12],[21582,12],[25086,12],[25899,12],[26991,12],[28148,12],[30265,12],[31079,12],[32172,12],[33330,12],[35301,12],[36118,12],[37214,12],[38375,12],[40359,12],[41177,12],[42274,12],[43436,12]]},"769":{"position":[[387,12],[1201,12],[2294,12],[3452,12],[7722,12],[8532,12],[9621,12],[10775,12],[13062,12],[13881,12],[14979,12],[16142,12],[22810,12],[23628,12],[24725,12],[25887,12],[30473,12],[31282,12],[32370,12],[33523,12],[39460,12],[40269,12],[41357,12],[42510,12]]},"786":{"position":[[1922,12],[2698,12],[3889,12],[5020,12],[6913,12],[7728,12],[8822,12],[9981,12],[12021,12],[12797,12],[13988,12],[15119,12],[16969,12],[17784,12],[18878,12],[20037,12],[22013,12],[22829,12],[23924,12],[25084,12],[29164,12],[29979,12],[31073,12],[32232,12],[34208,12],[35023,12],[36117,12],[37276,12]]},"788":{"position":[[2441,12],[3446,12],[4922,12],[6292,12],[8908,12],[9725,12],[10821,12],[11982,12]]},"790":{"position":[[392,12],[1192,12],[2407,12],[3562,12],[5916,12],[6748,12],[7995,12],[9182,12],[11111,12],[11926,12],[13020,12],[14179,12]]},"792":{"position":[[3035,12],[3895,12],[5226,12],[6451,12],[9090,12],[9909,12],[11007,12],[12170,12],[15642,12],[16440,12],[17653,12],[18806,12]]},"809":{"position":[[1919,12],[2698,12],[3892,12],[5026,12],[6931,12],[7749,12],[8846,12],[10008,12],[12058,12],[12833,12],[14023,12],[15153,12],[17000,12],[17814,12],[18907,12],[20065,12],[22037,12],[22853,12],[23948,12],[25108,12],[28676,12],[29490,12],[30583,12],[31741,12],[33713,12],[34528,12],[35622,12],[36781,12]]},"811":{"position":[[2198,12],[3294,12],[4973,12],[6454,12],[9379,12],[10197,12],[11294,12],[12456,12]]},"813":{"position":[[2031,12],[3006,12],[4452,12],[5792,12],[8509,12],[9330,12],[10430,12],[11595,12]]},"815":{"position":[[2903,12],[4051,12],[5726,12],[7249,12],[10037,12],[10859,12],[11960,12],[13126,12],[15206,12],[16030,12],[17133,12],[18301,12],[20312,12],[21138,12],[22243,12],[23413,12],[25511,12],[26335,12],[27438,12],[28606,12],[30617,12],[31441,12],[32544,12],[33712,12]]}}}],["clipboard",{"_index":1618,"t":{"403":{"position":[[10701,10]]}}}],["close",{"_index":196,"t":{"16":{"position":[[3041,7]]},"52":{"position":[[476,7]]},"68":{"position":[[44,7]]},"769":{"position":[[20305,6]]}}}],["closer",{"_index":527,"t":{"56":{"position":[[1038,6]]}}}],["cmd",{"_index":941,"t":{"142":{"position":[[1815,4],[4450,7]]}}}],["code",{"_index":170,"t":{"16":{"position":[[784,4],[1582,4],[17606,5],[23372,5]]},"102":{"position":[[316,5],[1245,5]]},"142":{"position":[[1532,4],[4179,4]]},"425":{"position":[[1667,4]]},"431":{"position":[[1033,4],[1164,4]]},"491":{"position":[[1671,4]]},"769":{"position":[[21414,4]]},"779":{"position":[[49,5]]}}}],["codifi",{"_index":1526,"t":{"393":{"position":[[1269,6]]},"395":{"position":[[41,9]]}}}],["collabor",{"_index":1600,"t":{"403":{"position":[[3146,11]]},"779":{"position":[[34,11]]},"802":{"position":[[46,11]]}}}],["collect",{"_index":1070,"t":{"154":{"position":[[26,9],[228,7]]},"156":{"position":[[20,9]]},"158":{"position":[[22,9]]},"343":{"position":[[30,10]]},"581":{"position":[[273,12]]}}}],["collector",{"_index":1073,"t":{"154":{"position":[[315,10]]}}}],["combin",{"_index":181,"t":{"16":{"position":[[1480,11],[4193,11],[4592,11]]},"22":{"position":[[28,11]]},"403":{"position":[[9861,9]]},"453":{"position":[[306,8]]},"585":{"position":[[830,11]]},"742":{"position":[[1088,7],[2406,7]]},"769":{"position":[[44413,12]]}}}],["come",{"_index":1500,"t":{"373":{"position":[[5118,4]]},"790":{"position":[[5570,4]]},"815":{"position":[[425,4]]}}}],["command",{"_index":931,"t":{"142":{"position":[[1016,7],[2003,8],[2474,8],[3703,7],[4674,8],[5105,8]]},"144":{"position":[[1410,8],[2930,7]]},"178":{"position":[[146,8]]}}}],["comment",{"_index":176,"t":{"16":{"position":[[901,10],[1025,12],[1205,12],[1735,10],[2004,12],[2228,12],[6708,10],[6866,12],[7046,12],[7364,10]]},"340":{"position":[[142,10]]},"399":{"position":[[4498,7]]},"507":{"position":[[257,10]]},"796":{"position":[[541,10],[831,10]]},"804":{"position":[[188,10]]},"806":{"position":[[267,10],[498,7]]},"809":{"position":[[126,10],[477,10],[674,12],[897,12],[1747,9],[2526,12],[4855,12],[6781,9],[7615,12],[8611,12],[9814,12],[11710,12],[11733,11],[27375,10],[27428,9],[27673,12],[27866,11],[28057,12],[28493,11]]},"811":{"position":[[88,9],[545,10],[626,9],[915,12],[1108,11],[1387,12]]},"813":{"position":[[645,10],[726,9],[997,12],[1190,11],[1542,12],[13721,11],[14038,13],[14102,11],[14976,10],[15021,9],[15082,9],[15666,12],[15823,11],[15971,11],[16458,12]]},"815":{"position":[[243,9],[733,10],[778,9],[846,9],[1430,12],[1587,11],[1735,11],[2222,12],[2712,10],[3646,7],[3725,12],[5069,7],[6827,7],[6914,12],[8333,7],[9558,7],[15078,7],[20996,12],[22000,12],[23211,12],[25131,12],[25154,11]]}}}],["common",{"_index":1373,"t":{"298":{"position":[[245,6]]},"403":{"position":[[1512,7],[7534,6]]}}}],["commonli",{"_index":1379,"t":{"304":{"position":[[590,8]]}}}],["commun",{"_index":924,"t":{"142":{"position":[[606,13]]},"611":{"position":[[448,11]]},"704":{"position":[[54,13]]},"710":{"position":[[187,12]]},"724":{"position":[[110,13],[307,13]]}}}],["compani",{"_index":98,"t":{"8":{"position":[[603,7]]},"16":{"position":[[6426,7]]},"204":{"position":[[228,7],[353,7],[532,10],[843,10]]},"211":{"position":[[44,7],[214,7]]},"219":{"position":[[158,7]]},"365":{"position":[[383,7]]},"485":{"position":[[6138,7]]},"660":{"position":[[235,9],[278,9],[576,9]]},"728":{"position":[[488,7]]}}}],["company#employe",{"_index":1181,"t":{"204":{"position":[[434,18]]}}}],["company'",{"_index":1202,"t":{"219":{"position":[[202,9],[277,9]]}}}],["company:xyz",{"_index":1183,"t":{"213":{"position":[[62,12],[814,14],[3124,13]]},"215":{"position":[[5246,12]]},"343":{"position":[[593,11]]}}}],["company:xyz#employe",{"_index":1182,"t":{"211":{"position":[[259,23]]},"343":{"position":[[531,20]]}}}],["compar",{"_index":963,"t":{"142":{"position":[[3092,8]]}}}],["compat",{"_index":1067,"t":{"152":{"position":[[1030,13]]},"644":{"position":[[57,10],[89,10]]},"646":{"position":[[30,10]]}}}],["compil",{"_index":494,"t":{"52":{"position":[[590,8]]}}}],["complet",{"_index":219,"t":{"16":{"position":[[3821,10]]},"263":{"position":[[469,10]]},"399":{"position":[[1958,8]]},"403":{"position":[[2752,8],[2782,8],[9341,8],[9371,8]]},"407":{"position":[[161,8]]},"769":{"position":[[18050,9],[21287,11]]}}}],["complex",{"_index":1291,"t":{"263":{"position":[[95,7]]},"397":{"position":[[250,7]]},"700":{"position":[[209,7]]},"718":{"position":[[61,11]]},"809":{"position":[[76,10]]}}}],["compon",{"_index":1560,"t":{"401":{"position":[[88,9]]}}}],["compos",{"_index":469,"t":{"16":{"position":[[29051,8]]},"142":{"position":[[462,7],[2735,7],[3311,7],[5366,7]]}}}],["compose.yaml",{"_index":935,"t":{"142":{"position":[[1575,12],[4222,12]]},"154":{"position":[[186,12]]}}}],["compris",{"_index":1384,"t":{"306":{"position":[[409,10]]}}}],["comput",{"_index":309,"t":{"16":{"position":[[10095,9]]},"40":{"position":[[272,9]]},"347":{"position":[[1119,11]]},"576":{"position":[[5433,12]]},"670":{"position":[[421,7]]},"769":{"position":[[20876,9]]},"771":{"position":[[514,8]]}}}],["computed_userset",{"_index":596,"t":{"68":{"position":[[521,16],[645,16],[746,16]]}}}],["computeduserset",{"_index":317,"t":{"16":{"position":[[11532,18]]},"54":{"position":[[1088,18],[1279,18],[1432,18],[1574,18],[1695,18],[1836,18],[2410,18],[2601,18],[2754,18],[2896,18],[3017,18],[3158,18]]},"58":{"position":[[341,18],[410,18]]},"60":{"position":[[966,18],[1704,18]]},"62":{"position":[[338,18]]},"64":{"position":[[357,18],[415,18]]},"66":{"position":[[443,18]]},"68":{"position":[[1217,18],[1321,18],[1428,18],[2027,18],[2134,18]]},"316":{"position":[[672,18]]},"336":{"position":[[438,18]]},"347":{"position":[[363,18]]},"355":{"position":[[769,18]]},"367":{"position":[[621,18]]},"419":{"position":[[692,18],[892,18],[1027,18],[3001,18],[3374,18],[3509,18]]},"423":{"position":[[2055,18],[2471,18],[2606,18]]},"429":{"position":[[1394,18]]},"437":{"position":[[1050,18]]},"447":{"position":[[581,18],[689,18],[823,18]]},"465":{"position":[[695,18]]},"503":{"position":[[1080,18],[1170,18],[1219,18]]},"539":{"position":[[466,18]]},"553":{"position":[[652,18]]},"601":{"position":[[590,18]]},"605":{"position":[[401,18]]},"607":{"position":[[374,18]]},"628":{"position":[[542,18]]},"642":{"position":[[479,18],[1095,18]]},"644":{"position":[[569,18],[637,18],[712,18]]},"650":{"position":[[343,18]]},"660":{"position":[[1934,18],[2113,18],[2259,18],[2332,18],[2416,18],[2492,18],[2567,18]]},"668":{"position":[[1478,18],[1619,18],[1746,18],[1822,18]]},"672":{"position":[[838,18],[979,18],[1106,18],[1182,18],[1809,18],[1917,18],[2052,18],[2198,18],[2291,18],[2367,18],[2442,18]]},"694":{"position":[[1632,18],[1683,18],[1811,18],[1862,18],[1983,18]]},"696":{"position":[[1419,18],[1470,18],[1598,18],[1649,18],[1770,18]]},"698":{"position":[[1229,18],[1280,18],[1392,18],[1443,18],[1548,18]]},"720":{"position":[[6178,18],[6289,18],[6346,18]]},"722":{"position":[[3488,18],[5146,18],[5257,18],[5314,18],[5874,18]]},"734":{"position":[[1300,18],[1436,18],[1501,18],[1591,18],[1985,18]]},"742":{"position":[[1823,18],[1977,18],[3230,18],[3389,18],[3533,18],[3648,18],[3713,18],[3810,18]]},"746":{"position":[[1157,18],[1311,18],[1832,18],[1991,18],[2135,18],[2250,18],[2315,18],[2412,18],[2806,18]]},"748":{"position":[[1557,18],[1711,18],[2299,18],[2458,18],[2602,18],[2717,18],[2782,18],[2879,18],[3273,18]]},"769":{"position":[[18290,18],[19285,18],[22009,18],[29201,18],[29599,18],[36256,18],[36780,18],[38106,18],[38429,18]]},"786":{"position":[[27592,18],[27699,18],[27804,18],[27917,18],[28579,18]]},"788":{"position":[[1202,18],[1309,18],[1414,18],[1527,18]]},"792":{"position":[[1661,18],[1768,18],[1873,18],[1986,18],[14351,18],[21386,18],[21533,18],[21637,18],[21710,18],[21855,18],[21960,18],[22030,18]]},"809":{"position":[[27621,18],[27728,18],[27833,18]]},"811":{"position":[[863,18],[970,18],[1075,18]]},"813":{"position":[[945,18],[1052,18],[1157,18],[13688,18],[13798,18],[15361,18],[15505,18],[15573,18],[15721,18],[15790,18],[15938,18],[16010,18]]},"815":{"position":[[1125,18],[1269,18],[1337,18],[1485,18],[1554,18],[1702,18],[1774,18]]}}}],["concentr",{"_index":546,"t":{"58":{"position":[[2157,10]]},"62":{"position":[[1546,10]]},"324":{"position":[[130,10]]},"326":{"position":[[53,10],[184,10]]},"336":{"position":[[61,10]]},"340":{"position":[[45,10]]},"349":{"position":[[519,10]]},"507":{"position":[[100,10],[156,10]]},"678":{"position":[[421,10]]},"694":{"position":[[522,10]]},"704":{"position":[[333,10],[556,10]]},"706":{"position":[[421,10]]},"720":{"position":[[5550,10]]},"773":{"position":[[439,10],[569,10]]},"775":{"position":[[270,10]]},"786":{"position":[[27159,12]]},"796":{"position":[[329,10],[459,10]]},"798":{"position":[[270,10]]},"809":{"position":[[27191,12]]}}}],["concept",{"_index":13,"t":{"4":{"position":[[82,7]]},"16":{"position":[[343,9],[3126,9]]},"50":{"position":[[97,8],[130,8]]},"52":{"position":[[1006,8]]},"70":{"position":[[114,8],[147,9]]},"72":{"position":[[147,8]]},"204":{"position":[[83,8],[1068,9]]},"221":{"position":[[83,8],[22080,9]]},"238":{"position":[[83,8],[787,9]]},"279":{"position":[[83,8],[1387,9]]},"294":{"position":[[25,8]]},"306":{"position":[[73,8],[1697,9]]},"328":{"position":[[74,8],[1200,9]]},"355":{"position":[[73,8],[1383,8],[1426,8]]},"363":{"position":[[8,8]]},"375":{"position":[[196,9]]},"379":{"position":[[83,8],[779,9]]},"389":{"position":[[76,8],[109,9]]},"409":{"position":[[76,8],[109,9]]},"437":{"position":[[83,8],[2686,9]]},"455":{"position":[[83,8],[1071,9]]},"463":{"position":[[249,9]]},"473":{"position":[[93,9]]},"477":{"position":[[83,8],[840,9],[1478,7]]},"481":{"position":[[628,7]]},"493":{"position":[[83,8],[930,9]]},"507":{"position":[[90,9]]},"511":{"position":[[83,8],[818,9]]},"517":{"position":[[285,7]]},"531":{"position":[[83,8],[771,9]]},"553":{"position":[[83,8],[1242,9]]},"593":{"position":[[74,8],[191,8],[359,9]]},"613":{"position":[[73,8],[1015,9]]},"640":{"position":[[63,9]]},"656":{"position":[[63,9]]},"670":{"position":[[490,7]]},"678":{"position":[[83,8],[160,9],[223,8],[1269,8],[1317,8]]},"680":{"position":[[53,8]]},"700":{"position":[[134,8]]},"706":{"position":[[83,8],[160,9],[223,8],[581,8],[629,8]]},"708":{"position":[[53,8]]},"724":{"position":[[56,9],[405,8]]},"730":{"position":[[63,9]]},"744":{"position":[[7356,7]]},"754":{"position":[[83,8],[160,9],[223,8],[1018,8],[1066,8]]},"756":{"position":[[53,8]]},"758":{"position":[[370,7]]},"771":{"position":[[716,8]]},"773":{"position":[[559,9]]},"775":{"position":[[83,8],[160,9],[223,8],[758,8],[806,8]]},"777":{"position":[[53,8]]},"788":{"position":[[8625,8]]},"796":{"position":[[449,9]]},"798":{"position":[[83,8],[160,9],[223,8],[860,8],[907,8]]},"800":{"position":[[53,8]]},"811":{"position":[[9090,8]]}}}],["concepts/build",{"_index":1369,"t":{"296":{"position":[[1357,17]]}}}],["conceptu",{"_index":1679,"t":{"423":{"position":[[948,12]]}}}],["concern",{"_index":2309,"t":{"722":{"position":[[135,10]]}}}],["concis",{"_index":2500,"t":{"748":{"position":[[28,8]]}}}],["concret",{"_index":560,"t":{"60":{"position":[[3097,8]]},"429":{"position":[[374,8]]},"471":{"position":[[5969,8]]}}}],["condit",{"_index":259,"t":{"16":{"position":[[5619,10]]},"32":{"position":[[32,10]]},"52":{"position":[[297,10]]},"62":{"position":[[608,10]]},"64":{"position":[[685,10]]},"142":{"position":[[1922,10],[2211,10],[4593,10],[4862,10]]},"397":{"position":[[1276,12]]},"399":{"position":[[291,12],[2046,10]]},"435":{"position":[[228,10]]},"704":{"position":[[621,9]]},"771":{"position":[[423,9]]},"773":{"position":[[721,9]]},"796":{"position":[[590,9]]}}}],["config",{"_index":907,"t":{"140":{"position":[[581,6]]},"152":{"position":[[138,7]]},"172":{"position":[[977,7],[1611,7],[2545,6]]}}}],["config.yaml",{"_index":894,"t":{"140":{"position":[[44,11],[66,11]]},"144":{"position":[[623,11],[2057,11]]}}}],["configur",{"_index":167,"t":{"16":{"position":[[674,13],[3344,13],[7296,13],[13344,14],[14558,13],[14578,15],[15530,13],[18956,14],[20170,13],[20190,15],[21142,13],[24733,14],[25948,13],[25968,15],[26930,13]]},"20":{"position":[[23,13]]},"52":{"position":[[14,13],[409,13]]},"54":{"position":[[116,13]]},"70":{"position":[[56,13]]},"74":{"position":[[295,9],[354,9],[401,9]]},"76":{"position":[[29,9]]},"80":{"position":[[24,9],[628,9],[2117,14],[3858,13],[3878,15],[5235,13]]},"82":{"position":[[69,9]]},"86":{"position":[[519,14],[1258,13],[1278,15],[1869,13]]},"90":{"position":[[198,10],[562,10]]},"98":{"position":[[1101,9],[4513,14]]},"102":{"position":[[413,14]]},"108":{"position":[[207,10],[530,10],[853,10],[1176,10],[1471,10]]},"112":{"position":[[47,9],[751,14],[1550,13],[1570,15],[2174,13]]},"120":{"position":[[207,10],[530,10],[853,10],[1176,10],[1471,10]]},"124":{"position":[[47,9],[751,14],[1550,13],[1570,15],[2174,13]]},"130":{"position":[[112,9]]},"136":{"position":[[84,9]]},"138":{"position":[[324,13]]},"140":{"position":[[8,9],[214,13],[270,13],[526,14],[667,14],[720,13]]},"142":{"position":[[2808,9],[5436,9]]},"144":{"position":[[8,9],[227,9],[374,9],[525,9],[564,13],[796,9],[885,9],[988,14],[1040,9],[1143,9],[1240,9],[1718,9],[1959,9],[1998,13],[2245,9],[2329,9],[2409,9],[2513,14],[2565,9],[2668,9],[2765,9]]},"146":{"position":[[403,11]]},"150":{"position":[[11,10]]},"160":{"position":[[60,10]]},"170":{"position":[[564,14],[1168,13],[1188,15],[1683,13]]},"172":{"position":[[1099,14],[2002,13],[2022,15],[2978,13]]},"186":{"position":[[207,10],[494,10],[781,10],[1068,10],[1327,10]]},"190":{"position":[[47,9],[751,14],[1550,13],[1570,15],[2174,13]]},"213":{"position":[[1132,14],[2436,13],[2456,15],[3373,13]]},"215":{"position":[[1185,14],[2396,13],[2416,15],[3365,13],[6352,14],[7565,13],[7585,15],[8536,13]]},"221":{"position":[[2486,14],[3693,13],[3713,15],[4658,13],[7547,14],[8888,13],[8908,15],[9862,13],[12893,14],[14104,13],[14124,15],[15073,13],[17918,14],[19131,13],[19151,15],[20102,13]]},"230":{"position":[[1394,14],[2697,13],[2717,15],[3633,13]]},"232":{"position":[[1229,14],[2441,13],[2461,15],[3411,13]]},"245":{"position":[[1475,14],[2676,13],[2696,15],[3635,13]]},"247":{"position":[[1149,14],[2448,13],[2468,15],[3380,13],[6248,14],[7450,13],[7470,15],[8410,13]]},"253":{"position":[[207,10],[529,10],[851,10],[1138,10],[1397,10]]},"257":{"position":[[23,9],[727,14],[1526,13],[1546,15],[2150,13]]},"288":{"position":[[1230,14],[2525,13],[2545,15],[3453,13],[6136,14],[7432,13],[7452,15],[8361,13],[11498,14],[13070,13],[13090,15],[14214,13]]},"312":{"position":[[1325,14],[2537,13],[2557,15],[3507,13],[6354,14],[7565,13],[7585,15],[8534,13]]},"318":{"position":[[1459,14],[2822,13],[2842,15],[3818,13],[6929,14],[8141,13],[8161,15],[9111,13],[12163,14],[13375,13],[13395,15],[14345,13]]},"320":{"position":[[145,13],[188,13]]},"338":{"position":[[1366,14],[2585,13],[2605,15],[3562,13]]},"345":{"position":[[2300,14],[3509,13],[3529,15],[4476,13]]},"355":{"position":[[1394,13],[1435,13]]},"363":{"position":[[17,13]]},"369":{"position":[[1428,14],[2953,13],[2973,15],[4065,13],[7245,14],[8459,13],[8479,15],[9431,13]]},"371":{"position":[[1440,14],[3075,13],[3095,15],[4297,13]]},"373":{"position":[[1157,14],[2371,13],[2391,15],[3343,13]]},"385":{"position":[[1206,14],[2522,13],[2542,15],[3471,13]]},"387":{"position":[[1266,14],[2485,13],[2505,15],[3462,13],[6517,14],[7737,13],[7757,15],[8715,13]]},"389":{"position":[[201,13],[244,13]]},"399":{"position":[[4080,13]]},"401":{"position":[[2782,13]]},"403":{"position":[[24,13],[7328,13],[8485,13],[8939,13],[9286,13],[10664,13]]},"409":{"position":[[124,13],[167,13]]},"445":{"position":[[1328,14],[2543,13],[2563,15],[3516,13],[6378,14],[7592,13],[7612,15],[8564,13]]},"449":{"position":[[1289,14],[2505,13],[2525,15],[3479,13],[6504,14],[7720,13],[7740,15],[8694,13]]},"453":{"position":[[322,10]]},"467":{"position":[[1167,14],[2469,13],[2489,15],[3404,13]]},"469":{"position":[[1249,14],[2631,13],[2651,15],[3646,13]]},"471":{"position":[[135,13],[1339,14],[2558,13],[2578,15],[3535,13]]},"485":{"position":[[1405,14],[2759,13],[2779,15],[3746,13]]},"487":{"position":[[1467,14],[2682,13],[2702,15],[3655,13]]},"489":{"position":[[145,13],[188,13]]},"505":{"position":[[1538,14],[3033,13],[3053,15],[4115,13],[7195,14],[8407,13],[8427,15],[9377,13],[12610,14],[13822,13],[13842,15],[14792,13],[17718,14],[18932,13],[18952,15],[19904,13],[22761,14],[23974,13],[23994,15],[24945,13]]},"521":{"position":[[1178,14],[2482,13],[2502,15],[3419,13]]},"523":{"position":[[1588,14],[2969,13],[2989,15],[3983,13]]},"525":{"position":[[1401,14],[2622,13],[2642,15],[3601,13]]},"537":{"position":[[1308,14],[2719,13],[2739,15],[3717,13]]},"541":{"position":[[1311,14],[2718,13],[2738,15],[3712,13]]},"543":{"position":[[1274,14],[2577,13],[2597,15],[3513,13]]},"545":{"position":[[1153,14],[2353,13],[2373,15],[3311,13],[6099,14],[7299,13],[7319,15],[8257,13]]},"547":{"position":[[1150,14],[2445,13],[2465,15],[3373,13],[6089,14],[7290,13],[7310,15],[8249,13]]},"562":{"position":[[1322,14],[2532,13],[2552,15],[3500,13]]},"569":{"position":[[1622,14],[2922,13],[2942,15],[3911,13],[7175,14],[8437,13],[8457,15],[9405,13],[12601,14],[13873,13],[13893,15],[14851,13]]},"571":{"position":[[1707,14],[2889,13],[2909,15],[3760,13]]},"576":{"position":[[1352,14],[2656,13],[2676,15],[3670,13],[6686,14],[7990,13],[8010,15],[9004,13]]},"583":{"position":[[1350,14],[2734,13],[2754,15],[3846,13]]},"585":{"position":[[138,10],[193,11],[255,14]]},"605":{"position":[[2451,14],[3662,13],[3682,15],[4631,13],[8044,14],[9255,13],[9275,15],[10224,13],[14289,14],[15503,13],[15523,15],[16475,13],[20541,14],[21752,13],[21772,15],[22721,13],[26199,14],[27411,13],[27431,15],[28381,13]]},"607":{"position":[[2297,14],[3509,13],[3529,15],[4479,13],[7969,14],[9184,13],[9204,15],[10157,13],[13728,14],[14941,13],[14961,15],[15912,13],[19470,14],[20683,13],[20703,15],[21654,13]]},"622":{"position":[[1523,14],[2943,13],[2963,15],[3996,13]]},"624":{"position":[[1276,14],[2498,13],[2518,15],[3478,13],[5596,13]]},"630":{"position":[[1347,14],[2922,13],[2942,15],[4084,13]]},"632":{"position":[[1197,14],[2411,13],[2431,15],[3383,13]]},"634":{"position":[[1204,14],[2579,13],[2599,15],[3587,13],[6568,14],[7783,13],[7803,15],[8756,13],[11621,14],[12839,13],[12859,15],[13815,13]]},"644":{"position":[[1958,14],[3171,13],[3191,15],[4142,13],[6994,14],[8206,13],[8226,15],[9176,13]]},"646":{"position":[[1273,14],[2628,13],[2648,15],[3616,13],[6462,14],[7678,13],[7698,15],[8652,13]]},"648":{"position":[[1340,14],[2620,13],[2640,15],[3653,13],[6932,14],[8368,13],[8388,15],[9391,13],[12382,14],[13819,13],[13839,15],[14843,13],[17912,14],[19125,13],[19145,15],[20096,13],[22992,14],[24203,13],[24223,15],[25172,13]]},"668":{"position":[[133,13],[5910,14],[7282,13],[7302,15],[8287,13]]},"670":{"position":[[2271,14],[3671,13],[3691,15],[4704,13]]},"678":{"position":[[1280,13],[1326,13]]},"692":{"position":[[1555,14],[2865,13],[2885,15],[3808,13],[6515,14],[7829,13],[7849,15],[8776,13],[11646,14],[13215,13],[13235,15],[14325,13],[17829,14],[19042,13],[19062,15],[20013,13],[22945,14],[24156,13],[24176,15],[25125,13]]},"694":{"position":[[478,14],[4173,14],[5851,13],[5871,15],[7024,13],[10443,14],[11659,13],[11679,15],[12633,13]]},"696":{"position":[[3964,14],[5418,13],[5438,15],[6459,13],[9852,14],[11613,13],[11633,15],[12869,13],[16704,14],[17914,13],[17934,15],[18882,13]]},"698":{"position":[[4221,14],[5793,13],[5813,15],[6906,13],[9308,14],[10418,14],[11633,13],[11653,15],[12606,13]]},"706":{"position":[[592,13],[638,13]]},"718":{"position":[[3171,14],[4540,13],[4560,15],[5542,13],[8436,14],[9655,13],[9675,15],[10632,13],[13597,14],[14966,13],[14986,15],[15968,13],[18819,14],[20038,13],[20058,15],[21015,13],[23982,14],[25208,13],[25228,15],[26192,13],[29806,14],[31537,13],[31557,15],[32809,13],[36389,14],[37608,13],[37628,15],[38585,13]]},"720":{"position":[[1213,14],[2427,13],[2447,15],[3399,13],[7912,14],[9125,13],[9145,15],[10096,13]]},"722":{"position":[[1613,13],[2702,13],[8141,14],[9787,13],[9807,15],[10974,13],[14641,14],[16079,13],[16099,15],[17150,13],[19889,13],[20422,14],[21055,13],[21960,13],[21980,15],[22602,13],[23085,13],[23901,13],[24808,13],[26362,14],[27815,13],[27835,15],[28855,13],[31958,14],[33298,13],[33318,15],[34271,13],[37106,14],[38429,13],[38449,15],[39385,13],[41135,13],[42326,14],[43537,13],[43557,15],[44506,13],[47433,14],[48659,13],[48679,15],[49643,13]]},"726":{"position":[[172,13],[331,14]]},"734":{"position":[[4166,14],[6164,13],[6184,15],[7657,13]]},"740":{"position":[[1508,14],[2717,13],[2737,15],[3684,13],[6623,14],[7836,13],[7856,15],[8807,13],[11788,14],[13158,13],[13178,15],[14161,13],[16976,14],[18186,13],[18206,15],[19154,13]]},"742":{"position":[[5619,14],[6824,13],[6844,15],[7787,13],[11248,14],[13098,13],[13118,15],[14489,13],[18543,14],[20092,13],[20112,15],[21228,13],[24517,14],[25726,13],[25746,15],[26693,13]]},"744":{"position":[[2372,14],[3976,13],[3996,15],[5167,13],[9048,14],[10592,13],[10612,15],[11779,13],[15505,14],[17050,13],[17070,15],[18238,13]]},"746":{"position":[[6150,14],[9852,13],[9872,15],[12681,13]]},"754":{"position":[[1029,13],[1075,13]]},"767":{"position":[[2081,14],[4510,13],[4530,15],[6342,13],[11577,14],[13378,13],[13398,15],[14720,13],[18688,14],[20419,13],[20439,15],[21691,13],[26075,14],[27287,13],[27307,15],[28257,13],[31255,14],[32468,13],[32488,15],[33439,13],[36294,14],[37510,13],[37530,15],[38484,13],[41353,14],[42570,13],[42590,15],[43545,13]]},"769":{"position":[[170,13],[1377,14],[2590,13],[2610,15],[3561,13],[5469,13],[5928,13],[6538,13],[8708,14],[9917,13],[9937,15],[10884,13],[12741,13],[14057,14],[15275,13],[15295,15],[16251,13],[23804,14],[25021,13],[25041,15],[25996,13],[31458,14],[32666,13],[32686,15],[33632,13],[35529,10],[38801,13],[40445,14],[41653,13],[41673,15],[42619,13]]},"775":{"position":[[769,13],[815,13]]},"786":{"position":[[2874,14],[4185,13],[4205,15],[5129,13],[7904,14],[9118,13],[9138,15],[10090,13],[12973,14],[14284,13],[14304,15],[15228,13],[17960,14],[19174,13],[19194,15],[20146,13],[23005,14],[24220,13],[24240,15],[25193,13],[30155,14],[31369,13],[31389,15],[32341,13],[35199,14],[36413,13],[36433,15],[37385,13]]},"788":{"position":[[3622,14],[5218,13],[5238,15],[6401,13],[9901,14],[11117,13],[11137,15],[12091,13]]},"790":{"position":[[1368,14],[2703,13],[2723,15],[3671,13],[6924,14],[8291,13],[8311,15],[9291,13],[12102,14],[13316,13],[13336,15],[14288,13]]},"792":{"position":[[232,10],[4071,14],[5522,13],[5542,15],[6560,13],[8821,10],[10085,14],[11303,13],[11323,15],[12279,13],[16616,14],[17949,13],[17969,15],[18915,13]]},"798":{"position":[[871,13],[916,13]]},"809":{"position":[[2874,14],[4188,13],[4208,15],[5135,13],[7925,14],[9142,13],[9162,15],[10117,13],[13009,14],[14319,13],[14339,15],[15262,13],[17990,14],[19203,13],[19223,15],[20174,13],[23029,14],[24244,13],[24264,15],[25217,13],[29666,14],[30879,13],[30899,15],[31850,13],[34704,14],[35918,13],[35938,15],[36890,13]]},"811":{"position":[[3470,14],[5269,13],[5289,15],[6563,13],[10373,14],[11590,13],[11610,15],[12565,13]]},"813":{"position":[[1833,13],[3182,14],[4748,13],[4768,15],[5901,13],[9506,14],[10726,13],[10746,15],[11704,13]]},"815":{"position":[[4227,14],[6022,13],[6042,15],[7358,13],[11035,14],[12256,13],[12276,15],[13235,13],[16206,14],[17429,13],[17449,15],[18410,13],[21314,14],[22539,13],[22559,15],[23522,13],[26511,14],[27734,13],[27754,15],[28715,13],[31617,14],[32840,13],[32860,15],[33821,13]]}}}],["configuration=credentialconfiguration(api_token=os.environ.get(fga_bearer_token",{"_index":1135,"t":{"172":{"position":[[2895,82]]}}}],["confirm",{"_index":1827,"t":{"505":{"position":[[11423,7]]},"648":{"position":[[16756,7]]},"682":{"position":[[332,12]]},"698":{"position":[[9135,8]]},"716":{"position":[[154,12]]}}}],["connect",{"_index":685,"t":{"92":{"position":[[256,7]]},"104":{"position":[[171,7],[240,7],[322,7]]},"142":{"position":[[387,10]]},"654":{"position":[[439,9]]},"670":{"position":[[225,9],[6507,10],[9331,10]]},"710":{"position":[[45,8]]},"728":{"position":[[471,9]]},"734":{"position":[[342,9],[414,9]]},"736":{"position":[[156,10],[199,9],[278,10],[305,9]]},"742":{"position":[[4433,10],[17996,10],[18143,10],[19173,10],[19376,10],[20731,10],[20888,10],[22041,10],[22194,10],[22966,10],[23117,10]]},"744":{"position":[[323,7],[400,9],[982,10],[1047,10],[1798,10],[1972,10],[3030,10],[3260,10],[4643,10],[4827,10],[6008,10],[6188,10],[6989,10],[7167,10],[7678,10],[14136,10]]}}}],["consid",{"_index":1066,"t":{"152":{"position":[[1007,10]]},"273":{"position":[[283,8]]},"425":{"position":[[2482,10]]},"427":{"position":[[444,8]]},"471":{"position":[[5960,8]]},"605":{"position":[[12326,10],[18550,10],[24599,10]]},"660":{"position":[[45,8],[78,8],[2829,11]]},"668":{"position":[[665,11]]},"722":{"position":[[1346,8]]},"734":{"position":[[45,8],[78,8],[2168,11]]},"792":{"position":[[8530,10],[8888,8]]},"813":{"position":[[8311,8]]}}}],["consider",{"_index":146,"t":{"16":{"position":[[142,13]]},"664":{"position":[[252,14]]},"668":{"position":[[2610,14]]},"738":{"position":[[374,13]]},"742":{"position":[[4337,14]]}}}],["consist",{"_index":124,"t":{"14":{"position":[[22,11]]},"16":{"position":[[8783,10],[8865,8]]},"36":{"position":[[32,10]]},"178":{"position":[[371,10]]},"204":{"position":[[1592,10]]},"208":{"position":[[514,10]]},"221":{"position":[[22604,10]]},"227":{"position":[[514,10]]},"238":{"position":[[1311,10]]},"242":{"position":[[514,10]]},"277":{"position":[[178,11]]},"279":{"position":[[1911,10]]},"285":{"position":[[514,10]]},"290":{"position":[[96,12]]},"306":{"position":[[2221,10]]},"310":{"position":[[514,10]]},"328":{"position":[[1724,10]]},"332":{"position":[[514,10]]},"379":{"position":[[1303,10]]},"381":{"position":[[514,10]]},"415":{"position":[[1204,10]]},"437":{"position":[[3210,10]]},"443":{"position":[[514,10]]},"455":{"position":[[1595,10]]},"459":{"position":[[514,10]]},"477":{"position":[[1364,10]]},"481":{"position":[[514,10]]},"493":{"position":[[1454,10]]},"497":{"position":[[514,10]]},"511":{"position":[[1342,10]]},"515":{"position":[[514,10]]},"531":{"position":[[1295,10]]},"535":{"position":[[514,10]]},"553":{"position":[[1766,10]]},"557":{"position":[[514,10]]},"593":{"position":[[883,10]]},"597":{"position":[[514,10]]},"613":{"position":[[1539,10]]},"617":{"position":[[514,10]]},"640":{"position":[[587,10]]},"658":{"position":[[374,10]]},"732":{"position":[[375,10]]}}}],["consol",{"_index":843,"t":{"102":{"position":[[956,7]]}}}],["consolid",{"_index":1801,"t":{"491":{"position":[[1314,11]]}}}],["const",{"_index":332,"t":{"16":{"position":[[12398,5],[12530,5],[12896,5],[18010,5],[18142,5],[18508,5],[23782,5],[23914,5],[24265,5]]},"80":{"position":[[846,5],[978,5],[1329,5]]},"86":{"position":[[28,5],[125,5],[373,5]]},"94":{"position":[[593,5],[791,5]]},"96":{"position":[[246,5],[1155,5],[1209,5],[1265,5],[1392,5]]},"98":{"position":[[217,5],[840,5],[878,5],[1134,5],[1341,5],[2018,5],[2072,5],[2128,5],[2176,5],[2218,5],[2387,5]]},"112":{"position":[[119,5],[251,5]]},"114":{"position":[[122,5]]},"124":{"position":[[119,5],[251,5]]},"126":{"position":[[102,5]]},"170":{"position":[[92,5],[189,5]]},"172":{"position":[[405,5],[540,5]]},"190":{"position":[[119,5],[251,5]]},"213":{"position":[[232,5],[364,5]]},"215":{"position":[[242,5],[374,5],[740,5],[5407,5],[5539,5],[5905,5]]},"221":{"position":[[1547,5],[1679,5],[2045,5],[6610,5],[6742,5],[11950,5],[12082,5],[12448,5],[16973,5],[17105,5],[17471,5]]},"230":{"position":[[494,5],[626,5]]},"232":{"position":[[285,5],[417,5],[783,5]]},"245":{"position":[[542,5],[674,5],[1040,5]]},"247":{"position":[[253,5],[385,5],[5314,5],[5446,5],[5812,5]]},"257":{"position":[[95,5],[227,5]]},"288":{"position":[[339,5],[471,5],[5243,5],[5375,5],[10421,5],[10553,5]]},"312":{"position":[[381,5],[513,5],[879,5],[5411,5],[5543,5],[5909,5]]},"318":{"position":[[500,5],[632,5],[5985,5],[6117,5],[6483,5],[11219,5],[11351,5],[11717,5]]},"338":{"position":[[415,5],[547,5],[913,5]]},"345":{"position":[[1359,5],[1491,5],[1857,5]]},"369":{"position":[[363,5],[495,5],[6299,5],[6431,5],[6797,5]]},"371":{"position":[[265,5],[397,5]]},"373":{"position":[[211,5],[343,5],[709,5]]},"385":{"position":[[294,5],[426,5]]},"387":{"position":[[315,5],[447,5],[813,5],[5565,5],[5697,5],[6063,5]]},"445":{"position":[[381,5],[513,5],[879,5],[5432,5],[5564,5],[5930,5]]},"449":{"position":[[341,5],[473,5],[839,5],[5556,5],[5688,5],[6054,5]]},"467":{"position":[[269,5],[401,5]]},"469":{"position":[[271,5],[403,5]]},"471":{"position":[[388,5],[520,5],[886,5]]},"485":{"position":[[455,5],[587,5]]},"487":{"position":[[520,5],[652,5],[1018,5]]},"505":{"position":[[503,5],[635,5],[6251,5],[6383,5],[6749,5],[11666,5],[11798,5],[12164,5],[16772,5],[16904,5],[17270,5],[21816,5],[21948,5],[22314,5]]},"521":{"position":[[278,5],[410,5]]},"523":{"position":[[611,5],[743,5]]},"525":{"position":[[448,5],[580,5],[946,5]]},"537":{"position":[[357,5],[489,5]]},"541":{"position":[[364,5],[496,5]]},"543":{"position":[[375,5],[507,5]]},"545":{"position":[[221,5],[353,5],[719,5],[5167,5],[5299,5],[5665,5]]},"547":{"position":[[258,5],[390,5],[5156,5],[5288,5],[5654,5]]},"562":{"position":[[380,5],[512,5],[878,5]]},"569":{"position":[[630,5],[762,5],[1131,5],[6202,5],[6334,5],[6703,5],[11618,5],[11750,5],[12119,5]]},"571":{"position":[[833,5],[965,5],[1334,5]]},"576":{"position":[[371,5],[503,5],[854,5],[5705,5],[5837,5],[6188,5]]},"583":{"position":[[292,5],[424,5],[775,5]]},"605":{"position":[[1508,5],[1640,5],[2006,5],[7101,5],[7233,5],[7599,5],[13343,5],[13475,5],[13841,5],[19598,5],[19730,5],[20096,5],[25255,5],[25387,5],[25753,5]]},"607":{"position":[[1353,5],[1485,5],[1851,5],[7022,5],[7154,5],[7520,5],[12783,5],[12915,5],[13281,5],[18525,5],[18657,5],[19023,5]]},"622":{"position":[[507,5],[639,5]]},"624":{"position":[[322,5],[454,5],[820,5]]},"630":{"position":[[232,5],[364,5]]},"632":{"position":[[251,5],[383,5],[749,5]]},"634":{"position":[[232,5],[364,5],[5621,5],[5753,5],[6119,5],[10671,5],[10803,5],[11169,5]]},"644":{"position":[[1013,5],[1145,5],[1511,5],[6050,5],[6182,5],[6548,5]]},"646":{"position":[[322,5],[454,5],[5514,5],[5646,5],[6012,5]]},"648":{"position":[[297,5],[429,5],[798,5],[5956,5],[6088,5],[11404,5],[11536,5],[16967,5],[17099,5],[17465,5],[22049,5],[22181,5],[22547,5]]},"666":{"position":[[283,5],[2174,5],[4091,5],[5987,5],[7901,5],[9803,5]]},"668":{"position":[[2861,5],[4942,5],[5074,5],[10114,5]]},"670":{"position":[[1274,5],[1406,5],[6646,5],[9471,5]]},"692":{"position":[[649,5],[781,5],[5605,5],[5737,5],[10593,5],[10725,5],[16884,5],[17016,5],[17382,5],[22002,5],[22134,5],[22500,5]]},"694":{"position":[[3067,5],[3199,5],[9495,5],[9627,5],[9993,5]]},"696":{"position":[[2970,5],[3102,5],[8663,5],[8795,5],[15762,5],[15894,5],[16260,5]]},"698":{"position":[[3165,5],[3297,5],[9471,5],[9603,5],[9969,5]]},"718":{"position":[[2206,5],[2338,5],[7485,5],[7617,5],[7983,5],[12632,5],[12764,5],[17868,5],[18000,5],[18366,5],[23024,5],[23156,5],[23522,5],[28591,5],[28723,5],[35438,5],[35570,5],[35936,5]]},"720":{"position":[[267,5],[399,5],[765,5],[6967,5],[7099,5],[7465,5]]},"722":{"position":[[7011,5],[7143,5],[13607,5],[13739,5],[19344,5],[19476,5],[25369,5],[25501,5],[31022,5],[31154,5],[36187,5],[36319,5],[41383,5],[41515,5],[41881,5],[46475,5],[46607,5],[46973,5]]},"734":{"position":[[2740,5],[2872,5]]},"740":{"position":[[567,5],[699,5],[1065,5],[5678,5],[5810,5],[6176,5],[10822,5],[10954,5],[16034,5],[16166,5],[16532,5]]},"742":{"position":[[4682,5],[4814,5],[5180,5],[9914,5],[10046,5],[17454,5],[17586,5],[23576,5],[23708,5],[24074,5]]},"744":{"position":[[1227,5],[1359,5],[7922,5],[8054,5],[8420,5],[14378,5],[14510,5],[14876,5]]},"746":{"position":[[3468,5],[3600,5]]},"767":{"position":[[336,5],[468,5],[10292,5],[10424,5],[17473,5],[17605,5],[25131,5],[25263,5],[25629,5],[30310,5],[30442,5],[30808,5],[35346,5],[35478,5],[35844,5],[40404,5],[40536,5],[40902,5]]},"769":{"position":[[432,5],[564,5],[930,5],[7767,5],[7899,5],[8265,5],[13107,5],[13239,5],[13605,5],[22855,5],[22987,5],[23353,5],[30518,5],[30650,5],[31016,5],[39505,5],[39637,5],[40003,5]]},"786":{"position":[[1967,5],[2099,5],[6958,5],[7090,5],[7456,5],[12066,5],[12198,5],[17014,5],[17146,5],[17512,5],[22058,5],[22190,5],[22556,5],[29209,5],[29341,5],[29707,5],[34253,5],[34385,5],[34751,5]]},"788":{"position":[[2486,5],[2618,5],[8953,5],[9085,5],[9451,5]]},"790":{"position":[[437,5],[569,5],[5961,5],[6093,5],[11156,5],[11288,5],[11654,5]]},"792":{"position":[[3080,5],[3212,5],[9135,5],[9267,5],[9633,5],[15687,5],[15819,5]]},"809":{"position":[[1964,5],[2096,5],[6976,5],[7108,5],[7474,5],[12103,5],[12235,5],[17045,5],[17177,5],[17543,5],[22082,5],[22214,5],[22580,5],[28721,5],[28853,5],[29219,5],[33758,5],[33890,5],[34256,5]]},"811":{"position":[[2243,5],[2375,5],[9424,5],[9556,5],[9922,5]]},"813":{"position":[[2076,5],[2208,5],[8554,5],[8686,5],[9052,5]]},"815":{"position":[[2948,5],[3080,5],[10082,5],[10214,5],[10580,5],[15251,5],[15383,5],[15749,5],[20357,5],[20489,5],[20855,5],[25556,5],[25688,5],[26054,5],[30662,5],[30794,5],[31160,5]]}}}],["constantli",{"_index":85,"t":{"8":{"position":[[311,10]]}}}],["consum",{"_index":1302,"t":{"269":{"position":[[0,7]]}}}],["contain",{"_index":211,"t":{"16":{"position":[[3491,8],[3555,7]]},"84":{"position":[[33,8]]},"92":{"position":[[160,7]]},"138":{"position":[[47,10]]},"142":{"position":[[523,11],[628,10],[891,9],[1064,10],[3574,9],[3751,10]]},"144":{"position":[[1376,10],[2901,10]]},"259":{"position":[[815,7],[965,7]]},"347":{"position":[[816,7]]},"403":{"position":[[5620,11],[7692,8]]},"461":{"position":[[36,7],[200,10]]},"576":{"position":[[5518,7]]},"599":{"position":[[459,8]]},"611":{"position":[[464,7],[494,7],[521,7],[549,7],[624,7]]},"668":{"position":[[848,7]]},"804":{"position":[[287,7]]},"806":{"position":[[381,8]]}}}],["container_nam",{"_index":937,"t":{"142":{"position":[[1661,15],[1979,15],[2283,15],[4301,15],[4650,15],[4934,15]]}}}],["content",{"_index":431,"t":{"16":{"position":[[16833,8],[22445,8],[28196,8]]},"80":{"position":[[6807,8]]},"86":{"position":[[2421,8]]},"114":{"position":[[1495,8]]},"126":{"position":[[1509,8]]},"132":{"position":[[217,10]]},"192":{"position":[[1462,8]]},"194":{"position":[[1622,8]]},"213":{"position":[[4624,8]]},"215":{"position":[[4665,8],[9838,8]]},"221":{"position":[[5954,8],[11149,8],[16373,8],[21404,8]]},"230":{"position":[[4883,8]]},"232":{"position":[[4712,8]]},"245":{"position":[[4925,8]]},"247":{"position":[[4626,8],[9701,8]]},"259":{"position":[[741,8],[2324,8]]},"261":{"position":[[1768,8],[3200,8]]},"288":{"position":[[4695,8],[9604,8],[15655,8]]},"294":{"position":[[108,7]]},"298":{"position":[[115,7]]},"312":{"position":[[4808,8],[9834,8]]},"318":{"position":[[5127,8],[10412,8],[15646,8]]},"322":{"position":[[92,7]]},"338":{"position":[[4870,8]]},"345":{"position":[[5774,8]]},"365":{"position":[[369,9],[662,7],[753,7]]},"369":{"position":[[5486,8],[10734,8]]},"371":{"position":[[5828,8]]},"373":{"position":[[4646,8]]},"385":{"position":[[4734,8]]},"387":{"position":[[4770,8],[10024,8]]},"411":{"position":[[80,7]]},"429":{"position":[[3312,8]]},"445":{"position":[[4820,8],[9867,8]]},"449":{"position":[[4784,8],[9999,8]]},"467":{"position":[[4653,8]]},"469":{"position":[[4974,8]]},"471":{"position":[[4843,8]]},"485":{"position":[[5046,8]]},"487":{"position":[[4959,8]]},"505":{"position":[[5506,8],[10678,8],[16093,8],[21207,8],[26247,8]]},"521":{"position":[[4670,8]]},"523":{"position":[[5310,8]]},"525":{"position":[[4911,8]]},"537":{"position":[[5026,8]]},"541":{"position":[[5017,8]]},"543":{"position":[[4763,8]]},"545":{"position":[[4600,8],[9546,8]]},"547":{"position":[[4615,8],[9539,8]]},"562":{"position":[[4799,8]]},"569":{"position":[[5246,8],[10721,8],[16177,8]]},"571":{"position":[[4977,8]]},"576":{"position":[[4952,8],[10286,8]]},"583":{"position":[[5241,8]]},"589":{"position":[[26,7]]},"605":{"position":[[5931,8],[11524,8],[17778,8],[24021,8],[29682,8]]},"607":{"position":[[5780,8],[11461,8],[17214,8],[22956,8]]},"622":{"position":[[5362,8]]},"624":{"position":[[4789,8]]},"630":{"position":[[5555,8]]},"632":{"position":[[4686,8]]},"634":{"position":[[4908,8],[10060,8],[15122,8]]},"644":{"position":[[5444,8],[10477,8]]},"646":{"position":[[4917,8],[9957,8]]},"648":{"position":[[5032,8],[10725,8],[16178,8],[21398,8],[26472,8]]},"660":{"position":[[8233,8]]},"666":{"position":[[1660,8],[3559,8],[5468,8],[7376,8],[9282,8],[11192,8]]},"668":{"position":[[4242,8],[9605,8],[11491,8]]},"670":{"position":[[6050,8],[8634,8],[11463,8]]},"672":{"position":[[7772,8]]},"692":{"position":[[5065,8],[10037,8],[15743,8],[21315,8],[26425,8]]},"694":{"position":[[8502,8],[13938,8]]},"696":{"position":[[7811,8],[14430,8],[20181,8]]},"698":{"position":[[8327,8],[13910,8]]},"718":{"position":[[6857,8],[11940,8],[17283,8],[22323,8],[27507,8],[34386,8],[39893,8]]},"720":{"position":[[4702,8],[11398,8]]},"722":{"position":[[12469,8],[18534,8],[24520,8],[30206,8],[35558,8],[40655,8],[45806,8],[50958,8]]},"734":{"position":[[9451,8]]},"740":{"position":[[4982,8],[10109,8],[15477,8],[20453,8]]},"742":{"position":[[9081,8],[16185,8],[22673,8],[27991,8]]},"744":{"position":[[6667,8],[13288,8],[19748,8]]},"746":{"position":[[15779,8]]},"767":{"position":[[8467,8],[16367,8],[23268,8],[29558,8],[34741,8],[39789,8],[44851,8]]},"769":{"position":[[4863,8],[12182,8],[17558,8],[27302,8],[34929,8],[43916,8]]},"786":{"position":[[6387,8],[11393,8],[16486,8],[21449,8],[26497,8],[33644,8],[38688,8]]},"788":{"position":[[7893,8],[13396,8]]},"790":{"position":[[4953,8],[10604,8],[15591,8]]},"792":{"position":[[7909,8],[13586,8],[20195,8]]},"809":{"position":[[6396,8],[11423,8],[16519,8],[21476,8],[26521,8],[33152,8],[38193,8]]},"811":{"position":[[8160,8],[13871,8]]},"813":{"position":[[7363,8],[13013,8]]},"815":{"position":[[8999,8],[14545,8],[19722,8],[24836,8],[30027,8],[35133,8]]}}}],["context",{"_index":468,"t":{"16":{"position":[[28961,7],[29228,7],[29435,7]]},"46":{"position":[[93,7]]},"94":{"position":[[63,7],[932,7]]},"98":{"position":[[2770,9]]},"296":{"position":[[1218,7]]},"397":{"position":[[18,7]]},"593":{"position":[[999,7]]},"597":{"position":[[630,7]]},"654":{"position":[[198,7],[343,7],[751,8]]},"658":{"position":[[531,7]]},"660":{"position":[[782,7]]},"662":{"position":[[27,7],[131,7],[241,7],[349,7]]},"664":{"position":[[239,7],[402,8],[437,7]]},"666":{"position":[[11740,7]]},"668":{"position":[[96,8],[252,7],[509,7],[598,7],[2499,8],[2597,7],[2727,7],[4761,7],[5505,7],[6561,7],[7942,7],[9121,7],[9851,7]]},"670":{"position":[[252,8],[332,7],[760,7],[894,8],[1866,7],[2950,7],[4359,7],[5566,7],[6325,7],[6527,7],[9351,7],[12240,7]]},"728":{"position":[[375,7],[778,8]]},"732":{"position":[[533,7]]},"738":{"position":[[414,7]]},"742":{"position":[[1241,7],[2731,7],[4246,8]]},"744":{"position":[[272,7],[850,7],[7626,7]]}}}],["contextu",{"_index":466,"t":{"16":{"position":[[28848,10],[28868,10],[29029,10],[29167,10],[29359,10]]},"46":{"position":[[0,10]]},"296":{"position":[[1013,10],[1127,10]]},"654":{"position":[[240,10]]},"658":{"position":[[441,10]]},"664":{"position":[[128,10],[415,10]]},"670":{"position":[[505,11],[526,10]]},"672":{"position":[[9388,10],[9675,10]]},"674":{"position":[[219,10],[316,10]]},"728":{"position":[[149,10],[272,10]]},"732":{"position":[[442,10]]},"738":{"position":[[126,10],[392,10]]},"742":{"position":[[2636,10]]},"744":{"position":[[7371,11],[7392,10]]},"746":{"position":[[18892,10],[19178,10]]}}}],["contextual_tupl",{"_index":1940,"t":{"583":{"position":[[933,18],[5400,20],[5845,17]]},"670":{"position":[[6823,18],[9117,17],[9648,18],[11947,17]]},"744":{"position":[[8601,18],[13851,17],[15057,18],[20312,17]]}}}],["contextual_tuples=contextualtuplekey",{"_index":1946,"t":{"583":{"position":[[4762,38]]},"670":{"position":[[8205,38],[11033,38]]},"744":{"position":[[12662,38],[19121,38]]}}}],["contextualtupl",{"_index":1941,"t":{"583":{"position":[[2035,17],[3424,16]]},"670":{"position":[[7152,17],[7651,16],[9978,17],[10478,16]]},"744":{"position":[[9774,17],[11304,16],[16231,17],[17762,16]]}}}],["contextualtuplekey",{"_index":414,"t":{"16":{"position":[[16253,19],[21865,19],[27666,19]]},"114":{"position":[[1049,19]]},"126":{"position":[[1103,19]]},"215":{"position":[[4088,19],[9259,19]]},"221":{"position":[[5381,19],[15796,19],[20825,19]]},"232":{"position":[[4134,19]]},"245":{"position":[[4358,19]]},"247":{"position":[[9133,19]]},"312":{"position":[[4230,19],[9257,19]]},"318":{"position":[[9834,19],[15068,19]]},"338":{"position":[[4285,19]]},"345":{"position":[[5199,19]]},"369":{"position":[[10154,19]]},"373":{"position":[[4066,19]]},"387":{"position":[[4185,19],[9438,19]]},"445":{"position":[[4239,19],[9287,19]]},"449":{"position":[[4202,19],[9417,19]]},"471":{"position":[[4258,19]]},"487":{"position":[[4378,19]]},"505":{"position":[[10100,19],[15515,19],[20627,19],[25668,19]]},"525":{"position":[[4324,19]]},"545":{"position":[[4034,19],[8980,19]]},"547":{"position":[[8972,19]]},"562":{"position":[[4223,19]]},"583":{"position":[[2053,21],[3447,21],[4582,19]]},"605":{"position":[[5354,19],[10947,19],[17198,19],[23444,19],[29104,19]]},"607":{"position":[[5202,19],[10880,19],[16635,19],[22377,19]]},"624":{"position":[[4201,19]]},"632":{"position":[[4106,19]]},"634":{"position":[[9479,19],[14538,19]]},"644":{"position":[[4865,19],[9899,19]]},"646":{"position":[[9375,19]]},"648":{"position":[[20819,19],[25895,19]]},"666":{"position":[[1213,19],[3110,19],[5021,19],[6926,19],[8834,19],[10742,19]]},"668":{"position":[[3794,19],[11044,19]]},"670":{"position":[[8049,19],[10877,19]]},"692":{"position":[[20736,19],[25848,19]]},"694":{"position":[[13356,19]]},"696":{"position":[[19605,19]]},"698":{"position":[[13329,19]]},"718":{"position":[[11355,19],[21738,19],[26915,19],[39308,19]]},"720":{"position":[[4122,19],[10819,19]]},"722":{"position":[[45229,19],[50366,19]]},"740":{"position":[[4407,19],[9530,19],[19877,19]]},"742":{"position":[[8510,19],[27416,19]]},"744":{"position":[[12502,19],[18961,19]]},"767":{"position":[[28980,19],[34162,19],[39207,19],[44268,19]]},"769":{"position":[[4284,19],[11607,19],[16974,19],[26719,19],[34355,19],[43342,19]]},"786":{"position":[[10813,19],[20869,19],[25916,19],[33064,19],[38108,19]]},"788":{"position":[[12814,19]]},"790":{"position":[[15011,19]]},"792":{"position":[[13002,19]]},"809":{"position":[[10840,19],[20897,19],[25940,19],[32573,19],[37613,19]]},"811":{"position":[[13288,19]]},"813":{"position":[[12427,19]]},"815":{"position":[[13958,19],[19133,19],[24245,19],[29438,19],[34544,19]]}}}],["contextualtuplekeys(new",{"_index":2144,"t":{"670":{"position":[[7674,23],[10501,23]]},"744":{"position":[[11327,23],[17785,23]]}}}],["continu",{"_index":1019,"t":{"148":{"position":[[8,10]]},"259":{"position":[[975,12],[1004,12]]},"261":{"position":[[1871,12],[1974,12]]},"403":{"position":[[2963,8]]},"405":{"position":[[4031,8]]},"407":{"position":[[267,8]]},"431":{"position":[[707,8]]}}}],["continuation_token",{"_index":1271,"t":{"259":{"position":[[2362,23]]},"261":{"position":[[3257,21]]}}}],["continuation_token=\"eyjwayi6ikxbvevtvf9ou0nptkzjr19hdxromhn0b3jliiwic2sioiixem1qbxf3mwzlzextcuoyn01mdtdqtjh0cwgifq",{"_index":1270,"t":{"259":{"position":[[2041,118]]},"261":{"position":[[2917,118]]}}}],["continuationtoken",{"_index":1252,"t":{"259":{"position":[[111,17],[198,19],[377,17],[464,19],[1264,17],[1447,19],[1745,17],[1928,19]]},"261":{"position":[[1100,17],[1187,19],[1389,17],[1476,19],[2102,17],[2285,19],[2606,17],[2789,19]]}}}],["continuationtoken(\"eyjwayi6ikxbvevtvf9ou0nptkzjr19hdxromhn0b3jliiwic2sioiixem1qbxf3mwzlzextcuoyn01mdtdqtjh0cwgifq",{"_index":1269,"t":{"259":{"position":[[1560,118]]},"261":{"position":[[2415,118]]}}}],["contoso",{"_index":534,"t":{"56":{"position":[[2252,7],[2408,7]]},"221":{"position":[[907,9],[1098,7],[7168,7],[8193,7],[9543,7],[10691,7],[11378,7]]},"405":{"position":[[1626,7],[2255,7]]},"605":{"position":[[18899,7],[18928,7]]},"783":{"position":[[163,7],[296,7],[457,7]]},"792":{"position":[[183,7],[220,7],[2886,7],[2903,7],[15257,7],[15357,7]]}}}],["contoso/engin",{"_index":2617,"t":{"783":{"position":[[70,19],[256,19],[539,19]]},"788":{"position":[[3049,19],[3174,19],[4273,19],[4454,19],[5878,19],[6013,19],[7235,19],[7366,19],[8237,19],[8366,19]]}}}],["contoso/protocol",{"_index":2619,"t":{"783":{"position":[[118,17],[214,17]]},"790":{"position":[[6522,17],[7573,17],[8949,17],[10123,17],[10848,17]]}}}],["contoso/tool",{"_index":2621,"t":{"783":{"position":[[416,15]]},"788":{"position":[[3209,15],[4489,15],[6048,15],[7401,15],[8401,15]]},"792":{"position":[[2915,16]]}}}],["control",{"_index":102,"t":{"10":{"position":[[21,8],[177,8]]},"391":{"position":[[37,7]]},"401":{"position":[[163,7]]},"688":{"position":[[70,7]]},"716":{"position":[[338,7]]}}}],["convert",{"_index":585,"t":{"68":{"position":[[135,10]]},"80":{"position":[[7347,7]]},"288":{"position":[[5027,7],[10201,8]]},"403":{"position":[[10534,7]]},"712":{"position":[[1017,7]]}}}],["copi",{"_index":934,"t":{"142":{"position":[[1517,4],[4164,4]]},"144":{"position":[[1326,4],[2851,4]]},"403":{"position":[[10686,6]]}}}],["core",{"_index":1236,"t":{"236":{"position":[[139,4]]},"377":{"position":[[167,4]]},"403":{"position":[[3235,4]]},"758":{"position":[[253,5]]}}}],["correct",{"_index":64,"t":{"6":{"position":[[295,7]]},"471":{"position":[[152,7]]},"632":{"position":[[69,8]]},"646":{"position":[[5350,7]]},"648":{"position":[[16779,7]]},"668":{"position":[[244,7],[590,7]]},"670":{"position":[[959,7]]},"686":{"position":[[92,8]]},"694":{"position":[[1089,7]]},"714":{"position":[[92,8]]},"720":{"position":[[62,7],[5266,7]]},"744":{"position":[[560,7]]},"762":{"position":[[92,8]]},"769":{"position":[[46,7],[35564,7],[38818,7]]}}}],["correctli",{"_index":1179,"t":{"204":{"position":[[34,9]]},"221":{"position":[[34,9],[11544,9]]},"238":{"position":[[34,9]]},"279":{"position":[[34,9]]},"312":{"position":[[73,9]]},"373":{"position":[[5166,10]]},"379":{"position":[[34,9]]},"437":{"position":[[34,9]]},"445":{"position":[[73,9]]},"455":{"position":[[34,9]]},"477":{"position":[[34,9]]},"493":{"position":[[34,9]]},"511":{"position":[[34,9]]},"531":{"position":[[34,9]]},"553":{"position":[[34,9]]},"670":{"position":[[920,9]]},"678":{"position":[[34,9]]},"706":{"position":[[34,9]]},"754":{"position":[[34,9]]},"775":{"position":[[34,9]]},"798":{"position":[[34,9]]}}}],["correspond",{"_index":1484,"t":{"371":{"position":[[88,13]]},"425":{"position":[[2527,13]]}}}],["cover",{"_index":1982,"t":{"605":{"position":[[24646,5]]}}}],["creat",{"_index":14,"t":{"4":{"position":[[107,7]]},"8":{"position":[[539,7]]},"16":{"position":[[3973,6],[15966,6],[21578,6],[27366,6]]},"74":{"position":[[150,6],[165,8]]},"78":{"position":[[198,7],[484,7],[770,7],[1056,7],[1323,7]]},"80":{"position":[[5671,6]]},"84":{"position":[[84,6]]},"86":{"position":[[2001,6],[2154,6]]},"98":{"position":[[26,6],[678,6],[2527,6]]},"112":{"position":[[2610,6]]},"124":{"position":[[2610,6]]},"132":{"position":[[361,7]]},"142":{"position":[[567,6],[669,6],[718,7],[1027,6],[2888,6],[3359,6],[3411,7],[3714,6],[5516,6]]},"168":{"position":[[114,7]]},"170":{"position":[[1861,6]]},"172":{"position":[[3418,6]]},"190":{"position":[[2610,6]]},"202":{"position":[[351,6]]},"213":{"position":[[3809,6]]},"215":{"position":[[3801,6],[8972,6]]},"221":{"position":[[5094,6],[10298,6],[15509,6],[20538,6]]},"230":{"position":[[4069,6]]},"232":{"position":[[3847,6]]},"238":{"position":[[667,6],[701,6]]},"240":{"position":[[24,6],[58,6]]},"245":{"position":[[4071,6]]},"247":{"position":[[3816,6],[8846,6]]},"257":{"position":[[2586,6]]},"269":{"position":[[37,6],[481,8]]},"279":{"position":[[1172,6],[1206,6]]},"281":{"position":[[24,6],[58,6]]},"288":{"position":[[3889,6],[8797,6],[14650,6]]},"296":{"position":[[23,6],[977,7]]},"300":{"position":[[20,6],[130,6],[237,6],[346,6]]},"302":{"position":[[20,6]]},"312":{"position":[[3943,6],[8970,6]]},"318":{"position":[[4254,6],[9547,6],[14781,6],[16251,8]]},"326":{"position":[[455,6],[502,8]]},"334":{"position":[[284,7]]},"336":{"position":[[11,8]]},"338":{"position":[[3998,6],[5356,8]]},"345":{"position":[[4912,6]]},"349":{"position":[[1350,6]]},"353":{"position":[[162,6],[474,6]]},"355":{"position":[[1266,6]]},"361":{"position":[[24,6]]},"365":{"position":[[82,6],[302,7],[419,7]]},"367":{"position":[[152,6]]},"369":{"position":[[4501,6],[9867,6]]},"371":{"position":[[4733,6]]},"373":{"position":[[3779,6]]},"385":{"position":[[3907,6]]},"387":{"position":[[3898,6],[9151,6],[10521,8]]},"391":{"position":[[0,8]]},"397":{"position":[[1352,6],[1428,6],[1502,6],[1622,6]]},"399":{"position":[[489,6],[565,6],[639,6],[717,6],[2233,6],[2309,6],[2383,6],[2503,6]]},"401":{"position":[[724,6],[800,6],[874,6],[994,6],[2666,6]]},"403":{"position":[[50,6],[341,6],[3122,7],[3626,8],[4023,8],[4706,8],[5955,7]]},"405":{"position":[[1839,7],[2105,7],[2388,6],[2416,6],[3747,6]]},"407":{"position":[[424,8]]},"425":{"position":[[3280,7]]},"445":{"position":[[3952,6],[9000,6]]},"449":{"position":[[3915,6],[9130,6]]},"455":{"position":[[951,6],[985,6]]},"457":{"position":[[24,6],[58,6]]},"461":{"position":[[558,6],[639,6]]},"463":{"position":[[140,8]]},"467":{"position":[[47,6],[3840,6],[5083,8]]},"469":{"position":[[4082,6]]},"471":{"position":[[3971,6]]},"475":{"position":[[389,7]]},"477":{"position":[[720,6],[754,6],[1683,8]]},"479":{"position":[[24,6],[58,6]]},"485":{"position":[[22,6],[223,6],[4182,6]]},"487":{"position":[[4091,6]]},"491":{"position":[[564,6],[617,6],[633,8],[713,8]]},"493":{"position":[[810,6],[844,6]]},"495":{"position":[[24,6],[58,6]]},"505":{"position":[[108,6],[220,6],[4551,6],[9813,6],[15228,6],[20340,6],[25381,6],[27196,8]]},"509":{"position":[[369,6]]},"511":{"position":[[698,6],[732,6]]},"513":{"position":[[24,6],[58,6]]},"521":{"position":[[51,6],[3855,6]]},"523":{"position":[[339,6],[4419,6]]},"525":{"position":[[4037,6],[5592,8]]},"531":{"position":[[651,6],[685,6]]},"533":{"position":[[24,6],[58,6]]},"537":{"position":[[4153,6]]},"541":{"position":[[4148,6]]},"543":{"position":[[3949,6]]},"545":{"position":[[3747,6],[8693,6]]},"547":{"position":[[3809,6],[8685,6]]},"553":{"position":[[1122,6],[1156,6]]},"555":{"position":[[24,6],[58,6]]},"562":{"position":[[3936,6]]},"569":{"position":[[4347,6],[9841,6],[15287,6]]},"571":{"position":[[4196,6]]},"576":{"position":[[4106,6],[9440,6]]},"583":{"position":[[4282,6]]},"593":{"position":[[239,6],[273,6]]},"595":{"position":[[24,6],[58,6]]},"605":{"position":[[5067,6],[10660,6],[16911,6],[23157,6],[28817,6]]},"607":{"position":[[4915,6],[10593,6],[16348,6],[22090,6]]},"622":{"position":[[48,6],[136,6],[4432,6]]},"624":{"position":[[3914,6],[5703,8]]},"630":{"position":[[4520,6]]},"632":{"position":[[3819,6]]},"634":{"position":[[4023,6],[9192,6],[14251,6]]},"644":{"position":[[38,6],[4578,6],[9612,6]]},"646":{"position":[[56,6],[4052,6],[9088,6]]},"648":{"position":[[4089,6],[9827,6],[15279,6],[20532,6],[25608,6]]},"658":{"position":[[667,6]]},"668":{"position":[[8723,6]]},"670":{"position":[[5140,6]]},"678":{"position":[[300,6],[334,6],[1087,6]]},"692":{"position":[[4244,6],[9212,6],[14761,6],[20449,6],[25561,6]]},"694":{"position":[[7460,6],[13069,6]]},"696":{"position":[[6895,6],[13305,6],[19318,6]]},"698":{"position":[[7342,6],[13042,6]]},"706":{"position":[[300,6],[334,6]]},"712":{"position":[[988,6]]},"718":{"position":[[526,6],[2027,6],[5978,6],[11068,6],[16404,6],[21451,6],[26628,6],[33245,6],[39021,6]]},"720":{"position":[[3835,6],[10532,6]]},"722":{"position":[[11410,6],[17586,6],[23521,6],[29291,6],[34707,6],[39821,6],[44942,6],[50079,6]]},"732":{"position":[[669,6]]},"734":{"position":[[2385,7],[3629,7],[5255,7],[7170,7],[8093,6],[8829,7],[10270,7]]},"740":{"position":[[4120,6],[9243,6],[14597,6],[19590,6]]},"742":{"position":[[8223,6],[14925,6],[21664,6],[27129,6]]},"744":{"position":[[5603,6],[12215,6],[18674,6]]},"746":{"position":[[4357,7],[7239,7],[10858,7],[13117,6],[13853,7],[17297,7]]},"754":{"position":[[326,6]]},"767":{"position":[[6778,6],[15156,6],[22127,6],[28693,6],[33875,6],[38920,6],[43981,6]]},"769":{"position":[[3997,6],[11320,6],[16687,6],[26432,6],[34068,6],[43055,6]]},"775":{"position":[[495,6]]},"786":{"position":[[240,6],[1787,6],[5565,6],[10526,6],[15664,6],[20582,6],[25629,6],[32777,6],[37821,6]]},"788":{"position":[[21,8],[2214,6],[6837,6],[12527,6]]},"790":{"position":[[4107,6],[9727,6],[14724,6]]},"792":{"position":[[6996,6],[8462,6],[12715,6],[15521,6],[19351,6]]},"798":{"position":[[495,6]]},"809":{"position":[[325,6],[1784,6],[5571,6],[10553,6],[15698,6],[20610,6],[25653,6],[32286,6],[37326,6]]},"811":{"position":[[2006,6],[6999,6],[13001,6]]},"813":{"position":[[6337,6],[12140,6]]},"815":{"position":[[179,7],[7794,6],[13671,6],[18846,6],[23958,6],[29151,6],[34257,6]]}}}],["create_docu",{"_index":1577,"t":{"401":{"position":[[2721,17]]}}}],["create_stor",{"_index":666,"t":{"86":{"position":[[2131,15],[2356,14]]}}}],["createstor",{"_index":366,"t":{"16":{"position":[[13706,13],[14968,13],[15884,13],[19318,13],[20580,13],[21496,13],[25095,13],[26358,13],[27284,13]]},"80":{"position":[[2479,13],[4268,13],[5589,13]]},"112":{"position":[[1113,13],[1960,13],[2528,13]]},"124":{"position":[[1113,13],[1960,13],[2528,13]]},"172":{"position":[[848,13],[1447,13],[2396,13],[3311,13]]},"190":{"position":[[1113,13],[1960,13],[2528,13]]},"213":{"position":[[1494,13],[2846,13],[3727,13]]},"215":{"position":[[1547,13],[2806,13],[3719,13],[6714,13],[7975,13],[8890,13]]},"221":{"position":[[2848,13],[4103,13],[5012,13],[7909,13],[9298,13],[10216,13],[13255,13],[14514,13],[15427,13],[18280,13],[19541,13],[20456,13]]},"230":{"position":[[1756,13],[3107,13],[3987,13]]},"232":{"position":[[1591,13],[2851,13],[3765,13]]},"245":{"position":[[1837,13],[3086,13],[3989,13]]},"247":{"position":[[1511,13],[2858,13],[3734,13],[6610,13],[7860,13],[8764,13]]},"257":{"position":[[1089,13],[1936,13],[2504,13]]},"288":{"position":[[1592,13],[2935,13],[3807,13],[6498,13],[7842,13],[8715,13],[11860,13],[13480,13],[14568,13]]},"312":{"position":[[1687,13],[2947,13],[3861,13],[6716,13],[7975,13],[8888,13]]},"318":{"position":[[1821,13],[3232,13],[4172,13],[7291,13],[8551,13],[9465,13],[12525,13],[13785,13],[14699,13]]},"338":{"position":[[1728,13],[2995,13],[3916,13]]},"345":{"position":[[2662,13],[3919,13],[4830,13]]},"369":{"position":[[1790,13],[3363,13],[4419,13],[7607,13],[8869,13],[9785,13]]},"371":{"position":[[1802,13],[3485,13],[4651,13]]},"373":{"position":[[1519,13],[2781,13],[3697,13]]},"385":{"position":[[1568,13],[2932,13],[3825,13]]},"387":{"position":[[1628,13],[2895,13],[3816,13],[6879,13],[8147,13],[9069,13]]},"445":{"position":[[1690,13],[2953,13],[3870,13],[6740,13],[8002,13],[8918,13]]},"449":{"position":[[1651,13],[2915,13],[3833,13],[6866,13],[8130,13],[9048,13]]},"467":{"position":[[1529,13],[2879,13],[3758,13]]},"469":{"position":[[1611,13],[3041,13],[4000,13]]},"471":{"position":[[1701,13],[2968,13],[3889,13]]},"485":{"position":[[1767,13],[3169,13],[4100,13]]},"487":{"position":[[1829,13],[3092,13],[4009,13]]},"505":{"position":[[1900,13],[3443,13],[4469,13],[7557,13],[8817,13],[9731,13],[12972,13],[14232,13],[15146,13],[18080,13],[19342,13],[20258,13],[23123,13],[24384,13],[25299,13]]},"521":{"position":[[1540,13],[2892,13],[3773,13]]},"523":{"position":[[1950,13],[3379,13],[4337,13]]},"525":{"position":[[1763,13],[3032,13],[3955,13]]},"537":{"position":[[1670,13],[3129,13],[4071,13]]},"541":{"position":[[1673,13],[3128,13],[4066,13]]},"543":{"position":[[1636,13],[2987,13],[3867,13]]},"545":{"position":[[1515,13],[2763,13],[3665,13],[6461,13],[7709,13],[8611,13]]},"547":{"position":[[1512,13],[2855,13],[3727,13],[6451,13],[7700,13],[8603,13]]},"562":{"position":[[1684,13],[2942,13],[3854,13]]},"569":{"position":[[1984,13],[3332,13],[4265,13],[7537,13],[8847,13],[9759,13],[12963,13],[14283,13],[15205,13]]},"571":{"position":[[2069,13],[3299,13],[4114,13]]},"576":{"position":[[1714,13],[3066,13],[4024,13],[7048,13],[8400,13],[9358,13]]},"583":{"position":[[1712,13],[3144,13],[4200,13]]},"605":{"position":[[2813,13],[4072,13],[4985,13],[8406,13],[9665,13],[10578,13],[14651,13],[15913,13],[16829,13],[20903,13],[22162,13],[23075,13],[26561,13],[27821,13],[28735,13]]},"607":{"position":[[2659,13],[3919,13],[4833,13],[8331,13],[9594,13],[10511,13],[14090,13],[15351,13],[16266,13],[19832,13],[21093,13],[22008,13]]},"622":{"position":[[1885,13],[3353,13],[4350,13]]},"624":{"position":[[1638,13],[2908,13],[3832,13]]},"630":{"position":[[1709,13],[3332,13],[4438,13]]},"632":{"position":[[1559,13],[2821,13],[3737,13]]},"634":{"position":[[1566,13],[2989,13],[3941,13],[6930,13],[8193,13],[9110,13],[11983,13],[13249,13],[14169,13]]},"644":{"position":[[2320,13],[3581,13],[4496,13],[7356,13],[8616,13],[9530,13]]},"646":{"position":[[1635,13],[3038,13],[3970,13],[6824,13],[8088,13],[9006,13]]},"648":{"position":[[1702,13],[3030,13],[4007,13],[7294,13],[8778,13],[9745,13],[12744,13],[14229,13],[15197,13],[18274,13],[19535,13],[20450,13],[23354,13],[24613,13],[25526,13]]},"668":{"position":[[6272,13],[7692,13],[8641,13]]},"670":{"position":[[2633,13],[4081,13],[5058,13]]},"692":{"position":[[1917,13],[3275,13],[4162,13],[6877,13],[8239,13],[9130,13],[12008,13],[13625,13],[14679,13],[18191,13],[19452,13],[20367,13],[23307,13],[24566,13],[25479,13]]},"694":{"position":[[4535,13],[6261,13],[7378,13],[10805,13],[12069,13],[12987,13]]},"696":{"position":[[4326,13],[5828,13],[6813,13],[10214,13],[12023,13],[13223,13],[17066,13],[18324,13],[19236,13]]},"698":{"position":[[4583,13],[6203,13],[7260,13],[10780,13],[12043,13],[12960,13]]},"718":{"position":[[3533,13],[4950,13],[5896,13],[8798,13],[10065,13],[10986,13],[13959,13],[15376,13],[16322,13],[19181,13],[20448,13],[21369,13],[24344,13],[25618,13],[26546,13],[30168,13],[31947,13],[33163,13],[36751,13],[38018,13],[38939,13]]},"720":{"position":[[1575,13],[2837,13],[3753,13],[8274,13],[9535,13],[10450,13]]},"722":{"position":[[8503,13],[10197,13],[11328,13],[15003,13],[16489,13],[17504,13],[20784,13],[22370,13],[23439,13],[26724,13],[28225,13],[29209,13],[32320,13],[33708,13],[34625,13],[37468,13],[38839,13],[39739,13],[42688,13],[43947,13],[44860,13],[47795,13],[49069,13],[49997,13]]},"734":{"position":[[4528,13],[6574,13],[8011,13]]},"740":{"position":[[1870,13],[3127,13],[4038,13],[6985,13],[8246,13],[9161,13],[12150,13],[13568,13],[14515,13],[17338,13],[18596,13],[19508,13]]},"742":{"position":[[5981,13],[7234,13],[8141,13],[11610,13],[13508,13],[14843,13],[18905,13],[20502,13],[21582,13],[24879,13],[26136,13],[27047,13]]},"744":{"position":[[2734,13],[4386,13],[5521,13],[9410,13],[11002,13],[12133,13],[15867,13],[17460,13],[18592,13]]},"746":{"position":[[6512,13],[10262,13],[13035,13]]},"767":{"position":[[2443,13],[4920,13],[6696,13],[11939,13],[13788,13],[15074,13],[19050,13],[20829,13],[22045,13],[26437,13],[27697,13],[28611,13],[31617,13],[32878,13],[33793,13],[36656,13],[37920,13],[38838,13],[41715,13],[42980,13],[43899,13]]},"769":{"position":[[1739,13],[3000,13],[3915,13],[9070,13],[10327,13],[11238,13],[14419,13],[15685,13],[16605,13],[24166,13],[25431,13],[26350,13],[31820,13],[33076,13],[33986,13],[40807,13],[42063,13],[42973,13]]},"786":{"position":[[3236,13],[4595,13],[5483,13],[8266,13],[9528,13],[10444,13],[13335,13],[14694,13],[15582,13],[18322,13],[19584,13],[20500,13],[23367,13],[24630,13],[25547,13],[30517,13],[31779,13],[32695,13],[35561,13],[36823,13],[37739,13]]},"788":{"position":[[3984,13],[5628,13],[6755,13],[10263,13],[11527,13],[12445,13]]},"790":{"position":[[1730,13],[3113,13],[4025,13],[7286,13],[8701,13],[9645,13],[12464,13],[13726,13],[14642,13]]},"792":{"position":[[4433,13],[5932,13],[6914,13],[10447,13],[11713,13],[12633,13],[16978,13],[18359,13],[19269,13]]},"809":{"position":[[3236,13],[4598,13],[5489,13],[8287,13],[9552,13],[10471,13],[13371,13],[14729,13],[15616,13],[18352,13],[19613,13],[20528,13],[23391,13],[24654,13],[25571,13],[30028,13],[31289,13],[32204,13],[35066,13],[36328,13],[37244,13]]},"811":{"position":[[3832,13],[5679,13],[6917,13],[10735,13],[12000,13],[12919,13]]},"813":{"position":[[3544,13],[5158,13],[6255,13],[9868,13],[11136,13],[12058,13]]},"815":{"position":[[4589,13],[6432,13],[7712,13],[11397,13],[12666,13],[13589,13],[16568,13],[17839,13],[18764,13],[21676,13],[22949,13],[23876,13],[26873,13],[28144,13],[29069,13],[31979,13],[33250,13],[34175,13]]}}}],["createstorerequest",{"_index":665,"t":{"86":{"position":[[1850,18],[2176,19]]}}}],["creation",{"_index":1296,"t":{"263":{"position":[[414,8]]},"353":{"position":[[637,9]]}}}],["credenti",{"_index":1122,"t":{"172":{"position":[[926,12],[1525,12],[2474,11],[2492,13],[2812,12],[2849,11],[3389,11],[3403,12]]}}}],["credentialconfigur",{"_index":1133,"t":{"172":{"position":[[2825,23]]}}}],["credentials(method='api_token",{"_index":1134,"t":{"172":{"position":[[2863,31]]}}}],["credentials.credenti",{"_index":1125,"t":{"172":{"position":[[1538,25]]}}}],["credentials.credentialsmethodapitoken",{"_index":1126,"t":{"172":{"position":[[1572,38]]}}}],["credentialsconfig",{"_index":1130,"t":{"172":{"position":[[2558,19]]}}}],["credentialsmethod",{"_index":1121,"t":{"172":{"position":[[413,18],[487,18]]}}}],["credentialsmethod.apitoken",{"_index":1123,"t":{"172":{"position":[[949,27],[2517,27]]}}}],["criteria",{"_index":1299,"t":{"263":{"position":[[545,8]]},"273":{"position":[[77,9]]},"275":{"position":[[164,8]]},"674":{"position":[[327,9]]},"704":{"position":[[725,8]]},"773":{"position":[[825,8]]},"796":{"position":[[694,8]]}}}],["crypto/rand",{"_index":762,"t":{"96":{"position":[[1610,13]]},"98":{"position":[[2780,13]]}}}],["crypto/rsa",{"_index":763,"t":{"96":{"position":[[1624,12]]},"98":{"position":[[2794,12]]}}}],["cup",{"_index":2518,"t":{"762":{"position":[[248,4],[264,7],[420,4]]},"767":{"position":[[11126,4],[12611,4],[14329,4],[15837,4],[17046,4],[18283,4],[19698,4],[21346,4],[22784,4],[23908,4]]}}}],["curl",{"_index":324,"t":{"16":{"position":[[12273,4],[16673,4],[17589,5],[17885,4],[22285,4],[23355,5],[23657,4],[28029,4]]},"78":{"position":[[23,4]]},"80":{"position":[[732,4],[6632,4]]},"86":{"position":[[23,4],[2382,4]]},"108":{"position":[[23,4]]},"112":{"position":[[96,4]]},"114":{"position":[[102,4],[1335,4]]},"120":{"position":[[23,4]]},"124":{"position":[[96,4]]},"126":{"position":[[97,4],[1342,4]]},"150":{"position":[[229,4],[239,4]]},"186":{"position":[[23,4]]},"190":{"position":[[96,4]]},"192":{"position":[[84,4],[1302,4]]},"194":{"position":[[239,4],[1462,4]]},"213":{"position":[[107,4],[4464,4]]},"215":{"position":[[117,4],[4505,4],[5282,4],[9678,4]]},"221":{"position":[[1422,4],[5794,4],[6485,4],[10989,4],[11825,4],[16213,4],[16848,4],[21244,4]]},"230":{"position":[[369,4],[4723,4]]},"232":{"position":[[160,4],[4552,4]]},"245":{"position":[[417,4],[4765,4]]},"247":{"position":[[128,4],[4466,4],[5189,4],[9541,4]]},"253":{"position":[[23,4]]},"257":{"position":[[72,4]]},"259":{"position":[[87,4],[579,4],[1240,4],[2162,4]]},"261":{"position":[[1070,4],[1606,4],[2072,4],[3038,4]]},"288":{"position":[[214,4],[4535,4],[5118,4],[9444,4],[10296,4],[15495,4]]},"312":{"position":[[256,4],[4648,4],[5286,4],[9674,4]]},"318":{"position":[[375,4],[4967,4],[5860,4],[10252,4],[11094,4],[15486,4]]},"338":{"position":[[290,4],[4710,4]]},"345":{"position":[[1234,4],[5614,4]]},"369":{"position":[[238,4],[5326,4],[6174,4],[10574,4]]},"371":{"position":[[140,4],[5668,4]]},"373":{"position":[[86,4],[4486,4]]},"385":{"position":[[169,4],[4574,4]]},"387":{"position":[[190,4],[4610,4],[5440,4],[9864,4]]},"429":{"position":[[1855,4],[3152,4]]},"445":{"position":[[256,4],[4660,4],[5307,4],[9707,4]]},"449":{"position":[[216,4],[4624,4],[5431,4],[9839,4]]},"467":{"position":[[144,4],[4493,4]]},"469":{"position":[[146,4],[4814,4]]},"471":{"position":[[263,4],[4683,4]]},"485":{"position":[[330,4],[4886,4]]},"487":{"position":[[395,4],[4799,4]]},"505":{"position":[[378,4],[5346,4],[6126,4],[10518,4],[11541,4],[15933,4],[16647,4],[21047,4],[21691,4],[26087,4]]},"521":{"position":[[153,4],[4510,4]]},"523":{"position":[[486,4],[5150,4]]},"525":{"position":[[323,4],[4751,4]]},"537":{"position":[[232,4],[4866,4]]},"541":{"position":[[239,4],[4857,4]]},"543":{"position":[[250,4],[4603,4]]},"545":{"position":[[96,4],[4440,4],[5042,4],[9386,4]]},"547":{"position":[[133,4],[4455,4],[5031,4],[9379,4]]},"562":{"position":[[255,4],[4639,4]]},"569":{"position":[[505,4],[5087,4],[6077,4],[10562,4],[11493,4],[16018,4]]},"571":{"position":[[708,4],[4818,4]]},"576":{"position":[[246,4],[4791,4],[5580,4],[10125,4]]},"583":{"position":[[167,4],[5074,4]]},"605":{"position":[[1383,4],[5771,4],[6976,4],[11364,4],[13218,4],[17618,4],[19473,4],[23861,4],[25130,4],[29522,4]]},"607":{"position":[[1228,4],[5620,4],[6897,4],[11301,4],[12658,4],[17054,4],[18400,4],[22796,4]]},"622":{"position":[[382,4],[5202,4]]},"624":{"position":[[197,4],[4629,4]]},"630":{"position":[[107,4],[5395,4]]},"632":{"position":[[126,4],[4526,4]]},"634":{"position":[[107,4],[4748,4],[5496,4],[9900,4],[10546,4],[14962,4]]},"644":{"position":[[888,4],[5284,4],[5925,4],[10317,4]]},"646":{"position":[[197,4],[4757,4],[5389,4],[9797,4]]},"648":{"position":[[172,4],[4873,4],[5831,4],[10565,4],[11279,4],[16018,4],[16842,4],[21238,4],[21924,4],[26312,4]]},"660":{"position":[[3181,4],[8073,4]]},"666":{"position":[[252,4],[1500,4],[2143,4],[3399,4],[4060,4],[5308,4],[5956,4],[7216,4],[7870,4],[9122,4],[9772,4],[11032,4]]},"668":{"position":[[2830,4],[4082,4],[4817,4],[9445,4],[10083,4],[11331,4]]},"670":{"position":[[1149,4],[5890,4],[6615,4],[8474,4],[9440,4],[11303,4]]},"672":{"position":[[2720,4],[7612,4]]},"692":{"position":[[524,4],[4905,4],[5480,4],[9877,4],[10468,4],[15583,4],[16759,4],[21155,4],[21877,4],[26265,4]]},"694":{"position":[[2942,4],[8342,4],[9370,4],[13778,4]]},"696":{"position":[[2845,4],[7651,4],[8538,4],[14270,4],[15637,4],[20021,4]]},"698":{"position":[[3040,4],[8167,4],[9346,4],[13750,4]]},"718":{"position":[[2081,4],[6697,4],[7360,4],[11780,4],[12507,4],[17123,4],[17743,4],[22163,4],[22899,4],[27347,4],[28466,4],[34226,4],[35313,4],[39733,4]]},"720":{"position":[[142,4],[4542,4],[6842,4],[11238,4]]},"722":{"position":[[6886,4],[12309,4],[13482,4],[18374,4],[19219,4],[24360,4],[25244,4],[30046,4],[30897,4],[35398,4],[36062,4],[40495,4],[41258,4],[45646,4],[46350,4],[50798,4]]},"734":{"position":[[2615,4],[9291,4]]},"740":{"position":[[442,4],[4822,4],[5553,4],[9949,4],[10697,4],[15317,4],[15909,4],[20293,4]]},"742":{"position":[[4557,4],[8921,4],[9789,4],[16025,4],[17329,4],[22513,4],[23451,4],[27831,4]]},"744":{"position":[[1102,4],[6507,4],[7797,4],[13128,4],[14253,4],[19588,4]]},"746":{"position":[[3343,4],[15619,4]]},"767":{"position":[[211,4],[8307,4],[10167,4],[16207,4],[17348,4],[23108,4],[25006,4],[29398,4],[30185,4],[34581,4],[35221,4],[39629,4],[40279,4],[44691,4]]},"769":{"position":[[307,4],[4703,4],[7642,4],[12022,4],[12982,4],[17398,4],[22730,4],[27142,4],[30393,4],[34769,4],[39380,4],[43756,4]]},"786":{"position":[[1842,4],[6227,4],[6833,4],[11233,4],[11941,4],[16326,4],[16889,4],[21289,4],[21933,4],[26337,4],[29084,4],[33484,4],[34128,4],[38528,4]]},"788":{"position":[[2361,4],[7733,4],[8828,4],[13236,4]]},"790":{"position":[[312,4],[4793,4],[5836,4],[10444,4],[11031,4],[15431,4]]},"792":{"position":[[2955,4],[7749,4],[9010,4],[13426,4],[15562,4],[20035,4]]},"809":{"position":[[1839,4],[6236,4],[6851,4],[11263,4],[11978,4],[16359,4],[16920,4],[21316,4],[21957,4],[26361,4],[28596,4],[32992,4],[33633,4],[38033,4]]},"811":{"position":[[2118,4],[8000,4],[9299,4],[13711,4]]},"813":{"position":[[1951,4],[7203,4],[8429,4],[12853,4]]},"815":{"position":[[2823,4],[8839,4],[9957,4],[14385,4],[15126,4],[19562,4],[20232,4],[24676,4],[25431,4],[29867,4],[30537,4],[34973,4]]}}}],["current",{"_index":475,"t":{"16":{"position":[[29767,9]]},"48":{"position":[[252,9]]},"60":{"position":[[176,7]]},"140":{"position":[[147,7]]},"306":{"position":[[1028,7]]},"328":{"position":[[825,7]]},"334":{"position":[[9,7]]},"403":{"position":[[3419,7],[6529,7]]},"405":{"position":[[655,7]]},"415":{"position":[[1062,7]]},"437":{"position":[[1473,7]]},"537":{"position":[[8,7]]},"624":{"position":[[5307,7]]},"654":{"position":[[743,7]]},"668":{"position":[[75,7],[2569,7],[4740,7]]},"728":{"position":[[770,7]]},"758":{"position":[[565,7]]},"767":{"position":[[24125,7]]},"790":{"position":[[5450,7]]}}}],["custom",{"_index":1364,"t":{"296":{"position":[[927,6],[955,6]]},"353":{"position":[[40,6],[149,9],[179,6],[407,6]]},"365":{"position":[[99,6]]},"734":{"position":[[717,9],[749,8],[1372,11],[1483,10],[1754,11],[2263,8],[3424,8],[3500,11],[4994,8],[6955,8],[7039,11],[8618,8],[10061,8]]},"738":{"position":[[177,8]]},"740":{"position":[[124,8],[5477,8]]},"742":{"position":[[2548,8],[2589,10],[2904,9],[3016,8],[3302,11],[3695,10],[3973,11]]},"746":{"position":[[443,9],[555,8],[1904,11],[2297,10],[2575,11],[4152,8],[4228,11],[6978,8],[10643,8],[10727,11],[13642,8],[17088,8]]},"748":{"position":[[656,9],[768,8],[2371,11],[2764,10],[3042,11]]}}}],["customer'",{"_index":2346,"t":{"734":{"position":[[214,10],[323,10]]}}}],["d",{"_index":433,"t":{"16":{"position":[[16869,1],[22481,1],[28232,1]]},"80":{"position":[[6843,1]]},"86":{"position":[[2457,1]]},"114":{"position":[[1531,1]]},"126":{"position":[[1545,1]]},"142":{"position":[[745,1],[3438,1]]},"192":{"position":[[1498,1]]},"194":{"position":[[1658,1]]},"213":{"position":[[4660,1]]},"215":{"position":[[4701,1],[9874,1]]},"221":{"position":[[5990,1],[11185,1],[16409,1],[21440,1]]},"230":{"position":[[4919,1]]},"232":{"position":[[4748,1]]},"245":{"position":[[4961,1]]},"247":{"position":[[4662,1],[9737,1]]},"259":{"position":[[777,1],[2360,1]]},"261":{"position":[[1804,1],[3236,1]]},"273":{"position":[[1968,2]]},"275":{"position":[[499,1]]},"288":{"position":[[4731,1],[9640,1],[15691,1]]},"312":{"position":[[4844,1],[9870,1]]},"318":{"position":[[5163,1],[10448,1],[15682,1]]},"338":{"position":[[4906,1]]},"345":{"position":[[5810,1]]},"369":{"position":[[5522,1],[10770,1]]},"371":{"position":[[5864,1]]},"373":{"position":[[4682,1]]},"385":{"position":[[4770,1]]},"387":{"position":[[4806,1],[10060,1]]},"429":{"position":[[3348,1]]},"445":{"position":[[4856,1],[9903,1]]},"449":{"position":[[4820,1],[10035,1]]},"467":{"position":[[4689,1]]},"469":{"position":[[5010,1]]},"471":{"position":[[4879,1]]},"485":{"position":[[5082,1]]},"487":{"position":[[4995,1]]},"505":{"position":[[5542,1],[10714,1],[16129,1],[21243,1],[26283,1]]},"521":{"position":[[4706,1]]},"523":{"position":[[5346,1]]},"525":{"position":[[4947,1]]},"537":{"position":[[5062,1]]},"541":{"position":[[5053,1]]},"543":{"position":[[4799,1]]},"545":{"position":[[4636,1],[9582,1]]},"547":{"position":[[4651,1],[9575,1]]},"562":{"position":[[4835,1]]},"569":{"position":[[5282,1],[10757,1],[16213,1]]},"571":{"position":[[5013,1]]},"576":{"position":[[4988,1],[10322,1]]},"583":{"position":[[5277,1]]},"605":{"position":[[5967,1],[11560,1],[17814,1],[24057,1],[29718,1]]},"607":{"position":[[5816,1],[11497,1],[17250,1],[22992,1]]},"622":{"position":[[5398,1]]},"624":{"position":[[4825,1]]},"630":{"position":[[5591,1]]},"632":{"position":[[4722,1]]},"634":{"position":[[4944,1],[10096,1],[15158,1]]},"644":{"position":[[5480,1],[10513,1]]},"646":{"position":[[4953,1],[9993,1]]},"648":{"position":[[10761,1],[16214,1],[21434,1],[26508,1]]},"660":{"position":[[8269,1]]},"666":{"position":[[1696,1],[3595,1],[5504,1],[7412,1],[9318,1],[11228,1]]},"668":{"position":[[4278,1],[9641,1],[11527,1]]},"670":{"position":[[6086,1],[8670,1],[11499,1]]},"672":{"position":[[7808,1]]},"692":{"position":[[5101,1],[10073,1],[15779,1],[21351,1],[26461,1]]},"694":{"position":[[8538,1],[13974,1]]},"696":{"position":[[7847,1],[14466,1],[20217,1]]},"698":{"position":[[8363,1],[13946,1]]},"718":{"position":[[6893,1],[11976,1],[17319,1],[22359,1],[27543,1],[34422,1],[39929,1]]},"720":{"position":[[4738,1],[11434,1]]},"722":{"position":[[12505,1],[18570,1],[24556,1],[30242,1],[35594,1],[40691,1],[45842,1],[50994,1]]},"734":{"position":[[9487,1]]},"740":{"position":[[5018,1],[10145,1],[15513,1],[20489,1]]},"742":{"position":[[9117,1],[16221,1],[22709,1],[28027,1]]},"744":{"position":[[6703,1],[13324,1],[19784,1]]},"746":{"position":[[15815,1]]},"767":{"position":[[8503,1],[16403,1],[23304,1],[29594,1],[34777,1],[39825,1],[44887,1]]},"769":{"position":[[4899,1],[12218,1],[17594,1],[27338,1],[34965,1],[43952,1]]},"786":{"position":[[6423,1],[11429,1],[16522,1],[21485,1],[26533,1],[33680,1],[38724,1]]},"788":{"position":[[7929,1],[13432,1]]},"790":{"position":[[4989,1],[10640,1],[15627,1]]},"792":{"position":[[7945,1],[13622,1],[20231,1]]},"809":{"position":[[6432,1],[11459,1],[16555,1],[21512,1],[26557,1],[33188,1],[38229,1]]},"811":{"position":[[8196,1],[13907,1]]},"813":{"position":[[7399,1],[13049,1]]},"815":{"position":[[9035,1],[14581,1],[19758,1],[24872,1],[30063,1],[35169,1]]}}}],["d3233a67938f",{"_index":232,"t":{"16":{"position":[[4281,12],[4795,13]]}}}],["dani",{"_index":1977,"t":{"605":{"position":[[18741,4],[19363,4],[24578,6]]}}}],["data",{"_index":135,"t":{"14":{"position":[[270,4]]},"16":{"position":[[3436,4],[3598,4],[3732,4],[3892,4],[14077,5],[14173,4],[19689,5],[19785,4],[25421,5],[25523,4]]},"24":{"position":[[50,4]]},"74":{"position":[[535,4]]},"80":{"position":[[3289,5]]},"84":{"position":[[61,5]]},"98":{"position":[[5143,5]]},"114":{"position":[[513,5],[609,4]]},"126":{"position":[[488,5],[590,4]]},"134":{"position":[[87,4],[153,4]]},"142":{"position":[[137,5]]},"154":{"position":[[18,4]]},"156":{"position":[[50,4]]},"158":{"position":[[46,4]]},"176":{"position":[[129,4],[157,5],[171,4]]},"196":{"position":[[73,4]]},"198":{"position":[[138,4],[283,4]]},"215":{"position":[[1915,5],[2011,4],[7083,5],[7179,4]]},"221":{"position":[[3211,5],[3307,4],[13623,5],[13719,4],[18649,5],[18745,4]]},"232":{"position":[[1959,5],[2055,4]]},"245":{"position":[[2195,5],[2291,4]]},"247":{"position":[[6968,5],[7064,4]]},"259":{"position":[[218,5],[1467,5]]},"261":{"position":[[1207,5],[2305,5]]},"263":{"position":[[567,4]]},"269":{"position":[[659,4]]},"312":{"position":[[2056,5],[2152,4],[7084,5],[7180,4]]},"318":{"position":[[7659,5],[7755,4],[12894,5],[12990,4]]},"338":{"position":[[2104,5],[2200,4]]},"345":{"position":[[3028,5],[3124,4]]},"369":{"position":[[7978,5],[8074,4]]},"373":{"position":[[1890,5],[1986,4]]},"387":{"position":[[2004,5],[2100,4],[7255,5],[7351,4]]},"403":{"position":[[6882,4]]},"405":{"position":[[1333,5]]},"445":{"position":[[2062,5],[2158,4],[7111,5],[7207,4]]},"449":{"position":[[2024,5],[2120,4],[7238,5],[7334,4]]},"471":{"position":[[2077,5],[2173,4]]},"487":{"position":[[2201,5],[2297,4]]},"505":{"position":[[7926,5],[8022,4],[13340,5],[13436,4],[18451,5],[18547,4],[23493,5],[23589,4]]},"525":{"position":[[2141,5],[2237,4]]},"545":{"position":[[1872,5],[1968,4],[6818,5],[6914,4]]},"547":{"position":[[6808,5],[6904,4]]},"562":{"position":[[2051,5],[2147,4]]},"569":{"position":[[2325,5],[2420,4],[3597,4],[7840,5],[7935,4],[9091,4],[13276,5],[13371,4],[14537,4]]},"571":{"position":[[2410,5],[2505,4],[3564,4]]},"576":{"position":[[2179,5],[2276,4],[7513,5],[7610,4]]},"583":{"position":[[2207,5],[2309,4]]},"605":{"position":[[3181,5],[3277,4],[8774,5],[8870,4],[15022,5],[15118,4],[21271,5],[21367,4],[26930,5],[27026,4]]},"607":{"position":[[3027,5],[3123,4],[8702,5],[8798,4],[14459,5],[14555,4],[20202,5],[20298,4]]},"624":{"position":[[2017,5],[2113,4]]},"630":{"position":[[937,4],[2196,4],[3734,4],[5066,4],[6034,4]]},"632":{"position":[[1930,5],[2026,4]]},"634":{"position":[[794,4],[1853,4],[3237,4],[4419,4],[5163,4],[7301,5],[7397,4],[12358,5],[12454,4]]},"644":{"position":[[2690,5],[2786,4],[7725,5],[7821,4]]},"646":{"position":[[7197,5],[7293,4]]},"648":{"position":[[1899,5],[1994,4],[3215,4],[18644,5],[18740,4],[23721,5],[23817,4]]},"666":{"position":[[676,5],[772,4],[2571,5],[2667,4],[4484,5],[4580,4],[6385,5],[6481,4],[8295,5],[8391,4],[10201,5],[10297,4]]},"668":{"position":[[3255,5],[3351,4],[10507,5],[10603,4]]},"670":{"position":[[7364,5],[7460,4],[10190,5],[10286,4]]},"692":{"position":[[18561,5],[18657,4],[23674,5],[23770,4]]},"694":{"position":[[11178,5],[11274,4]]},"696":{"position":[[17433,5],[17529,4]]},"698":{"position":[[11151,5],[11247,4]]},"718":{"position":[[9174,5],[9270,4],[19557,5],[19653,4],[24726,5],[24822,4],[37127,5],[37223,4]]},"720":{"position":[[1945,5],[2041,4],[5287,4],[8644,5],[8740,4]]},"722":{"position":[[43055,5],[43151,4],[48178,5],[48274,4]]},"728":{"position":[[160,4]]},"740":{"position":[[2236,5],[2332,4],[7355,5],[7451,4],[17704,5],[17800,4]]},"742":{"position":[[6342,5],[6438,4],[25245,5],[25341,4]]},"744":{"position":[[484,4],[10111,5],[10207,4],[16568,5],[16664,4]]},"767":{"position":[[24710,5],[26806,5],[26902,4],[31986,5],[32082,4],[37029,5],[37125,4],[42089,5],[42185,4]]},"769":{"position":[[2104,5],[2200,4],[9435,5],[9531,4],[14793,5],[14889,4],[24540,5],[24636,4],[32185,5],[32281,4],[41172,5],[41268,4]]},"786":{"position":[[8637,5],[8733,4],[18693,5],[18789,4],[23738,5],[23834,4],[30888,5],[30984,4],[35932,5],[36028,4]]},"788":{"position":[[10636,5],[10732,4]]},"790":{"position":[[12835,5],[12931,4]]},"792":{"position":[[10817,5],[10913,4]]},"809":{"position":[[8661,5],[8757,4],[18722,5],[18818,4],[23762,5],[23858,4],[30398,5],[30494,4],[35437,5],[35533,4]]},"811":{"position":[[11109,5],[11205,4]]},"813":{"position":[[10240,5],[10336,4]]},"815":{"position":[[11775,5],[11871,4],[16947,5],[17043,4],[22058,5],[22154,4],[27252,5],[27348,4],[32358,5],[32454,4]]}}}],["data.allow",{"_index":825,"t":{"98":{"position":[[5338,16]]}}}],["data.authorizationmodelid",{"_index":634,"t":{"80":{"position":[[3440,25]]}}}],["databas",{"_index":871,"t":{"132":{"position":[[67,8],[181,8],[250,9]]},"140":{"position":[[315,8]]},"142":{"position":[[2775,9],[2822,8],[5403,9],[5450,8]]},"178":{"position":[[307,8]]},"263":{"position":[[582,9],[664,8],[684,8]]},"267":{"position":[[70,9],[138,9]]},"269":{"position":[[435,8]]},"271":{"position":[[267,8]]},"273":{"position":[[115,8],[379,8],[2482,8]]},"275":{"position":[[45,8]]},"401":{"position":[[501,9]]}}}],["datastor",{"_index":901,"t":{"140":{"position":[[370,10]]},"142":{"position":[[1158,9],[1188,9],[1403,9],[1433,9],[3017,9],[3110,9],[3845,9],[3872,9],[4070,9],[4097,9]]},"150":{"position":[[137,9]]}}}],["date",{"_index":1297,"t":{"263":{"position":[[423,6]]},"638":{"position":[[306,5]]}}}],["david",{"_index":2266,"t":{"714":{"position":[[154,5],[596,5]]},"716":{"position":[[244,5],[786,5]]},"718":{"position":[[368,5],[28196,5],[29261,5],[30620,5],[32314,5],[33756,5],[34894,5],[40540,5],[40583,5],[40724,5],[40760,5],[40897,5],[40934,5]]},"720":{"position":[[12039,5],[12082,5],[12223,5],[12259,5],[12397,5],[12434,5]]},"722":{"position":[[288,5],[366,5],[441,5],[571,5],[1008,6],[35961,5],[41184,5],[46257,5],[52368,5],[52404,5],[52456,5],[52493,5],[52545,5],[52577,5],[52624,5],[52667,5],[52725,5],[52773,5]]}}}],["debug",{"_index":1919,"t":{"576":{"position":[[19,9]]},"578":{"position":[[90,9]]}}}],["decid",{"_index":1651,"t":{"417":{"position":[[54,7]]},"491":{"position":[[1562,6]]},"702":{"position":[[165,7]]}}}],["decis",{"_index":152,"t":{"16":{"position":[[276,9]]},"393":{"position":[[443,9]]},"670":{"position":[[981,9]]}}}],["declar",{"_index":701,"t":{"94":{"position":[[650,7]]},"425":{"position":[[565,7]]}}}],["decor",{"_index":787,"t":{"98":{"position":[[35,9],[687,9],[720,9]]}}}],["decreas",{"_index":1093,"t":{"158":{"position":[[387,8]]}}}],["deduc",{"_index":2611,"t":{"769":{"position":[[27999,7]]}}}],["deeper",{"_index":2246,"t":{"700":{"position":[[101,6]]},"724":{"position":[[372,6]]},"771":{"position":[[683,6]]}}}],["def",{"_index":415,"t":{"16":{"position":[[16293,3],[21905,3],[27692,3]]},"80":{"position":[[5895,3]]},"86":{"position":[[2127,3]]},"114":{"position":[[1089,3]]},"126":{"position":[[1129,3]]},"192":{"position":[[1066,3]]},"194":{"position":[[1225,3]]},"213":{"position":[[4101,3]]},"215":{"position":[[4128,3],[9299,3]]},"221":{"position":[[5421,3],[10590,3],[15836,3],[20865,3]]},"230":{"position":[[4361,3]]},"232":{"position":[[4174,3]]},"245":{"position":[[4398,3]]},"247":{"position":[[4108,3],[9173,3]]},"259":{"position":[[490,3],[1954,3]]},"261":{"position":[[1502,3],[2815,3]]},"288":{"position":[[4181,3],[9089,3],[14942,3]]},"312":{"position":[[4270,3],[9297,3]]},"318":{"position":[[4546,3],[9874,3],[15108,3]]},"338":{"position":[[4325,3]]},"345":{"position":[[5239,3]]},"369":{"position":[[4793,3],[10194,3]]},"371":{"position":[[5025,3]]},"373":{"position":[[4106,3]]},"385":{"position":[[4199,3]]},"387":{"position":[[4225,3],[9478,3]]},"429":{"position":[[2899,3]]},"445":{"position":[[4279,3],[9327,3]]},"449":{"position":[[4242,3],[9457,3]]},"467":{"position":[[4132,3]]},"469":{"position":[[4374,3]]},"471":{"position":[[4298,3]]},"485":{"position":[[4474,3]]},"487":{"position":[[4418,3]]},"505":{"position":[[4843,3],[10140,3],[15555,3],[20667,3],[25708,3]]},"521":{"position":[[4147,3]]},"523":{"position":[[4711,3]]},"525":{"position":[[4364,3]]},"537":{"position":[[4445,3]]},"541":{"position":[[4440,3]]},"543":{"position":[[4241,3]]},"545":{"position":[[4074,3],[9020,3]]},"547":{"position":[[4101,3],[9012,3]]},"562":{"position":[[4263,3]]},"569":{"position":[[4643,3],[10137,3],[15583,3]]},"571":{"position":[[4492,3]]},"576":{"position":[[4410,3],[9744,3]]},"583":{"position":[[4608,3]]},"605":{"position":[[5394,3],[10987,3],[17238,3],[23484,3],[29144,3]]},"607":{"position":[[5242,3],[10920,3],[16675,3],[22417,3]]},"622":{"position":[[4724,3]]},"624":{"position":[[4241,3]]},"630":{"position":[[4812,3]]},"632":{"position":[[4146,3]]},"634":{"position":[[4315,3],[9519,3],[14578,3]]},"644":{"position":[[4905,3],[9939,3]]},"646":{"position":[[4344,3],[9415,3]]},"648":{"position":[[4385,3],[10119,3],[15571,3],[20859,3],[25935,3]]},"660":{"position":[[6994,3]]},"666":{"position":[[1253,3],[3150,3],[5061,3],[6966,3],[8874,3],[10782,3]]},"668":{"position":[[3834,3],[9015,3],[11084,3]]},"670":{"position":[[5432,3],[8089,3],[10917,3]]},"672":{"position":[[6533,3]]},"692":{"position":[[4536,3],[9504,3],[15053,3],[20776,3],[25888,3]]},"694":{"position":[[7752,3],[13396,3]]},"696":{"position":[[7187,3],[13597,3],[19645,3]]},"698":{"position":[[7634,3],[13369,3]]},"718":{"position":[[6270,3],[11395,3],[16696,3],[21778,3],[26955,3],[33537,3],[39348,3]]},"720":{"position":[[4162,3],[10859,3]]},"722":{"position":[[11702,3],[17878,3],[23813,3],[29583,3],[34999,3],[40113,3],[45269,3],[50406,3]]},"734":{"position":[[8385,3]]},"740":{"position":[[4447,3],[9570,3],[14889,3],[19917,3]]},"742":{"position":[[8550,3],[15217,3],[21956,3],[27456,3]]},"744":{"position":[[5895,3],[12542,3],[19001,3]]},"746":{"position":[[13409,3]]},"767":{"position":[[7070,3],[15448,3],[22419,3],[29020,3],[34202,3],[39247,3],[44308,3]]},"769":{"position":[[4324,3],[11647,3],[17014,3],[26759,3],[34395,3],[43382,3]]},"786":{"position":[[5857,3],[10853,3],[15956,3],[20909,3],[25956,3],[33104,3],[38148,3]]},"788":{"position":[[7129,3],[12854,3]]},"790":{"position":[[4399,3],[10019,3],[15051,3]]},"792":{"position":[[7288,3],[13042,3],[19643,3]]},"809":{"position":[[5863,3],[10880,3],[15990,3],[20937,3],[25980,3],[32613,3],[37653,3]]},"811":{"position":[[7291,3],[13328,3]]},"813":{"position":[[6629,3],[12467,3]]},"815":{"position":[[8086,3],[13998,3],[19173,3],[24285,3],[29478,3],[34584,3]]}}}],["default",{"_index":341,"t":{"16":{"position":[[12633,8],[12857,8],[13481,8],[14691,8],[15648,8],[18245,8],[18469,8],[19093,8],[20303,8],[21260,8],[24017,8],[24241,8],[24870,8],[26081,8],[27048,8]]},"80":{"position":[[1081,8],[1305,8],[2254,8],[3991,8],[5353,8]]},"86":{"position":[[210,8],[642,8],[1375,8]]},"98":{"position":[[519,8],[1247,8],[4222,8],[4664,8]]},"102":{"position":[[536,8]]},"112":{"position":[[354,8],[578,8],[888,8],[1683,8],[2292,8]]},"124":{"position":[[354,8],[578,8],[888,8],[1683,8],[2292,8]]},"138":{"position":[[316,7]]},"140":{"position":[[551,7]]},"142":{"position":[[103,8]]},"144":{"position":[[94,9]]},"146":{"position":[[240,7]]},"148":{"position":[[467,7]]},"152":{"position":[[672,7],[754,7]]},"154":{"position":[[39,7]]},"156":{"position":[[130,8]]},"158":{"position":[[82,8],[223,7]]},"160":{"position":[[37,8],[211,9]]},"170":{"position":[[300,8],[713,8],[1311,8]]},"172":{"position":[[625,8],[1222,8],[2119,8],[3078,8]]},"190":{"position":[[354,8],[578,8],[888,8],[1683,8],[2292,8]]},"213":{"position":[[467,8],[691,8],[1269,8],[2569,8],[3491,8]]},"215":{"position":[[477,8],[701,8],[1322,8],[2529,8],[3483,8],[5642,8],[5866,8],[6489,8],[7698,8],[8654,8]]},"221":{"position":[[1782,8],[2006,8],[2623,8],[3826,8],[4776,8],[6845,8],[7069,8],[7684,8],[9021,8],[9980,8],[12185,8],[12409,8],[13030,8],[14237,8],[15191,8],[17208,8],[17432,8],[18055,8],[19264,8],[20220,8]]},"230":{"position":[[729,8],[953,8],[1531,8],[2830,8],[3751,8]]},"232":{"position":[[520,8],[744,8],[1366,8],[2574,8],[3529,8]]},"245":{"position":[[777,8],[1001,8],[1612,8],[2809,8],[3753,8]]},"247":{"position":[[488,8],[712,8],[1286,8],[2581,8],[3498,8],[5549,8],[5773,8],[6385,8],[7583,8],[8528,8]]},"257":{"position":[[330,8],[554,8],[864,8],[1659,8],[2268,8]]},"259":{"position":[[2674,7]]},"288":{"position":[[574,8],[798,8],[1367,8],[2658,8],[3571,8],[5478,8],[5702,8],[6273,8],[7565,8],[8479,8],[10656,8],[10880,8],[11635,8],[13203,8],[14332,8]]},"312":{"position":[[616,8],[840,8],[1462,8],[2670,8],[3625,8],[5646,8],[5870,8],[6491,8],[7698,8],[8652,8]]},"318":{"position":[[735,8],[959,8],[1596,8],[2955,8],[3936,8],[6220,8],[6444,8],[7066,8],[8274,8],[9229,8],[11454,8],[11678,8],[12300,8],[13508,8],[14463,8]]},"338":{"position":[[650,8],[874,8],[1503,8],[2718,8],[3680,8]]},"345":{"position":[[1594,8],[1818,8],[2437,8],[3642,8],[4594,8]]},"369":{"position":[[598,8],[822,8],[1565,8],[3086,8],[4183,8],[6534,8],[6758,8],[7382,8],[8592,8],[9549,8]]},"371":{"position":[[500,8],[724,8],[1577,8],[3208,8],[4415,8]]},"373":{"position":[[446,8],[670,8],[1294,8],[2504,8],[3461,8]]},"385":{"position":[[529,8],[753,8],[1343,8],[2655,8],[3589,8]]},"387":{"position":[[550,8],[774,8],[1403,8],[2618,8],[3580,8],[5800,8],[6024,8],[6654,8],[7870,8],[8833,8]]},"431":{"position":[[519,8],[777,7]]},"445":{"position":[[616,8],[840,8],[1465,8],[2676,8],[3634,8],[5667,8],[5891,8],[6515,8],[7725,8],[8682,8]]},"449":{"position":[[576,8],[800,8],[1426,8],[2638,8],[3597,8],[5791,8],[6015,8],[6641,8],[7853,8],[8812,8]]},"467":{"position":[[504,8],[728,8],[1304,8],[2602,8],[3522,8]]},"469":{"position":[[506,8],[730,8],[1386,8],[2764,8],[3764,8]]},"471":{"position":[[623,8],[847,8],[1476,8],[2691,8],[3653,8]]},"485":{"position":[[690,8],[914,8],[1542,8],[2892,8],[3864,8]]},"487":{"position":[[755,8],[979,8],[1604,8],[2815,8],[3773,8]]},"505":{"position":[[738,8],[962,8],[1675,8],[3166,8],[4233,8],[6486,8],[6710,8],[7332,8],[8540,8],[9495,8],[11901,8],[12125,8],[12747,8],[13955,8],[14910,8],[17007,8],[17231,8],[17855,8],[19065,8],[20022,8],[22051,8],[22275,8],[22898,8],[24107,8],[25063,8]]},"521":{"position":[[513,8],[737,8],[1315,8],[2615,8],[3537,8]]},"523":{"position":[[846,8],[1070,8],[1725,8],[3102,8],[4101,8]]},"525":{"position":[[683,8],[907,8],[1538,8],[2755,8],[3719,8]]},"537":{"position":[[592,8],[816,8],[1445,8],[2852,8],[3835,8]]},"541":{"position":[[599,8],[823,8],[1448,8],[2851,8],[3830,8]]},"543":{"position":[[610,8],[834,8],[1411,8],[2710,8],[3631,8]]},"545":{"position":[[456,8],[680,8],[1290,8],[2486,8],[3429,8],[5402,8],[5626,8],[6236,8],[7432,8],[8375,8]]},"547":{"position":[[493,8],[717,8],[1287,8],[2578,8],[3491,8],[5391,8],[5615,8],[6226,8],[7423,8],[8367,8]]},"562":{"position":[[615,8],[839,8],[1459,8],[2665,8],[3618,8]]},"569":{"position":[[865,8],[1089,8],[1759,8],[3055,8],[4029,8],[6437,8],[6661,8],[7312,8],[8570,8],[9523,8],[11853,8],[12077,8],[12738,8],[14006,8],[14969,8]]},"571":{"position":[[1068,8],[1292,8],[1844,8],[3022,8],[3878,8]]},"576":{"position":[[606,8],[830,8],[1489,8],[2789,8],[3788,8],[5940,8],[6164,8],[6823,8],[8123,8],[9122,8]]},"583":{"position":[[527,8],[751,8],[1487,8],[2867,8],[3964,8]]},"585":{"position":[[89,8],[173,8],[247,7]]},"605":{"position":[[1743,8],[1967,8],[2588,8],[3795,8],[4749,8],[7336,8],[7560,8],[8181,8],[9388,8],[10342,8],[13578,8],[13802,8],[14426,8],[15636,8],[16593,8],[19833,8],[20057,8],[20678,8],[21885,8],[22839,8],[25490,8],[25714,8],[26336,8],[27544,8],[28499,8]]},"607":{"position":[[1588,8],[1812,8],[2434,8],[3642,8],[4597,8],[7257,8],[7481,8],[8106,8],[9317,8],[10275,8],[13018,8],[13242,8],[13865,8],[15074,8],[16030,8],[18760,8],[18984,8],[19607,8],[20816,8],[21772,8]]},"622":{"position":[[742,8],[966,8],[1660,8],[3076,8],[4114,8]]},"624":{"position":[[557,8],[781,8],[1413,8],[2631,8],[3596,8]]},"630":{"position":[[467,8],[691,8],[1484,8],[3055,8],[4202,8]]},"632":{"position":[[486,8],[710,8],[1334,8],[2544,8],[3501,8]]},"634":{"position":[[467,8],[691,8],[1341,8],[2712,8],[3705,8],[5856,8],[6080,8],[6705,8],[7916,8],[8874,8],[10906,8],[11130,8],[11758,8],[12972,8],[13933,8]]},"644":{"position":[[1248,8],[1472,8],[2095,8],[3304,8],[4260,8],[6285,8],[6509,8],[7131,8],[8339,8],[9294,8]]},"646":{"position":[[557,8],[781,8],[1410,8],[2761,8],[3734,8],[5749,8],[5973,8],[6599,8],[7811,8],[8770,8]]},"648":{"position":[[532,8],[756,8],[1477,8],[2753,8],[3771,8],[6191,8],[6415,8],[7069,8],[8501,8],[9509,8],[11639,8],[11863,8],[12519,8],[13952,8],[14961,8],[17202,8],[17426,8],[18049,8],[19258,8],[20214,8],[22284,8],[22508,8],[23129,8],[24336,8],[25290,8]]},"668":{"position":[[5177,8],[5401,8],[6047,8],[7415,8],[8405,8]]},"670":{"position":[[1509,8],[1733,8],[2408,8],[3804,8],[4822,8]]},"692":{"position":[[884,8],[1108,8],[1692,8],[2998,8],[3926,8],[5840,8],[6064,8],[6652,8],[7962,8],[8894,8],[10828,8],[11052,8],[11783,8],[13348,8],[14443,8],[17119,8],[17343,8],[17966,8],[19175,8],[20131,8],[22237,8],[22461,8],[23082,8],[24289,8],[25243,8]]},"694":{"position":[[3302,8],[3526,8],[4310,8],[5984,8],[7142,8],[9730,8],[9954,8],[10580,8],[11792,8],[12751,8]]},"696":{"position":[[3205,8],[3429,8],[4101,8],[5551,8],[6577,8],[8898,8],[9122,8],[9989,8],[11746,8],[12987,8],[15997,8],[16221,8],[16841,8],[18047,8],[19000,8]]},"698":{"position":[[3400,8],[3624,8],[4358,8],[5926,8],[7024,8],[9706,8],[9930,8],[10555,8],[11766,8],[12724,8]]},"718":{"position":[[2441,8],[2665,8],[3308,8],[4673,8],[5660,8],[7720,8],[7944,8],[8573,8],[9788,8],[10750,8],[12867,8],[13091,8],[13734,8],[15099,8],[16086,8],[18103,8],[18327,8],[18956,8],[20171,8],[21133,8],[23259,8],[23483,8],[24119,8],[25341,8],[26310,8],[28826,8],[29050,8],[29943,8],[31670,8],[32927,8],[35673,8],[35897,8],[36526,8],[37741,8],[38703,8]]},"720":{"position":[[502,8],[726,8],[1350,8],[2560,8],[3517,8],[7202,8],[7426,8],[8049,8],[9258,8],[10214,8]]},"722":{"position":[[7246,8],[7470,8],[8278,8],[9920,8],[11092,8],[13842,8],[14066,8],[14778,8],[16212,8],[17268,8],[19579,8],[19803,8],[20559,8],[22093,8],[23203,8],[25604,8],[25828,8],[26499,8],[27948,8],[28973,8],[31257,8],[31481,8],[32095,8],[33431,8],[34389,8],[36422,8],[36646,8],[37243,8],[38562,8],[39503,8],[41618,8],[41842,8],[42463,8],[43670,8],[44624,8],[46710,8],[46934,8],[47570,8],[48792,8],[49761,8]]},"734":{"position":[[2975,8],[3199,8],[4303,8],[6297,8],[7775,8]]},"740":{"position":[[802,8],[1026,8],[1645,8],[2850,8],[3802,8],[5913,8],[6137,8],[6760,8],[7969,8],[8925,8],[11057,8],[11281,8],[11925,8],[13291,8],[14279,8],[16269,8],[16493,8],[17113,8],[18319,8],[19272,8]]},"742":{"position":[[4917,8],[5141,8],[5756,8],[6957,8],[7905,8],[10149,8],[10373,8],[11385,8],[13231,8],[14607,8],[17689,8],[17913,8],[18680,8],[20225,8],[21346,8],[23811,8],[24035,8],[24654,8],[25859,8],[26811,8]]},"744":{"position":[[1462,8],[1686,8],[2509,8],[4109,8],[5285,8],[8157,8],[8381,8],[9185,8],[10725,8],[11897,8],[14613,8],[14837,8],[15642,8],[17183,8],[18356,8]]},"746":{"position":[[3703,8],[3927,8],[6287,8],[9985,8],[12799,8]]},"767":{"position":[[571,8],[795,8],[2218,8],[4643,8],[6460,8],[10527,8],[10751,8],[11714,8],[13511,8],[14838,8],[17708,8],[17932,8],[18825,8],[20552,8],[21809,8],[25366,8],[25590,8],[26212,8],[27420,8],[28375,8],[30545,8],[30769,8],[31392,8],[32601,8],[33557,8],[35581,8],[35805,8],[36431,8],[37643,8],[38602,8],[40639,8],[40863,8],[41490,8],[42703,8],[43663,8]]},"769":{"position":[[667,8],[891,8],[1514,8],[2723,8],[3679,8],[8002,8],[8226,8],[8845,8],[10050,8],[11002,8],[13342,8],[13566,8],[14194,8],[15408,8],[16369,8],[23090,8],[23314,8],[23941,8],[25154,8],[26114,8],[30753,8],[30977,8],[31595,8],[32799,8],[33750,8],[39740,8],[39964,8],[40582,8],[41786,8],[42737,8]]},"786":{"position":[[2202,8],[2426,8],[3011,8],[4318,8],[5247,8],[7193,8],[7417,8],[8041,8],[9251,8],[10208,8],[12301,8],[12525,8],[13110,8],[14417,8],[15346,8],[17249,8],[17473,8],[18097,8],[19307,8],[20264,8],[22293,8],[22517,8],[23142,8],[24353,8],[25311,8],[29444,8],[29668,8],[30292,8],[31502,8],[32459,8],[34488,8],[34712,8],[35336,8],[36546,8],[37503,8]]},"788":{"position":[[2721,8],[2945,8],[3759,8],[5351,8],[6519,8],[9188,8],[9412,8],[10038,8],[11250,8],[12209,8]]},"790":{"position":[[672,8],[896,8],[1505,8],[2836,8],[3789,8],[6196,8],[6420,8],[7061,8],[8424,8],[9409,8],[11391,8],[11615,8],[12239,8],[13449,8],[14406,8]]},"792":{"position":[[3315,8],[3539,8],[4208,8],[5655,8],[6678,8],[8469,8],[9370,8],[9594,8],[10222,8],[11436,8],[12397,8],[15922,8],[16146,8],[16753,8],[18082,8],[19033,8]]},"809":{"position":[[2199,8],[2423,8],[3011,8],[4321,8],[5253,8],[7211,8],[7435,8],[8062,8],[9275,8],[10235,8],[12338,8],[12562,8],[13146,8],[14452,8],[15380,8],[17280,8],[17504,8],[18127,8],[19336,8],[20292,8],[22317,8],[22541,8],[23166,8],[24377,8],[25335,8],[28956,8],[29180,8],[29803,8],[31012,8],[31968,8],[33993,8],[34217,8],[34841,8],[36051,8],[37008,8]]},"811":{"position":[[2478,8],[2702,8],[3607,8],[5402,8],[6681,8],[9659,8],[9883,8],[10510,8],[11723,8],[12683,8]]},"813":{"position":[[2311,8],[2535,8],[3319,8],[4881,8],[6019,8],[8789,8],[9013,8],[9643,8],[10859,8],[11822,8]]},"815":{"position":[[3183,8],[3407,8],[4364,8],[6155,8],[7476,8],[10317,8],[10541,8],[11172,8],[12389,8],[13353,8],[15486,8],[15710,8],[16343,8],[17562,8],[18528,8],[20592,8],[20816,8],[21451,8],[22672,8],[23640,8],[25791,8],[26015,8],[26648,8],[27867,8],[28833,8],[30897,8],[31121,8],[31754,8],[32973,8],[33939,8]]}}}],["defin",{"_index":159,"t":{"16":{"position":[[505,6],[693,7],[872,6],[894,6],[919,6],[941,6],[1541,6],[1692,6],[1728,6],[1767,6],[1803,6],[1860,6],[2954,6],[4070,6],[5252,7],[5314,7],[6602,7],[6679,6],[6701,6],[6726,6],[6748,6],[7834,6],[11365,6],[11397,6],[12701,6],[13550,6],[14786,6],[15723,6],[18313,6],[19162,6],[20398,6],[21335,6],[24085,6],[24939,6],[26176,6],[27123,6]]},"18":{"position":[[30,6]]},"20":{"position":[[42,7]]},"22":{"position":[[89,6]]},"26":{"position":[[53,6]]},"30":{"position":[[23,7],[85,7]]},"54":{"position":[[198,6],[242,6],[267,6],[330,6],[361,6],[436,6],[534,6],[559,6],[622,6],[653,6],[728,6]]},"56":{"position":[[1097,6],[1392,7]]},"58":{"position":[[146,6],[168,6],[200,6],[666,7]]},"60":{"position":[[343,6],[403,6],[434,6],[1461,6],[2643,8]]},"62":{"position":[[193,6]]},"64":{"position":[[211,6]]},"66":{"position":[[278,6]]},"68":{"position":[[911,6],[932,6],[963,6],[1840,6]]},"80":{"position":[[131,6],[153,6],[175,6],[1149,6],[2323,6],[4086,6],[5428,6]]},"86":{"position":[[277,6],[711,6],[1469,6]]},"102":{"position":[[605,6]]},"112":{"position":[[422,6],[957,6],[1778,6],[2367,6]]},"124":{"position":[[422,6],[957,6],[1778,6],[2367,6]]},"140":{"position":[[570,7]]},"170":{"position":[[368,6],[782,6],[1406,6]]},"172":{"position":[[693,6],[1291,6],[2214,6],[3151,6]]},"190":{"position":[[422,6],[957,6],[1778,6],[2367,6]]},"198":{"position":[[202,7]]},"204":{"position":[[371,6],[419,6],[1228,7],[1290,7],[1496,6]]},"208":{"position":[[150,7],[212,7],[418,6]]},"213":{"position":[[535,6],[1338,6],[2664,6],[3566,6]]},"215":{"position":[[545,6],[1391,6],[2624,6],[3558,6],[5710,6],[6558,6],[7793,6],[8729,6]]},"221":{"position":[[361,6],[407,6],[1850,6],[2692,6],[3921,6],[4851,6],[6913,6],[7753,6],[9116,6],[10055,6],[12253,6],[13099,6],[14332,6],[15266,6],[17276,6],[18124,6],[19359,6],[20295,6],[22240,7],[22302,7],[22508,6]]},"227":{"position":[[150,7],[212,7],[418,6]]},"230":{"position":[[797,6],[1600,6],[2925,6],[3826,6]]},"232":{"position":[[588,6],[1435,6],[2669,6],[3604,6]]},"238":{"position":[[318,6],[947,7],[1009,7],[1215,6]]},"242":{"position":[[150,7],[212,7],[418,6]]},"245":{"position":[[845,6],[1681,6],[2904,6],[3828,6]]},"247":{"position":[[556,6],[1355,6],[2676,6],[3573,6],[5617,6],[6454,6],[7678,6],[8603,6]]},"257":{"position":[[398,6],[933,6],[1754,6],[2343,6]]},"261":{"position":[[109,6],[153,6],[206,6]]},"279":{"position":[[397,6],[460,6],[484,6],[1547,7],[1609,7],[1815,6]]},"285":{"position":[[150,7],[212,7],[418,6]]},"288":{"position":[[642,6],[1436,6],[2753,6],[3646,6],[5546,6],[6342,6],[7660,6],[8554,6],[10724,6],[11704,6],[13298,6],[14407,6]]},"294":{"position":[[61,6],[334,8]]},"306":{"position":[[500,6],[554,6],[1857,7],[1919,7],[2125,6]]},"310":{"position":[[150,7],[212,7],[418,6]]},"312":{"position":[[684,6],[1531,6],[2765,6],[3700,6],[5714,6],[6560,6],[7793,6],[8727,6]]},"314":{"position":[[271,6],[294,6],[348,6]]},"316":{"position":[[358,6],[381,6],[451,6]]},"318":{"position":[[803,6],[1665,6],[3050,6],[4011,6],[6288,6],[7135,6],[8369,6],[9304,6],[11522,6],[12369,6],[13603,6],[14538,6]]},"328":{"position":[[441,6],[463,6],[1360,7],[1422,7],[1628,6]]},"332":{"position":[[150,7],[212,7],[418,6]]},"336":{"position":[[89,8],[226,6],[258,6]]},"338":{"position":[[718,6],[1572,6],[2813,6],[3755,6]]},"345":{"position":[[98,6],[144,6],[1662,6],[2506,6],[3737,6],[4669,6]]},"347":{"position":[[103,6],[136,6]]},"353":{"position":[[781,8]]},"355":{"position":[[551,6],[583,6]]},"367":{"position":[[331,6],[377,6],[433,6]]},"369":{"position":[[666,6],[1634,6],[3181,6],[4258,6],[6602,6],[7451,6],[8687,6],[9624,6]]},"371":{"position":[[568,6],[1646,6],[3303,6],[4490,6]]},"373":{"position":[[514,6],[1363,6],[2599,6],[3536,6]]},"379":{"position":[[341,6],[363,6],[939,7],[1001,7],[1207,6]]},"381":{"position":[[150,7],[212,7],[418,6]]},"385":{"position":[[597,6],[1412,6],[2750,6],[3664,6]]},"387":{"position":[[618,6],[1472,6],[2713,6],[3655,6],[5868,6],[6723,6],[7965,6],[8908,6]]},"391":{"position":[[340,8]]},"393":{"position":[[3,6],[746,7]]},"395":{"position":[[0,8],[354,8],[474,6]]},"397":{"position":[[474,8]]},"399":{"position":[[4048,8]]},"401":{"position":[[23,7],[2902,6],[2917,6],[2931,6],[2946,6],[2961,6],[2979,6],[2996,6],[3014,6],[3061,6],[3075,6],[3090,6],[3105,6],[3131,6],[3159,6],[3204,6],[3240,6],[3254,6],[3282,6]]},"403":{"position":[[514,6],[1132,6],[1452,7],[2865,6],[2929,8],[3172,8],[3858,6],[4544,6],[5301,7],[5344,6],[6134,6],[7352,6],[7586,7],[8509,6],[8963,6],[9310,6],[9463,6],[9504,6],[9546,6],[9588,6],[9612,6],[9667,6],[9775,6],[9830,6],[9986,6],[10052,6],[10093,6],[10135,6],[10177,6],[10201,6],[10256,6],[10364,6],[10419,6],[10568,6]]},"405":{"position":[[14,7],[1365,7]]},"407":{"position":[[28,8],[203,8]]},"415":{"position":[[901,7]]},"419":{"position":[[156,6],[200,6],[222,6],[290,6],[312,6],[334,6],[2160,7],[2324,6],[2368,6],[2392,6],[2460,6],[2484,6],[2506,6]]},"421":{"position":[[368,7]]},"423":{"position":[[1267,6],[1389,6],[1433,6],[1457,6],[1538,6],[1562,6],[1597,6]]},"425":{"position":[[752,6],[823,6],[2388,7],[2584,8],[2793,7]]},"429":{"position":[[957,6],[995,6],[1088,6],[1110,6]]},"437":{"position":[[752,6],[781,6],[803,6],[856,6],[2846,7],[2908,7],[3114,6]]},"443":{"position":[[150,7],[212,7],[418,6]]},"445":{"position":[[684,6],[1534,6],[2771,6],[3709,6],[5735,6],[6584,6],[7820,6],[8757,6]]},"447":{"position":[[235,6],[264,6],[286,6],[311,6],[387,6]]},"449":{"position":[[644,6],[1495,6],[2733,6],[3672,6],[5859,6],[6710,6],[7948,6],[8887,6]]},"455":{"position":[[386,6],[432,6],[1231,7],[1293,7],[1499,6]]},"459":{"position":[[150,7],[212,7],[418,6]]},"463":{"position":[[368,6],[414,6],[438,6]]},"465":{"position":[[172,6],[218,6],[242,6]]},"467":{"position":[[572,6],[1373,6],[2697,6],[3597,6]]},"469":{"position":[[574,6],[1455,6],[2859,6],[3839,6]]},"471":{"position":[[691,6],[1545,6],[2786,6],[3728,6]]},"477":{"position":[[331,6],[1000,7],[1062,7],[1268,6]]},"481":{"position":[[150,7],[212,7],[418,6]]},"485":{"position":[[758,6],[1611,6],[2987,6],[3939,6]]},"487":{"position":[[823,6],[1673,6],[2910,6],[3848,6]]},"493":{"position":[[348,6],[369,6],[1090,7],[1152,7],[1358,6]]},"497":{"position":[[150,7],[212,7],[418,6]]},"499":{"position":[[414,6]]},"501":{"position":[[326,6],[347,6]]},"503":{"position":[[275,6],[798,6],[819,6],[841,6],[869,6]]},"505":{"position":[[806,6],[1744,6],[3261,6],[4308,6],[6554,6],[7401,6],[8635,6],[9570,6],[11969,6],[12816,6],[14050,6],[14985,6],[17075,6],[17924,6],[19160,6],[20097,6],[22119,6],[22967,6],[24202,6],[25138,6]]},"511":{"position":[[346,6],[978,7],[1040,7],[1246,6]]},"515":{"position":[[150,7],[212,7],[418,6]]},"519":{"position":[[11,6],[225,6],[274,6]]},"521":{"position":[[581,6],[1384,6],[2710,6],[3612,6]]},"523":{"position":[[914,6],[1794,6],[3197,6],[4176,6]]},"525":{"position":[[751,6],[1607,6],[2850,6],[3794,6]]},"531":{"position":[[306,6],[931,7],[993,7],[1199,6]]},"535":{"position":[[150,7],[212,7],[418,6]]},"537":{"position":[[660,6],[1514,6],[2947,6],[3910,6]]},"539":{"position":[[131,6],[177,6],[216,6],[1031,7],[1082,7]]},"541":{"position":[[667,6],[1517,6],[2946,6],[3905,6]]},"543":{"position":[[678,6],[1480,6],[2805,6],[3706,6]]},"545":{"position":[[524,6],[1359,6],[2581,6],[3504,6],[5470,6],[6305,6],[7527,6],[8450,6]]},"547":{"position":[[561,6],[1356,6],[2673,6],[3566,6],[5459,6],[6295,6],[7518,6],[8442,6]]},"553":{"position":[[414,6],[436,6],[1402,7],[1464,7],[1670,6]]},"557":{"position":[[150,7],[212,7],[418,6]]},"562":{"position":[[683,6],[1528,6],[2760,6],[3693,6]]},"569":{"position":[[933,6],[1828,6],[3150,6],[4104,6],[6505,6],[7381,6],[8665,6],[9598,6],[11921,6],[12807,6],[14101,6],[15044,6]]},"571":{"position":[[1136,6],[1913,6],[3117,6],[3953,6]]},"576":{"position":[[674,6],[1558,6],[2884,6],[3863,6],[6008,6],[6892,6],[8218,6],[9197,6]]},"583":{"position":[[595,6],[1556,6],[2962,6],[4039,6]]},"593":{"position":[[519,7],[581,7],[787,6]]},"597":{"position":[[150,7],[212,7],[418,6]]},"601":{"position":[[305,6],[356,6],[410,6]]},"605":{"position":[[116,6],[167,6],[221,6],[1811,6],[2657,6],[3890,6],[4824,6],[7404,6],[8250,6],[9483,6],[10417,6],[13646,6],[14495,6],[15731,6],[16668,6],[19901,6],[20747,6],[21980,6],[22914,6],[25558,6],[26405,6],[27639,6],[28574,6]]},"607":{"position":[[177,6],[199,6],[234,6],[1656,6],[2503,6],[3737,6],[4672,6],[7325,6],[8175,6],[9412,6],[10350,6],[13086,6],[13934,6],[15169,6],[16105,6],[18828,6],[19676,6],[20911,6],[21847,6]]},"611":{"position":[[325,7]]},"613":{"position":[[366,6],[410,6],[1175,7],[1237,7],[1443,6]]},"617":{"position":[[150,7],[212,7],[418,6]]},"620":{"position":[[199,6],[223,6],[267,6]]},"622":{"position":[[810,6],[1729,6],[3171,6],[4189,6]]},"624":{"position":[[625,6],[1482,6],[2726,6],[3671,6]]},"628":{"position":[[135,6],[166,6],[250,6],[1119,7],[1518,6],[1606,8]]},"630":{"position":[[535,6],[1553,6],[3150,6],[4277,6]]},"632":{"position":[[554,6],[1403,6],[2639,6],[3576,6]]},"634":{"position":[[535,6],[1410,6],[2807,6],[3780,6],[5924,6],[6774,6],[8011,6],[8949,6],[10974,6],[11827,6],[13067,6],[14008,6]]},"640":{"position":[[223,7],[285,7],[491,6]]},"642":{"position":[[304,6],[319,6],[918,6],[933,6]]},"644":{"position":[[306,6],[321,6],[346,6],[371,6],[1316,6],[2164,6],[3399,6],[4335,6],[6353,6],[7200,6],[8434,6],[9369,6]]},"646":{"position":[[625,6],[1479,6],[2856,6],[3809,6],[5817,6],[6668,6],[7906,6],[8845,6]]},"648":{"position":[[600,6],[1546,6],[2848,6],[3846,6],[6259,6],[7138,6],[8596,6],[9584,6],[11707,6],[12588,6],[14047,6],[15036,6],[17270,6],[18118,6],[19353,6],[20289,6],[22352,6],[23198,6],[24431,6],[25365,6]]},"650":{"position":[[166,6],[181,6]]},"658":{"position":[[24,7],[86,7]]},"660":{"position":[[929,6],[951,6],[982,6],[1035,6],[1064,6],[1095,6],[1138,6],[1221,6],[1248,6],[1272,6]]},"668":{"position":[[1122,6],[1144,6],[1195,6],[1249,6],[1312,6],[5245,6],[6116,6],[7510,6],[8480,6]]},"670":{"position":[[1577,6],[2477,6],[3899,6],[4897,6]]},"672":{"position":[[129,6],[151,6],[202,6],[256,6],[319,6],[373,6],[402,6],[433,6],[476,6],[559,6],[586,6],[610,6]]},"690":{"position":[[700,6],[733,6],[770,6]]},"692":{"position":[[952,6],[1761,6],[3093,6],[4001,6],[5908,6],[6721,6],[8057,6],[8969,6],[10896,6],[11852,6],[13443,6],[14518,6],[17187,6],[18035,6],[19270,6],[20206,6],[22305,6],[23151,6],[24384,6],[25318,6]]},"694":{"position":[[1197,6],[1221,6],[1251,6],[1314,6],[1381,6],[3370,6],[4379,6],[6079,6],[7217,6],[9798,6],[10649,6],[11887,6],[12826,6]]},"696":{"position":[[377,6],[401,6],[832,6],[878,6],[936,6],[999,6],[1066,6],[1136,6],[1160,6],[3273,6],[4170,6],[5646,6],[6652,6],[8966,6],[10058,6],[11841,6],[13062,6],[16065,6],[16910,6],[18142,6],[19075,6]]},"698":{"position":[[688,6],[734,6],[792,6],[845,6],[902,6],[962,6],[986,6],[3468,6],[4427,6],[6021,6],[7099,6],[9774,6],[10624,6],[11861,6],[12799,6]]},"716":{"position":[[1057,6],[1085,6],[1115,6],[1137,6]]},"718":{"position":[[629,6],[657,6],[687,6],[709,6],[1486,6],[2509,6],[3377,6],[4768,6],[5735,6],[7788,6],[8642,6],[9883,6],[10825,6],[12935,6],[13803,6],[15194,6],[16161,6],[18171,6],[19025,6],[20266,6],[21208,6],[23327,6],[24188,6],[25436,6],[26385,6],[28894,6],[30012,6],[31765,6],[33002,6],[35741,6],[36595,6],[37836,6],[38778,6]]},"720":{"position":[[570,6],[1419,6],[2655,6],[3592,6],[5828,6],[5856,6],[5902,6],[5958,6],[7270,6],[8118,6],[9353,6],[10289,6]]},"722":{"position":[[1666,6],[1703,6],[1806,6],[3085,6],[3122,6],[3225,6],[4520,6],[4548,6],[4594,6],[4650,6],[4694,6],[4731,6],[4834,6],[7314,6],[8347,6],[10015,6],[11167,6],[13910,6],[14847,6],[16307,6],[17343,6],[19647,6],[20628,6],[22188,6],[23278,6],[25672,6],[26568,6],[28043,6],[29048,6],[31325,6],[32164,6],[33526,6],[34464,6],[36490,6],[37312,6],[38657,6],[39578,6],[41686,6],[42532,6],[43765,6],[44699,6],[46778,6],[47639,6],[48887,6],[49836,6]]},"732":{"position":[[24,7],[86,7]]},"734":{"position":[[580,6],[634,6],[658,6],[710,6],[734,6],[777,6],[828,6],[854,6],[3043,6],[4372,6],[6392,6],[7850,6]]},"740":{"position":[[870,6],[1714,6],[2945,6],[3877,6],[5981,6],[6829,6],[8064,6],[9000,6],[11125,6],[11994,6],[13386,6],[14354,6],[16337,6],[17182,6],[18414,6],[19347,6]]},"742":{"position":[[280,6],[505,6],[1321,6],[1352,6],[1405,6],[1442,6],[2821,6],[2845,6],[2897,6],[2921,6],[3001,6],[3051,6],[4985,6],[5825,6],[7052,6],[7980,6],[10217,6],[11454,6],[13326,6],[14682,6],[17757,6],[18749,6],[20320,6],[21421,6],[23879,6],[24723,6],[25954,6],[26886,6]]},"744":{"position":[[1530,6],[2578,6],[4204,6],[5360,6],[8225,6],[9254,6],[10820,6],[11972,6],[14681,6],[15711,6],[17278,6],[18431,6]]},"746":{"position":[[123,6],[154,6],[207,6],[244,6],[360,6],[384,6],[436,6],[460,6],[540,6],[590,6],[641,6],[667,6],[728,6],[780,6],[3771,6],[6356,6],[10080,6],[12874,6]]},"748":{"position":[[273,6],[316,6],[336,6],[367,6],[420,6],[457,6],[573,6],[597,6],[649,6],[673,6],[753,6],[803,6],[854,6],[880,6],[941,6],[993,6]]},"765":{"position":[[662,6],[713,6],[775,6]]},"767":{"position":[[639,6],[2287,6],[4738,6],[6535,6],[10595,6],[11783,6],[13606,6],[14913,6],[17776,6],[18894,6],[20647,6],[21884,6],[25434,6],[26281,6],[27515,6],[28450,6],[30613,6],[31461,6],[32696,6],[33632,6],[35649,6],[36500,6],[37738,6],[38677,6],[40707,6],[41559,6],[42798,6],[43738,6]]},"769":{"position":[[735,6],[1583,6],[2818,6],[3754,6],[5557,6],[5588,6],[6621,6],[6652,6],[6694,6],[6756,6],[8070,6],[8914,6],[10145,6],[11077,6],[13410,6],[14263,6],[15503,6],[16444,6],[18195,6],[19007,6],[19038,6],[21558,6],[21589,6],[21666,6],[21728,6],[23158,6],[24010,6],[25249,6],[26189,6],[28694,6],[28725,6],[28809,6],[28843,6],[28920,6],[30821,6],[31664,6],[32894,6],[33825,6],[35971,6],[36002,6],[36545,6],[36576,6],[37649,6],[37680,6],[37754,6],[37788,6],[37865,6],[39808,6],[40651,6],[41881,6],[42812,6]]},"786":{"position":[[338,6],[360,6],[383,6],[405,6],[431,6],[1302,6],[2270,6],[3080,6],[4413,6],[5322,6],[7261,6],[8110,6],[9346,6],[10283,6],[12369,6],[13179,6],[14512,6],[15421,6],[17317,6],[18166,6],[19402,6],[20339,6],[22361,6],[23211,6],[24448,6],[25386,6],[27280,6],[27313,6],[27346,6],[27382,6],[27417,6],[28461,6],[29512,6],[30361,6],[31597,6],[32534,6],[34556,6],[35405,6],[36641,6],[37578,6]]},"788":{"position":[[387,6],[830,6],[875,6],[920,6],[968,6],[1015,6],[2789,6],[3828,6],[5446,6],[6594,6],[9256,6],[10107,6],[11345,6],[12284,6]]},"790":{"position":[[740,6],[1574,6],[2931,6],[3864,6],[6264,6],[7130,6],[8519,6],[9484,6],[11459,6],[12308,6],[13544,6],[14481,6]]},"792":{"position":[[943,6],[1280,6],[1325,6],[1370,6],[1418,6],[1465,6],[1498,6],[3383,6],[4277,6],[5750,6],[6753,6],[9438,6],[10291,6],[11531,6],[12472,6],[14178,6],[15990,6],[16822,6],[18177,6],[19108,6],[20689,6],[20762,6],[20829,6],[20918,6],[20983,6],[21069,6],[21126,6],[21155,6]]},"809":{"position":[[427,6],[448,6],[470,6],[495,6],[1249,6],[2267,6],[3080,6],[4416,6],[5328,6],[7279,6],[8131,6],[9370,6],[10310,6],[12406,6],[13215,6],[14547,6],[15455,6],[17348,6],[18196,6],[19431,6],[20367,6],[22385,6],[23235,6],[24472,6],[25410,6],[27316,6],[27337,6],[27368,6],[27403,6],[29024,6],[29872,6],[31107,6],[32043,6],[34061,6],[34910,6],[36146,6],[37083,6]]},"811":{"position":[[458,6],[493,6],[538,6],[587,6],[658,6],[2546,6],[3676,6],[5497,6],[6756,6],[9727,6],[10579,6],[11818,6],[12758,6]]},"813":{"position":[[532,6],[558,6],[593,6],[638,6],[687,6],[2379,6],[3388,6],[4976,6],[6094,6],[8857,6],[9712,6],[10954,6],[11897,6],[13611,6],[14846,6],[14902,6],[14969,6],[15043,6],[15114,6],[15162,6]]},"815":{"position":[[603,6],[659,6],[726,6],[800,6],[878,6],[926,6],[3251,6],[4433,6],[6250,6],[7551,6],[10385,6],[11241,6],[12484,6],[13428,6],[15554,6],[16412,6],[17657,6],[18603,6],[20660,6],[21520,6],[22767,6],[23715,6],[25859,6],[26717,6],[27962,6],[28908,6],[30965,6],[31823,6],[33068,6],[34014,6]]}}}],["definit",{"_index":166,"t":{"16":{"position":[[638,12],[658,10],[827,11],[1512,12],[5272,10],[5403,10],[5574,12],[5598,10],[7618,10],[8708,11],[10381,10],[11182,10],[11320,11]]},"20":{"position":[[7,10]]},"22":{"position":[[60,12]]},"30":{"position":[[43,10],[174,10]]},"32":{"position":[[11,10]]},"34":{"position":[[63,10]]},"54":{"position":[[3796,10],[3911,11]]},"56":{"position":[[67,10],[1381,10],[1831,10]]},"58":{"position":[[101,11],[655,10],[843,11],[1320,10]]},"62":{"position":[[512,10]]},"64":{"position":[[589,10]]},"66":{"position":[[616,10]]},"204":{"position":[[1248,10],[1379,10]]},"208":{"position":[[170,10],[301,10]]},"221":{"position":[[22260,10],[22391,10]]},"227":{"position":[[170,10],[301,10]]},"238":{"position":[[967,10],[1098,10]]},"242":{"position":[[170,10],[301,10]]},"247":{"position":[[5045,10]]},"279":{"position":[[1567,10],[1698,10]]},"285":{"position":[[170,10],[301,10]]},"306":{"position":[[1877,10],[2008,10]]},"310":{"position":[[170,10],[301,10]]},"316":{"position":[[174,10]]},"328":{"position":[[1380,10],[1511,10]]},"332":{"position":[[170,10],[301,10]]},"334":{"position":[[22,11]]},"349":{"position":[[15,11],[1046,10]]},"379":{"position":[[959,10],[1090,10]]},"381":{"position":[[170,10],[301,10]]},"403":{"position":[[68,10],[350,10],[1082,10],[1193,10],[1428,11],[2766,11],[2796,10],[3282,11],[3807,10],[3918,10],[4493,10],[4605,10],[6083,10],[6177,10],[7041,11],[7303,10],[7507,11],[7681,10],[8207,11],[8460,10],[8665,11],[8914,10],[9095,11],[9261,10],[9355,11],[9385,10],[9880,11]]},"423":{"position":[[79,12]]},"437":{"position":[[2866,10],[2997,10]]},"443":{"position":[[170,10],[301,10]]},"447":{"position":[[38,10]]},"455":{"position":[[1251,10],[1382,10]]},"459":{"position":[[170,10],[301,10]]},"461":{"position":[[371,10]]},"477":{"position":[[1020,10],[1151,10]]},"481":{"position":[[170,10],[301,10]]},"493":{"position":[[1110,10],[1241,10]]},"497":{"position":[[170,10],[301,10]]},"505":{"position":[[18,11]]},"511":{"position":[[998,10],[1129,10]]},"515":{"position":[[170,10],[301,10]]},"531":{"position":[[951,10],[1082,10]]},"535":{"position":[[170,10],[301,10]]},"553":{"position":[[1422,10],[1553,10]]},"557":{"position":[[170,10],[301,10]]},"593":{"position":[[539,10],[670,10],[1023,10]]},"597":{"position":[[170,10],[301,10],[654,10]]},"601":{"position":[[147,11],[1226,10],[1396,11]]},"605":{"position":[[6557,10],[6589,11],[12167,10],[12199,11],[18482,10],[18514,11]]},"607":{"position":[[791,11],[6424,10],[6456,11],[12118,10],[12150,11],[17925,10],[17957,11]]},"613":{"position":[[1195,10],[1326,10]]},"617":{"position":[[170,10],[301,10]]},"620":{"position":[[100,10]]},"622":{"position":[[14,10]]},"640":{"position":[[243,10],[374,10]]},"644":{"position":[[818,11]]},"648":{"position":[[76,10]]},"658":{"position":[[44,10],[175,10]]},"668":{"position":[[367,12],[653,11],[755,11],[878,10],[1060,10],[2407,11]]},"696":{"position":[[307,10]]},"722":{"position":[[4233,10]]},"732":{"position":[[44,10],[175,10]]},"742":{"position":[[1265,10],[2534,10],[2764,10],[4160,10]]},"786":{"position":[[27211,12],[29040,11]]},"809":{"position":[[27243,12],[28552,11]]}}}],["delay",{"_index":1279,"t":{"259":{"position":[[2815,5]]}}}],["deleg",{"_index":2257,"t":{"712":{"position":[[223,9]]}}}],["delet",{"_index":116,"t":{"10":{"position":[[386,6]]},"98":{"position":[[509,9],[4182,9]]},"194":{"position":[[3,6],[84,6],[268,8],[449,8],[872,7],[1660,12]]},"219":{"position":[[720,6]]},"230":{"position":[[265,6],[1001,8],[1953,8],[3279,7],[4921,12],[5078,8]]},"232":{"position":[[37,8]]},"247":{"position":[[85,8],[760,8],[1708,8],[3030,7],[4664,12],[4817,8]]},"255":{"position":[[74,7]]},"259":{"position":[[881,8],[2868,6]]},"288":{"position":[[24,6],[5076,6],[5750,8],[6695,8],[8014,7],[9642,12],[9792,8],[10132,7],[11063,8],[12284,8],[13818,7],[15793,12],[16119,8]]},"415":{"position":[[939,7]]},"425":{"position":[[3320,6],[3486,6]]},"427":{"position":[[593,6]]},"435":{"position":[[193,6],[395,8],[486,8]]},"449":{"position":[[67,6],[5272,6]]},"503":{"position":[[558,7]]},"547":{"position":[[92,6],[765,8],[1709,8],[3027,7],[4653,12],[4802,8]]},"634":{"position":[[739,8],[1763,8],[3161,7],[4946,12],[5125,8]]},"648":{"position":[[11911,8],[12941,8],[14401,7],[16216,12],[16450,8],[16706,6]]},"660":{"position":[[654,9]]},"662":{"position":[[86,6],[195,7],[304,6],[413,7],[468,6]]},"664":{"position":[[201,6]]},"666":{"position":[[138,6],[2103,6],[5916,6],[9732,6]]},"670":{"position":[[1781,8],[1810,6],[2830,8],[2894,6],[4253,7],[4303,6],[5510,6],[6088,12],[6257,8],[6269,6],[12370,6],[12401,6],[12431,6],[12490,6],[12548,6]]},"744":{"position":[[1734,8],[2931,8],[4558,7],[6705,12],[6942,8]]},"792":{"position":[[15478,6]]}}}],["deletes=tuplekey",{"_index":1168,"t":{"194":{"position":[[1259,18]]},"230":{"position":[[4395,18]]},"247":{"position":[[4142,18]]},"288":{"position":[[9123,18],[15126,18]]},"547":{"position":[[4135,18]]},"634":{"position":[[4349,18]]},"648":{"position":[[15605,18]]},"670":{"position":[[5466,18]]},"744":{"position":[[5929,18]]}}}],["demo",{"_index":652,"t":{"86":{"position":[[436,4],[1025,4],[1708,4],[2208,6],[2474,4]]},"96":{"position":[[1994,5]]},"98":{"position":[[3204,5]]}}}],["deni",{"_index":1362,"t":{"296":{"position":[[623,7]]},"312":{"position":[[10365,4]]},"316":{"position":[[81,7]]},"318":{"position":[[16173,4]]},"343":{"position":[[361,7]]},"698":{"position":[[508,6],[2680,7]]},"744":{"position":[[448,4],[14154,6]]}}}],["denot",{"_index":1777,"t":{"485":{"position":[[996,7],[2034,7],[3397,7],[4558,7],[5266,7]]},"503":{"position":[[491,8]]}}}],["depend",{"_index":689,"t":{"92":{"position":[[371,9]]},"168":{"position":[[162,9]]},"273":{"position":[[52,7]]},"599":{"position":[[96,9]]},"654":{"position":[[328,7]]},"674":{"position":[[294,7]]},"728":{"position":[[120,6],[360,7]]}}}],["depends_on",{"_index":949,"t":{"142":{"position":[[1900,11],[2190,11],[4574,11],[4841,11]]}}}],["deploy",{"_index":620,"t":{"78":{"position":[[28,6],[314,6],[600,6],[886,6],[1172,6]]},"90":{"position":[[11,6],[375,6]]},"108":{"position":[[28,6],[351,6],[674,6],[997,6],[1320,6]]},"120":{"position":[[28,6],[351,6],[674,6],[997,6],[1320,6]]},"148":{"position":[[55,12]]},"154":{"position":[[400,10]]},"156":{"position":[[475,11]]},"158":{"position":[[673,10]]},"164":{"position":[[3,6]]},"186":{"position":[[28,6],[315,6],[602,6],[889,6],[1176,6]]},"253":{"position":[[28,6],[350,6],[672,6],[959,6],[1246,6]]}}}],["deprec",{"_index":567,"t":{"60":{"position":[[3317,10]]},"415":{"position":[[47,11],[106,11]]},"431":{"position":[[23,11],[47,11]]}}}],["describ",{"_index":262,"t":{"16":{"position":[[5715,10]]},"52":{"position":[[219,9],[500,9]]},"54":{"position":[[3712,9]]},"397":{"position":[[652,8],[1309,9]]},"403":{"position":[[1307,9],[6328,9]]},"425":{"position":[[2673,9]]},"501":{"position":[[42,9]]},"503":{"position":[[39,9]]},"601":{"position":[[1161,9]]},"622":{"position":[[173,10]]},"628":{"position":[[1728,8]]},"722":{"position":[[1491,10],[1533,10],[2730,9]]}}}],["descript",{"_index":1051,"t":{"152":{"position":[[442,11],[530,11]]},"397":{"position":[[1075,11]]}}}],["design",{"_index":20,"t":{"4":{"position":[[174,8]]},"419":{"position":[[1681,9]]},"564":{"position":[[9,8],[101,8]]},"578":{"position":[[66,8],[193,8]]},"611":{"position":[[178,6]]},"690":{"position":[[324,12]]}}}],["despit",{"_index":2233,"t":{"698":{"position":[[12,7]]}}}],["detail",{"_index":1359,"t":{"292":{"position":[[168,7]]},"393":{"position":[[1020,8]]},"674":{"position":[[360,7]]},"682":{"position":[[96,9]]},"710":{"position":[[297,9]]},"718":{"position":[[1444,7]]},"750":{"position":[[350,7]]},"758":{"position":[[161,9]]},"773":{"position":[[320,8]]},"779":{"position":[[128,9]]},"786":{"position":[[1238,7],[28424,7]]},"792":{"position":[[14059,7]]},"802":{"position":[[166,9]]},"809":{"position":[[1208,7],[28252,7]]},"813":{"position":[[13492,7]]}}}],["detect",{"_index":2586,"t":{"767":{"position":[[24951,6]]}}}],["determin",{"_index":51,"t":{"6":{"position":[[102,11]]},"14":{"position":[[67,12]]},"16":{"position":[[52,11],[2827,13],[9180,13],[9648,13]]},"106":{"position":[[63,9]]},"118":{"position":[[70,9]]},"393":{"position":[[375,9]]},"399":{"position":[[4383,11]]},"562":{"position":[[160,9]]},"718":{"position":[[1303,10]]},"786":{"position":[[1097,10]]},"790":{"position":[[5504,11]]},"792":{"position":[[8546,11]]},"809":{"position":[[1067,10]]}}}],["develop",{"_index":1013,"t":{"146":{"position":[[33,11]]},"204":{"position":[[108,7]]},"221":{"position":[[108,7]]},"238":{"position":[[108,7]]},"279":{"position":[[108,7]]},"306":{"position":[[98,7]]},"328":{"position":[[99,7]]},"355":{"position":[[98,7]]},"379":{"position":[[108,7]]},"437":{"position":[[108,7]]},"455":{"position":[[108,7]]},"477":{"position":[[108,7]]},"493":{"position":[[108,7]]},"511":{"position":[[108,7]]},"517":{"position":[[6,7]]},"531":{"position":[[108,7]]},"553":{"position":[[108,7]]},"593":{"position":[[99,7]]},"613":{"position":[[98,7]]},"638":{"position":[[29,12]]},"678":{"position":[[108,7]]},"706":{"position":[[108,7]]},"754":{"position":[[108,7]]},"775":{"position":[[108,7]]},"779":{"position":[[22,7]]},"798":{"position":[[108,7]]}}}],["development/prod",{"_index":223,"t":{"16":{"position":[[3938,18]]}}}],["devic",{"_index":1797,"t":{"491":{"position":[[914,6]]},"678":{"position":[[915,7],[1247,6]]},"682":{"position":[[284,6]]},"684":{"position":[[93,8],[165,8],[208,7],[236,6],[286,6],[339,6]]},"686":{"position":[[260,6],[309,6],[361,6],[388,6],[413,6],[426,6],[473,6],[500,6]]},"688":{"position":[[183,8]]},"690":{"position":[[90,8],[162,8],[253,6],[411,6],[474,8],[625,6],[683,6],[879,9]]},"692":{"position":[[67,6],[116,6],[228,7],[284,6],[445,6],[16542,7]]},"694":{"position":[[100,6],[695,6],[821,6],[1064,7],[1180,6],[1482,9],[2538,6],[2589,6],[2701,7]]},"696":{"position":[[27,8],[50,6],[92,6],[112,7],[140,6],[189,6],[241,7],[260,6],[326,6],[815,6],[1269,9],[8419,7],[15521,6],[15541,6]]},"698":{"position":[[671,6],[1095,9]]},"702":{"position":[[34,7]]}}}],["device:1",{"_index":2167,"t":{"692":{"position":[[491,9],[1240,11],[3562,10],[5448,8],[6200,11],[8530,10],[10435,9],[11184,12],[11261,12],[11331,11],[13912,10],[13999,10],[14079,10],[16624,9],[16671,9],[16726,9],[17552,11],[18544,11],[19744,10],[21667,11],[21698,10],[21844,9],[22667,11],[23657,11],[24855,10],[26769,11],[26800,10],[26973,8],[27019,8],[27059,8],[27105,8],[27145,8],[27195,8],[27239,8],[27289,8],[27333,8],[27376,8],[27412,8],[27455,8]]},"694":{"position":[[3655,12],[3719,12],[3792,12],[3858,11],[6545,10],[6619,10],[6702,10],[6778,10],[9316,8],[10166,11],[11161,11],[12364,10],[14299,11],[14330,10],[14513,8],[14559,8],[14599,8],[14645,8],[14685,8],[14735,8],[14779,8],[14829,8],[14873,8],[14916,8],[14952,8],[14995,8],[15035,8],[15084,8],[15126,8],[15174,8],[15217,8],[15270,8],[15316,8],[15368,8],[15415,8],[15461,8],[15499,8],[15544,8]]},"698":{"position":[[117,9],[397,9],[2450,8],[2746,8],[2805,9],[3757,12],[3835,12],[3906,11],[6491,10],[6579,10],[6660,10],[9013,8],[9099,8],[10140,11],[11134,11],[12336,10],[14266,11],[14297,10],[14467,8],[14518,8],[14562,8],[14606,8]]}}}],["device:2",{"_index":2213,"t":{"696":{"position":[[9276,12],[9454,12],[12332,10],[12530,10],[15583,8],[16427,11],[17416,11],[18613,10],[20524,11],[20555,10],[20788,8],[20834,8],[20873,8],[20919,8],[20958,8],[21008,8],[21051,8],[21101,8],[21144,8],[21187,8],[21223,8],[21266,8],[21305,8],[21354,8],[21396,8],[21444,8],[21487,8],[21540,8],[21586,8],[21638,8],[21685,8],[21731,8],[21769,8],[21814,8]]}}}],["device:3",{"_index":2214,"t":{"696":{"position":[[9371,12],[9537,11],[12437,10],[12623,10]]}}}],["device_group",{"_index":2202,"t":{"696":{"position":[[354,12],[441,15],[1113,12],[1933,15],[2062,15],[2371,15]]},"698":{"position":[[939,12],[1711,15],[1840,15],[1908,15]]}}}],["device_group:group1",{"_index":2206,"t":{"696":{"position":[[3561,23],[3638,22],[6115,21],[6202,21]]}}}],["device_group:group1#it_admin",{"_index":2215,"t":{"696":{"position":[[9392,31],[9475,31],[12466,31],[12559,31]]}}}],["device_group:group1#security_guard",{"_index":2212,"t":{"696":{"position":[[9202,37],[9297,37],[12256,37],[12361,37]]}}}],["device_manag",{"_index":1411,"t":{"326":{"position":[[395,15]]}}}],["device_renam",{"_index":1412,"t":{"326":{"position":[[415,15]]},"491":{"position":[[345,16]]},"690":{"position":[[565,15],[777,15],[982,17],[1211,17]]},"692":{"position":[[11305,17],[14052,17],[21811,14],[22641,17],[23631,17],[24828,17],[26706,17],[26734,16],[27342,14],[27388,15],[27421,14],[27467,15]]},"694":{"position":[[914,15],[1388,15],[1923,17],[2381,17],[14882,14],[14928,15],[14961,14],[15007,15],[15424,14],[15473,15],[15508,14],[15556,15]]},"696":{"position":[[1073,15],[1710,17],[2278,17],[21153,14],[21199,15],[21232,14],[21278,15],[21694,14],[21743,15],[21778,14],[21826,15]]},"698":{"position":[[487,15],[580,14],[909,15],[1504,17],[3880,17],[6633,17],[14571,14],[14618,15]]}}}],["dian",{"_index":2618,"t":{"783":{"position":[[95,6]]},"790":{"position":[[6500,5],[7551,5],[8927,5],[10101,5],[10826,5]]},"806":{"position":[[131,6],[371,5]]},"813":{"position":[[2610,5],[3804,5],[5379,5],[6706,5],[7666,5]]}}}],["diann",{"_index":2159,"t":{"686":{"position":[[154,6],[436,6]]},"694":{"position":[[1004,6],[2556,6],[14463,7],[15119,6],[15156,6],[15309,6],[15350,6],[15492,6],[15526,6]]},"696":{"position":[[2738,6],[15565,6],[16378,9],[17367,9],[18562,9],[20404,9],[20435,8],[21389,6],[21426,6],[21579,6],[21620,6],[21762,6],[21796,6]]},"702":{"position":[[72,6]]}}}],["dictat",{"_index":1764,"t":{"471":{"position":[[5386,7]]}}}],["didn't",{"_index":1556,"t":{"399":{"position":[[3770,6]]}}}],["differ",{"_index":192,"t":{"16":{"position":[[2932,9]]},"66":{"position":[[44,10],[389,13]]},"68":{"position":[[298,10]]},"148":{"position":[[443,9]]},"168":{"position":[[228,9]]},"215":{"position":[[5138,9]]},"316":{"position":[[618,13]]},"353":{"position":[[510,9],[740,9]]},"403":{"position":[[5694,9]]},"415":{"position":[[355,9]]},"425":{"position":[[1845,9],[2979,9]]},"503":{"position":[[382,9]]},"605":{"position":[[24717,6]]},"611":{"position":[[254,9]]},"626":{"position":[[141,9]]},"652":{"position":[[187,11]]},"670":{"position":[[68,9],[242,9],[264,9],[322,9],[837,9],[871,9]]},"694":{"position":[[2727,9]]},"724":{"position":[[475,9]]},"740":{"position":[[10630,9]]},"744":{"position":[[68,9]]},"765":{"position":[[41,9]]},"771":{"position":[[786,9]]},"786":{"position":[[13,9]]},"790":{"position":[[5674,9]]}}}],["digit",{"_index":127,"t":{"14":{"position":[[126,7]]}}}],["direct",{"_index":242,"t":{"16":{"position":[[4477,6],[5193,6],[7501,6],[8652,6],[9461,6],[9760,6],[9788,6],[9825,6],[10009,6],[10040,6],[10204,6],[10313,6],[10410,6],[12049,6]]},"40":{"position":[[2,6],[186,6],[217,6],[381,6]]},"50":{"position":[[144,6]]},"54":{"position":[[3860,6]]},"56":{"position":[[85,6],[722,6],[879,7],[1516,6],[1620,6],[2555,6]]},"58":{"position":[[978,6],[1035,6],[1248,6]]},"60":{"position":[[2420,7]]},"62":{"position":[[649,6],[1130,6]]},"66":{"position":[[711,6],[1601,6]]},"70":{"position":[[273,6]]},"82":{"position":[[198,6]]},"238":{"position":[[628,6]]},"245":{"position":[[257,6]]},"247":{"position":[[4978,6]]},"249":{"position":[[68,6]]},"279":{"position":[[1133,6]]},"296":{"position":[[119,6]]},"324":{"position":[[0,6]]},"349":{"position":[[242,6],[1150,6],[1317,6]]},"375":{"position":[[123,6]]},"403":{"position":[[1751,6],[1856,6],[7455,6]]},"409":{"position":[[196,6]]},"455":{"position":[[912,6]]},"471":{"position":[[5398,6]]},"477":{"position":[[681,6]]},"493":{"position":[[771,6],[1667,6],[1730,6]]},"497":{"position":[[727,6],[790,6]]},"499":{"position":[[309,6],[523,6]]},"503":{"position":[[182,6],[1514,6]]},"511":{"position":[[659,6]]},"531":{"position":[[612,6]]},"553":{"position":[[1083,6]]},"591":{"position":[[138,6]]},"593":{"position":[[169,6],[200,6],[948,6],[1055,6]]},"597":{"position":[[579,6],[686,6]]},"599":{"position":[[0,6],[196,6]]},"601":{"position":[[0,6],[88,6],[206,6],[1298,6],[1459,6]]},"603":{"position":[[47,6]]},"605":{"position":[[1010,6],[6501,6],[12111,6],[12339,6],[12387,6],[18426,6],[18563,6],[24612,6],[24729,6],[30337,6]]},"607":{"position":[[61,6],[710,6],[870,6],[6364,6],[12058,6],[17865,6],[18024,6]]},"609":{"position":[[46,6],[243,6],[499,6]]},"628":{"position":[[1207,6],[1231,7],[1304,6]]},"632":{"position":[[5224,6]]},"678":{"position":[[261,6],[664,6],[728,6]]},"694":{"position":[[47,6],[2762,6]]},"698":{"position":[[64,6],[243,6],[515,6],[2227,6],[2324,6],[2657,6],[2955,6],[9149,6],[9241,6]]},"706":{"position":[[261,6]]},"716":{"position":[[1863,6],[1933,6]]},"722":{"position":[[4326,6]]},"754":{"position":[[621,6],[685,6]]},"769":{"position":[[6012,6],[6060,6],[6244,6],[6275,6],[6423,6],[19618,6],[19769,6],[19951,6],[20553,6],[21264,6],[35381,9],[35621,6],[35834,6],[35878,6]]},"771":{"position":[[529,6],[618,6]]},"790":{"position":[[5531,6]]},"792":{"position":[[8932,6]]},"811":{"position":[[1968,6]]},"813":{"position":[[8349,6]]}}}],["directli",{"_index":276,"t":{"16":{"position":[[7526,8],[7557,8],[7668,8],[8622,8],[10528,8],[10681,8],[10810,8]]},"34":{"position":[[2,8],[113,8]]},"52":{"position":[[761,8]]},"56":{"position":[[1962,8],[2110,8]]},"58":{"position":[[1095,8]]},"60":{"position":[[1333,8]]},"68":{"position":[[2405,8]]},"324":{"position":[[82,8]]},"336":{"position":[[748,8]]},"403":{"position":[[2258,8],[2267,8],[7633,8]]},"425":{"position":[[438,8]]},"465":{"position":[[983,8]]},"471":{"position":[[6036,8]]},"491":{"position":[[664,8]]},"501":{"position":[[102,8]]},"503":{"position":[[1635,9]]},"539":{"position":[[1102,9]]},"591":{"position":[[86,8],[405,8]]},"678":{"position":[[963,9]]},"692":{"position":[[378,9]]},"718":{"position":[[1898,8]]},"754":{"position":[[896,8]]},"786":{"position":[[28867,8]]},"788":{"position":[[745,8]]},"792":{"position":[[8751,9],[14543,8]]},"809":{"position":[[1658,8]]},"813":{"position":[[8187,9],[13987,8]]}}}],["directly_related_user_typ",{"_index":180,"t":{"16":{"position":[[1148,30],[1220,30],[1289,30],[1357,30],[2127,30],[2243,30],[2356,30],[2468,30],[2679,30],[6989,30],[7061,30],[7130,30],[7198,30],[7986,30],[11654,30],[11723,30]]},"54":{"position":[[975,30],[1947,30],[2067,30],[2138,30],[2251,30],[3269,30],[3389,30],[3460,30],[3573,30]]},"56":{"position":[[1240,30]]},"58":{"position":[[500,30],[569,30]]},"60":{"position":[[658,30],[1085,30],[1156,30],[1816,30]]},"62":{"position":[[434,30]]},"64":{"position":[[511,30]]},"66":{"position":[[538,30]]},"68":{"position":[[1525,30],[1594,30],[1663,30],[2232,30]]},"80":{"position":[[422,30],[491,30],[559,30],[1634,30],[1703,30],[1771,30]]},"204":{"position":[[631,30],[800,30]]},"221":{"position":[[605,30],[774,30]]},"238":{"position":[[512,30]]},"261":{"position":[[412,30],[577,30],[782,30]]},"279":{"position":[[663,30],[943,30],[1017,30]]},"306":{"position":[[751,30],[958,30]]},"314":{"position":[[573,30],[642,30],[849,30]]},"316":{"position":[[768,30],[837,30],[1044,30]]},"328":{"position":[[686,30],[755,30]]},"336":{"position":[[560,30],[629,30]]},"345":{"position":[[347,30],[516,30]]},"347":{"position":[[459,30],[569,30]]},"355":{"position":[[891,30],[960,30]]},"367":{"position":[[743,30],[856,30],[1069,30]]},"379":{"position":[[586,30],[655,30]]},"419":{"position":[[2753,30],[3113,30],[3184,30],[3621,30],[3692,30],[3763,30]]},"423":{"position":[[1807,30],[2167,30],[2238,30],[2718,30],[2789,30],[2903,30]]},"425":{"position":[[1019,30]]},"429":{"position":[[1492,30],[1607,30]]},"437":{"position":[[1153,30],[1230,30],[1403,30]]},"447":{"position":[[934,30],[1011,30],[1184,30]]},"455":{"position":[[627,30],[796,30]]},"463":{"position":[[633,30],[828,30],[899,30]]},"465":{"position":[[459,30],[793,30],[864,30]]},"477":{"position":[[529,30]]},"493":{"position":[[586,30],[655,30]]},"501":{"position":[[564,30],[633,30]]},"503":{"position":[[1313,30],[1382,30]]},"511":{"position":[[543,30]]},"519":{"position":[[471,30],[658,30]]},"531":{"position":[[496,30]]},"539":{"position":[[606,30],[673,30],[845,30]]},"553":{"position":[[762,30],[831,30]]},"601":{"position":[[712,30],[859,30],[1066,30]]},"605":{"position":[[523,30],[670,30],[877,30]]},"607":{"position":[[586,30]]},"613":{"position":[[607,30],[774,30]]},"620":{"position":[[490,30],[561,30],[728,30]]},"628":{"position":[[660,30],[729,30],[916,30]]},"660":{"position":[[1544,30],[1622,30],[1699,30],[2670,30],[2748,30]]},"668":{"position":[[1976,30],[2054,30],[2136,30],[2214,30]]},"672":{"position":[[1336,30],[1414,30],[1496,30],[1574,30],[2545,30],[2623,30]]},"690":{"position":[[1070,30],[1154,30],[1231,30]]},"694":{"position":[[2083,30],[2160,30],[2240,30],[2324,30],[2401,30]]},"696":{"position":[[579,30],[656,30],[1870,30],[1999,30],[2137,30],[2221,30],[2298,30],[2509,30],[2586,30]]},"698":{"position":[[1648,30],[1777,30],[2046,30],[2123,30]]},"716":{"position":[[1431,30],[1508,30],[1577,30],[1645,30]]},"718":{"position":[[1003,30],[1080,30],[1149,30],[1217,30],[1615,30]]},"720":{"position":[[6479,30],[6556,30],[6625,30],[6693,30]]},"722":{"position":[[2086,30],[2160,30],[2430,30],[3594,30],[3668,30],[3938,30],[5447,30],[5524,30],[5593,30],[5661,30],[5980,30],[6054,30],[6324,30]]},"734":{"position":[[1082,30],[1695,30],[1768,30],[2092,30]]},"742":{"position":[[402,30],[635,30],[2096,30],[2184,30],[2276,30],[3914,30],[3987,30]]},"746":{"position":[[1430,30],[1518,30],[1610,30],[2516,30],[2589,30],[2913,30],[3081,30],[3254,30]]},"748":{"position":[[1182,30],[1819,30],[1897,30],[1985,30],[2077,30],[2983,30],[3056,30],[3380,30],[3548,30],[3721,30]]},"765":{"position":[[989,30],[1162,30],[1343,30]]},"769":{"position":[[5759,30],[5828,30],[6989,30],[7058,30],[7231,30],[7416,30],[19396,30],[19465,30],[22120,30],[22189,30],[22362,30],[22543,30],[29319,30],[29388,30],[29695,30],[29876,30],[36374,30],[36443,30],[36892,30],[38218,30],[38525,30],[38706,30]]},"786":{"position":[[731,30],[801,30],[870,30],[943,30],[1011,30],[1495,30],[28037,30],[28107,30],[28176,30],[28249,30],[28317,30],[28676,30]]},"788":{"position":[[572,30],[1647,30],[1759,30],[1870,30],[1985,30],[2095,30]]},"792":{"position":[[1124,30],[2131,30],[2243,30],[2354,30],[2469,30],[2579,30],[2689,30],[22190,30],[22352,30],[22513,30],[22678,30],[22838,30],[22998,30],[23207,30],[23288,30]]},"809":{"position":[[771,30],[840,30],[912,30],[981,30],[1377,30],[27931,30],[28000,30],[28072,30],[28141,30]]},"811":{"position":[[1173,30],[1286,30],[1402,30],[1515,30],[1726,30]]},"813":{"position":[[1256,30],[1328,30],[1441,30],[1557,30],[1670,30],[16172,30],[16244,30],[16357,30],[16473,30],[16586,30],[16797,30]]},"815":{"position":[[1936,30],[2008,30],[2121,30],[2237,30],[2350,30],[2597,30]]}}}],["directori",{"_index":897,"t":{"140":{"position":[[163,11]]},"142":{"position":[[2709,9],[5340,9]]}}}],["disabl",{"_index":870,"t":{"130":{"position":[[230,7]]},"146":{"position":[[375,7]]},"148":{"position":[[85,9]]},"156":{"position":[[151,7]]},"158":{"position":[[70,8]]},"349":{"position":[[232,9]]},"591":{"position":[[128,9]]},"601":{"position":[[181,8]]},"603":{"position":[[37,9]]},"607":{"position":[[51,9],[18012,9]]}}}],["disadvantag",{"_index":2187,"t":{"694":{"position":[[261,14]]}}}],["disallow",{"_index":523,"t":{"56":{"position":[[905,12]]},"415":{"position":[[497,11]]},"431":{"position":[[97,8]]},"678":{"position":[[710,8]]},"754":{"position":[[667,8]]},"769":{"position":[[35372,8],[35823,8]]}}}],["disappear",{"_index":1537,"t":{"397":{"position":[[808,11]]}}}],["disassoci",{"_index":2046,"t":{"634":{"position":[[43,13]]}}}],["discard",{"_index":1327,"t":{"273":{"position":[[2724,10]]}}}],["discord",{"_index":1642,"t":{"407":{"position":[[457,8]]},"417":{"position":[[382,7]]}}}],["discov",{"_index":1540,"t":{"397":{"position":[[1023,8]]},"399":{"position":[[4667,8]]}}}],["discuss",{"_index":198,"t":{"16":{"position":[[3069,9]]},"769":{"position":[[35677,10]]}}}],["dish",{"_index":2519,"t":{"762":{"position":[[257,6],[429,6]]},"767":{"position":[[11135,6],[12620,6],[14338,6],[15846,6],[17055,6],[18292,6],[19707,6],[21355,6],[22793,6],[23917,6]]}}}],["disrupt",{"_index":2056,"t":{"644":{"position":[[17,11]]}}}],["dive",{"_index":2245,"t":{"700":{"position":[[96,4]]},"724":{"position":[[367,4]]},"771":{"position":[[678,4]]}}}],["do",{"_index":2678,"t":{"792":{"position":[[14796,5]]},"813":{"position":[[14295,5]]}}}],["doc",{"_index":593,"t":{"68":{"position":[[409,5],[897,3],[1118,6],[1826,3],[1953,6],[2364,3],[2432,3],[2487,3],[2614,3]]},"261":{"position":[[192,3],[693,6]]},"431":{"position":[[837,4]]},"710":{"position":[[428,5]]},"773":{"position":[[119,4]]},"792":{"position":[[14681,3]]},"813":{"position":[[14184,3]]}}}],["doc'",{"_index":601,"t":{"68":{"position":[[2650,5]]}}}],["doc:budget",{"_index":1283,"t":{"259":{"position":[[3092,14]]}}}],["doc:plan",{"_index":1305,"t":{"269":{"position":[[281,12],[333,12],[369,14]]}}}],["docker",{"_index":878,"t":{"136":{"position":[[65,7]]},"138":{"position":[[40,6],[86,6],[125,6],[171,6],[189,6]]},"142":{"position":[[448,6],[455,6],[654,6],[733,6],[1096,6],[1296,6],[1568,6],[2728,6],[3297,6],[3304,6],[3344,6],[3426,6],[3783,6],[3963,6],[4215,6],[5359,6]]},"144":{"position":[[605,6],[1318,7],[1369,6],[1419,6],[2039,6],[2843,7],[2894,6],[2938,6]]},"146":{"position":[[309,7]]},"148":{"position":[[294,7],[302,6],[548,6]]},"152":{"position":[[146,6],[282,6]]},"154":{"position":[[179,6],[272,6]]},"166":{"position":[[52,6],[107,7]]}}}],["document",{"_index":90,"t":{"8":{"position":[[415,10],[525,9]]},"12":{"position":[[151,8]]},"16":{"position":[[614,8],[853,8],[972,11],[1673,8],[1951,11],[5488,8],[5786,8],[6384,8],[6577,9],[6660,8],[6813,11],[7317,8],[7791,9],[7815,8],[7890,11],[8173,8],[8402,9],[9272,14],[10552,8],[10705,8],[10835,8],[11346,8],[11453,11],[12105,9],[23564,8],[24412,11],[25407,11],[26627,11],[28302,11],[28536,11],[28572,10],[29465,14],[29867,8]]},"52":{"position":[[872,13]]},"54":{"position":[[515,8],[2368,11],[3770,9],[3897,8]]},"58":{"position":[[87,8],[127,8],[236,11],[641,8],[735,9],[1531,8],[1706,8],[1909,9],[2004,8]]},"60":{"position":[[384,8],[775,11],[1310,8],[1442,8],[1546,11],[2079,8],[2149,8],[2411,8],[2483,8],[2910,9]]},"62":{"position":[[174,8],[259,11]]},"64":{"position":[[192,8],[287,11]]},"66":{"position":[[259,8],[350,11]]},"80":{"position":[[112,8],[275,11],[1487,11]]},"92":{"position":[[47,9],[275,14],[361,9]]},"98":{"position":[[115,9],[813,9],[2738,9],[4313,11],[4344,11],[4458,8],[5429,10]]},"116":{"position":[[137,13]]},"122":{"position":[[49,8]]},"126":{"position":[[14,9],[249,11],[474,11],[792,11],[1615,11],[1798,8]]},"128":{"position":[[151,13]]},"164":{"position":[[122,13]]},"176":{"position":[[239,13]]},"200":{"position":[[472,9]]},"202":{"position":[[401,8],[420,8]]},"204":{"position":[[270,8],[400,8],[704,11]]},"211":{"position":[[112,8]]},"221":{"position":[[264,8],[388,8],[678,11],[923,8],[991,9],[1132,8]]},"230":{"position":[[75,10],[191,10]]},"273":{"position":[[2804,9],[2926,9]]},"275":{"position":[[543,10]]},"296":{"position":[[567,10]]},"304":{"position":[[138,9],[476,9]]},"306":{"position":[[198,8],[338,8],[481,8],[655,11],[1192,8]]},"312":{"position":[[173,9],[10305,8],[10414,8],[10545,9],[10668,8],[10756,8],[10848,8],[10902,8]]},"314":{"position":[[48,9],[158,8],[252,8],[449,11],[1007,9]]},"316":{"position":[[51,10],[339,8],[552,11]]},"318":{"position":[[170,9],[231,9],[1076,8],[2123,8],[3495,8],[4665,8],[5381,8],[5567,9],[5775,9],[11003,9]]},"326":{"position":[[129,8],[162,9]]},"328":{"position":[[199,8],[297,8],[371,9],[422,8],[564,11]]},"334":{"position":[[94,8],[142,9],[239,9]]},"336":{"position":[[207,8],[359,11],[712,8],[806,8],[898,8],[959,9]]},"345":{"position":[[125,8],[420,11],[740,8]]},"347":{"position":[[84,8],[258,11]]},"377":{"position":[[88,9]]},"379":{"position":[[231,8],[322,8],[464,11]]},"383":{"position":[[61,8]]},"397":{"position":[[34,9],[1361,8],[1511,8],[1601,9],[1759,8],[1868,8],[1947,9],[2086,8],[2141,8],[2229,9],[2257,8],[2304,8],[2383,9],[2426,8],[2463,9]]},"399":{"position":[[407,8],[498,8],[648,8],[801,8],[910,8],[989,9],[1128,8],[1183,8],[1269,9],[1297,8],[1344,8],[1423,9],[1466,8],[1503,9],[2242,8],[2392,8],[2482,9],[2641,8],[2750,8],[2829,9],[2968,8],[3023,8],[3111,9],[3139,8],[3186,8],[3265,9],[3308,8],[3345,9],[3960,8],[4136,8]]},"401":{"position":[[733,8],[883,8],[973,9],[1131,8],[1240,8],[1319,9],[1458,8],[1513,8],[1601,9],[1629,8],[1676,8],[1755,9],[1798,8],[1835,9],[2259,8],[2675,9],[2883,8]]},"403":{"position":[[210,10],[2193,9],[2913,9],[3070,11],[3161,10],[3392,9],[3614,8],[3731,9],[3839,8],[3947,8],[3996,8],[4234,9],[4265,8],[4416,9],[4525,8],[4634,8],[4679,8],[4894,9],[5045,8],[5325,8],[5491,9],[5830,10],[5943,8],[6060,9],[6115,8],[6201,9],[6248,8],[7072,8],[7181,8],[7254,9],[7823,10],[7870,8],[7902,8],[7947,9],[8237,8],[8290,8],[8376,9],[8696,8],[8741,8],[8830,9],[9140,8],[9177,9],[9404,8],[9444,8],[9896,8],[10033,8]]},"405":{"position":[[1485,10]]},"419":{"position":[[271,8],[775,11],[1257,8],[1541,8],[1793,8],[1853,8],[2441,8],[3257,11],[3961,8]]},"423":{"position":[[1013,8],[1322,9],[1519,8],[2354,11]]},"425":{"position":[[188,8],[367,9],[717,9],[804,8],[923,11],[1284,8],[1485,9],[1559,9],[2229,8]]},"435":{"position":[[202,8],[300,8],[345,8],[409,9],[516,9]]},"437":{"position":[[219,8],[381,9],[482,8],[682,9],[733,8],[957,11],[1629,8],[1760,8],[1885,8],[2321,9],[2504,10]]},"439":{"position":[[92,10]]},"445":{"position":[[173,9],[10378,8],[10493,8]]},"447":{"position":[[216,8],[488,11]]},"449":{"position":[[87,8],[183,9],[5292,8],[5398,9]]},"453":{"position":[[225,9]]},"455":{"position":[[277,8],[413,8],[700,11]]},"461":{"position":[[44,9],[131,9],[211,9],[314,8],[357,8]]},"463":{"position":[[50,9],[221,9],[395,8],[706,11],[986,8],[1075,9]]},"465":{"position":[[48,9],[199,8],[532,11],[947,8],[1057,8],[1170,8],[1218,9]]},"469":{"position":[[855,8],[1921,8],[3312,8],[4501,8],[5247,8]]},"471":{"position":[[5724,8]]},"473":{"position":[[264,10],[328,9]]},"475":{"position":[[88,9],[316,8]]},"477":{"position":[[231,8],[312,8],[437,11]]},"483":{"position":[[204,8]]},"485":{"position":[[5774,10],[5837,13],[6150,9]]},"487":{"position":[[192,8],[344,9]]},"491":{"position":[[837,8]]},"509":{"position":[[419,8],[438,8]]},"511":{"position":[[234,8],[327,8],[447,11]]},"517":{"position":[[213,9]]},"519":{"position":[[206,8],[375,11]]},"523":{"position":[[322,9]]},"527":{"position":[[210,9]]},"529":{"position":[[339,9]]},"553":{"position":[[231,8],[395,8],[547,11],[944,8]]},"569":{"position":[[3576,12],[5640,12],[5670,11],[5994,8],[9070,12],[11073,12],[11103,11]]},"571":{"position":[[523,8],[3543,12],[5253,12],[5283,11]]},"576":{"position":[[10926,8]]},"583":{"position":[[921,11],[2023,11],[3412,11],[5347,11],[5696,11],[5732,10]]},"601":{"position":[[286,8],[511,11],[1189,8],[1212,8]]},"605":{"position":[[97,8],[322,11],[1305,9],[6575,8],[6732,8],[6898,9],[12185,8],[12586,9],[13140,9],[18500,8],[18969,9],[19390,8],[25047,8],[30189,9],[30267,8],[30301,9],[30395,9]]},"607":{"position":[[158,8],[335,11],[1149,9],[6442,8],[6818,9],[12136,8],[12334,9],[12579,9],[17943,8],[18317,8]]},"611":{"position":[[151,9]]},"613":{"position":[[198,8],[347,8],[511,11]]},"620":{"position":[[48,9],[86,8],[180,8],[368,11]]},"622":{"position":[[106,9]]},"624":{"position":[[5500,9]]},"642":{"position":[[4,8],[285,8],[412,11],[899,8],[1027,11]]},"644":{"position":[[287,8],[464,11]]},"648":{"position":[[5718,8]]},"650":{"position":[[147,8],[275,11]]},"654":{"position":[[416,8]]},"728":{"position":[[448,8]]},"773":{"position":[[193,9]]},"781":{"position":[[50,14]]},"786":{"position":[[27115,13]]},"796":{"position":[[269,8],[289,8],[769,9],[1035,9],[1282,9]]},"798":{"position":[[702,9]]},"804":{"position":[[56,14],[214,9],[224,9],[295,9],[384,8],[408,9]]},"806":{"position":[[231,9],[406,8],[437,9]]},"809":{"position":[[293,8],[408,8],[596,11],[1230,8],[1281,11],[1493,8],[1606,8],[1708,10],[11945,9],[27147,13],[27297,8],[27517,11],[28276,8],[28420,8],[28481,8]]},"811":{"position":[[388,9],[439,8],[759,11]]},"813":{"position":[[108,10],[179,9],[317,8],[400,8],[438,9],[513,8],[547,10],[815,11],[1299,10],[8128,8],[8285,8],[8371,8],[13924,10],[14011,8],[14827,8],[15129,10],[15263,11],[16215,10]]},"815":{"position":[[193,9],[584,8],[893,10],[1027,11],[1979,10],[9925,8],[25399,8]]}}}],["document'",{"_index":552,"t":{"60":{"position":[[1402,10]]},"403":{"position":[[5262,10],[6586,10]]},"437":{"position":[[307,10]]},"605":{"position":[[30531,10],[30557,10]]},"607":{"position":[[89,10],[764,10]]}}}],["document:${request.params.docu",{"_index":797,"t":{"98":{"position":[[582,38]]}}}],["document:0001",{"_index":1608,"t":{"403":{"position":[[5129,16]]}}}],["document:1",{"_index":1634,"t":{"405":{"position":[[1847,11],[1925,13],[1951,10],[2086,13],[2590,11],[2640,10],[2689,10],[2737,10],[2793,10],[2905,11],[2965,10],[3014,10],[3062,10],[3128,10]]}}}],["document:2",{"_index":1636,"t":{"405":{"position":[[2113,10],[2194,13],[2220,10],[2352,13],[3168,11],[3218,10],[3267,10],[3315,10],[3371,10],[3481,11],[3541,10],[3600,10],[3648,10],[3714,10]]}}}],["document:2021",{"_index":2688,"t":{"809":{"position":[[1760,13],[2547,14],[4877,14],[6805,13],[7636,14],[8632,14],[9836,14],[11763,14],[11806,14],[12682,14],[15004,14],[17701,14],[18693,14],[19893,14],[21804,14],[21847,14],[22739,14],[23733,14],[24935,14],[26853,14],[26896,14],[29377,14],[30369,14],[31569,14],[33480,14],[33523,14],[34415,14],[35408,14],[36609,14],[38524,14],[38567,14]]},"811":{"position":[[2073,13],[3065,13],[3143,14],[4548,13],[6218,13],[6305,14],[7676,13],[8874,13],[10084,14],[11080,14],[12284,14],[14211,14],[14254,14]]},"813":{"position":[[2631,13],[2704,14],[2734,13],[2772,13],[2801,14],[2855,14],[3825,13],[3984,13],[4022,13],[5400,13],[5482,14],[5513,13],[5551,13],[5587,14],[5643,14],[6727,13],[6836,13],[6874,13],[7687,13],[7794,13],[7832,13],[9212,14],[10211,14],[11418,14],[13352,14],[13395,14],[14345,13],[14404,14],[14458,14],[14605,14],[14678,14]]},"815":{"position":[[3503,13],[3580,14],[3657,13],[3746,14],[3817,13],[3892,14],[4870,13],[5080,13],[5296,13],[6674,13],[6760,14],[6838,13],[6936,14],[7008,13],[7092,14],[8184,13],[8344,13],[8510,13],[9411,13],[9569,13],[9733,13],[10738,14],[11738,14],[12946,14],[14881,14],[14932,14],[15908,14],[16910,14],[18120,14],[20062,14],[20113,14],[21017,14],[22021,14],[23233,14],[25184,14],[25235,14],[26213,14],[27215,14],[28425,14],[30367,14],[30418,14],[31319,14],[32321,14],[33531,14],[35473,14],[35524,14]]}}}],["document:budget",{"_index":1436,"t":{"345":{"position":[[809,18],[1034,16],[2016,18],[3004,18],[4200,17],[6100,18],[6138,17]]},"347":{"position":[[753,16]]}}}],["document:budget#read",{"_index":1443,"t":{"347":{"position":[[939,25],[997,25],[1083,25]]}}}],["document:budget#writ",{"_index":1444,"t":{"347":{"position":[[1144,24]]}}}],["document:compani",{"_index":1775,"t":{"485":{"position":[[282,16],[1074,17],[3484,17],[6216,17]]},"487":{"position":[[73,16],[1174,17],[2168,17],[3370,17],[5285,17],[5332,17]]}}}],["document:may_budget.doc",{"_index":2009,"t":{"622":{"position":[[214,24],[1193,26],[3735,25]]},"624":{"position":[[148,25],[984,26],[1985,26],[3194,25],[5138,26],[5184,25],[5420,24],[5563,24]]}}}],["document:meeting_not",{"_index":1846,"t":{"525":{"position":[[5497,22],[5550,22]]}}}],["document:meeting_notes.doc",{"_index":1417,"t":{"328":{"position":[[990,29]]},"338":{"position":[[74,27],[147,27],[211,27],[1071,29],[2069,29],[3275,28],[5204,29],[5253,28]]},"385":{"position":[[73,27],[873,29],[3207,28]]},"387":{"position":[[138,28],[971,29],[1969,29],[3175,28],[5104,29],[5153,28],[5301,28],[6221,29],[7220,29],[8427,28],[10359,29],[10408,28]]},"461":{"position":[[472,26],[716,26],[779,26]]},"469":{"position":[[96,26],[916,29],[3382,28]]},"471":{"position":[[212,27],[1044,29],[2042,29],[3248,28],[5177,29],[5226,28],[5430,27],[5614,26],[5673,26],[5764,26]]},"523":{"position":[[435,27],[1255,29],[3719,28]]},"525":{"position":[[166,26],[244,27],[1106,29],[2106,29],[3314,28],[5251,29],[5300,28]]}}}],["document:new",{"_index":236,"t":{"16":{"position":[[4348,12],[9399,13],[10338,12],[10616,13],[10761,13],[10909,13],[11139,12],[11914,13],[11996,12],[12211,12],[13055,13],[14048,13],[15249,13],[17164,13],[17207,13],[17840,12],[18667,13],[19660,13],[20861,13],[22776,13],[22819,13],[29876,12],[30065,13]]},"58":{"position":[[1366,12],[1468,12],[1595,13],[1644,12],[1770,13],[1839,12],[1940,12],[2068,13]]},"60":{"position":[[1941,12],[2226,13],[2547,13]]},"62":{"position":[[563,12],[692,12],[770,13],[819,12],[897,13],[1431,13]]},"64":{"position":[[640,12],[732,12],[810,13],[873,12],[961,13],[1410,13],[1488,12],[1570,12],[1671,13],[1733,12],[1843,13]]},"66":{"position":[[667,12],[744,12],[822,13],[878,12],[1012,13],[1445,13],[1523,12],[1634,12],[1735,13],[1782,12],[1858,13]]}}}],["document:otherdoc",{"_index":453,"t":{"16":{"position":[[24450,21],[25543,21],[26715,21],[28382,21],[28695,21]]},"126":{"position":[[287,21],[610,21],[880,21],[1695,21],[1750,17]]},"583":{"position":[[1015,19],[1067,21],[2329,21],[3631,21],[5450,20],[5544,21],[5951,20],[5984,21]]}}}],["document:plan",{"_index":454,"t":{"16":{"position":[[24472,20],[25565,20],[26737,20],[28404,21],[28717,20]]},"126":{"position":[[309,20],[632,20],[902,20],[1717,21],[1772,17]]},"211":{"position":[[135,19],[231,17],[315,20]]},"215":{"position":[[58,17],[899,20],[1889,20],[3087,19],[4993,20],[5033,19],[6065,20],[7057,20],[8257,19],[10170,20],[10210,19]]},"221":{"position":[[1205,20],[1380,18],[2199,20],[3185,20],[4379,19],[6268,20],[6308,19],[11629,18],[12607,20],[13597,20],[14795,19],[16701,20],[16741,19],[17631,20],[18623,20],[19823,19],[21736,20],[21776,19]]},"230":{"position":[[212,18]]},"232":{"position":[[76,18],[942,20],[1933,20],[3132,19],[5041,20],[5081,19]]},"306":{"position":[[1266,20]]},"312":{"position":[[1039,20],[2030,20],[3229,19],[5139,20],[5179,19],[6068,20],[7058,20],[8256,19],[10162,20],[10202,19]]},"318":{"position":[[90,17],[1135,20],[3563,19],[6642,20],[7633,20],[8832,19],[10741,20],[10781,19],[11877,20],[12868,20],[14067,19],[15977,20],[16017,19]]},"437":{"position":[[1699,20],[1825,20],[1949,20]]},"445":{"position":[[1042,20],[2036,20],[3238,19],[5160,20],[5200,19],[6092,20],[7085,20],[8286,19],[10204,20],[10244,19]]},"449":{"position":[[1003,20],[1998,20],[3201,19],[5127,20],[5167,19],[6217,20],[7212,20],[8415,19],[10340,20],[10380,19]]},"553":{"position":[[335,18],[1007,20]]},"562":{"position":[[213,18],[1036,20],[2025,20],[3222,19],[5124,20],[5164,19],[5375,17]]},"569":{"position":[[11405,17],[14508,20],[16512,20],[16552,19]]},"571":{"position":[[564,18],[666,18],[5348,17],[5507,17]]},"576":{"position":[[183,18],[977,20],[1017,19],[2083,19],[3352,19],[3391,19],[4494,20],[5198,20],[5238,19],[6311,20],[6351,19],[7417,19],[8686,19],[8725,19],[9828,20],[10532,20],[10572,19],[10860,17],[10963,17]]},"583":{"position":[[1089,20],[2351,20],[3653,20],[5566,21],[6006,20]]},"605":{"position":[[1138,17],[1213,20],[2165,20],[3155,20],[4353,19],[6259,20],[6299,19],[6482,18],[6693,17],[6806,20],[7758,20],[8748,20],[9946,19],[11852,20],[11892,19],[12092,18],[12740,20],[12916,18],[14003,20],[14996,20],[16197,19],[18115,20],[18155,19],[18407,18],[19300,20],[20255,20],[21245,20],[22443,19],[24349,20],[24389,19],[24879,18],[24956,20],[25913,20],[26904,20],[28103,19],[30013,20],[30053,19]]},"607":{"position":[[982,17],[1057,20],[2010,20],[3001,20],[4200,19],[6109,20],[6149,19],[6345,18],[6650,18],[6723,20],[7682,20],[8676,20],[9878,19],[11799,20],[11839,19],[12039,18],[12486,20],[13441,20],[14433,20],[15633,19],[17546,20],[17586,19],[17846,18],[18147,18],[18225,20],[19184,20],[20176,20],[21376,19],[23290,20],[23330,19]]}}}],["document:pr",{"_index":1663,"t":{"419":{"position":[[1345,19],[1605,19],[1905,19]]},"423":{"position":[[224,19],[302,19]]},"425":{"position":[[244,19],[1345,19],[2290,19]]}}}],["document:pricing#view",{"_index":1678,"t":{"423":{"position":[[896,23]]}}}],["document:roadmap",{"_index":265,"t":{"16":{"position":[[5917,16],[6028,16],[6143,16],[6292,16],[6504,16]]},"642":{"position":[[696,19],[777,19]]},"644":{"position":[[229,16],[1673,19],[2665,19],[3865,18],[5780,19],[5819,18],[6709,19],[7700,19],[8899,18],[10810,19],[10849,18]]},"646":{"position":[[950,19],[3362,18],[6177,19],[7172,19],[8375,18],[10302,19],[10341,18]]},"648":{"position":[[6536,20],[6609,19],[9054,18],[9137,18],[11986,20],[12059,19],[14506,18],[14589,18],[17627,19],[18619,19],[19819,18],[21734,19],[21773,18],[22706,19],[23696,19],[24894,18],[26800,19],[26839,18]]}}}],["document:z",{"_index":856,"t":{"110":{"position":[[84,10]]},"114":{"position":[[68,10],[281,13],[494,13],[783,12]]},"188":{"position":[[83,10],[143,13]]},"192":{"position":[[186,13],[818,12]]},"194":{"position":[[140,10],[200,13],[343,13],[977,12]]}}}],["document:{id",{"_index":1604,"t":{"403":{"position":[[4102,15],[4783,15],[6426,15],[6494,15]]}}}],["document‚Äô",{"_index":1681,"t":{"423":{"position":[[1221,10]]}}}],["doesn't",{"_index":1530,"t":{"397":{"position":[[222,7]]},"537":{"position":[[5572,7]]}}}],["domain",{"_index":186,"t":{"16":{"position":[[1843,6],[2170,9],[2286,9],[2399,9],[2511,9],[2585,9]]},"54":{"position":[[181,6],[881,9],[2010,9],[2201,9],[2314,9],[3332,9],[3523,9],[3636,9],[3751,7],[3784,6]]},"318":{"position":[[16356,7]]},"326":{"position":[[235,6]]},"338":{"position":[[5474,7]]},"387":{"position":[[10639,7]]},"467":{"position":[[5071,6]]},"477":{"position":[[1671,6]]},"505":{"position":[[27184,6]]},"525":{"position":[[5710,7]]},"527":{"position":[[229,6]]},"624":{"position":[[5821,7]]},"796":{"position":[[249,6]]},"804":{"position":[[268,6]]},"806":{"position":[[59,6],[90,6],[124,6],[160,6],[195,6],[327,7],[488,6]]},"811":{"position":[[224,7],[356,6],[641,6],[1236,9],[1349,9],[1465,9],[1578,9],[1632,9],[1813,8],[1919,6],[1988,7],[2015,7],[2822,6],[3047,6],[4137,6],[4530,6],[5945,6],[6200,6],[7413,6],[7658,6],[8619,6],[8856,6]]},"813":{"position":[[1391,9],[1504,9],[1620,9],[1733,9],[8208,6],[15145,6],[16307,9],[16420,9],[16536,9],[16649,9],[16703,9]]},"815":{"position":[[909,6],[2071,9],[2184,9],[2300,9],[2449,9],[2503,9],[2694,6],[15059,7],[25366,7]]}}}],["domain#member,us",{"_index":185,"t":{"16":{"position":[[1707,20],[1746,20],[1782,20],[1817,20]]}}}],["domain/databas",{"_index":1546,"t":{"399":{"position":[[133,15]]}}}],["domain:auth0.com",{"_index":296,"t":{"16":{"position":[[9073,16]]}}}],["domain:xyz",{"_index":2701,"t":{"811":{"position":[[2878,14],[2942,14],[3009,14],[6010,12],[6084,12],[6161,12]]},"815":{"position":[[3631,10],[5054,10],[6812,10],[8318,10],[9543,10]]}}}],["domain:xyz#memb",{"_index":2702,"t":{"811":{"position":[[3094,20],[6254,20]]},"815":{"position":[[3694,20],[6882,20]]}}}],["don't",{"_index":1519,"t":{"393":{"position":[[299,5]]},"397":{"position":[[802,5]]},"403":{"position":[[7443,5]]},"405":{"position":[[3832,5]]},"423":{"position":[[807,5]]},"503":{"position":[[1503,5]]}}}],["done",{"_index":438,"t":{"16":{"position":[[17461,4],[23214,4]]},"471":{"position":[[17,4]]},"668":{"position":[[2322,5]]},"696":{"position":[[17,4]]},"722":{"position":[[1569,4]]},"742":{"position":[[4105,5]]},"792":{"position":[[8712,6]]},"813":{"position":[[8148,6]]}}}],["don‚Äôt",{"_index":1675,"t":{"421":{"position":[[331,5]]},"425":{"position":[[2514,5]]}}}],["door",{"_index":2007,"t":{"611":{"position":[[664,5]]}}}],["dotnet",{"_index":840,"t":{"102":{"position":[[893,6],[905,6]]}}}],["down",{"_index":495,"t":{"52":{"position":[[599,4]]},"142":{"position":[[3182,5],[3234,5],[3281,5]]},"275":{"position":[[190,4],[318,4]]},"397":{"position":[[978,4],[2697,5]]},"399":{"position":[[1737,5],[3579,5]]},"401":{"position":[[2069,5]]},"405":{"position":[[2460,4]]},"491":{"position":[[1075,4]]},"664":{"position":[[72,4]]},"738":{"position":[[72,4]]}}}],["downsid",{"_index":2607,"t":{"769":{"position":[[20809,9]]}}}],["downtim",{"_index":2051,"t":{"638":{"position":[[250,8]]}}}],["draft",{"_index":2506,"t":{"758":{"position":[[385,6],[502,6],[601,5]]},"760":{"position":[[408,5]]},"762":{"position":[[581,5],[726,5],[878,5]]},"767":{"position":[[1192,5],[1504,5],[3137,5],[3561,5],[5483,5],[5815,5],[7481,5],[7805,5],[9415,5],[9735,5]]},"769":{"position":[[38971,5],[39116,5],[39268,5]]}}}],["drive",{"_index":89,"t":{"8":{"position":[[370,6]]},"14":{"position":[[173,6]]},"16":{"position":[[30346,6]]},"58":{"position":[[2245,6]]},"60":{"position":[[3516,6]]},"273":{"position":[[2779,6],[2946,6]]},"275":{"position":[[508,6]]},"300":{"position":[[7,5]]},"304":{"position":[[496,6]]},"340":{"position":[[99,5],[175,6]]},"395":{"position":[[311,5]]},"397":{"position":[[1375,5],[1410,6],[1449,5],[1484,6],[2843,5]]},"399":{"position":[[512,5],[547,6],[586,5],[621,6],[1883,5],[2256,5],[2291,6],[2330,5],[2365,6],[3725,5],[3809,8],[3989,5],[4180,5]]},"401":{"position":[[747,5],[782,6],[821,5],[856,6],[2215,5],[2435,5],[3224,5]]},"403":{"position":[[2213,6],[5464,5],[5798,5],[6299,6],[6616,5],[7981,5]]},"405":{"position":[[1377,5]]},"407":{"position":[[41,5]]},"473":{"position":[[223,5]]},"507":{"position":[[214,5],[290,6]]},"527":{"position":[[163,5],[250,5]]},"796":{"position":[[47,5]]},"802":{"position":[[7,5],[143,5]]},"809":{"position":[[70,5],[27118,5]]},"811":{"position":[[7,5]]},"815":{"position":[[7,5]]}}}],["drive'",{"_index":2687,"t":{"802":{"position":[[301,7]]},"804":{"position":[[7,7]]}}}],["drive:{id",{"_index":1613,"t":{"403":{"position":[[6452,13]]}}}],["drop",{"_index":1641,"t":{"407":{"position":[[445,4]]},"415":{"position":[[91,7]]}}}],["dropdown",{"_index":2680,"t":{"792":{"position":[[15460,8]]}}}],["dsl",{"_index":173,"t":{"16":{"position":[[839,3],[1642,3],[3138,3],[6646,3],[7801,3],[11332,3]]},"52":{"position":[[355,3],[537,3],[650,3],[799,3]]},"54":{"position":[[140,3]]},"56":{"position":[[962,3],[1068,3]]},"58":{"position":[[113,3]]},"60":{"position":[[285,3],[1428,3]]},"62":{"position":[[30,4],[160,3]]},"64":{"position":[[38,4],[178,3]]},"66":{"position":[[39,4],[245,3]]},"68":{"position":[[211,3],[853,4],[1795,3]]},"80":{"position":[[71,3],[7395,4]]},"204":{"position":[[312,3]]},"221":{"position":[[306,3]]},"238":{"position":[[261,3]]},"261":{"position":[[52,3]]},"279":{"position":[[350,3]]},"306":{"position":[[440,3]]},"314":{"position":[[211,3]]},"316":{"position":[[298,3]]},"328":{"position":[[381,3]]},"336":{"position":[[166,3]]},"345":{"position":[[43,3]]},"347":{"position":[[43,3]]},"355":{"position":[[485,3]]},"367":{"position":[[265,3]]},"379":{"position":[[281,3]]},"403":{"position":[[10547,3]]},"415":{"position":[[134,3],[745,3]]},"417":{"position":[[25,3],[93,4]]},"419":{"position":[[99,3],[2267,3]]},"421":{"position":[[469,3]]},"423":{"position":[[1332,3]]},"425":{"position":[[580,3],[763,3]]},"429":{"position":[[881,3],[885,3]]},"437":{"position":[[692,3]]},"447":{"position":[[175,3]]},"455":{"position":[[328,3]]},"463":{"position":[[310,3]]},"465":{"position":[[114,3]]},"477":{"position":[[271,3]]},"493":{"position":[[292,3]]},"501":{"position":[[270,3]]},"503":{"position":[[742,3]]},"511":{"position":[[286,3]]},"519":{"position":[[165,3]]},"531":{"position":[[250,3]]},"539":{"position":[[75,3]]},"553":{"position":[[354,3]]},"601":{"position":[[245,3]]},"605":{"position":[[56,3]]},"607":{"position":[[117,3]]},"613":{"position":[[306,3]]},"620":{"position":[[139,3]]},"628":{"position":[[76,3]]},"642":{"position":[[254,3],[868,3]]},"644":{"position":[[256,3]]},"650":{"position":[[116,3]]},"660":{"position":[[865,3]]},"668":{"position":[[1085,3]]},"672":{"position":[[65,3]]},"690":{"position":[[642,3]]},"694":{"position":[[1149,3]]},"696":{"position":[[340,3],[774,3]]},"698":{"position":[[630,3]]},"716":{"position":[[996,3]]},"718":{"position":[[568,3],[1452,3]]},"720":{"position":[[5767,3]]},"722":{"position":[[1634,3],[3053,3],[4459,3]]},"734":{"position":[[522,3]]},"742":{"position":[[247,3],[464,3],[1290,3],[2789,3]]},"746":{"position":[[65,3]]},"748":{"position":[[217,3]]},"765":{"position":[[603,3]]},"769":{"position":[[5525,3],[6562,3],[18186,3],[18975,3],[21499,3],[28635,3],[35939,3],[36513,3],[37590,3]]},"786":{"position":[[282,3],[1246,3],[27224,3],[28432,3]]},"788":{"position":[[341,3],[774,3]]},"792":{"position":[[889,3],[1234,3],[14169,3],[20633,3]]},"809":{"position":[[367,3],[1216,3],[27256,3]]},"811":{"position":[[398,3]]},"813":{"position":[[472,3],[13602,3],[14786,3]]},"815":{"position":[[543,3]]}}}],["dsl‚Äô",{"_index":1652,"t":{"417":{"position":[[126,5]]}}}],["due",{"_index":530,"t":{"56":{"position":[[1505,3]]},"722":{"position":[[19878,3],[21044,3],[22591,3],[23890,3],[24797,3]]}}}],["dure",{"_index":1703,"t":{"429":{"position":[[709,7]]},"654":{"position":[[592,6]]},"728":{"position":[[619,6]]},"734":{"position":[[424,6]]}}}],["dynam",{"_index":1366,"t":{"296":{"position":[[1115,7]]},"367":{"position":[[34,7]]},"674":{"position":[[305,7]]},"728":{"position":[[138,7]]}}}],["e",{"_index":672,"t":{"86":{"position":[[2312,2],[2379,2]]},"142":{"position":[[782,1],[808,1],[3472,1],[3502,1]]},"152":{"position":[[336,1]]},"273":{"position":[[2953,2]]},"275":{"position":[[600,1]]}}}],["e.g",{"_index":104,"t":{"10":{"position":[[96,5],[307,5]]},"16":{"position":[[3932,5],[4684,4],[4756,4],[4917,4],[8886,4],[8997,4],[9045,3],[10986,5],[12727,5],[13576,5],[14812,5],[15749,5],[18339,5],[19188,5],[20424,5],[21361,5],[24111,5],[24965,5],[26202,5],[27149,5]]},"56":{"position":[[273,5],[431,5],[628,5],[1792,5]]},"68":{"position":[[2628,5]]},"80":{"position":[[1175,5],[2349,5],[4112,5],[5454,5]]},"86":{"position":[[303,5],[737,5],[1495,5]]},"102":{"position":[[631,5]]},"112":{"position":[[448,5],[983,5],[1804,5],[2393,5]]},"124":{"position":[[448,5],[983,5],[1804,5],[2393,5]]},"140":{"position":[[826,4]]},"158":{"position":[[562,5]]},"170":{"position":[[394,5],[808,5],[1432,5]]},"172":{"position":[[719,5],[1317,5],[2240,5],[3177,5]]},"190":{"position":[[448,5],[983,5],[1804,5],[2393,5]]},"200":{"position":[[443,4]]},"213":{"position":[[561,5],[1364,5],[2690,5],[3592,5]]},"215":{"position":[[571,5],[1417,5],[2650,5],[3584,5],[5736,5],[6584,5],[7819,5],[8755,5]]},"221":{"position":[[1876,5],[2718,5],[3947,5],[4877,5],[6939,5],[7779,5],[9142,5],[10081,5],[12279,5],[13125,5],[14358,5],[15292,5],[17302,5],[18150,5],[19385,5],[20321,5]]},"230":{"position":[[823,5],[1626,5],[2951,5],[3852,5]]},"232":{"position":[[614,5],[1461,5],[2695,5],[3630,5]]},"245":{"position":[[871,5],[1707,5],[2930,5],[3854,5]]},"247":{"position":[[582,5],[1381,5],[2702,5],[3599,5],[5643,5],[6480,5],[7704,5],[8629,5]]},"257":{"position":[[424,5],[959,5],[1780,5],[2369,5]]},"269":{"position":[[256,5]]},"288":{"position":[[668,5],[1462,5],[2779,5],[3672,5],[5572,5],[6368,5],[7686,5],[8580,5],[10750,5],[11730,5],[13324,5],[14433,5]]},"296":{"position":[[549,5],[775,5]]},"304":{"position":[[633,5],[725,5]]},"312":{"position":[[710,5],[1557,5],[2791,5],[3726,5],[5740,5],[6586,5],[7819,5],[8753,5]]},"318":{"position":[[829,5],[1691,5],[3076,5],[4037,5],[6314,5],[7161,5],[8395,5],[9330,5],[11548,5],[12395,5],[13629,5],[14564,5]]},"338":{"position":[[744,5],[1598,5],[2839,5],[3781,5]]},"345":{"position":[[1688,5],[2532,5],[3763,5],[4695,5]]},"369":{"position":[[692,5],[1660,5],[3207,5],[4284,5],[6628,5],[7477,5],[8713,5],[9650,5]]},"371":{"position":[[594,5],[1672,5],[3329,5],[4516,5]]},"373":{"position":[[540,5],[1389,5],[2625,5],[3562,5]]},"385":{"position":[[623,5],[1438,5],[2776,5],[3690,5]]},"387":{"position":[[644,5],[1498,5],[2739,5],[3681,5],[5894,5],[6749,5],[7991,5],[8934,5]]},"401":{"position":[[2655,5]]},"403":{"position":[[1599,5]]},"419":{"position":[[2144,5]]},"425":{"position":[[138,5],[1980,5],[2163,4],[3068,5]]},"429":{"position":[[619,5]]},"437":{"position":[[2486,5]]},"439":{"position":[[74,5]]},"445":{"position":[[710,5],[1560,5],[2797,5],[3735,5],[5761,5],[6610,5],[7846,5],[8783,5]]},"449":{"position":[[670,5],[1521,5],[2759,5],[3698,5],[5885,5],[6736,5],[7974,5],[8913,5]]},"467":{"position":[[598,5],[1399,5],[2723,5],[3623,5]]},"469":{"position":[[600,5],[1481,5],[2885,5],[3865,5]]},"471":{"position":[[717,5],[1571,5],[2812,5],[3754,5]]},"485":{"position":[[784,5],[1637,5],[3013,5],[3965,5]]},"487":{"position":[[849,5],[1699,5],[2936,5],[3874,5]]},"505":{"position":[[832,5],[1770,5],[3287,5],[4334,5],[6580,5],[7427,5],[8661,5],[9596,5],[11995,5],[12842,5],[14076,5],[15011,5],[17101,5],[17950,5],[19186,5],[20123,5],[22145,5],[22993,5],[24228,5],[25164,5]]},"521":{"position":[[607,5],[1410,5],[2736,5],[3638,5]]},"523":{"position":[[940,5],[1820,5],[3223,5],[4202,5]]},"525":{"position":[[777,5],[1633,5],[2876,5],[3820,5]]},"537":{"position":[[686,5],[1540,5],[2973,5],[3936,5]]},"541":{"position":[[693,5],[1543,5],[2972,5],[3931,5]]},"543":{"position":[[704,5],[1506,5],[2831,5],[3732,5]]},"545":{"position":[[550,5],[1385,5],[2607,5],[3530,5],[5496,5],[6331,5],[7553,5],[8476,5]]},"547":{"position":[[587,5],[1382,5],[2699,5],[3592,5],[5485,5],[6321,5],[7544,5],[8468,5]]},"562":{"position":[[709,5],[1554,5],[2786,5],[3719,5]]},"569":{"position":[[959,5],[1854,5],[3176,5],[4130,5],[6531,5],[7407,5],[8691,5],[9624,5],[11947,5],[12833,5],[14127,5],[15070,5]]},"571":{"position":[[1162,5],[1939,5],[3143,5],[3979,5]]},"576":{"position":[[700,5],[1584,5],[2910,5],[3889,5],[6034,5],[6918,5],[8244,5],[9223,5]]},"583":{"position":[[621,5],[1582,5],[2988,5],[4065,5]]},"605":{"position":[[1837,5],[2683,5],[3916,5],[4850,5],[7430,5],[8276,5],[9509,5],[10443,5],[13672,5],[14521,5],[15757,5],[16694,5],[19927,5],[20773,5],[22006,5],[22940,5],[25584,5],[26431,5],[27665,5],[28600,5]]},"607":{"position":[[1682,5],[2529,5],[3763,5],[4698,5],[7351,5],[8201,5],[9438,5],[10376,5],[13112,5],[13960,5],[15195,5],[16131,5],[18854,5],[19702,5],[20937,5],[21873,5]]},"622":{"position":[[836,5],[1755,5],[3197,5],[4215,5]]},"624":{"position":[[651,5],[1508,5],[2752,5],[3697,5]]},"630":{"position":[[561,5],[1579,5],[3176,5],[4303,5]]},"632":{"position":[[580,5],[1429,5],[2665,5],[3602,5]]},"634":{"position":[[561,5],[1436,5],[2833,5],[3806,5],[5950,5],[6800,5],[8037,5],[8975,5],[11000,5],[11853,5],[13093,5],[14034,5]]},"644":{"position":[[1342,5],[2190,5],[3425,5],[4361,5],[6379,5],[7226,5],[8460,5],[9395,5]]},"646":{"position":[[651,5],[1505,5],[2882,5],[3835,5],[5843,5],[6694,5],[7932,5],[8871,5]]},"648":{"position":[[626,5],[1572,5],[2874,5],[3872,5],[6285,5],[7164,5],[8622,5],[9610,5],[11733,5],[12614,5],[14073,5],[15062,5],[17296,5],[18144,5],[19379,5],[20315,5],[22378,5],[23224,5],[24457,5],[25391,5]]},"668":{"position":[[5271,5],[6142,5],[7536,5],[8506,5]]},"670":{"position":[[1603,5],[2503,5],[3925,5],[4923,5]]},"692":{"position":[[978,5],[1787,5],[3119,5],[4027,5],[5934,5],[6747,5],[8083,5],[8995,5],[10922,5],[11878,5],[13469,5],[14544,5],[16496,5],[17213,5],[18061,5],[19296,5],[20232,5],[22331,5],[23177,5],[24410,5],[25344,5]]},"694":{"position":[[313,4],[3396,5],[4405,5],[6105,5],[7243,5],[9824,5],[10675,5],[11913,5],[12852,5]]},"696":{"position":[[3299,5],[4196,5],[5672,5],[6678,5],[8992,5],[10084,5],[11867,5],[13088,5],[16091,5],[16936,5],[18168,5],[19101,5]]},"698":{"position":[[3494,5],[4453,5],[6047,5],[7125,5],[9800,5],[10650,5],[11887,5],[12825,5]]},"716":{"position":[[234,4]]},"718":{"position":[[2535,5],[3403,5],[4794,5],[5761,5],[7814,5],[8668,5],[9909,5],[10851,5],[12961,5],[13829,5],[15220,5],[16187,5],[18197,5],[19051,5],[20292,5],[21234,5],[23353,5],[24214,5],[25462,5],[26411,5],[28920,5],[30038,5],[31791,5],[33028,5],[35767,5],[36621,5],[37862,5],[38804,5]]},"720":{"position":[[596,5],[1445,5],[2681,5],[3618,5],[7296,5],[8144,5],[9379,5],[10315,5]]},"722":{"position":[[7340,5],[8373,5],[10041,5],[11193,5],[13936,5],[14873,5],[16333,5],[17369,5],[19673,5],[20654,5],[22214,5],[23304,5],[25698,5],[26594,5],[28069,5],[29074,5],[31351,5],[32190,5],[33552,5],[34490,5],[36516,5],[37338,5],[38683,5],[39604,5],[41712,5],[42558,5],[43791,5],[44725,5],[46804,5],[47665,5],[48913,5],[49862,5]]},"734":{"position":[[3069,5],[4398,5],[6418,5],[7876,5]]},"740":{"position":[[896,5],[1740,5],[2971,5],[3903,5],[6007,5],[6855,5],[8090,5],[9026,5],[11151,5],[12020,5],[13412,5],[14380,5],[16363,5],[17208,5],[18440,5],[19373,5]]},"742":{"position":[[5011,5],[5851,5],[7078,5],[8006,5],[10243,5],[11480,5],[13352,5],[14708,5],[17783,5],[18775,5],[20346,5],[21447,5],[23905,5],[24749,5],[25980,5],[26912,5]]},"744":{"position":[[296,4],[1556,5],[2604,5],[4230,5],[5386,5],[8251,5],[9280,5],[10846,5],[11998,5],[14707,5],[15737,5],[17304,5],[18457,5]]},"746":{"position":[[3797,5],[6382,5],[10106,5],[12900,5]]},"767":{"position":[[665,5],[2313,5],[4764,5],[6561,5],[10621,5],[11809,5],[13632,5],[14939,5],[17802,5],[18920,5],[20673,5],[21910,5],[25460,5],[26307,5],[27541,5],[28476,5],[30639,5],[31487,5],[32722,5],[33658,5],[35675,5],[36526,5],[37764,5],[38703,5],[40733,5],[41585,5],[42824,5],[43764,5]]},"769":{"position":[[761,5],[1609,5],[2844,5],[3780,5],[8096,5],[8940,5],[10171,5],[11103,5],[13436,5],[14289,5],[15529,5],[16470,5],[19997,4],[20142,4],[20605,4],[23184,5],[24036,5],[25275,5],[26215,5],[30847,5],[31690,5],[32920,5],[33851,5],[35688,4],[39834,5],[40677,5],[41907,5],[42838,5]]},"781":{"position":[[291,4]]},"786":{"position":[[2296,5],[3106,5],[4439,5],[5348,5],[7287,5],[8136,5],[9372,5],[10309,5],[12395,5],[13205,5],[14538,5],[15447,5],[17343,5],[18192,5],[19428,5],[20365,5],[22387,5],[23237,5],[24474,5],[25412,5],[29538,5],[30387,5],[31623,5],[32560,5],[34582,5],[35431,5],[36667,5],[37604,5]]},"788":{"position":[[2815,5],[3854,5],[5472,5],[6620,5],[9282,5],[10133,5],[11371,5],[12310,5]]},"790":{"position":[[766,5],[1600,5],[2957,5],[3890,5],[6290,5],[7156,5],[8545,5],[9510,5],[11485,5],[12334,5],[13570,5],[14507,5]]},"792":{"position":[[3409,5],[4303,5],[5776,5],[6779,5],[9464,5],[10317,5],[11557,5],[12498,5],[16016,5],[16848,5],[18203,5],[19134,5]]},"809":{"position":[[2293,5],[3106,5],[4442,5],[5354,5],[7305,5],[8157,5],[9396,5],[10336,5],[12432,5],[13241,5],[14573,5],[15481,5],[17374,5],[18222,5],[19457,5],[20393,5],[22411,5],[23261,5],[24498,5],[25436,5],[29050,5],[29898,5],[31133,5],[32069,5],[34087,5],[34936,5],[36172,5],[37109,5]]},"811":{"position":[[2572,5],[3702,5],[5523,5],[6782,5],[9753,5],[10605,5],[11844,5],[12784,5]]},"813":{"position":[[2405,5],[3414,5],[5002,5],[6120,5],[8883,5],[9738,5],[10980,5],[11923,5]]},"815":{"position":[[3277,5],[4459,5],[6276,5],[7577,5],[10411,5],[11267,5],[12510,5],[13454,5],[15580,5],[16438,5],[17683,5],[18629,5],[20686,5],[21546,5],[22793,5],[23741,5],[25885,5],[26743,5],[27988,5],[28934,5],[30991,5],[31849,5],[33094,5],[34040,5]]}}}],["each",{"_index":210,"t":{"16":{"position":[[3480,4]]},"54":{"position":[[3923,4]]},"96":{"position":[[2042,4]]},"98":{"position":[[3252,4]]},"102":{"position":[[1109,4]]},"140":{"position":[[740,4]]},"152":{"position":[[1090,4]]},"263":{"position":[[141,4]]},"267":{"position":[[107,4]]},"269":{"position":[[518,4]]},"290":{"position":[[519,4]]},"318":{"position":[[16311,4]]},"326":{"position":[[537,4]]},"338":{"position":[[5429,4]]},"383":{"position":[[146,4]]},"387":{"position":[[10594,4]]},"401":{"position":[[0,4],[2840,4]]},"403":{"position":[[83,4],[301,4],[315,4],[3942,4],[4629,4]]},"425":{"position":[[2131,4]]},"467":{"position":[[5026,4]]},"477":{"position":[[1626,4]]},"505":{"position":[[27139,4]]},"525":{"position":[[5665,4]]},"624":{"position":[[5776,4]]},"670":{"position":[[311,4],[857,4],[941,4]]},"684":{"position":[[334,4]]},"742":{"position":[[202,4]]},"744":{"position":[[764,4]]},"748":{"position":[[140,4]]},"760":{"position":[[145,4]]},"769":{"position":[[18543,4]]},"781":{"position":[[231,5]]},"792":{"position":[[14989,4]]},"813":{"position":[[14490,4]]}}}],["earlier",{"_index":1725,"t":{"431":{"position":[[360,7]]},"696":{"position":[[15506,7]]},"720":{"position":[[33,8]]},"722":{"position":[[19920,8],[21086,8],[22633,8],[23932,8],[24839,8]]},"767":{"position":[[30072,7]]},"769":{"position":[[35582,7]]}}}],["easi",{"_index":1146,"t":{"176":{"position":[[311,4]]},"338":{"position":[[5543,4]]},"387":{"position":[[10708,4]]},"403":{"position":[[506,4]]},"467":{"position":[[5182,4]]},"477":{"position":[[1787,4]]},"505":{"position":[[27300,4]]},"525":{"position":[[5779,4]]},"624":{"position":[[5891,4]]}}}],["easier",{"_index":203,"t":{"16":{"position":[[3161,6]]},"52":{"position":[[680,6]]},"68":{"position":[[1755,6]]},"318":{"position":[[16438,6]]},"403":{"position":[[3294,7]]},"415":{"position":[[227,6]]},"684":{"position":[[200,7]]},"686":{"position":[[643,6]]},"714":{"position":[[1094,6]]},"767":{"position":[[24416,6]]}}}],["easili",{"_index":854,"t":{"104":{"position":[[164,6]]}}}],["east",{"_index":2401,"t":{"740":{"position":[[11390,4],[12444,4],[13823,4],[15000,4],[15730,4]]}}}],["edit",{"_index":107,"t":{"10":{"position":[[138,4]]},"16":{"position":[[6568,8]]},"306":{"position":[[377,7],[1174,4]]},"312":{"position":[[163,4],[10515,4],[10533,7],[10747,4],[10893,4],[10930,4]]},"314":{"position":[[997,7]]},"316":{"position":[[43,7]]},"318":{"position":[[1055,7],[2102,7],[3474,7],[4644,7],[5360,7],[5558,4],[10948,4]]},"334":{"position":[[215,4]]},"355":{"position":[[252,4],[309,4],[466,4]]},"357":{"position":[[106,4],[163,4]]},"365":{"position":[[469,4],[634,4]]},"371":{"position":[[841,4],[2104,4],[3748,4],[5144,4],[6192,4]]},"397":{"position":[[2250,4]]},"399":{"position":[[1290,4],[3132,4]]},"401":{"position":[[1622,4]]},"491":{"position":[[821,4]]},"503":{"position":[[552,5]]},"660":{"position":[[610,4]]}}}],["editor",{"_index":106,"t":{"10":{"position":[[123,6]]},"16":{"position":[[926,7],[1054,9],[1277,9],[1774,7],[2033,9],[2344,9],[5708,6],[5937,6],[6048,6],[6163,6],[6312,7],[6524,6],[6733,7],[6895,9],[7118,9],[7375,6],[9002,7],[9379,9],[11390,6],[11404,7],[11565,8],[11585,9],[11642,9],[11894,9],[12056,6],[29956,8],[30045,9]]},"54":{"position":[[3971,7]]},"58":{"position":[[153,7],[193,6],[219,6],[263,9],[374,8],[443,8],[488,9],[777,7],[876,7],[1180,6],[1458,6],[1505,6],[1575,9],[1880,6],[1930,6],[1977,6],[2048,9]]},"62":{"position":[[218,6],[371,8],[682,6],[750,9],[1203,9],[1246,6],[1343,6]]},"64":{"position":[[246,6],[448,8],[722,6],[790,9],[1211,8],[1298,6],[1560,6],[1651,9]]},"68":{"position":[[459,8],[674,8],[939,7],[988,6],[1165,9],[1354,8],[1582,9],[1865,6],[2060,8],[2494,6]]},"306":{"position":[[243,7],[507,7],[682,9],[739,9],[1246,9]]},"312":{"position":[[1021,9],[2012,9],[3210,9],[5092,9],[5112,8],[6050,9],[7040,9],[8237,9],[10115,9],[10135,8]]},"314":{"position":[[301,7],[503,9],[630,9]]},"316":{"position":[[93,6],[188,7],[388,7],[606,9],[825,9]]},"318":{"position":[[148,6],[6624,9],[7615,9],[8813,9],[10694,9],[10714,8],[11859,9],[12850,9],[14048,9],[15930,9],[15950,8]]},"326":{"position":[[116,7],[346,7]]},"328":{"position":[[244,6],[356,6],[470,7],[617,9],[743,9],[970,9]]},"334":{"position":[[73,7],[301,7]]},"336":{"position":[[98,7],[251,6],[265,7],[471,8],[491,9],[617,9],[792,6],[863,6]]},"338":{"position":[[64,6]]},"340":{"position":[[130,7]]},"355":{"position":[[576,6],[590,7],[802,8],[822,9],[879,9]]},"365":{"position":[[601,6]]},"367":{"position":[[370,6],[384,7],[654,8],[674,9],[844,9]]},"371":{"position":[[924,9],[3839,9]]},"373":{"position":[[850,9],[1843,9],[3043,9],[4930,9],[4950,8]]},"379":{"position":[[273,7],[370,7],[517,9],[643,9]]},"385":{"position":[[63,6],[855,9],[3188,9]]},"387":{"position":[[128,6],[953,9],[1951,9],[3156,9],[5057,9],[5077,8]]},"397":{"position":[[1815,6],[1856,6],[2127,6],[2290,6]]},"399":{"position":[[857,6],[898,6],[1169,6],[1330,6],[2697,6],[2738,6],[3009,6],[3172,6]]},"401":{"position":[[1187,6],[1228,6],[1499,6],[1662,6],[2291,6],[2938,7]]},"403":{"position":[[4151,7],[4163,6],[4219,7],[4311,7],[4405,6],[4551,7],[4652,7],[4765,9],[4879,7],[5034,7],[5109,9],[5273,6],[7128,6],[7169,6],[7379,6],[7888,6],[8278,6],[8536,6],[8729,6],[8777,6],[8981,6],[9511,7],[9639,6],[9694,6],[9735,6],[9793,6],[10100,7],[10228,6],[10283,6],[10324,6],[10382,6]]},"405":{"position":[[2011,7],[2068,9]]},"429":{"position":[[1002,7],[1020,6],[1117,6],[1135,6],[1284,9],[1427,8],[1595,9]]},"453":{"position":[[182,6],[211,6]]},"455":{"position":[[270,6],[321,6],[393,7],[439,7],[558,9],[615,9],[727,9],[784,9]]},"461":{"position":[[77,6],[110,6],[161,7],[187,7],[334,6],[462,6],[517,6],[616,6],[769,6]]},"463":{"position":[[375,7],[445,7],[564,9],[621,9],[759,9],[887,9]]},"465":{"position":[[179,7],[249,7],[267,6],[390,9],[447,9],[585,9],[728,8],[852,9],[935,6],[1004,7],[1069,6],[1076,8],[1185,6],[1203,6]]},"467":{"position":[[98,6],[830,9],[3135,9]]},"469":{"position":[[19,6]]},"471":{"position":[[202,6],[1026,9],[2024,9],[3229,9],[5130,9],[5150,8],[5563,6],[5641,7],[5709,7],[5754,6]]},"473":{"position":[[287,7],[317,7]]},"491":{"position":[[231,8]]},"507":{"position":[[245,7]]},"511":{"position":[[278,7],[353,7],[474,9],[531,9]]},"517":{"position":[[184,6]]},"519":{"position":[[232,7],[402,9],[459,9]]},"523":{"position":[[424,7],[1237,9],[3700,9]]},"525":{"position":[[155,7],[234,6],[1088,9],[2088,9],[3295,9],[5204,9],[5224,8],[5486,7],[5540,6]]},"601":{"position":[[349,6],[363,7],[623,8],[643,9],[847,9],[1256,6],[1371,7]]},"605":{"position":[[160,6],[174,7],[434,8],[454,9],[658,9],[24869,6],[24936,9],[30166,6],[30255,6],[30477,6],[30542,6]]},"607":{"position":[[192,6],[206,7],[407,8],[421,9],[18137,6],[18205,9]]},"613":{"position":[[243,7],[373,7],[538,9],[595,9]]},"620":{"position":[[230,7],[421,9],[549,9]]},"624":{"position":[[5469,6],[5518,7],[5552,7]]},"642":{"position":[[113,6],[134,6],[311,7],[336,6],[439,9],[526,8],[622,6],[676,9],[757,9]]},"644":{"position":[[313,7],[339,6],[491,9],[602,8]]},"646":{"position":[[891,6],[1930,6],[3294,6],[4456,6],[5165,6]]},"648":{"position":[[5731,6],[11968,9],[12041,9],[14487,9],[14570,9],[22688,9],[23678,9],[24875,9],[26753,9],[26773,8]]},"660":{"position":[[1145,7],[1265,6],[1289,6],[2006,9],[2539,8],[2614,8]]},"668":{"position":[[830,6]]},"672":{"position":[[483,7],[603,6],[627,6],[1881,9],[2414,8],[2489,8]]},"804":{"position":[[179,8]]}}}],["editor(",{"_index":1605,"t":{"403":{"position":[[4664,9]]}}}],["effect",{"_index":1967,"t":{"603":{"position":[[18,6]]},"607":{"position":[[41,6]]},"698":{"position":[[610,7],[9174,6]]}}}],["emili",{"_index":1983,"t":{"605":{"position":[[24857,5],[25019,5],[30154,5],[30372,5],[30465,5]]},"698":{"position":[[2867,6],[2874,5],[8996,5],[9075,5],[14461,5],[14501,5],[14556,5],[14589,5]]},"714":{"position":[[160,5],[461,5],[742,5],[945,5]]},"716":{"position":[[731,5]]},"718":{"position":[[401,5],[28320,5],[29383,5],[30798,5],[32446,5],[33884,5],[35020,5]]},"722":{"position":[[866,6],[1108,5],[1208,5],[19173,5],[25183,6],[52164,5],[52207,5],[52266,5],[52309,5]]}}}],["employe",{"_index":1180,"t":{"204":{"position":[[252,8],[378,9],[558,11],[617,11],[866,10]]},"211":{"position":[[25,8],[198,8]]},"213":{"position":[[50,8],[794,11],[3103,11]]},"215":{"position":[[5219,8]]},"219":{"position":[[135,8],[226,8]]},"343":{"position":[[608,8]]},"425":{"position":[[1462,9],[2339,11],[2357,8]]},"453":{"position":[[656,8],[701,8]]}}}],["employee‚Äô",{"_index":2085,"t":{"654":{"position":[[385,10]]},"728":{"position":[[417,10]]}}}],["empti",{"_index":1917,"t":{"571":{"position":[[5429,5]]},"792":{"position":[[15402,5]]}}}],["enabl",{"_index":865,"t":{"130":{"position":[[137,6]]},"142":{"position":[[2646,6],[5277,6]]},"144":{"position":[[468,6],[713,8],[968,6],[1285,8],[1902,6],[2162,8],[2493,6],[2810,8]]},"146":{"position":[[216,7]]},"148":{"position":[[206,7],[264,7],[396,7],[642,7]]},"152":{"position":[[71,7],[578,7],[703,7],[897,6],[1177,7]]},"156":{"position":[[517,6]]},"158":{"position":[[103,6]]},"172":{"position":[[310,6]]},"365":{"position":[[66,6]]},"415":{"position":[[253,6]]},"425":{"position":[[1210,6]]},"601":{"position":[[28,7]]},"603":{"position":[[25,8]]}}}],["enabled=fals",{"_index":1079,"t":{"156":{"position":[[179,13]]}}}],["enabled=tru",{"_index":1000,"t":{"144":{"position":[[1599,12],[3152,12]]},"158":{"position":[[132,12]]}}}],["encod",{"_index":1580,"t":{"403":{"position":[[142,6]]},"425":{"position":[[2964,6]]}}}],["encompass",{"_index":1174,"t":{"202":{"position":[[220,9]]},"509":{"position":[[238,9]]}}}],["encount",{"_index":299,"t":{"16":{"position":[[9296,9]]},"52":{"position":[[714,9]]},"471":{"position":[[6085,10]]},"517":{"position":[[40,9]]},"769":{"position":[[18103,11]]}}}],["end",{"_index":1371,"t":{"298":{"position":[[180,3],[187,3]]},"365":{"position":[[983,4]]},"682":{"position":[[195,3]]},"694":{"position":[[937,3]]},"716":{"position":[[16,3]]},"718":{"position":[[157,3]]},"722":{"position":[[167,3]]},"736":{"position":[[7,3]]},"762":{"position":[[443,3]]},"786":{"position":[[66,3],[97,3]]},"788":{"position":[[145,3],[176,3]]},"790":{"position":[[16059,3],[16079,5]]},"792":{"position":[[343,3],[374,3]]},"809":{"position":[[160,3]]},"811":{"position":[[123,3],[154,3]]},"813":{"position":[[196,3],[227,3]]}}}],["endpoint",{"_index":437,"t":{"16":{"position":[[17367,8],[17574,8],[17622,8],[23101,8],[23340,8],[23395,8]]},"42":{"position":[[47,8]]},"44":{"position":[[61,8]]},"150":{"position":[[48,8]]},"156":{"position":[[450,8]]},"158":{"position":[[306,8]]},"267":{"position":[[36,9]]},"269":{"position":[[25,8]]},"273":{"position":[[1767,9],[1880,8],[2203,9],[3162,9]]},"425":{"position":[[2041,9]]},"551":{"position":[[106,10]]},"560":{"position":[[24,8]]},"567":{"position":[[23,8]]},"581":{"position":[[30,8]]},"658":{"position":[[259,8]]},"672":{"position":[[9475,9],[9534,10],[9583,8]]},"732":{"position":[[260,8]]},"746":{"position":[[18979,9],[19038,10],[19086,8]]}}}],["enforc",{"_index":1614,"t":{"403":{"position":[[6654,7]]},"415":{"position":[[537,9]]}}}],["engin",{"_index":902,"t":{"140":{"position":[[381,7]]},"142":{"position":[[34,6],[89,6],[209,6],[306,6],[1168,6],[1413,6],[3120,8],[3855,6],[4080,6]]},"202":{"position":[[312,9]]},"509":{"position":[[330,9]]},"654":{"position":[[543,8]]},"724":{"position":[[733,11]]},"728":{"position":[[570,8]]},"790":{"position":[[177,12],[5398,12]]}}}],["enough",{"_index":1318,"t":{"273":{"position":[[1593,7],[1844,7]]},"275":{"position":[[173,6],[451,6]]},"353":{"position":[[399,7]]},"722":{"position":[[19948,6],[21114,6],[22661,6],[23960,6],[24867,6]]},"790":{"position":[[5425,6]]}}}],["ensur",{"_index":46,"t":{"6":{"position":[[44,7]]},"132":{"position":[[3,6],[326,6]]},"168":{"position":[[93,6]]},"365":{"position":[[1014,8]]},"373":{"position":[[3,6]]},"405":{"position":[[101,6],[633,6],[1160,6]]},"415":{"position":[[1097,6]]},"503":{"position":[[1564,6]]},"638":{"position":[[263,6]]},"644":{"position":[[106,7]]},"646":{"position":[[5343,6]]},"648":{"position":[[16726,6]]},"664":{"position":[[171,6]]},"666":{"position":[[108,6]]},"722":{"position":[[41177,6]]},"738":{"position":[[161,6]]},"740":{"position":[[108,6],[178,6]]},"769":{"position":[[37531,6]]}}}],["enter",{"_index":2205,"t":{"696":{"position":[[2769,5],[20703,5]]}}}],["enterpris",{"_index":2255,"t":{"710":{"position":[[534,10]]},"760":{"position":[[126,13],[428,10]]},"762":{"position":[[292,10]]},"767":{"position":[[1307,10],[1458,10],[1625,10],[3308,10],[3515,10],[3738,10],[5608,10],[5769,10],[5946,10],[7602,10],[7759,10],[7932,10],[9534,10],[9689,10],[9860,10],[11178,10],[12663,10],[14381,10],[15889,10],[17098,10]]}}}],["entir",{"_index":1316,"t":{"273":{"position":[[1508,6],[2435,6],[2912,6]]},"397":{"position":[[914,6]]},"792":{"position":[[638,6]]}}}],["entiti",{"_index":209,"t":{"16":{"position":[[3409,6],[4041,6],[4522,6]]},"24":{"position":[[23,6]]},"26":{"position":[[24,6]]},"28":{"position":[[13,6]]},"74":{"position":[[185,6]]},"84":{"position":[[21,6]]},"204":{"position":[[1150,6],[1440,6]]},"208":{"position":[[72,6],[362,6]]},"221":{"position":[[22162,6],[22452,6]]},"227":{"position":[[72,6],[362,6]]},"238":{"position":[[869,6],[1159,6]]},"242":{"position":[[72,6],[362,6]]},"279":{"position":[[1469,6],[1759,6]]},"285":{"position":[[72,6],[362,6]]},"306":{"position":[[1779,6],[2069,6]]},"310":{"position":[[72,6],[362,6]]},"328":{"position":[[1282,6],[1572,6]]},"332":{"position":[[72,6],[362,6]]},"379":{"position":[[861,6],[1151,6]]},"381":{"position":[[72,6],[362,6]]},"437":{"position":[[2768,6],[3058,6]]},"443":{"position":[[72,6],[362,6]]},"455":{"position":[[1153,6],[1443,6]]},"459":{"position":[[72,6],[362,6]]},"477":{"position":[[922,6],[1212,6]]},"481":{"position":[[72,6],[362,6]]},"493":{"position":[[1012,6],[1302,6]]},"497":{"position":[[72,6],[362,6]]},"511":{"position":[[900,6],[1190,6]]},"515":{"position":[[72,6],[362,6]]},"531":{"position":[[853,6],[1143,6]]},"535":{"position":[[72,6],[362,6]]},"553":{"position":[[1324,6],[1614,6]]},"557":{"position":[[72,6],[362,6]]},"593":{"position":[[441,6],[731,6]]},"597":{"position":[[72,6],[362,6]]},"613":{"position":[[1097,6],[1387,6]]},"617":{"position":[[72,6],[362,6]]},"640":{"position":[[145,6],[435,6]]}}}],["entitl",{"_index":572,"t":{"60":{"position":[[3573,13]]},"100":{"position":[[95,12],[117,12]]},"302":{"position":[[0,12]]},"609":{"position":[[153,12],[400,12]]},"626":{"position":[[65,13],[129,8]]},"636":{"position":[[117,12],[149,11]]},"752":{"position":[[36,12],[127,11]]},"758":{"position":[[148,12],[259,12],[685,13]]},"760":{"position":[[18,11],[341,11]]},"771":{"position":[[40,12]]}}}],["enumer",{"_index":1050,"t":{"152":{"position":[[405,10]]},"401":{"position":[[2812,9]]}}}],["env",{"_index":1096,"t":{"158":{"position":[[496,3]]}}}],["environ",{"_index":222,"t":{"16":{"position":[[3873,12],[14369,11],[16597,11],[19981,11],[22209,11],[25759,11],[27953,11]]},"74":{"position":[[980,12]]},"78":{"position":[[291,11],[577,11],[863,11],[1149,11],[1390,11]]},"80":{"position":[[3669,11],[6556,11]]},"86":{"position":[[1153,11]]},"90":{"position":[[352,11],[716,11]]},"108":{"position":[[328,11],[651,11],[974,11],[1297,11],[1592,11]]},"112":{"position":[[1361,11]]},"120":{"position":[[328,11],[651,11],[974,11],[1297,11],[1592,11]]},"124":{"position":[[1361,11]]},"130":{"position":[[99,12]]},"134":{"position":[[74,12],[190,11],[274,11]]},"140":{"position":[[641,11]]},"142":{"position":[[1727,12],[2020,12],[2307,12],[4364,12],[4691,12],[4958,12]]},"144":{"position":[[583,11],[2017,11]]},"152":{"position":[[259,11]]},"154":{"position":[[279,11]]},"156":{"position":[[227,11],[343,11],[583,11]]},"158":{"position":[[173,11],[349,11]]},"162":{"position":[[147,11]]},"164":{"position":[[36,11]]},"170":{"position":[[1063,11]]},"172":{"position":[[202,11],[1897,11]]},"182":{"position":[[103,12],[183,11]]},"186":{"position":[[292,11],[579,11],[866,11],[1153,11],[1412,11]]},"190":{"position":[[1361,11]]},"213":{"position":[[2247,11],[4388,11]]},"215":{"position":[[2207,11],[4429,11],[7376,11],[9602,11]]},"221":{"position":[[3504,11],[5718,11],[8699,11],[10913,11],[13915,11],[16137,11],[18942,11],[21168,11]]},"230":{"position":[[2508,11],[4647,11]]},"232":{"position":[[2252,11],[4476,11]]},"245":{"position":[[2487,11],[4689,11]]},"247":{"position":[[2259,11],[4390,11],[7261,11],[9465,11]]},"253":{"position":[[327,11],[649,11],[936,11],[1223,11],[1517,11]]},"257":{"position":[[1337,11]]},"288":{"position":[[2336,11],[4459,11],[7243,11],[9368,11],[12881,11],[15419,11]]},"296":{"position":[[1619,12]]},"312":{"position":[[2348,11],[4572,11],[7376,11],[9598,11]]},"318":{"position":[[2633,11],[4891,11],[7952,11],[10176,11],[13186,11],[15410,11]]},"338":{"position":[[2396,11],[4634,11]]},"345":{"position":[[3320,11],[5538,11]]},"369":{"position":[[2764,11],[5250,11],[8270,11],[10498,11]]},"371":{"position":[[2886,11],[5592,11]]},"373":{"position":[[2182,11],[4410,11]]},"385":{"position":[[2333,11],[4498,11]]},"387":{"position":[[2296,11],[4534,11],[7548,11],[9788,11]]},"413":{"position":[[63,12]]},"433":{"position":[[214,11]]},"445":{"position":[[2354,11],[4584,11],[7403,11],[9631,11]]},"449":{"position":[[2316,11],[4548,11],[7531,11],[9763,11]]},"467":{"position":[[2280,11],[4417,11]]},"469":{"position":[[2442,11],[4738,11]]},"471":{"position":[[2369,11],[4607,11]]},"485":{"position":[[2570,11],[4810,11]]},"487":{"position":[[2493,11],[4723,11]]},"505":{"position":[[2844,11],[5270,11],[8218,11],[10442,11],[13633,11],[15857,11],[18743,11],[20971,11],[23785,11],[26011,11]]},"521":{"position":[[2293,11],[4434,11]]},"523":{"position":[[2780,11],[5074,11]]},"525":{"position":[[2433,11],[4675,11]]},"537":{"position":[[2530,11],[4790,11]]},"541":{"position":[[2529,11],[4781,11]]},"543":{"position":[[2388,11],[4527,11]]},"545":{"position":[[2164,11],[4364,11],[7110,11],[9310,11]]},"547":{"position":[[2256,11],[4379,11],[7101,11],[9303,11]]},"562":{"position":[[2343,11],[4563,11]]},"569":{"position":[[2733,11],[5011,11],[8248,11],[10486,11],[13684,11],[15942,11]]},"571":{"position":[[2700,11],[4742,11]]},"576":{"position":[[2467,11],[4715,11],[7801,11],[10049,11]]},"583":{"position":[[2545,11],[4998,11]]},"605":{"position":[[3473,11],[5695,11],[9066,11],[11288,11],[15314,11],[17542,11],[21563,11],[23785,11],[27222,11],[29446,11]]},"607":{"position":[[3320,11],[5544,11],[8995,11],[11225,11],[14752,11],[16978,11],[20494,11],[22720,11]]},"622":{"position":[[2754,11],[5126,11]]},"624":{"position":[[2309,11],[4553,11]]},"630":{"position":[[2733,11],[5319,11]]},"632":{"position":[[2222,11],[4450,11]]},"634":{"position":[[2390,11],[4672,11],[7594,11],[9824,11],[12650,11],[14886,11]]},"644":{"position":[[2982,11],[5208,11],[8017,11],[10241,11]]},"646":{"position":[[2439,11],[4681,11],[7489,11],[9721,11]]},"648":{"position":[[2431,11],[4797,11],[8179,11],[10489,11],[13630,11],[15942,11],[18936,11],[21162,11],[24014,11],[26236,11]]},"652":{"position":[[336,11]]},"668":{"position":[[7093,11],[9369,11]]},"670":{"position":[[3482,11],[5814,11]]},"692":{"position":[[2676,11],[4829,11],[7640,11],[9801,11],[13026,11],[15507,11],[18853,11],[21079,11],[23967,11],[26189,11]]},"694":{"position":[[5662,11],[8266,11],[11470,11],[13702,11]]},"696":{"position":[[5229,11],[7575,11],[11424,11],[14194,11],[17725,11],[19945,11]]},"698":{"position":[[5604,11],[8091,11],[11444,11],[13674,11]]},"718":{"position":[[4351,11],[6621,11],[9466,11],[11704,11],[14777,11],[17047,11],[19849,11],[22087,11],[25019,11],[27271,11],[31348,11],[34150,11],[37419,11],[39657,11]]},"720":{"position":[[2238,11],[4466,11],[8936,11],[11162,11]]},"722":{"position":[[9598,11],[12233,11],[15890,11],[18298,11],[21771,11],[24284,11],[27626,11],[29970,11],[33109,11],[35322,11],[38240,11],[40419,11],[43348,11],[45570,11],[48470,11],[50722,11]]},"734":{"position":[[5975,11],[9215,11]]},"740":{"position":[[2528,11],[4746,11],[7647,11],[9873,11],[12969,11],[15241,11],[17997,11],[20217,11]]},"742":{"position":[[6635,11],[8845,11],[12909,11],[15949,11],[19903,11],[22437,11],[25537,11],[27755,11]]},"744":{"position":[[3787,11],[6431,11],[10403,11],[13052,11],[16861,11],[19512,11]]},"746":{"position":[[9663,11],[15543,11]]},"767":{"position":[[4321,11],[8231,11],[13189,11],[16131,11],[20230,11],[23032,11],[27098,11],[29322,11],[32279,11],[34505,11],[37321,11],[39553,11],[42381,11],[44615,11]]},"769":{"position":[[2401,11],[4627,11],[9728,11],[11946,11],[15086,11],[17322,11],[24832,11],[27066,11],[32477,11],[34693,11],[41464,11],[43680,11]]},"786":{"position":[[3996,11],[6151,11],[8929,11],[11157,11],[14095,11],[16250,11],[18985,11],[21213,11],[24031,11],[26261,11],[31180,11],[33408,11],[36224,11],[38452,11]]},"788":{"position":[[5029,11],[7657,11],[10928,11],[13160,11]]},"790":{"position":[[2514,11],[4717,11],[8102,11],[10368,11],[13127,11],[15355,11]]},"792":{"position":[[5333,11],[7673,11],[11114,11],[13350,11],[17760,11],[19959,11]]},"809":{"position":[[3999,11],[6160,11],[8953,11],[11187,11],[14130,11],[16283,11],[19014,11],[21240,11],[24055,11],[26285,11],[30690,11],[32916,11],[35729,11],[37957,11]]},"811":{"position":[[5080,11],[7924,11],[11401,11],[13635,11]]},"813":{"position":[[4559,11],[7127,11],[10537,11],[12777,11]]},"815":{"position":[[5833,11],[8763,11],[12067,11],[14309,11],[17240,11],[19486,11],[22350,11],[24600,11],[27545,11],[29791,11],[32651,11],[34897,11]]}}}],["environment.getenvironmentvariable(\"fga_api_host",{"_index":392,"t":{"16":{"position":[[14721,51],[20333,51],[26111,51]]},"80":{"position":[[4021,51]]},"86":{"position":[[1405,50]]},"112":{"position":[[1713,51]]},"124":{"position":[[1713,51]]},"170":{"position":[[1341,51]]},"172":{"position":[[2149,51]]},"190":{"position":[[1713,51]]},"213":{"position":[[2599,51]]},"215":{"position":[[2559,51],[7728,51]]},"221":{"position":[[3856,51],[9051,51],[14267,51],[19294,51]]},"230":{"position":[[2860,51]]},"232":{"position":[[2604,51]]},"245":{"position":[[2839,51]]},"247":{"position":[[2611,51],[7613,51]]},"257":{"position":[[1689,51]]},"288":{"position":[[2688,51],[7595,51],[13233,51]]},"312":{"position":[[2700,51],[7728,51]]},"318":{"position":[[2985,51],[8304,51],[13538,51]]},"338":{"position":[[2748,51]]},"345":{"position":[[3672,51]]},"369":{"position":[[3116,51],[8622,51]]},"371":{"position":[[3238,51]]},"373":{"position":[[2534,51]]},"385":{"position":[[2685,51]]},"387":{"position":[[2648,51],[7900,51]]},"445":{"position":[[2706,51],[7755,51]]},"449":{"position":[[2668,51],[7883,51]]},"467":{"position":[[2632,51]]},"469":{"position":[[2794,51]]},"471":{"position":[[2721,51]]},"485":{"position":[[2922,51]]},"487":{"position":[[2845,51]]},"505":{"position":[[3196,51],[8570,51],[13985,51],[19095,51],[24137,51]]},"521":{"position":[[2645,51]]},"523":{"position":[[3132,51]]},"525":{"position":[[2785,51]]},"537":{"position":[[2882,51]]},"541":{"position":[[2881,51]]},"543":{"position":[[2740,51]]},"545":{"position":[[2516,51],[7462,51]]},"547":{"position":[[2608,51],[7453,51]]},"562":{"position":[[2695,51]]},"569":{"position":[[3085,51],[8600,51],[14036,51]]},"571":{"position":[[3052,51]]},"576":{"position":[[2819,51],[8153,51]]},"583":{"position":[[2897,51]]},"605":{"position":[[3825,51],[9418,51],[15666,51],[21915,51],[27574,51]]},"607":{"position":[[3672,51],[9347,51],[15104,51],[20846,51]]},"622":{"position":[[3106,51]]},"624":{"position":[[2661,51]]},"630":{"position":[[3085,51]]},"632":{"position":[[2574,51]]},"634":{"position":[[2742,51],[7946,51],[13002,51]]},"644":{"position":[[3334,51],[8369,51]]},"646":{"position":[[2791,51],[7841,51]]},"648":{"position":[[2783,51],[8531,51],[13982,51],[19288,51],[24366,51]]},"668":{"position":[[7445,51]]},"670":{"position":[[3834,51]]},"692":{"position":[[3028,51],[7992,51],[13378,51],[19205,51],[24319,51]]},"694":{"position":[[6014,51],[11822,51]]},"696":{"position":[[5581,51],[11776,51],[18077,51]]},"698":{"position":[[5956,51],[11796,51]]},"718":{"position":[[4703,51],[9818,51],[15129,51],[20201,51],[25371,51],[31700,51],[37771,51]]},"720":{"position":[[2590,51],[9288,51]]},"722":{"position":[[9950,51],[16242,51],[22123,51],[27978,51],[33461,51],[38592,51],[43700,51],[48822,51]]},"734":{"position":[[6327,51]]},"740":{"position":[[2880,51],[7999,51],[13321,51],[18349,51]]},"742":{"position":[[6987,51],[13261,51],[20255,51],[25889,51]]},"744":{"position":[[4139,51],[10755,51],[17213,51]]},"746":{"position":[[10015,51]]},"767":{"position":[[4673,51],[13541,51],[20582,51],[27450,51],[32631,51],[37673,51],[42733,51]]},"769":{"position":[[2753,51],[10080,51],[15438,51],[25184,51],[32829,51],[41816,51]]},"786":{"position":[[4348,51],[9281,51],[14447,51],[19337,51],[24383,51],[31532,51],[36576,51]]},"788":{"position":[[5381,51],[11280,51]]},"790":{"position":[[2866,51],[8454,51],[13479,51]]},"792":{"position":[[5685,51],[11466,51],[18112,51]]},"809":{"position":[[4351,51],[9305,51],[14482,51],[19366,51],[24407,51],[31042,51],[36081,51]]},"811":{"position":[[5432,51],[11753,51]]},"813":{"position":[[4911,51],[10889,51]]},"815":{"position":[[6185,51],[12419,51],[17592,51],[22702,51],[27897,51],[33003,51]]}}}],["environment.getenvironmentvariable(\"fga_api_schem",{"_index":391,"t":{"16":{"position":[[14608,53],[20220,53],[25998,53]]},"80":{"position":[[3908,53]]},"86":{"position":[[1308,53]]},"112":{"position":[[1600,53]]},"124":{"position":[[1600,53]]},"170":{"position":[[1218,53]]},"172":{"position":[[2052,53]]},"190":{"position":[[1600,53]]},"213":{"position":[[2486,53]]},"215":{"position":[[2446,53],[7615,53]]},"221":{"position":[[3743,53],[8938,53],[14154,53],[19181,53]]},"230":{"position":[[2747,53]]},"232":{"position":[[2491,53]]},"245":{"position":[[2726,53]]},"247":{"position":[[2498,53],[7500,53]]},"257":{"position":[[1576,53]]},"288":{"position":[[2575,53],[7482,53],[13120,53]]},"312":{"position":[[2587,53],[7615,53]]},"318":{"position":[[2872,53],[8191,53],[13425,53]]},"338":{"position":[[2635,53]]},"345":{"position":[[3559,53]]},"369":{"position":[[3003,53],[8509,53]]},"371":{"position":[[3125,53]]},"373":{"position":[[2421,53]]},"385":{"position":[[2572,53]]},"387":{"position":[[2535,53],[7787,53]]},"445":{"position":[[2593,53],[7642,53]]},"449":{"position":[[2555,53],[7770,53]]},"467":{"position":[[2519,53]]},"469":{"position":[[2681,53]]},"471":{"position":[[2608,53]]},"485":{"position":[[2809,53]]},"487":{"position":[[2732,53]]},"505":{"position":[[3083,53],[8457,53],[13872,53],[18982,53],[24024,53]]},"521":{"position":[[2532,53]]},"523":{"position":[[3019,53]]},"525":{"position":[[2672,53]]},"537":{"position":[[2769,53]]},"541":{"position":[[2768,53]]},"543":{"position":[[2627,53]]},"545":{"position":[[2403,53],[7349,53]]},"547":{"position":[[2495,53],[7340,53]]},"562":{"position":[[2582,53]]},"569":{"position":[[2972,53],[8487,53],[13923,53]]},"571":{"position":[[2939,53]]},"576":{"position":[[2706,53],[8040,53]]},"583":{"position":[[2784,53]]},"605":{"position":[[3712,53],[9305,53],[15553,53],[21802,53],[27461,53]]},"607":{"position":[[3559,53],[9234,53],[14991,53],[20733,53]]},"622":{"position":[[2993,53]]},"624":{"position":[[2548,53]]},"630":{"position":[[2972,53]]},"632":{"position":[[2461,53]]},"634":{"position":[[2629,53],[7833,53],[12889,53]]},"644":{"position":[[3221,53],[8256,53]]},"646":{"position":[[2678,53],[7728,53]]},"648":{"position":[[2670,53],[8418,53],[13869,53],[19175,53],[24253,53]]},"668":{"position":[[7332,53]]},"670":{"position":[[3721,53]]},"692":{"position":[[2915,53],[7879,53],[13265,53],[19092,53],[24206,53]]},"694":{"position":[[5901,53],[11709,53]]},"696":{"position":[[5468,53],[11663,53],[17964,53]]},"698":{"position":[[5843,53],[11683,53]]},"718":{"position":[[4590,53],[9705,53],[15016,53],[20088,53],[25258,53],[31587,53],[37658,53]]},"720":{"position":[[2477,53],[9175,53]]},"722":{"position":[[9837,53],[16129,53],[22010,53],[27865,53],[33348,53],[38479,53],[43587,53],[48709,53]]},"734":{"position":[[6214,53]]},"740":{"position":[[2767,53],[7886,53],[13208,53],[18236,53]]},"742":{"position":[[6874,53],[13148,53],[20142,53],[25776,53]]},"744":{"position":[[4026,53],[10642,53],[17100,53]]},"746":{"position":[[9902,53]]},"767":{"position":[[4560,53],[13428,53],[20469,53],[27337,53],[32518,53],[37560,53],[42620,53]]},"769":{"position":[[2640,53],[9967,53],[15325,53],[25071,53],[32716,53],[41703,53]]},"786":{"position":[[4235,53],[9168,53],[14334,53],[19224,53],[24270,53],[31419,53],[36463,53]]},"788":{"position":[[5268,53],[11167,53]]},"790":{"position":[[2753,53],[8341,53],[13366,53]]},"792":{"position":[[5572,53],[11353,53],[17999,53]]},"809":{"position":[[4238,53],[9192,53],[14369,53],[19253,53],[24294,53],[30929,53],[35968,53]]},"811":{"position":[[5319,53],[11640,53]]},"813":{"position":[[4798,53],[10776,53]]},"815":{"position":[[6072,53],[12306,53],[17479,53],[22589,53],[27784,53],[32890,53]]}}}],["environment.getenvironmentvariable(\"fga_bearer_token",{"_index":1131,"t":{"172":{"position":[[2591,54]]}}}],["environment.getenvironmentvariable(\"fga_store_id",{"_index":393,"t":{"16":{"position":[[14888,51],[20500,51],[26278,51]]},"80":{"position":[[4188,51]]},"112":{"position":[[1880,51]]},"124":{"position":[[1880,51]]},"170":{"position":[[1508,50]]},"172":{"position":[[2316,51]]},"190":{"position":[[1880,51]]},"213":{"position":[[2766,51]]},"215":{"position":[[2726,51],[7895,51]]},"221":{"position":[[4023,51],[9218,51],[14434,51],[19461,51]]},"230":{"position":[[3027,51]]},"232":{"position":[[2771,51]]},"245":{"position":[[3006,51]]},"247":{"position":[[2778,51],[7780,51]]},"257":{"position":[[1856,51]]},"288":{"position":[[2855,51],[7762,51],[13400,51]]},"312":{"position":[[2867,51],[7895,51]]},"318":{"position":[[3152,51],[8471,51],[13705,51]]},"338":{"position":[[2915,51]]},"345":{"position":[[3839,51]]},"369":{"position":[[3283,51],[8789,51]]},"371":{"position":[[3405,51]]},"373":{"position":[[2701,51]]},"385":{"position":[[2852,51]]},"387":{"position":[[2815,51],[8067,51]]},"445":{"position":[[2873,51],[7922,51]]},"449":{"position":[[2835,51],[8050,51]]},"467":{"position":[[2799,51]]},"469":{"position":[[2961,51]]},"471":{"position":[[2888,51]]},"485":{"position":[[3089,51]]},"487":{"position":[[3012,51]]},"505":{"position":[[3363,51],[8737,51],[14152,51],[19262,51],[24304,51]]},"521":{"position":[[2812,51]]},"523":{"position":[[3299,51]]},"525":{"position":[[2952,51]]},"537":{"position":[[3049,51]]},"541":{"position":[[3048,51]]},"543":{"position":[[2907,51]]},"545":{"position":[[2683,51],[7629,51]]},"547":{"position":[[2775,51],[7620,51]]},"562":{"position":[[2862,51]]},"569":{"position":[[3252,51],[8767,51],[14203,51]]},"571":{"position":[[3219,51]]},"576":{"position":[[2986,51],[8320,51]]},"583":{"position":[[3064,51]]},"605":{"position":[[3992,51],[9585,51],[15833,51],[22082,51],[27741,51]]},"607":{"position":[[3839,51],[9514,51],[15271,51],[21013,51]]},"622":{"position":[[3273,51]]},"624":{"position":[[2828,51]]},"630":{"position":[[3252,51]]},"632":{"position":[[2741,51]]},"634":{"position":[[2909,51],[8113,51],[13169,51]]},"644":{"position":[[3501,51],[8536,51]]},"646":{"position":[[2958,51],[8008,51]]},"648":{"position":[[2950,51],[8698,51],[14149,51],[19455,51],[24533,51]]},"668":{"position":[[7612,51]]},"670":{"position":[[4001,51]]},"692":{"position":[[3195,51],[8159,51],[13545,51],[19372,51],[24486,51]]},"694":{"position":[[6181,51],[11989,51]]},"696":{"position":[[5748,51],[11943,51],[18244,51]]},"698":{"position":[[6123,51],[11963,51]]},"718":{"position":[[4870,51],[9985,51],[15296,51],[20368,51],[25538,51],[31867,51],[37938,51]]},"720":{"position":[[2757,51],[9455,51]]},"722":{"position":[[10117,51],[16409,51],[22290,51],[28145,51],[33628,51],[38759,51],[43867,51],[48989,51]]},"734":{"position":[[6494,51]]},"740":{"position":[[3047,51],[8166,51],[13488,51],[18516,51]]},"742":{"position":[[7154,51],[13428,51],[20422,51],[26056,51]]},"744":{"position":[[4306,51],[10922,51],[17380,51]]},"746":{"position":[[10182,51]]},"767":{"position":[[4840,51],[13708,51],[20749,51],[27617,51],[32798,51],[37840,51],[42900,51]]},"769":{"position":[[2920,51],[10247,51],[15605,51],[25351,51],[32996,51],[41983,51]]},"786":{"position":[[4515,51],[9448,51],[14614,51],[19504,51],[24550,51],[31699,51],[36743,51]]},"788":{"position":[[5548,51],[11447,51]]},"790":{"position":[[3033,51],[8621,51],[13646,51]]},"792":{"position":[[5852,51],[11633,51],[18279,51]]},"809":{"position":[[4518,51],[9472,51],[14649,51],[19533,51],[24574,51],[31209,51],[36248,51]]},"811":{"position":[[5599,51],[11920,51]]},"813":{"position":[[5078,51],[11056,51]]},"815":{"position":[[6352,51],[12586,51],[17759,51],[22869,51],[28064,51],[33170,51]]}}}],["equival",{"_index":201,"t":{"16":{"position":[[3106,10]]}}}],["erik",{"_index":2620,"t":{"783":{"position":[[141,5]]},"792":{"position":[[278,4],[2869,4]]},"806":{"position":[[167,5]]},"815":{"position":[[25330,4]]}}}],["err",{"_index":361,"t":{"16":{"position":[[13359,3],[13790,3],[14093,3],[18971,3],[19402,3],[19705,3],[24748,3],[25179,3],[25437,3]]},"80":{"position":[[2132,3],[2563,3],[3152,3],[3228,3],[3256,4],[3305,3],[3403,3]]},"86":{"position":[[534,3],[809,3],[901,3],[1055,3]]},"94":{"position":[[861,5]]},"96":{"position":[[691,5],[1462,5],[2075,3],[2097,3],[2133,3],[2180,4]]},"98":{"position":[[629,5],[1546,5],[2457,5],[3285,3],[3307,3],[3343,3],[3390,4],[4528,3],[4762,3],[5152,3],[5229,3]]},"102":{"position":[[428,3],[703,3]]},"112":{"position":[[766,3],[1197,3]]},"114":{"position":[[529,3]]},"124":{"position":[[766,3],[1197,3]]},"126":{"position":[[504,3]]},"170":{"position":[[579,3],[916,3]]},"172":{"position":[[1114,3],[1750,3]]},"190":{"position":[[766,3],[1197,3]]},"192":{"position":[[560,3],[640,3]]},"194":{"position":[[718,3],[798,3]]},"213":{"position":[[1147,3],[1578,3],[1962,3],[2042,3]]},"215":{"position":[[1200,3],[1631,3],[1931,3],[6367,3],[6798,3],[7099,3]]},"221":{"position":[[2501,3],[2932,3],[3227,3],[7562,3],[7993,3],[8414,3],[8494,3],[12908,3],[13339,3],[13639,3],[17933,3],[18364,3],[18665,3]]},"230":{"position":[[1409,3],[1840,3],[2223,3],[2303,3]]},"232":{"position":[[1244,3],[1675,3],[1975,3]]},"245":{"position":[[1490,3],[1921,3],[2211,3]]},"247":{"position":[[1164,3],[1595,3],[1974,3],[2054,3],[6263,3],[6694,3],[6984,3]]},"257":{"position":[[742,3],[1173,3]]},"259":{"position":[[234,3],[324,3],[1483,3],[1692,3]]},"261":{"position":[[1223,3],[1330,3],[2321,3],[2547,3]]},"288":{"position":[[1245,3],[1676,3],[2051,3],[2131,3],[6151,3],[6582,3],[6958,3],[7038,3],[11513,3],[11944,3],[12596,3],[12676,3]]},"312":{"position":[[1340,3],[1771,3],[2072,3],[6369,3],[6800,3],[7100,3]]},"318":{"position":[[1474,3],[1905,3],[2348,3],[2428,3],[6944,3],[7375,3],[7675,3],[12178,3],[12609,3],[12910,3]]},"338":{"position":[[1381,3],[1812,3],[2120,3]]},"345":{"position":[[2315,3],[2746,3],[3044,3]]},"369":{"position":[[1443,3],[1874,3],[2479,3],[2559,3],[7260,3],[7691,3],[7994,3]]},"371":{"position":[[1455,3],[1886,3],[2601,3],[2681,3]]},"373":{"position":[[1172,3],[1603,3],[1906,3]]},"385":{"position":[[1221,3],[1652,3],[2048,3],[2128,3]]},"387":{"position":[[1281,3],[1712,3],[2020,3],[6532,3],[6963,3],[7271,3]]},"429":{"position":[[2376,3],[2456,3]]},"445":{"position":[[1343,3],[1774,3],[2078,3],[6393,3],[6824,3],[7127,3]]},"449":{"position":[[1304,3],[1735,3],[2040,3],[6519,3],[6950,3],[7254,3]]},"467":{"position":[[1182,3],[1613,3],[1995,3],[2075,3]]},"469":{"position":[[1264,3],[1695,3],[2157,3],[2237,3]]},"471":{"position":[[1354,3],[1785,3],[2093,3]]},"485":{"position":[[1420,3],[1851,3],[2285,3],[2365,3]]},"487":{"position":[[1482,3],[1913,3],[2217,3]]},"505":{"position":[[1553,3],[1984,3],[2559,3],[2639,3],[7210,3],[7641,3],[7942,3],[12625,3],[13056,3],[13356,3],[17733,3],[18164,3],[18467,3],[22776,3],[23207,3],[23509,3]]},"521":{"position":[[1193,3],[1624,3],[2008,3],[2088,3]]},"523":{"position":[[1603,3],[2034,3],[2495,3],[2575,3]]},"525":{"position":[[1416,3],[1847,3],[2157,3]]},"537":{"position":[[1323,3],[1754,3],[2245,3],[2325,3]]},"541":{"position":[[1326,3],[1757,3],[2244,3],[2324,3]]},"543":{"position":[[1289,3],[1720,3],[2103,3],[2183,3]]},"545":{"position":[[1168,3],[1599,3],[1888,3],[6114,3],[6545,3],[6834,3]]},"547":{"position":[[1165,3],[1596,3],[1971,3],[2051,3],[6104,3],[6535,3],[6824,3]]},"562":{"position":[[1337,3],[1768,3],[2067,3]]},"569":{"position":[[1637,3],[2068,3],[2341,3],[7190,3],[7621,3],[7856,3],[12616,3],[13047,3],[13292,3]]},"571":{"position":[[1722,3],[2153,3],[2426,3]]},"576":{"position":[[1367,3],[1798,3],[2195,3],[6701,3],[7132,3],[7529,3]]},"583":{"position":[[1365,3],[1796,3],[2223,3]]},"605":{"position":[[2466,3],[2897,3],[3197,3],[8059,3],[8490,3],[8790,3],[14304,3],[14735,3],[15038,3],[20556,3],[20987,3],[21287,3],[26214,3],[26645,3],[26946,3]]},"607":{"position":[[2312,3],[2743,3],[3043,3],[7984,3],[8415,3],[8718,3],[13743,3],[14174,3],[14475,3],[19485,3],[19916,3],[20218,3]]},"622":{"position":[[1538,3],[1969,3],[2469,3],[2549,3]]},"624":{"position":[[1291,3],[1722,3],[2033,3]]},"630":{"position":[[1362,3],[1793,3],[2448,3],[2528,3]]},"632":{"position":[[1212,3],[1643,3],[1946,3]]},"634":{"position":[[1219,3],[1650,3],[2105,3],[2185,3],[6583,3],[7014,3],[7317,3],[11636,3],[12067,3],[12374,3]]},"644":{"position":[[1973,3],[2404,3],[2706,3],[7009,3],[7440,3],[7741,3]]},"646":{"position":[[1288,3],[1719,3],[2154,3],[2234,3],[6477,3],[6908,3],[7213,3]]},"648":{"position":[[1355,3],[1786,3],[1915,3],[6947,3],[7378,3],[7894,3],[7974,3],[12397,3],[12828,3],[13345,3],[13425,3],[17927,3],[18358,3],[18660,3],[23007,3],[23438,3],[23737,3]]},"660":{"position":[[5620,3],[5700,3]]},"666":{"position":[[692,3],[2587,3],[4500,3],[6401,3],[8311,3],[10217,3]]},"668":{"position":[[3271,3],[5925,3],[6356,3],[6808,3],[6888,3],[10523,3]]},"670":{"position":[[2286,3],[2717,3],[3197,3],[3277,3],[7380,3],[10206,3]]},"672":{"position":[[5159,3],[5239,3]]},"692":{"position":[[1570,3],[2001,3],[2391,3],[2471,3],[6530,3],[6961,3],[7355,3],[7435,3],[11661,3],[12092,3],[12741,3],[12821,3],[17844,3],[18275,3],[18577,3],[22960,3],[23391,3],[23690,3]]},"694":{"position":[[4188,3],[4619,3],[5377,3],[5457,3],[10458,3],[10889,3],[11194,3]]},"696":{"position":[[3979,3],[4410,3],[4944,3],[5024,3],[9867,3],[10298,3],[11139,3],[11219,3],[16719,3],[17150,3],[17449,3]]},"698":{"position":[[4236,3],[4667,3],[5319,3],[5399,3],[10433,3],[10864,3],[11167,3]]},"718":{"position":[[3186,3],[3617,3],[4066,3],[4146,3],[8451,3],[8882,3],[9190,3],[13612,3],[14043,3],[14492,3],[14572,3],[18834,3],[19265,3],[19573,3],[23997,3],[24428,3],[24742,3],[29821,3],[30252,3],[31063,3],[31143,3],[36404,3],[36835,3],[37143,3]]},"720":{"position":[[1228,3],[1659,3],[1961,3],[7927,3],[8358,3],[8660,3]]},"722":{"position":[[8156,3],[8587,3],[9313,3],[9393,3],[14656,3],[15087,3],[15605,3],[15685,3],[20437,3],[20868,3],[21486,3],[21566,3],[26377,3],[26808,3],[27341,3],[27421,3],[31973,3],[32404,3],[32824,3],[32904,3],[37121,3],[37552,3],[37955,3],[38035,3],[42341,3],[42772,3],[43071,3],[47448,3],[47879,3],[48194,3]]},"734":{"position":[[4181,3],[4612,3],[5690,3],[5770,3]]},"740":{"position":[[1523,3],[1954,3],[2252,3],[6638,3],[7069,3],[7371,3],[11803,3],[12234,3],[12684,3],[12764,3],[16991,3],[17422,3],[17720,3]]},"742":{"position":[[5634,3],[6065,3],[6358,3],[11263,3],[11694,3],[12624,3],[12704,3],[18558,3],[18989,3],[19618,3],[19698,3],[24532,3],[24963,3],[25261,3]]},"744":{"position":[[2387,3],[2818,3],[3502,3],[3582,3],[9063,3],[9494,3],[10127,3],[15520,3],[15951,3],[16584,3]]},"746":{"position":[[6165,3],[6596,3],[9378,3],[9458,3]]},"767":{"position":[[2096,3],[2527,3],[4036,3],[4116,3],[11592,3],[12023,3],[12904,3],[12984,3],[18703,3],[19134,3],[19945,3],[20025,3],[26090,3],[26521,3],[26822,3],[31270,3],[31701,3],[32002,3],[36309,3],[36740,3],[37045,3],[41368,3],[41799,3],[42105,3]]},"769":{"position":[[1392,3],[1823,3],[2120,3],[8723,3],[9154,3],[9451,3],[14072,3],[14503,3],[14809,3],[23819,3],[24250,3],[24556,3],[31473,3],[31904,3],[32201,3],[40460,3],[40891,3],[41188,3]]},"786":{"position":[[2889,3],[3320,3],[3711,3],[3791,3],[7919,3],[8350,3],[8653,3],[12988,3],[13419,3],[13810,3],[13890,3],[17975,3],[18406,3],[18709,3],[23020,3],[23451,3],[23754,3],[30170,3],[30601,3],[30904,3],[35214,3],[35645,3],[35948,3]]},"788":{"position":[[3637,3],[4068,3],[4744,3],[4824,3],[9916,3],[10347,3],[10652,3]]},"790":{"position":[[1383,3],[1814,3],[2229,3],[2309,3],[6939,3],[7370,3],[7817,3],[7897,3],[12117,3],[12548,3],[12851,3]]},"792":{"position":[[4086,3],[4517,3],[5048,3],[5128,3],[10100,3],[10531,3],[10833,3],[16631,3],[17062,3],[17475,3],[17555,3]]},"809":{"position":[[2889,3],[3320,3],[3714,3],[3794,3],[7940,3],[8371,3],[8677,3],[13024,3],[13455,3],[13845,3],[13925,3],[18005,3],[18436,3],[18738,3],[23044,3],[23475,3],[23778,3],[29681,3],[30112,3],[30414,3],[34719,3],[35150,3],[35453,3]]},"811":{"position":[[3485,3],[3916,3],[4795,3],[4875,3],[10388,3],[10819,3],[11125,3]]},"813":{"position":[[3197,3],[3628,3],[4274,3],[4354,3],[9521,3],[9952,3],[10256,3]]},"815":{"position":[[4242,3],[4673,3],[5548,3],[5628,3],[11050,3],[11481,3],[11791,3],[16221,3],[16652,3],[16963,3],[21329,3],[21760,3],[22074,3],[26526,3],[26957,3],[27268,3],[31632,3],[32063,3],[32374,3]]}}}],["error",{"_index":371,"t":{"16":{"position":[[13816,5],[19428,5],[25205,5]]},"60":{"position":[[3249,5],[3363,5]]},"80":{"position":[[2589,5],[3274,5],[3429,5]]},"86":{"position":[[835,5],[1081,5]]},"94":{"position":[[1547,5]]},"96":{"position":[[2079,5],[2381,5]]},"98":{"position":[[3289,5],[3660,5],[3870,5],[4505,5]]},"102":{"position":[[729,5]]},"112":{"position":[[1223,5]]},"124":{"position":[[1223,5]]},"170":{"position":[[942,5]]},"172":{"position":[[1776,5]]},"190":{"position":[[1223,5]]},"192":{"position":[[666,5]]},"194":{"position":[[824,5]]},"213":{"position":[[1604,5],[2068,5]]},"215":{"position":[[1657,5],[6824,5]]},"221":{"position":[[2958,5],[8019,5],[8520,5],[13365,5],[18390,5]]},"230":{"position":[[1866,5],[2329,5]]},"232":{"position":[[1701,5]]},"245":{"position":[[1947,5]]},"247":{"position":[[1621,5],[2080,5],[6720,5]]},"257":{"position":[[1199,5]]},"259":{"position":[[350,5],[1150,6],[1718,5]]},"261":{"position":[[1356,5],[2041,7],[2573,5]]},"288":{"position":[[1702,5],[2157,5],[6608,5],[7064,5],[11970,5],[12702,5]]},"312":{"position":[[1797,5],[6826,5]]},"318":{"position":[[1931,5],[2454,5],[7401,5],[12635,5]]},"338":{"position":[[1838,5]]},"345":{"position":[[2772,5]]},"369":{"position":[[1900,5],[2585,5],[7717,5]]},"371":{"position":[[1912,5],[2707,5]]},"373":{"position":[[1629,5]]},"385":{"position":[[1678,5],[2154,5]]},"387":{"position":[[1738,5],[6989,5]]},"419":{"position":[[4062,6]]},"429":{"position":[[575,5],[665,5],[1825,6],[2482,5]]},"445":{"position":[[1800,5],[6850,5]]},"449":{"position":[[1761,5],[6976,5]]},"467":{"position":[[1639,5],[2101,5]]},"469":{"position":[[1721,5],[2263,5]]},"471":{"position":[[1811,5],[6073,5]]},"485":{"position":[[1877,5],[2391,5]]},"487":{"position":[[1939,5]]},"505":{"position":[[2010,5],[2665,5],[7667,5],[13082,5],[18190,5],[23233,5]]},"521":{"position":[[1650,5],[2114,5]]},"523":{"position":[[2060,5],[2601,5]]},"525":{"position":[[1873,5]]},"537":{"position":[[1780,5],[2351,5]]},"541":{"position":[[1783,5],[2350,5]]},"543":{"position":[[1746,5],[2209,5]]},"545":{"position":[[1625,5],[6571,5]]},"547":{"position":[[1622,5],[2077,5],[6561,5]]},"562":{"position":[[1794,5]]},"569":{"position":[[2094,5],[7647,5],[13073,5]]},"571":{"position":[[2179,5]]},"576":{"position":[[1824,5],[7158,5]]},"583":{"position":[[1822,5]]},"605":{"position":[[2923,5],[8516,5],[14761,5],[21013,5],[26671,5]]},"607":{"position":[[2769,5],[8441,5],[14200,5],[19942,5]]},"622":{"position":[[1995,5],[2575,5]]},"624":{"position":[[1748,5]]},"630":{"position":[[1819,5],[2554,5]]},"632":{"position":[[1669,5]]},"634":{"position":[[1676,5],[2211,5],[7040,5],[12093,5]]},"644":{"position":[[2430,5],[7466,5]]},"646":{"position":[[1745,5],[2260,5],[6934,5]]},"648":{"position":[[1812,5],[7404,5],[8000,5],[12854,5],[13451,5],[18384,5],[23464,5]]},"660":{"position":[[5726,5]]},"668":{"position":[[6382,5],[6914,5]]},"670":{"position":[[2743,5],[3303,5]]},"672":{"position":[[5265,5]]},"692":{"position":[[2027,5],[2497,5],[6987,5],[7461,5],[12118,5],[12847,5],[18301,5],[23417,5]]},"694":{"position":[[4645,5],[5483,5],[10915,5]]},"696":{"position":[[4436,5],[5050,5],[10324,5],[11245,5],[17176,5]]},"698":{"position":[[4693,5],[5425,5],[10890,5]]},"718":{"position":[[3643,5],[4172,5],[8908,5],[14069,5],[14598,5],[19291,5],[24454,5],[30278,5],[31169,5],[36861,5]]},"720":{"position":[[1685,5],[8384,5]]},"722":{"position":[[8613,5],[9419,5],[15113,5],[15711,5],[20894,5],[21592,5],[26834,5],[27447,5],[32430,5],[32930,5],[37578,5],[38061,5],[42798,5],[47905,5]]},"734":{"position":[[4638,5],[5796,5]]},"740":{"position":[[1980,5],[7095,5],[12260,5],[12790,5],[17448,5]]},"742":{"position":[[6091,5],[11720,5],[12730,5],[19015,5],[19724,5],[24989,5]]},"744":{"position":[[2844,5],[3608,5],[9520,5],[15977,5]]},"746":{"position":[[6622,5],[9484,5]]},"767":{"position":[[2553,5],[4142,5],[12049,5],[13010,5],[19160,5],[20051,5],[26547,5],[31727,5],[36766,5],[41825,5]]},"769":{"position":[[1849,5],[9180,5],[14529,5],[24276,5],[31930,5],[40917,5]]},"786":{"position":[[3346,5],[3817,5],[8376,5],[13445,5],[13916,5],[18432,5],[23477,5],[30627,5],[35671,5]]},"788":{"position":[[4094,5],[4850,5],[10373,5]]},"790":{"position":[[1840,5],[2335,5],[7396,5],[7923,5],[12574,5]]},"792":{"position":[[4543,5],[5154,5],[10557,5],[17088,5],[17581,5]]},"809":{"position":[[3346,5],[3820,5],[8397,5],[13481,5],[13951,5],[18462,5],[23501,5],[30138,5],[35176,5]]},"811":{"position":[[3942,5],[4901,5],[10845,5]]},"813":{"position":[[3654,5],[4380,5],[9978,5]]},"815":{"position":[[4699,5],[5654,5],[11507,5],[16678,5],[21786,5],[26983,5],[32089,5]]}}}],["especi",{"_index":1962,"t":{"591":{"position":[[207,10]]}}}],["essenti",{"_index":1625,"t":{"405":{"position":[[1127,12]]}}}],["establish",{"_index":1557,"t":{"399":{"position":[[3897,11],[3934,9]]},"560":{"position":[[161,9]]},"562":{"position":[[35,9]]}}}],["etc",{"_index":131,"t":{"14":{"position":[[204,7]]},"60":{"position":[[3418,7]]},"263":{"position":[[451,5]]},"403":{"position":[[630,4]]},"427":{"position":[[528,5]]},"491":{"position":[[247,7],[380,7]]},"503":{"position":[[574,7]]},"794":{"position":[[119,4]]}}}],["etc/openfga",{"_index":895,"t":{"140":{"position":[[106,12]]}}}],["europ",{"_index":1811,"t":{"505":{"position":[[295,7],[347,7],[6095,7],[11228,6],[11479,7],[16616,7],[26821,6]]}}}],["evalu",{"_index":570,"t":{"60":{"position":[[3399,10]]},"415":{"position":[[667,10]]},"427":{"position":[[479,10]]},"429":{"position":[[128,11],[295,9],[608,10]]},"431":{"position":[[118,10],[415,10],[1195,10]]},"471":{"position":[[5935,10]]},"668":{"position":[[476,9]]},"670":{"position":[[159,8]]},"744":{"position":[[159,8]]}}}],["even",{"_index":1375,"t":{"304":{"position":[[148,4]]},"312":{"position":[[10392,4]]},"349":{"position":[[177,4]]},"487":{"position":[[139,4]]},"605":{"position":[[12222,4],[24484,4]]},"607":{"position":[[6251,4],[11941,4]]},"624":{"position":[[5378,4]]},"634":{"position":[[5410,4]]},"666":{"position":[[11704,4]]},"769":{"position":[[36972,4]]},"813":{"position":[[132,4]]}}}],["eventu",{"_index":1653,"t":{"417":{"position":[[295,10]]}}}],["everyon",{"_index":253,"t":{"16":{"position":[[5047,9],[6444,8],[6477,8],[10650,8],[29928,8]]},"56":{"position":[[2092,8]]},"288":{"position":[[151,8],[11125,8],[12381,8],[13901,8],[15203,8],[16164,8]]},"296":{"position":[[736,8],[781,8]]},"475":{"position":[[351,8]]},"483":{"position":[[143,8]]},"605":{"position":[[6656,8],[12039,8]]},"607":{"position":[[882,8],[6537,8],[6613,8],[11999,8]]},"769":{"position":[[19752,8]]},"796":{"position":[[931,8]]},"811":{"position":[[45,8]]},"815":{"position":[[408,10],[3782,8],[5261,8],[6973,8],[8475,8],[9698,8]]}}}],["everyth",{"_index":1619,"t":{"405":{"position":[[108,10]]},"686":{"position":[[374,10],[486,10]]},"760":{"position":[[378,10],[439,10]]},"767":{"position":[[30134,10]]}}}],["exact",{"_index":1248,"t":{"251":{"position":[[140,5]]},"259":{"position":[[3145,5]]},"599":{"position":[[281,5]]}}}],["examin",{"_index":2273,"t":{"718":{"position":[[1410,7]]},"786":{"position":[[1204,7],[28390,7]]},"809":{"position":[[1174,7],[28218,7]]}}}],["exampl",{"_index":58,"t":{"6":{"position":[[183,8]]},"8":{"position":[[344,7]]},"12":{"position":[[124,8]]},"16":{"position":[[561,8],[809,7],[1607,7],[4238,8],[4659,8],[5440,8],[5699,8],[8416,7],[11283,8],[17755,8],[23508,8],[29693,8],[29805,8]]},"48":{"position":[[178,8]]},"56":{"position":[[1016,8],[2506,9]]},"58":{"position":[[2106,9]]},"60":{"position":[[3435,9]]},"62":{"position":[[1495,9]]},"64":{"position":[[1876,9]]},"68":{"position":[[394,8]]},"94":{"position":[[79,8],[948,8]]},"100":{"position":[[42,8]]},"148":{"position":[[282,8],[539,8]]},"154":{"position":[[210,7],[354,7]]},"156":{"position":[[370,8]]},"176":{"position":[[326,9]]},"202":{"position":[[286,8]]},"288":{"position":[[97,8]]},"290":{"position":[[113,8],[702,8]]},"294":{"position":[[38,8]]},"304":{"position":[[97,8]]},"326":{"position":[[83,8],[333,8]]},"338":{"position":[[5558,8]]},"343":{"position":[[522,8]]},"347":{"position":[[900,8]]},"353":{"position":[[87,8]]},"387":{"position":[[10723,8]]},"393":{"position":[[714,8],[795,8],[1029,8]]},"395":{"position":[[335,8]]},"397":{"position":[[141,7]]},"399":{"position":[[4470,7]]},"403":{"position":[[560,8],[1989,8],[3752,7],[4437,7],[7541,7]]},"405":{"position":[[1297,8],[1513,7]]},"407":{"position":[[170,7]]},"419":{"position":[[1766,8],[3922,8]]},"421":{"position":[[95,8],[460,8]]},"423":{"position":[[861,8]]},"435":{"position":[[163,8]]},"453":{"position":[[167,8]]},"467":{"position":[[5197,8]]},"477":{"position":[[1802,8]]},"483":{"position":[[181,7]]},"491":{"position":[[392,8],[775,8],[1381,8]]},"505":{"position":[[27315,8]]},"509":{"position":[[304,8]]},"517":{"position":[[135,8]]},"523":{"position":[[154,8]]},"525":{"position":[[5794,8]]},"529":{"position":[[269,8]]},"539":{"position":[[1200,8]]},"549":{"position":[[344,7]]},"562":{"position":[[129,8]]},"569":{"position":[[381,8],[5898,8],[11320,8]]},"571":{"position":[[188,8]]},"576":{"position":[[116,8]]},"605":{"position":[[18665,8],[24656,7]]},"609":{"position":[[475,7]]},"611":{"position":[[116,8],[439,8]]},"624":{"position":[[5906,8]]},"626":{"position":[[82,7]]},"642":{"position":[[25,7]]},"644":{"position":[[170,7]]},"646":{"position":[[116,8]]},"654":{"position":[[373,8]]},"664":{"position":[[151,8]]},"694":{"position":[[656,8]]},"728":{"position":[[405,8]]},"758":{"position":[[349,8]]},"765":{"position":[[349,7]]},"767":{"position":[[24447,8]]}}}],["exampleapp",{"_index":385,"t":{"16":{"position":[[14413,11],[20025,11],[25803,11]]},"80":{"position":[[3713,11]]},"86":{"position":[[1197,11]]},"112":{"position":[[1405,11]]},"124":{"position":[[1405,11]]},"170":{"position":[[1107,11]]},"172":{"position":[[1941,11]]},"190":{"position":[[1405,11]]},"213":{"position":[[2291,11]]},"215":{"position":[[2251,11],[7420,11]]},"221":{"position":[[3548,11],[8743,11],[13959,11],[18986,11]]},"230":{"position":[[2552,11]]},"232":{"position":[[2296,11]]},"245":{"position":[[2531,11]]},"247":{"position":[[2303,11],[7305,11]]},"257":{"position":[[1381,11]]},"288":{"position":[[2380,11],[7287,11],[12925,11]]},"312":{"position":[[2392,11],[7420,11]]},"318":{"position":[[2677,11],[7996,11],[13230,11]]},"338":{"position":[[2440,11]]},"345":{"position":[[3364,11]]},"369":{"position":[[2808,11],[8314,11]]},"371":{"position":[[2930,11]]},"373":{"position":[[2226,11]]},"385":{"position":[[2377,11]]},"387":{"position":[[2340,11],[7592,11]]},"445":{"position":[[2398,11],[7447,11]]},"449":{"position":[[2360,11],[7575,11]]},"467":{"position":[[2324,11]]},"469":{"position":[[2486,11]]},"471":{"position":[[2413,11]]},"485":{"position":[[2614,11]]},"487":{"position":[[2537,11]]},"505":{"position":[[2888,11],[8262,11],[13677,11],[18787,11],[23829,11]]},"521":{"position":[[2337,11]]},"523":{"position":[[2824,11]]},"525":{"position":[[2477,11]]},"537":{"position":[[2574,11]]},"541":{"position":[[2573,11]]},"543":{"position":[[2432,11]]},"545":{"position":[[2208,11],[7154,11]]},"547":{"position":[[2300,11],[7145,11]]},"562":{"position":[[2387,11]]},"569":{"position":[[2777,11],[8292,11],[13728,11]]},"571":{"position":[[2744,11]]},"576":{"position":[[2511,11],[7845,11]]},"583":{"position":[[2589,11]]},"605":{"position":[[3517,11],[9110,11],[15358,11],[21607,11],[27266,11]]},"607":{"position":[[3364,11],[9039,11],[14796,11],[20538,11]]},"622":{"position":[[2798,11]]},"624":{"position":[[2353,11]]},"630":{"position":[[2777,11]]},"632":{"position":[[2266,11]]},"634":{"position":[[2434,11],[7638,11],[12694,11]]},"644":{"position":[[3026,11],[8061,11]]},"646":{"position":[[2483,11],[7533,11]]},"648":{"position":[[2475,11],[8223,11],[13674,11],[18980,11],[24058,11]]},"668":{"position":[[7137,11]]},"670":{"position":[[3526,11]]},"692":{"position":[[2720,11],[7684,11],[13070,11],[18897,11],[24011,11]]},"694":{"position":[[5706,11],[11514,11]]},"696":{"position":[[5273,11],[11468,11],[17769,11]]},"698":{"position":[[5648,11],[11488,11]]},"718":{"position":[[4395,11],[9510,11],[14821,11],[19893,11],[25063,11],[31392,11],[37463,11]]},"720":{"position":[[2282,11],[8980,11]]},"722":{"position":[[9642,11],[15934,11],[21815,11],[27670,11],[33153,11],[38284,11],[43392,11],[48514,11]]},"734":{"position":[[6019,11]]},"740":{"position":[[2572,11],[7691,11],[13013,11],[18041,11]]},"742":{"position":[[6679,11],[12953,11],[19947,11],[25581,11]]},"744":{"position":[[3831,11],[10447,11],[16905,11]]},"746":{"position":[[9707,11]]},"767":{"position":[[4365,11],[13233,11],[20274,11],[27142,11],[32323,11],[37365,11],[42425,11]]},"769":{"position":[[2445,11],[9772,11],[15130,11],[24876,11],[32521,11],[41508,11]]},"786":{"position":[[4040,11],[8973,11],[14139,11],[19029,11],[24075,11],[31224,11],[36268,11]]},"788":{"position":[[5073,11],[10972,11]]},"790":{"position":[[2558,11],[8146,11],[13171,11]]},"792":{"position":[[5377,11],[11158,11],[17804,11]]},"809":{"position":[[4043,11],[8997,11],[14174,11],[19058,11],[24099,11],[30734,11],[35773,11]]},"811":{"position":[[5124,11],[11445,11]]},"813":{"position":[[4603,11],[10581,11]]},"815":{"position":[[5877,11],[12111,11],[17284,11],[22394,11],[27589,11],[32695,11]]}}}],["except",{"_index":670,"t":{"86":{"position":[[2277,6]]},"431":{"position":[[1233,6]]},"698":{"position":[[2459,6]]}}}],["exclud",{"_index":579,"t":{"66":{"position":[[173,8]]},"304":{"position":[[335,9]]},"306":{"position":[[2344,7]]},"310":{"position":[[637,7]]},"316":{"position":[[244,7]]}}}],["exclus",{"_index":578,"t":{"66":{"position":[[4,9],[219,9]]},"68":{"position":[[288,9]]},"132":{"position":[[85,11]]},"174":{"position":[[246,9]]},"180":{"position":[[68,9]]},"304":{"position":[[206,9]]},"306":{"position":[[2286,9],[2310,9]]},"310":{"position":[[579,9],[603,9]]},"316":{"position":[[222,9]]},"347":{"position":[[1315,11]]},"349":{"position":[[359,9],[1097,10]]}}}],["execut",{"_index":661,"t":{"86":{"position":[[1039,12]]},"259":{"position":[[311,9],[1679,9]]},"261":{"position":[[1317,9],[2534,9]]},"349":{"position":[[824,9]]},"569":{"position":[[1116,7],[6688,7],[12104,7]]},"571":{"position":[[1319,7]]},"648":{"position":[[783,7]]}}}],["exercis",{"_index":1561,"t":{"401":{"position":[[257,8]]},"407":{"position":[[16,8]]}}}],["exist",{"_index":144,"t":{"16":{"position":[[87,6],[2867,6],[9220,6],[9688,6],[9935,7],[10120,6],[10495,6],[11272,6],[11835,6],[12182,6],[17683,7],[28944,5]]},"40":{"position":[[112,7],[297,6]]},"46":{"position":[[76,5]]},"56":{"position":[[1942,6]]},"58":{"position":[[1439,7]]},"60":{"position":[[2014,7]]},"62":{"position":[[101,6],[640,6]]},"64":{"position":[[116,6]]},"66":{"position":[[115,6],[947,6]]},"114":{"position":[[1762,6],[1808,6]]},"349":{"position":[[206,6]]},"387":{"position":[[5391,5]]},"391":{"position":[[232,8]]},"393":{"position":[[64,8]]},"397":{"position":[[1691,8]]},"399":{"position":[[124,8],[2572,8]]},"401":{"position":[[1063,8]]},"411":{"position":[[156,8]]},"425":{"position":[[1742,8]]},"427":{"position":[[48,8]]},"437":{"position":[[3363,6]]},"443":{"position":[[667,6]]},"491":{"position":[[1080,8]]},"499":{"position":[[382,8]]},"560":{"position":[[194,7]]},"571":{"position":[[427,6]]},"599":{"position":[[216,6]]},"605":{"position":[[30439,6]]},"638":{"position":[[174,8]]},"640":{"position":[[740,6]]},"642":{"position":[[577,8]]},"644":{"position":[[118,8]]},"648":{"position":[[18,8],[21893,7]]},"658":{"position":[[514,5]]},"668":{"position":[[349,8]]},"670":{"position":[[567,5],[733,5]]},"732":{"position":[[515,6]]},"744":{"position":[[7433,5],[7599,5]]},"769":{"position":[[6170,7],[6341,6],[12700,7],[21405,8],[37232,5]]}}}],["expand",{"_index":1173,"t":{"200":{"position":[[697,7]]},"259":{"position":[[2972,6]]},"347":{"position":[[786,6]]},"349":{"position":[[1164,6],[1484,6]]},"415":{"position":[[1132,6]]},"427":{"position":[[506,7]]},"431":{"position":[[443,7]]},"551":{"position":[[78,7]]},"571":{"position":[[107,6]]},"574":{"position":[[4,6],[244,6],[292,6]]},"576":{"position":[[0,6],[932,6],[1980,6],[3306,6],[4414,9],[5140,7],[5161,6],[6266,6],[7314,6],[8640,6],[9748,9],[10474,7],[10495,6]]},"578":{"position":[[4,6]]},"587":{"position":[[11,6],[155,6]]},"589":{"position":[[220,6],[274,6]]},"652":{"position":[[220,6]]},"672":{"position":[[9517,6]]},"722":{"position":[[93,6]]},"746":{"position":[[19021,6]]},"788":{"position":[[8744,6]]},"811":{"position":[[9215,6]]}}}],["expandrequest",{"_index":1926,"t":{"576":{"position":[[4274,13],[4431,14],[9608,13],[9765,14]]}}}],["expandrequest(new",{"_index":1924,"t":{"576":{"position":[[3251,17],[8585,17]]}}}],["expandrespons",{"_index":1928,"t":{"576":{"position":[[4337,14],[9671,14]]}}}],["expandresponse({\"tre",{"_index":1930,"t":{"576":{"position":[[4638,28],[9972,28]]}}}],["expect",{"_index":1403,"t":{"318":{"position":[[5724,9],[10919,9]]},"365":{"position":[[1070,8]]},"373":{"position":[[49,13],[5134,7]]},"405":{"position":[[133,9],[731,8],[1188,6]]},"718":{"position":[[35280,9]]},"722":{"position":[[332,9],[501,9],[664,9]]},"728":{"position":[[87,8]]},"762":{"position":[[546,10],[601,10],[650,10],[691,10],[746,10],[796,10],[840,10],[898,10],[951,10]]},"765":{"position":[[249,7]]},"767":{"position":[[24280,7]]},"769":{"position":[[38936,10],[38991,10],[39040,10],[39081,10],[39136,10],[39186,10],[39230,10],[39288,10],[39341,10]]},"771":{"position":[[205,8]]}}}],["expens",{"_index":1936,"t":{"578":{"position":[[19,9]]}}}],["experiment",{"_index":1044,"t":{"152":{"position":[[37,12],[98,13],[124,13],[420,12],[780,12],[904,12],[950,16],[967,12],[1138,12]]}}}],["experimentals=\"feature1",{"_index":1046,"t":{"152":{"position":[[205,24]]}}}],["explain",{"_index":1,"t":{"2":{"position":[[13,8]]},"76":{"position":[[13,8]]},"84":{"position":[[191,8]]},"136":{"position":[[13,8]]},"168":{"position":[[13,8]]},"676":{"position":[[14,8]]},"704":{"position":[[14,8]]},"752":{"position":[[14,8]]},"773":{"position":[[14,8]]},"786":{"position":[[27092,8]]},"796":{"position":[[14,8]]},"809":{"position":[[27124,8]]}}}],["explicit",{"_index":1684,"t":{"425":{"position":[[506,8],[1376,8]]}}}],["explicitli",{"_index":1685,"t":{"425":{"position":[[741,10]]},"491":{"position":[[1236,10]]},"813":{"position":[[154,10]]}}}],["explor",{"_index":156,"t":{"16":{"position":[[419,7]]},"296":{"position":[[1456,7]]},"728":{"position":[[13,8]]},"773":{"position":[[175,9]]},"794":{"position":[[133,7]]}}}],["export",{"_index":991,"t":{"144":{"position":[[846,6],[920,6],[1003,6],[1085,6],[1180,6],[2295,6],[2364,6],[2444,6],[2528,6],[2610,6],[2705,6]]},"158":{"position":[[211,8]]}}}],["expos",{"_index":1018,"t":{"146":{"position":[[340,7]]},"152":{"position":[[598,8]]},"156":{"position":[[66,7],[119,7]]}}}],["express",{"_index":120,"t":{"12":{"position":[[13,10]]},"347":{"position":[[1246,7],[1289,7]]},"399":{"position":[[2068,11],[2200,11],[4724,11]]},"401":{"position":[[447,11],[620,11]]},"403":{"position":[[1537,7],[2474,7],[7003,7],[8169,7],[8627,7],[9057,7]]},"423":{"position":[[653,11]]},"485":{"position":[[5526,11]]},"688":{"position":[[214,7]]},"694":{"position":[[567,7]]},"716":{"position":[[516,7],[830,7]]},"792":{"position":[[14147,7]]},"813":{"position":[[13580,7]]}}}],["extend",{"_index":2121,"t":{"664":{"position":[[281,9]]},"668":{"position":[[0,6]]},"738":{"position":[[310,6]]},"742":{"position":[[0,6]]},"748":{"position":[[191,6]]}}}],["extern",{"_index":1687,"t":{"425":{"position":[[1507,8]]}}}],["eyjwayi6ikxbvevtvf9ou0nptkzjr19hdxromhn0b3jliiwic2sioiixem1qbxf3mwzlzextcuoyn01mdtdqtjh0cwgifq",{"_index":1268,"t":{"259":{"position":[[1284,99],[1765,99],[2386,99]]},"261":{"position":[[2122,99],[2626,99],[3279,99]]}}}],["f0c0",{"_index":246,"t":{"16":{"position":[[4716,4]]}}}],["fabrikam",{"_index":1631,"t":{"405":{"position":[[1739,8],[1986,8]]}}}],["facil",{"_index":1210,"t":{"219":{"position":[[458,11]]}}}],["facilit",{"_index":1011,"t":{"146":{"position":[[15,11]]},"415":{"position":[[713,10]]}}}],["fact",{"_index":1237,"t":{"236":{"position":[[374,5]]},"377":{"position":[[383,5]]},"720":{"position":[[5429,4]]},"786":{"position":[[27079,5]]},"809":{"position":[[27105,5]]}}}],["fail",{"_index":292,"t":{"16":{"position":[[8575,5]]},"200":{"position":[[609,5]]},"236":{"position":[[209,5]]},"290":{"position":[[743,7]]},"377":{"position":[[219,5]]},"405":{"position":[[3903,5]]},"429":{"position":[[797,4]]},"670":{"position":[[180,5]]}}}],["failur",{"_index":1696,"t":{"425":{"position":[[3475,7]]}}}],["fairli",{"_index":1591,"t":{"403":{"position":[[1505,6]]}}}],["fake",{"_index":1627,"t":{"405":{"position":[[1328,4]]}}}],["fals",{"_index":444,"t":{"16":{"position":[[17713,5]]},"114":{"position":[[1773,5]]},"215":{"position":[[5181,6],[6106,5],[7197,5],[8358,5],[9548,5],[10289,5]]},"221":{"position":[[2240,5],[3325,5],[4480,5],[5664,5],[6387,5],[17672,5],[18763,5],[19924,5],[21114,5],[21855,5]]},"232":{"position":[[128,5],[983,5],[2073,5],[3233,5],[4422,5],[5160,5]]},"247":{"position":[[6002,5],[7082,5],[8232,5],[9411,5],[10119,5]]},"318":{"position":[[6683,5],[7773,5],[8933,5],[10122,5],[10860,5],[10882,6]]},"387":{"position":[[5346,5],[6271,5],[7369,5],[8537,5],[9734,5],[10496,5]]},"449":{"position":[[6258,5],[7352,5],[8516,5],[9709,5],[10459,5]]},"505":{"position":[[12364,5],[13454,5],[14614,5],[15803,5],[16541,5]]},"547":{"position":[[5843,5],[6922,5],[8071,5],[9249,5],[9954,5]]},"607":{"position":[[1197,7],[2051,5],[3141,5],[4301,5],[5490,5],[6228,5],[6866,7],[7723,5],[8816,5],[9979,5],[11171,5],[11918,5],[12627,7],[13482,5],[14573,5],[15734,5],[16924,5],[17665,5]]},"634":{"position":[[6322,5],[7415,5],[8578,5],[9770,5],[10517,5]]},"648":{"position":[[22746,5],[23835,5],[24994,5],[26182,5],[26917,5]]},"666":{"position":[[6183,5],[6499,5],[6753,5],[7210,5],[7812,5],[8095,5],[8409,5],[8661,5],[9116,5],[9712,5],[9999,5],[10315,5],[10569,5],[11026,5],[11628,5]]},"668":{"position":[[3055,5],[3369,5],[3621,5],[4076,5],[4672,5]]},"670":{"position":[[9780,5],[10304,5],[10704,5],[11297,5],[12143,5]]},"692":{"position":[[22699,5],[23788,5],[24947,5],[26135,5],[26870,5]]},"698":{"position":[[10172,5],[11265,5],[12428,5],[13620,5],[14367,5]]},"718":{"position":[[23736,5],[24840,5],[26014,5],[27217,5],[27997,5]]},"720":{"position":[[967,5],[2059,5],[3221,5],[4412,5],[5156,5]]},"722":{"position":[[42080,5],[43169,5],[44328,5],[45516,5],[46251,5]]},"740":{"position":[[16730,5],[17818,5],[18976,5],[20163,5],[20895,5]]},"742":{"position":[[5373,5],[6456,5],[7609,5],[8791,5],[9508,5]]},"744":{"position":[[15259,5],[16682,5],[18060,5],[19458,5],[20579,5]]},"767":{"position":[[31009,5],[32100,5],[33261,5],[34451,5],[35192,5]]},"769":{"position":[[8462,5],[9549,5],[10706,5],[11892,5],[12621,5],[13811,5],[14907,5],[16073,5],[17268,5],[18024,5]]},"786":{"position":[[22759,5],[23852,5],[25015,5],[26207,5],[26954,5]]},"809":{"position":[[22783,5],[23876,5],[25039,5],[26231,5],[26978,5]]},"815":{"position":[[15960,5],[17061,5],[18232,5],[19432,5],[20203,5],[26265,5],[27366,5],[28537,5],[29737,5],[30508,5],[31371,5],[32472,5],[33643,5],[34843,5],[35614,5]]}}}],["familiar",{"_index":503,"t":{"52":{"position":[[979,8]]},"204":{"position":[[56,8]]},"221":{"position":[[56,8]]},"238":{"position":[[56,8]]},"279":{"position":[[56,8]]},"306":{"position":[[46,8]]},"328":{"position":[[47,8]]},"355":{"position":[[46,8]]},"379":{"position":[[56,8]]},"397":{"position":[[325,8]]},"437":{"position":[[56,8]]},"455":{"position":[[56,8]]},"477":{"position":[[56,8]]},"493":{"position":[[56,8]]},"511":{"position":[[56,8]]},"531":{"position":[[56,8]]},"553":{"position":[[56,8]]},"593":{"position":[[47,8]]},"613":{"position":[[46,8]]},"640":{"position":[[27,8]]},"656":{"position":[[36,8]]},"658":{"position":[[587,8]]},"678":{"position":[[56,8]]},"706":{"position":[[56,8]]},"730":{"position":[[36,8]]},"732":{"position":[[589,8]]},"754":{"position":[[56,8]]},"775":{"position":[[56,8]]},"792":{"position":[[872,8]]},"798":{"position":[[56,8]]}}}],["far",{"_index":1610,"t":{"403":{"position":[[5736,4]]},"666":{"position":[[11647,4]]},"720":{"position":[[5318,4]]},"722":{"position":[[3,4]]},"740":{"position":[[20914,4]]},"767":{"position":[[24074,3]]},"769":{"position":[[12630,3],[12767,4],[21372,3],[35408,4]]}}}],["fastifi",{"_index":677,"t":{"88":{"position":[[82,7]]},"94":{"position":[[104,7],[179,7],[234,7],[294,7],[306,7],[375,7],[383,7],[398,7],[431,7],[439,7],[454,7],[599,7]]},"96":{"position":[[117,7],[319,9],[882,9],[1161,7]]},"98":{"position":[[290,9],[1010,9],[1711,9],[2024,7]]}}}],["fastify.authent",{"_index":750,"t":{"96":{"position":[[949,23]]},"98":{"position":[[1778,22]]}}}],["fastify.author",{"_index":802,"t":{"98":{"position":[[1823,19]]}}}],["fastify.decorate('authent",{"_index":742,"t":{"96":{"position":[[583,32]]}}}],["fastify.decorate('author",{"_index":799,"t":{"98":{"position":[[1028,29]]}}}],["fastify.decorate('preauthor",{"_index":792,"t":{"98":{"position":[[308,32]]}}}],["fastify.get",{"_index":748,"t":{"96":{"position":[[900,12]]},"98":{"position":[[1729,12]]}}}],["fastify.get('/read/:docu",{"_index":702,"t":{"94":{"position":[[668,30]]}}}],["fastify.listen(3000",{"_index":704,"t":{"94":{"position":[[831,21]]},"96":{"position":[[1432,21]]},"98":{"position":[[2427,21]]}}}],["fastify.log.error(err",{"_index":706,"t":{"94":{"position":[[869,23]]},"96":{"position":[[1470,23]]},"98":{"position":[[2465,23]]}}}],["fastify.preauthor",{"_index":801,"t":{"98":{"position":[[1801,21]]}}}],["fastify.register(author",{"_index":806,"t":{"98":{"position":[[2329,28]]}}}],["fastify.register(jwt",{"_index":758,"t":{"96":{"position":[[1308,20]]},"98":{"position":[[2261,20]]}}}],["fastify.register(preauthor",{"_index":805,"t":{"98":{"position":[[2297,31]]}}}],["fastify.register(require('fastifi",{"_index":732,"t":{"96":{"position":[[337,33]]}}}],["fastify.register(routeread",{"_index":759,"t":{"96":{"position":[[1344,28]]},"98":{"position":[[2358,28]]}}}],["featur",{"_index":1045,"t":{"152":{"position":[[50,8],[793,8],[917,8],[980,7],[1151,7]]},"304":{"position":[[552,8]]},"395":{"position":[[413,7]]},"397":{"position":[[2,8],[149,7],[210,8],[379,7],[524,7],[643,8],[1067,7],[1294,7],[2670,7]]},"399":{"position":[[1710,7],[3552,7]]},"401":{"position":[[2042,7]]},"403":{"position":[[471,8],[1028,9],[2390,7],[3009,8]]},"405":{"position":[[81,7]]},"407":{"position":[[327,7]]},"453":{"position":[[955,8]]},"609":{"position":[[128,7],[455,7]]},"628":{"position":[[58,7],[117,7],[362,10],[987,7],[1097,8],[1146,8],[1500,8],[1552,7],[1615,7],[1668,8],[1801,7],[1894,8],[1956,8],[2031,7]]},"630":{"position":[[950,7],[2209,7],[3747,7],[5079,7],[6047,7]]},"634":{"position":[[807,7],[1866,7],[3250,7],[4432,7],[5176,7]]},"754":{"position":[[611,9],[878,7],[1009,8]]},"758":{"position":[[31,8],[317,7],[593,7]]},"760":{"position":[[175,9],[225,8],[301,8]]},"765":{"position":[[324,9],[427,7],[644,7],[876,10]]},"767":{"position":[[153,8],[921,7],[1060,7],[1212,7],[1360,7],[1524,7],[1691,7],[2754,7],[2949,7],[3157,7],[3361,7],[3581,7],[3804,7],[5192,7],[5341,7],[5503,7],[5661,7],[5835,7],[6012,7],[7198,7],[7343,7],[7501,7],[7655,7],[7825,7],[7998,7],[9136,7],[9279,7],[9435,7],[9587,7],[9755,7],[9926,7]]},"769":{"position":[[5490,7],[5539,7],[5620,10],[5949,7],[6603,7],[6850,10],[18943,8],[18989,7],[19105,10],[19549,7],[19910,7],[20369,7],[20597,7],[21175,8],[21540,7],[21829,10],[28297,8],[28676,7],[29021,10],[30038,7],[35665,7],[35953,7],[36076,10],[36527,7],[36640,10],[37631,7],[37966,10]]},"809":{"position":[[42,8]]},"815":{"position":[[19,7],[367,8]]}}}],["feature'",{"_index":2603,"t":{"769":{"position":[[19708,9]]}}}],["feature2",{"_index":1047,"t":{"152":{"position":[[230,9],[371,9]]}}}],["feature:data_preview",{"_index":2028,"t":{"630":{"position":[[1020,23],[3826,22]]},"632":{"position":[[908,23],[1901,23],[3102,22],[5017,23],[5060,22],[5185,20]]},"634":{"position":[[62,21],[877,23],[3329,22],[5389,20],[6278,23],[7272,23],[8474,22],[10392,23],[10435,22]]}}}],["feature:draft_pr",{"_index":2525,"t":{"767":{"position":[[1278,21],[1596,21],[5578,19],[5916,19]]},"769":{"position":[[44561,17],[44605,17],[44787,17],[44831,17],[45023,17],[45070,17]]}}}],["feature:i",{"_index":2604,"t":{"769":{"position":[[20054,11],[20275,11],[20660,11],[35781,11]]}}}],["feature:issu",{"_index":2523,"t":{"767":{"position":[[987,18],[1126,18],[1432,18],[5267,16],[5416,16],[5742,16],[41070,17],[42066,17],[43270,16],[45203,17],[45240,16]]},"769":{"position":[[103,15],[258,14],[1089,17],[2081,17],[3281,16],[5193,17],[5230,16],[7586,14],[8424,17],[9412,17],[10608,16],[12508,17],[12545,16],[12817,15],[12891,14],[13773,17],[14770,17],[15975,16],[17911,17],[17948,16],[22674,14],[23521,17],[24517,17],[25721,16],[27654,17],[27691,16],[27918,15],[28065,15],[28145,14],[28209,14],[30344,14],[31175,17],[32162,17],[33357,16],[35254,17],[35291,16],[37090,14],[37149,14],[37498,16],[40162,17],[41149,17],[42344,16],[44241,17],[44278,16],[44485,14],[44526,14],[44711,14],[44752,14],[44941,14],[44985,14]]}}}],["feature:sso",{"_index":2527,"t":{"767":{"position":[[1763,14],[6093,13]]},"769":{"position":[[44642,11],[44680,11],[44869,11],[44907,11],[45111,11],[45152,11]]}}}],["februari",{"_index":1717,"t":{"431":{"position":[[3,8]]}}}],["fed",{"_index":2588,"t":{"767":{"position":[[30055,3]]}}}],["feed",{"_index":2162,"t":{"688":{"position":[[269,4]]},"716":{"position":[[571,4]]}}}],["feel",{"_index":1509,"t":{"391":{"position":[[79,4]]},"792":{"position":[[866,5]]}}}],["few",{"_index":1332,"t":{"275":{"position":[[215,3]]},"399":{"position":[[4346,3]]},"403":{"position":[[7419,3]]},"760":{"position":[[72,3]]},"767":{"position":[[30099,3]]}}}],["fga",{"_index":16,"t":{"4":{"position":[[128,3]]},"8":{"position":[[120,3]]},"16":{"position":[[339,3],[442,3],[3200,3]]},"86":{"position":[[431,4],[1703,4],[2203,4],[2469,4]]},"724":{"position":[[700,5]]}}}],["fga'",{"_index":649,"t":{"80":{"position":[[7444,5]]}}}],["fga_api_host",{"_index":624,"t":{"78":{"position":[[126,12],[275,12],[412,12],[561,12],[698,12],[847,12],[984,12],[1133,12],[1270,12],[1374,12]]},"90":{"position":[[109,12],[319,12],[473,12],[683,12]]},"108":{"position":[[126,12],[312,12],[449,12],[635,12],[772,12],[958,12],[1095,12],[1281,12],[1418,12],[1576,12]]},"120":{"position":[[126,12],[312,12],[449,12],[635,12],[772,12],[958,12],[1095,12],[1281,12],[1418,12],[1576,12]]},"150":{"position":[[374,13]]},"186":{"position":[[126,12],[276,12],[413,12],[563,12],[700,12],[850,12],[987,12],[1137,12],[1274,12],[1396,12]]},"253":{"position":[[126,12],[311,12],[448,12],[633,12],[770,12],[920,12],[1057,12],[1207,12],[1344,12],[1501,12]]}}}],["fga_api_host/healthz",{"_index":1038,"t":{"150":{"position":[[251,21]]}}}],["fga_api_host/stor",{"_index":675,"t":{"86":{"position":[[2395,20]]}}}],["fga_api_token",{"_index":625,"t":{"78":{"position":[[155,14],[441,14],[727,14],[1013,14],[1299,14]]},"90":{"position":[[138,14],[502,14]]},"108":{"position":[[155,14],[478,14],[801,14],[1124,14],[1447,14]]},"120":{"position":[[155,14],[478,14],[801,14],[1124,14],[1447,14]]},"186":{"position":[[155,14],[442,14],[729,14],[1016,14],[1303,14]]},"253":{"position":[[155,14],[477,14],[799,14],[1086,14],[1373,14]]}}}],["fga_api_url",{"_index":425,"t":{"16":{"position":[[16585,11],[16622,11],[22197,11],[22234,11],[27941,11],[27978,11]]},"80":{"position":[[6544,11],[6581,11]]},"112":{"position":[[2762,11]]},"124":{"position":[[2762,11]]},"190":{"position":[[2762,11]]},"213":{"position":[[4376,11],[4413,11]]},"215":{"position":[[4417,11],[4454,11],[9590,11],[9627,11]]},"221":{"position":[[5706,11],[5743,11],[10901,11],[10938,11],[16125,11],[16162,11],[21156,11],[21193,11]]},"230":{"position":[[4635,11],[4672,11]]},"232":{"position":[[4464,11],[4501,11]]},"245":{"position":[[4677,11],[4714,11]]},"247":{"position":[[4378,11],[4415,11],[9453,11],[9490,11]]},"257":{"position":[[2738,11]]},"288":{"position":[[4447,11],[4484,11],[9356,11],[9393,11],[15407,11],[15444,11]]},"312":{"position":[[4560,11],[4597,11],[9586,11],[9623,11]]},"318":{"position":[[4879,11],[4916,11],[10164,11],[10201,11],[15398,11],[15435,11]]},"338":{"position":[[4622,11],[4659,11]]},"345":{"position":[[5526,11],[5563,11]]},"369":{"position":[[5238,11],[5275,11],[10486,11],[10523,11]]},"371":{"position":[[5580,11],[5617,11]]},"373":{"position":[[4398,11],[4435,11]]},"385":{"position":[[4486,11],[4523,11]]},"387":{"position":[[4522,11],[4559,11],[9776,11],[9813,11]]},"445":{"position":[[4572,11],[4609,11],[9619,11],[9656,11]]},"449":{"position":[[4536,11],[4573,11],[9751,11],[9788,11]]},"467":{"position":[[4405,11],[4442,11]]},"469":{"position":[[4726,11],[4763,11]]},"471":{"position":[[4595,11],[4632,11]]},"485":{"position":[[4798,11],[4835,11]]},"487":{"position":[[4711,11],[4748,11]]},"505":{"position":[[5258,11],[5295,11],[10430,11],[10467,11],[15845,11],[15882,11],[20959,11],[20996,11],[25999,11],[26036,11]]},"521":{"position":[[4422,11],[4459,11]]},"523":{"position":[[5062,11],[5099,11]]},"525":{"position":[[4663,11],[4700,11]]},"537":{"position":[[4778,11],[4815,11]]},"541":{"position":[[4769,11],[4806,11]]},"543":{"position":[[4515,11],[4552,11]]},"545":{"position":[[4352,11],[4389,11],[9298,11],[9335,11]]},"547":{"position":[[4367,11],[4404,11],[9291,11],[9328,11]]},"562":{"position":[[4551,11],[4588,11]]},"569":{"position":[[4999,11],[5036,11],[10474,11],[10511,11],[15930,11],[15967,11]]},"571":{"position":[[4730,11],[4767,11]]},"576":{"position":[[4703,11],[4740,11],[10037,11],[10074,11]]},"583":{"position":[[4986,11],[5023,11]]},"605":{"position":[[5683,11],[5720,11],[11276,11],[11313,11],[17530,11],[17567,11],[23773,11],[23810,11],[29434,11],[29471,11]]},"607":{"position":[[5532,11],[5569,11],[11213,11],[11250,11],[16966,11],[17003,11],[22708,11],[22745,11]]},"622":{"position":[[5114,11],[5151,11]]},"624":{"position":[[4541,11],[4578,11]]},"630":{"position":[[5307,11],[5344,11]]},"632":{"position":[[4438,11],[4475,11]]},"634":{"position":[[4660,11],[4697,11],[9812,11],[9849,11],[14874,11],[14911,11]]},"644":{"position":[[5196,11],[5233,11],[10229,11],[10266,11]]},"646":{"position":[[4669,11],[4706,11],[9709,11],[9746,11]]},"648":{"position":[[4785,11],[4822,11],[10477,11],[10514,11],[15930,11],[15967,11],[21150,11],[21187,11],[26224,11],[26261,11]]},"668":{"position":[[9357,11],[9394,11]]},"670":{"position":[[5802,11],[5839,11]]},"692":{"position":[[4817,11],[4854,11],[9789,11],[9826,11],[15495,11],[15532,11],[21067,11],[21104,11],[26177,11],[26214,11]]},"694":{"position":[[8254,11],[8291,11],[13690,11],[13727,11]]},"696":{"position":[[7563,11],[7600,11],[14182,11],[14219,11],[19933,11],[19970,11]]},"698":{"position":[[8079,11],[8116,11],[13662,11],[13699,11]]},"718":{"position":[[6609,11],[6646,11],[11692,11],[11729,11],[17035,11],[17072,11],[22075,11],[22112,11],[27259,11],[27296,11],[34138,11],[34175,11],[39645,11],[39682,11]]},"720":{"position":[[4454,11],[4491,11],[11150,11],[11187,11]]},"722":{"position":[[12221,11],[12258,11],[18286,11],[18323,11],[24272,11],[24309,11],[29958,11],[29995,11],[35310,11],[35347,11],[40407,11],[40444,11],[45558,11],[45595,11],[50710,11],[50747,11]]},"734":{"position":[[9203,11],[9240,11]]},"740":{"position":[[4734,11],[4771,11],[9861,11],[9898,11],[15229,11],[15266,11],[20205,11],[20242,11]]},"742":{"position":[[8833,11],[8870,11],[15937,11],[15974,11],[22425,11],[22462,11],[27743,11],[27780,11]]},"744":{"position":[[6419,11],[6456,11],[13040,11],[13077,11],[19500,11],[19537,11]]},"746":{"position":[[15531,11],[15568,11]]},"767":{"position":[[8219,11],[8256,11],[16119,11],[16156,11],[23020,11],[23057,11],[29310,11],[29347,11],[34493,11],[34530,11],[39541,11],[39578,11],[44603,11],[44640,11]]},"769":{"position":[[4615,11],[4652,11],[11934,11],[11971,11],[17310,11],[17347,11],[27054,11],[27091,11],[34681,11],[34718,11],[43668,11],[43705,11]]},"786":{"position":[[6139,11],[6176,11],[11145,11],[11182,11],[16238,11],[16275,11],[21201,11],[21238,11],[26249,11],[26286,11],[33396,11],[33433,11],[38440,11],[38477,11]]},"788":{"position":[[7645,11],[7682,11],[13148,11],[13185,11]]},"790":{"position":[[4705,11],[4742,11],[10356,11],[10393,11],[15343,11],[15380,11]]},"792":{"position":[[7661,11],[7698,11],[13338,11],[13375,11],[19947,11],[19984,11]]},"809":{"position":[[6148,11],[6185,11],[11175,11],[11212,11],[16271,11],[16308,11],[21228,11],[21265,11],[26273,11],[26310,11],[32904,11],[32941,11],[37945,11],[37982,11]]},"811":{"position":[[7912,11],[7949,11],[13623,11],[13660,11]]},"813":{"position":[[7115,11],[7152,11],[12765,11],[12802,11]]},"815":{"position":[[8751,11],[8788,11],[14297,11],[14334,11],[19474,11],[19511,11],[24588,11],[24625,11],[29779,11],[29816,11],[34885,11],[34922,11]]}}}],["fga_api_url/stores/$fga_store_id/author",{"_index":644,"t":{"80":{"position":[[6645,47]]}}}],["fga_api_url/stores/$fga_store_id/chang",{"_index":1261,"t":{"259":{"position":[[592,41],[2175,41]]},"261":{"position":[[1619,41],[3051,41]]}}}],["fga_api_url/stores/$fga_store_id/check",{"_index":428,"t":{"16":{"position":[[16686,39],[22298,39]]},"114":{"position":[[1348,39]]},"215":{"position":[[4518,39],[9691,39]]},"221":{"position":[[5807,39],[16226,39],[21257,39]]},"232":{"position":[[4565,39]]},"245":{"position":[[4778,39]]},"247":{"position":[[9554,39]]},"312":{"position":[[4661,39],[9687,39]]},"318":{"position":[[10265,39],[15499,39]]},"338":{"position":[[4723,39]]},"345":{"position":[[5627,39]]},"369":{"position":[[10587,39]]},"373":{"position":[[4499,39]]},"387":{"position":[[4623,39],[9877,39]]},"445":{"position":[[4673,39],[9720,39]]},"449":{"position":[[4637,39],[9852,39]]},"471":{"position":[[4696,39]]},"487":{"position":[[4812,39]]},"505":{"position":[[10531,39],[15946,39],[21060,39],[26100,39]]},"525":{"position":[[4764,39]]},"545":{"position":[[4453,39],[9399,39]]},"547":{"position":[[9392,39]]},"562":{"position":[[4652,39]]},"605":{"position":[[5784,39],[11377,39],[17631,39],[23874,39],[29535,39]]},"607":{"position":[[5633,39],[11314,39],[17067,39],[22809,39]]},"624":{"position":[[4642,39]]},"632":{"position":[[4539,39]]},"634":{"position":[[9913,39],[14975,39]]},"644":{"position":[[5297,39],[10330,39]]},"646":{"position":[[9810,39]]},"648":{"position":[[21251,39],[26325,39]]},"666":{"position":[[1513,39],[3412,39],[5321,39],[7229,39],[9135,39],[11045,39]]},"668":{"position":[[4095,39],[11344,39]]},"670":{"position":[[8487,39],[11316,39]]},"692":{"position":[[21168,39],[26278,39]]},"694":{"position":[[13791,39]]},"696":{"position":[[20034,39]]},"698":{"position":[[13763,39]]},"718":{"position":[[11793,39],[22176,39],[27360,39],[39746,39]]},"720":{"position":[[4555,39],[11251,39]]},"722":{"position":[[45659,39],[50811,39]]},"740":{"position":[[4835,39],[9962,39],[20306,39]]},"742":{"position":[[8934,39],[27844,39]]},"744":{"position":[[13141,39],[19601,39]]},"767":{"position":[[29411,39],[34594,39],[39642,39],[44704,39]]},"769":{"position":[[4716,39],[12035,39],[17411,39],[27155,39],[34782,39],[43769,39]]},"786":{"position":[[11246,39],[21302,39],[26350,39],[33497,39],[38541,39]]},"788":{"position":[[13249,39]]},"790":{"position":[[15444,39]]},"792":{"position":[[13439,39]]},"809":{"position":[[11276,39],[21329,39],[26374,39],[33005,39],[38046,39]]},"811":{"position":[[13724,39]]},"813":{"position":[[12866,39]]},"815":{"position":[[14398,39],[19575,39],[24689,39],[29880,39],[34986,39]]}}}],["fga_api_url/stores/$fga_store_id/expand",{"_index":1931,"t":{"576":{"position":[[4804,40],[10138,40]]}}}],["fga_api_url/stores/$fga_store_id/list",{"_index":464,"t":{"16":{"position":[[28042,38]]},"126":{"position":[[1355,38]]},"583":{"position":[[5087,38]]}}}],["fga_api_url/stores/$fga_store_id/read",{"_index":1904,"t":{"569":{"position":[[5100,38],[10575,38],[16031,38]]},"571":{"position":[[4831,38]]},"648":{"position":[[4886,38]]}}}],["fga_api_url/stores/$fga_store_id/writ",{"_index":1165,"t":{"192":{"position":[[1315,39]]},"194":{"position":[[1475,39]]},"213":{"position":[[4477,39]]},"221":{"position":[[11002,39]]},"230":{"position":[[4736,39]]},"247":{"position":[[4479,39]]},"288":{"position":[[4548,39],[9457,39],[15508,39]]},"318":{"position":[[4980,39]]},"369":{"position":[[5339,39]]},"371":{"position":[[5681,39]]},"385":{"position":[[4587,39]]},"429":{"position":[[3165,39]]},"467":{"position":[[4506,39]]},"469":{"position":[[4827,39]]},"485":{"position":[[4899,39]]},"505":{"position":[[5359,39]]},"521":{"position":[[4523,39]]},"523":{"position":[[5163,39]]},"537":{"position":[[4879,39]]},"541":{"position":[[4870,39]]},"543":{"position":[[4616,39]]},"547":{"position":[[4468,39]]},"622":{"position":[[5215,39]]},"630":{"position":[[5408,39]]},"634":{"position":[[4761,39]]},"646":{"position":[[4770,39]]},"648":{"position":[[10578,39],[16031,39]]},"660":{"position":[[8086,39]]},"668":{"position":[[9458,39]]},"670":{"position":[[5903,39]]},"672":{"position":[[7625,39]]},"692":{"position":[[4918,39],[9890,39],[15596,39]]},"694":{"position":[[8355,39]]},"696":{"position":[[7664,39],[14283,39]]},"698":{"position":[[8180,39]]},"718":{"position":[[6710,39],[17136,39],[34239,39]]},"722":{"position":[[12322,39],[18387,39],[24373,39],[30059,39],[35411,39],[40508,39]]},"734":{"position":[[9304,39]]},"740":{"position":[[15330,39]]},"742":{"position":[[16038,39],[22526,39]]},"744":{"position":[[6520,39]]},"746":{"position":[[15632,39]]},"767":{"position":[[8320,39],[16220,39],[23121,39]]},"786":{"position":[[6240,39],[16339,39]]},"788":{"position":[[7746,39]]},"790":{"position":[[4806,39],[10457,39]]},"792":{"position":[[7762,39],[20048,39]]},"809":{"position":[[6249,39],[16372,39]]},"811":{"position":[[8013,39]]},"813":{"position":[[7216,39]]},"815":{"position":[[8852,39]]}}}],["fga_bearer_token",{"_index":430,"t":{"16":{"position":[[16754,18],[22366,18],[28117,18]]},"80":{"position":[[6728,18]]},"114":{"position":[[1416,18]]},"126":{"position":[[1430,18]]},"172":{"position":[[223,17]]},"192":{"position":[[1383,18]]},"194":{"position":[[1543,18]]},"213":{"position":[[4545,18]]},"215":{"position":[[4586,18],[9759,18]]},"221":{"position":[[5875,18],[11070,18],[16294,18],[21325,18]]},"230":{"position":[[4804,18]]},"232":{"position":[[4633,18]]},"245":{"position":[[4846,18]]},"247":{"position":[[4547,18],[9622,18]]},"259":{"position":[[662,18],[2245,18]]},"261":{"position":[[1689,18],[3121,18]]},"288":{"position":[[4616,18],[9525,18],[15576,18]]},"312":{"position":[[4729,18],[9755,18]]},"318":{"position":[[5048,18],[10333,18],[15567,18]]},"338":{"position":[[4791,18]]},"345":{"position":[[5695,18]]},"369":{"position":[[5407,18],[10655,18]]},"371":{"position":[[5749,18]]},"373":{"position":[[4567,18]]},"385":{"position":[[4655,18]]},"387":{"position":[[4691,18],[9945,18]]},"429":{"position":[[3233,18]]},"445":{"position":[[4741,18],[9788,18]]},"449":{"position":[[4705,18],[9920,18]]},"467":{"position":[[4574,18]]},"469":{"position":[[4895,18]]},"471":{"position":[[4764,18]]},"485":{"position":[[4967,18]]},"487":{"position":[[4880,18]]},"505":{"position":[[5427,18],[10599,18],[16014,18],[21128,18],[26168,18]]},"521":{"position":[[4591,18]]},"523":{"position":[[5231,18]]},"525":{"position":[[4832,18]]},"537":{"position":[[4947,18]]},"541":{"position":[[4938,18]]},"543":{"position":[[4684,18]]},"545":{"position":[[4521,18],[9467,18]]},"547":{"position":[[4536,18],[9460,18]]},"562":{"position":[[4720,18]]},"569":{"position":[[5167,18],[10642,18],[16098,18]]},"571":{"position":[[4898,18]]},"576":{"position":[[4873,18],[10207,18]]},"583":{"position":[[5162,18]]},"605":{"position":[[5852,18],[11445,18],[17699,18],[23942,18],[29603,18]]},"607":{"position":[[5701,18],[11382,18],[17135,18],[22877,18]]},"622":{"position":[[5283,18]]},"624":{"position":[[4710,18]]},"630":{"position":[[5476,18]]},"632":{"position":[[4607,18]]},"634":{"position":[[4829,18],[9981,18],[15043,18]]},"644":{"position":[[5365,18],[10398,18]]},"646":{"position":[[4838,18],[9878,18]]},"648":{"position":[[4953,18],[10646,18],[16099,18],[21319,18],[26393,18]]},"660":{"position":[[8154,18]]},"666":{"position":[[1581,18],[3480,18],[5389,18],[7297,18],[9203,18],[11113,18]]},"668":{"position":[[4163,18],[9526,18],[11412,18]]},"670":{"position":[[5971,18],[8555,18],[11384,18]]},"672":{"position":[[7693,18]]},"692":{"position":[[4986,18],[9958,18],[15664,18],[21236,18],[26346,18]]},"694":{"position":[[8423,18],[13859,18]]},"696":{"position":[[7732,18],[14351,18],[20102,18]]},"698":{"position":[[8248,18],[13831,18]]},"718":{"position":[[6778,18],[11861,18],[17204,18],[22244,18],[27428,18],[34307,18],[39814,18]]},"720":{"position":[[4623,18],[11319,18]]},"722":{"position":[[12390,18],[18455,18],[24441,18],[30127,18],[35479,18],[40576,18],[45727,18],[50879,18]]},"734":{"position":[[9372,18]]},"740":{"position":[[4903,18],[10030,18],[15398,18],[20374,18]]},"742":{"position":[[9002,18],[16106,18],[22594,18],[27912,18]]},"744":{"position":[[6588,18],[13209,18],[19669,18]]},"746":{"position":[[15700,18]]},"767":{"position":[[8388,18],[16288,18],[23189,18],[29479,18],[34662,18],[39710,18],[44772,18]]},"769":{"position":[[4784,18],[12103,18],[17479,18],[27223,18],[34850,18],[43837,18]]},"786":{"position":[[6308,18],[11314,18],[16407,18],[21370,18],[26418,18],[33565,18],[38609,18]]},"788":{"position":[[7814,18],[13317,18]]},"790":{"position":[[4874,18],[10525,18],[15512,18]]},"792":{"position":[[7830,18],[13507,18],[20116,18]]},"809":{"position":[[6317,18],[11344,18],[16440,18],[21397,18],[26442,18],[33073,18],[38114,18]]},"811":{"position":[[8081,18],[13792,18]]},"813":{"position":[[7284,18],[12934,18]]},"815":{"position":[[8920,18],[14466,18],[19643,18],[24757,18],[29948,18],[35054,18]]}}}],["fga_client_inst",{"_index":409,"t":{"16":{"position":[[16002,19],[21614,19],[27402,19]]},"80":{"position":[[5707,19]]},"86":{"position":[[2037,19]]},"112":{"position":[[2646,19]]},"124":{"position":[[2646,19]]},"170":{"position":[[1897,19]]},"172":{"position":[[3454,19]]},"190":{"position":[[2646,19]]},"213":{"position":[[3845,19]]},"215":{"position":[[3837,19],[9008,19]]},"221":{"position":[[5130,19],[10334,19],[15545,19],[20574,19]]},"230":{"position":[[4105,19]]},"232":{"position":[[3883,19]]},"245":{"position":[[4107,19]]},"247":{"position":[[3852,19],[8882,19]]},"257":{"position":[[2622,19]]},"288":{"position":[[3925,19],[8833,19],[14686,19]]},"312":{"position":[[3979,19],[9006,19]]},"318":{"position":[[4290,19],[9583,19],[14817,19]]},"338":{"position":[[4034,19]]},"345":{"position":[[4948,19]]},"369":{"position":[[4537,19],[9903,19]]},"371":{"position":[[4769,19]]},"373":{"position":[[3815,19]]},"385":{"position":[[3943,19]]},"387":{"position":[[3934,19],[9187,19]]},"445":{"position":[[3988,19],[9036,19]]},"449":{"position":[[3951,19],[9166,19]]},"467":{"position":[[3876,19]]},"469":{"position":[[4118,19]]},"471":{"position":[[4007,19]]},"485":{"position":[[4218,19]]},"487":{"position":[[4127,19]]},"505":{"position":[[4587,19],[9849,19],[15264,19],[20376,19],[25417,19]]},"521":{"position":[[3891,19]]},"523":{"position":[[4455,19]]},"525":{"position":[[4073,19]]},"537":{"position":[[4189,19]]},"541":{"position":[[4184,19]]},"543":{"position":[[3985,19]]},"545":{"position":[[3783,19],[8729,19]]},"547":{"position":[[3845,19],[8721,19]]},"562":{"position":[[3972,19]]},"569":{"position":[[4383,19],[9877,19],[15323,19]]},"571":{"position":[[4232,19]]},"576":{"position":[[4142,19],[9476,19]]},"583":{"position":[[4318,19]]},"605":{"position":[[5103,19],[10696,19],[16947,19],[23193,19],[28853,19]]},"607":{"position":[[4951,19],[10629,19],[16384,19],[22126,19]]},"622":{"position":[[4468,19]]},"624":{"position":[[3950,19]]},"630":{"position":[[4556,19]]},"632":{"position":[[3855,19]]},"634":{"position":[[4059,19],[9228,19],[14287,19]]},"644":{"position":[[4614,19],[9648,19]]},"646":{"position":[[4088,19],[9124,19]]},"648":{"position":[[4125,19],[9863,19],[15315,19],[20568,19],[25644,19]]},"668":{"position":[[8759,19]]},"670":{"position":[[5176,19]]},"692":{"position":[[4280,19],[9248,19],[14797,19],[20485,19],[25597,19]]},"694":{"position":[[7496,19],[13105,19]]},"696":{"position":[[6931,19],[13341,19],[19354,19]]},"698":{"position":[[7378,19],[13078,19]]},"718":{"position":[[6014,19],[11104,19],[16440,19],[21487,19],[26664,19],[33281,19],[39057,19]]},"720":{"position":[[3871,19],[10568,19]]},"722":{"position":[[11446,19],[17622,19],[23557,19],[29327,19],[34743,19],[39857,19],[44978,19],[50115,19]]},"734":{"position":[[8129,19]]},"740":{"position":[[4156,19],[9279,19],[14633,19],[19626,19]]},"742":{"position":[[8259,19],[14961,19],[21700,19],[27165,19]]},"744":{"position":[[5639,19],[12251,19],[18710,19]]},"746":{"position":[[13153,19]]},"767":{"position":[[6814,19],[15192,19],[22163,19],[28729,19],[33911,19],[38956,19],[44017,19]]},"769":{"position":[[4033,19],[11356,19],[16723,19],[26468,19],[34104,19],[43091,19]]},"786":{"position":[[5601,19],[10562,19],[15700,19],[20618,19],[25665,19],[32813,19],[37857,19]]},"788":{"position":[[6873,19],[12563,19]]},"790":{"position":[[4143,19],[9763,19],[14760,19]]},"792":{"position":[[7032,19],[12751,19],[19387,19]]},"809":{"position":[[5607,19],[10589,19],[15734,19],[20646,19],[25689,19],[32322,19],[37362,19]]},"811":{"position":[[7035,19],[13037,19]]},"813":{"position":[[6373,19],[12176,19]]},"815":{"position":[[7830,19],[13707,19],[18882,19],[23994,19],[29187,19],[34293,19]]}}}],["fga_client_instance.check(bodi",{"_index":421,"t":{"16":{"position":[[16491,31],[22103,31]]},"114":{"position":[[1277,31]]},"215":{"position":[[4323,31],[9495,31]]},"221":{"position":[[5611,31],[16031,31],[21061,31]]},"232":{"position":[[4369,31]]},"245":{"position":[[4583,31]]},"247":{"position":[[9358,31]]},"312":{"position":[[4466,31],[9492,31]]},"318":{"position":[[10069,31],[15304,31]]},"338":{"position":[[4528,31]]},"345":{"position":[[5432,31]]},"369":{"position":[[10392,31]]},"373":{"position":[[4304,31]]},"387":{"position":[[4428,31],[9681,31]]},"445":{"position":[[4478,31],[9525,31]]},"449":{"position":[[4442,31],[9656,31]]},"471":{"position":[[4501,31]]},"487":{"position":[[4617,31]]},"505":{"position":[[10336,31],[15750,31],[20865,31],[25905,31]]},"525":{"position":[[4569,31]]},"545":{"position":[[4258,31],[9204,31]]},"547":{"position":[[9196,31]]},"562":{"position":[[4457,31]]},"605":{"position":[[5589,31],[11182,31],[17436,31],[23679,31],[29340,31]]},"607":{"position":[[5437,31],[11118,31],[16871,31],[22614,31]]},"624":{"position":[[4447,31]]},"632":{"position":[[4344,31]]},"634":{"position":[[9717,31],[14780,31]]},"644":{"position":[[5102,31],[10135,31]]},"646":{"position":[[9615,31]]},"648":{"position":[[21056,31],[26129,31]]},"666":{"position":[[1442,31],[3341,31],[5250,31],[7157,31],[9063,31],[10973,31]]},"668":{"position":[[4023,31],[11273,31]]},"670":{"position":[[8416,31],[11244,31]]},"692":{"position":[[20973,31],[26082,31]]},"694":{"position":[[13596,31]]},"696":{"position":[[19839,31]]},"698":{"position":[[13567,31]]},"718":{"position":[[11598,31],[21981,31],[27164,31],[39551,31]]},"720":{"position":[[4359,31],[11056,31]]},"722":{"position":[[45463,31],[50616,31]]},"740":{"position":[[4640,31],[9767,31],[20110,31]]},"742":{"position":[[8738,31],[27649,31]]},"744":{"position":[[12946,31],[19405,31]]},"767":{"position":[[29216,31],[34398,31],[39447,31],[44509,31]]},"769":{"position":[[4516,31],[11839,31],[17215,31],[26960,31],[34587,31],[43574,31]]},"786":{"position":[[11051,31],[21107,31],[26154,31],[33302,31],[38346,31]]},"788":{"position":[[13054,31]]},"790":{"position":[[15249,31]]},"792":{"position":[[13239,31]]},"809":{"position":[[11081,31],[21134,31],[26178,31],[32810,31],[37851,31]]},"811":{"position":[[13529,31]]},"813":{"position":[[12666,31]]},"815":{"position":[[14203,31],[19379,31],[24494,31],[29684,31],[34790,31]]}}}],["fga_client_instance.create_store(bodi",{"_index":669,"t":{"86":{"position":[[2238,38]]}}}],["fga_client_instance.expand(bodi",{"_index":1929,"t":{"576":{"position":[[4592,32],[9926,32]]}}}],["fga_client_instance.list_objects(bodi",{"_index":463,"t":{"16":{"position":[[27866,38]]},"126":{"position":[[1303,38]]},"583":{"position":[[4911,38]]}}}],["fga_client_instance.read(bodi",{"_index":1902,"t":{"569":{"position":[[4773,30],[10248,30],[15704,30]]},"571":{"position":[[4622,30]]},"648":{"position":[[4435,30]]}}}],["fga_client_instance.read_chang",{"_index":1259,"t":{"259":{"position":[[527,33],[1991,33]]},"261":{"position":[[1539,33],[2852,33]]}}}],["fga_client_instance.write(bodi",{"_index":1164,"t":{"192":{"position":[[1270,31]]},"194":{"position":[[1430,31]]},"213":{"position":[[4308,31]]},"221":{"position":[[10833,31]]},"230":{"position":[[4567,31]]},"247":{"position":[[4310,31]]},"288":{"position":[[4379,31],[9288,31],[15339,31]]},"318":{"position":[[4811,31]]},"369":{"position":[[5170,31]]},"371":{"position":[[5512,31]]},"385":{"position":[[4418,31]]},"429":{"position":[[3120,31]]},"467":{"position":[[4337,31]]},"469":{"position":[[4658,31]]},"485":{"position":[[4730,31]]},"505":{"position":[[5190,31]]},"521":{"position":[[4354,31]]},"523":{"position":[[4994,31]]},"537":{"position":[[4710,31]]},"541":{"position":[[4701,31]]},"543":{"position":[[4447,31]]},"547":{"position":[[4299,31]]},"622":{"position":[[5046,31]]},"630":{"position":[[5239,31]]},"634":{"position":[[4592,31]]},"646":{"position":[[4601,31]]},"648":{"position":[[10409,31],[15862,31]]},"660":{"position":[[8041,31]]},"668":{"position":[[9289,31]]},"670":{"position":[[5734,31]]},"672":{"position":[[7580,31]]},"692":{"position":[[4749,31],[9721,31],[15427,31]]},"694":{"position":[[8186,31]]},"696":{"position":[[7495,31],[14114,31]]},"698":{"position":[[8011,31]]},"718":{"position":[[6541,31],[16967,31],[34070,31]]},"722":{"position":[[12153,31],[18218,31],[24204,31],[29890,31],[35242,31],[40339,31]]},"734":{"position":[[9135,31]]},"740":{"position":[[15161,31]]},"742":{"position":[[15869,31],[22357,31]]},"744":{"position":[[6351,31]]},"746":{"position":[[15463,31]]},"767":{"position":[[8151,31],[16051,31],[22952,31]]},"786":{"position":[[6071,31],[16170,31]]},"788":{"position":[[7577,31]]},"790":{"position":[[4637,31],[10288,31]]},"792":{"position":[[7593,31],[19879,31]]},"809":{"position":[[6080,31],[16203,31]]},"811":{"position":[[7844,31]]},"813":{"position":[[7047,31]]},"815":{"position":[[8683,31]]}}}],["fga_client_instance.write_authorization_model(json.loads(bodi",{"_index":642,"t":{"80":{"position":[[6378,63]]}}}],["fga_store_id",{"_index":623,"t":{"78":{"position":[[112,13],[258,12],[398,13],[544,12],[684,13],[830,12],[970,13],[1116,12],[1256,13],[1357,12]]},"90":{"position":[[95,13],[336,12],[459,13],[700,12]]},"108":{"position":[[112,13],[295,12],[435,13],[618,12],[758,13],[941,12],[1081,13],[1264,12],[1404,13],[1559,12]]},"120":{"position":[[112,13],[295,12],[435,13],[618,12],[758,13],[941,12],[1081,13],[1264,12],[1404,13],[1559,12]]},"186":{"position":[[112,13],[259,12],[399,13],[546,12],[686,13],[833,12],[973,13],[1120,12],[1260,13],[1379,12]]},"253":{"position":[[112,13],[294,12],[434,13],[616,12],[756,13],[903,12],[1043,13],[1190,12],[1330,13],[1484,12]]}}}],["fgaclient",{"_index":338,"t":{"16":{"position":[[12536,9],[13824,9],[15053,9],[18148,9],[19436,9],[20665,9],[23920,9],[25213,9],[26443,9]]},"80":{"position":[[984,9],[2597,9],[4353,9]]},"86":{"position":[[1568,9]]},"98":{"position":[[1140,9],[4865,9]]},"112":{"position":[[257,9],[1231,9],[2045,9]]},"124":{"position":[[257,9],[1231,9],[2045,9]]},"170":{"position":[[1566,9]]},"172":{"position":[[2659,9]]},"190":{"position":[[257,9],[1231,9],[2045,9]]},"213":{"position":[[370,9],[1612,9],[2931,9]]},"215":{"position":[[380,9],[1665,9],[2891,9],[5545,9],[6832,9],[8060,9]]},"221":{"position":[[1685,9],[2966,9],[4188,9],[6748,9],[8027,9],[9383,9],[12088,9],[13373,9],[14599,9],[17111,9],[18398,9],[19626,9]]},"230":{"position":[[632,9],[1874,9],[3192,9]]},"232":{"position":[[423,9],[1709,9],[2936,9]]},"245":{"position":[[680,9],[1955,9],[3171,9]]},"247":{"position":[[391,9],[1629,9],[2943,9],[5452,9],[6728,9],[7945,9]]},"257":{"position":[[233,9],[1207,9],[2021,9]]},"288":{"position":[[477,9],[1710,9],[3020,9],[5381,9],[6616,9],[7927,9],[10559,9],[11978,9],[13565,9]]},"312":{"position":[[519,9],[1805,9],[3032,9],[5549,9],[6834,9],[8060,9]]},"318":{"position":[[638,9],[1939,9],[3317,9],[6123,9],[7409,9],[8636,9],[11357,9],[12643,9],[13870,9]]},"338":{"position":[[553,9],[1846,9],[3080,9]]},"345":{"position":[[1497,9],[2780,9],[4004,9]]},"369":{"position":[[501,9],[1908,9],[3448,9],[6437,9],[7725,9],[8954,9]]},"371":{"position":[[403,9],[1920,9],[3570,9]]},"373":{"position":[[349,9],[1637,9],[2866,9]]},"385":{"position":[[432,9],[1686,9],[3017,9]]},"387":{"position":[[453,9],[1746,9],[2980,9],[5703,9],[6997,9],[8232,9]]},"445":{"position":[[519,9],[1808,9],[3038,9],[5570,9],[6858,9],[8087,9]]},"449":{"position":[[479,9],[1769,9],[3000,9],[5694,9],[6984,9],[8215,9]]},"467":{"position":[[407,9],[1647,9],[2964,9]]},"469":{"position":[[409,9],[1729,9],[3126,9]]},"471":{"position":[[526,9],[1819,9],[3053,9]]},"485":{"position":[[593,9],[1885,9],[3254,9]]},"487":{"position":[[658,9],[1947,9],[3177,9]]},"505":{"position":[[641,9],[2018,9],[3528,9],[6389,9],[7675,9],[8902,9],[11804,9],[13090,9],[14317,9],[16910,9],[18198,9],[19427,9],[21954,9],[23241,9],[24469,9]]},"521":{"position":[[416,9],[1658,9],[2977,9]]},"523":{"position":[[749,9],[2068,9],[3464,9]]},"525":{"position":[[586,9],[1881,9],[3117,9]]},"537":{"position":[[495,9],[1788,9],[3214,9]]},"541":{"position":[[502,9],[1791,9],[3213,9]]},"543":{"position":[[513,9],[1754,9],[3072,9]]},"545":{"position":[[359,9],[1633,9],[2848,9],[5305,9],[6579,9],[7794,9]]},"547":{"position":[[396,9],[1630,9],[2940,9],[5294,9],[6569,9],[7785,9]]},"562":{"position":[[518,9],[1802,9],[3027,9]]},"569":{"position":[[768,9],[2102,9],[3417,9],[6340,9],[7655,9],[8932,9],[11756,9],[13081,9],[14368,9]]},"571":{"position":[[971,9],[2187,9],[3384,9]]},"576":{"position":[[509,9],[1832,9],[3151,9],[5843,9],[7166,9],[8485,9]]},"583":{"position":[[430,9],[1830,9],[3229,9]]},"605":{"position":[[1646,9],[2931,9],[4157,9],[7239,9],[8524,9],[9750,9],[13481,9],[14769,9],[15998,9],[19736,9],[21021,9],[22247,9],[25393,9],[26679,9],[27906,9]]},"607":{"position":[[1491,9],[2777,9],[4004,9],[7160,9],[8449,9],[9679,9],[12921,9],[14208,9],[15436,9],[18663,9],[19950,9],[21178,9]]},"622":{"position":[[645,9],[2003,9],[3438,9]]},"624":{"position":[[460,9],[1756,9],[2993,9]]},"630":{"position":[[370,9],[1827,9],[3417,9]]},"632":{"position":[[389,9],[1677,9],[2906,9]]},"634":{"position":[[370,9],[1684,9],[3074,9],[5759,9],[7048,9],[8278,9],[10809,9],[12101,9],[13334,9]]},"644":{"position":[[1151,9],[2438,9],[3666,9],[6188,9],[7474,9],[8701,9]]},"646":{"position":[[460,9],[1753,9],[3123,9],[5652,9],[6942,9],[8173,9]]},"648":{"position":[[435,9],[1820,9],[3115,9],[6094,9],[7412,9],[8863,9],[11542,9],[12862,9],[14314,9],[17105,9],[18392,9],[19620,9],[22187,9],[23472,9],[24698,9]]},"668":{"position":[[5080,9],[6390,9],[7777,9]]},"670":{"position":[[1412,9],[2751,9],[4166,9]]},"692":{"position":[[787,9],[2035,9],[3360,9],[5743,9],[6995,9],[8324,9],[10731,9],[12126,9],[13710,9],[17022,9],[18309,9],[19537,9],[22140,9],[23425,9],[24651,9]]},"694":{"position":[[3205,9],[4653,9],[6346,9],[9633,9],[10923,9],[12154,9]]},"696":{"position":[[3108,9],[4444,9],[5913,9],[8801,9],[10332,9],[12108,9],[15900,9],[17184,9],[18409,9]]},"698":{"position":[[3303,9],[4701,9],[6288,9],[9609,9],[10898,9],[12128,9]]},"718":{"position":[[2344,9],[3651,9],[5035,9],[7623,9],[8916,9],[10150,9],[12770,9],[14077,9],[15461,9],[18006,9],[19299,9],[20533,9],[23162,9],[24462,9],[25703,9],[28729,9],[30286,9],[32032,9],[35576,9],[36869,9],[38103,9]]},"720":{"position":[[405,9],[1693,9],[2922,9],[7105,9],[8392,9],[9620,9]]},"722":{"position":[[7149,9],[8621,9],[10282,9],[13745,9],[15121,9],[16574,9],[19482,9],[20902,9],[22455,9],[25507,9],[26842,9],[28310,9],[31160,9],[32438,9],[33793,9],[36325,9],[37586,9],[38924,9],[41521,9],[42806,9],[44032,9],[46613,9],[47913,9],[49154,9]]},"734":{"position":[[2878,9],[4646,9],[6659,9]]},"740":{"position":[[705,9],[1988,9],[3212,9],[5816,9],[7103,9],[8331,9],[10960,9],[12268,9],[13653,9],[16172,9],[17456,9],[18681,9]]},"742":{"position":[[4820,9],[6099,9],[7319,9],[10052,9],[11728,9],[13593,9],[17592,9],[19023,9],[20587,9],[23714,9],[24997,9],[26221,9]]},"744":{"position":[[1365,9],[2852,9],[4471,9],[8060,9],[9528,9],[11087,9],[14516,9],[15985,9],[17545,9]]},"746":{"position":[[3606,9],[6630,9],[10347,9]]},"767":{"position":[[474,9],[2561,9],[5005,9],[10430,9],[12057,9],[13873,9],[17611,9],[19168,9],[20914,9],[25269,9],[26555,9],[27782,9],[30448,9],[31735,9],[32963,9],[35484,9],[36774,9],[38005,9],[40542,9],[41833,9],[43065,9]]},"769":{"position":[[570,9],[1857,9],[3085,9],[7905,9],[9188,9],[10412,9],[13245,9],[14537,9],[15770,9],[22993,9],[24284,9],[25516,9],[30656,9],[31938,9],[33161,9],[39643,9],[40925,9],[42148,9]]},"786":{"position":[[2105,9],[3354,9],[4680,9],[7096,9],[8384,9],[9613,9],[12204,9],[13453,9],[14779,9],[17152,9],[18440,9],[19669,9],[22196,9],[23485,9],[24715,9],[29347,9],[30635,9],[31864,9],[34391,9],[35679,9],[36908,9]]},"788":{"position":[[2624,9],[4102,9],[5713,9],[9091,9],[10381,9],[11612,9]]},"790":{"position":[[575,9],[1848,9],[3198,9],[6099,9],[7404,9],[8786,9],[11294,9],[12582,9],[13811,9]]},"792":{"position":[[3218,9],[4551,9],[6017,9],[9273,9],[10565,9],[11798,9],[15825,9],[17096,9],[18444,9]]},"809":{"position":[[2102,9],[3354,9],[4683,9],[7114,9],[8405,9],[9637,9],[12241,9],[13489,9],[14814,9],[17183,9],[18470,9],[19698,9],[22220,9],[23509,9],[24739,9],[28859,9],[30146,9],[31374,9],[33896,9],[35184,9],[36413,9]]},"811":{"position":[[2381,9],[3950,9],[5764,9],[9562,9],[10853,9],[12085,9]]},"813":{"position":[[2214,9],[3662,9],[5243,9],[8692,9],[9986,9],[11221,9]]},"815":{"position":[[3086,9],[4707,9],[6517,9],[10220,9],[11515,9],[12751,9],[15389,9],[16686,9],[17924,9],[20495,9],[21794,9],[23034,9],[25694,9],[26991,9],[28229,9],[30800,9],[32097,9],[33335,9]]}}}],["fgaclient.check",{"_index":352,"t":{"16":{"position":[[12922,17],[18534,17]]},"98":{"position":[[1367,17]]},"114":{"position":[[148,17]]},"215":{"position":[[766,17],[5931,17]]},"221":{"position":[[2071,17],[12474,17],[17497,17]]},"232":{"position":[[809,17]]},"245":{"position":[[1066,17]]},"247":{"position":[[5838,17]]},"312":{"position":[[905,17],[5935,17]]},"318":{"position":[[6509,17],[11743,17]]},"338":{"position":[[939,17]]},"345":{"position":[[1883,17]]},"369":{"position":[[6823,17]]},"373":{"position":[[735,17]]},"387":{"position":[[839,17],[6089,17]]},"445":{"position":[[905,17],[5956,17]]},"449":{"position":[[865,17],[6080,17]]},"471":{"position":[[912,17]]},"487":{"position":[[1044,17]]},"505":{"position":[[6775,17],[12190,17],[17296,17],[22340,17]]},"525":{"position":[[972,17]]},"545":{"position":[[745,17],[5691,17]]},"547":{"position":[[5680,17]]},"562":{"position":[[904,17]]},"605":{"position":[[2032,17],[7625,17],[13867,17],[20122,17],[25779,17]]},"607":{"position":[[1877,17],[7546,17],[13307,17],[19049,17]]},"624":{"position":[[846,17]]},"632":{"position":[[775,17]]},"634":{"position":[[6145,17],[11195,17]]},"644":{"position":[[1537,17],[6574,17]]},"646":{"position":[[6038,17]]},"648":{"position":[[17491,17],[22573,17]]},"666":{"position":[[309,17],[2200,17],[4117,17],[6013,17],[7927,17],[9829,17]]},"668":{"position":[[2887,17],[10140,17]]},"670":{"position":[[6672,17],[9497,17]]},"692":{"position":[[17408,17],[22526,17]]},"694":{"position":[[10019,17]]},"696":{"position":[[16286,17]]},"698":{"position":[[9995,17]]},"718":{"position":[[8009,17],[18392,17],[23548,17],[35962,17]]},"720":{"position":[[791,17],[7491,17]]},"722":{"position":[[41907,17],[46999,17]]},"740":{"position":[[1091,17],[6202,17],[16558,17]]},"742":{"position":[[5206,17],[24100,17]]},"744":{"position":[[8446,17],[14902,17]]},"767":{"position":[[25655,17],[30834,17],[35870,17],[40928,17]]},"769":{"position":[[956,17],[8291,17],[13631,17],[23379,17],[31042,17],[40029,17]]},"786":{"position":[[7482,17],[17538,17],[22582,17],[29733,17],[34777,17]]},"788":{"position":[[9477,17]]},"790":{"position":[[11680,17]]},"792":{"position":[[9659,17]]},"809":{"position":[[7500,17],[17569,17],[22606,17],[29245,17],[34282,17]]},"811":{"position":[[9948,17]]},"813":{"position":[[9078,17]]},"815":{"position":[[10606,17],[15775,17],[20881,17],[26080,17],[31186,17]]}}}],["fgaclient.check(new",{"_index":395,"t":{"16":{"position":[[15136,19],[20748,19]]},"114":{"position":[[670,19]]},"215":{"position":[[2974,19],[8143,19]]},"221":{"position":[[4271,19],[14682,19],[19709,19]]},"232":{"position":[[3019,19]]},"245":{"position":[[3254,19]]},"247":{"position":[[8028,19]]},"312":{"position":[[3115,19],[8143,19]]},"318":{"position":[[8719,19],[13953,19]]},"338":{"position":[[3163,19]]},"345":{"position":[[4087,19]]},"369":{"position":[[9037,19]]},"373":{"position":[[2949,19]]},"387":{"position":[[3063,19],[8315,19]]},"445":{"position":[[3121,19],[8170,19]]},"449":{"position":[[3083,19],[8298,19]]},"471":{"position":[[3136,19]]},"487":{"position":[[3260,19]]},"505":{"position":[[8985,19],[14400,19],[19510,19],[24552,19]]},"525":{"position":[[3200,19]]},"545":{"position":[[2931,19],[7877,19]]},"547":{"position":[[7868,19]]},"562":{"position":[[3110,19]]},"605":{"position":[[4240,19],[9833,19],[16081,19],[22330,19],[27989,19]]},"607":{"position":[[4087,19],[9762,19],[15519,19],[21261,19]]},"624":{"position":[[3076,19]]},"632":{"position":[[2989,19]]},"634":{"position":[[8361,19],[13417,19]]},"644":{"position":[[3749,19],[8784,19]]},"646":{"position":[[8256,19]]},"648":{"position":[[19703,19],[24781,19]]},"666":{"position":[[833,19],[2728,19],[4641,19],[6543,19],[8453,19],[10359,19]]},"668":{"position":[[3413,19],[10664,19]]},"670":{"position":[[7521,19],[10348,19]]},"692":{"position":[[19620,19],[24734,19]]},"694":{"position":[[12237,19]]},"696":{"position":[[18492,19]]},"698":{"position":[[12211,19]]},"718":{"position":[[10233,19],[20616,19],[25786,19],[38186,19]]},"720":{"position":[[3005,19],[9703,19]]},"722":{"position":[[44115,19],[49237,19]]},"740":{"position":[[3295,19],[8414,19],[18764,19]]},"742":{"position":[[7402,19],[26304,19]]},"744":{"position":[[11170,19],[17628,19]]},"767":{"position":[[27865,19],[33046,19],[38088,19],[43148,19]]},"769":{"position":[[3168,19],[10495,19],[15853,19],[25599,19],[33244,19],[42231,19]]},"786":{"position":[[9696,19],[19752,19],[24798,19],[31947,19],[36991,19]]},"788":{"position":[[11695,19]]},"790":{"position":[[13894,19]]},"792":{"position":[[11881,19]]},"809":{"position":[[9720,19],[19781,19],[24822,19],[31457,19],[36496,19]]},"811":{"position":[[12168,19]]},"813":{"position":[[11304,19]]},"815":{"position":[[12834,19],[18007,19],[23117,19],[28312,19],[33418,19]]}}}],["fgaclient.createstore(new",{"_index":662,"t":{"86":{"position":[[1629,25]]}}}],["fgaclient.expand",{"_index":1920,"t":{"576":{"position":[[877,18],[6211,18]]}}}],["fgaclient.expand{tuplekey",{"_index":1923,"t":{"576":{"position":[[3219,25],[8553,25]]}}}],["fgaclient.listobject",{"_index":451,"t":{"16":{"position":[[24288,23]]},"126":{"position":[[125,23]]},"583":{"position":[[798,23]]}}}],["fgaclient.openfga.check(context.background()).body(body).execut",{"_index":824,"t":{"98":{"position":[[5159,66]]}}}],["fgaclient.openfgaapi.check(context.background()).body(body).execut",{"_index":380,"t":{"16":{"position":[[14100,69],[19712,69]]},"114":{"position":[[536,69]]},"215":{"position":[[1938,69],[7106,69]]},"221":{"position":[[3234,69],[13646,69],[18672,69]]},"232":{"position":[[1982,69]]},"245":{"position":[[2218,69]]},"247":{"position":[[6991,69]]},"312":{"position":[[2079,69],[7107,69]]},"318":{"position":[[7682,69],[12917,69]]},"338":{"position":[[2127,69]]},"345":{"position":[[3051,69]]},"369":{"position":[[8001,69]]},"373":{"position":[[1913,69]]},"387":{"position":[[2027,69],[7278,69]]},"445":{"position":[[2085,69],[7134,69]]},"449":{"position":[[2047,69],[7261,69]]},"471":{"position":[[2100,69]]},"487":{"position":[[2224,69]]},"505":{"position":[[7949,69],[13363,69],[18474,69],[23516,69]]},"525":{"position":[[2164,69]]},"545":{"position":[[1895,69],[6841,69]]},"547":{"position":[[6831,69]]},"562":{"position":[[2074,69]]},"605":{"position":[[3204,69],[8797,69],[15045,69],[21294,69],[26953,69]]},"607":{"position":[[3050,69],[8725,69],[14482,69],[20225,69]]},"624":{"position":[[2040,69]]},"632":{"position":[[1953,69]]},"634":{"position":[[7324,69],[12381,69]]},"644":{"position":[[2713,69],[7748,69]]},"646":{"position":[[7220,69]]},"648":{"position":[[18667,69],[23744,69]]},"666":{"position":[[699,69],[2594,69],[4507,69],[6408,69],[8318,69],[10224,69]]},"668":{"position":[[3278,69],[10530,69]]},"670":{"position":[[7387,69],[10213,69]]},"692":{"position":[[18584,69],[23697,69]]},"694":{"position":[[11201,69]]},"696":{"position":[[17456,69]]},"698":{"position":[[11174,69]]},"718":{"position":[[9197,69],[19580,69],[24749,69],[37150,69]]},"720":{"position":[[1968,69],[8667,69]]},"722":{"position":[[43078,69],[48201,69]]},"740":{"position":[[2259,69],[7378,69],[17727,69]]},"742":{"position":[[6365,69],[25268,69]]},"744":{"position":[[10134,69],[16591,69]]},"767":{"position":[[26829,69],[32009,69],[37052,69],[42112,69]]},"769":{"position":[[2127,69],[9458,69],[14816,69],[24563,69],[32208,69],[41195,69]]},"786":{"position":[[8660,69],[18716,69],[23761,69],[30911,69],[35955,69]]},"788":{"position":[[10659,69]]},"790":{"position":[[12858,69]]},"792":{"position":[[10840,69]]},"809":{"position":[[8684,69],[18745,69],[23785,69],[30421,69],[35460,69]]},"811":{"position":[[11132,69]]},"813":{"position":[[10263,69]]},"815":{"position":[[11798,69],[16970,69],[22081,69],[27275,69],[32381,69]]}}}],["fgaclient.openfgaapi.expand(context.background()).body(body).execut",{"_index":1922,"t":{"576":{"position":[[2202,70],[7536,70]]}}}],["fgaclient.openfgaapi.read(context.background()).body(body).execut",{"_index":1893,"t":{"569":{"position":[[2348,68],[7863,68],[13299,68]]},"571":{"position":[[2433,68]]},"648":{"position":[[1922,68]]}}}],["fgaclient.openfgaapi.readchanges(context.background",{"_index":1256,"t":{"259":{"position":[[241,55],[1490,55]]},"261":{"position":[[1230,55],[2328,55]]}}}],["fgaclient.openfgaapi.write(context.background()).body(body).execut",{"_index":1157,"t":{"192":{"position":[[567,69]]},"194":{"position":[[725,69]]},"213":{"position":[[1969,69]]},"221":{"position":[[8421,69]]},"230":{"position":[[2230,69]]},"247":{"position":[[1981,69]]},"288":{"position":[[2058,69],[6965,69],[12603,69]]},"318":{"position":[[2355,69]]},"369":{"position":[[2486,69]]},"371":{"position":[[2608,69]]},"385":{"position":[[2055,69]]},"429":{"position":[[2383,69]]},"467":{"position":[[2002,69]]},"469":{"position":[[2164,69]]},"485":{"position":[[2292,69]]},"505":{"position":[[2566,69]]},"521":{"position":[[2015,69]]},"523":{"position":[[2502,69]]},"537":{"position":[[2252,69]]},"541":{"position":[[2251,69]]},"543":{"position":[[2110,69]]},"547":{"position":[[1978,69]]},"622":{"position":[[2476,69]]},"630":{"position":[[2455,69]]},"634":{"position":[[2112,69]]},"646":{"position":[[2161,69]]},"648":{"position":[[7901,69],[13352,69]]},"660":{"position":[[5627,69]]},"668":{"position":[[6815,69]]},"670":{"position":[[3204,69]]},"672":{"position":[[5166,69]]},"692":{"position":[[2398,69],[7362,69],[12748,69]]},"694":{"position":[[5384,69]]},"696":{"position":[[4951,69],[11146,69]]},"698":{"position":[[5326,69]]},"718":{"position":[[4073,69],[14499,69],[31070,69]]},"722":{"position":[[9320,69],[15612,69],[21493,69],[27348,69],[32831,69],[37962,69]]},"734":{"position":[[5697,69]]},"740":{"position":[[12691,69]]},"742":{"position":[[12631,69],[19625,69]]},"744":{"position":[[3509,69]]},"746":{"position":[[9385,69]]},"767":{"position":[[4043,69],[12911,69],[19952,69]]},"786":{"position":[[3718,69],[13817,69]]},"788":{"position":[[4751,69]]},"790":{"position":[[2236,69],[7824,69]]},"792":{"position":[[5055,69],[17482,69]]},"809":{"position":[[3721,69],[13852,69]]},"811":{"position":[[4802,69]]},"813":{"position":[[4281,69]]},"815":{"position":[[5555,69]]}}}],["fgaclient.openfgaapi.writeauthorizationmodel(context.background()).body(body).execut",{"_index":633,"t":{"80":{"position":[[3312,87]]}}}],["fgaclient.read",{"_index":1883,"t":{"569":{"position":[[1156,16],[6728,16],[12144,16]]},"571":{"position":[[1359,16]]},"648":{"position":[[823,19]]}}}],["fgaclient.read(new",{"_index":1894,"t":{"569":{"position":[[3479,18],[8994,18],[14430,18]]},"571":{"position":[[3446,18]]},"648":{"position":[[3177,18]]}}}],["fgaclient.readchanges(typ",{"_index":1255,"t":{"259":{"position":[[160,27],[426,27],[1409,27],[1890,27]]},"261":{"position":[[1149,27],[1438,27],[2247,27],[2751,27]]}}}],["fgaclient.writ",{"_index":1152,"t":{"192":{"position":[[95,17]]},"194":{"position":[[250,17]]},"213":{"position":[[721,17]]},"221":{"position":[[7099,17]]},"230":{"position":[[983,17]]},"247":{"position":[[742,17]]},"288":{"position":[[828,17],[5732,17],[10910,17]]},"318":{"position":[[989,17]]},"369":{"position":[[852,17]]},"371":{"position":[[754,17]]},"385":{"position":[[783,17]]},"429":{"position":[[1877,17]]},"467":{"position":[[758,17]]},"469":{"position":[[760,17]]},"485":{"position":[[944,17]]},"505":{"position":[[992,17]]},"521":{"position":[[767,17]]},"523":{"position":[[1100,17]]},"537":{"position":[[846,17]]},"541":{"position":[[853,17]]},"543":{"position":[[864,17]]},"547":{"position":[[747,17]]},"622":{"position":[[996,17]]},"630":{"position":[[721,17]]},"634":{"position":[[721,17]]},"646":{"position":[[811,17]]},"648":{"position":[[6445,17],[11893,17]]},"660":{"position":[[3203,17]]},"668":{"position":[[5431,17]]},"670":{"position":[[1763,17]]},"672":{"position":[[2742,17]]},"692":{"position":[[1138,17],[6094,17],[11082,17]]},"694":{"position":[[3556,17]]},"696":{"position":[[3459,17],[9152,17]]},"698":{"position":[[3654,17]]},"718":{"position":[[2695,17],[13121,17],[29080,17]]},"722":{"position":[[7500,17],[14096,17],[19833,17],[25858,17],[31511,17],[36676,17]]},"734":{"position":[[3229,17]]},"740":{"position":[[11311,17]]},"742":{"position":[[10403,17],[17943,17]]},"744":{"position":[[1716,17]]},"746":{"position":[[3957,17]]},"767":{"position":[[825,17],[10781,17],[17962,17]]},"786":{"position":[[2456,17],[12555,17]]},"788":{"position":[[2975,17]]},"790":{"position":[[926,17],[6450,17]]},"792":{"position":[[3569,17],[16176,17]]},"809":{"position":[[2453,17],[12592,17]]},"811":{"position":[[2732,17]]},"813":{"position":[[2565,17]]},"815":{"position":[[3437,17]]}}}],["fgaclient.write(new",{"_index":1158,"t":{"192":{"position":[[680,19]]},"194":{"position":[[838,19]]},"213":{"position":[[2984,19]]},"221":{"position":[[9436,19]]},"230":{"position":[[3245,19]]},"247":{"position":[[2996,19]]},"288":{"position":[[3073,19],[7980,19],[13618,19]]},"318":{"position":[[3370,19]]},"369":{"position":[[3501,19]]},"371":{"position":[[3623,19]]},"385":{"position":[[3070,19]]},"429":{"position":[[2496,19]]},"467":{"position":[[3017,19]]},"469":{"position":[[3179,19]]},"485":{"position":[[3307,19]]},"505":{"position":[[3581,19]]},"521":{"position":[[3030,19]]},"523":{"position":[[3517,19]]},"537":{"position":[[3267,19]]},"541":{"position":[[3266,19]]},"543":{"position":[[3125,19]]},"547":{"position":[[2993,19]]},"622":{"position":[[3491,19]]},"630":{"position":[[3470,19]]},"634":{"position":[[3127,19]]},"646":{"position":[[3176,19]]},"648":{"position":[[8916,19],[14367,19]]},"660":{"position":[[5740,19]]},"668":{"position":[[7830,19]]},"670":{"position":[[4219,19]]},"672":{"position":[[5279,19]]},"692":{"position":[[3413,19],[8377,19],[13763,19]]},"694":{"position":[[6399,19]]},"696":{"position":[[5966,19],[12161,19]]},"698":{"position":[[6341,19]]},"718":{"position":[[5088,19],[15514,19],[32085,19]]},"722":{"position":[[10335,19],[16627,19],[22508,19],[28363,19],[33846,19],[38977,19]]},"734":{"position":[[6712,19]]},"740":{"position":[[13706,19]]},"742":{"position":[[13646,19],[20640,19]]},"744":{"position":[[4524,19]]},"746":{"position":[[10400,19]]},"767":{"position":[[5058,19],[13926,19],[20967,19]]},"786":{"position":[[4733,19],[14832,19]]},"788":{"position":[[5766,19]]},"790":{"position":[[3251,19],[8839,19]]},"792":{"position":[[6070,19],[18497,19]]},"809":{"position":[[4736,19],[14867,19]]},"811":{"position":[[5817,19]]},"813":{"position":[[5296,19]]},"815":{"position":[[6570,19]]}}}],["fgaclient.writeauthorizationmodel",{"_index":627,"t":{"80":{"position":[[1374,35]]}}}],["fgaclient.writeauthorizationmodel(bodi",{"_index":637,"t":{"80":{"position":[[4957,40]]}}}],["fgasdk",{"_index":356,"t":{"16":{"position":[[13204,6],[18816,6],[24593,6]]},"80":{"position":[[1977,6]]},"98":{"position":[[2915,6]]},"112":{"position":[[611,6]]},"124":{"position":[[611,6]]},"190":{"position":[[611,6]]},"213":{"position":[[992,6]]},"215":{"position":[[1045,6],[6212,6]]},"221":{"position":[[2346,6],[7407,6],[12753,6],[17778,6]]},"230":{"position":[[1254,6]]},"232":{"position":[[1089,6]]},"245":{"position":[[1335,6]]},"247":{"position":[[1009,6],[6108,6]]},"257":{"position":[[587,6]]},"288":{"position":[[1090,6],[5996,6],[11358,6]]},"312":{"position":[[1185,6],[6214,6]]},"318":{"position":[[1319,6],[6789,6],[12023,6]]},"338":{"position":[[1226,6]]},"345":{"position":[[2160,6]]},"369":{"position":[[1288,6],[7105,6]]},"371":{"position":[[1300,6]]},"373":{"position":[[1017,6]]},"385":{"position":[[1066,6]]},"387":{"position":[[1126,6],[6377,6]]},"445":{"position":[[1188,6],[6238,6]]},"449":{"position":[[1149,6],[6364,6]]},"467":{"position":[[1027,6]]},"469":{"position":[[1109,6]]},"471":{"position":[[1199,6]]},"485":{"position":[[1265,6]]},"487":{"position":[[1327,6]]},"505":{"position":[[1398,6],[7055,6],[12470,6],[17578,6],[22621,6]]},"521":{"position":[[1038,6]]},"523":{"position":[[1448,6]]},"525":{"position":[[1261,6]]},"537":{"position":[[1168,6]]},"541":{"position":[[1171,6]]},"543":{"position":[[1134,6]]},"545":{"position":[[1013,6],[5959,6]]},"547":{"position":[[1010,6],[5949,6]]},"562":{"position":[[1182,6]]},"569":{"position":[[1482,6],[7035,6],[12461,6]]},"571":{"position":[[1567,6]]},"576":{"position":[[1212,6],[6546,6]]},"583":{"position":[[1210,6]]},"605":{"position":[[2311,6],[7904,6],[14149,6],[20401,6],[26059,6]]},"607":{"position":[[2157,6],[7829,6],[13588,6],[19330,6]]},"622":{"position":[[1383,6]]},"624":{"position":[[1136,6]]},"630":{"position":[[1207,6]]},"632":{"position":[[1057,6]]},"634":{"position":[[1064,6],[6428,6],[11481,6]]},"644":{"position":[[1818,6],[6854,6]]},"646":{"position":[[1133,6],[6322,6]]},"648":{"position":[[1200,6],[6792,6],[12242,6],[17772,6],[22852,6]]},"668":{"position":[[5770,6]]},"670":{"position":[[2131,6]]},"692":{"position":[[1415,6],[6375,6],[11506,6],[17689,6],[22805,6]]},"694":{"position":[[4033,6],[10303,6]]},"696":{"position":[[3824,6],[9712,6],[16564,6]]},"698":{"position":[[4081,6],[10278,6]]},"718":{"position":[[3031,6],[8296,6],[13457,6],[18679,6],[23842,6],[29666,6],[36249,6]]},"720":{"position":[[1073,6],[7772,6]]},"722":{"position":[[8001,6],[14501,6],[20282,6],[26222,6],[31818,6],[36966,6],[42186,6],[47293,6]]},"734":{"position":[[4026,6]]},"740":{"position":[[1368,6],[6483,6],[11648,6],[16836,6]]},"742":{"position":[[5479,6],[11108,6],[18403,6],[24377,6]]},"744":{"position":[[2232,6],[8908,6],[15365,6]]},"746":{"position":[[6010,6]]},"767":{"position":[[1941,6],[11437,6],[18548,6],[25935,6],[31115,6],[36154,6],[41213,6]]},"769":{"position":[[1237,6],[8568,6],[13917,6],[23664,6],[31318,6],[40305,6]]},"786":{"position":[[2734,6],[7764,6],[12833,6],[17820,6],[22865,6],[30015,6],[35059,6]]},"788":{"position":[[3482,6],[9761,6]]},"790":{"position":[[1228,6],[6784,6],[11962,6]]},"792":{"position":[[3931,6],[9945,6],[16476,6]]},"809":{"position":[[2734,6],[7785,6],[12869,6],[17850,6],[22889,6],[29526,6],[34564,6]]},"811":{"position":[[3330,6],[10233,6]]},"813":{"position":[[3042,6],[9366,6]]},"815":{"position":[[4087,6],[10895,6],[16066,6],[21174,6],[26371,6],[31477,6]]}}}],["fgasdk.checkrequest",{"_index":374,"t":{"16":{"position":[[13882,20],[19494,20]]},"98":{"position":[[4921,20]]},"114":{"position":[[328,20]]},"215":{"position":[[1723,20],[6890,20]]},"221":{"position":[[3024,20],[13431,20],[18456,20]]},"232":{"position":[[1767,20]]},"245":{"position":[[2013,20]]},"247":{"position":[[6786,20]]},"312":{"position":[[1863,20],[6892,20]]},"318":{"position":[[7467,20],[12701,20]]},"338":{"position":[[1904,20]]},"345":{"position":[[2838,20]]},"369":{"position":[[7783,20]]},"373":{"position":[[1695,20]]},"387":{"position":[[1804,20],[7055,20]]},"445":{"position":[[1866,20],[6916,20]]},"449":{"position":[[1827,20],[7042,20]]},"471":{"position":[[1877,20]]},"487":{"position":[[2005,20]]},"505":{"position":[[7733,20],[13148,20],[18256,20],[23299,20]]},"525":{"position":[[1939,20]]},"545":{"position":[[1691,20],[6637,20]]},"547":{"position":[[6627,20]]},"562":{"position":[[1860,20]]},"605":{"position":[[2989,20],[8582,20],[14827,20],[21079,20],[26737,20]]},"607":{"position":[[2835,20],[8507,20],[14266,20],[20008,20]]},"624":{"position":[[1814,20]]},"632":{"position":[[1735,20]]},"634":{"position":[[7106,20],[12159,20]]},"644":{"position":[[2496,20],[7532,20]]},"646":{"position":[[7000,20]]},"648":{"position":[[18450,20],[23530,20]]},"666":{"position":[[490,20],[2383,20],[4298,20],[6197,20],[8109,20],[10013,20]]},"668":{"position":[[3069,20],[10321,20]]},"670":{"position":[[6968,20],[9794,20]]},"692":{"position":[[18367,20],[23483,20]]},"694":{"position":[[10981,20]]},"696":{"position":[[17242,20]]},"698":{"position":[[10956,20]]},"718":{"position":[[8974,20],[19357,20],[24520,20],[36927,20]]},"720":{"position":[[1751,20],[8450,20]]},"722":{"position":[[42864,20],[47971,20]]},"740":{"position":[[2046,20],[7161,20],[17514,20]]},"742":{"position":[[6157,20],[25055,20]]},"744":{"position":[[9586,20],[16043,20]]},"767":{"position":[[26613,20],[31793,20],[36832,20],[41891,20]]},"769":{"position":[[1915,20],[9246,20],[14595,20],[24342,20],[31996,20],[40983,20]]},"786":{"position":[[8442,20],[18498,20],[23543,20],[30693,20],[35737,20]]},"788":{"position":[[10439,20]]},"790":{"position":[[12640,20]]},"792":{"position":[[10623,20]]},"809":{"position":[[8463,20],[18528,20],[23567,20],[30204,20],[35242,20]]},"811":{"position":[[10911,20]]},"813":{"position":[[10044,20]]},"815":{"position":[[11573,20],[16744,20],[21852,20],[27049,20],[32155,20]]}}}],["fgasdk.contextualtupl",{"_index":2143,"t":{"670":{"position":[[7170,25],[9996,25]]},"744":{"position":[[9792,25],[16249,25]]}}}],["fgasdk.expandrequest",{"_index":1921,"t":{"576":{"position":[[1890,21],[7224,21]]}}}],["fgasdk.listobjectsrequest",{"_index":455,"t":{"16":{"position":[[25271,26]]},"126":{"position":[[338,26]]},"583":{"position":[[1888,26]]}}}],["fgasdk.newapiclient(configur",{"_index":372,"t":{"16":{"position":[[13837,34],[19449,34],[25226,34]]},"80":{"position":[[2610,34]]},"98":{"position":[[4878,34]]},"112":{"position":[[1244,34]]},"124":{"position":[[1244,34]]},"190":{"position":[[1244,34]]},"213":{"position":[[1625,34]]},"215":{"position":[[1678,34],[6845,34]]},"221":{"position":[[2979,34],[8040,34],[13386,34],[18411,34]]},"230":{"position":[[1887,34]]},"232":{"position":[[1722,34]]},"245":{"position":[[1968,34]]},"247":{"position":[[1642,34],[6741,34]]},"257":{"position":[[1220,34]]},"288":{"position":[[1723,34],[6629,34],[11991,34]]},"312":{"position":[[1818,34],[6847,34]]},"318":{"position":[[1952,34],[7422,34],[12656,34]]},"338":{"position":[[1859,34]]},"345":{"position":[[2793,34]]},"369":{"position":[[1921,34],[7738,34]]},"371":{"position":[[1933,34]]},"373":{"position":[[1650,34]]},"385":{"position":[[1699,34]]},"387":{"position":[[1759,34],[7010,34]]},"445":{"position":[[1821,34],[6871,34]]},"449":{"position":[[1782,34],[6997,34]]},"467":{"position":[[1660,34]]},"469":{"position":[[1742,34]]},"471":{"position":[[1832,34]]},"485":{"position":[[1898,34]]},"487":{"position":[[1960,34]]},"505":{"position":[[2031,34],[7688,34],[13103,34],[18211,34],[23254,34]]},"521":{"position":[[1671,34]]},"523":{"position":[[2081,34]]},"525":{"position":[[1894,34]]},"537":{"position":[[1801,34]]},"541":{"position":[[1804,34]]},"543":{"position":[[1767,34]]},"545":{"position":[[1646,34],[6592,34]]},"547":{"position":[[1643,34],[6582,34]]},"562":{"position":[[1815,34]]},"569":{"position":[[2115,34],[7668,34],[13094,34]]},"571":{"position":[[2200,34]]},"576":{"position":[[1845,34],[7179,34]]},"583":{"position":[[1843,34]]},"605":{"position":[[2944,34],[8537,34],[14782,34],[21034,34],[26692,34]]},"607":{"position":[[2790,34],[8462,34],[14221,34],[19963,34]]},"622":{"position":[[2016,34]]},"624":{"position":[[1769,34]]},"630":{"position":[[1840,34]]},"632":{"position":[[1690,34]]},"634":{"position":[[1697,34],[7061,34],[12114,34]]},"644":{"position":[[2451,34],[7487,34]]},"646":{"position":[[1766,34],[6955,34]]},"648":{"position":[[1833,34],[7425,34],[12875,34],[18405,34],[23485,34]]},"668":{"position":[[6403,34]]},"670":{"position":[[2764,34]]},"692":{"position":[[2048,34],[7008,34],[12139,34],[18322,34],[23438,34]]},"694":{"position":[[4666,34],[10936,34]]},"696":{"position":[[4457,34],[10345,34],[17197,34]]},"698":{"position":[[4714,34],[10911,34]]},"718":{"position":[[3664,34],[8929,34],[14090,34],[19312,34],[24475,34],[30299,34],[36882,34]]},"720":{"position":[[1706,34],[8405,34]]},"722":{"position":[[8634,34],[15134,34],[20915,34],[26855,34],[32451,34],[37599,34],[42819,34],[47926,34]]},"734":{"position":[[4659,34]]},"740":{"position":[[2001,34],[7116,34],[12281,34],[17469,34]]},"742":{"position":[[6112,34],[11741,34],[19036,34],[25010,34]]},"744":{"position":[[2865,34],[9541,34],[15998,34]]},"746":{"position":[[6643,34]]},"767":{"position":[[2574,34],[12070,34],[19181,34],[26568,34],[31748,34],[36787,34],[41846,34]]},"769":{"position":[[1870,34],[9201,34],[14550,34],[24297,34],[31951,34],[40938,34]]},"786":{"position":[[3367,34],[8397,34],[13466,34],[18453,34],[23498,34],[30648,34],[35692,34]]},"788":{"position":[[4115,34],[10394,34]]},"790":{"position":[[1861,34],[7417,34],[12595,34]]},"792":{"position":[[4564,34],[10578,34],[17109,34]]},"809":{"position":[[3367,34],[8418,34],[13502,34],[18483,34],[23522,34],[30159,34],[35197,34]]},"811":{"position":[[3963,34],[10866,34]]},"813":{"position":[[3675,34],[9999,34]]},"815":{"position":[[4720,34],[11528,34],[16699,34],[21807,34],[27004,34],[32110,34]]}}}],["fgasdk.newconfiguration(fgasdk.userconfigur",{"_index":362,"t":{"16":{"position":[[13366,49],[18978,49],[24755,49]]},"80":{"position":[[2139,49]]},"98":{"position":[[4535,49]]},"112":{"position":[[773,49]]},"124":{"position":[[773,49]]},"190":{"position":[[773,49]]},"213":{"position":[[1154,49]]},"215":{"position":[[1207,49],[6374,49]]},"221":{"position":[[2508,49],[7569,49],[12915,49],[17940,49]]},"230":{"position":[[1416,49]]},"232":{"position":[[1251,49]]},"245":{"position":[[1497,49]]},"247":{"position":[[1171,49],[6270,49]]},"257":{"position":[[749,49]]},"288":{"position":[[1252,49],[6158,49],[11520,49]]},"312":{"position":[[1347,49],[6376,49]]},"318":{"position":[[1481,49],[6951,49],[12185,49]]},"338":{"position":[[1388,49]]},"345":{"position":[[2322,49]]},"369":{"position":[[1450,49],[7267,49]]},"371":{"position":[[1462,49]]},"373":{"position":[[1179,49]]},"385":{"position":[[1228,49]]},"387":{"position":[[1288,49],[6539,49]]},"445":{"position":[[1350,49],[6400,49]]},"449":{"position":[[1311,49],[6526,49]]},"467":{"position":[[1189,49]]},"469":{"position":[[1271,49]]},"471":{"position":[[1361,49]]},"485":{"position":[[1427,49]]},"487":{"position":[[1489,49]]},"505":{"position":[[1560,49],[7217,49],[12632,49],[17740,49],[22783,49]]},"521":{"position":[[1200,49]]},"523":{"position":[[1610,49]]},"525":{"position":[[1423,49]]},"537":{"position":[[1330,49]]},"541":{"position":[[1333,49]]},"543":{"position":[[1296,49]]},"545":{"position":[[1175,49],[6121,49]]},"547":{"position":[[1172,49],[6111,49]]},"562":{"position":[[1344,49]]},"569":{"position":[[1644,49],[7197,49],[12623,49]]},"571":{"position":[[1729,49]]},"576":{"position":[[1374,49],[6708,49]]},"583":{"position":[[1372,49]]},"605":{"position":[[2473,49],[8066,49],[14311,49],[20563,49],[26221,49]]},"607":{"position":[[2319,49],[7991,49],[13750,49],[19492,49]]},"622":{"position":[[1545,49]]},"624":{"position":[[1298,49]]},"630":{"position":[[1369,49]]},"632":{"position":[[1219,49]]},"634":{"position":[[1226,49],[6590,49],[11643,49]]},"644":{"position":[[1980,49],[7016,49]]},"646":{"position":[[1295,49],[6484,49]]},"648":{"position":[[1362,49],[6954,49],[12404,49],[17934,49],[23014,49]]},"668":{"position":[[5932,49]]},"670":{"position":[[2293,49]]},"692":{"position":[[1577,49],[6537,49],[11668,49],[17851,49],[22967,49]]},"694":{"position":[[4195,49],[10465,49]]},"696":{"position":[[3986,49],[9874,49],[16726,49]]},"698":{"position":[[4243,49],[10440,49]]},"718":{"position":[[3193,49],[8458,49],[13619,49],[18841,49],[24004,49],[29828,49],[36411,49]]},"720":{"position":[[1235,49],[7934,49]]},"722":{"position":[[8163,49],[14663,49],[20444,49],[26384,49],[31980,49],[37128,49],[42348,49],[47455,49]]},"734":{"position":[[4188,49]]},"740":{"position":[[1530,49],[6645,49],[11810,49],[16998,49]]},"742":{"position":[[5641,49],[11270,49],[18565,49],[24539,49]]},"744":{"position":[[2394,49],[9070,49],[15527,49]]},"746":{"position":[[6172,49]]},"767":{"position":[[2103,49],[11599,49],[18710,49],[26097,49],[31277,49],[36316,49],[41375,49]]},"769":{"position":[[1399,49],[8730,49],[14079,49],[23826,49],[31480,49],[40467,49]]},"786":{"position":[[2896,49],[7926,49],[12995,49],[17982,49],[23027,49],[30177,49],[35221,49]]},"788":{"position":[[3644,49],[9923,49]]},"790":{"position":[[1390,49],[6946,49],[12124,49]]},"792":{"position":[[4093,49],[10107,49],[16638,49]]},"809":{"position":[[2896,49],[7947,49],[13031,49],[18012,49],[23051,49],[29688,49],[34726,49]]},"811":{"position":[[3492,49],[10395,49]]},"813":{"position":[[3204,49],[9528,49]]},"815":{"position":[[4249,49],[11057,49],[16228,49],[21336,49],[26533,49],[31639,49]]}}}],["fgasdk.ptrstring(\"1uhxcsutp0vkpysnkq1pbb1jezw",{"_index":376,"t":{"16":{"position":[[13925,48],[19537,48]]},"114":{"position":[[371,48]]},"192":{"position":[[498,48]]},"194":{"position":[[656,48]]},"213":{"position":[[1900,48]]},"215":{"position":[[1766,48],[6933,48]]},"221":{"position":[[3067,48],[8352,48],[13474,48],[18499,48]]},"230":{"position":[[2161,48]]},"232":{"position":[[1810,48]]},"245":{"position":[[2056,48]]},"247":{"position":[[1912,48],[6829,48]]},"288":{"position":[[1989,48],[6896,48],[12534,48]]},"312":{"position":[[1906,48],[6935,48]]},"318":{"position":[[2286,48],[7510,48],[12744,48]]},"338":{"position":[[1947,48]]},"345":{"position":[[2881,48]]},"369":{"position":[[2417,48],[7826,48]]},"371":{"position":[[2539,48]]},"373":{"position":[[1738,48]]},"385":{"position":[[1986,48]]},"387":{"position":[[1847,48],[7098,48]]},"429":{"position":[[2314,48]]},"445":{"position":[[1909,48],[6959,48]]},"449":{"position":[[1870,48],[7085,48]]},"467":{"position":[[1933,48]]},"469":{"position":[[2095,48]]},"471":{"position":[[1920,48]]},"485":{"position":[[2223,48]]},"487":{"position":[[2048,48]]},"505":{"position":[[2497,48],[7776,48],[13191,48],[18299,48],[23342,48]]},"521":{"position":[[1946,48]]},"523":{"position":[[2433,48]]},"525":{"position":[[1982,48]]},"537":{"position":[[2183,48]]},"541":{"position":[[2182,48]]},"543":{"position":[[2041,48]]},"545":{"position":[[1734,48],[6680,48]]},"547":{"position":[[1909,48],[6670,48]]},"562":{"position":[[1903,48]]},"576":{"position":[[2128,48],[7462,48]]},"605":{"position":[[3032,48],[8625,48],[14870,48],[21122,48],[26780,48]]},"607":{"position":[[2878,48],[8550,48],[14309,48],[20051,48]]},"622":{"position":[[2407,48]]},"624":{"position":[[1857,48]]},"630":{"position":[[2386,48]]},"632":{"position":[[1778,48]]},"634":{"position":[[2043,48],[7149,48],[12202,48]]},"644":{"position":[[2539,48],[7575,48]]},"646":{"position":[[2092,48],[7043,48]]},"648":{"position":[[7832,48],[13283,48],[18493,48],[23573,48]]},"660":{"position":[[5558,48]]},"666":{"position":[[533,48],[2426,48],[4341,48],[6240,48],[8152,48],[10056,48]]},"668":{"position":[[3112,48],[6746,48],[10364,48]]},"670":{"position":[[3135,48],[7011,48],[9837,48]]},"672":{"position":[[5097,48]]},"692":{"position":[[2329,48],[7293,48],[12679,48],[18410,48],[23526,48]]},"694":{"position":[[5315,48],[11024,48]]},"696":{"position":[[4882,48],[11077,48],[17285,48]]},"698":{"position":[[5257,48],[10999,48]]},"718":{"position":[[4004,48],[9017,48],[14430,48],[19400,48],[24563,48],[31001,48],[36970,48]]},"720":{"position":[[1794,48],[8493,48]]},"722":{"position":[[9251,48],[15543,48],[21424,48],[27279,48],[32762,48],[37893,48],[42907,48],[48014,48]]},"734":{"position":[[5628,48]]},"740":{"position":[[2089,48],[7204,48],[12622,48],[17557,48]]},"742":{"position":[[6200,48],[12562,48],[19556,48],[25098,48]]},"744":{"position":[[3440,48],[9629,48],[16086,48]]},"746":{"position":[[9316,48]]},"767":{"position":[[3974,48],[12842,48],[19883,48],[26656,48],[31836,48],[36875,48],[41934,48]]},"769":{"position":[[1958,48],[9289,48],[14638,48],[24385,48],[32039,48],[41026,48]]},"786":{"position":[[3649,48],[8485,48],[13748,48],[18541,48],[23586,48],[30736,48],[35780,48]]},"788":{"position":[[4682,48],[10482,48]]},"790":{"position":[[2167,48],[7755,48],[12683,48]]},"792":{"position":[[4986,48],[10666,48],[17413,48]]},"809":{"position":[[3652,48],[8506,48],[13783,48],[18571,48],[23610,48],[30247,48],[35285,48]]},"811":{"position":[[4733,48],[10954,48]]},"813":{"position":[[4212,48],[10087,48]]},"815":{"position":[[5486,48],[11616,48],[16787,48],[21895,48],[27092,48],[32198,48]]}}}],["fgasdk.ptrstring(\"account",{"_index":2366,"t":{"734":{"position":[[5525,28]]},"746":{"position":[[7509,28]]}}}],["fgasdk.ptrstring(\"account:check",{"_index":2364,"t":{"734":{"position":[[5124,34],[5356,34],[5473,34]]},"746":{"position":[[7108,34],[7340,34],[7457,34]]}}}],["fgasdk.ptrstring(\"account_manag",{"_index":2360,"t":{"734":{"position":[[4887,36]]},"740":{"position":[[12508,36]]},"746":{"position":[[6871,36]]}}}],["fgasdk.ptrstring(\"admin",{"_index":1850,"t":{"537":{"position":[[1974,26],[2089,26]]},"788":{"position":[[4574,26]]}}}],["fgasdk.ptrstring(\"approved_ip_address_rang",{"_index":2434,"t":{"742":{"position":[[12438,46]]},"746":{"position":[[9192,46]]}}}],["fgasdk.ptrstring(\"approved_timeslot",{"_index":2431,"t":{"742":{"position":[[11986,38],[12194,38]]},"746":{"position":[[7701,38],[7908,38],[8117,38],[8326,38],[8534,38],[8741,38],[8948,38]]}}}],["fgasdk.ptrstring(\"asset",{"_index":1490,"t":{"371":{"position":[[2239,23],[2466,23]]}}}],["fgasdk.ptrstring(\"assigne",{"_index":1471,"t":{"369":{"position":[[2137,29],[2309,29]]}}}],["fgasdk.ptrstring(\"associated_plan",{"_index":2031,"t":{"630":{"position":[[2268,36]]},"634":{"position":[[1925,36]]},"767":{"position":[[2809,36],[3004,36],[3212,36],[3422,36],[3642,36],[3865,36]]}}}],["fgasdk.ptrstring(\"block",{"_index":1396,"t":{"318":{"position":[[2179,28]]}}}],["fgasdk.ptrstring(\"branch",{"_index":2365,"t":{"734":{"position":[[5320,27]]},"746":{"position":[[7304,27]]}}}],["fgasdk.ptrstring(\"branch:east",{"_index":2405,"t":{"740":{"position":[[12553,29]]}}}],["fgasdk.ptrstring(\"branch:west",{"_index":2361,"t":{"734":{"position":[[4932,29],[5272,29]]},"742":{"position":[[12033,29],[12241,29],[12493,29]]},"746":{"position":[[6916,29],[7256,29],[7748,29],[7955,29],[8164,29],[8373,29],[8581,29],[8788,29],[8995,29],[9247,29]]}}}],["fgasdk.ptrstring(\"channel:gener",{"_index":2315,"t":{"722":{"position":[[8864,36],[15475,36],[21230,36],[21356,36]]}}}],["fgasdk.ptrstring(\"channel:marketing_intern",{"_index":2316,"t":{"722":{"position":[[9010,47],[27063,47],[27200,47]]}}}],["fgasdk.ptrstring(\"channel:proj_marketing_campaign",{"_index":2317,"t":{"722":{"position":[[9167,52],[32678,52],[37809,52]]}}}],["fgasdk.ptrstring(\"channels_admin",{"_index":2295,"t":{"718":{"position":[[30526,35]]}}}],["fgasdk.ptrstring(\"comment",{"_index":2689,"t":{"809":{"position":[[3540,30]]},"815":{"position":[[5164,30]]}}}],["fgasdk.ptrstring(\"company:xyz",{"_index":1185,"t":{"213":{"position":[[1836,32]]}}}],["fgasdk.ptrstring(\"custom",{"_index":2363,"t":{"734":{"position":[[5086,29]]},"746":{"position":[[7070,29]]}}}],["fgasdk.ptrstring(\"device:1",{"_index":2169,"t":{"692":{"position":[[2268,29],[7232,29],[12359,29],[12492,29],[12618,29]]},"694":{"position":[[4883,29],[5003,29],[5132,29],[5254,29]]},"698":{"position":[[4935,29],[5069,29],[5196,29]]}}}],["fgasdk.ptrstring(\"device:2",{"_index":2217,"t":{"696":{"position":[[10587,29],[10877,29]]}}}],["fgasdk.ptrstring(\"device:3",{"_index":2218,"t":{"696":{"position":[[10738,29],[11016,29]]}}}],["fgasdk.ptrstring(\"device_group:group1",{"_index":2207,"t":{"696":{"position":[[4677,40],[4810,40]]}}}],["fgasdk.ptrstring(\"device_group:group1#it_admin",{"_index":2219,"t":{"696":{"position":[[10779,49],[10918,49]]}}}],["fgasdk.ptrstring(\"device_group:group1#security_guard",{"_index":2216,"t":{"696":{"position":[[10477,55],[10628,55]]}}}],["fgasdk.ptrstring(\"device_renam",{"_index":2179,"t":{"692":{"position":[[12574,35]]},"698":{"position":[[5152,35]]}}}],["fgasdk.ptrstring(\"docu",{"_index":1892,"t":{"569":{"position":[[2289,30],[7804,30]]},"571":{"position":[[2374,30]]}}}],["fgasdk.ptrstring(\"document:2021",{"_index":2690,"t":{"809":{"position":[[3579,31],[13710,31]]},"811":{"position":[[4660,31]]},"813":{"position":[[3932,31],[4049,31],[4139,31]]},"815":{"position":[[4981,31],[5203,31],[5405,31]]}}}],["fgasdk.ptrstring(\"document:compani",{"_index":1778,"t":{"485":{"position":[[2146,34]]}}}],["fgasdk.ptrstring(\"document:may_budget.doc",{"_index":2012,"t":{"622":{"position":[[2331,44]]}}}],["fgasdk.ptrstring(\"document:meeting_notes.doc",{"_index":1504,"t":{"385":{"position":[[1907,47]]},"469":{"position":[[2016,47]]},"523":{"position":[[2354,47]]}}}],["fgasdk.ptrstring(\"document:plan",{"_index":1397,"t":{"318":{"position":[[2216,38]]},"569":{"position":[[13232,38]]},"576":{"position":[[2025,38],[7359,38]]}}}],["fgasdk.ptrstring(\"document:roadmap",{"_index":2066,"t":{"646":{"position":[[2023,37]]},"648":{"position":[[7634,37],[7763,37],[13085,37],[13214,37]]}}}],["fgasdk.ptrstring(\"document:z",{"_index":1156,"t":{"192":{"position":[[435,31]]},"194":{"position":[[593,31]]}}}],["fgasdk.ptrstring(\"domain:xyz",{"_index":2703,"t":{"811":{"position":[[4227,31],[4347,31],[4470,31]]}}}],["fgasdk.ptrstring(\"domain:xyz#memb",{"_index":2704,"t":{"811":{"position":[[4575,38]]},"815":{"position":[[5115,38]]}}}],["fgasdk.ptrstring(\"editor",{"_index":1489,"t":{"371":{"position":[[2203,27]]},"385":{"position":[[1871,27]]},"467":{"position":[[1832,27]]},"523":{"position":[[2318,27]]},"648":{"position":[[13049,27],[13178,27]]}}}],["fgasdk.ptrstring(\"employe",{"_index":1184,"t":{"213":{"position":[[1798,29]]}}}],["fgasdk.ptrstring(\"feature:data_preview",{"_index":2032,"t":{"630":{"position":[[2313,41]]},"634":{"position":[[1970,41]]}}}],["fgasdk.ptrstring(\"feature:draft_pr",{"_index":2531,"t":{"767":{"position":[[3257,38],[3687,38]]}}}],["fgasdk.ptrstring(\"feature:issu",{"_index":2529,"t":{"767":{"position":[[2854,35],[3049,35],[3467,35]]}}}],["fgasdk.ptrstring(\"feature:sso",{"_index":2533,"t":{"767":{"position":[[3910,32]]}}}],["fgasdk.ptrstring(\"folder:budget",{"_index":2011,"t":{"622":{"position":[[2249,35]]}}}],["fgasdk.ptrstring(\"folder:not",{"_index":1756,"t":{"467":{"position":[[1868,33]]},"469":{"position":[[1936,33]]}}}],["fgasdk.ptrstring(\"folder:plan",{"_index":1709,"t":{"429":{"position":[[2246,36]]}}}],["fgasdk.ptrstring(\"folder:product#par",{"_index":1707,"t":{"429":{"position":[[2157,42]]}}}],["fgasdk.ptrstring(\"guest",{"_index":2297,"t":{"718":{"position":[[30713,26]]}}}],["fgasdk.ptrstring(\"ip",{"_index":2433,"t":{"742":{"position":[[12378,20],[19310,20]]},"744":{"position":[[3167,20],[9931,20],[16388,20]]},"746":{"position":[[9132,20]]}}}],["fgasdk.ptrstring(\"it_admin",{"_index":2191,"t":{"694":{"position":[[4965,29],[5216,29]]},"696":{"position":[[4772,29],[10839,29],[10978,29]]}}}],["fgasdk.ptrstring(\"legacy_admin",{"_index":2276,"t":{"718":{"position":[[3889,33]]}}}],["fgasdk.ptrstring(\"live_video_view",{"_index":2168,"t":{"692":{"position":[[2221,38],[12312,38]]},"698":{"position":[[4888,38]]}}}],["fgasdk.ptrstring(\"memb",{"_index":1222,"t":{"221":{"position":[[8252,27]]},"230":{"position":[[2061,27]]},"521":{"position":[[1845,27]]},"718":{"position":[[14321,27],[30892,27]]},"767":{"position":[[19411,27],[19587,27],[19777,27]]},"788":{"position":[[4348,27]]},"790":{"position":[[2054,27],[7644,27]]},"792":{"position":[[4737,27]]},"811":{"position":[[4191,27],[4311,27],[4434,27]]}}}],["fgasdk.ptrstring(\"org:contoso",{"_index":1223,"t":{"221":{"position":[[8288,32]]},"230":{"position":[[2097,32]]}}}],["fgasdk.ptrstring(\"org:xyz",{"_index":1862,"t":{"541":{"position":[[1936,28],[2049,28]]},"543":{"position":[[1981,28]]},"547":{"position":[[1776,28]]}}}],["fgasdk.ptrstring(\"organization:a",{"_index":2098,"t":{"660":{"position":[[4415,35],[5247,35]]},"668":{"position":[[6679,35]]},"670":{"position":[[3068,35],[7320,35]]},"672":{"position":[[3954,35],[4786,35]]}}}],["fgasdk.ptrstring(\"organization:alpha",{"_index":2550,"t":{"767":{"position":[[12272,39],[19447,39]]}}}],["fgasdk.ptrstring(\"organization:b",{"_index":2099,"t":{"660":{"position":[[4603,35],[4979,35],[5413,35]]},"672":{"position":[[4142,35],[4518,35],[4952,35]]}}}],["fgasdk.ptrstring(\"organization:bay",{"_index":2552,"t":{"767":{"position":[[12478,39],[19623,39]]}}}],["fgasdk.ptrstring(\"organization:c",{"_index":2100,"t":{"660":{"position":[[4791,35],[5167,35]]},"670":{"position":[[10146,35]]},"672":{"position":[[4330,35],[4706,35]]}}}],["fgasdk.ptrstring(\"organization:contoso",{"_index":2666,"t":{"792":{"position":[[4773,41],[4826,41],[17340,41]]}}}],["fgasdk.ptrstring(\"organization:contoso#memb",{"_index":2681,"t":{"792":{"position":[[17241,48]]}}}],["fgasdk.ptrstring(\"organization:cup",{"_index":2553,"t":{"767":{"position":[[12685,38],[19813,38]]}}}],["fgasdk.ptrstring(\"own",{"_index":1816,"t":{"505":{"position":[[2398,26]]},"541":{"position":[[1975,26],[2088,26]]},"547":{"position":[[1815,26]]},"660":{"position":[[5293,26]]},"672":{"position":[[4832,26]]},"792":{"position":[[4878,26]]},"809":{"position":[[13675,26]]},"815":{"position":[[4946,26]]}}}],["fgasdk.ptrstring(\"par",{"_index":1708,"t":{"429":{"position":[[2210,27]]},"469":{"position":[[1980,27]]},"622":{"position":[[2295,27]]},"813":{"position":[[4103,27]]}}}],["fgasdk.ptrstring(\"parent_workspac",{"_index":2314,"t":{"722":{"position":[[8818,37],[8964,37],[9121,37]]}}}],["fgasdk.ptrstring(\"partn",{"_index":2102,"t":{"660":{"position":[[5459,28]]},"672":{"position":[[4998,28]]}}}],["fgasdk.ptrstring(\"plan:advanc",{"_index":2030,"t":{"630":{"position":[[2112,34],[2223,34]]},"634":{"position":[[1880,34]]}}}],["fgasdk.ptrstring(\"plan:enterpris",{"_index":2532,"t":{"767":{"position":[[3375,36],[3595,36],[3818,36],[12774,36]]}}}],["fgasdk.ptrstring(\"plan:fre",{"_index":2528,"t":{"767":{"position":[[2768,30],[12362,30]]}}}],["fgasdk.ptrstring(\"plan:team",{"_index":2530,"t":{"767":{"position":[[2963,30],[3171,30],[12568,30]]}}}],["fgasdk.ptrstring(\"project:x",{"_index":2101,"t":{"660":{"position":[[5328,30],[5496,30]]},"672":{"position":[[4867,30],[5035,30]]}}}],["fgasdk.ptrstring(\"project_manag",{"_index":2097,"t":{"660":{"position":[[4370,36],[4558,36],[4746,36],[4934,36],[5122,36]]},"672":{"position":[[3909,36],[4097,36],[4285,36],[4473,36],[4661,36]]}}}],["fgasdk.ptrstring(\"read",{"_index":1155,"t":{"192":{"position":[[399,27]]},"194":{"position":[[557,27]]},"247":{"position":[[1816,27]]},"571":{"position":[[2338,27]]},"576":{"position":[[1949,27]]},"786":{"position":[[3540,27]]}}}],["fgasdk.ptrstring(\"recorded_video_view",{"_index":2175,"t":{"692":{"position":[[7181,42],[12441,42]]},"698":{"position":[[5018,42]]}}}],["fgasdk.ptrstring(\"repo:1",{"_index":1851,"t":{"537":{"position":[[2009,27]]},"541":{"position":[[2010,27]]},"547":{"position":[[1850,27]]}}}],["fgasdk.ptrstring(\"repo:2",{"_index":1852,"t":{"537":{"position":[[2124,27]]},"541":{"position":[[2123,27]]}}}],["fgasdk.ptrstring(\"repo:contoso/tool",{"_index":2623,"t":{"786":{"position":[[3576,41],[13675,41]]},"788":{"position":[[4609,41]]},"792":{"position":[[4913,41]]}}}],["fgasdk.ptrstring(\"repo_admin",{"_index":1867,"t":{"543":{"position":[[1941,31]]},"792":{"position":[[17300,31]]}}}],["fgasdk.ptrstring(\"role:media",{"_index":1472,"t":{"369":{"position":[[2175,28],[2347,28]]},"371":{"position":[[2144,28],[2372,28]]}}}],["fgasdk.ptrstring(\"security_guard",{"_index":2190,"t":{"694":{"position":[[4839,35],[5088,35]]},"696":{"position":[[4633,35],[10543,35],[10694,35]]}}}],["fgasdk.ptrstring(\"subscrib",{"_index":2551,"t":{"767":{"position":[[12322,31],[12528,31],[12734,31]]}}}],["fgasdk.ptrstring(\"subscriber_memb",{"_index":2029,"t":{"630":{"position":[[2065,38]]}}}],["fgasdk.ptrstring(\"team:contoso/engin",{"_index":2634,"t":{"788":{"position":[[4384,45]]},"790":{"position":[[2090,45]]}}}],["fgasdk.ptrstring(\"team:contoso/engineering#memb",{"_index":2635,"t":{"788":{"position":[[4511,52]]}}}],["fgasdk.ptrstring(\"team:contoso/protocol",{"_index":2654,"t":{"790":{"position":[[7680,43]]}}}],["fgasdk.ptrstring(\"team:contoso/protocols#memb",{"_index":2646,"t":{"790":{"position":[[1993,50]]}}}],["fgasdk.ptrstring(\"team:writ",{"_index":1833,"t":{"521":{"position":[[1881,33]]}}}],["fgasdk.ptrstring(\"team:writers#memb",{"_index":1840,"t":{"523":{"position":[[2267,40]]}}}],["fgasdk.ptrstring(\"timeslot:10_11",{"_index":2480,"t":{"746":{"position":[[8071,35]]}}}],["fgasdk.ptrstring(\"timeslot:11_12",{"_index":2430,"t":{"742":{"position":[[11940,35]]},"746":{"position":[[8280,35]]}}}],["fgasdk.ptrstring(\"timeslot:12_13",{"_index":2432,"t":{"742":{"position":[[12148,35],[19489,35]]},"744":{"position":[[3373,35],[10067,35]]},"746":{"position":[[8488,35]]}}}],["fgasdk.ptrstring(\"timeslot:13_14",{"_index":2481,"t":{"746":{"position":[[8695,35]]}}}],["fgasdk.ptrstring(\"timeslot:14_15",{"_index":2482,"t":{"746":{"position":[[8902,35]]}}}],["fgasdk.ptrstring(\"timeslot:18_19",{"_index":2467,"t":{"744":{"position":[[16524,35]]}}}],["fgasdk.ptrstring(\"timeslot:8_9",{"_index":2478,"t":{"746":{"position":[[7657,33]]}}}],["fgasdk.ptrstring(\"timeslot:9_10",{"_index":2479,"t":{"746":{"position":[[7863,34]]}}}],["fgasdk.ptrstring(\"transaction:a",{"_index":2367,"t":{"734":{"position":[[5562,34]]},"746":{"position":[[7546,34]]}}}],["fgasdk.ptrstring(\"trip:europ",{"_index":1814,"t":{"505":{"position":[[2275,32],[2433,32]]}}}],["fgasdk.ptrstring(\"tweet:1",{"_index":1242,"t":{"247":{"position":[[1852,28]]},"288":{"position":[[1929,28],[6836,28],[12246,28],[12474,28]]}}}],["fgasdk.ptrstring(\"us",{"_index":1341,"t":{"288":{"position":[[1855,27],[6762,27],[12400,27]]},"485":{"position":[[2074,27]]},"742":{"position":[[19276,25],[19455,25]]},"744":{"position":[[3133,25],[3339,25],[9897,25],[10033,25],[16354,25],[16490,25]]},"815":{"position":[[5331,27]]}}}],["fgasdk.ptrstring(\"user:alic",{"_index":1815,"t":{"505":{"position":[[2356,31]]},"521":{"position":[[1803,31]]}}}],["fgasdk.ptrstring(\"user:ami",{"_index":2275,"t":{"718":{"position":[[3849,29]]},"722":{"position":[[21154,29]]}}}],["fgasdk.ptrstring(\"user:ann",{"_index":1154,"t":{"192":{"position":[[358,30]]},"194":{"position":[[516,30]]},"213":{"position":[[1757,30]]},"221":{"position":[[8211,30]]},"230":{"position":[[2020,30]]},"247":{"position":[[1775,30]]},"369":{"position":[[2096,30]]},"537":{"position":[[1933,30],[2048,30]]},"630":{"position":[[2024,30]]},"648":{"position":[[7557,30],[13008,30]]},"660":{"position":[[4329,30],[4517,30],[4705,30],[4893,30]]},"668":{"position":[[6593,30]]},"670":{"position":[[2982,30],[7234,30],[10060,30]]},"672":{"position":[[3868,30],[4056,30],[4244,30]]},"692":{"position":[[2180,30],[7140,30]]},"694":{"position":[[4798,30]]},"734":{"position":[[4846,30]]},"742":{"position":[[19235,30],[19414,30]]},"744":{"position":[[3092,30],[3298,30],[9856,30],[9992,30],[16313,30],[16449,30]]},"746":{"position":[[6830,30]]},"767":{"position":[[19370,30]]},"786":{"position":[[3499,30]]},"809":{"position":[[13634,30]]},"811":{"position":[[4150,30]]},"815":{"position":[[4905,30]]}}}],["fgasdk.ptrstring(\"user:anne#follow",{"_index":1354,"t":{"288":{"position":[[12160,39]]}}}],["fgasdk.ptrstring(\"user:becki",{"_index":1866,"t":{"543":{"position":[[1899,31]]}}}],["fgasdk.ptrstring(\"user:beth",{"_index":1473,"t":{"369":{"position":[[2268,30]]},"672":{"position":[[4432,30]]},"692":{"position":[[12271,30],[12400,30],[12533,30]]},"694":{"position":[[4924,30]]},"767":{"position":[[19546,30]]},"786":{"position":[[13598,30]]},"809":{"position":[[3499,30]]},"811":{"position":[[4270,30]]}}}],["fgasdk.ptrstring(\"user:bethani",{"_index":2065,"t":{"646":{"position":[[1943,33]]}}}],["fgasdk.ptrstring(\"user:bob",{"_index":1503,"t":{"385":{"position":[[1831,29]]},"467":{"position":[[1792,29]]},"505":{"position":[[2199,29]]},"569":{"position":[[2213,29],[7766,29]]},"571":{"position":[[2298,29]]},"718":{"position":[[30486,29]]},"722":{"position":[[26987,29]]}}}],["fgasdk.ptrstring(\"user:carl",{"_index":1395,"t":{"318":{"position":[[2138,30]]},"660":{"position":[[5081,30]]},"672":{"position":[[4620,30]]}}}],["fgasdk.ptrstring(\"user:carolin",{"_index":2362,"t":{"734":{"position":[[5041,34]]},"746":{"position":[[7025,34]]}}}],["fgasdk.ptrstring(\"user:catherin",{"_index":2287,"t":{"718":{"position":[[14275,35]]}}}],["fgasdk.ptrstring(\"user:charl",{"_index":2078,"t":{"648":{"position":[[7683,33],[13134,33]]},"694":{"position":[[5044,33]]},"696":{"position":[[4589,33]]},"767":{"position":[[19733,33]]},"788":{"position":[[4304,33]]},"811":{"position":[[4390,33]]}}}],["fgasdk.ptrstring(\"user:david",{"_index":2296,"t":{"718":{"position":[[30671,31]]},"722":{"position":[[37731,31]]}}}],["fgasdk.ptrstring(\"user:dian",{"_index":2653,"t":{"790":{"position":[[7602,31]]},"813":{"position":[[3854,31]]}}}],["fgasdk.ptrstring(\"user:diann",{"_index":2192,"t":{"694":{"position":[[5173,32]]},"696":{"position":[[4729,32]]}}}],["fgasdk.ptrstring(\"user:emili",{"_index":2240,"t":{"698":{"position":[[4846,31],[4976,31],[5110,31]]},"718":{"position":[[30850,31]]},"722":{"position":[[21278,31],[27122,31]]}}}],["fgasdk.ptrstring(\"user:erik",{"_index":2665,"t":{"792":{"position":[[4696,30]]}}}],["fgasdk.ptrstring(\"user:mari",{"_index":2404,"t":{"740":{"position":[[12467,30]]}}}],["fgasdk.ptrstring(\"user_in_context",{"_index":2135,"t":{"668":{"position":[[6634,36]]},"670":{"position":[[3023,36],[7275,36],[10101,36]]}}}],["fgasdk.ptrstring(\"view",{"_index":1342,"t":{"288":{"position":[[1893,27],[6800,27],[12210,27],[12438,27]]},"371":{"position":[[2430,27]]},"485":{"position":[[2112,25]]},"505":{"position":[[2239,27]]},"722":{"position":[[15439,27]]},"811":{"position":[[4624,27]]},"813":{"position":[[3896,27]]},"815":{"position":[[5369,27]]}}}],["fgasdk.ptrstring(\"workspace:sandcastl",{"_index":2277,"t":{"718":{"position":[[3931,41],[14357,41],[30570,41],[30748,41],[30928,41]]},"722":{"position":[[8766,41],[8912,41],[9069,41]]}}}],["fgasdk.ptrstring(\"workspace:sandcastle#memb",{"_index":2330,"t":{"722":{"position":[[15380,48],[32583,48]]}}}],["fgasdk.ptrstring(\"writ",{"_index":1891,"t":{"569":{"position":[[2253,27],[13196,27]]},"576":{"position":[[7283,27]]},"646":{"position":[[1987,27]]},"648":{"position":[[7598,27],[7727,27]]},"722":{"position":[[21194,27],[21320,27],[27027,27],[27164,27],[32642,27],[37773,27]]},"786":{"position":[[13639,27]]}}}],["fgasdk.ptrstring(c.locals(\"object\").(str",{"_index":823,"t":{"98":{"position":[[5091,46]]}}}],["fgasdk.ptrstring(c.locals(\"relation\").(str",{"_index":822,"t":{"98":{"position":[[5034,48]]}}}],["fgasdk.ptrstring(c.locals(\"username\").(str",{"_index":821,"t":{"98":{"position":[[4975,48]]}}}],["fgasdk.readrequest",{"_index":1890,"t":{"569":{"position":[[2160,19],[7713,19],[13139,19]]},"571":{"position":[[2245,19]]},"648":{"position":[[1878,20]]}}}],["fgasdk.tuplekey",{"_index":378,"t":{"16":{"position":[[13984,16],[19596,16]]},"98":{"position":[[4952,16]]},"114":{"position":[[430,16]]},"192":{"position":[[300,18],[330,17]]},"194":{"position":[[458,18],[488,17]]},"213":{"position":[[1699,18],[1729,17]]},"215":{"position":[[1825,16],[6992,16]]},"221":{"position":[[3126,16],[8114,18],[8144,17],[13533,16],[18558,16]]},"230":{"position":[[1962,18],[1992,17]]},"232":{"position":[[1869,16]]},"245":{"position":[[2115,16]]},"247":{"position":[[1717,18],[1747,17],[6888,16]]},"288":{"position":[[1797,18],[1827,17],[6704,18],[6734,17],[12065,18],[12095,17],[12293,18],[12323,17]]},"312":{"position":[[1965,16],[6994,16]]},"318":{"position":[[2026,18],[2056,17],[7569,16],[12803,16]]},"338":{"position":[[2006,16]]},"345":{"position":[[2940,16]]},"369":{"position":[[1995,18],[2025,17],[7885,16]]},"371":{"position":[[2007,18],[2037,17]]},"373":{"position":[[1797,16]]},"385":{"position":[[1773,18],[1803,17]]},"387":{"position":[[1906,16],[7157,16]]},"429":{"position":[[2099,18],[2129,17]]},"445":{"position":[[1968,16],[7018,16]]},"449":{"position":[[1929,16],[7144,16]]},"467":{"position":[[1734,18],[1764,17]]},"469":{"position":[[1816,18],[1846,17]]},"471":{"position":[[1979,16]]},"485":{"position":[[1972,18],[2002,17]]},"487":{"position":[[2107,16]]},"505":{"position":[[2105,18],[2135,17],[7835,16],[13250,16],[18358,16],[23401,16]]},"521":{"position":[[1745,18],[1775,17]]},"523":{"position":[[2155,18],[2185,17]]},"525":{"position":[[2041,16]]},"537":{"position":[[1875,18],[1905,17]]},"541":{"position":[[1878,18],[1908,17]]},"543":{"position":[[1841,18],[1871,17]]},"545":{"position":[[1793,16],[6739,16]]},"547":{"position":[[1718,18],[1748,17],[6729,16]]},"562":{"position":[[1962,16]]},"569":{"position":[[2190,16],[7743,16],[13169,16]]},"571":{"position":[[2275,16]]},"576":{"position":[[1922,16],[7256,16]]},"605":{"position":[[3091,16],[8684,16],[14929,16],[21181,16],[26839,16]]},"607":{"position":[[2937,16],[8609,16],[14368,16],[20110,16]]},"622":{"position":[[2090,18],[2120,17]]},"624":{"position":[[1916,16]]},"630":{"position":[[1914,18],[1944,17]]},"632":{"position":[[1837,16]]},"634":{"position":[[1772,18],[1802,17],[7208,16],[12261,16]]},"644":{"position":[[2598,16],[7634,16]]},"646":{"position":[[1840,18],[1870,17],[7102,16]]},"648":{"position":[[7499,18],[7529,17],[12950,18],[12980,17],[18552,16],[23632,16]]},"660":{"position":[[4216,18],[4246,17]]},"666":{"position":[[592,16],[2485,16],[4400,16],[6299,16],[8211,16],[10115,16]]},"668":{"position":[[3171,16],[6477,18],[6507,17],[10423,16]]},"670":{"position":[[2839,18],[2869,17],[7070,16],[7207,18],[9896,16],[10033,18]]},"672":{"position":[[3755,18],[3785,17]]},"692":{"position":[[2122,18],[2152,17],[7082,18],[7112,17],[12213,18],[12243,17],[18469,16],[23585,16]]},"694":{"position":[[4740,18],[4770,17],[11083,16]]},"696":{"position":[[4531,18],[4561,17],[10419,18],[10449,17],[17344,16]]},"698":{"position":[[4788,18],[4818,17],[11058,16]]},"718":{"position":[[3738,18],[3768,17],[9076,16],[14164,18],[14194,17],[19459,16],[24622,16],[30373,18],[30403,17],[37029,16]]},"720":{"position":[[1853,16],[8552,16]]},"722":{"position":[[8708,18],[8738,17],[15208,18],[15238,17],[20989,18],[21019,17],[26929,18],[26959,17],[32525,18],[32555,17],[37673,18],[37703,17],[42966,16],[48073,16]]},"734":{"position":[[4733,18],[4763,17]]},"740":{"position":[[2148,16],[7263,16],[12355,18],[12385,17],[17616,16]]},"742":{"position":[[6259,16],[11815,18],[11845,17],[19110,18],[19140,17],[25157,16]]},"744":{"position":[[2940,18],[2970,17],[9688,16],[9829,18],[16145,16],[16286,18]]},"746":{"position":[[6717,18],[6747,17]]},"767":{"position":[[2648,18],[2678,17],[12144,18],[12174,17],[19255,18],[19285,17],[26715,16],[31895,16],[36934,16],[41993,16]]},"769":{"position":[[2017,16],[9348,16],[14697,16],[24444,16],[32098,16],[41085,16]]},"786":{"position":[[3441,18],[3471,17],[8544,16],[13540,18],[13570,17],[18600,16],[23645,16],[30795,16],[35839,16]]},"788":{"position":[[4189,18],[4219,17],[10541,16]]},"790":{"position":[[1935,18],[1965,17],[7491,18],[7521,17],[12742,16]]},"792":{"position":[[4638,18],[4668,17],[10725,16],[17183,18],[17213,17]]},"809":{"position":[[3441,18],[3471,17],[8565,16],[13576,18],[13606,17],[18630,16],[23669,16],[30306,16],[35344,16]]},"811":{"position":[[4037,18],[4067,17],[11013,16]]},"813":{"position":[[3749,18],[3779,17],[10146,16]]},"815":{"position":[[4794,18],[4824,17],[11675,16],[16846,16],[21954,16],[27151,16],[32257,16]]}}}],["fgasdk.writerequest",{"_index":1153,"t":{"192":{"position":[[271,20]]},"194":{"position":[[428,20]]},"213":{"position":[[1670,20]]},"221":{"position":[[8085,20]]},"230":{"position":[[1932,20]]},"247":{"position":[[1687,20]]},"288":{"position":[[1768,20],[6674,20],[12036,20]]},"318":{"position":[[1997,20]]},"369":{"position":[[1966,20]]},"371":{"position":[[1978,20]]},"385":{"position":[[1744,20]]},"429":{"position":[[2070,20]]},"467":{"position":[[1705,20]]},"469":{"position":[[1787,20]]},"485":{"position":[[1943,20]]},"505":{"position":[[2076,20]]},"521":{"position":[[1716,20]]},"523":{"position":[[2126,20]]},"537":{"position":[[1846,20]]},"541":{"position":[[1849,20]]},"543":{"position":[[1812,20]]},"547":{"position":[[1688,20]]},"622":{"position":[[2061,20]]},"630":{"position":[[1885,20]]},"634":{"position":[[1742,20]]},"646":{"position":[[1811,20]]},"648":{"position":[[7470,20],[12920,20]]},"660":{"position":[[4187,20]]},"668":{"position":[[6448,20]]},"670":{"position":[[2809,20]]},"672":{"position":[[3726,20]]},"692":{"position":[[2093,20],[7053,20],[12184,20]]},"694":{"position":[[4711,20]]},"696":{"position":[[4502,20],[10390,20]]},"698":{"position":[[4759,20]]},"718":{"position":[[3709,20],[14135,20],[30344,20]]},"722":{"position":[[8679,20],[15179,20],[20960,20],[26900,20],[32496,20],[37644,20]]},"734":{"position":[[4704,20]]},"740":{"position":[[12326,20]]},"742":{"position":[[11786,20],[19081,20]]},"744":{"position":[[2910,20]]},"746":{"position":[[6688,20]]},"767":{"position":[[2619,20],[12115,20],[19226,20]]},"786":{"position":[[3412,20],[13511,20]]},"788":{"position":[[4160,20]]},"790":{"position":[[1906,20],[7462,20]]},"792":{"position":[[4609,20],[17154,20]]},"809":{"position":[[3412,20],[13547,20]]},"811":{"position":[[4008,20]]},"813":{"position":[[3720,20]]},"815":{"position":[[4765,20]]}}}],["fiber",{"_index":678,"t":{"88":{"position":[[93,6]]},"94":{"position":[[973,5],[1089,5]]}}}],["fiber.ctx",{"_index":722,"t":{"94":{"position":[[1535,11]]},"96":{"position":[[2369,11]]},"98":{"position":[[3648,11],[3858,11],[4493,11]]}}}],["fiber.new",{"_index":718,"t":{"94":{"position":[[1456,11]]},"96":{"position":[[1969,11]]},"98":{"position":[[3179,11]]}}}],["fiber.newerror(fiber.statusserviceunavail",{"_index":819,"t":{"98":{"position":[[4782,46],[5249,46]]}}}],["fiber.newerror(fiber.statusunauthor",{"_index":826,"t":{"98":{"position":[[5364,40]]}}}],["field",{"_index":484,"t":{"16":{"position":[[30244,6]]},"114":{"position":[[1719,5]]},"142":{"position":[[3074,6]]},"415":{"position":[[429,5],[851,5]]},"485":{"position":[[5595,6],[5687,6],[5943,6]]},"796":{"position":[[908,5]]}}}],["figur",{"_index":1592,"t":{"403":{"position":[[1889,6]]},"769":{"position":[[20932,6]]}}}],["file",{"_index":696,"t":{"94":{"position":[[536,4]]},"140":{"position":[[56,5],[228,4],[734,5]]},"142":{"position":[[1556,4],[4203,4]]},"144":{"position":[[578,4],[635,4],[1355,5],[2012,4],[2069,4],[2880,5]]},"154":{"position":[[199,4]]},"202":{"position":[[502,4]]},"263":{"position":[[407,6]]},"509":{"position":[[520,4]]},"802":{"position":[[61,5]]},"811":{"position":[[35,4]]},"813":{"position":[[51,6]]},"815":{"position":[[50,4]]}}}],["filter",{"_index":1294,"t":{"263":{"position":[[286,6],[502,9],[651,7]]},"267":{"position":[[4,7],[46,6],[148,6],[212,8]]},"269":{"position":[[586,6]]},"271":{"position":[[96,6],[314,8]]},"273":{"position":[[1336,6]]},"425":{"position":[[2051,6]]},"581":{"position":[[247,9]]},"587":{"position":[[435,6]]},"648":{"position":[[5635,6]]}}}],["final",{"_index":752,"t":{"96":{"position":[[1097,8]]},"98":{"position":[[1967,8]]},"142":{"position":[[1272,8],[2835,7],[3939,8],[5463,7]]},"273":{"position":[[748,5]]},"349":{"position":[[770,5]]},"365":{"position":[[873,8]]},"648":{"position":[[11211,8]]},"672":{"position":[[0,5]]},"696":{"position":[[15380,9]]},"746":{"position":[[0,5]]}}}],["find",{"_index":831,"t":{"102":{"position":[[81,4],[209,4]]},"349":{"position":[[1248,7],[1427,5]]},"399":{"position":[[156,4]]},"423":{"position":[[3252,4]]},"585":{"position":[[347,7]]},"692":{"position":[[16566,4]]},"698":{"position":[[2821,4]]},"769":{"position":[[5995,4],[27809,4]]}}}],["fine",{"_index":3,"t":{"2":{"position":[[37,4]]},"4":{"position":[[38,4]]},"8":{"position":[[0,4]]},"100":{"position":[[173,4]]},"263":{"position":[[19,4]]},"491":{"position":[[1108,4],[1432,4]]},"700":{"position":[[37,4]]},"724":{"position":[[201,4],[673,4]]}}}],["finish",{"_index":1551,"t":{"399":{"position":[[1945,9]]},"407":{"position":[[137,9]]}}}],["first",{"_index":690,"t":{"94":{"position":[[4,5]]},"98":{"position":[[11,6]]},"142":{"position":[[539,5],[3322,5]]},"144":{"position":[[1763,5]]},"168":{"position":[[76,5]]},"176":{"position":[[270,5]]},"257":{"position":[[0,5]]},"273":{"position":[[3647,5]]},"314":{"position":[[61,5]]},"318":{"position":[[16377,5]]},"338":{"position":[[5494,5]]},"387":{"position":[[10659,5]]},"391":{"position":[[91,6]]},"399":{"position":[[2096,7],[2142,6]]},"403":{"position":[[10608,6]]},"447":{"position":[[4,5]]},"467":{"position":[[5138,5]]},"477":{"position":[[1738,5]]},"505":{"position":[[27251,5]]},"525":{"position":[[5730,5]]},"576":{"position":[[212,5]]},"620":{"position":[[61,5]]},"624":{"position":[[5842,5]]},"670":{"position":[[991,6]]},"678":{"position":[[856,5]]},"692":{"position":[[396,5],[16550,6]]},"698":{"position":[[2515,6]]},"722":{"position":[[41159,6]]},"744":{"position":[[544,5],[902,6]]},"754":{"position":[[813,5]]},"767":{"position":[[24794,6]]},"786":{"position":[[26964,5]]},"809":{"position":[[26988,5]]},"815":{"position":[[440,6]]}}}],["fit",{"_index":1334,"t":{"275":{"position":[[461,3]]},"353":{"position":[[272,3]]}}}],["five",{"_index":514,"t":{"54":{"position":[[3933,4]]}}}],["flag",{"_index":1025,"t":{"148":{"position":[[272,5],[529,5]]},"152":{"position":[[112,4],[433,6],[503,4],[988,5],[1159,5]]},"156":{"position":[[316,4],[539,4]]},"158":{"position":[[315,4],[463,4]]},"160":{"position":[[90,6]]},"431":{"position":[[302,4],[597,4],[1146,5]]}}}],["flatten",{"_index":584,"t":{"68":{"position":[[120,10]]}}}],["flatten/expand",{"_index":1304,"t":{"269":{"position":[[229,14]]}}}],["flattened/expand",{"_index":1306,"t":{"269":{"position":[[452,18]]}}}],["flexibl",{"_index":1426,"t":{"343":{"position":[[334,11]]}}}],["flow",{"_index":2025,"t":{"628":{"position":[[1923,4]]}}}],["focu",{"_index":1602,"t":{"403":{"position":[[3221,5]]},"690":{"position":[[341,5]]},"692":{"position":[[402,5]]},"710":{"position":[[678,5]]},"712":{"position":[[19,5]]},"718":{"position":[[26,5]]},"758":{"position":[[716,5]]},"779":{"position":[[295,5]]},"802":{"position":[[339,5]]},"809":{"position":[[25,5]]}}}],["focus",{"_index":2508,"t":{"760":{"position":[[58,8],[273,8]]},"781":{"position":[[95,8]]},"804":{"position":[[101,8]]}}}],["folder",{"_index":91,"t":{"8":{"position":[[429,8]]},"12":{"position":[[188,7]]},"54":{"position":[[225,6],[352,8],[644,8],[1048,9],[2110,8],[3432,8],[3759,6],[3886,6]]},"60":{"position":[[326,6],[425,8],[564,9],[721,9],[1128,8],[1420,7],[2053,6],[2102,6],[2123,6],[2289,6],[2883,7],[2928,7]]},"68":{"position":[[804,6],[2663,7],[2688,6]]},"200":{"position":[[455,6]]},"261":{"position":[[136,6],[485,9],[1010,7],[1086,9],[1375,9],[1816,8],[2088,9],[2592,9],[3248,8]]},"273":{"position":[[2818,7]]},"296":{"position":[[555,7]]},"397":{"position":[[1437,6],[1525,6],[1561,7],[1573,6],[1631,6],[1643,6],[1679,7],[1700,6],[1732,7],[1976,6],[2060,7],[2506,6],[2541,7],[2721,6],[2757,7],[2807,6],[2821,7],[2856,7]]},"399":{"position":[[416,6],[574,6],[662,6],[698,7],[726,6],[738,6],[774,7],[1018,6],[1102,7],[1546,6],[1581,7],[1761,6],[1797,7],[1847,6],[1861,7],[1896,7],[2318,6],[2406,6],[2442,7],[2454,6],[2512,6],[2524,6],[2560,7],[2581,6],[2613,6],[2858,6],[2942,7],[3388,6],[3423,7],[3603,6],[3639,7],[3689,6],[3703,7],[3738,7],[3969,6],[4150,6]]},"401":{"position":[[809,6],[897,6],[933,7],[945,6],[1003,6],[1015,6],[1051,7],[1072,6],[1104,7],[1348,6],[1432,7],[1878,6],[1913,7],[2093,6],[2129,7],[2179,6],[2193,7],[2228,7],[2341,6],[3044,6]]},"403":{"position":[[2203,6],[5454,6],[5668,8],[5784,6],[6149,8],[6280,6],[6289,6],[6625,7],[7221,6],[7992,6],[9603,8],[10192,8]]},"405":{"position":[[1386,6]]},"407":{"position":[[51,6]]},"419":{"position":[[183,6],[517,9],[1280,6],[1420,6],[2351,6],[2383,8],[2475,8],[2826,9],[3156,8],[3664,8]]},"423":{"position":[[439,7],[849,7],[938,6],[1049,8],[1416,6],[1448,8],[1553,8],[1880,9],[2210,8],[2761,8],[3153,6],[3367,6]]},"429":{"position":[[940,6],[1071,6],[1233,9],[1535,8],[1557,9]]},"437":{"position":[[2492,7]]},"439":{"position":[[80,7]]},"453":{"position":[[194,6],[239,6]]},"455":{"position":[[228,6],[369,6],[533,9]]},"461":{"position":[[23,7],[98,7],[149,7],[174,6],[303,6],[408,6]]},"463":{"position":[[37,6],[210,6],[351,6],[429,8],[539,9],[871,8]]},"465":{"position":[[37,6],[155,6],[233,8],[365,9],[836,8],[1141,6]]},"469":{"position":[[815,6],[1881,6],[3272,6],[4461,6],[5207,6]]},"471":{"position":[[5663,6]]},"473":{"position":[[245,7],[309,7]]},"611":{"position":[[127,6]]},"613":{"position":[[255,6],[393,6],[680,9]]},"620":{"position":[[20,6],[214,8],[250,6],[533,8],[634,9]]},"622":{"position":[[82,6],[1099,8],[2203,8],[3632,8],[4859,8],[5642,8]]},"796":{"position":[[1256,6],[1304,7]]},"798":{"position":[[671,6]]},"802":{"position":[[71,8]]},"804":{"position":[[275,7],[346,6],[401,6],[422,7]]},"806":{"position":[[351,7]]},"813":{"position":[[39,7],[83,7],[290,6]]},"815":{"position":[[58,6]]}}}],["folder,folder#par",{"_index":1705,"t":{"429":{"position":[[972,22]]}}}],["folder/dr",{"_index":1544,"t":{"397":{"position":[[1908,12],[2190,12],[2344,12]]},"399":{"position":[[950,12],[1230,12],[1384,12],[2790,12],[3072,12],[3226,12]]},"401":{"position":[[1280,12],[1562,12],[1716,12]]},"403":{"position":[[8337,12],[8791,12]]}}}],["folder:budget",{"_index":2008,"t":{"622":{"position":[[184,14],[1147,17],[3687,17]]},"624":{"position":[[121,14],[938,17],[1939,17],[3146,17],[5024,17],[5063,16],[5390,14],[5529,14]]}}}],["folder:not",{"_index":1754,"t":{"461":{"position":[[527,13],[626,12],[688,12]]},"467":{"position":[[108,12],[848,15],[3154,14]]},"469":{"position":[[29,13],[68,12],[872,15],[3336,15]]},"471":{"position":[[5573,12],[5586,12]]}}}],["folder:plan",{"_index":553,"t":{"60":{"position":[[2168,18],[2351,18]]},"429":{"position":[[1980,18],[2646,17]]}}}],["folder:planning#editor",{"_index":289,"t":{"16":{"position":[[8443,22],[8964,22]]}}}],["folder:product\",\"relation\":\"viewer\",\"object\":\"document:roadmap",{"_index":291,"t":{"16":{"position":[[8504,65]]}}}],["folder:product#par",{"_index":1706,"t":{"429":{"position":[[1927,24],[2591,24]]}}}],["folder:sal",{"_index":1662,"t":{"419":{"position":[[1297,15],[1491,15]]},"423":{"position":[[176,15],[513,15],[3224,15]]}}}],["folder:{id",{"_index":1612,"t":{"403":{"position":[[6383,14]]}}}],["folder‚Äô",{"_index":1680,"t":{"423":{"position":[[1152,8]]}}}],["follow",{"_index":195,"t":{"16":{"position":[[3033,7],[5811,10],[7711,9],[10465,9],[11305,9],[11806,9],[12125,9],[17768,9],[23521,9],[29981,9]]},"50":{"position":[[10,9]]},"56":{"position":[[1908,9]]},"58":{"position":[[1405,9]]},"60":{"position":[[1980,9]]},"62":{"position":[[598,9]]},"64":{"position":[[675,9],[1526,9]]},"66":{"position":[[913,9],[1561,9]]},"68":{"position":[[1784,10]]},"70":{"position":[[10,9]]},"72":{"position":[[4,9]]},"80":{"position":[[54,9]]},"82":{"position":[[19,9]]},"94":{"position":[[155,9],[1022,9]]},"100":{"position":[[19,9]]},"116":{"position":[[19,9]]},"128":{"position":[[19,9]]},"130":{"position":[[4,9]]},"134":{"position":[[10,9]]},"138":{"position":[[58,6]]},"140":{"position":[[789,8]]},"144":{"position":[[1400,9],[2920,9]]},"152":{"position":[[389,9]]},"160":{"position":[[80,9]]},"162":{"position":[[10,9]]},"166":{"position":[[0,6]]},"168":{"position":[[133,9]]},"174":{"position":[[4,9]]},"176":{"position":[[319,6]]},"178":{"position":[[228,9]]},"182":{"position":[[10,9]]},"196":{"position":[[10,9]]},"202":{"position":[[478,9]]},"204":{"position":[[177,9],[932,10]]},"217":{"position":[[10,9]]},"221":{"position":[[177,9],[1035,9]]},"234":{"position":[[10,9]]},"238":{"position":[[177,9],[617,10]]},"245":{"position":[[118,8]]},"249":{"position":[[10,9]]},"261":{"position":[[21,9]]},"273":{"position":[[67,9],[296,9]]},"279":{"position":[[177,9],[311,8],[467,9],[782,10],[839,11],[929,11],[1122,10]]},"288":{"position":[[10262,10],[10962,9],[12127,9],[13708,9],[15026,9],[15961,9]]},"290":{"position":[[137,9],[185,9],[242,8],[295,11],[346,8]]},"292":{"position":[[10,9]]},"298":{"position":[[170,6]]},"304":{"position":[[415,9]]},"306":{"position":[[1078,9],[1561,10]]},"320":{"position":[[10,9]]},"328":{"position":[[875,9],[1064,10]]},"336":{"position":[[155,10]]},"338":{"position":[[256,10],[5551,6]]},"340":{"position":[[10,9]]},"345":{"position":[[12,9],[664,9]]},"347":{"position":[[12,9]]},"349":{"position":[[916,9]]},"351":{"position":[[8,9]]},"355":{"position":[[350,9],[1063,10]]},"365":{"position":[[1027,9]]},"369":{"position":[[206,8],[6125,9]]},"375":{"position":[[10,9]]},"379":{"position":[[177,9],[760,10]]},"385":{"position":[[135,10]]},"387":{"position":[[106,10],[5270,10],[10716,6]]},"389":{"position":[[10,9]]},"399":{"position":[[4623,9]]},"403":{"position":[[2457,9],[4974,9],[7015,9],[7293,9],[8181,9],[8450,9],[8639,9],[8904,9],[9069,9],[9251,9]]},"405":{"position":[[2366,6],[3725,6]]},"409":{"position":[[10,9]]},"417":{"position":[[225,9]]},"419":{"position":[[14,9]]},"423":{"position":[[26,9],[3071,9]]},"433":{"position":[[11,9]]},"437":{"position":[[1523,9],[2370,10]]},"451":{"position":[[10,9]]},"455":{"position":[[177,9],[901,10]]},"463":{"position":[[112,9]]},"465":{"position":[[103,10]]},"467":{"position":[[5190,6]]},"471":{"position":[[175,9]]},"473":{"position":[[10,9]]},"477":{"position":[[177,9],[670,10],[1795,6]]},"485":{"position":[[5606,9],[5954,9]]},"489":{"position":[[10,9]]},"493":{"position":[[177,9],[760,10]]},"501":{"position":[[59,10]]},"503":{"position":[[56,10],[731,10]]},"505":{"position":[[11172,9],[11501,9],[26764,9],[27308,6]]},"507":{"position":[[10,9]]},"509":{"position":[[496,9]]},"511":{"position":[[177,9],[648,10]]},"519":{"position":[[119,9]]},"523":{"position":[[350,9]]},"525":{"position":[[289,10],[5787,6]]},"527":{"position":[[10,9]]},"531":{"position":[[177,9],[601,10]]},"539":{"position":[[66,8]]},"541":{"position":[[94,9]]},"549":{"position":[[10,9]]},"553":{"position":[[177,9],[1072,10]]},"564":{"position":[[124,9]]},"569":{"position":[[6038,9],[11454,9]]},"571":{"position":[[456,9]]},"583":{"position":[[5883,9]]},"593":{"position":[[158,10]]},"605":{"position":[[18710,9]]},"609":{"position":[[10,9]]},"613":{"position":[[10,6],[879,10]]},"624":{"position":[[106,10],[5899,6]]},"628":{"position":[[1755,9]]},"630":{"position":[[53,9]]},"636":{"position":[[10,9]]},"640":{"position":[[45,9]]},"642":{"position":[[237,9]]},"652":{"position":[[11,9]]},"656":{"position":[[3,6]]},"660":{"position":[[58,9],[834,9],[3127,9]]},"666":{"position":[[187,9]]},"668":{"position":[[2790,9]]},"670":{"position":[[9155,9],[11985,9],[12184,9]]},"674":{"position":[[10,9]]},"686":{"position":[[8,9],[119,9],[182,9],[662,7]]},"696":{"position":[[8473,9],[20646,9]]},"698":{"position":[[20,9],[2986,9]]},"712":{"position":[[32,9]]},"714":{"position":[[8,9],[119,9],[199,9],[1113,7]]},"718":{"position":[[197,9],[537,9],[40393,11]]},"720":{"position":[[5590,9]]},"722":{"position":[[1588,9],[2768,9],[13429,9],[51475,9]]},"730":{"position":[[3,6]]},"734":{"position":[[58,9],[492,9],[2561,9]]},"740":{"position":[[298,9]]},"742":{"position":[[4517,9],[17255,9]]},"744":{"position":[[13889,9],[20350,9]]},"750":{"position":[[10,9]]},"762":{"position":[[8,9]]},"767":{"position":[[179,8],[10135,8],[17316,8],[24435,7]]},"769":{"position":[[7550,9],[22624,9],[30308,9],[35920,9],[37005,9],[37248,9]]},"783":{"position":[[18,9]]},"786":{"position":[[113,9],[251,9]]},"788":{"position":[[192,9],[2307,9]]},"790":{"position":[[5649,8],[16094,9]]},"792":{"position":[[390,9],[15054,10]]},"806":{"position":[[18,9]]},"809":{"position":[[200,9],[336,9],[28369,10]]},"811":{"position":[[170,9]]},"813":{"position":[[243,9],[1898,9],[14555,10]]},"815":{"position":[[2769,9]]},"817":{"position":[[19,9]]}}}],["followed_bi",{"_index":1338,"t":{"279":{"position":[[324,11],[491,12],[867,14],[1000,14]]},"290":{"position":[[399,14]]}}}],["fore",{"_index":2186,"t":{"692":{"position":[[26911,4]]}}}],["foreign",{"_index":1564,"t":{"401":{"position":[[483,7]]}}}],["forget",{"_index":1516,"t":{"393":{"position":[[81,6]]}}}],["form",{"_index":547,"t":{"60":{"position":[[8,4]]},"349":{"position":[[855,4]]},"403":{"position":[[1334,5],[1447,4]]},"405":{"position":[[865,6]]},"471":{"position":[[5994,4]]},"622":{"position":[[335,4]]},"722":{"position":[[13417,4]]}}}],["format",{"_index":517,"t":{"56":{"position":[[177,8]]},"156":{"position":[[55,6]]},"158":{"position":[[51,7]]},"160":{"position":[[103,7],[124,7],[163,7]]},"399":{"position":[[2088,7]]},"403":{"position":[[4047,6]]},"425":{"position":[[1773,7],[2461,7]]},"523":{"position":[[55,7]]},"788":{"position":[[8673,9]]},"811":{"position":[[9138,9]]}}}],["former",{"_index":2024,"t":{"628":{"position":[[1702,6]]}}}],["forth",{"_index":2616,"t":{"781":{"position":[[336,6]]}}}],["forward",{"_index":2606,"t":{"769":{"position":[[20527,7]]}}}],["found",{"_index":1952,"t":{"585":{"position":[[36,5]]},"605":{"position":[[18654,6]]},"792":{"position":[[14092,5]]},"813":{"position":[[13525,5]]}}}],["four",{"_index":275,"t":{"16":{"position":[[7340,4]]},"54":{"position":[[3722,4]]},"718":{"position":[[92,4]]},"809":{"position":[[106,4]]}}}],["fp",{"_index":727,"t":{"96":{"position":[[252,2]]},"98":{"position":[[223,2],[846,2]]}}}],["fp(async",{"_index":729,"t":{"96":{"position":[[301,8]]},"98":{"position":[[272,8],[992,8]]}}}],["framework",{"_index":614,"t":{"74":{"position":[[829,9],[877,10]]},"88":{"position":[[63,10]]},"92":{"position":[[74,10]]},"94":{"position":[[33,10],[112,10],[213,9],[564,9],[979,10],[1095,9]]}}}],["fred",{"_index":1987,"t":{"607":{"position":[[962,4],[1122,4],[6309,4]]}}}],["free",{"_index":2509,"t":{"760":{"position":[[107,7],[361,4],[398,4]]},"762":{"position":[[178,4]]},"767":{"position":[[874,4],[2707,4],[5145,4],[7151,4],[9089,4],[10883,4],[12256,4],[14066,4],[15582,4],[16795,4]]}}}],["frequent",{"_index":1465,"t":{"367":{"position":[[59,11]]}}}],["friend",{"_index":1559,"t":{"399":{"position":[[4533,6],[4736,7]]}}}],["friendli",{"_index":647,"t":{"80":{"position":[[7386,8]]}}}],["frontend",{"_index":2507,"t":{"758":{"position":[[455,8]]}}}],["full",{"_index":1918,"t":{"574":{"position":[[187,4]]},"696":{"position":[[740,4]]}}}],["func",{"_index":359,"t":{"16":{"position":[[13246,4],[18858,4],[24635,4]]},"80":{"position":[[2019,4]]},"86":{"position":[[505,4]]},"94":{"position":[[1435,4],[1523,4]]},"96":{"position":[[1948,4],[2357,4]]},"98":{"position":[[3158,4],[3636,4],[3838,4],[4467,4]]},"102":{"position":[[399,4]]},"112":{"position":[[653,4]]},"124":{"position":[[653,4]]},"170":{"position":[[550,4]]},"172":{"position":[[1085,4]]},"190":{"position":[[653,4]]},"213":{"position":[[1034,4]]},"215":{"position":[[1087,4],[6254,4]]},"221":{"position":[[2388,4],[7449,4],[12795,4],[17820,4]]},"230":{"position":[[1296,4]]},"232":{"position":[[1131,4]]},"245":{"position":[[1377,4]]},"247":{"position":[[1051,4],[6150,4]]},"257":{"position":[[629,4]]},"288":{"position":[[1132,4],[6038,4],[11400,4]]},"312":{"position":[[1227,4],[6256,4]]},"318":{"position":[[1361,4],[6831,4],[12065,4]]},"338":{"position":[[1268,4]]},"345":{"position":[[2202,4]]},"369":{"position":[[1330,4],[7147,4]]},"371":{"position":[[1342,4]]},"373":{"position":[[1059,4]]},"385":{"position":[[1108,4]]},"387":{"position":[[1168,4],[6419,4]]},"445":{"position":[[1230,4],[6280,4]]},"449":{"position":[[1191,4],[6406,4]]},"467":{"position":[[1069,4]]},"469":{"position":[[1151,4]]},"471":{"position":[[1241,4]]},"485":{"position":[[1307,4]]},"487":{"position":[[1369,4]]},"505":{"position":[[1440,4],[7097,4],[12512,4],[17620,4],[22663,4]]},"521":{"position":[[1080,4]]},"523":{"position":[[1490,4]]},"525":{"position":[[1303,4]]},"537":{"position":[[1210,4]]},"541":{"position":[[1213,4]]},"543":{"position":[[1176,4]]},"545":{"position":[[1055,4],[6001,4]]},"547":{"position":[[1052,4],[5991,4]]},"562":{"position":[[1224,4]]},"569":{"position":[[1524,4],[7077,4],[12503,4]]},"571":{"position":[[1609,4]]},"576":{"position":[[1254,4],[6588,4]]},"583":{"position":[[1252,4]]},"605":{"position":[[2353,4],[7946,4],[14191,4],[20443,4],[26101,4]]},"607":{"position":[[2199,4],[7871,4],[13630,4],[19372,4]]},"622":{"position":[[1425,4]]},"624":{"position":[[1178,4]]},"630":{"position":[[1249,4]]},"632":{"position":[[1099,4]]},"634":{"position":[[1106,4],[6470,4],[11523,4]]},"644":{"position":[[1860,4],[6896,4]]},"646":{"position":[[1175,4],[6364,4]]},"648":{"position":[[1242,4],[6834,4],[12284,4],[17814,4],[22894,4]]},"668":{"position":[[5812,4]]},"670":{"position":[[2173,4]]},"692":{"position":[[1457,4],[6417,4],[11548,4],[17731,4],[22847,4]]},"694":{"position":[[4075,4],[10345,4]]},"696":{"position":[[3866,4],[9754,4],[16606,4]]},"698":{"position":[[4123,4],[10320,4]]},"718":{"position":[[3073,4],[8338,4],[13499,4],[18721,4],[23884,4],[29708,4],[36291,4]]},"720":{"position":[[1115,4],[7814,4]]},"722":{"position":[[8043,4],[14543,4],[20324,4],[26264,4],[31860,4],[37008,4],[42228,4],[47335,4]]},"734":{"position":[[4068,4]]},"740":{"position":[[1410,4],[6525,4],[11690,4],[16878,4]]},"742":{"position":[[5521,4],[11150,4],[18445,4],[24419,4]]},"744":{"position":[[2274,4],[8950,4],[15407,4]]},"746":{"position":[[6052,4]]},"767":{"position":[[1983,4],[11479,4],[18590,4],[25977,4],[31157,4],[36196,4],[41255,4]]},"769":{"position":[[1279,4],[8610,4],[13959,4],[23706,4],[31360,4],[40347,4]]},"786":{"position":[[2776,4],[7806,4],[12875,4],[17862,4],[22907,4],[30057,4],[35101,4]]},"788":{"position":[[3524,4],[9803,4]]},"790":{"position":[[1270,4],[6826,4],[12004,4]]},"792":{"position":[[3973,4],[9987,4],[16518,4]]},"809":{"position":[[2776,4],[7827,4],[12911,4],[17892,4],[22931,4],[29568,4],[34606,4]]},"811":{"position":[[3372,4],[10275,4]]},"813":{"position":[[3084,4],[9408,4]]},"815":{"position":[[4129,4],[10937,4],[16108,4],[21216,4],[26413,4],[31519,4]]}}}],["function",{"_index":730,"t":{"96":{"position":[[310,8],[622,8],[873,8],[982,8]]},"98":{"position":[[281,8],[347,8],[1001,8],[1064,8],[1702,8],[1852,8]]},"273":{"position":[[1343,8]]}}}],["fundament",{"_index":1532,"t":{"397":{"position":[[457,11]]}}}],["further",{"_index":1599,"t":{"403":{"position":[[2665,7]]},"624":{"position":[[5588,7]]}}}],["futur",{"_index":42,"t":{"4":{"position":[[408,7]]},"393":{"position":[[178,7]]},"794":{"position":[[154,7]]}}}],["gabriel",{"_index":1992,"t":{"607":{"position":[[6788,7]]}}}],["gain",{"_index":1201,"t":{"219":{"position":[[175,5],[337,5]]}}}],["gamma",{"_index":2514,"t":{"762":{"position":[[143,5],[358,5]]},"767":{"position":[[10841,5],[12214,5],[14024,5],[15540,5],[16753,5],[18042,5],[19345,5],[21085,5],[22531,5],[23659,5]]}}}],["gener",{"_index":766,"t":{"96":{"position":[[1850,9],[2000,8]]},"98":{"position":[[3060,9],[3210,8]]},"160":{"position":[[8,9]]},"172":{"position":[[58,8]]},"393":{"position":[[543,7],[804,7],[1112,7]]},"405":{"position":[[463,7]]},"537":{"position":[[5465,8]]},"714":{"position":[[911,7]]},"716":{"position":[[270,9]]},"722":{"position":[[810,9],[970,8],[1257,8],[6794,9],[13266,8],[13288,8]]}}}],["get",{"_index":602,"t":{"70":{"position":[[172,7]]},"82":{"position":[[114,7]]},"296":{"position":[[0,7]]},"320":{"position":[[78,7]]},"389":{"position":[[134,7]]},"419":{"position":[[4054,7]]},"489":{"position":[[78,7]]},"792":{"position":[[8966,7]]},"813":{"position":[[8385,7]]}}}],["github",{"_index":571,"t":{"60":{"position":[[3542,7]]},"96":{"position":[[1906,6]]},"98":{"position":[[3116,6]]},"102":{"position":[[232,6]]},"219":{"position":[[313,6]]},"300":{"position":[[116,6]]},"340":{"position":[[196,6],[273,7]]},"417":{"position":[[374,7]]},"473":{"position":[[366,6]]},"507":{"position":[[311,6],[388,7]]},"527":{"position":[[280,6],[331,6]]},"549":{"position":[[334,6]]},"752":{"position":[[69,6]]},"758":{"position":[[678,6]]},"760":{"position":[[87,6]]},"773":{"position":[[112,6],[1181,6]]},"779":{"position":[[0,6],[104,6]]},"786":{"position":[[0,6],[27085,6]]},"788":{"position":[[0,6]]},"790":{"position":[[0,6]]},"792":{"position":[[3,7],[645,6]]},"794":{"position":[[0,6]]}}}],["github'",{"_index":2505,"t":{"758":{"position":[[139,8],[331,8]]},"760":{"position":[[48,9],[332,8]]},"773":{"position":[[36,8]]},"779":{"position":[[256,8]]},"781":{"position":[[0,8]]}}}],["github.com/gofiber/fiber/v2",{"_index":713,"t":{"94":{"position":[[1234,27],[1405,29]]},"96":{"position":[[1643,29]]},"98":{"position":[[2818,29]]}}}],["github.com/gofiber/jwt/v3",{"_index":714,"t":{"94":{"position":[[1262,25]]},"96":{"position":[[1681,27]]},"98":{"position":[[2856,27]]}}}],["github.com/golang",{"_index":715,"t":{"94":{"position":[[1288,17]]},"96":{"position":[[1709,18]]},"98":{"position":[[2884,18]]}}}],["github.com/openfga/go",{"_index":357,"t":{"16":{"position":[[13211,22],[18823,22],[24600,22]]},"80":{"position":[[1984,22]]},"86":{"position":[[470,22]]},"98":{"position":[[2922,22]]},"102":{"position":[[282,21],[369,22]]},"112":{"position":[[618,22]]},"124":{"position":[[618,22]]},"170":{"position":[[515,22]]},"172":{"position":[[1050,22]]},"190":{"position":[[618,22]]},"213":{"position":[[999,22]]},"215":{"position":[[1052,22],[6219,22]]},"221":{"position":[[2353,22],[7414,22],[12760,22],[17785,22]]},"230":{"position":[[1261,22]]},"232":{"position":[[1096,22]]},"245":{"position":[[1342,22]]},"247":{"position":[[1016,22],[6115,22]]},"257":{"position":[[594,22]]},"288":{"position":[[1097,22],[6003,22],[11365,22]]},"312":{"position":[[1192,22],[6221,22]]},"318":{"position":[[1326,22],[6796,22],[12030,22]]},"338":{"position":[[1233,22]]},"345":{"position":[[2167,22]]},"369":{"position":[[1295,22],[7112,22]]},"371":{"position":[[1307,22]]},"373":{"position":[[1024,22]]},"385":{"position":[[1073,22]]},"387":{"position":[[1133,22],[6384,22]]},"445":{"position":[[1195,22],[6245,22]]},"449":{"position":[[1156,22],[6371,22]]},"467":{"position":[[1034,22]]},"469":{"position":[[1116,22]]},"471":{"position":[[1206,22]]},"485":{"position":[[1272,22]]},"487":{"position":[[1334,22]]},"505":{"position":[[1405,22],[7062,22],[12477,22],[17585,22],[22628,22]]},"521":{"position":[[1045,22]]},"523":{"position":[[1455,22]]},"525":{"position":[[1268,22]]},"537":{"position":[[1175,22]]},"541":{"position":[[1178,22]]},"543":{"position":[[1141,22]]},"545":{"position":[[1020,22],[5966,22]]},"547":{"position":[[1017,22],[5956,22]]},"562":{"position":[[1189,22]]},"569":{"position":[[1489,22],[7042,22],[12468,22]]},"571":{"position":[[1574,22]]},"576":{"position":[[1219,22],[6553,22]]},"583":{"position":[[1217,22]]},"605":{"position":[[2318,22],[7911,22],[14156,22],[20408,22],[26066,22]]},"607":{"position":[[2164,22],[7836,22],[13595,22],[19337,22]]},"622":{"position":[[1390,22]]},"624":{"position":[[1143,22]]},"630":{"position":[[1214,22]]},"632":{"position":[[1064,22]]},"634":{"position":[[1071,22],[6435,22],[11488,22]]},"644":{"position":[[1825,22],[6861,22]]},"646":{"position":[[1140,22],[6329,22]]},"648":{"position":[[1207,22],[6799,22],[12249,22],[17779,22],[22859,22]]},"668":{"position":[[5777,22]]},"670":{"position":[[2138,22]]},"692":{"position":[[1422,22],[6382,22],[11513,22],[17696,22],[22812,22]]},"694":{"position":[[4040,22],[10310,22]]},"696":{"position":[[3831,22],[9719,22],[16571,22]]},"698":{"position":[[4088,22],[10285,22]]},"718":{"position":[[3038,22],[8303,22],[13464,22],[18686,22],[23849,22],[29673,22],[36256,22]]},"720":{"position":[[1080,22],[7779,22]]},"722":{"position":[[8008,22],[14508,22],[20289,22],[26229,22],[31825,22],[36973,22],[42193,22],[47300,22]]},"734":{"position":[[4033,22]]},"740":{"position":[[1375,22],[6490,22],[11655,22],[16843,22]]},"742":{"position":[[5486,22],[11115,22],[18410,22],[24384,22]]},"744":{"position":[[2239,22],[8915,22],[15372,22]]},"746":{"position":[[6017,22]]},"767":{"position":[[1948,22],[11444,22],[18555,22],[25942,22],[31122,22],[36161,22],[41220,22]]},"769":{"position":[[1244,22],[8575,22],[13924,22],[23671,22],[31325,22],[40312,22]]},"786":{"position":[[2741,22],[7771,22],[12840,22],[17827,22],[22872,22],[30022,22],[35066,22]]},"788":{"position":[[3489,22],[9768,22]]},"790":{"position":[[1235,22],[6791,22],[11969,22]]},"792":{"position":[[3938,22],[9952,22],[16483,22]]},"809":{"position":[[2741,22],[7792,22],[12876,22],[17857,22],[22896,22],[29533,22],[34571,22]]},"811":{"position":[[3337,22],[10240,22]]},"813":{"position":[[3049,22],[9373,22]]},"815":{"position":[[4094,22],[10902,22],[16073,22],[21181,22],[26378,22],[31484,22]]}}}],["give",{"_index":1169,"t":{"196":{"position":[[118,4],[207,4]]},"245":{"position":[[29,4]]},"296":{"position":[[729,6]]},"505":{"position":[[257,5],[308,5]]},"529":{"position":[[135,6]]},"628":{"position":[[1913,4]]},"696":{"position":[[8351,4]]},"742":{"position":[[17288,4]]},"769":{"position":[[18900,4],[28554,4],[35551,4]]},"817":{"position":[[84,4]]}}}],["given",{"_index":449,"t":{"16":{"position":[[23144,5],[23442,5]]},"44":{"position":[[104,5]]},"118":{"position":[[101,5]]},"263":{"position":[[259,6]]},"397":{"position":[[884,5]]},"405":{"position":[[645,5]]},"423":{"position":[[555,5]]},"505":{"position":[[11389,5],[27030,5]]},"720":{"position":[[5301,5]]},"752":{"position":[[179,5]]},"767":{"position":[[24087,5]]}}}],["global",{"_index":125,"t":{"14":{"position":[[34,6]]}}}],["go",{"_index":323,"t":{"16":{"position":[[12258,2],[17870,2],[23642,2]]},"54":{"position":[[66,2]]},"78":{"position":[[8,2]]},"80":{"position":[[717,2]]},"86":{"position":[[8,2]]},"90":{"position":[[8,2]]},"94":{"position":[[52,2],[1032,2],[1205,2],[1224,2]]},"96":{"position":[[110,2]]},"98":{"position":[[8,2],[5445,2]]},"102":{"position":[[58,2],[218,2],[272,2],[756,2]]},"104":{"position":[[139,2],[154,2],[184,2]]},"108":{"position":[[8,2]]},"112":{"position":[[81,2]]},"114":{"position":[[87,2]]},"120":{"position":[[8,2]]},"124":{"position":[[81,2]]},"126":{"position":[[82,2]]},"144":{"position":[[418,5],[1852,5]]},"170":{"position":[[77,2]]},"172":{"position":[[260,5],[390,2]]},"186":{"position":[[8,2]]},"190":{"position":[[81,2]]},"192":{"position":[[69,2]]},"194":{"position":[[224,2]]},"213":{"position":[[92,2]]},"215":{"position":[[102,2],[5267,2]]},"221":{"position":[[1407,2],[6470,2],[11810,2],[16833,2]]},"230":{"position":[[354,2]]},"232":{"position":[[145,2]]},"245":{"position":[[402,2]]},"247":{"position":[[113,2],[5174,2]]},"253":{"position":[[8,2]]},"257":{"position":[[57,2]]},"259":{"position":[[72,2],[1225,2]]},"261":{"position":[[1055,2],[2057,2]]},"288":{"position":[[199,2],[5103,2],[10281,2]]},"312":{"position":[[241,2],[5271,2]]},"318":{"position":[[360,2],[5845,2],[11079,2]]},"338":{"position":[[275,2]]},"345":{"position":[[1219,2]]},"367":{"position":[[22,5]]},"369":{"position":[[223,2],[6159,2]]},"371":{"position":[[125,2]]},"373":{"position":[[71,2]]},"385":{"position":[[154,2]]},"387":{"position":[[175,2],[5425,2]]},"395":{"position":[[244,2]]},"403":{"position":[[284,5],[293,2]]},"429":{"position":[[1840,2]]},"435":{"position":[[21,5]]},"445":{"position":[[241,2],[5292,2]]},"449":{"position":[[201,2],[5416,2]]},"467":{"position":[[129,2]]},"469":{"position":[[131,2]]},"471":{"position":[[248,2]]},"485":{"position":[[315,2]]},"487":{"position":[[380,2]]},"505":{"position":[[363,2],[6111,2],[11526,2],[16632,2],[21676,2]]},"521":{"position":[[138,2]]},"523":{"position":[[471,2]]},"525":{"position":[[308,2]]},"537":{"position":[[217,2]]},"541":{"position":[[224,2]]},"543":{"position":[[235,2]]},"545":{"position":[[81,2],[5027,2]]},"547":{"position":[[118,2],[5016,2]]},"562":{"position":[[240,2]]},"569":{"position":[[490,2],[6062,2],[11478,2]]},"571":{"position":[[693,2]]},"576":{"position":[[231,2],[5565,2]]},"583":{"position":[[152,2]]},"605":{"position":[[1368,2],[6961,2],[13203,2],[19458,2],[25115,2]]},"607":{"position":[[1213,2],[6882,2],[12643,2],[18385,2]]},"622":{"position":[[367,2]]},"624":{"position":[[182,2]]},"630":{"position":[[92,2]]},"632":{"position":[[111,2]]},"634":{"position":[[92,2],[5481,2],[10531,2]]},"644":{"position":[[873,2],[5910,2]]},"646":{"position":[[182,2],[5374,2]]},"648":{"position":[[157,2],[5816,2],[11264,2],[16827,2],[21909,2]]},"660":{"position":[[36,5],[3166,2]]},"666":{"position":[[237,2],[2128,2],[4045,2],[5941,2],[7855,2],[9757,2]]},"668":{"position":[[2815,2],[4802,2],[10068,2]]},"670":{"position":[[1134,2],[6600,2],[9425,2]]},"672":{"position":[[2705,2]]},"692":{"position":[[509,2],[5465,2],[10453,2],[16744,2],[21862,2]]},"694":{"position":[[2927,2],[9355,2]]},"696":{"position":[[2830,2],[8523,2],[15622,2]]},"698":{"position":[[3025,2],[9331,2]]},"718":{"position":[[2066,2],[7345,2],[12492,2],[17728,2],[22884,2],[28451,2],[35298,2]]},"720":{"position":[[127,2],[6827,2]]},"722":{"position":[[6871,2],[13467,2],[19204,2],[25229,2],[30882,2],[36047,2],[41243,2],[46335,2]]},"734":{"position":[[36,5],[2600,2]]},"740":{"position":[[427,2],[5538,2],[10682,2],[15894,2]]},"742":{"position":[[4542,2],[9774,2],[17314,2],[23436,2]]},"744":{"position":[[1087,2],[7782,2],[14238,2]]},"746":{"position":[[3328,2]]},"765":{"position":[[25,5]]},"767":{"position":[[196,2],[10152,2],[17333,2],[24991,2],[30170,2],[35206,2],[40264,2]]},"769":{"position":[[292,2],[7627,2],[12967,2],[22715,2],[30378,2],[39365,2]]},"773":{"position":[[163,5]]},"786":{"position":[[1827,2],[6818,2],[11926,2],[16874,2],[21918,2],[29069,2],[34113,2]]},"788":{"position":[[2346,2],[8813,2]]},"790":{"position":[[297,2],[5821,2],[11016,2]]},"792":{"position":[[2940,2],[8995,2],[15547,2]]},"809":{"position":[[1824,2],[6836,2],[11963,2],[16905,2],[21942,2],[28581,2],[33618,2]]},"811":{"position":[[2103,2],[9284,2]]},"813":{"position":[[1936,2],[8414,2]]},"815":{"position":[[2808,2],[9942,2],[15111,2],[20217,2],[25416,2],[30522,2]]}}}],["go.mod",{"_index":836,"t":{"102":{"position":[[778,6]]}}}],["go.sum",{"_index":837,"t":{"102":{"position":[[789,6]]}}}],["goal",{"_index":2154,"t":{"682":{"position":[[183,4]]},"690":{"position":[[175,4]]},"716":{"position":[[4,4]]},"769":{"position":[[198,5]]}}}],["gofiber/fib",{"_index":708,"t":{"94":{"position":[[1049,13]]}}}],["gofiber/jwt",{"_index":709,"t":{"94":{"position":[[1116,11]]}}}],["golang",{"_index":34,"t":{"4":{"position":[[323,7]]},"94":{"position":[[1172,6]]}}}],["good",{"_index":87,"t":{"8":{"position":[[339,4]]},"132":{"position":[[10,4]]},"154":{"position":[[349,4]]},"769":{"position":[[12637,5],[28089,5]]}}}],["googl",{"_index":88,"t":{"8":{"position":[[363,6]]},"14":{"position":[[165,7],[189,6]]},"16":{"position":[[30339,6]]},"58":{"position":[[2238,6]]},"60":{"position":[[3509,6]]},"273":{"position":[[2772,6],[2939,6]]},"275":{"position":[[501,6]]},"300":{"position":[[0,6]]},"304":{"position":[[489,6]]},"340":{"position":[[92,6],[168,6]]},"395":{"position":[[304,6]]},"473":{"position":[[216,6]]},"507":{"position":[[207,6],[283,6]]},"527":{"position":[[156,6],[243,6]]},"796":{"position":[[40,6]]},"802":{"position":[[0,6],[136,6],[294,6]]},"804":{"position":[[0,6]]},"809":{"position":[[63,6],[27111,6]]},"811":{"position":[[0,6]]},"815":{"position":[[0,6]]}}}],["google'",{"_index":123,"t":{"14":{"position":[[12,9]]}}}],["govern",{"_index":1452,"t":{"353":{"position":[[537,6]]},"660":{"position":[[306,8]]}}}],["graduat",{"_index":1207,"t":{"219":{"position":[[403,9]]}}}],["grain",{"_index":4,"t":{"2":{"position":[[42,7]]},"4":{"position":[[43,7]]},"8":{"position":[[5,7]]},"100":{"position":[[178,7]]},"263":{"position":[[24,7]]},"491":{"position":[[1113,7]]},"700":{"position":[[42,5]]},"724":{"position":[[206,5],[678,7]]}}}],["grant",{"_index":72,"t":{"8":{"position":[[44,5],[397,7],[448,7]]},"10":{"position":[[215,7],[248,7]]},"82":{"position":[[265,8]]},"202":{"position":[[36,5],[295,5],[441,8]]},"204":{"position":[[1013,5]]},"206":{"position":[[48,5]]},"221":{"position":[[21931,5]]},"223":{"position":[[48,5]]},"236":{"position":[[36,5],[92,8]]},"238":{"position":[[732,5]]},"240":{"position":[[89,5]]},"249":{"position":[[107,8],[195,8]]},"279":{"position":[[1237,5],[1332,5]]},"281":{"position":[[89,5]]},"283":{"position":[[24,5]]},"296":{"position":[[180,8],[281,5],[892,8]]},"304":{"position":[[300,8]]},"306":{"position":[[1642,5]]},"308":{"position":[[48,5]]},"328":{"position":[[1145,5]]},"330":{"position":[[48,5]]},"343":{"position":[[322,8],[349,8]]},"353":{"position":[[214,5]]},"355":{"position":[[1154,5]]},"359":{"position":[[48,5]]},"377":{"position":[[36,5],[122,8]]},"425":{"position":[[315,7]]},"435":{"position":[[617,8]]},"455":{"position":[[1016,5]]},"457":{"position":[[89,5]]},"473":{"position":[[384,5]]},"475":{"position":[[36,5],[183,5]]},"477":{"position":[[785,5]]},"479":{"position":[[89,5]]},"491":{"position":[[784,5],[846,5],[921,5]]},"493":{"position":[[875,5]]},"495":{"position":[[89,5]]},"503":{"position":[[352,7]]},"509":{"position":[[60,5],[313,5],[459,8]]},"511":{"position":[[763,5]]},"513":{"position":[[89,5]]},"527":{"position":[[287,8]]},"529":{"position":[[36,5]]},"531":{"position":[[716,5]]},"533":{"position":[[89,5]]},"553":{"position":[[1187,5]]},"555":{"position":[[89,5]]},"591":{"position":[[295,7]]},"593":{"position":[[304,5]]},"595":{"position":[[89,5]]},"613":{"position":[[960,5]]},"615":{"position":[[48,5]]},"660":{"position":[[713,6]]},"678":{"position":[[365,5],[719,8],[989,7]]},"692":{"position":[[327,5]]},"706":{"position":[[365,5]]},"754":{"position":[[676,8],[905,7]]},"769":{"position":[[20335,5]]},"788":{"position":[[85,8]]}}}],["granular",{"_index":1806,"t":{"499":{"position":[[151,8]]},"704":{"position":[[518,8]]}}}],["graph",{"_index":1911,"t":{"571":{"position":[[130,5]]},"574":{"position":[[192,5]]}}}],["green",{"_index":1555,"t":{"399":{"position":[[2215,6]]},"401":{"position":[[536,6]]}}}],["grid",{"_index":2256,"t":{"710":{"position":[[545,4]]}}}],["group",{"_index":92,"t":{"8":{"position":[[486,6]]},"16":{"position":[[4868,5]]},"56":{"position":[[313,5]]},"196":{"position":[[175,5],[214,5]]},"200":{"position":[[110,5],[200,6],[232,5],[317,6]]},"202":{"position":[[44,5],[148,5],[303,5]]},"204":{"position":[[957,7],[1002,6],[1019,6],[1583,8]]},"206":{"position":[[37,6],[54,6]]},"208":{"position":[[505,8]]},"217":{"position":[[54,6],[75,6],[117,7],[139,5],[177,5]]},"219":{"position":[[68,5],[498,5],[710,6],[784,6]]},"221":{"position":[[11783,5],[21875,7],[21920,6],[21937,6],[21987,5],[22032,5],[22595,8]]},"223":{"position":[[37,6],[54,6]]},"225":{"position":[[31,5]]},"227":{"position":[[505,8]]},"234":{"position":[[54,6],[75,6],[117,7],[139,5],[173,5]]},"238":{"position":[[1302,8]]},"242":{"position":[[505,8]]},"261":{"position":[[93,5],[319,8],[620,8],[825,8]]},"279":{"position":[[1902,8]]},"285":{"position":[[505,8]]},"296":{"position":[[229,6],[256,5],[314,6]]},"304":{"position":[[364,7],[719,5]]},"306":{"position":[[1586,7],[1631,6],[1648,6],[2212,8]]},"308":{"position":[[37,6],[54,6]]},"310":{"position":[[505,8]]},"324":{"position":[[437,6]]},"328":{"position":[[1089,7],[1134,6],[1151,6],[1715,8]]},"330":{"position":[[37,6],[54,6]]},"332":{"position":[[505,8]]},"343":{"position":[[91,5],[202,6]]},"347":{"position":[[1269,7]]},"351":{"position":[[58,5],[119,5]]},"355":{"position":[[1143,6],[1160,6]]},"359":{"position":[[37,6],[54,6]]},"379":{"position":[[1294,8]]},"381":{"position":[[505,8]]},"397":{"position":[[1125,6]]},"403":{"position":[[605,8],[1796,5],[1840,7],[2701,6],[2943,7],[4914,5],[5198,7]]},"405":{"position":[[27,5]]},"419":{"position":[[140,5],[453,8],[1162,5],[1827,6],[1889,5],[2308,5],[2660,8],[3987,6]]},"421":{"position":[[142,5],[643,5]]},"423":{"position":[[1296,5],[1373,5],[1714,8],[2301,8],[2852,8],[3120,5]]},"437":{"position":[[3201,8]]},"443":{"position":[[505,8]]},"451":{"position":[[88,6],[118,5]]},"453":{"position":[[572,7]]},"455":{"position":[[1586,8]]},"459":{"position":[[505,8]]},"477":{"position":[[1355,8]]},"481":{"position":[[505,8]]},"491":{"position":[[172,5]]},"493":{"position":[[1445,8]]},"497":{"position":[[505,8]]},"509":{"position":[[49,6],[66,6],[166,5],[321,5]]},"511":{"position":[[1333,8]]},"515":{"position":[[505,8]]},"517":{"position":[[68,5]]},"523":{"position":[[13,6]]},"527":{"position":[[50,6],[79,5],[135,6],[182,6]]},"531":{"position":[[1286,8]]},"535":{"position":[[505,8]]},"553":{"position":[[1757,8]]},"557":{"position":[[505,8]]},"593":{"position":[[874,8]]},"597":{"position":[[505,8]]},"613":{"position":[[904,7],[949,6],[966,6],[1530,8]]},"615":{"position":[[37,6],[54,6]]},"617":{"position":[[505,8]]},"636":{"position":[[289,6],[320,7]]},"640":{"position":[[578,8]]},"658":{"position":[[365,8]]},"674":{"position":[[50,6]]},"678":{"position":[[1031,7],[1076,6],[1116,6],[1216,5],[1262,6]]},"684":{"position":[[223,7],[243,7],[293,5],[353,6]]},"686":{"position":[[395,5],[507,5]]},"696":{"position":[[57,7],[99,6],[127,7],[147,6],[196,5],[267,6],[333,6],[2760,5]]},"702":{"position":[[20,5],[87,6]]},"704":{"position":[[163,5],[303,6]]},"732":{"position":[[366,8]]},"750":{"position":[[50,6]]},"773":{"position":[[256,5],[304,6]]},"796":{"position":[[138,5],[186,6]]}}}],["group#memb",{"_index":521,"t":{"56":{"position":[[673,12]]},"423":{"position":[[1115,12],[3295,12]]}}}],["group#member,us",{"_index":1284,"t":{"261":{"position":[[167,19],[220,19]]}}}],["group'",{"_index":1212,"t":{"219":{"position":[[576,7]]}}}],["group1",{"_index":2211,"t":{"696":{"position":[[8383,6]]}}}],["group:abc#memb",{"_index":1282,"t":{"259":{"position":[[3051,19]]}}}],["group:market",{"_index":518,"t":{"56":{"position":[[279,15]]}}}],["group:marketing#memb",{"_index":520,"t":{"56":{"position":[[634,22]]}}}],["group:sal",{"_index":1660,"t":{"419":{"position":[[1222,14],[1957,14]]},"421":{"position":[[197,14],[703,14]]},"423":{"position":[[148,14]]}}}],["group:sales#memb",{"_index":1664,"t":{"419":{"position":[[1437,21]]},"423":{"position":[[388,18],[459,21],[561,18],[670,18],[3170,21]]}}}],["groups/contain",{"_index":1581,"t":{"403":{"position":[[439,17]]}}}],["grow",{"_index":1847,"t":{"529":{"position":[[258,6]]},"537":{"position":[[5617,6]]}}}],["grpc",{"_index":867,"t":{"130":{"position":[[156,4]]},"138":{"position":[[295,4],[414,4]]},"140":{"position":[[833,4]]},"142":{"position":[[2574,4],[5205,4]]},"150":{"position":[[72,4],[234,4]]}}}],["grpc.health.v1.health/check",{"_index":1033,"t":{"150":{"position":[[90,28],[388,27]]}}}],["grpcurl",{"_index":1041,"t":{"150":{"position":[[355,7]]}}}],["guarante",{"_index":1061,"t":{"152":{"position":[[810,10]]}}}],["guard",{"_index":2152,"t":{"678":{"position":[[636,6],[1196,6],[1235,6]]},"684":{"position":[[37,6],[260,6],[312,6]]},"686":{"position":[[234,5],[340,5]]},"690":{"position":[[34,6],[305,5]]},"692":{"position":[[41,5],[134,6]]},"694":{"position":[[167,5],[335,6],[2519,6],[2607,6]]},"696":{"position":[[163,6],[215,6],[2727,6],[8373,6]]},"702":{"position":[[187,6]]}}}],["guest",{"_index":1383,"t":{"304":{"position":[[774,7]]},"712":{"position":[[111,6]]},"714":{"position":[[607,5]]},"716":{"position":[[797,5],[990,5],[1144,6],[1357,8],[1634,8],[1849,5],[1855,7]]},"718":{"position":[[142,7],[374,5],[716,6],[929,8],[1206,8],[28207,5],[28271,8],[29272,5],[29338,8],[30631,5],[32325,5],[32399,8],[33767,5],[34905,5],[40666,5],[40714,6],[40751,5],[40801,6]]},"720":{"position":[[5455,6],[5965,6],[6405,8],[6682,8],[12165,5],[12213,6],[12250,5],[12300,6]]},"722":{"position":[[377,5],[1017,5],[2403,7],[2673,7],[3911,7],[4181,7],[4657,6],[5373,8],[5650,8],[6297,7],[6567,7],[35972,5],[52395,5],[52445,6]]}}}],["guid",{"_index":153,"t":{"16":{"position":[[294,5]]},"52":{"position":[[951,5]]},"72":{"position":[[42,5]]},"166":{"position":[[11,6],[65,5],[150,5]]},"202":{"position":[[8,5]]},"204":{"position":[[28,5]]},"219":{"position":[[8,5]]},"221":{"position":[[28,5]]},"236":{"position":[[8,5]]},"238":{"position":[[28,5]]},"277":{"position":[[8,5]]},"279":{"position":[[28,5]]},"292":{"position":[[218,6]]},"294":{"position":[[17,7]]},"304":{"position":[[8,5]]},"306":{"position":[[22,6]]},"322":{"position":[[17,6]]},"326":{"position":[[14,6]]},"328":{"position":[[26,6]]},"353":{"position":[[8,5]]},"355":{"position":[[22,6]]},"365":{"position":[[225,6]]},"377":{"position":[[8,5]]},"379":{"position":[[28,5]]},"391":{"position":[[311,5]]},"393":{"position":[[318,5]]},"395":{"position":[[231,6]]},"411":{"position":[[17,6]]},"435":{"position":[[8,5]]},"437":{"position":[[28,5]]},"453":{"position":[[8,5]]},"455":{"position":[[28,5]]},"475":{"position":[[8,5]]},"477":{"position":[[28,5]]},"483":{"position":[[12,7]]},"491":{"position":[[8,5]]},"493":{"position":[[28,5]]},"509":{"position":[[8,5]]},"511":{"position":[[28,5]]},"529":{"position":[[8,5]]},"531":{"position":[[28,5]]},"551":{"position":[[8,5]]},"553":{"position":[[28,5]]},"589":{"position":[[125,5],[192,5],[260,5],[335,5]]},"591":{"position":[[8,5]]},"593":{"position":[[26,6]]},"611":{"position":[[8,5]]},"613":{"position":[[22,6]]},"624":{"position":[[5677,6]]},"638":{"position":[[119,6]]},"640":{"position":[[5,5]]},"656":{"position":[[15,6]]},"660":{"position":[[22,6]]},"674":{"position":[[410,6]]},"678":{"position":[[28,5]]},"706":{"position":[[28,5]]},"730":{"position":[[15,6]]},"734":{"position":[[22,6]]},"736":{"position":[[19,5]]},"742":{"position":[[9751,5]]},"748":{"position":[[22,5]]},"750":{"position":[[400,6]]},"754":{"position":[[28,5]]},"775":{"position":[[28,5]]},"798":{"position":[[28,5]]}}}],["guidanc",{"_index":1939,"t":{"583":{"position":[[134,9]]}}}],["guidelin",{"_index":864,"t":{"130":{"position":[[33,10]]},"174":{"position":[[33,10]]}}}],["h",{"_index":429,"t":{"16":{"position":[[16729,1],[16831,1],[22341,1],[22443,1],[28092,1],[28194,1]]},"80":{"position":[[6703,1],[6805,1]]},"86":{"position":[[2419,1]]},"114":{"position":[[1391,1],[1493,1]]},"126":{"position":[[1405,1],[1507,1]]},"142":{"position":[[4482,3]]},"192":{"position":[[1358,1],[1460,1]]},"194":{"position":[[1518,1],[1620,1]]},"213":{"position":[[4520,1],[4622,1]]},"215":{"position":[[4561,1],[4663,1],[9734,1],[9836,1]]},"221":{"position":[[5850,1],[5952,1],[11045,1],[11147,1],[16269,1],[16371,1],[21300,1],[21402,1]]},"230":{"position":[[4779,1],[4881,1]]},"232":{"position":[[4608,1],[4710,1]]},"245":{"position":[[4821,1],[4923,1]]},"247":{"position":[[4522,1],[4624,1],[9597,1],[9699,1]]},"259":{"position":[[637,1],[739,1],[2220,1],[2322,1]]},"261":{"position":[[1664,1],[1766,1],[3096,1],[3198,1]]},"288":{"position":[[4591,1],[4693,1],[9500,1],[9602,1],[15551,1],[15653,1]]},"312":{"position":[[4704,1],[4806,1],[9730,1],[9832,1]]},"318":{"position":[[5023,1],[5125,1],[10308,1],[10410,1],[15542,1],[15644,1]]},"338":{"position":[[4766,1],[4868,1]]},"345":{"position":[[5670,1],[5772,1]]},"369":{"position":[[5382,1],[5484,1],[10630,1],[10732,1]]},"371":{"position":[[5724,1],[5826,1]]},"373":{"position":[[4542,1],[4644,1]]},"385":{"position":[[4630,1],[4732,1]]},"387":{"position":[[4666,1],[4768,1],[9920,1],[10022,1]]},"429":{"position":[[3208,1],[3310,1]]},"445":{"position":[[4716,1],[4818,1],[9763,1],[9865,1]]},"449":{"position":[[4680,1],[4782,1],[9895,1],[9997,1]]},"467":{"position":[[4549,1],[4651,1]]},"469":{"position":[[4870,1],[4972,1]]},"471":{"position":[[4739,1],[4841,1]]},"485":{"position":[[4942,1],[5044,1]]},"487":{"position":[[4855,1],[4957,1]]},"505":{"position":[[5402,1],[5504,1],[10574,1],[10676,1],[15989,1],[16091,1],[21103,1],[21205,1],[26143,1],[26245,1]]},"521":{"position":[[4566,1],[4668,1]]},"523":{"position":[[5206,1],[5308,1]]},"525":{"position":[[4807,1],[4909,1]]},"537":{"position":[[4922,1],[5024,1]]},"541":{"position":[[4913,1],[5015,1]]},"543":{"position":[[4659,1],[4761,1]]},"545":{"position":[[4496,1],[4598,1],[9442,1],[9544,1]]},"547":{"position":[[4511,1],[4613,1],[9435,1],[9537,1]]},"562":{"position":[[4695,1],[4797,1]]},"569":{"position":[[5142,1],[5244,1],[10617,1],[10719,1],[16073,1],[16175,1]]},"571":{"position":[[4873,1],[4975,1]]},"576":{"position":[[4848,1],[4950,1],[10182,1],[10284,1]]},"583":{"position":[[5137,1],[5239,1]]},"605":{"position":[[5827,1],[5929,1],[11420,1],[11522,1],[17674,1],[17776,1],[23917,1],[24019,1],[29578,1],[29680,1]]},"607":{"position":[[5676,1],[5778,1],[11357,1],[11459,1],[17110,1],[17212,1],[22852,1],[22954,1]]},"622":{"position":[[5258,1],[5360,1]]},"624":{"position":[[4685,1],[4787,1]]},"630":{"position":[[5451,1],[5553,1]]},"632":{"position":[[4582,1],[4684,1]]},"634":{"position":[[4804,1],[4906,1],[9956,1],[10058,1],[15018,1],[15120,1]]},"644":{"position":[[5340,1],[5442,1],[10373,1],[10475,1]]},"646":{"position":[[4813,1],[4915,1],[9853,1],[9955,1]]},"648":{"position":[[4928,1],[5030,1],[10621,1],[10723,1],[16074,1],[16176,1],[21294,1],[21396,1],[26368,1],[26470,1]]},"660":{"position":[[8129,1],[8231,1]]},"666":{"position":[[1556,1],[1658,1],[3455,1],[3557,1],[5364,1],[5466,1],[7272,1],[7374,1],[9178,1],[9280,1],[11088,1],[11190,1]]},"668":{"position":[[4138,1],[4240,1],[9501,1],[9603,1],[11387,1],[11489,1]]},"670":{"position":[[5946,1],[6048,1],[8530,1],[8632,1],[11359,1],[11461,1]]},"672":{"position":[[7668,1],[7770,1]]},"692":{"position":[[4961,1],[5063,1],[9933,1],[10035,1],[15639,1],[15741,1],[21211,1],[21313,1],[26321,1],[26423,1]]},"694":{"position":[[8398,1],[8500,1],[13834,1],[13936,1]]},"696":{"position":[[7707,1],[7809,1],[14326,1],[14428,1],[20077,1],[20179,1]]},"698":{"position":[[8223,1],[8325,1],[13806,1],[13908,1]]},"718":{"position":[[6753,1],[6855,1],[11836,1],[11938,1],[17179,1],[17281,1],[22219,1],[22321,1],[27403,1],[27505,1],[34282,1],[34384,1],[39789,1],[39891,1]]},"720":{"position":[[4598,1],[4700,1],[11294,1],[11396,1]]},"722":{"position":[[12365,1],[12467,1],[18430,1],[18532,1],[24416,1],[24518,1],[30102,1],[30204,1],[35454,1],[35556,1],[40551,1],[40653,1],[45702,1],[45804,1],[50854,1],[50956,1]]},"734":{"position":[[9347,1],[9449,1]]},"740":{"position":[[4878,1],[4980,1],[10005,1],[10107,1],[15373,1],[15475,1],[20349,1],[20451,1]]},"742":{"position":[[8977,1],[9079,1],[16081,1],[16183,1],[22569,1],[22671,1],[27887,1],[27989,1]]},"744":{"position":[[6563,1],[6665,1],[13184,1],[13286,1],[19644,1],[19746,1]]},"746":{"position":[[15675,1],[15777,1]]},"767":{"position":[[8363,1],[8465,1],[16263,1],[16365,1],[23164,1],[23266,1],[29454,1],[29556,1],[34637,1],[34739,1],[39685,1],[39787,1],[44747,1],[44849,1]]},"769":{"position":[[4759,1],[4861,1],[12078,1],[12180,1],[17454,1],[17556,1],[27198,1],[27300,1],[34825,1],[34927,1],[43812,1],[43914,1]]},"786":{"position":[[6283,1],[6385,1],[11289,1],[11391,1],[16382,1],[16484,1],[21345,1],[21447,1],[26393,1],[26495,1],[33540,1],[33642,1],[38584,1],[38686,1]]},"788":{"position":[[7789,1],[7891,1],[13292,1],[13394,1]]},"790":{"position":[[4849,1],[4951,1],[10500,1],[10602,1],[15487,1],[15589,1]]},"792":{"position":[[7805,1],[7907,1],[13482,1],[13584,1],[20091,1],[20193,1]]},"809":{"position":[[6292,1],[6394,1],[11319,1],[11421,1],[16415,1],[16517,1],[21372,1],[21474,1],[26417,1],[26519,1],[33048,1],[33150,1],[38089,1],[38191,1]]},"811":{"position":[[8056,1],[8158,1],[13767,1],[13869,1]]},"813":{"position":[[7259,1],[7361,1],[12909,1],[13011,1]]},"815":{"position":[[8895,1],[8997,1],[14441,1],[14543,1],[19618,1],[19720,1],[24732,1],[24834,1],[29923,1],[30025,1],[35029,1],[35131,1]]}}}],["hand",{"_index":542,"t":{"58":{"position":[[1231,4]]},"692":{"position":[[21786,5]]},"718":{"position":[[22823,5]]}}}],["handi",{"_index":2723,"t":{"815":{"position":[[433,6]]}}}],["handl",{"_index":370,"t":{"16":{"position":[[13809,6],[19421,6],[25198,6]]},"80":{"position":[[2582,6],[3267,6],[3422,6]]},"86":{"position":[[828,6],[1074,6]]},"102":{"position":[[722,6]]},"112":{"position":[[1216,6]]},"124":{"position":[[1216,6]]},"170":{"position":[[935,6]]},"172":{"position":[[1769,6]]},"190":{"position":[[1216,6]]},"192":{"position":[[659,6]]},"194":{"position":[[817,6]]},"213":{"position":[[1597,6],[2061,6]]},"215":{"position":[[1650,6],[6817,6]]},"221":{"position":[[2951,6],[8012,6],[8513,6],[13358,6],[18383,6]]},"230":{"position":[[1859,6],[2322,6]]},"232":{"position":[[1694,6]]},"245":{"position":[[1940,6]]},"247":{"position":[[1614,6],[2073,6],[6713,6]]},"257":{"position":[[1192,6]]},"259":{"position":[[343,6],[1711,6]]},"261":{"position":[[1349,6],[2566,6]]},"288":{"position":[[1695,6],[2150,6],[6601,6],[7057,6],[11963,6],[12695,6]]},"312":{"position":[[1790,6],[6819,6]]},"318":{"position":[[1924,6],[2447,6],[7394,6],[12628,6]]},"338":{"position":[[1831,6]]},"345":{"position":[[2765,6]]},"369":{"position":[[1893,6],[2578,6],[7710,6]]},"371":{"position":[[1905,6],[2700,6]]},"373":{"position":[[1622,6]]},"385":{"position":[[1671,6],[2147,6]]},"387":{"position":[[1731,6],[6982,6]]},"429":{"position":[[2475,6]]},"445":{"position":[[1793,6],[6843,6]]},"449":{"position":[[1754,6],[6969,6]]},"467":{"position":[[1632,6],[2094,6]]},"469":{"position":[[1714,6],[2256,6]]},"471":{"position":[[1804,6]]},"485":{"position":[[1870,6],[2384,6]]},"487":{"position":[[1932,6]]},"505":{"position":[[2003,6],[2658,6],[7660,6],[13075,6],[18183,6],[23226,6]]},"521":{"position":[[1643,6],[2107,6]]},"523":{"position":[[2053,6],[2594,6]]},"525":{"position":[[1866,6]]},"537":{"position":[[1773,6],[2344,6]]},"541":{"position":[[1776,6],[2343,6]]},"543":{"position":[[1739,6],[2202,6]]},"545":{"position":[[1618,6],[6564,6]]},"547":{"position":[[1615,6],[2070,6],[6554,6]]},"562":{"position":[[1787,6]]},"569":{"position":[[2087,6],[7640,6],[13066,6]]},"571":{"position":[[2172,6]]},"576":{"position":[[1817,6],[7151,6]]},"583":{"position":[[1815,6]]},"605":{"position":[[2916,6],[8509,6],[14754,6],[21006,6],[26664,6]]},"607":{"position":[[2762,6],[8434,6],[14193,6],[19935,6]]},"622":{"position":[[1988,6],[2568,6]]},"624":{"position":[[1741,6]]},"630":{"position":[[1812,6],[2547,6]]},"632":{"position":[[1662,6]]},"634":{"position":[[1669,6],[2204,6],[7033,6],[12086,6]]},"644":{"position":[[2423,6],[7459,6]]},"646":{"position":[[1738,6],[2253,6],[6927,6]]},"648":{"position":[[1805,6],[7397,6],[7993,6],[12847,6],[13444,6],[18377,6],[23457,6]]},"660":{"position":[[5719,6]]},"668":{"position":[[6375,6],[6907,6]]},"670":{"position":[[2736,6],[3296,6]]},"672":{"position":[[5258,6]]},"692":{"position":[[2020,6],[2490,6],[6980,6],[7454,6],[12111,6],[12840,6],[18294,6],[23410,6]]},"694":{"position":[[4638,6],[5476,6],[10908,6]]},"696":{"position":[[4429,6],[5043,6],[10317,6],[11238,6],[17169,6]]},"698":{"position":[[4686,6],[5418,6],[10883,6]]},"718":{"position":[[3636,6],[4165,6],[8901,6],[14062,6],[14591,6],[19284,6],[24447,6],[30271,6],[31162,6],[36854,6]]},"720":{"position":[[1678,6],[8377,6]]},"722":{"position":[[8606,6],[9412,6],[15106,6],[15704,6],[20887,6],[21585,6],[26827,6],[27440,6],[32423,6],[32923,6],[37571,6],[38054,6],[42791,6],[47898,6]]},"734":{"position":[[4631,6],[5789,6]]},"740":{"position":[[1973,6],[7088,6],[12253,6],[12783,6],[17441,6]]},"742":{"position":[[6084,6],[11713,6],[12723,6],[19008,6],[19717,6],[24982,6]]},"744":{"position":[[2837,6],[3601,6],[9513,6],[15970,6]]},"746":{"position":[[6615,6],[9477,6]]},"767":{"position":[[2546,6],[4135,6],[12042,6],[13003,6],[19153,6],[20044,6],[26540,6],[31720,6],[36759,6],[41818,6]]},"769":{"position":[[1842,6],[9173,6],[14522,6],[24269,6],[31923,6],[40910,6]]},"786":{"position":[[3339,6],[3810,6],[8369,6],[13438,6],[13909,6],[18425,6],[23470,6],[30620,6],[35664,6]]},"788":{"position":[[4087,6],[4843,6],[10366,6]]},"790":{"position":[[1833,6],[2328,6],[7389,6],[7916,6],[12567,6]]},"792":{"position":[[4536,6],[5147,6],[10550,6],[17081,6],[17574,6]]},"809":{"position":[[3339,6],[3813,6],[8390,6],[13474,6],[13944,6],[18455,6],[23494,6],[30131,6],[35169,6]]},"811":{"position":[[3935,6],[4894,6],[10838,6]]},"813":{"position":[[3647,6],[4373,6],[9971,6]]},"815":{"position":[[4692,6],[5647,6],[11500,6],[16671,6],[21779,6],[26976,6],[32082,6]]}}}],["happen",{"_index":1247,"t":{"251":{"position":[[109,8],[162,9]]},"259":{"position":[[40,8]]},"261":{"position":[[936,8]]},"427":{"position":[[153,6],[574,7]]},"744":{"position":[[717,9]]},"813":{"position":[[23,7]]}}}],["hard",{"_index":1518,"t":{"393":{"position":[[293,5]]}}}],["have",{"_index":1142,"t":{"174":{"position":[[223,6]]},"221":{"position":[[1024,6]]},"290":{"position":[[0,6]]},"326":{"position":[[280,6],[304,6]]},"336":{"position":[[853,6],[915,6]]},"349":{"position":[[137,6],[418,6],[476,6],[582,6],[658,6]]},"427":{"position":[[616,6]]},"461":{"position":[[70,6]]},"491":{"position":[[1226,6]]},"543":{"position":[[100,6]]},"678":{"position":[[511,6]]},"694":{"position":[[190,6]]},"698":{"position":[[600,6],[2474,6]]},"706":{"position":[[511,6]]},"769":{"position":[[21255,6]]},"771":{"position":[[288,6],[340,6]]},"773":{"position":[[1024,6],[1076,6]]},"775":{"position":[[360,6]]},"792":{"position":[[1219,6]]},"796":{"position":[[1106,6],[1158,6]]},"798":{"position":[[360,6]]}}}],["haven't",{"_index":1628,"t":{"405":{"position":[[1357,7]]}}}],["header",{"_index":985,"t":{"144":{"position":[[358,7]]},"172":{"position":[[1731,6]]}}}],["health",{"_index":1031,"t":{"150":{"position":[[35,6],[77,6]]}}}],["healthcheck",{"_index":939,"t":{"142":{"position":[[1794,12],[4431,12]]}}}],["healthz",{"_index":1032,"t":{"150":{"position":[[57,8]]}}}],["helm",{"_index":1113,"t":{"164":{"position":[[81,4],[160,4]]}}}],["help",{"_index":204,"t":{"16":{"position":[[3218,4]]},"66":{"position":[[199,7]]},"198":{"position":[[13,5]]},"202":{"position":[[185,7]]},"219":{"position":[[522,7]]},"294":{"position":[[52,4]]},"403":{"position":[[525,4]]},"405":{"position":[[1151,4]]},"407":{"position":[[419,4]]},"509":{"position":[[203,7]]},"529":{"position":[[200,7]]},"611":{"position":[[196,7]]},"678":{"position":[[182,7]]},"680":{"position":[[12,7]]},"706":{"position":[[182,7]]},"708":{"position":[[12,7]]},"754":{"position":[[182,7]]},"756":{"position":[[12,7]]},"775":{"position":[[182,7]]},"777":{"position":[[12,7]]},"798":{"position":[[182,7]]},"800":{"position":[[12,7]]}}}],["henri",{"_index":1996,"t":{"607":{"position":[[12239,5],[12551,5],[17697,5]]}}}],["here",{"_index":898,"t":{"140":{"position":[[253,4]]},"144":{"position":[[352,5]]},"316":{"position":[[292,5]]},"403":{"position":[[7434,5]]},"605":{"position":[[24633,4]]},"628":{"position":[[1509,5]]},"678":{"position":[[586,4],[885,4],[1165,4]]},"704":{"position":[[198,4],[445,4]]},"714":{"position":[[441,5]]},"716":{"position":[[808,4]]},"742":{"position":[[9609,4]]},"754":{"position":[[448,4],[842,4]]},"773":{"position":[[334,4],[609,4],[850,4],[1135,4]]},"775":{"position":[[617,4]]},"796":{"position":[[208,4],[499,4],[719,4],[1021,4],[1217,4]]},"798":{"position":[[617,4]]}}}],["here'",{"_index":2722,"t":{"815":{"position":[[338,6]]}}}],["high",{"_index":24,"t":{"4":{"position":[[220,4]]},"8":{"position":[[237,4]]},"273":{"position":[[698,5],[869,4],[1839,4],[2044,5],[2864,5],[3029,5],[3116,5],[3282,4]]},"275":{"position":[[263,4],[295,4],[344,4],[479,4],[584,4],[589,4],[673,4],[678,4],[683,4]]},"578":{"position":[[37,4]]},"585":{"position":[[490,5],[513,4],[620,5],[643,4]]}}}],["higher",{"_index":1101,"t":{"158":{"position":[[694,6],[767,6]]},"760":{"position":[[189,6]]}}}],["highli",{"_index":214,"t":{"16":{"position":[[3700,6]]},"686":{"position":[[544,6]]},"714":{"position":[[995,6]]},"767":{"position":[[24317,6]]}}}],["highlight",{"_index":1549,"t":{"399":{"position":[[442,9],[2184,9]]},"401":{"position":[[517,9],[686,9]]}}}],["hire",{"_index":1200,"t":{"219":{"position":[[147,5]]}}}],["histogram",{"_index":1086,"t":{"156":{"position":[[528,10]]}}}],["home/.openfga",{"_index":896,"t":{"140":{"position":[[119,14]]}}}],["honor",{"_index":1805,"t":{"491":{"position":[[1748,5]]}}}],["hook",{"_index":746,"t":{"96":{"position":[[754,4],[1148,6]]},"98":{"position":[[2001,5]]}}}],["hopefulli",{"_index":2663,"t":{"792":{"position":[[851,9]]},"794":{"position":[[166,9]]}}}],["hour",{"_index":2088,"t":{"654":{"position":[[606,6]]},"728":{"position":[[633,6]]},"734":{"position":[[463,5],[2501,5]]},"740":{"position":[[20990,6]]},"742":{"position":[[9657,4],[9732,5],[10482,5],[10634,5],[11904,5],[12112,5],[13763,5],[13925,5],[15328,5],[15486,5],[16637,5],[16793,5]]},"746":{"position":[[4627,5],[4777,5],[4929,5],[5082,5],[5234,5],[5385,5],[5536,5],[7621,5],[7827,5],[8035,5],[8244,5],[8452,5],[8659,5],[8866,5],[11148,5],[11308,5],[11470,5],[11633,5],[11795,5],[11956,5],[12117,5],[14135,5],[14291,5],[14449,5],[14608,5],[14766,5],[14923,5],[15080,5],[17575,5],[17729,5],[17885,5],[18042,5],[18198,5],[18353,5],[18508,5]]}}}],["http",{"_index":27,"t":{"4":{"position":[[245,4]]},"16":{"position":[[12614,6],[12624,8],[12645,7],[12838,6],[12848,8],[12869,7],[13462,6],[13472,8],[13493,7],[14672,6],[14682,8],[14703,7],[15629,6],[15639,8],[15660,7],[18226,6],[18236,8],[18257,7],[18450,6],[18460,8],[18481,7],[19074,6],[19084,8],[19105,7],[20284,6],[20294,8],[20315,7],[21241,6],[21251,8],[21272,7],[23998,6],[24008,8],[24029,7],[24222,6],[24232,8],[24253,7],[24851,6],[24861,8],[24882,7],[26062,6],[26072,8],[26093,7],[27029,6],[27039,8],[27060,7]]},"80":{"position":[[1062,6],[1072,8],[1093,7],[1286,6],[1296,8],[1317,7],[2235,6],[2245,8],[2266,7],[3972,6],[3982,8],[4003,7],[5334,6],[5344,8],[5365,7]]},"86":{"position":[[222,7],[654,7],[1387,7]]},"98":{"position":[[80,4],[1228,6],[1238,8],[1259,7],[4056,4],[4645,6],[4655,8],[4676,7]]},"102":{"position":[[548,7]]},"112":{"position":[[335,6],[345,8],[366,7],[559,6],[569,8],[590,7],[869,6],[879,8],[900,7],[1664,6],[1674,8],[1695,7],[2273,6],[2283,8],[2304,7]]},"124":{"position":[[335,6],[345,8],[366,7],[559,6],[569,8],[590,7],[869,6],[879,8],[900,7],[1664,6],[1674,8],[1695,7],[2273,6],[2283,8],[2304,7]]},"130":{"position":[[144,4]]},"138":{"position":[[279,4],[378,4]]},"142":{"position":[[2531,4],[5162,4]]},"144":{"position":[[475,4],[702,5],[979,4],[1054,4],[1157,4],[1301,4],[1590,4],[1616,4],[1665,4],[1909,4],[2151,5],[2504,4],[2579,4],[2682,4],[2826,4],[3143,4],[3169,4],[3218,4]]},"150":{"position":[[30,4]]},"170":{"position":[[281,6],[291,8],[312,7],[694,6],[704,8],[725,7],[1292,6],[1302,8],[1323,7]]},"172":{"position":[[637,7],[1234,7],[2131,7],[3090,7]]},"190":{"position":[[335,6],[345,8],[366,7],[559,6],[569,8],[590,7],[869,6],[879,8],[900,7],[1664,6],[1674,8],[1695,7],[2273,6],[2283,8],[2304,7]]},"213":{"position":[[448,6],[458,8],[479,7],[672,6],[682,8],[703,7],[1250,6],[1260,8],[1281,7],[2550,6],[2560,8],[2581,7],[3472,6],[3482,8],[3503,7]]},"215":{"position":[[458,6],[468,8],[489,7],[682,6],[692,8],[713,7],[1303,6],[1313,8],[1334,7],[2510,6],[2520,8],[2541,7],[3464,6],[3474,8],[3495,7],[5623,6],[5633,8],[5654,7],[5847,6],[5857,8],[5878,7],[6470,6],[6480,8],[6501,7],[7679,6],[7689,8],[7710,7],[8635,6],[8645,8],[8666,7]]},"221":{"position":[[1763,6],[1773,8],[1794,7],[1987,6],[1997,8],[2018,7],[2604,6],[2614,8],[2635,7],[3807,6],[3817,8],[3838,7],[4757,6],[4767,8],[4788,7],[6826,6],[6836,8],[6857,7],[7050,6],[7060,8],[7081,7],[7665,6],[7675,8],[7696,7],[9002,6],[9012,8],[9033,7],[9961,6],[9971,8],[9992,7],[12166,6],[12176,8],[12197,7],[12390,6],[12400,8],[12421,7],[13011,6],[13021,8],[13042,7],[14218,6],[14228,8],[14249,7],[15172,6],[15182,8],[15203,7],[17189,6],[17199,8],[17220,7],[17413,6],[17423,8],[17444,7],[18036,6],[18046,8],[18067,7],[19245,6],[19255,8],[19276,7],[20201,6],[20211,8],[20232,7]]},"230":{"position":[[710,6],[720,8],[741,7],[934,6],[944,8],[965,7],[1512,6],[1522,8],[1543,7],[2811,6],[2821,8],[2842,7],[3732,6],[3742,8],[3763,7]]},"232":{"position":[[501,6],[511,8],[532,7],[725,6],[735,8],[756,7],[1347,6],[1357,8],[1378,7],[2555,6],[2565,8],[2586,7],[3510,6],[3520,8],[3541,7]]},"245":{"position":[[758,6],[768,8],[789,7],[982,6],[992,8],[1013,7],[1593,6],[1603,8],[1624,7],[2790,6],[2800,8],[2821,7],[3734,6],[3744,8],[3765,7]]},"247":{"position":[[469,6],[479,8],[500,7],[693,6],[703,8],[724,7],[1267,6],[1277,8],[1298,7],[2562,6],[2572,8],[2593,7],[3479,6],[3489,8],[3510,7],[5530,6],[5540,8],[5561,7],[5754,6],[5764,8],[5785,7],[6366,6],[6376,8],[6397,7],[7564,6],[7574,8],[7595,7],[8509,6],[8519,8],[8540,7]]},"257":{"position":[[311,6],[321,8],[342,7],[535,6],[545,8],[566,7],[845,6],[855,8],[876,7],[1640,6],[1650,8],[1671,7],[2249,6],[2259,8],[2280,7]]},"288":{"position":[[555,6],[565,8],[586,7],[779,6],[789,8],[810,7],[1348,6],[1358,8],[1379,7],[2639,6],[2649,8],[2670,7],[3552,6],[3562,8],[3583,7],[5459,6],[5469,8],[5490,7],[5683,6],[5693,8],[5714,7],[6254,6],[6264,8],[6285,7],[7546,6],[7556,8],[7577,7],[8460,6],[8470,8],[8491,7],[10637,6],[10647,8],[10668,7],[10861,6],[10871,8],[10892,7],[11616,6],[11626,8],[11647,7],[13184,6],[13194,8],[13215,7],[14313,6],[14323,8],[14344,7]]},"312":{"position":[[597,6],[607,8],[628,7],[821,6],[831,8],[852,7],[1443,6],[1453,8],[1474,7],[2651,6],[2661,8],[2682,7],[3606,6],[3616,8],[3637,7],[5627,6],[5637,8],[5658,7],[5851,6],[5861,8],[5882,7],[6472,6],[6482,8],[6503,7],[7679,6],[7689,8],[7710,7],[8633,6],[8643,8],[8664,7]]},"318":{"position":[[716,6],[726,8],[747,7],[940,6],[950,8],[971,7],[1577,6],[1587,8],[1608,7],[2936,6],[2946,8],[2967,7],[3917,6],[3927,8],[3948,7],[6201,6],[6211,8],[6232,7],[6425,6],[6435,8],[6456,7],[7047,6],[7057,8],[7078,7],[8255,6],[8265,8],[8286,7],[9210,6],[9220,8],[9241,7],[11435,6],[11445,8],[11466,7],[11659,6],[11669,8],[11690,7],[12281,6],[12291,8],[12312,7],[13489,6],[13499,8],[13520,7],[14444,6],[14454,8],[14475,7]]},"338":{"position":[[631,6],[641,8],[662,7],[855,6],[865,8],[886,7],[1484,6],[1494,8],[1515,7],[2699,6],[2709,8],[2730,7],[3661,6],[3671,8],[3692,7]]},"345":{"position":[[1575,6],[1585,8],[1606,7],[1799,6],[1809,8],[1830,7],[2418,6],[2428,8],[2449,7],[3623,6],[3633,8],[3654,7],[4575,6],[4585,8],[4606,7]]},"369":{"position":[[579,6],[589,8],[610,7],[803,6],[813,8],[834,7],[1546,6],[1556,8],[1577,7],[3067,6],[3077,8],[3098,7],[4164,6],[4174,8],[4195,7],[6515,6],[6525,8],[6546,7],[6739,6],[6749,8],[6770,7],[7363,6],[7373,8],[7394,7],[8573,6],[8583,8],[8604,7],[9530,6],[9540,8],[9561,7]]},"371":{"position":[[481,6],[491,8],[512,7],[705,6],[715,8],[736,7],[1558,6],[1568,8],[1589,7],[3189,6],[3199,8],[3220,7],[4396,6],[4406,8],[4427,7]]},"373":{"position":[[427,6],[437,8],[458,7],[651,6],[661,8],[682,7],[1275,6],[1285,8],[1306,7],[2485,6],[2495,8],[2516,7],[3442,6],[3452,8],[3473,7]]},"385":{"position":[[510,6],[520,8],[541,7],[734,6],[744,8],[765,7],[1324,6],[1334,8],[1355,7],[2636,6],[2646,8],[2667,7],[3570,6],[3580,8],[3601,7]]},"387":{"position":[[531,6],[541,8],[562,7],[755,6],[765,8],[786,7],[1384,6],[1394,8],[1415,7],[2599,6],[2609,8],[2630,7],[3561,6],[3571,8],[3592,7],[5781,6],[5791,8],[5812,7],[6005,6],[6015,8],[6036,7],[6635,6],[6645,8],[6666,7],[7851,6],[7861,8],[7882,7],[8814,6],[8824,8],[8845,7]]},"445":{"position":[[597,6],[607,8],[628,7],[821,6],[831,8],[852,7],[1446,6],[1456,8],[1477,7],[2657,6],[2667,8],[2688,7],[3615,6],[3625,8],[3646,7],[5648,6],[5658,8],[5679,7],[5872,6],[5882,8],[5903,7],[6496,6],[6506,8],[6527,7],[7706,6],[7716,8],[7737,7],[8663,6],[8673,8],[8694,7]]},"449":{"position":[[557,6],[567,8],[588,7],[781,6],[791,8],[812,7],[1407,6],[1417,8],[1438,7],[2619,6],[2629,8],[2650,7],[3578,6],[3588,8],[3609,7],[5772,6],[5782,8],[5803,7],[5996,6],[6006,8],[6027,7],[6622,6],[6632,8],[6653,7],[7834,6],[7844,8],[7865,7],[8793,6],[8803,8],[8824,7]]},"467":{"position":[[485,6],[495,8],[516,7],[709,6],[719,8],[740,7],[1285,6],[1295,8],[1316,7],[2583,6],[2593,8],[2614,7],[3503,6],[3513,8],[3534,7]]},"469":{"position":[[487,6],[497,8],[518,7],[711,6],[721,8],[742,7],[1367,6],[1377,8],[1398,7],[2745,6],[2755,8],[2776,7],[3745,6],[3755,8],[3776,7]]},"471":{"position":[[604,6],[614,8],[635,7],[828,6],[838,8],[859,7],[1457,6],[1467,8],[1488,7],[2672,6],[2682,8],[2703,7],[3634,6],[3644,8],[3665,7]]},"485":{"position":[[671,6],[681,8],[702,7],[895,6],[905,8],[926,7],[1523,6],[1533,8],[1554,7],[2873,6],[2883,8],[2904,7],[3845,6],[3855,8],[3876,7]]},"487":{"position":[[736,6],[746,8],[767,7],[960,6],[970,8],[991,7],[1585,6],[1595,8],[1616,7],[2796,6],[2806,8],[2827,7],[3754,6],[3764,8],[3785,7]]},"505":{"position":[[719,6],[729,8],[750,7],[943,6],[953,8],[974,7],[1656,6],[1666,8],[1687,7],[3147,6],[3157,8],[3178,7],[4214,6],[4224,8],[4245,7],[6467,6],[6477,8],[6498,7],[6691,6],[6701,8],[6722,7],[7313,6],[7323,8],[7344,7],[8521,6],[8531,8],[8552,7],[9476,6],[9486,8],[9507,7],[11882,6],[11892,8],[11913,7],[12106,6],[12116,8],[12137,7],[12728,6],[12738,8],[12759,7],[13936,6],[13946,8],[13967,7],[14891,6],[14901,8],[14922,7],[16988,6],[16998,8],[17019,7],[17212,6],[17222,8],[17243,7],[17836,6],[17846,8],[17867,7],[19046,6],[19056,8],[19077,7],[20003,6],[20013,8],[20034,7],[22032,6],[22042,8],[22063,7],[22256,6],[22266,8],[22287,7],[22879,6],[22889,8],[22910,7],[24088,6],[24098,8],[24119,7],[25044,6],[25054,8],[25075,7]]},"521":{"position":[[494,6],[504,8],[525,7],[718,6],[728,8],[749,7],[1296,6],[1306,8],[1327,7],[2596,6],[2606,8],[2627,7],[3518,6],[3528,8],[3549,7]]},"523":{"position":[[827,6],[837,8],[858,7],[1051,6],[1061,8],[1082,7],[1706,6],[1716,8],[1737,7],[3083,6],[3093,8],[3114,7],[4082,6],[4092,8],[4113,7]]},"525":{"position":[[664,6],[674,8],[695,7],[888,6],[898,8],[919,7],[1519,6],[1529,8],[1550,7],[2736,6],[2746,8],[2767,7],[3700,6],[3710,8],[3731,7]]},"537":{"position":[[573,6],[583,8],[604,7],[797,6],[807,8],[828,7],[1426,6],[1436,8],[1457,7],[2833,6],[2843,8],[2864,7],[3816,6],[3826,8],[3847,7]]},"541":{"position":[[580,6],[590,8],[611,7],[804,6],[814,8],[835,7],[1429,6],[1439,8],[1460,7],[2832,6],[2842,8],[2863,7],[3811,6],[3821,8],[3842,7]]},"543":{"position":[[591,6],[601,8],[622,7],[815,6],[825,8],[846,7],[1392,6],[1402,8],[1423,7],[2691,6],[2701,8],[2722,7],[3612,6],[3622,8],[3643,7]]},"545":{"position":[[437,6],[447,8],[468,7],[661,6],[671,8],[692,7],[1271,6],[1281,8],[1302,7],[2467,6],[2477,8],[2498,7],[3410,6],[3420,8],[3441,7],[5383,6],[5393,8],[5414,7],[5607,6],[5617,8],[5638,7],[6217,6],[6227,8],[6248,7],[7413,6],[7423,8],[7444,7],[8356,6],[8366,8],[8387,7]]},"547":{"position":[[474,6],[484,8],[505,7],[698,6],[708,8],[729,7],[1268,6],[1278,8],[1299,7],[2559,6],[2569,8],[2590,7],[3472,6],[3482,8],[3503,7],[5372,6],[5382,8],[5403,7],[5596,6],[5606,8],[5627,7],[6207,6],[6217,8],[6238,7],[7404,6],[7414,8],[7435,7],[8348,6],[8358,8],[8379,7]]},"562":{"position":[[596,6],[606,8],[627,7],[820,6],[830,8],[851,7],[1440,6],[1450,8],[1471,7],[2646,6],[2656,8],[2677,7],[3599,6],[3609,8],[3630,7]]},"569":{"position":[[846,6],[856,8],[877,7],[1070,6],[1080,8],[1101,7],[1740,6],[1750,8],[1771,7],[3036,6],[3046,8],[3067,7],[4010,6],[4020,8],[4041,7],[6418,6],[6428,8],[6449,7],[6642,6],[6652,8],[6673,7],[7293,6],[7303,8],[7324,7],[8551,6],[8561,8],[8582,7],[9504,6],[9514,8],[9535,7],[11834,6],[11844,8],[11865,7],[12058,6],[12068,8],[12089,7],[12719,6],[12729,8],[12750,7],[13987,6],[13997,8],[14018,7],[14950,6],[14960,8],[14981,7]]},"571":{"position":[[1049,6],[1059,8],[1080,7],[1273,6],[1283,8],[1304,7],[1825,6],[1835,8],[1856,7],[3003,6],[3013,8],[3034,7],[3859,6],[3869,8],[3890,7]]},"576":{"position":[[587,6],[597,8],[618,7],[811,6],[821,8],[842,7],[1470,6],[1480,8],[1501,7],[2770,6],[2780,8],[2801,7],[3769,6],[3779,8],[3800,7],[5921,6],[5931,8],[5952,7],[6145,6],[6155,8],[6176,7],[6804,6],[6814,8],[6835,7],[8104,6],[8114,8],[8135,7],[9103,6],[9113,8],[9134,7]]},"583":{"position":[[508,6],[518,8],[539,7],[732,6],[742,8],[763,7],[1468,6],[1478,8],[1499,7],[2848,6],[2858,8],[2879,7],[3945,6],[3955,8],[3976,7]]},"605":{"position":[[1724,6],[1734,8],[1755,7],[1948,6],[1958,8],[1979,7],[2569,6],[2579,8],[2600,7],[3776,6],[3786,8],[3807,7],[4730,6],[4740,8],[4761,7],[7317,6],[7327,8],[7348,7],[7541,6],[7551,8],[7572,7],[8162,6],[8172,8],[8193,7],[9369,6],[9379,8],[9400,7],[10323,6],[10333,8],[10354,7],[13559,6],[13569,8],[13590,7],[13783,6],[13793,8],[13814,7],[14407,6],[14417,8],[14438,7],[15617,6],[15627,8],[15648,7],[16574,6],[16584,8],[16605,7],[19814,6],[19824,8],[19845,7],[20038,6],[20048,8],[20069,7],[20659,6],[20669,8],[20690,7],[21866,6],[21876,8],[21897,7],[22820,6],[22830,8],[22851,7],[25471,6],[25481,8],[25502,7],[25695,6],[25705,8],[25726,7],[26317,6],[26327,8],[26348,7],[27525,6],[27535,8],[27556,7],[28480,6],[28490,8],[28511,7]]},"607":{"position":[[1569,6],[1579,8],[1600,7],[1793,6],[1803,8],[1824,7],[2415,6],[2425,8],[2446,7],[3623,6],[3633,8],[3654,7],[4578,6],[4588,8],[4609,7],[7238,6],[7248,8],[7269,7],[7462,6],[7472,8],[7493,7],[8087,6],[8097,8],[8118,7],[9298,6],[9308,8],[9329,7],[10256,6],[10266,8],[10287,7],[12999,6],[13009,8],[13030,7],[13223,6],[13233,8],[13254,7],[13846,6],[13856,8],[13877,7],[15055,6],[15065,8],[15086,7],[16011,6],[16021,8],[16042,7],[18741,6],[18751,8],[18772,7],[18965,6],[18975,8],[18996,7],[19588,6],[19598,8],[19619,7],[20797,6],[20807,8],[20828,7],[21753,6],[21763,8],[21784,7]]},"622":{"position":[[723,6],[733,8],[754,7],[947,6],[957,8],[978,7],[1641,6],[1651,8],[1672,7],[3057,6],[3067,8],[3088,7],[4095,6],[4105,8],[4126,7]]},"624":{"position":[[538,6],[548,8],[569,7],[762,6],[772,8],[793,7],[1394,6],[1404,8],[1425,7],[2612,6],[2622,8],[2643,7],[3577,6],[3587,8],[3608,7]]},"630":{"position":[[448,6],[458,8],[479,7],[672,6],[682,8],[703,7],[1465,6],[1475,8],[1496,7],[3036,6],[3046,8],[3067,7],[4183,6],[4193,8],[4214,7]]},"632":{"position":[[467,6],[477,8],[498,7],[691,6],[701,8],[722,7],[1315,6],[1325,8],[1346,7],[2525,6],[2535,8],[2556,7],[3482,6],[3492,8],[3513,7]]},"634":{"position":[[448,6],[458,8],[479,7],[672,6],[682,8],[703,7],[1322,6],[1332,8],[1353,7],[2693,6],[2703,8],[2724,7],[3686,6],[3696,8],[3717,7],[5837,6],[5847,8],[5868,7],[6061,6],[6071,8],[6092,7],[6686,6],[6696,8],[6717,7],[7897,6],[7907,8],[7928,7],[8855,6],[8865,8],[8886,7],[10887,6],[10897,8],[10918,7],[11111,6],[11121,8],[11142,7],[11739,6],[11749,8],[11770,7],[12953,6],[12963,8],[12984,7],[13914,6],[13924,8],[13945,7]]},"644":{"position":[[1229,6],[1239,8],[1260,7],[1453,6],[1463,8],[1484,7],[2076,6],[2086,8],[2107,7],[3285,6],[3295,8],[3316,7],[4241,6],[4251,8],[4272,7],[6266,6],[6276,8],[6297,7],[6490,6],[6500,8],[6521,7],[7112,6],[7122,8],[7143,7],[8320,6],[8330,8],[8351,7],[9275,6],[9285,8],[9306,7]]},"646":{"position":[[538,6],[548,8],[569,7],[762,6],[772,8],[793,7],[1391,6],[1401,8],[1422,7],[2742,6],[2752,8],[2773,7],[3715,6],[3725,8],[3746,7],[5730,6],[5740,8],[5761,7],[5954,6],[5964,8],[5985,7],[6580,6],[6590,8],[6611,7],[7792,6],[7802,8],[7823,7],[8751,6],[8761,8],[8782,7]]},"648":{"position":[[513,6],[523,8],[544,7],[737,6],[747,8],[768,7],[1458,6],[1468,8],[1489,7],[2734,6],[2744,8],[2765,7],[3752,6],[3762,8],[3783,7],[6172,6],[6182,8],[6203,7],[6396,6],[6406,8],[6427,7],[7050,6],[7060,8],[7081,7],[8482,6],[8492,8],[8513,7],[9490,6],[9500,8],[9521,7],[11620,6],[11630,8],[11651,7],[11844,6],[11854,8],[11875,7],[12500,6],[12510,8],[12531,7],[13933,6],[13943,8],[13964,7],[14942,6],[14952,8],[14973,7],[17183,6],[17193,8],[17214,7],[17407,6],[17417,8],[17438,7],[18030,6],[18040,8],[18061,7],[19239,6],[19249,8],[19270,7],[20195,6],[20205,8],[20226,7],[22265,6],[22275,8],[22296,7],[22489,6],[22499,8],[22520,7],[23110,6],[23120,8],[23141,7],[24317,6],[24327,8],[24348,7],[25271,6],[25281,8],[25302,7]]},"668":{"position":[[5158,6],[5168,8],[5189,7],[5382,6],[5392,8],[5413,7],[6028,6],[6038,8],[6059,7],[7396,6],[7406,8],[7427,7],[8386,6],[8396,8],[8417,7]]},"670":{"position":[[1490,6],[1500,8],[1521,7],[1714,6],[1724,8],[1745,7],[2389,6],[2399,8],[2420,7],[3785,6],[3795,8],[3816,7],[4803,6],[4813,8],[4834,7]]},"692":{"position":[[865,6],[875,8],[896,7],[1089,6],[1099,8],[1120,7],[1673,6],[1683,8],[1704,7],[2979,6],[2989,8],[3010,7],[3907,6],[3917,8],[3938,7],[5821,6],[5831,8],[5852,7],[6045,6],[6055,8],[6076,7],[6633,6],[6643,8],[6664,7],[7943,6],[7953,8],[7974,7],[8875,6],[8885,8],[8906,7],[10809,6],[10819,8],[10840,7],[11033,6],[11043,8],[11064,7],[11764,6],[11774,8],[11795,7],[13329,6],[13339,8],[13360,7],[14424,6],[14434,8],[14455,7],[17100,6],[17110,8],[17131,7],[17324,6],[17334,8],[17355,7],[17947,6],[17957,8],[17978,7],[19156,6],[19166,8],[19187,7],[20112,6],[20122,8],[20143,7],[22218,6],[22228,8],[22249,7],[22442,6],[22452,8],[22473,7],[23063,6],[23073,8],[23094,7],[24270,6],[24280,8],[24301,7],[25224,6],[25234,8],[25255,7]]},"694":{"position":[[3283,6],[3293,8],[3314,7],[3507,6],[3517,8],[3538,7],[4291,6],[4301,8],[4322,7],[5965,6],[5975,8],[5996,7],[7123,6],[7133,8],[7154,7],[9711,6],[9721,8],[9742,7],[9935,6],[9945,8],[9966,7],[10561,6],[10571,8],[10592,7],[11773,6],[11783,8],[11804,7],[12732,6],[12742,8],[12763,7]]},"696":{"position":[[3186,6],[3196,8],[3217,7],[3410,6],[3420,8],[3441,7],[4082,6],[4092,8],[4113,7],[5532,6],[5542,8],[5563,7],[6558,6],[6568,8],[6589,7],[8879,6],[8889,8],[8910,7],[9103,6],[9113,8],[9134,7],[9970,6],[9980,8],[10001,7],[11727,6],[11737,8],[11758,7],[12968,6],[12978,8],[12999,7],[15978,6],[15988,8],[16009,7],[16202,6],[16212,8],[16233,7],[16822,6],[16832,8],[16853,7],[18028,6],[18038,8],[18059,7],[18981,6],[18991,8],[19012,7]]},"698":{"position":[[3381,6],[3391,8],[3412,7],[3605,6],[3615,8],[3636,7],[4339,6],[4349,8],[4370,7],[5907,6],[5917,8],[5938,7],[7005,6],[7015,8],[7036,7],[9687,6],[9697,8],[9718,7],[9911,6],[9921,8],[9942,7],[10536,6],[10546,8],[10567,7],[11747,6],[11757,8],[11778,7],[12705,6],[12715,8],[12736,7]]},"718":{"position":[[2422,6],[2432,8],[2453,7],[2646,6],[2656,8],[2677,7],[3289,6],[3299,8],[3320,7],[4654,6],[4664,8],[4685,7],[5641,6],[5651,8],[5672,7],[7701,6],[7711,8],[7732,7],[7925,6],[7935,8],[7956,7],[8554,6],[8564,8],[8585,7],[9769,6],[9779,8],[9800,7],[10731,6],[10741,8],[10762,7],[12848,6],[12858,8],[12879,7],[13072,6],[13082,8],[13103,7],[13715,6],[13725,8],[13746,7],[15080,6],[15090,8],[15111,7],[16067,6],[16077,8],[16098,7],[18084,6],[18094,8],[18115,7],[18308,6],[18318,8],[18339,7],[18937,6],[18947,8],[18968,7],[20152,6],[20162,8],[20183,7],[21114,6],[21124,8],[21145,7],[23240,6],[23250,8],[23271,7],[23464,6],[23474,8],[23495,7],[24100,6],[24110,8],[24131,7],[25322,6],[25332,8],[25353,7],[26291,6],[26301,8],[26322,7],[28807,6],[28817,8],[28838,7],[29031,6],[29041,8],[29062,7],[29924,6],[29934,8],[29955,7],[31651,6],[31661,8],[31682,7],[32908,6],[32918,8],[32939,7],[35654,6],[35664,8],[35685,7],[35878,6],[35888,8],[35909,7],[36507,6],[36517,8],[36538,7],[37722,6],[37732,8],[37753,7],[38684,6],[38694,8],[38715,7]]},"720":{"position":[[483,6],[493,8],[514,7],[707,6],[717,8],[738,7],[1331,6],[1341,8],[1362,7],[2541,6],[2551,8],[2572,7],[3498,6],[3508,8],[3529,7],[7183,6],[7193,8],[7214,7],[7407,6],[7417,8],[7438,7],[8030,6],[8040,8],[8061,7],[9239,6],[9249,8],[9270,7],[10195,6],[10205,8],[10226,7]]},"722":{"position":[[7227,6],[7237,8],[7258,7],[7451,6],[7461,8],[7482,7],[8259,6],[8269,8],[8290,7],[9901,6],[9911,8],[9932,7],[11073,6],[11083,8],[11104,7],[13823,6],[13833,8],[13854,7],[14047,6],[14057,8],[14078,7],[14759,6],[14769,8],[14790,7],[16193,6],[16203,8],[16224,7],[17249,6],[17259,8],[17280,7],[19560,6],[19570,8],[19591,7],[19784,6],[19794,8],[19815,7],[20540,6],[20550,8],[20571,7],[22074,6],[22084,8],[22105,7],[23184,6],[23194,8],[23215,7],[25585,6],[25595,8],[25616,7],[25809,6],[25819,8],[25840,7],[26480,6],[26490,8],[26511,7],[27929,6],[27939,8],[27960,7],[28954,6],[28964,8],[28985,7],[31238,6],[31248,8],[31269,7],[31462,6],[31472,8],[31493,7],[32076,6],[32086,8],[32107,7],[33412,6],[33422,8],[33443,7],[34370,6],[34380,8],[34401,7],[36403,6],[36413,8],[36434,7],[36627,6],[36637,8],[36658,7],[37224,6],[37234,8],[37255,7],[38543,6],[38553,8],[38574,7],[39484,6],[39494,8],[39515,7],[41599,6],[41609,8],[41630,7],[41823,6],[41833,8],[41854,7],[42444,6],[42454,8],[42475,7],[43651,6],[43661,8],[43682,7],[44605,6],[44615,8],[44636,7],[46691,6],[46701,8],[46722,7],[46915,6],[46925,8],[46946,7],[47551,6],[47561,8],[47582,7],[48773,6],[48783,8],[48804,7],[49742,6],[49752,8],[49773,7]]},"734":{"position":[[2956,6],[2966,8],[2987,7],[3180,6],[3190,8],[3211,7],[4284,6],[4294,8],[4315,7],[6278,6],[6288,8],[6309,7],[7756,6],[7766,8],[7787,7]]},"740":{"position":[[783,6],[793,8],[814,7],[1007,6],[1017,8],[1038,7],[1626,6],[1636,8],[1657,7],[2831,6],[2841,8],[2862,7],[3783,6],[3793,8],[3814,7],[5894,6],[5904,8],[5925,7],[6118,6],[6128,8],[6149,7],[6741,6],[6751,8],[6772,7],[7950,6],[7960,8],[7981,7],[8906,6],[8916,8],[8937,7],[11038,6],[11048,8],[11069,7],[11262,6],[11272,8],[11293,7],[11906,6],[11916,8],[11937,7],[13272,6],[13282,8],[13303,7],[14260,6],[14270,8],[14291,7],[16250,6],[16260,8],[16281,7],[16474,6],[16484,8],[16505,7],[17094,6],[17104,8],[17125,7],[18300,6],[18310,8],[18331,7],[19253,6],[19263,8],[19284,7]]},"742":{"position":[[4898,6],[4908,8],[4929,7],[5122,6],[5132,8],[5153,7],[5737,6],[5747,8],[5768,7],[6938,6],[6948,8],[6969,7],[7886,6],[7896,8],[7917,7],[10130,6],[10140,8],[10161,7],[10354,6],[10364,8],[10385,7],[11366,6],[11376,8],[11397,7],[13212,6],[13222,8],[13243,7],[14588,6],[14598,8],[14619,7],[17670,6],[17680,8],[17701,7],[17894,6],[17904,8],[17925,7],[18661,6],[18671,8],[18692,7],[20206,6],[20216,8],[20237,7],[21327,6],[21337,8],[21358,7],[23792,6],[23802,8],[23823,7],[24016,6],[24026,8],[24047,7],[24635,6],[24645,8],[24666,7],[25840,6],[25850,8],[25871,7],[26792,6],[26802,8],[26823,7]]},"744":{"position":[[1443,6],[1453,8],[1474,7],[1667,6],[1677,8],[1698,7],[2490,6],[2500,8],[2521,7],[4090,6],[4100,8],[4121,7],[5266,6],[5276,8],[5297,7],[8138,6],[8148,8],[8169,7],[8362,6],[8372,8],[8393,7],[9166,6],[9176,8],[9197,7],[10706,6],[10716,8],[10737,7],[11878,6],[11888,8],[11909,7],[14594,6],[14604,8],[14625,7],[14818,6],[14828,8],[14849,7],[15623,6],[15633,8],[15654,7],[17164,6],[17174,8],[17195,7],[18337,6],[18347,8],[18368,7]]},"746":{"position":[[3684,6],[3694,8],[3715,7],[3908,6],[3918,8],[3939,7],[6268,6],[6278,8],[6299,7],[9966,6],[9976,8],[9997,7],[12780,6],[12790,8],[12811,7]]},"767":{"position":[[552,6],[562,8],[583,7],[776,6],[786,8],[807,7],[2199,6],[2209,8],[2230,7],[4624,6],[4634,8],[4655,7],[6441,6],[6451,8],[6472,7],[10508,6],[10518,8],[10539,7],[10732,6],[10742,8],[10763,7],[11695,6],[11705,8],[11726,7],[13492,6],[13502,8],[13523,7],[14819,6],[14829,8],[14850,7],[17689,6],[17699,8],[17720,7],[17913,6],[17923,8],[17944,7],[18806,6],[18816,8],[18837,7],[20533,6],[20543,8],[20564,7],[21790,6],[21800,8],[21821,7],[25347,6],[25357,8],[25378,7],[25571,6],[25581,8],[25602,7],[26193,6],[26203,8],[26224,7],[27401,6],[27411,8],[27432,7],[28356,6],[28366,8],[28387,7],[30526,6],[30536,8],[30557,7],[30750,6],[30760,8],[30781,7],[31373,6],[31383,8],[31404,7],[32582,6],[32592,8],[32613,7],[33538,6],[33548,8],[33569,7],[35562,6],[35572,8],[35593,7],[35786,6],[35796,8],[35817,7],[36412,6],[36422,8],[36443,7],[37624,6],[37634,8],[37655,7],[38583,6],[38593,8],[38614,7],[40620,6],[40630,8],[40651,7],[40844,6],[40854,8],[40875,7],[41471,6],[41481,8],[41502,7],[42684,6],[42694,8],[42715,7],[43644,6],[43654,8],[43675,7]]},"769":{"position":[[648,6],[658,8],[679,7],[872,6],[882,8],[903,7],[1495,6],[1505,8],[1526,7],[2704,6],[2714,8],[2735,7],[3660,6],[3670,8],[3691,7],[7983,6],[7993,8],[8014,7],[8207,6],[8217,8],[8238,7],[8826,6],[8836,8],[8857,7],[10031,6],[10041,8],[10062,7],[10983,6],[10993,8],[11014,7],[13323,6],[13333,8],[13354,7],[13547,6],[13557,8],[13578,7],[14175,6],[14185,8],[14206,7],[15389,6],[15399,8],[15420,7],[16350,6],[16360,8],[16381,7],[23071,6],[23081,8],[23102,7],[23295,6],[23305,8],[23326,7],[23922,6],[23932,8],[23953,7],[25135,6],[25145,8],[25166,7],[26095,6],[26105,8],[26126,7],[30734,6],[30744,8],[30765,7],[30958,6],[30968,8],[30989,7],[31576,6],[31586,8],[31607,7],[32780,6],[32790,8],[32811,7],[33731,6],[33741,8],[33762,7],[39721,6],[39731,8],[39752,7],[39945,6],[39955,8],[39976,7],[40563,6],[40573,8],[40594,7],[41767,6],[41777,8],[41798,7],[42718,6],[42728,8],[42749,7]]},"786":{"position":[[2183,6],[2193,8],[2214,7],[2407,6],[2417,8],[2438,7],[2992,6],[3002,8],[3023,7],[4299,6],[4309,8],[4330,7],[5228,6],[5238,8],[5259,7],[7174,6],[7184,8],[7205,7],[7398,6],[7408,8],[7429,7],[8022,6],[8032,8],[8053,7],[9232,6],[9242,8],[9263,7],[10189,6],[10199,8],[10220,7],[12282,6],[12292,8],[12313,7],[12506,6],[12516,8],[12537,7],[13091,6],[13101,8],[13122,7],[14398,6],[14408,8],[14429,7],[15327,6],[15337,8],[15358,7],[17230,6],[17240,8],[17261,7],[17454,6],[17464,8],[17485,7],[18078,6],[18088,8],[18109,7],[19288,6],[19298,8],[19319,7],[20245,6],[20255,8],[20276,7],[22274,6],[22284,8],[22305,7],[22498,6],[22508,8],[22529,7],[23123,6],[23133,8],[23154,7],[24334,6],[24344,8],[24365,7],[25292,6],[25302,8],[25323,7],[29425,6],[29435,8],[29456,7],[29649,6],[29659,8],[29680,7],[30273,6],[30283,8],[30304,7],[31483,6],[31493,8],[31514,7],[32440,6],[32450,8],[32471,7],[34469,6],[34479,8],[34500,7],[34693,6],[34703,8],[34724,7],[35317,6],[35327,8],[35348,7],[36527,6],[36537,8],[36558,7],[37484,6],[37494,8],[37515,7]]},"788":{"position":[[2702,6],[2712,8],[2733,7],[2926,6],[2936,8],[2957,7],[3740,6],[3750,8],[3771,7],[5332,6],[5342,8],[5363,7],[6500,6],[6510,8],[6531,7],[9169,6],[9179,8],[9200,7],[9393,6],[9403,8],[9424,7],[10019,6],[10029,8],[10050,7],[11231,6],[11241,8],[11262,7],[12190,6],[12200,8],[12221,7]]},"790":{"position":[[653,6],[663,8],[684,7],[877,6],[887,8],[908,7],[1486,6],[1496,8],[1517,7],[2817,6],[2827,8],[2848,7],[3770,6],[3780,8],[3801,7],[6177,6],[6187,8],[6208,7],[6401,6],[6411,8],[6432,7],[7042,6],[7052,8],[7073,7],[8405,6],[8415,8],[8436,7],[9390,6],[9400,8],[9421,7],[11372,6],[11382,8],[11403,7],[11596,6],[11606,8],[11627,7],[12220,6],[12230,8],[12251,7],[13430,6],[13440,8],[13461,7],[14387,6],[14397,8],[14418,7]]},"792":{"position":[[3296,6],[3306,8],[3327,7],[3520,6],[3530,8],[3551,7],[4189,6],[4199,8],[4220,7],[5636,6],[5646,8],[5667,7],[6659,6],[6669,8],[6690,7],[9351,6],[9361,8],[9382,7],[9575,6],[9585,8],[9606,7],[10203,6],[10213,8],[10234,7],[11417,6],[11427,8],[11448,7],[12378,6],[12388,8],[12409,7],[15903,6],[15913,8],[15934,7],[16127,6],[16137,8],[16158,7],[16734,6],[16744,8],[16765,7],[18063,6],[18073,8],[18094,7],[19014,6],[19024,8],[19045,7]]},"809":{"position":[[2180,6],[2190,8],[2211,7],[2404,6],[2414,8],[2435,7],[2992,6],[3002,8],[3023,7],[4302,6],[4312,8],[4333,7],[5234,6],[5244,8],[5265,7],[7192,6],[7202,8],[7223,7],[7416,6],[7426,8],[7447,7],[8043,6],[8053,8],[8074,7],[9256,6],[9266,8],[9287,7],[10216,6],[10226,8],[10247,7],[12319,6],[12329,8],[12350,7],[12543,6],[12553,8],[12574,7],[13127,6],[13137,8],[13158,7],[14433,6],[14443,8],[14464,7],[15361,6],[15371,8],[15392,7],[17261,6],[17271,8],[17292,7],[17485,6],[17495,8],[17516,7],[18108,6],[18118,8],[18139,7],[19317,6],[19327,8],[19348,7],[20273,6],[20283,8],[20304,7],[22298,6],[22308,8],[22329,7],[22522,6],[22532,8],[22553,7],[23147,6],[23157,8],[23178,7],[24358,6],[24368,8],[24389,7],[25316,6],[25326,8],[25347,7],[28937,6],[28947,8],[28968,7],[29161,6],[29171,8],[29192,7],[29784,6],[29794,8],[29815,7],[30993,6],[31003,8],[31024,7],[31949,6],[31959,8],[31980,7],[33974,6],[33984,8],[34005,7],[34198,6],[34208,8],[34229,7],[34822,6],[34832,8],[34853,7],[36032,6],[36042,8],[36063,7],[36989,6],[36999,8],[37020,7]]},"811":{"position":[[2459,6],[2469,8],[2490,7],[2683,6],[2693,8],[2714,7],[3588,6],[3598,8],[3619,7],[5383,6],[5393,8],[5414,7],[6662,6],[6672,8],[6693,7],[9640,6],[9650,8],[9671,7],[9864,6],[9874,8],[9895,7],[10491,6],[10501,8],[10522,7],[11704,6],[11714,8],[11735,7],[12664,6],[12674,8],[12695,7]]},"813":{"position":[[2292,6],[2302,8],[2323,7],[2516,6],[2526,8],[2547,7],[3300,6],[3310,8],[3331,7],[4862,6],[4872,8],[4893,7],[6000,6],[6010,8],[6031,7],[8770,6],[8780,8],[8801,7],[8994,6],[9004,8],[9025,7],[9624,6],[9634,8],[9655,7],[10840,6],[10850,8],[10871,7],[11803,6],[11813,8],[11834,7]]},"815":{"position":[[3164,6],[3174,8],[3195,7],[3388,6],[3398,8],[3419,7],[4345,6],[4355,8],[4376,7],[6136,6],[6146,8],[6167,7],[7457,6],[7467,8],[7488,7],[10298,6],[10308,8],[10329,7],[10522,6],[10532,8],[10553,7],[11153,6],[11163,8],[11184,7],[12370,6],[12380,8],[12401,7],[13334,6],[13344,8],[13365,7],[15467,6],[15477,8],[15498,7],[15691,6],[15701,8],[15722,7],[16324,6],[16334,8],[16355,7],[17543,6],[17553,8],[17574,7],[18509,6],[18519,8],[18540,7],[20573,6],[20583,8],[20604,7],[20797,6],[20807,8],[20828,7],[21432,6],[21442,8],[21463,7],[22653,6],[22663,8],[22684,7],[23621,6],[23631,8],[23652,7],[25772,6],[25782,8],[25803,7],[25996,6],[26006,8],[26027,7],[26629,6],[26639,8],[26660,7],[27848,6],[27858,8],[27879,7],[28814,6],[28824,8],[28845,7],[30878,6],[30888,8],[30909,7],[31102,6],[31112,8],[31133,7],[31735,6],[31745,8],[31766,7],[32954,6],[32964,8],[32985,7],[33920,6],[33930,8],[33951,7]]}}}],["http://localhost:3000/playground",{"_index":1016,"t":{"146":{"position":[[266,32]]}}}],["https://api.openfga.exampl",{"_index":347,"t":{"16":{"position":[[12764,28],[13613,28],[14849,28],[15786,28],[18376,28],[19225,28],[20461,28],[21398,28],[24148,28],[25002,28],[26239,28],[27186,28]]},"80":{"position":[[1212,28],[2386,28],[4149,28],[5491,28]]},"86":{"position":[[340,28],[774,28],[1532,28]]},"102":{"position":[[668,28]]},"112":{"position":[[485,28],[1020,28],[1841,28],[2430,28]]},"124":{"position":[[485,28],[1020,28],[1841,28],[2430,28]]},"170":{"position":[[431,28],[845,28],[1469,28]]},"172":{"position":[[756,28],[1354,28],[2277,28],[3214,28]]},"190":{"position":[[485,28],[1020,28],[1841,28],[2430,28]]},"213":{"position":[[598,28],[1401,28],[2727,28],[3629,28]]},"215":{"position":[[608,28],[1454,28],[2687,28],[3621,28],[5773,28],[6621,28],[7856,28],[8792,28]]},"221":{"position":[[1913,28],[2755,28],[3984,28],[4914,28],[6976,28],[7816,28],[9179,28],[10118,28],[12316,28],[13162,28],[14395,28],[15329,28],[17339,28],[18187,28],[19422,28],[20358,28]]},"230":{"position":[[860,28],[1663,28],[2988,28],[3889,28]]},"232":{"position":[[651,28],[1498,28],[2732,28],[3667,28]]},"245":{"position":[[908,28],[1744,28],[2967,28],[3891,28]]},"247":{"position":[[619,28],[1418,28],[2739,28],[3636,28],[5680,28],[6517,28],[7741,28],[8666,28]]},"257":{"position":[[461,28],[996,28],[1817,28],[2406,28]]},"288":{"position":[[705,28],[1499,28],[2816,28],[3709,28],[5609,28],[6405,28],[7723,28],[8617,28],[10787,28],[11767,28],[13361,28],[14470,28]]},"312":{"position":[[747,28],[1594,28],[2828,28],[3763,28],[5777,28],[6623,28],[7856,28],[8790,28]]},"318":{"position":[[866,28],[1728,28],[3113,28],[4074,28],[6351,28],[7198,28],[8432,28],[9367,28],[11585,28],[12432,28],[13666,28],[14601,28]]},"338":{"position":[[781,28],[1635,28],[2876,28],[3818,28]]},"345":{"position":[[1725,28],[2569,28],[3800,28],[4732,28]]},"369":{"position":[[729,28],[1697,28],[3244,28],[4321,28],[6665,28],[7514,28],[8750,28],[9687,28]]},"371":{"position":[[631,28],[1709,28],[3366,28],[4553,28]]},"373":{"position":[[577,28],[1426,28],[2662,28],[3599,28]]},"385":{"position":[[660,28],[1475,28],[2813,28],[3727,28]]},"387":{"position":[[681,28],[1535,28],[2776,28],[3718,28],[5931,28],[6786,28],[8028,28],[8971,28]]},"445":{"position":[[747,28],[1597,28],[2834,28],[3772,28],[5798,28],[6647,28],[7883,28],[8820,28]]},"449":{"position":[[707,28],[1558,28],[2796,28],[3735,28],[5922,28],[6773,28],[8011,28],[8950,28]]},"467":{"position":[[635,28],[1436,28],[2760,28],[3660,28]]},"469":{"position":[[637,28],[1518,28],[2922,28],[3902,28]]},"471":{"position":[[754,28],[1608,28],[2849,28],[3791,28]]},"485":{"position":[[821,28],[1674,28],[3050,28],[4002,28]]},"487":{"position":[[886,28],[1736,28],[2973,28],[3911,28]]},"505":{"position":[[869,28],[1807,28],[3324,28],[4371,28],[6617,28],[7464,28],[8698,28],[9633,28],[12032,28],[12879,28],[14113,28],[15048,28],[17138,28],[17987,28],[19223,28],[20160,28],[22182,28],[23030,28],[24265,28],[25201,28]]},"521":{"position":[[644,28],[1447,28],[2773,28],[3675,28]]},"523":{"position":[[977,28],[1857,28],[3260,28],[4239,28]]},"525":{"position":[[814,28],[1670,28],[2913,28],[3857,28]]},"537":{"position":[[723,28],[1577,28],[3010,28],[3973,28]]},"541":{"position":[[730,28],[1580,28],[3009,28],[3968,28]]},"543":{"position":[[741,28],[1543,28],[2868,28],[3769,28]]},"545":{"position":[[587,28],[1422,28],[2644,28],[3567,28],[5533,28],[6368,28],[7590,28],[8513,28]]},"547":{"position":[[624,28],[1419,28],[2736,28],[3629,28],[5522,28],[6358,28],[7581,28],[8505,28]]},"562":{"position":[[746,28],[1591,28],[2823,28],[3756,28]]},"569":{"position":[[996,28],[1891,28],[3213,28],[4167,28],[6568,28],[7444,28],[8728,28],[9661,28],[11984,28],[12870,28],[14164,28],[15107,28]]},"571":{"position":[[1199,28],[1976,28],[3180,28],[4016,28]]},"576":{"position":[[737,28],[1621,28],[2947,28],[3926,28],[6071,28],[6955,28],[8281,28],[9260,28]]},"583":{"position":[[658,28],[1619,28],[3025,28],[4102,28]]},"605":{"position":[[1874,28],[2720,28],[3953,28],[4887,28],[7467,28],[8313,28],[9546,28],[10480,28],[13709,28],[14558,28],[15794,28],[16731,28],[19964,28],[20810,28],[22043,28],[22977,28],[25621,28],[26468,28],[27702,28],[28637,28]]},"607":{"position":[[1719,28],[2566,28],[3800,28],[4735,28],[7388,28],[8238,28],[9475,28],[10413,28],[13149,28],[13997,28],[15232,28],[16168,28],[18891,28],[19739,28],[20974,28],[21910,28]]},"622":{"position":[[873,28],[1792,28],[3234,28],[4252,28]]},"624":{"position":[[688,28],[1545,28],[2789,28],[3734,28]]},"630":{"position":[[598,28],[1616,28],[3213,28],[4340,28]]},"632":{"position":[[617,28],[1466,28],[2702,28],[3639,28]]},"634":{"position":[[598,28],[1473,28],[2870,28],[3843,28],[5987,28],[6837,28],[8074,28],[9012,28],[11037,28],[11890,28],[13130,28],[14071,28]]},"644":{"position":[[1379,28],[2227,28],[3462,28],[4398,28],[6416,28],[7263,28],[8497,28],[9432,28]]},"646":{"position":[[688,28],[1542,28],[2919,28],[3872,28],[5880,28],[6731,28],[7969,28],[8908,28]]},"648":{"position":[[663,28],[1609,28],[2911,28],[3909,28],[6322,28],[7201,28],[8659,28],[9647,28],[11770,28],[12651,28],[14110,28],[15099,28],[17333,28],[18181,28],[19416,28],[20352,28],[22415,28],[23261,28],[24494,28],[25428,28]]},"668":{"position":[[5308,28],[6179,28],[7573,28],[8543,28]]},"670":{"position":[[1640,28],[2540,28],[3962,28],[4960,28]]},"692":{"position":[[1015,28],[1824,28],[3156,28],[4064,28],[5971,28],[6784,28],[8120,28],[9032,28],[10959,28],[11915,28],[13506,28],[14581,28],[17250,28],[18098,28],[19333,28],[20269,28],[22368,28],[23214,28],[24447,28],[25381,28]]},"694":{"position":[[3433,28],[4442,28],[6142,28],[7280,28],[9861,28],[10712,28],[11950,28],[12889,28]]},"696":{"position":[[3336,28],[4233,28],[5709,28],[6715,28],[9029,28],[10121,28],[11904,28],[13125,28],[16128,28],[16973,28],[18205,28],[19138,28]]},"698":{"position":[[3531,28],[4490,28],[6084,28],[7162,28],[9837,28],[10687,28],[11924,28],[12862,28]]},"718":{"position":[[2572,28],[3440,28],[4831,28],[5798,28],[7851,28],[8705,28],[9946,28],[10888,28],[12998,28],[13866,28],[15257,28],[16224,28],[18234,28],[19088,28],[20329,28],[21271,28],[23390,28],[24251,28],[25499,28],[26448,28],[28957,28],[30075,28],[31828,28],[33065,28],[35804,28],[36658,28],[37899,28],[38841,28]]},"720":{"position":[[633,28],[1482,28],[2718,28],[3655,28],[7333,28],[8181,28],[9416,28],[10352,28]]},"722":{"position":[[7377,28],[8410,28],[10078,28],[11230,28],[13973,28],[14910,28],[16370,28],[17406,28],[19710,28],[20691,28],[22251,28],[23341,28],[25735,28],[26631,28],[28106,28],[29111,28],[31388,28],[32227,28],[33589,28],[34527,28],[36553,28],[37375,28],[38720,28],[39641,28],[41749,28],[42595,28],[43828,28],[44762,28],[46841,28],[47702,28],[48950,28],[49899,28]]},"734":{"position":[[3106,28],[4435,28],[6455,28],[7913,28]]},"740":{"position":[[933,28],[1777,28],[3008,28],[3940,28],[6044,28],[6892,28],[8127,28],[9063,28],[11188,28],[12057,28],[13449,28],[14417,28],[16400,28],[17245,28],[18477,28],[19410,28]]},"742":{"position":[[5048,28],[5888,28],[7115,28],[8043,28],[10280,28],[11517,28],[13389,28],[14745,28],[17820,28],[18812,28],[20383,28],[21484,28],[23942,28],[24786,28],[26017,28],[26949,28]]},"744":{"position":[[1593,28],[2641,28],[4267,28],[5423,28],[8288,28],[9317,28],[10883,28],[12035,28],[14744,28],[15774,28],[17341,28],[18494,28]]},"746":{"position":[[3834,28],[6419,28],[10143,28],[12937,28]]},"767":{"position":[[702,28],[2350,28],[4801,28],[6598,28],[10658,28],[11846,28],[13669,28],[14976,28],[17839,28],[18957,28],[20710,28],[21947,28],[25497,28],[26344,28],[27578,28],[28513,28],[30676,28],[31524,28],[32759,28],[33695,28],[35712,28],[36563,28],[37801,28],[38740,28],[40770,28],[41622,28],[42861,28],[43801,28]]},"769":{"position":[[798,28],[1646,28],[2881,28],[3817,28],[8133,28],[8977,28],[10208,28],[11140,28],[13473,28],[14326,28],[15566,28],[16507,28],[23221,28],[24073,28],[25312,28],[26252,28],[30884,28],[31727,28],[32957,28],[33888,28],[39871,28],[40714,28],[41944,28],[42875,28]]},"786":{"position":[[2333,28],[3143,28],[4476,28],[5385,28],[7324,28],[8173,28],[9409,28],[10346,28],[12432,28],[13242,28],[14575,28],[15484,28],[17380,28],[18229,28],[19465,28],[20402,28],[22424,28],[23274,28],[24511,28],[25449,28],[29575,28],[30424,28],[31660,28],[32597,28],[34619,28],[35468,28],[36704,28],[37641,28]]},"788":{"position":[[2852,28],[3891,28],[5509,28],[6657,28],[9319,28],[10170,28],[11408,28],[12347,28]]},"790":{"position":[[803,28],[1637,28],[2994,28],[3927,28],[6327,28],[7193,28],[8582,28],[9547,28],[11522,28],[12371,28],[13607,28],[14544,28]]},"792":{"position":[[3446,28],[4340,28],[5813,28],[6816,28],[9501,28],[10354,28],[11594,28],[12535,28],[16053,28],[16885,28],[18240,28],[19171,28]]},"809":{"position":[[2330,28],[3143,28],[4479,28],[5391,28],[7342,28],[8194,28],[9433,28],[10373,28],[12469,28],[13278,28],[14610,28],[15518,28],[17411,28],[18259,28],[19494,28],[20430,28],[22448,28],[23298,28],[24535,28],[25473,28],[29087,28],[29935,28],[31170,28],[32106,28],[34124,28],[34973,28],[36209,28],[37146,28]]},"811":{"position":[[2609,28],[3739,28],[5560,28],[6819,28],[9790,28],[10642,28],[11881,28],[12821,28]]},"813":{"position":[[2442,28],[3451,28],[5039,28],[6157,28],[8920,28],[9775,28],[11017,28],[11960,28]]},"815":{"position":[[3314,28],[4496,28],[6313,28],[7614,28],[10448,28],[11304,28],[12547,28],[13491,28],[15617,28],[16475,28],[17720,28],[18666,28],[20723,28],[21583,28],[22830,28],[23778,28],[25922,28],[26780,28],[28025,28],[28971,28],[31028,28],[31886,28],[33131,28],[34077,28]]}}}],["https://github.com/fullstorydev/grpcurl#instal",{"_index":1040,"t":{"150":{"position":[[302,52]]}}}],["hub",{"_index":1116,"t":{"164":{"position":[[148,3]]}}}],["human",{"_index":1405,"t":{"318":{"position":[[16393,5]]}}}],["hyphen",{"_index":1575,"t":{"401":{"position":[[2567,8]]}}}],["i.",{"_index":477,"t":{"16":{"position":[[29918,5]]},"140":{"position":[[136,6]]},"403":{"position":[[2080,6]]},"425":{"position":[[3250,6]]},"505":{"position":[[11324,4]]}}}],["id",{"_index":263,"t":{"16":{"position":[[5871,2],[28682,2]]},"80":{"position":[[1361,2],[1842,2],[7257,3]]},"86":{"position":[[381,3]]},"92":{"position":[[177,3]]},"96":{"position":[[1024,2]]},"98":{"position":[[1894,2]]},"142":{"position":[[3205,2]]},"174":{"position":[[174,2]]},"176":{"position":[[293,3]]},"178":{"position":[[52,2],[203,2],[360,3]]},"271":{"position":[[55,3],[129,3],[256,3]]},"273":{"position":[[1300,3],[1324,3],[1662,3],[1916,4],[2240,3]]},"318":{"position":[[16303,3]]},"338":{"position":[[5421,3],[5517,3]]},"347":{"position":[[878,3]]},"387":{"position":[[10586,3],[10682,3]]},"403":{"position":[[1285,2],[1288,4],[1354,4],[6262,2],[6265,4]]},"415":{"position":[[1090,2],[1188,3]]},"421":{"position":[[64,2]]},"425":{"position":[[2939,2]]},"467":{"position":[[5018,3],[5161,3]]},"477":{"position":[[1618,3],[1761,3]]},"505":{"position":[[27131,3],[27274,3]]},"525":{"position":[[5657,3],[5753,3]]},"541":{"position":[[203,3]]},"583":{"position":[[5842,2]]},"599":{"position":[[379,2],[477,2]]},"622":{"position":[[300,4]]},"624":{"position":[[5768,3],[5865,3]]}}}],["idea",{"_index":2612,"t":{"769":{"position":[[35598,4]]}}}],["ideal",{"_index":1324,"t":{"273":{"position":[[2651,6]]}}}],["ident",{"_index":48,"t":{"6":{"position":[[61,9]]},"96":{"position":[[212,9]]}}}],["identifi",{"_index":227,"t":{"16":{"position":[[4222,11],[4618,10],[4672,11],[5827,10]]},"174":{"position":[[104,12]]},"176":{"position":[[43,12],[95,11]]},"318":{"position":[[16408,11]]},"343":{"position":[[506,11]]},"399":{"position":[[78,8]]},"401":{"position":[[190,8]]},"403":{"position":[[108,11]]},"421":{"position":[[312,11]]},"423":{"position":[[2982,8]]},"686":{"position":[[588,12]]},"714":{"position":[[1039,12]]},"767":{"position":[[24361,12]]},"788":{"position":[[8792,12]]},"792":{"position":[[723,11]]},"811":{"position":[[9263,12]]}}}],["ignor",{"_index":1912,"t":{"571":{"position":[[283,6]]}}}],["illustr",{"_index":676,"t":{"88":{"position":[[18,10]]},"106":{"position":[[18,10]]},"118":{"position":[[18,10]]},"176":{"position":[[300,10]]},"184":{"position":[[18,10]]},"251":{"position":[[13,11]]},"338":{"position":[[5529,10]]},"387":{"position":[[10694,10]]},"419":{"position":[[56,10]]},"467":{"position":[[5168,10]]},"477":{"position":[[1773,10]]},"499":{"position":[[3,10]]},"505":{"position":[[27286,10]]},"525":{"position":[[5765,10]]},"603":{"position":[[3,10]]},"624":{"position":[[5877,10]]}}}],["imag",{"_index":884,"t":{"138":{"position":[[178,6]]},"142":{"position":[[1642,6],[1949,6],[2253,6],[4286,6],[4620,6],[4904,6]]}}}],["imagin",{"_index":1231,"t":{"230":{"position":[[0,7],[90,7]]},"261":{"position":[[0,7]]},"345":{"position":[[0,7]]},"347":{"position":[[0,7]]},"365":{"position":[[776,7]]},"405":{"position":[[1502,7]]},"543":{"position":[[5,7]]},"698":{"position":[[296,7]]}}}],["immedi",{"_index":1278,"t":{"259":{"position":[[2786,12]]},"349":{"position":[[1459,11]]}}}],["immut",{"_index":2160,"t":{"686":{"position":[[578,9]]},"714":{"position":[[1029,9]]},"767":{"position":[[24351,9]]}}}],["implement",{"_index":617,"t":{"74":{"position":[[1011,14]]},"200":{"position":[[768,12]]},"263":{"position":[[9,9]]},"273":{"position":[[1866,10]]},"304":{"position":[[524,12]]},"491":{"position":[[1006,12]]}}}],["impli",{"_index":302,"t":{"16":{"position":[[9770,8],[9799,7],[10083,7],[10214,7],[11113,7],[12032,7]]},"40":{"position":[[260,7],[391,7]]},"60":{"position":[[2665,7]]},"326":{"position":[[296,7]]},"336":{"position":[[907,7]]},"349":{"position":[[707,5]]},"393":{"position":[[759,7]]},"425":{"position":[[1627,7]]},"499":{"position":[[361,7],[534,7]]},"503":{"position":[[367,7]]},"562":{"position":[[5301,7]]},"605":{"position":[[30449,7]]},"624":{"position":[[5344,5]]},"678":{"position":[[830,5]]},"694":{"position":[[219,8]]},"704":{"position":[[397,5]]},"720":{"position":[[5381,7]]},"722":{"position":[[2894,7],[2924,7],[19958,5],[21124,5],[22671,5],[23970,5],[24877,5]]},"754":{"position":[[787,5],[931,7]]},"769":{"position":[[6036,7],[6318,7],[6433,7],[28038,7],[28559,7]]},"771":{"position":[[332,7]]},"773":{"position":[[503,5],[948,7],[1068,7]]},"796":{"position":[[393,5],[815,7],[1150,7]]}}}],["implicitli",{"_index":573,"t":{"62":{"position":[[1261,10]]},"338":{"position":[[124,10]]}}}],["import",{"_index":331,"t":{"16":{"position":[[12383,6],[13195,6],[14292,6],[15448,6],[15458,6],[15470,6],[15510,6],[16126,6],[16182,6],[16246,6],[17995,6],[18807,6],[19904,6],[21060,6],[21070,6],[21082,6],[21122,6],[21738,6],[21794,6],[21858,6],[23767,6],[24584,6],[25682,6],[26848,6],[26858,6],[26870,6],[26910,6],[27533,6],[27595,6],[27659,6]]},"80":{"position":[[831,6],[1968,6],[3592,6],[5153,6],[5163,6],[5175,6],[5215,6],[5851,6]]},"86":{"position":[[82,6],[453,6],[1728,6],[1738,6],[1778,6],[1843,6]]},"94":{"position":[[1398,6]]},"96":{"position":[[1601,6]]},"98":{"position":[[932,6],[2761,6]]},"102":{"position":[[322,6],[352,6],[1251,6],[1281,6]]},"112":{"position":[[104,6],[602,6],[1284,6],[2092,6],[2102,6],[2114,6],[2154,6]]},"114":{"position":[[922,6],[978,6],[1042,6]]},"124":{"position":[[104,6],[602,6],[1284,6],[2092,6],[2102,6],[2114,6],[2154,6]]},"126":{"position":[[970,6],[1032,6],[1096,6]]},"170":{"position":[[146,6],[498,6],[1613,6],[1623,6],[1663,6]]},"172":{"position":[[478,6],[1033,6],[2706,6],[2716,6],[2756,6],[2805,6]]},"190":{"position":[[104,6],[602,6],[1284,6],[2092,6],[2102,6],[2114,6],[2154,6]]},"192":{"position":[[930,6],[983,6],[1040,6]]},"194":{"position":[[1089,6],[1142,6],[1199,6]]},"213":{"position":[[217,6],[983,6],[2170,6],[3291,6],[3301,6],[3313,6],[3353,6],[3965,6],[4018,6],[4075,6]]},"215":{"position":[[227,6],[1036,6],[2130,6],[3283,6],[3293,6],[3305,6],[3345,6],[3961,6],[4017,6],[4081,6],[5392,6],[6203,6],[7299,6],[8454,6],[8464,6],[8476,6],[8516,6],[9132,6],[9188,6],[9252,6]]},"221":{"position":[[1532,6],[2337,6],[3427,6],[4576,6],[4586,6],[4598,6],[4638,6],[5254,6],[5310,6],[5374,6],[6595,6],[7398,6],[8622,6],[9780,6],[9790,6],[9802,6],[9842,6],[10454,6],[10507,6],[10564,6],[11935,6],[12744,6],[13838,6],[14991,6],[15001,6],[15013,6],[15053,6],[15669,6],[15725,6],[15789,6],[16958,6],[17769,6],[18865,6],[20020,6],[20030,6],[20042,6],[20082,6],[20698,6],[20754,6],[20818,6]]},"230":{"position":[[479,6],[1245,6],[2431,6],[3551,6],[3561,6],[3573,6],[3613,6],[4225,6],[4278,6],[4335,6]]},"232":{"position":[[270,6],[1080,6],[2175,6],[3329,6],[3339,6],[3351,6],[3391,6],[4007,6],[4063,6],[4127,6]]},"245":{"position":[[527,6],[1326,6],[2410,6],[3553,6],[3563,6],[3575,6],[3615,6],[4231,6],[4287,6],[4351,6]]},"247":{"position":[[238,6],[1000,6],[2182,6],[3298,6],[3308,6],[3320,6],[3360,6],[3972,6],[4025,6],[4082,6],[5299,6],[6099,6],[7184,6],[8328,6],[8338,6],[8350,6],[8390,6],[9006,6],[9062,6],[9126,6]]},"257":{"position":[[80,6],[578,6],[1260,6],[2068,6],[2078,6],[2090,6],[2130,6]]},"288":{"position":[[324,6],[1081,6],[2259,6],[3371,6],[3381,6],[3393,6],[3433,6],[4045,6],[4098,6],[4155,6],[5228,6],[5987,6],[7166,6],[8279,6],[8289,6],[8301,6],[8341,6],[8953,6],[9006,6],[9063,6],[10406,6],[11349,6],[12804,6],[14132,6],[14142,6],[14154,6],[14194,6],[14806,6],[14859,6],[14916,6]]},"312":{"position":[[366,6],[1176,6],[2271,6],[3425,6],[3435,6],[3447,6],[3487,6],[4103,6],[4159,6],[4223,6],[5396,6],[6205,6],[7299,6],[8452,6],[8462,6],[8474,6],[8514,6],[9130,6],[9186,6],[9250,6]]},"318":{"position":[[485,6],[1310,6],[2556,6],[3736,6],[3746,6],[3758,6],[3798,6],[4410,6],[4463,6],[4520,6],[5970,6],[6780,6],[7875,6],[9029,6],[9039,6],[9051,6],[9091,6],[9707,6],[9763,6],[9827,6],[11204,6],[12014,6],[13109,6],[14263,6],[14273,6],[14285,6],[14325,6],[14941,6],[14997,6],[15061,6]]},"338":{"position":[[400,6],[1217,6],[2319,6],[3480,6],[3490,6],[3502,6],[3542,6],[4158,6],[4214,6],[4278,6]]},"345":{"position":[[1344,6],[2151,6],[3243,6],[4394,6],[4404,6],[4416,6],[4456,6],[5072,6],[5128,6],[5192,6]]},"369":{"position":[[348,6],[1279,6],[2687,6],[3983,6],[3993,6],[4005,6],[4045,6],[4657,6],[4710,6],[4767,6],[6284,6],[7096,6],[8193,6],[9349,6],[9359,6],[9371,6],[9411,6],[10027,6],[10083,6],[10147,6]]},"371":{"position":[[250,6],[1291,6],[2809,6],[4215,6],[4225,6],[4237,6],[4277,6],[4889,6],[4942,6],[4999,6]]},"373":{"position":[[196,6],[1008,6],[2105,6],[3261,6],[3271,6],[3283,6],[3323,6],[3939,6],[3995,6],[4059,6]]},"385":{"position":[[279,6],[1057,6],[2256,6],[3389,6],[3399,6],[3411,6],[3451,6],[4063,6],[4116,6],[4173,6]]},"387":{"position":[[300,6],[1117,6],[2219,6],[3380,6],[3390,6],[3402,6],[3442,6],[4058,6],[4114,6],[4178,6],[5550,6],[6368,6],[7471,6],[8633,6],[8643,6],[8655,6],[8695,6],[9311,6],[9367,6],[9431,6]]},"395":{"position":[[403,9]]},"397":{"position":[[200,9],[289,9],[403,9],[424,9],[539,9]]},"399":{"position":[[4331,9]]},"401":{"position":[[78,9]]},"403":{"position":[[735,9],[1409,9],[2986,9],[3402,9],[5501,9],[6512,9],[8006,10]]},"405":{"position":[[57,9]]},"429":{"position":[[2763,6],[2816,6],[2873,6]]},"445":{"position":[[366,6],[1179,6],[2277,6],[3434,6],[3444,6],[3456,6],[3496,6],[4112,6],[4168,6],[4232,6],[5417,6],[6229,6],[7326,6],[8482,6],[8492,6],[8504,6],[8544,6],[9160,6],[9216,6],[9280,6]]},"449":{"position":[[326,6],[1140,6],[2239,6],[3397,6],[3407,6],[3419,6],[3459,6],[4075,6],[4131,6],[4195,6],[5541,6],[6355,6],[7454,6],[8612,6],[8622,6],[8634,6],[8674,6],[9290,6],[9346,6],[9410,6]]},"467":{"position":[[254,6],[1018,6],[2203,6],[3322,6],[3332,6],[3344,6],[3384,6],[3996,6],[4049,6],[4106,6]]},"469":{"position":[[256,6],[1100,6],[2365,6],[3564,6],[3574,6],[3586,6],[3626,6],[4238,6],[4291,6],[4348,6]]},"471":{"position":[[373,6],[1190,6],[2292,6],[3453,6],[3463,6],[3475,6],[3515,6],[4131,6],[4187,6],[4251,6]]},"485":{"position":[[440,6],[1256,6],[2493,6],[3664,6],[3674,6],[3686,6],[3726,6],[4338,6],[4391,6],[4448,6]]},"487":{"position":[[505,6],[1318,6],[2416,6],[3573,6],[3583,6],[3595,6],[3635,6],[4251,6],[4307,6],[4371,6]]},"505":{"position":[[488,6],[1389,6],[2767,6],[4033,6],[4043,6],[4055,6],[4095,6],[4707,6],[4760,6],[4817,6],[6236,6],[7046,6],[8141,6],[9295,6],[9305,6],[9317,6],[9357,6],[9973,6],[10029,6],[10093,6],[11651,6],[12461,6],[13556,6],[14710,6],[14720,6],[14732,6],[14772,6],[15388,6],[15444,6],[15508,6],[16757,6],[17569,6],[18666,6],[19822,6],[19832,6],[19844,6],[19884,6],[20500,6],[20556,6],[20620,6],[21801,6],[22612,6],[23708,6],[24863,6],[24873,6],[24885,6],[24925,6],[25541,6],[25597,6],[25661,6]]},"521":{"position":[[263,6],[1029,6],[2216,6],[3337,6],[3347,6],[3359,6],[3399,6],[4011,6],[4064,6],[4121,6]]},"523":{"position":[[596,6],[1439,6],[2703,6],[3901,6],[3911,6],[3923,6],[3963,6],[4575,6],[4628,6],[4685,6]]},"525":{"position":[[433,6],[1252,6],[2356,6],[3519,6],[3529,6],[3541,6],[3581,6],[4197,6],[4253,6],[4317,6]]},"537":{"position":[[342,6],[1159,6],[2453,6],[3635,6],[3645,6],[3657,6],[3697,6],[4309,6],[4362,6],[4419,6]]},"541":{"position":[[349,6],[1162,6],[2452,6],[3630,6],[3640,6],[3652,6],[3692,6],[4304,6],[4357,6],[4414,6]]},"543":{"position":[[360,6],[1125,6],[2311,6],[3431,6],[3441,6],[3453,6],[3493,6],[4105,6],[4158,6],[4215,6]]},"545":{"position":[[206,6],[1004,6],[2087,6],[3229,6],[3239,6],[3251,6],[3291,6],[3907,6],[3963,6],[4027,6],[5152,6],[5950,6],[7033,6],[8175,6],[8185,6],[8197,6],[8237,6],[8853,6],[8909,6],[8973,6]]},"547":{"position":[[243,6],[1001,6],[2179,6],[3291,6],[3301,6],[3313,6],[3353,6],[3965,6],[4018,6],[4075,6],[5141,6],[5940,6],[7024,6],[8167,6],[8177,6],[8189,6],[8229,6],[8845,6],[8901,6],[8965,6]]},"562":{"position":[[365,6],[1173,6],[2266,6],[3418,6],[3428,6],[3440,6],[3480,6],[4096,6],[4152,6],[4216,6]]},"569":{"position":[[615,6],[1473,6],[2656,6],[3829,6],[3839,6],[3851,6],[3891,6],[4506,6],[4565,6],[4621,6],[6187,6],[7026,6],[8171,6],[9323,6],[9333,6],[9345,6],[9385,6],[10000,6],[10059,6],[10115,6],[11603,6],[12452,6],[13607,6],[14769,6],[14779,6],[14791,6],[14831,6],[15446,6],[15505,6],[15561,6]]},"571":{"position":[[818,6],[1558,6],[2623,6],[3678,6],[3688,6],[3700,6],[3740,6],[4355,6],[4414,6],[4470,6]]},"576":{"position":[[356,6],[1203,6],[2390,6],[3588,6],[3598,6],[3610,6],[3650,6],[4267,6],[4330,6],[4388,6],[5690,6],[6537,6],[7724,6],[8922,6],[8932,6],[8944,6],[8984,6],[9601,6],[9664,6],[9722,6]]},"583":{"position":[[277,6],[1201,6],[2468,6],[3764,6],[3774,6],[3786,6],[3826,6],[4449,6],[4511,6],[4575,6]]},"605":{"position":[[1493,6],[2302,6],[3396,6],[4549,6],[4559,6],[4571,6],[4611,6],[5227,6],[5283,6],[5347,6],[7086,6],[7895,6],[8989,6],[10142,6],[10152,6],[10164,6],[10204,6],[10820,6],[10876,6],[10940,6],[13328,6],[14140,6],[15237,6],[16393,6],[16403,6],[16415,6],[16455,6],[17071,6],[17127,6],[17191,6],[19583,6],[20392,6],[21486,6],[22639,6],[22649,6],[22661,6],[22701,6],[23317,6],[23373,6],[23437,6],[25240,6],[26050,6],[27145,6],[28299,6],[28309,6],[28321,6],[28361,6],[28977,6],[29033,6],[29097,6]]},"607":{"position":[[1338,6],[2148,6],[3243,6],[4397,6],[4407,6],[4419,6],[4459,6],[5075,6],[5131,6],[5195,6],[7007,6],[7820,6],[8918,6],[10075,6],[10085,6],[10097,6],[10137,6],[10753,6],[10809,6],[10873,6],[12768,6],[13579,6],[14675,6],[15830,6],[15840,6],[15852,6],[15892,6],[16508,6],[16564,6],[16628,6],[18510,6],[19321,6],[20417,6],[21572,6],[21582,6],[21594,6],[21634,6],[22250,6],[22306,6],[22370,6]]},"622":{"position":[[492,6],[1374,6],[2677,6],[3914,6],[3924,6],[3936,6],[3976,6],[4588,6],[4641,6],[4698,6]]},"624":{"position":[[307,6],[1127,6],[2232,6],[3396,6],[3406,6],[3418,6],[3458,6],[4074,6],[4130,6],[4194,6],[5280,9]]},"630":{"position":[[217,6],[1198,6],[2656,6],[4002,6],[4012,6],[4024,6],[4064,6],[4676,6],[4729,6],[4786,6]]},"632":{"position":[[236,6],[1048,6],[2145,6],[3301,6],[3311,6],[3323,6],[3363,6],[3979,6],[4035,6],[4099,6]]},"634":{"position":[[217,6],[1055,6],[2313,6],[3505,6],[3515,6],[3527,6],[3567,6],[4179,6],[4232,6],[4289,6],[5606,6],[6419,6],[7517,6],[8674,6],[8684,6],[8696,6],[8736,6],[9352,6],[9408,6],[9472,6],[10656,6],[11472,6],[12573,6],[13733,6],[13743,6],[13755,6],[13795,6],[14411,6],[14467,6],[14531,6]]},"644":{"position":[[998,6],[1809,6],[2905,6],[4060,6],[4070,6],[4082,6],[4122,6],[4738,6],[4794,6],[4858,6],[6035,6],[6845,6],[7940,6],[9094,6],[9104,6],[9116,6],[9156,6],[9772,6],[9828,6],[9892,6]]},"646":{"position":[[307,6],[1124,6],[2362,6],[3534,6],[3544,6],[3556,6],[3596,6],[4208,6],[4261,6],[4318,6],[5499,6],[6313,6],[7412,6],[8570,6],[8580,6],[8592,6],[8632,6],[9248,6],[9304,6],[9368,6]]},"648":{"position":[[282,6],[1191,6],[2354,6],[3571,6],[3581,6],[3593,6],[3633,6],[4248,6],[4307,6],[4363,6],[5941,6],[6783,6],[8102,6],[9309,6],[9319,6],[9331,6],[9371,6],[9983,6],[10036,6],[10093,6],[11389,6],[12233,6],[13553,6],[14761,6],[14771,6],[14783,6],[14823,6],[15435,6],[15488,6],[15545,6],[16952,6],[17763,6],[18859,6],[20014,6],[20024,6],[20036,6],[20076,6],[20692,6],[20748,6],[20812,6],[22034,6],[22843,6],[23937,6],[25090,6],[25100,6],[25112,6],[25152,6],[25768,6],[25824,6],[25888,6]]},"660":{"position":[[6858,6],[6911,6],[6968,6]]},"666":{"position":[[1086,6],[1142,6],[1206,6],[2983,6],[3039,6],[3103,6],[4894,6],[4950,6],[5014,6],[6799,6],[6855,6],[6919,6],[8707,6],[8763,6],[8827,6],[10615,6],[10671,6],[10735,6]]},"668":{"position":[[3667,6],[3723,6],[3787,6],[4927,6],[5761,6],[7016,6],[8205,6],[8215,6],[8227,6],[8267,6],[8879,6],[8932,6],[8989,6],[10917,6],[10973,6],[11037,6]]},"670":{"position":[[1259,6],[2122,6],[3405,6],[4622,6],[4632,6],[4644,6],[4684,6],[5296,6],[5349,6],[5406,6],[7922,6],[7978,6],[8042,6],[10750,6],[10806,6],[10870,6]]},"672":{"position":[[6397,6],[6450,6],[6507,6]]},"692":{"position":[[634,6],[1406,6],[2599,6],[3726,6],[3736,6],[3748,6],[3788,6],[4400,6],[4453,6],[4510,6],[5590,6],[6366,6],[7563,6],[8694,6],[8704,6],[8716,6],[8756,6],[9368,6],[9421,6],[9478,6],[10578,6],[11497,6],[12949,6],[14243,6],[14253,6],[14265,6],[14305,6],[14917,6],[14970,6],[15027,6],[16869,6],[17680,6],[18776,6],[19931,6],[19941,6],[19953,6],[19993,6],[20609,6],[20665,6],[20729,6],[21987,6],[22796,6],[23890,6],[25043,6],[25053,6],[25065,6],[25105,6],[25721,6],[25777,6],[25841,6]]},"694":{"position":[[3052,6],[4024,6],[5585,6],[6942,6],[6952,6],[6964,6],[7004,6],[7616,6],[7669,6],[7726,6],[9480,6],[10294,6],[11393,6],[12551,6],[12561,6],[12573,6],[12613,6],[13229,6],[13285,6],[13349,6]]},"696":{"position":[[2955,6],[3815,6],[5152,6],[6377,6],[6387,6],[6399,6],[6439,6],[7051,6],[7104,6],[7161,6],[8648,6],[9703,6],[11347,6],[12787,6],[12797,6],[12809,6],[12849,6],[13461,6],[13514,6],[13571,6],[15747,6],[16555,6],[17648,6],[18800,6],[18810,6],[18822,6],[18862,6],[19478,6],[19534,6],[19598,6]]},"698":{"position":[[3150,6],[4072,6],[5527,6],[6824,6],[6834,6],[6846,6],[6886,6],[7498,6],[7551,6],[7608,6],[9456,6],[10269,6],[11367,6],[12524,6],[12534,6],[12546,6],[12586,6],[13202,6],[13258,6],[13322,6]]},"718":{"position":[[2191,6],[3022,6],[4274,6],[5460,6],[5470,6],[5482,6],[5522,6],[6134,6],[6187,6],[6244,6],[7470,6],[8287,6],[9389,6],[10550,6],[10560,6],[10572,6],[10612,6],[11228,6],[11284,6],[11348,6],[12617,6],[13448,6],[14700,6],[15886,6],[15896,6],[15908,6],[15948,6],[16560,6],[16613,6],[16670,6],[17853,6],[18670,6],[19772,6],[20933,6],[20943,6],[20955,6],[20995,6],[21611,6],[21667,6],[21731,6],[23009,6],[23833,6],[24942,6],[26110,6],[26120,6],[26132,6],[26172,6],[26788,6],[26844,6],[26908,6],[28576,6],[29657,6],[31271,6],[32727,6],[32737,6],[32749,6],[32789,6],[33401,6],[33454,6],[33511,6],[35423,6],[36240,6],[37342,6],[38503,6],[38513,6],[38525,6],[38565,6],[39181,6],[39237,6],[39301,6]]},"720":{"position":[[252,6],[1064,6],[2161,6],[3317,6],[3327,6],[3339,6],[3379,6],[3995,6],[4051,6],[4115,6],[6952,6],[7763,6],[8859,6],[10014,6],[10024,6],[10036,6],[10076,6],[10692,6],[10748,6],[10812,6]]},"722":{"position":[[6996,6],[7992,6],[9521,6],[10892,6],[10902,6],[10914,6],[10954,6],[11566,6],[11619,6],[11676,6],[13592,6],[14492,6],[15813,6],[17068,6],[17078,6],[17090,6],[17130,6],[17742,6],[17795,6],[17852,6],[19329,6],[20273,6],[21694,6],[23003,6],[23013,6],[23025,6],[23065,6],[23677,6],[23730,6],[23787,6],[25354,6],[26213,6],[27549,6],[28773,6],[28783,6],[28795,6],[28835,6],[29447,6],[29500,6],[29557,6],[31007,6],[31809,6],[33032,6],[34189,6],[34199,6],[34211,6],[34251,6],[34863,6],[34916,6],[34973,6],[36172,6],[36957,6],[38163,6],[39303,6],[39313,6],[39325,6],[39365,6],[39977,6],[40030,6],[40087,6],[41368,6],[42177,6],[43271,6],[44424,6],[44434,6],[44446,6],[44486,6],[45102,6],[45158,6],[45222,6],[46460,6],[47284,6],[48393,6],[49561,6],[49571,6],[49583,6],[49623,6],[50239,6],[50295,6],[50359,6]]},"734":{"position":[[2725,6],[4017,6],[5898,6],[7575,6],[7585,6],[7597,6],[7637,6],[8249,6],[8302,6],[8359,6]]},"740":{"position":[[552,6],[1359,6],[2451,6],[3602,6],[3612,6],[3624,6],[3664,6],[4280,6],[4336,6],[4400,6],[5663,6],[6474,6],[7570,6],[8725,6],[8735,6],[8747,6],[8787,6],[9403,6],[9459,6],[9523,6],[10807,6],[11639,6],[12892,6],[14079,6],[14089,6],[14101,6],[14141,6],[14753,6],[14806,6],[14863,6],[16019,6],[16827,6],[17920,6],[19072,6],[19082,6],[19094,6],[19134,6],[19750,6],[19806,6],[19870,6]]},"742":{"position":[[4667,6],[5470,6],[6558,6],[7705,6],[7715,6],[7727,6],[7767,6],[8383,6],[8439,6],[8503,6],[9899,6],[11099,6],[12832,6],[14407,6],[14417,6],[14429,6],[14469,6],[15081,6],[15134,6],[15191,6],[17439,6],[18394,6],[19826,6],[21146,6],[21156,6],[21168,6],[21208,6],[21820,6],[21873,6],[21930,6],[23561,6],[24368,6],[25460,6],[26611,6],[26621,6],[26633,6],[26673,6],[27289,6],[27345,6],[27409,6]]},"744":{"position":[[1212,6],[2223,6],[3710,6],[5085,6],[5095,6],[5107,6],[5147,6],[5759,6],[5812,6],[5869,6],[7907,6],[8899,6],[10326,6],[11697,6],[11707,6],[11719,6],[11759,6],[12375,6],[12431,6],[12495,6],[14363,6],[15356,6],[16784,6],[18156,6],[18166,6],[18178,6],[18218,6],[18834,6],[18890,6],[18954,6]]},"746":{"position":[[3453,6],[6001,6],[9586,6],[12599,6],[12609,6],[12621,6],[12661,6],[13273,6],[13326,6],[13383,6]]},"767":{"position":[[321,6],[1932,6],[4244,6],[6260,6],[6270,6],[6282,6],[6322,6],[6934,6],[6987,6],[7044,6],[10277,6],[11428,6],[13112,6],[14638,6],[14648,6],[14660,6],[14700,6],[15312,6],[15365,6],[15422,6],[17458,6],[18539,6],[20153,6],[21609,6],[21619,6],[21631,6],[21671,6],[22283,6],[22336,6],[22393,6],[25116,6],[25926,6],[27021,6],[28175,6],[28185,6],[28197,6],[28237,6],[28853,6],[28909,6],[28973,6],[30295,6],[31106,6],[32202,6],[33357,6],[33367,6],[33379,6],[33419,6],[34035,6],[34091,6],[34155,6],[35331,6],[36145,6],[37244,6],[38402,6],[38412,6],[38424,6],[38464,6],[39080,6],[39136,6],[39200,6],[40389,6],[41204,6],[42304,6],[43463,6],[43473,6],[43485,6],[43525,6],[44141,6],[44197,6],[44261,6]]},"769":{"position":[[417,6],[1228,6],[2324,6],[3479,6],[3489,6],[3501,6],[3541,6],[4157,6],[4213,6],[4277,6],[7752,6],[8559,6],[9651,6],[10802,6],[10812,6],[10824,6],[10864,6],[11480,6],[11536,6],[11600,6],[13092,6],[13908,6],[15009,6],[16169,6],[16179,6],[16191,6],[16231,6],[16847,6],[16903,6],[16967,6],[22840,6],[23655,6],[24755,6],[25914,6],[25924,6],[25936,6],[25976,6],[26592,6],[26648,6],[26712,6],[30503,6],[31309,6],[32400,6],[33550,6],[33560,6],[33572,6],[33612,6],[34228,6],[34284,6],[34348,6],[39490,6],[40296,6],[41387,6],[42537,6],[42547,6],[42559,6],[42599,6],[43215,6],[43271,6],[43335,6]]},"786":{"position":[[1952,6],[2725,6],[3919,6],[5047,6],[5057,6],[5069,6],[5109,6],[5721,6],[5774,6],[5831,6],[6943,6],[7755,6],[8852,6],[10008,6],[10018,6],[10030,6],[10070,6],[10686,6],[10742,6],[10806,6],[12051,6],[12824,6],[14018,6],[15146,6],[15156,6],[15168,6],[15208,6],[15820,6],[15873,6],[15930,6],[16999,6],[17811,6],[18908,6],[20064,6],[20074,6],[20086,6],[20126,6],[20742,6],[20798,6],[20862,6],[22043,6],[22856,6],[23954,6],[25111,6],[25121,6],[25133,6],[25173,6],[25789,6],[25845,6],[25909,6],[29194,6],[30006,6],[31103,6],[32259,6],[32269,6],[32281,6],[32321,6],[32937,6],[32993,6],[33057,6],[34238,6],[35050,6],[36147,6],[37303,6],[37313,6],[37325,6],[37365,6],[37981,6],[38037,6],[38101,6]]},"788":{"position":[[2471,6],[3473,6],[4952,6],[6319,6],[6329,6],[6341,6],[6381,6],[6993,6],[7046,6],[7103,6],[8938,6],[9752,6],[10851,6],[12009,6],[12019,6],[12031,6],[12071,6],[12687,6],[12743,6],[12807,6]]},"790":{"position":[[422,6],[1219,6],[2437,6],[3589,6],[3599,6],[3611,6],[3651,6],[4263,6],[4316,6],[4373,6],[5946,6],[6775,6],[8025,6],[9209,6],[9219,6],[9231,6],[9271,6],[9883,6],[9936,6],[9993,6],[11141,6],[11953,6],[13050,6],[14206,6],[14216,6],[14228,6],[14268,6],[14884,6],[14940,6],[15004,6]]},"792":{"position":[[3065,6],[3922,6],[5256,6],[6478,6],[6488,6],[6500,6],[6540,6],[7152,6],[7205,6],[7262,6],[9120,6],[9936,6],[11037,6],[12197,6],[12207,6],[12219,6],[12259,6],[12875,6],[12931,6],[12995,6],[15672,6],[16467,6],[17683,6],[18833,6],[18843,6],[18855,6],[18895,6],[19507,6],[19560,6],[19617,6]]},"809":{"position":[[1949,6],[2725,6],[3922,6],[5053,6],[5063,6],[5075,6],[5115,6],[5727,6],[5780,6],[5837,6],[6961,6],[7776,6],[8876,6],[10035,6],[10045,6],[10057,6],[10097,6],[10713,6],[10769,6],[10833,6],[12088,6],[12860,6],[14053,6],[15180,6],[15190,6],[15202,6],[15242,6],[15854,6],[15907,6],[15964,6],[17030,6],[17841,6],[18937,6],[20092,6],[20102,6],[20114,6],[20154,6],[20770,6],[20826,6],[20890,6],[22067,6],[22880,6],[23978,6],[25135,6],[25145,6],[25157,6],[25197,6],[25813,6],[25869,6],[25933,6],[28706,6],[29517,6],[30613,6],[31768,6],[31778,6],[31790,6],[31830,6],[32446,6],[32502,6],[32566,6],[33743,6],[34555,6],[35652,6],[36808,6],[36818,6],[36830,6],[36870,6],[37486,6],[37542,6],[37606,6]]},"811":{"position":[[2228,6],[3321,6],[5003,6],[6481,6],[6491,6],[6503,6],[6543,6],[7155,6],[7208,6],[7265,6],[9409,6],[10224,6],[11324,6],[12483,6],[12493,6],[12505,6],[12545,6],[13161,6],[13217,6],[13281,6]]},"813":{"position":[[2061,6],[3033,6],[4482,6],[5819,6],[5829,6],[5841,6],[5881,6],[6493,6],[6546,6],[6603,6],[8539,6],[9357,6],[10460,6],[11622,6],[11632,6],[11644,6],[11684,6],[12300,6],[12356,6],[12420,6]]},"815":{"position":[[2933,6],[4078,6],[5756,6],[7276,6],[7286,6],[7298,6],[7338,6],[7950,6],[8003,6],[8060,6],[10067,6],[10886,6],[11990,6],[13153,6],[13163,6],[13175,6],[13215,6],[13831,6],[13887,6],[13951,6],[15236,6],[16057,6],[17163,6],[18328,6],[18338,6],[18350,6],[18390,6],[19006,6],[19062,6],[19126,6],[20342,6],[21165,6],[22273,6],[23440,6],[23450,6],[23462,6],[23502,6],[24118,6],[24174,6],[24238,6],[25541,6],[26362,6],[27468,6],[28633,6],[28643,6],[28655,6],[28695,6],[29311,6],[29367,6],[29431,6],[30647,6],[31468,6],[32574,6],[33739,6],[33749,6],[33761,6],[33801,6],[34417,6],[34473,6],[34537,6]]}}}],["impract",{"_index":1315,"t":{"273":{"position":[[1429,12]]}}}],["improv",{"_index":2247,"t":{"700":{"position":[[153,7]]},"724":{"position":[[424,7]]},"771":{"position":[[735,7]]}}}],["inadvert",{"_index":1404,"t":{"318":{"position":[[16159,13]]}}}],["inc",{"_index":2345,"t":{"734":{"position":[[139,4],[186,4]]}}}],["includ",{"_index":32,"t":{"4":{"position":[[293,9]]},"16":{"position":[[29746,10]]},"48":{"position":[[231,10]]},"142":{"position":[[50,10]]},"154":{"position":[[118,8]]},"176":{"position":[[112,7]]},"230":{"position":[[202,9]]},"247":{"position":[[5076,7]]},"251":{"position":[[189,8],[264,7]]},"259":{"position":[[3017,8]]},"261":{"position":[[1861,7],[1924,7]]},"397":{"position":[[1094,7]]},"427":{"position":[[160,8],[315,9]]},"574":{"position":[[33,10]]},"664":{"position":[[272,8]]},"722":{"position":[[113,7],[1324,8]]},"760":{"position":[[209,7]]},"813":{"position":[[14655,10]]}}}],["incom",{"_index":761,"t":{"96":{"position":[[1573,8]]},"98":{"position":[[71,8]]}}}],["incompat",{"_index":1699,"t":{"427":{"position":[[89,17]]}}}],["incorrect",{"_index":2462,"t":{"744":{"position":[[686,9]]}}}],["incorrectli",{"_index":1697,"t":{"425":{"position":[[3548,12]]}}}],["increas",{"_index":1092,"t":{"158":{"position":[[375,8]]},"273":{"position":[[1396,10]]},"744":{"position":[[655,8]]}}}],["increment",{"_index":2420,"t":{"742":{"position":[[9641,10]]}}}],["inde",{"_index":2155,"t":{"682":{"position":[[363,6]]},"716":{"position":[[185,6]]}}}],["independ",{"_index":872,"t":{"132":{"position":[[190,13]]}}}],["index",{"_index":877,"t":{"132":{"position":[[349,7]]},"269":{"position":[[52,5],[690,5]]},"273":{"position":[[1748,5],[1927,5],[2184,5],[3143,5],[3246,6]]},"672":{"position":[[9627,6]]},"746":{"position":[[19130,6]]}}}],["indic",{"_index":268,"t":{"16":{"position":[[6170,10],[7632,8],[29848,8]]},"34":{"position":[[77,8]]},"56":{"position":[[194,10],[358,10],[515,10]]},"58":{"position":[[1017,10]]},"60":{"position":[[2856,8]]},"62":{"position":[[72,8],[961,9],[1089,10],[1213,10]]},"64":{"position":[[87,8],[1025,9]]},"66":{"position":[[86,8],[1124,9]]},"219":{"position":[[674,10],[738,8]]},"312":{"position":[[10614,10],[10697,8],[10800,8]]},"314":{"position":[[950,10]]},"318":{"position":[[183,8],[287,8],[5651,8],[16123,10]]},"334":{"position":[[55,8],[187,8]]},"338":{"position":[[39,9]]},"340":{"position":[[116,8],[214,8]]},"343":{"position":[[75,8]]},"367":{"position":[[1183,10]]},"375":{"position":[[146,8]]},"385":{"position":[[35,8]]},"425":{"position":[[32,8]]},"437":{"position":[[3339,8]]},"443":{"position":[[643,8]]},"453":{"position":[[36,8],[368,8],[627,8],[722,8],[883,8]]},"455":{"position":[[1710,8]]},"459":{"position":[[629,8]]},"461":{"position":[[427,8],[593,8],[674,8]]},"463":{"position":[[178,8],[1027,10]]},"469":{"position":[[54,8]]},"475":{"position":[[337,8],[400,8]]},"483":{"position":[[41,8],[129,8]]},"485":{"position":[[133,8]]},"493":{"position":[[1629,10],[1721,8]]},"497":{"position":[[689,10],[781,8]]},"503":{"position":[[319,8]]},"507":{"position":[[231,8],[329,8]]},"525":{"position":[[39,10],[111,10]]},"541":{"position":[[132,10]]},"609":{"position":[[266,8]]},"611":{"position":[[397,8]]},"624":{"position":[[5632,8]]},"640":{"position":[[716,8]]},"668":{"position":[[2683,9],[4722,10]]},"678":{"position":[[594,8],[893,8],[1173,8]]},"698":{"position":[[2288,9]]},"704":{"position":[[130,8],[206,8],[453,8],[634,8],[734,10]]},"716":{"position":[[1901,8]]},"718":{"position":[[1700,9]]},"722":{"position":[[4264,8],[6671,8],[19029,9],[19151,8]]},"742":{"position":[[1200,8],[4410,9]]},"754":{"position":[[456,8],[850,8]]},"767":{"position":[[24479,10]]},"769":{"position":[[28396,9],[35490,10]]},"771":{"position":[[267,8],[436,8]]},"773":{"position":[[223,8],[342,8],[617,8],[734,8],[834,10],[858,8],[1003,8],[1143,8]]},"775":{"position":[[625,8]]},"792":{"position":[[2801,10]]},"796":{"position":[[105,8],[216,8],[510,8],[603,8],[703,10],[727,8],[917,8],[1085,8],[1228,8]]},"798":{"position":[[625,8],[799,8]]},"809":{"position":[[1462,9]]},"813":{"position":[[1861,8]]}}}],["indirect",{"_index":543,"t":{"58":{"position":[[1259,8]]},"60":{"position":[[16,8]]},"601":{"position":[[1341,8]]},"605":{"position":[[1055,8],[24670,8]]},"607":{"position":[[899,8],[17969,8]]}}}],["individu",{"_index":73,"t":{"8":{"position":[[50,10],[465,12]]},"324":{"position":[[94,10]]},"403":{"position":[[4124,10],[4805,10]]},"517":{"position":[[423,10]]},"583":{"position":[[6229,10]]},"591":{"position":[[98,10],[303,12],[417,11]]},"788":{"position":[[125,12],[8776,10]]},"811":{"position":[[9247,10]]}}}],["influenc",{"_index":1749,"t":{"453":{"position":[[420,9]]}}}],["info",{"_index":274,"t":{"16":{"position":[[7284,4]]},"54":{"position":[[3683,4]]},"56":{"position":[[918,4]]},"58":{"position":[[928,4]]},"62":{"position":[[926,4]]},"64":{"position":[[990,4]]},"66":{"position":[[1089,4]]},"130":{"position":[[223,6]]},"142":{"position":[[2992,4]]},"160":{"position":[[224,6]]},"290":{"position":[[442,4]]},"336":{"position":[[695,4]]},"397":{"position":[[791,4]]},"401":{"position":[[2485,4]]},"415":{"position":[[966,4]]},"417":{"position":[[277,4]]},"437":{"position":[[2221,4]]},"463":{"position":[[965,4]]},"465":{"position":[[930,4]]},"571":{"position":[[5315,4]]},"601":{"position":[[1132,4]]},"605":{"position":[[12211,4],[12766,4],[24473,4]]},"607":{"position":[[652,4]]},"648":{"position":[[16666,4]]},"698":{"position":[[2189,4]]},"716":{"position":[[1711,4]]},"718":{"position":[[1677,4]]},"722":{"position":[[2693,4],[4201,4],[19019,4]]},"769":{"position":[[5890,4],[18352,4],[19527,4],[29942,4]]},"786":{"position":[[1561,4],[28738,4]]},"792":{"position":[[2763,4],[14415,4]]},"809":{"position":[[1439,4],[28207,4]]},"811":{"position":[[1792,4]]},"813":{"position":[[1780,4],[13854,4]]}}}],["inform",{"_index":240,"t":{"16":{"position":[[4453,12],[5169,12],[7477,12],[9437,12],[22915,12],[28747,12],[29335,12],[30260,12]]},"52":{"position":[[109,7]]},"66":{"position":[[1050,12]]},"82":{"position":[[47,11]]},"96":{"position":[[804,11]]},"140":{"position":[[601,11]]},"154":{"position":[[89,11]]},"174":{"position":[[117,11]]},"351":{"position":[[36,12]]},"383":{"position":[[105,11]]},"433":{"position":[[39,11]]},"589":{"position":[[43,11]]},"652":{"position":[[39,11]]},"666":{"position":[[86,11]]},"710":{"position":[[68,11]]},"720":{"position":[[5637,9]]},"740":{"position":[[86,11]]},"817":{"position":[[47,12]]}}}],["ingr",{"_index":2000,"t":{"607":{"position":[[18124,6],[18288,6]]}}}],["inherit",{"_index":541,"t":{"58":{"position":[[1141,9]]},"624":{"position":[[5350,11],[5457,7]]},"668":{"position":[[2339,7]]},"742":{"position":[[4122,7]]},"781":{"position":[[243,8],[303,7]]},"790":{"position":[[71,7]]}}}],["initi",{"_index":326,"t":{"16":{"position":[[12289,10],[12449,10],[13104,10],[13263,10],[14198,10],[14473,10],[15358,10],[17901,10],[18061,10],[18716,10],[18875,10],[19810,10],[20085,10],[20970,10],[23673,10],[23833,10],[24493,10],[24652,10],[25588,10],[25863,10],[26758,10]]},"80":{"position":[[737,10],[897,10],[1877,10],[2036,10],[3498,10],[3773,10],[5063,10]]},"112":{"position":[[170,10],[670,10],[1465,10]]},"124":{"position":[[170,10],[670,10],[1465,10]]},"190":{"position":[[170,10],[670,10],[1465,10]]},"213":{"position":[[123,10],[283,10],[892,10],[1051,10],[2076,10],[2351,10],[3201,10]]},"215":{"position":[[133,10],[293,10],[945,10],[1104,10],[2036,10],[2311,10],[3193,10],[5298,10],[5458,10],[6112,10],[6271,10],[7205,10],[7480,10],[8364,10]]},"221":{"position":[[1438,10],[1598,10],[2246,10],[2405,10],[3333,10],[3608,10],[4486,10],[6501,10],[6661,10],[7307,10],[7466,10],[8528,10],[8803,10],[9690,10],[11841,10],[12001,10],[12653,10],[12812,10],[13744,10],[14019,10],[14901,10],[16864,10],[17024,10],[17678,10],[17837,10],[18771,10],[19046,10],[19930,10]]},"230":{"position":[[385,10],[545,10],[1154,10],[1313,10],[2337,10],[2612,10],[3461,10]]},"232":{"position":[[176,10],[336,10],[989,10],[1148,10],[2081,10],[2356,10],[3239,10]]},"245":{"position":[[433,10],[593,10],[1235,10],[1394,10],[2316,10],[2591,10],[3463,10]]},"247":{"position":[[144,10],[304,10],[909,10],[1068,10],[2088,10],[2363,10],[3208,10],[5205,10],[5365,10],[6008,10],[6167,10],[7090,10],[7365,10],[8238,10]]},"257":{"position":[[146,10],[646,10],[1441,10]]},"288":{"position":[[230,10],[390,10],[990,10],[1149,10],[2165,10],[2440,10],[3281,10],[5134,10],[5294,10],[5896,10],[6055,10],[7072,10],[7347,10],[8189,10],[10312,10],[10472,10],[11258,10],[11417,10],[12710,10],[12985,10],[14042,10]]},"312":{"position":[[272,10],[432,10],[1085,10],[1244,10],[2177,10],[2452,10],[3335,10],[5302,10],[5462,10],[6114,10],[6273,10],[7205,10],[7480,10],[8362,10]]},"318":{"position":[[391,10],[551,10],[1219,10],[1378,10],[2462,10],[2737,10],[3646,10],[5876,10],[6036,10],[6689,10],[6848,10],[7781,10],[8056,10],[8939,10],[11110,10],[11270,10],[11923,10],[12082,10],[13015,10],[13290,10],[14173,10]]},"338":{"position":[[306,10],[466,10],[1126,10],[1285,10],[2225,10],[2500,10],[3390,10]]},"345":{"position":[[1250,10],[1410,10],[2060,10],[2219,10],[3149,10],[3424,10],[4304,10]]},"355":{"position":[[131,7]]},"369":{"position":[[254,10],[414,10],[1188,10],[1347,10],[2593,10],[2868,10],[3893,10],[6190,10],[6350,10],[7005,10],[7164,10],[8099,10],[8374,10],[9259,10]]},"371":{"position":[[156,10],[316,10],[1200,10],[1359,10],[2715,10],[2990,10],[4125,10]]},"373":{"position":[[102,10],[262,10],[917,10],[1076,10],[2011,10],[2286,10],[3171,10]]},"385":{"position":[[185,10],[345,10],[966,10],[1125,10],[2162,10],[2437,10],[3299,10]]},"387":{"position":[[206,10],[366,10],[1026,10],[1185,10],[2125,10],[2400,10],[3290,10],[5456,10],[5616,10],[6277,10],[6436,10],[7377,10],[7652,10],[8543,10]]},"445":{"position":[[272,10],[432,10],[1088,10],[1247,10],[2183,10],[2458,10],[3344,10],[5323,10],[5483,10],[6138,10],[6297,10],[7232,10],[7507,10],[8392,10]]},"449":{"position":[[232,10],[392,10],[1049,10],[1208,10],[2145,10],[2420,10],[3307,10],[5447,10],[5607,10],[6264,10],[6423,10],[7360,10],[7635,10],[8522,10]]},"467":{"position":[[160,10],[320,10],[927,10],[1086,10],[2109,10],[2384,10],[3232,10]]},"469":{"position":[[162,10],[322,10],[1009,10],[1168,10],[2271,10],[2546,10],[3474,10]]},"471":{"position":[[279,10],[439,10],[1099,10],[1258,10],[2198,10],[2473,10],[3363,10]]},"485":{"position":[[346,10],[506,10],[1165,10],[1324,10],[2399,10],[2674,10],[3574,10]]},"487":{"position":[[411,10],[571,10],[1227,10],[1386,10],[2322,10],[2597,10],[3483,10]]},"505":{"position":[[394,10],[554,10],[1298,10],[1457,10],[2673,10],[2948,10],[3943,10],[6142,10],[6302,10],[6955,10],[7114,10],[8047,10],[8322,10],[9205,10],[11557,10],[11717,10],[12370,10],[12529,10],[13462,10],[13737,10],[14620,10],[16663,10],[16823,10],[17478,10],[17637,10],[18572,10],[18847,10],[19732,10],[21707,10],[21867,10],[22521,10],[22680,10],[23614,10],[23889,10],[24773,10]]},"521":{"position":[[169,10],[329,10],[938,10],[1097,10],[2122,10],[2397,10],[3247,10]]},"523":{"position":[[502,10],[662,10],[1348,10],[1507,10],[2609,10],[2884,10],[3811,10]]},"525":{"position":[[339,10],[499,10],[1161,10],[1320,10],[2262,10],[2537,10],[3429,10]]},"537":{"position":[[248,10],[408,10],[1068,10],[1227,10],[2359,10],[2634,10],[3545,10]]},"541":{"position":[[255,10],[415,10],[1071,10],[1230,10],[2358,10],[2633,10],[3540,10]]},"543":{"position":[[266,10],[426,10],[1034,10],[1193,10],[2217,10],[2492,10],[3341,10]]},"545":{"position":[[112,10],[272,10],[913,10],[1072,10],[1993,10],[2268,10],[3139,10],[5058,10],[5218,10],[5859,10],[6018,10],[6939,10],[7214,10],[8085,10]]},"547":{"position":[[149,10],[309,10],[910,10],[1069,10],[2085,10],[2360,10],[3201,10],[5047,10],[5207,10],[5849,10],[6008,10],[6930,10],[7205,10],[8077,10]]},"562":{"position":[[271,10],[431,10],[1082,10],[1241,10],[2172,10],[2447,10],[3328,10]]},"569":{"position":[[521,10],[681,10],[1382,10],[1541,10],[2562,10],[2837,10],[3739,10],[6093,10],[6253,10],[6935,10],[7094,10],[8077,10],[8352,10],[9233,10],[11509,10],[11669,10],[12361,10],[12520,10],[13513,10],[13788,10],[14679,10]]},"571":{"position":[[724,10],[884,10],[1467,10],[1626,10],[2529,10],[2804,10],[3588,10]]},"576":{"position":[[262,10],[422,10],[1112,10],[1271,10],[2296,10],[2571,10],[3498,10],[5596,10],[5756,10],[6446,10],[6605,10],[7630,10],[7905,10],[8832,10]]},"583":{"position":[[183,10],[343,10],[1110,10],[1269,10],[2374,10],[2649,10],[3674,10]]},"605":{"position":[[1399,10],[1559,10],[2211,10],[2370,10],[3302,10],[3577,10],[4459,10],[6992,10],[7152,10],[7804,10],[7963,10],[8895,10],[9170,10],[10052,10],[13234,10],[13394,10],[14049,10],[14208,10],[15143,10],[15418,10],[16303,10],[19489,10],[19649,10],[20301,10],[20460,10],[21392,10],[21667,10],[22549,10],[25146,10],[25306,10],[25959,10],[26118,10],[27051,10],[27326,10],[28209,10]]},"607":{"position":[[1244,10],[1404,10],[2057,10],[2216,10],[3149,10],[3424,10],[4307,10],[6913,10],[7073,10],[7729,10],[7888,10],[8824,10],[9099,10],[9985,10],[12674,10],[12834,10],[13488,10],[13647,10],[14581,10],[14856,10],[15740,10],[18416,10],[18576,10],[19230,10],[19389,10],[20323,10],[20598,10],[21482,10]]},"622":{"position":[[398,10],[558,10],[1283,10],[1442,10],[2583,10],[2858,10],[3824,10]]},"624":{"position":[[213,10],[373,10],[1036,10],[1195,10],[2138,10],[2413,10],[3306,10]]},"630":{"position":[[123,10],[283,10],[1107,10],[1266,10],[2562,10],[2837,10],[3912,10]]},"632":{"position":[[142,10],[302,10],[957,10],[1116,10],[2051,10],[2326,10],[3211,10]]},"634":{"position":[[123,10],[283,10],[964,10],[1123,10],[2219,10],[2494,10],[3415,10],[5512,10],[5672,10],[6328,10],[6487,10],[7423,10],[7698,10],[8584,10],[10562,10],[10722,10],[11381,10],[11540,10],[12479,10],[12754,10],[13643,10]]},"644":{"position":[[904,10],[1064,10],[1718,10],[1877,10],[2811,10],[3086,10],[3970,10],[5941,10],[6101,10],[6754,10],[6913,10],[7846,10],[8121,10],[9004,10]]},"646":{"position":[[213,10],[373,10],[1033,10],[1192,10],[2268,10],[2543,10],[3444,10],[5405,10],[5565,10],[6222,10],[6381,10],[7318,10],[7593,10],[8480,10]]},"648":{"position":[[188,10],[348,10],[1100,10],[1259,10],[2260,10],[2535,10],[3481,10],[5847,10],[6007,10],[6692,10],[6851,10],[8008,10],[8283,10],[9219,10],[11295,10],[11455,10],[12142,10],[12301,10],[13459,10],[13734,10],[14671,10],[16858,10],[17018,10],[17672,10],[17831,10],[18765,10],[19040,10],[19924,10],[21940,10],[22100,10],[22752,10],[22911,10],[23843,10],[24118,10],[25000,10]]},"668":{"position":[[4833,10],[4993,10],[5670,10],[5829,10],[6922,10],[7197,10],[8115,10]]},"670":{"position":[[1165,10],[1325,10],[2031,10],[2190,10],[3311,10],[3586,10],[4532,10]]},"692":{"position":[[540,10],[700,10],[1315,10],[1474,10],[2505,10],[2780,10],[3636,10],[5496,10],[5656,10],[6275,10],[6434,10],[7469,10],[7744,10],[8604,10],[10484,10],[10644,10],[11406,10],[11565,10],[12855,10],[13130,10],[14153,10],[16775,10],[16935,10],[17589,10],[17748,10],[18682,10],[18957,10],[19841,10],[21893,10],[22053,10],[22705,10],[22864,10],[23796,10],[24071,10],[24953,10]]},"694":{"position":[[2958,10],[3118,10],[3933,10],[4092,10],[5491,10],[5766,10],[6852,10],[9386,10],[9546,10],[10203,10],[10362,10],[11299,10],[11574,10],[12461,10]]},"696":{"position":[[2861,10],[3021,10],[3724,10],[3883,10],[5058,10],[5333,10],[6287,10],[8554,10],[8714,10],[9612,10],[9771,10],[11253,10],[11528,10],[12697,10],[15653,10],[15813,10],[16464,10],[16623,10],[17554,10],[17829,10],[18710,10]]},"698":{"position":[[3056,10],[3216,10],[3981,10],[4140,10],[5433,10],[5708,10],[6734,10],[9362,10],[9522,10],[10178,10],[10337,10],[11273,10],[11548,10],[12434,10]]},"718":{"position":[[2097,10],[2257,10],[2931,10],[3090,10],[4180,10],[4455,10],[5370,10],[7376,10],[7536,10],[8196,10],[8355,10],[9295,10],[9570,10],[10460,10],[12523,10],[12683,10],[13357,10],[13516,10],[14606,10],[14881,10],[15796,10],[17759,10],[17919,10],[18579,10],[18738,10],[19678,10],[19953,10],[20843,10],[22915,10],[23075,10],[23742,10],[23901,10],[24848,10],[25123,10],[26020,10],[28482,10],[28642,10],[29566,10],[29725,10],[31177,10],[31452,10],[32637,10],[35329,10],[35489,10],[36149,10],[36308,10],[37248,10],[37523,10],[38413,10]]},"720":{"position":[[158,10],[318,10],[973,10],[1132,10],[2067,10],[2342,10],[3227,10],[6858,10],[7018,10],[7672,10],[7831,10],[8765,10],[9040,10],[9924,10]]},"722":{"position":[[6902,10],[7062,10],[7901,10],[8060,10],[9427,10],[9702,10],[10802,10],[13498,10],[13658,10],[14401,10],[14560,10],[15719,10],[15994,10],[16978,10],[19235,10],[19395,10],[20182,10],[20341,10],[21600,10],[21875,10],[22913,10],[25260,10],[25420,10],[26122,10],[26281,10],[27455,10],[27730,10],[28683,10],[30913,10],[31073,10],[31718,10],[31877,10],[32938,10],[33213,10],[34099,10],[36078,10],[36238,10],[36866,10],[37025,10],[38069,10],[38344,10],[39213,10],[41274,10],[41434,10],[42086,10],[42245,10],[43177,10],[43452,10],[44334,10],[46366,10],[46526,10],[47193,10],[47352,10],[48299,10],[48574,10],[49471,10]]},"734":{"position":[[2631,10],[2791,10],[3926,10],[4085,10],[5804,10],[6079,10],[7485,10]]},"740":{"position":[[458,10],[618,10],[1268,10],[1427,10],[2357,10],[2632,10],[3512,10],[5569,10],[5729,10],[6383,10],[6542,10],[7476,10],[7751,10],[8635,10],[10713,10],[10873,10],[11548,10],[11707,10],[12798,10],[13073,10],[13989,10],[15925,10],[16085,10],[16736,10],[16895,10],[17826,10],[18101,10],[18982,10]]},"742":{"position":[[4573,10],[4733,10],[5379,10],[5538,10],[6464,10],[6739,10],[7615,10],[9805,10],[9965,10],[11008,10],[11167,10],[12738,10],[13013,10],[14317,10],[17345,10],[17505,10],[18303,10],[18462,10],[19732,10],[20007,10],[21056,10],[23467,10],[23627,10],[24277,10],[24436,10],[25366,10],[25641,10],[26521,10]]},"744":{"position":[[1118,10],[1278,10],[2132,10],[2291,10],[3616,10],[3891,10],[4995,10],[7813,10],[7973,10],[8808,10],[8967,10],[10232,10],[10507,10],[11607,10],[14269,10],[14429,10],[15265,10],[15424,10],[16690,10],[16965,10],[18066,10]]},"746":{"position":[[3359,10],[3519,10],[5910,10],[6069,10],[9492,10],[9767,10],[12509,10]]},"767":{"position":[[227,10],[387,10],[1841,10],[2000,10],[4150,10],[4425,10],[6170,10],[10183,10],[10343,10],[11337,10],[11496,10],[13018,10],[13293,10],[14548,10],[17364,10],[17524,10],[18448,10],[18607,10],[20059,10],[20334,10],[21519,10],[25022,10],[25182,10],[25835,10],[25994,10],[26927,10],[27202,10],[28085,10],[30201,10],[30361,10],[31015,10],[31174,10],[32108,10],[32383,10],[33267,10],[35237,10],[35397,10],[36054,10],[36213,10],[37150,10],[37425,10],[38312,10],[40295,10],[40455,10],[41113,10],[41272,10],[42210,10],[42485,10],[43373,10]]},"769":{"position":[[323,10],[483,10],[1137,10],[1296,10],[2230,10],[2505,10],[3389,10],[7658,10],[7818,10],[8468,10],[8627,10],[9557,10],[9832,10],[10712,10],[12998,10],[13158,10],[13817,10],[13976,10],[14915,10],[15190,10],[16079,10],[22746,10],[22906,10],[23564,10],[23723,10],[24661,10],[24936,10],[25824,10],[30409,10],[30569,10],[31218,10],[31377,10],[32306,10],[32581,10],[33460,10],[35462,7],[39396,10],[39556,10],[40205,10],[40364,10],[41293,10],[41568,10],[42447,10]]},"786":{"position":[[1858,10],[2018,10],[2634,10],[2793,10],[3825,10],[4100,10],[4957,10],[6849,10],[7009,10],[7664,10],[7823,10],[8758,10],[9033,10],[9918,10],[11957,10],[12117,10],[12733,10],[12892,10],[13924,10],[14199,10],[15056,10],[16905,10],[17065,10],[17720,10],[17879,10],[18814,10],[19089,10],[19974,10],[21949,10],[22109,10],[22765,10],[22924,10],[23860,10],[24135,10],[25021,10],[29100,10],[29260,10],[29915,10],[30074,10],[31009,10],[31284,10],[32169,10],[34144,10],[34304,10],[34959,10],[35118,10],[36053,10],[36328,10],[37213,10]]},"788":{"position":[[2377,10],[2537,10],[3382,10],[3541,10],[4858,10],[5133,10],[6229,10],[8844,10],[9004,10],[9661,10],[9820,10],[10757,10],[11032,10],[11919,10]]},"790":{"position":[[328,10],[488,10],[1128,10],[1287,10],[2343,10],[2618,10],[3499,10],[5852,10],[6012,10],[6684,10],[6843,10],[7931,10],[8206,10],[9119,10],[11047,10],[11207,10],[11862,10],[12021,10],[12956,10],[13231,10],[14116,10]]},"792":{"position":[[2971,10],[3131,10],[3831,10],[3990,10],[5162,10],[5437,10],[6388,10],[9026,10],[9186,10],[9845,10],[10004,10],[10943,10],[11218,10],[12107,10],[15578,10],[15738,10],[16376,10],[16535,10],[17589,10],[17864,10],[18743,10]]},"809":{"position":[[1855,10],[2015,10],[2634,10],[2793,10],[3828,10],[4103,10],[4963,10],[6867,10],[7027,10],[7685,10],[7844,10],[8782,10],[9057,10],[9945,10],[11994,10],[12154,10],[12769,10],[12928,10],[13959,10],[14234,10],[15090,10],[16936,10],[17096,10],[17750,10],[17909,10],[18843,10],[19118,10],[20002,10],[21973,10],[22133,10],[22789,10],[22948,10],[23884,10],[24159,10],[25045,10],[28612,10],[28772,10],[29426,10],[29585,10],[30519,10],[30794,10],[31678,10],[33649,10],[33809,10],[34464,10],[34623,10],[35558,10],[35833,10],[36718,10]]},"811":{"position":[[2134,10],[2294,10],[3230,10],[3389,10],[4909,10],[5184,10],[6391,10],[9315,10],[9475,10],[10133,10],[10292,10],[11230,10],[11505,10],[12393,10]]},"813":{"position":[[1967,10],[2127,10],[2942,10],[3101,10],[4388,10],[4663,10],[5729,10],[8445,10],[8605,10],[9266,10],[9425,10],[10366,10],[10641,10],[11532,10]]},"815":{"position":[[2839,10],[2999,10],[3987,10],[4146,10],[5662,10],[5937,10],[7186,10],[9973,10],[10133,10],[10795,10],[10954,10],[11896,10],[12171,10],[13063,10],[15142,10],[15302,10],[15966,10],[16125,10],[17069,10],[17344,10],[18238,10],[20248,10],[20408,10],[21074,10],[21233,10],[22179,10],[22454,10],[23350,10],[25447,10],[25607,10],[26271,10],[26430,10],[27374,10],[27649,10],[28543,10],[30553,10],[30713,10],[31377,10],[31536,10],[32480,10],[32755,10],[33649,10]]}}}],["input",{"_index":1143,"t":{"176":{"position":[[79,5]]},"403":{"position":[[10524,6]]}}}],["insid",{"_index":96,"t":{"8":{"position":[[587,6]]},"96":{"position":[[816,6]]},"102":{"position":[[964,6]]},"473":{"position":[[338,6]]},"796":{"position":[[1292,6]]},"798":{"position":[[712,6]]}}}],["inspir",{"_index":18,"t":{"4":{"position":[[145,8]]}}}],["instabl",{"_index":1064,"t":{"152":{"position":[[857,14]]}}}],["instagram",{"_index":1381,"t":{"304":{"position":[[639,9]]}}}],["instal",{"_index":609,"t":{"74":{"position":[[64,7],[83,7]]},"78":{"position":[[179,9],[465,9],[751,9],[1037,9]]},"90":{"position":[[162,9],[526,9]]},"94":{"position":[[21,7],[143,7],[367,7],[1010,7]]},"102":{"position":[[16,7],[146,7],[263,8],[871,7],[986,7],[1086,7],[1203,8],[1217,7]]},"104":{"position":[[73,7]]},"108":{"position":[[179,9],[502,9],[825,9],[1148,9]]},"120":{"position":[[179,9],[502,9],[825,9],[1148,9]]},"138":{"position":[[78,7],[109,11]]},"186":{"position":[[179,9],[466,9],[753,9],[1040,9]]},"253":{"position":[[179,9],[501,9],[823,9],[1110,9]]},"712":{"position":[[777,10]]}}}],["instanc",{"_index":408,"t":{"16":{"position":[[15976,8],[21588,8],[27376,8]]},"78":{"position":[[38,8],[324,8],[610,8],[896,8],[1182,8]]},"80":{"position":[[5681,8]]},"86":{"position":[[2011,8]]},"90":{"position":[[21,8],[385,8]]},"108":{"position":[[38,8],[361,8],[684,8],[1007,8],[1330,8]]},"112":{"position":[[2620,8]]},"120":{"position":[[38,8],[361,8],[684,8],[1007,8],[1330,8]]},"124":{"position":[[2620,8]]},"142":{"position":[[236,8],[330,8]]},"146":{"position":[[188,9]]},"170":{"position":[[1871,8]]},"172":{"position":[[3428,8]]},"186":{"position":[[38,8],[325,8],[612,8],[899,8],[1186,8]]},"190":{"position":[[2620,8]]},"213":{"position":[[3819,8]]},"215":{"position":[[3811,8],[8982,8]]},"221":{"position":[[5104,8],[10308,8],[15519,8],[20548,8]]},"230":{"position":[[4079,8]]},"232":{"position":[[3857,8]]},"245":{"position":[[4081,8]]},"247":{"position":[[3826,8],[8856,8]]},"253":{"position":[[38,8],[360,8],[682,8],[969,8],[1256,8]]},"257":{"position":[[2596,8]]},"288":{"position":[[3899,8],[8807,8],[14660,8]]},"312":{"position":[[3953,8],[8980,8]]},"318":{"position":[[4264,8],[9557,8],[14791,8]]},"338":{"position":[[4008,8]]},"345":{"position":[[4922,8]]},"369":{"position":[[4511,8],[9877,8]]},"371":{"position":[[4743,8]]},"373":{"position":[[3789,8]]},"385":{"position":[[3917,8]]},"387":{"position":[[3908,8],[9161,8]]},"445":{"position":[[3962,8],[9010,8]]},"449":{"position":[[3925,8],[9140,8]]},"467":{"position":[[3850,8]]},"469":{"position":[[4092,8]]},"471":{"position":[[3981,8]]},"485":{"position":[[4192,8]]},"487":{"position":[[4101,8]]},"505":{"position":[[4561,8],[9823,8],[15238,8],[20350,8],[25391,8]]},"521":{"position":[[3865,8]]},"523":{"position":[[4429,8]]},"525":{"position":[[4047,8]]},"537":{"position":[[4163,8]]},"541":{"position":[[4158,8]]},"543":{"position":[[3959,8]]},"545":{"position":[[3757,8],[8703,8]]},"547":{"position":[[3819,8],[8695,8]]},"562":{"position":[[3946,8]]},"569":{"position":[[4357,8],[9851,8],[15297,8]]},"571":{"position":[[4206,8]]},"576":{"position":[[4116,8],[9450,8]]},"583":{"position":[[4292,8]]},"605":{"position":[[5077,8],[10670,8],[16921,8],[23167,8],[28827,8]]},"607":{"position":[[4925,8],[10603,8],[16358,8],[22100,8]]},"622":{"position":[[4442,8]]},"624":{"position":[[3924,8]]},"630":{"position":[[4530,8]]},"632":{"position":[[3829,8]]},"634":{"position":[[4033,8],[9202,8],[14261,8]]},"644":{"position":[[4588,8],[9622,8]]},"646":{"position":[[4062,8],[9098,8]]},"648":{"position":[[4099,8],[9837,8],[15289,8],[20542,8],[25618,8]]},"668":{"position":[[8733,8]]},"670":{"position":[[5150,8]]},"692":{"position":[[4254,8],[9222,8],[14771,8],[20459,8],[25571,8]]},"694":{"position":[[7470,8],[13079,8]]},"696":{"position":[[6905,8],[13315,8],[19328,8]]},"698":{"position":[[7352,8],[13052,8]]},"718":{"position":[[5988,8],[11078,8],[16414,8],[21461,8],[26638,8],[33255,8],[39031,8]]},"720":{"position":[[3845,8],[10542,8]]},"722":{"position":[[11420,8],[17596,8],[23531,8],[29301,8],[34717,8],[39831,8],[44952,8],[50089,8]]},"734":{"position":[[8103,8]]},"740":{"position":[[4130,8],[9253,8],[14607,8],[19600,8]]},"742":{"position":[[8233,8],[14935,8],[21674,8],[27139,8]]},"744":{"position":[[5613,8],[12225,8],[18684,8]]},"746":{"position":[[13127,8]]},"767":{"position":[[6788,8],[15166,8],[22137,8],[28703,8],[33885,8],[38930,8],[43991,8]]},"769":{"position":[[4007,8],[11330,8],[16697,8],[26442,8],[34078,8],[43065,8]]},"786":{"position":[[5575,8],[10536,8],[15674,8],[20592,8],[25639,8],[32787,8],[37831,8]]},"788":{"position":[[6847,8],[12537,8]]},"790":{"position":[[4117,8],[9737,8],[14734,8]]},"792":{"position":[[7006,8],[12725,8],[19361,8]]},"809":{"position":[[5581,8],[10563,8],[15708,8],[20620,8],[25663,8],[32296,8],[37336,8]]},"811":{"position":[[7009,8],[13011,8]]},"813":{"position":[[6347,8],[12150,8]]},"815":{"position":[[7804,8],[13681,8],[18856,8],[23968,8],[29161,8],[34267,8]]}}}],["instanti",{"_index":698,"t":{"94":{"position":[[578,11]]}}}],["instead",{"_index":110,"t":{"10":{"position":[[186,7]]},"16":{"position":[[12753,7],[13602,7],[14838,7],[15775,7],[18365,7],[19214,7],[20450,7],[21387,7],[24137,7],[24991,7],[26228,7],[27175,7]]},"80":{"position":[[1201,7],[2375,7],[4138,7],[5480,7]]},"86":{"position":[[329,7],[763,7],[1521,7]]},"102":{"position":[[657,7]]},"112":{"position":[[474,7],[1009,7],[1830,7],[2419,7]]},"124":{"position":[[474,7],[1009,7],[1830,7],[2419,7]]},"170":{"position":[[420,7],[834,7],[1458,7]]},"172":{"position":[[745,7],[1343,7],[2266,7],[3203,7]]},"190":{"position":[[474,7],[1009,7],[1830,7],[2419,7]]},"213":{"position":[[587,7],[1390,7],[2716,7],[3618,7]]},"215":{"position":[[597,7],[1443,7],[2676,7],[3610,7],[5762,7],[6610,7],[7845,7],[8781,7]]},"221":{"position":[[1902,7],[2744,7],[3973,7],[4903,7],[6965,7],[7805,7],[9168,7],[10107,7],[12305,7],[13151,7],[14384,7],[15318,7],[17328,7],[18176,7],[19411,7],[20347,7]]},"230":{"position":[[849,7],[1652,7],[2977,7],[3878,7]]},"232":{"position":[[640,7],[1487,7],[2721,7],[3656,7]]},"245":{"position":[[897,7],[1733,7],[2956,7],[3880,7]]},"247":{"position":[[608,7],[1407,7],[2728,7],[3625,7],[5669,7],[6506,7],[7730,7],[8655,7]]},"257":{"position":[[450,7],[985,7],[1806,7],[2395,7]]},"288":{"position":[[694,7],[1488,7],[2805,7],[3698,7],[5598,7],[6394,7],[7712,7],[8606,7],[10776,7],[11756,7],[13350,7],[14459,7]]},"312":{"position":[[736,7],[1583,7],[2817,7],[3752,7],[5766,7],[6612,7],[7845,7],[8779,7]]},"318":{"position":[[855,7],[1717,7],[3102,7],[4063,7],[6340,7],[7187,7],[8421,7],[9356,7],[11574,7],[12421,7],[13655,7],[14590,7]]},"336":{"position":[[0,7]]},"338":{"position":[[770,7],[1624,7],[2865,7],[3807,7]]},"345":{"position":[[1714,7],[2558,7],[3789,7],[4721,7]]},"367":{"position":[[103,7]]},"369":{"position":[[718,7],[1686,7],[3233,7],[4310,7],[6654,7],[7503,7],[8739,7],[9676,7]]},"371":{"position":[[620,7],[1698,7],[3355,7],[4542,7]]},"373":{"position":[[566,7],[1415,7],[2651,7],[3588,7]]},"385":{"position":[[649,7],[1464,7],[2802,7],[3716,7]]},"387":{"position":[[670,7],[1524,7],[2765,7],[3707,7],[5920,7],[6775,7],[8017,7],[8960,7]]},"397":{"position":[[999,7]]},"425":{"position":[[2993,7]]},"429":{"position":[[96,7]]},"445":{"position":[[736,7],[1586,7],[2823,7],[3761,7],[5787,7],[6636,7],[7872,7],[8809,7]]},"449":{"position":[[696,7],[1547,7],[2785,7],[3724,7],[5911,7],[6762,7],[8000,7],[8939,7]]},"467":{"position":[[624,7],[1425,7],[2749,7],[3649,7]]},"469":{"position":[[626,7],[1507,7],[2911,7],[3891,7]]},"471":{"position":[[743,7],[1597,7],[2838,7],[3780,7]]},"485":{"position":[[810,7],[1663,7],[3039,7],[3991,7]]},"487":{"position":[[875,7],[1725,7],[2962,7],[3900,7]]},"491":{"position":[[1494,7]]},"503":{"position":[[263,8]]},"505":{"position":[[858,7],[1796,7],[3313,7],[4360,7],[6606,7],[7453,7],[8687,7],[9622,7],[12021,7],[12868,7],[14102,7],[15037,7],[17127,7],[17976,7],[19212,7],[20149,7],[22171,7],[23019,7],[24254,7],[25190,7]]},"521":{"position":[[633,7],[1436,7],[2762,7],[3664,7]]},"523":{"position":[[966,7],[1846,7],[3249,7],[4228,7]]},"525":{"position":[[803,7],[1659,7],[2902,7],[3846,7]]},"537":{"position":[[712,7],[1566,7],[2999,7],[3962,7]]},"541":{"position":[[719,7],[1569,7],[2998,7],[3957,7]]},"543":{"position":[[730,7],[1532,7],[2857,7],[3758,7]]},"545":{"position":[[576,7],[1411,7],[2633,7],[3556,7],[5522,7],[6357,7],[7579,7],[8502,7]]},"547":{"position":[[613,7],[1408,7],[2725,7],[3618,7],[5511,7],[6347,7],[7570,7],[8494,7]]},"562":{"position":[[735,7],[1580,7],[2812,7],[3745,7]]},"569":{"position":[[985,7],[1880,7],[3202,7],[4156,7],[6557,7],[7433,7],[8717,7],[9650,7],[11973,7],[12859,7],[14153,7],[15096,7]]},"571":{"position":[[1188,7],[1965,7],[3169,7],[4005,7]]},"576":{"position":[[726,7],[1610,7],[2936,7],[3915,7],[6060,7],[6944,7],[8270,7],[9249,7]]},"578":{"position":[[331,8]]},"583":{"position":[[647,7],[1608,7],[3014,7],[4091,7]]},"605":{"position":[[1863,7],[2709,7],[3942,7],[4876,7],[7456,7],[8302,7],[9535,7],[10469,7],[13698,7],[14547,7],[15783,7],[16720,7],[19953,7],[20799,7],[22032,7],[22966,7],[25610,7],[26457,7],[27691,7],[28626,7]]},"607":{"position":[[1708,7],[2555,7],[3789,7],[4724,7],[7377,7],[8227,7],[9464,7],[10402,7],[13138,7],[13986,7],[15221,7],[16157,7],[18880,7],[19728,7],[20963,7],[21899,7]]},"622":{"position":[[862,7],[1781,7],[3223,7],[4241,7]]},"624":{"position":[[677,7],[1534,7],[2778,7],[3723,7]]},"630":{"position":[[587,7],[1605,7],[3202,7],[4329,7]]},"632":{"position":[[606,7],[1455,7],[2691,7],[3628,7]]},"634":{"position":[[587,7],[1462,7],[2859,7],[3832,7],[5976,7],[6826,7],[8063,7],[9001,7],[11026,7],[11879,7],[13119,7],[14060,7]]},"644":{"position":[[1368,7],[2216,7],[3451,7],[4387,7],[6405,7],[7252,7],[8486,7],[9421,7]]},"646":{"position":[[677,7],[880,7],[1531,7],[1919,7],[2908,7],[3283,7],[3861,7],[4445,7],[5154,7],[5869,7],[6720,7],[7958,7],[8897,7]]},"648":{"position":[[652,7],[1598,7],[2900,7],[3898,7],[6311,7],[7190,7],[8648,7],[9636,7],[11759,7],[12640,7],[14099,7],[15088,7],[17322,7],[18170,7],[19405,7],[20341,7],[22404,7],[23250,7],[24483,7],[25417,7]]},"668":{"position":[[5297,7],[6168,7],[7562,7],[8532,7]]},"670":{"position":[[1629,7],[2529,7],[3951,7],[4949,7]]},"692":{"position":[[1004,7],[1813,7],[3145,7],[4053,7],[5960,7],[6773,7],[8109,7],[9021,7],[10948,7],[11904,7],[13495,7],[14570,7],[17239,7],[18087,7],[19322,7],[20258,7],[22357,7],[23203,7],[24436,7],[25370,7]]},"694":{"position":[[109,7],[449,7],[2709,7],[3422,7],[4431,7],[6131,7],[7269,7],[9850,7],[10701,7],[11939,7],[12878,7]]},"696":{"position":[[3325,7],[4222,7],[5698,7],[6704,7],[9018,7],[10110,7],[11893,7],[13114,7],[15530,7],[16117,7],[16962,7],[18194,7],[19127,7]]},"698":{"position":[[3520,7],[4479,7],[6073,7],[7151,7],[9826,7],[10676,7],[11913,7],[12851,7]]},"710":{"position":[[661,8]]},"718":{"position":[[2561,7],[3429,7],[4820,7],[5787,7],[7840,7],[8694,7],[9935,7],[10877,7],[12987,7],[13855,7],[15246,7],[16213,7],[18223,7],[19077,7],[20318,7],[21260,7],[23379,7],[24240,7],[25488,7],[26437,7],[28946,7],[30064,7],[31817,7],[33054,7],[35793,7],[36647,7],[37888,7],[38830,7]]},"720":{"position":[[622,7],[1471,7],[2707,7],[3644,7],[7322,7],[8170,7],[9405,7],[10341,7]]},"722":{"position":[[7366,7],[8399,7],[10067,7],[11219,7],[13962,7],[14899,7],[16359,7],[17395,7],[19699,7],[20680,7],[22240,7],[23330,7],[25724,7],[26620,7],[28095,7],[29100,7],[31377,7],[32216,7],[33578,7],[34516,7],[36542,7],[37364,7],[38709,7],[39630,7],[41738,7],[42584,7],[43817,7],[44751,7],[46830,7],[47691,7],[48939,7],[49888,7]]},"734":{"position":[[3095,7],[4424,7],[6444,7],[7902,7]]},"740":{"position":[[922,7],[1766,7],[2997,7],[3929,7],[6033,7],[6881,7],[8116,7],[9052,7],[11177,7],[12046,7],[13438,7],[14406,7],[16389,7],[17234,7],[18466,7],[19399,7]]},"742":{"position":[[5037,7],[5877,7],[7104,7],[8032,7],[10269,7],[11506,7],[13378,7],[14734,7],[17809,7],[18801,7],[20372,7],[21473,7],[23931,7],[24775,7],[26006,7],[26938,7]]},"744":{"position":[[873,7],[1582,7],[2630,7],[4256,7],[5412,7],[8277,7],[9306,7],[10872,7],[12024,7],[14733,7],[15763,7],[17330,7],[18483,7]]},"746":{"position":[[3823,7],[6408,7],[10132,7],[12926,7]]},"758":{"position":[[699,8]]},"767":{"position":[[691,7],[2339,7],[4790,7],[6587,7],[10647,7],[11835,7],[13658,7],[14965,7],[17828,7],[18946,7],[20699,7],[21936,7],[25486,7],[26333,7],[27567,7],[28502,7],[30665,7],[31513,7],[32748,7],[33684,7],[35701,7],[36552,7],[37790,7],[38729,7],[40759,7],[41611,7],[42850,7],[43790,7]]},"769":{"position":[[787,7],[1635,7],[2870,7],[3806,7],[8122,7],[8966,7],[10197,7],[11129,7],[13462,7],[14315,7],[15555,7],[16496,7],[20905,7],[23210,7],[24062,7],[25301,7],[26241,7],[28599,7],[30873,7],[31716,7],[32946,7],[33877,7],[39860,7],[40703,7],[41933,7],[42864,7]]},"779":{"position":[[278,8]]},"786":{"position":[[2322,7],[3132,7],[4465,7],[5374,7],[7313,7],[8162,7],[9398,7],[10335,7],[12421,7],[13231,7],[14564,7],[15473,7],[17369,7],[18218,7],[19454,7],[20391,7],[22413,7],[23263,7],[24500,7],[25438,7],[29564,7],[30413,7],[31649,7],[32586,7],[34608,7],[35457,7],[36693,7],[37630,7]]},"788":{"position":[[2841,7],[3880,7],[5498,7],[6646,7],[9308,7],[10159,7],[11397,7],[12336,7]]},"790":{"position":[[792,7],[1626,7],[2983,7],[3916,7],[6316,7],[7182,7],[8571,7],[9536,7],[11511,7],[12360,7],[13596,7],[14533,7]]},"792":{"position":[[3435,7],[4329,7],[5802,7],[6805,7],[9490,7],[10343,7],[11583,7],[12524,7],[16042,7],[16874,7],[18229,7],[19160,7]]},"802":{"position":[[322,8]]},"809":{"position":[[2319,7],[3132,7],[4468,7],[5380,7],[7331,7],[8183,7],[9422,7],[10362,7],[12458,7],[13267,7],[14599,7],[15507,7],[17400,7],[18248,7],[19483,7],[20419,7],[22437,7],[23287,7],[24524,7],[25462,7],[29076,7],[29924,7],[31159,7],[32095,7],[34113,7],[34962,7],[36198,7],[37135,7]]},"811":{"position":[[2598,7],[3728,7],[5549,7],[6808,7],[9779,7],[10631,7],[11870,7],[12810,7]]},"813":{"position":[[2431,7],[3440,7],[5028,7],[6146,7],[8909,7],[9764,7],[11006,7],[11949,7]]},"815":{"position":[[3303,7],[4485,7],[6302,7],[7603,7],[10437,7],[11293,7],[12536,7],[13480,7],[15606,7],[16464,7],[17709,7],[18655,7],[20712,7],[21572,7],[22819,7],[23767,7],[25911,7],[26769,7],[28014,7],[28960,7],[31017,7],[31875,7],[33120,7],[34066,7]]}}}],["institut",{"_index":2248,"t":{"702":{"position":[[227,10]]}}}],["instruct",{"_index":1117,"t":{"164":{"position":[[180,13]]}}}],["integr",{"_index":38,"t":{"4":{"position":[[362,12]]},"74":{"position":[[810,9],[839,9]]},"88":{"position":[[36,9]]},"94":{"position":[[269,11]]},"100":{"position":[[73,11]]},"198":{"position":[[23,9]]}}}],["intellij",{"_index":847,"t":{"102":{"position":[[1055,8]]}}}],["intend",{"_index":1693,"t":{"425":{"position":[[2901,9],[3020,8]]},"585":{"position":[[811,6]]}}}],["intent",{"_index":1667,"t":{"419":{"position":[[1653,6]]}}}],["interact",{"_index":499,"t":{"52":{"position":[[808,11]]},"714":{"position":[[183,8]]}}}],["interest",{"_index":118,"t":{"10":{"position":[[460,10]]},"724":{"position":[[575,10]]}}}],["intern",{"_index":272,"t":{"16":{"position":[[6393,10]]},"654":{"position":[[512,8]]},"714":{"position":[[784,8]]},"722":{"position":[[1183,8],[6815,8],[25114,8],[25147,8]]},"728":{"position":[[539,8]]},"734":{"position":[[369,8]]}}}],["interpret",{"_index":1694,"t":{"425":{"position":[[3148,9],[3401,9],[3525,9]]}}}],["intersect",{"_index":575,"t":{"64":{"position":[[4,12],[43,12],[163,14],[326,15],[1245,12]]},"68":{"position":[[258,12],[271,12]]},"174":{"position":[[230,12]]},"180":{"position":[[52,12]]},"263":{"position":[[802,12]]},"269":{"position":[[79,12],[394,12]]},"347":{"position":[[1297,13]]},"349":{"position":[[343,12],[1111,12]]},"437":{"position":[[3275,12],[3302,12]]},"443":{"position":[[579,12],[606,12]]},"447":{"position":[[658,15]]},"640":{"position":[[652,12],[679,12]]},"668":{"position":[[170,12],[1431,15],[1715,15]]},"672":{"position":[[791,15],[1075,15]]},"742":{"position":[[1709,15],[3358,15]]},"746":{"position":[[1043,15],[1960,15]]},"748":{"position":[[1443,15],[2427,15]]}}}],["interv",{"_index":944,"t":{"142":{"position":[[1855,9]]}}}],["introduc",{"_index":1529,"t":{"397":{"position":[[128,9]]},"411":{"position":[[130,9]]},"415":{"position":[[162,10]]},"427":{"position":[[18,9],[363,10]]},"491":{"position":[[1279,9]]},"517":{"position":[[271,9]]},"668":{"position":[[305,11]]},"700":{"position":[[23,10],[122,11]]},"724":{"position":[[187,10],[393,11]]},"742":{"position":[[716,9]]},"771":{"position":[[704,11]]},"788":{"position":[[8600,10]]},"792":{"position":[[436,9]]},"811":{"position":[[9065,10]]}}}],["introduct",{"_index":1620,"t":{"405":{"position":[[196,12]]}}}],["intuit",{"_index":497,"t":{"52":{"position":[[696,10]]},"786":{"position":[[27017,12]]},"809":{"position":[[27041,12]]}}}],["invalid",{"_index":1673,"t":{"419":{"position":[[4025,7]]},"425":{"position":[[2493,7]]},"427":{"position":[[402,8],[459,7],[641,7]]},"485":{"position":[[5626,8],[5646,7],[5726,7],[5974,8],[5994,7],[6075,7]]},"769":{"position":[[5373,8]]}}}],["investig",{"_index":1968,"t":{"603":{"position":[[102,11]]},"607":{"position":[[25,11]]}}}],["invit",{"_index":2262,"t":{"712":{"position":[[753,8],[1173,7]]},"714":{"position":[[585,7]]}}}],["invok",{"_index":618,"t":{"74":{"position":[[1079,8]]},"80":{"position":[[666,6]]},"98":{"position":[[735,6]]},"134":{"position":[[162,8]]},"192":{"position":[[39,6]]},"194":{"position":[[38,6]]},"419":{"position":[[4074,8]]}}}],["involv",{"_index":1367,"t":{"296":{"position":[[1155,9]]},"349":{"position":[[1188,8]]},"415":{"position":[[857,8]]}}}],["iot",{"_index":574,"t":{"62":{"position":[[1639,4]]},"100":{"position":[[160,3],[207,3]]},"300":{"position":[[226,3]]},"609":{"position":[[320,3],[372,3]]},"676":{"position":[[55,3],[206,3]]},"682":{"position":[[69,3]]}}}],["ip",{"_index":1365,"t":{"296":{"position":[[1087,2]]},"654":{"position":[[521,2]]},"728":{"position":[[190,2],[548,2]]},"738":{"position":[[358,2]]},"742":{"position":[[57,2],[169,3],[478,2],[535,3],[975,2],[1386,3],[2227,3],[4321,2],[4461,2],[9585,2],[10846,3],[14154,3],[17218,2],[18035,2],[18099,3],[19212,2],[20770,2],[20843,3],[22080,2],[23005,2]]},"744":{"position":[[212,2],[1021,2],[1837,2],[1901,3],[3069,2],[4682,2],[4755,3],[6047,2],[7028,2],[7705,2],[8683,3],[11418,3],[13956,3],[14161,2],[15139,3],[17876,3],[20417,3]]},"746":{"position":[[188,3],[753,2],[1561,3],[3154,3],[5748,3],[12346,3]]},"748":{"position":[[401,3],[966,2],[2028,3],[3621,3]]}}}],["isn't",{"_index":1418,"t":{"334":{"position":[[40,5]]}}}],["isol",{"_index":221,"t":{"16":{"position":[[3864,8]]}}}],["issu",{"_index":1285,"t":{"261":{"position":[[1021,7]]},"312":{"position":[[205,7]]},"318":{"position":[[5792,5],[11019,5]]},"369":{"position":[[6113,7]]},"423":{"position":[[750,5]]},"445":{"position":[[205,7]]},"569":{"position":[[6028,5],[11444,5]]},"668":{"position":[[2778,7]]},"718":{"position":[[35233,5]]},"742":{"position":[[4505,7]]},"760":{"position":[[366,6]]},"762":{"position":[[539,6],[684,6],[833,6]]},"767":{"position":[[914,6],[1053,6],[1353,6],[2747,6],[2942,6],[3354,6],[5185,6],[5334,6],[5654,6],[7191,6],[7336,6],[7648,6],[9129,6],[9272,6],[9580,6]]},"769":{"position":[[38929,6],[39074,6],[39223,6]]}}}],["issuer",{"_index":1003,"t":{"144":{"position":[[1793,6],[2103,7],[2117,7],[2402,6],[3091,7]]}}}],["issuer=\"oidc",{"_index":1009,"t":{"144":{"position":[[3078,12]]}}}],["it'",{"_index":1483,"t":{"371":{"position":[[83,4]]}}}],["it_admin",{"_index":2188,"t":{"694":{"position":[[834,8],[1204,9],[1287,8],[1354,8],[1414,8],[1507,11],[1665,10],[1844,10],[2016,10],[2069,11],[2891,8],[3699,11],[3838,11],[6598,11],[6757,11]]},"696":{"position":[[384,9],[472,11],[565,11],[839,9],[972,8],[1039,8],[1099,8],[1143,9],[1294,11],[1452,10],[1631,10],[1803,10],[1856,11],[1961,10],[2402,11],[2495,11],[3618,11],[6181,11],[9434,11],[9517,11],[12509,11],[12602,11]]},"698":{"position":[[695,9],[818,8],[875,8],[925,8],[969,9],[1120,11],[1262,10],[1425,10],[1581,10],[1634,11],[1739,10],[1939,11],[2032,11],[2501,8],[2911,9]]}}}],["item",{"_index":1326,"t":{"273":{"position":[[2714,5]]},"403":{"position":[[8097,5]]}}}],["iter",{"_index":1211,"t":{"219":{"position":[[552,7]]},"294":{"position":[[283,9]]},"395":{"position":[[188,9],[259,9],[506,7]]},"397":{"position":[[579,7]]},"405":{"position":[[1215,8],[4044,9]]},"407":{"position":[[276,9]]},"425":{"position":[[2407,9],[2812,9]]},"752":{"position":[[223,7]]},"765":{"position":[[196,7]]},"767":{"position":[[24185,9]]},"771":{"position":[[135,7]]}}}],["itself",{"_index":692,"t":{"94":{"position":[[223,6],[1105,6]]},"605":{"position":[[13063,7]]},"722":{"position":[[63,7]]},"769":{"position":[[28325,7]]}}}],["jane",{"_index":1523,"t":{"393":{"position":[[842,4],[944,4]]}}}],["javascript",{"_index":439,"t":{"16":{"position":[[17510,11],[23269,11]]},"104":{"position":[[95,10]]}}}],["job",{"_index":1621,"t":{"405":{"position":[[229,3]]}}}],["john",{"_index":1665,"t":{"419":{"position":[[1513,4]]}}}],["join",{"_index":1205,"t":{"219":{"position":[[305,5]]},"712":{"position":[[1137,4]]}}}],["json",{"_index":174,"t":{"16":{"position":[[843,4],[1646,4],[2988,4],[6650,4],[7805,4],[11336,4],[15465,4],[21077,4],[26865,4]]},"52":{"position":[[367,4],[437,4],[574,4],[728,4]]},"54":{"position":[[144,4]]},"56":{"position":[[1072,4]]},"58":{"position":[[117,4]]},"60":{"position":[[289,4],[1432,4]]},"62":{"position":[[48,4],[164,4]]},"64":{"position":[[63,4],[182,4]]},"66":{"position":[[62,4],[249,4]]},"68":{"position":[[4,4],[198,4],[1036,5],[1799,4]]},"80":{"position":[[75,4],[5170,4],[7331,4]]},"112":{"position":[[2109,4]]},"124":{"position":[[2109,4]]},"130":{"position":[[195,6]]},"160":{"position":[[158,4]]},"190":{"position":[[2109,4]]},"204":{"position":[[316,4]]},"213":{"position":[[3308,4]]},"215":{"position":[[3300,4],[8471,4]]},"221":{"position":[[310,4],[4593,4],[9797,4],[15008,4],[20037,4]]},"230":{"position":[[3568,4]]},"232":{"position":[[3346,4]]},"238":{"position":[[265,4]]},"245":{"position":[[3570,4]]},"247":{"position":[[3315,4],[8345,4]]},"257":{"position":[[2085,4]]},"261":{"position":[[56,4]]},"279":{"position":[[354,4]]},"288":{"position":[[3388,4],[8296,4],[14149,4]]},"306":{"position":[[444,4]]},"312":{"position":[[3442,4],[8469,4]]},"314":{"position":[[215,4]]},"316":{"position":[[302,4]]},"318":{"position":[[3753,4],[9046,4],[14280,4]]},"328":{"position":[[385,4]]},"336":{"position":[[170,4]]},"338":{"position":[[3497,4]]},"345":{"position":[[47,4],[4411,4]]},"347":{"position":[[47,4]]},"355":{"position":[[489,4]]},"367":{"position":[[269,4]]},"369":{"position":[[4000,4],[9366,4]]},"371":{"position":[[4232,4]]},"373":{"position":[[3278,4]]},"379":{"position":[[285,4]]},"385":{"position":[[3406,4]]},"387":{"position":[[3397,4],[8650,4]]},"403":{"position":[[10512,4],[10554,5],[10637,4],[10659,4]]},"419":{"position":[[103,4],[2271,4]]},"421":{"position":[[473,4]]},"423":{"position":[[1336,4]]},"425":{"position":[[767,4]]},"429":{"position":[[903,4]]},"437":{"position":[[696,4]]},"445":{"position":[[3451,4],[8499,4]]},"447":{"position":[[179,4]]},"449":{"position":[[3414,4],[8629,4]]},"455":{"position":[[332,4]]},"463":{"position":[[314,4]]},"465":{"position":[[118,4]]},"467":{"position":[[3339,4]]},"469":{"position":[[3581,4]]},"471":{"position":[[3470,4]]},"477":{"position":[[275,4]]},"485":{"position":[[3681,4]]},"487":{"position":[[3590,4]]},"493":{"position":[[296,4]]},"501":{"position":[[274,4]]},"503":{"position":[[746,4]]},"505":{"position":[[4050,4],[9312,4],[14727,4],[19839,4],[24880,4]]},"511":{"position":[[290,4]]},"519":{"position":[[169,4]]},"521":{"position":[[3354,4]]},"523":{"position":[[3918,4]]},"525":{"position":[[3536,4]]},"531":{"position":[[254,4]]},"537":{"position":[[3652,4]]},"539":{"position":[[79,4]]},"541":{"position":[[3647,4]]},"543":{"position":[[3448,4]]},"545":{"position":[[3246,4],[8192,4]]},"547":{"position":[[3308,4],[8184,4]]},"553":{"position":[[358,4]]},"562":{"position":[[3435,4]]},"569":{"position":[[3846,4],[9340,4],[14786,4]]},"571":{"position":[[3695,4]]},"576":{"position":[[3605,4],[8939,4]]},"583":{"position":[[3781,4]]},"601":{"position":[[249,4]]},"605":{"position":[[60,4],[4566,4],[10159,4],[16410,4],[22656,4],[28316,4]]},"607":{"position":[[121,4],[4414,4],[10092,4],[15847,4],[21589,4]]},"613":{"position":[[310,4]]},"620":{"position":[[143,4]]},"622":{"position":[[3931,4]]},"624":{"position":[[3413,4]]},"628":{"position":[[80,4]]},"630":{"position":[[4019,4]]},"632":{"position":[[3318,4]]},"634":{"position":[[3522,4],[8691,4],[13750,4]]},"642":{"position":[[258,4],[872,4]]},"644":{"position":[[260,4],[4077,4],[9111,4]]},"646":{"position":[[3551,4],[8587,4]]},"648":{"position":[[3588,4],[9326,4],[14778,4],[20031,4],[25107,4]]},"650":{"position":[[120,4]]},"660":{"position":[[869,4]]},"668":{"position":[[1089,4],[8222,4]]},"670":{"position":[[4639,4]]},"672":{"position":[[69,4]]},"690":{"position":[[646,4]]},"692":{"position":[[3743,4],[8711,4],[14260,4],[19948,4],[25060,4]]},"694":{"position":[[1153,4],[6959,4],[12568,4]]},"696":{"position":[[344,4],[778,4],[6394,4],[12804,4],[18817,4]]},"698":{"position":[[634,4],[6841,4],[12541,4]]},"716":{"position":[[1000,4]]},"718":{"position":[[572,4],[1456,4],[5477,4],[10567,4],[15903,4],[20950,4],[26127,4],[32744,4],[38520,4]]},"720":{"position":[[3334,4],[5771,4],[10031,4]]},"722":{"position":[[1638,4],[3057,4],[4463,4],[10909,4],[17085,4],[23020,4],[28790,4],[34206,4],[39320,4],[44441,4],[49578,4]]},"734":{"position":[[526,4],[7592,4]]},"740":{"position":[[3619,4],[8742,4],[14096,4],[19089,4]]},"742":{"position":[[251,4],[468,4],[1294,4],[2793,4],[7722,4],[14424,4],[21163,4],[26628,4]]},"744":{"position":[[5102,4],[11714,4],[18173,4]]},"746":{"position":[[69,4],[12616,4]]},"748":{"position":[[221,4]]},"765":{"position":[[607,4]]},"767":{"position":[[6277,4],[14655,4],[21626,4],[28192,4],[33374,4],[38419,4],[43480,4]]},"769":{"position":[[3496,4],[5529,4],[6566,4],[10819,4],[16186,4],[18190,4],[18979,4],[21503,4],[25931,4],[28639,4],[33567,4],[35943,4],[36517,4],[37594,4],[42554,4]]},"786":{"position":[[286,4],[1250,4],[5064,4],[10025,4],[15163,4],[20081,4],[25128,4],[27228,4],[28436,4],[32276,4],[37320,4]]},"788":{"position":[[345,4],[778,4],[6336,4],[12026,4]]},"790":{"position":[[3606,4],[9226,4],[14223,4]]},"792":{"position":[[893,4],[1238,4],[6495,4],[12214,4],[14173,4],[18850,4],[20637,4]]},"809":{"position":[[371,4],[1220,4],[5070,4],[10052,4],[15197,4],[20109,4],[25152,4],[27260,4],[31785,4],[36825,4]]},"811":{"position":[[402,4],[6498,4],[12500,4]]},"813":{"position":[[476,4],[5836,4],[11639,4],[13606,4],[14790,4]]},"815":{"position":[[547,4],[7293,4],[13170,4],[18345,4],[23457,4],[28650,4],[33756,4]]}}}],["json.unmarshal([]byte(writeauthorizationmodelrequeststr",{"_index":631,"t":{"80":{"position":[[3159,60]]}}}],["jsonserializer.deserialize<openfga.sdk.model.writeauthorizationmodelrequest>(modeljson",{"_index":636,"t":{"80":{"position":[[4847,88]]}}}],["jwt",{"_index":234,"t":{"16":{"position":[[4319,3],[4834,3]]},"92":{"position":[[142,3]]},"94":{"position":[[314,3],[341,3],[406,3],[462,3],[1164,3],[1179,3],[1220,3]]},"96":{"position":[[97,4],[125,3],[158,3],[225,3],[371,6],[827,4],[1215,3],[1582,5],[2190,3]]},"98":{"position":[[2078,3],[2586,3],[3400,3],[3904,3]]}}}],["jwt/jwt/v4",{"_index":716,"t":{"94":{"position":[[1306,10]]},"96":{"position":[[1728,11]]},"98":{"position":[[2903,11]]}}}],["jwtware",{"_index":764,"t":{"96":{"position":[[1673,7]]},"98":{"position":[[2848,7]]}}}],["keep",{"_index":1337,"t":{"277":{"position":[[160,4]]},"431":{"position":[[401,4]]},"718":{"position":[[3,4]]},"742":{"position":[[9741,4]]},"748":{"position":[[12,4]]},"767":{"position":[[24180,4]]},"769":{"position":[[151,4]]},"809":{"position":[[3,4]]}}}],["key",{"_index":586,"t":{"68":{"position":[[146,4]]},"96":{"position":[[1826,3],[1841,3],[1895,3],[2030,3]]},"98":{"position":[[3036,3],[3051,3],[3105,3],[3240,3]]},"140":{"position":[[346,3],[490,5],[842,3]]},"144":{"position":[[115,3],[158,3],[198,3],[259,3],[348,3],[393,5],[559,4],[679,5],[762,4],[914,5],[1166,3],[1351,3],[1993,4],[2211,4],[2358,5],[2438,5],[2691,3],[2876,3]]},"172":{"position":[[26,3],[121,3]]},"401":{"position":[[491,4]]},"403":{"position":[[7423,3]]},"569":{"position":[[1261,8],[2439,8],[3616,8],[5383,9],[6814,8],[7954,8],[9110,8],[10838,9],[12240,8],[13390,8],[14556,8],[16304,9]]},"648":{"position":[[855,8],[2013,8],[3234,8],[5089,9]]}}}],["key1",{"_index":905,"t":{"140":{"position":[[496,8]]},"144":{"position":[[685,8]]}}}],["key2",{"_index":906,"t":{"140":{"position":[[505,7]]},"144":{"position":[[694,7]]}}}],["key=\"/users/myuser/key/server.key",{"_index":1002,"t":{"144":{"position":[[1674,34],[3227,34]]}}}],["keyboard",{"_index":2232,"t":{"696":{"position":[[20717,8]]}}}],["keys=\"key1,key2",{"_index":999,"t":{"144":{"position":[[1569,16]]}}}],["keyword",{"_index":1668,"t":{"419":{"position":[[2216,8]]},"447":{"position":[[162,7]]},"607":{"position":[[730,7]]}}}],["kind",{"_index":1683,"t":{"425":{"position":[[397,5],[1798,5]]}}}],["know",{"_index":679,"t":{"90":{"position":[[274,4],[638,4]]},"204":{"position":[[96,4],[923,4],[977,4]]},"206":{"position":[[12,4]]},"221":{"position":[[96,4],[21895,4],[22013,4]]},"223":{"position":[[12,4]]},"225":{"position":[[12,4]]},"238":{"position":[[96,4],[608,4],[655,4]]},"240":{"position":[[12,4]]},"279":{"position":[[96,4],[1113,4],[1160,4],[1320,4]]},"281":{"position":[[12,4]]},"283":{"position":[[12,4]]},"306":{"position":[[86,4],[1552,4],[1606,4]]},"308":{"position":[[12,4]]},"328":{"position":[[87,4],[1055,4],[1109,4]]},"330":{"position":[[12,4]]},"355":{"position":[[86,4],[1054,4],[1118,4],[1254,4]]},"359":{"position":[[12,4]]},"361":{"position":[[12,4]]},"379":{"position":[[96,4],[751,4]]},"437":{"position":[[96,4],[2361,4],[2424,4],[2572,4]]},"439":{"position":[[12,4]]},"441":{"position":[[12,4]]},"455":{"position":[[96,4],[892,4],[939,4]]},"457":{"position":[[12,4]]},"477":{"position":[[96,4],[661,4],[708,4]]},"479":{"position":[[12,4]]},"493":{"position":[[96,4],[751,4],[798,4]]},"495":{"position":[[12,4]]},"511":{"position":[[96,4],[639,4],[686,4]]},"513":{"position":[[12,4]]},"531":{"position":[[96,4],[592,4],[639,4]]},"533":{"position":[[12,4]]},"553":{"position":[[96,4],[1063,4],[1110,4]]},"555":{"position":[[12,4]]},"593":{"position":[[87,4],[149,4],[227,4]]},"595":{"position":[[12,4]]},"613":{"position":[[86,4],[870,4],[924,4]]},"615":{"position":[[12,4]]},"658":{"position":[[655,4],[828,4]]},"670":{"position":[[12,4]]},"678":{"position":[[96,4],[288,4],[459,4],[698,4],[1051,4]]},"706":{"position":[[96,4],[288,4],[459,4]]},"732":{"position":[[657,4],[830,4]]},"744":{"position":[[12,4],[440,4]]},"754":{"position":[[96,4],[314,4],[655,4]]},"758":{"position":[[473,4],[549,5]]},"769":{"position":[[35519,5]]},"775":{"position":[[96,4],[308,4],[483,4]]},"798":{"position":[[96,4],[308,4],[483,4],[759,4]]},"813":{"position":[[451,4]]}}}],["known",{"_index":1453,"t":{"353":{"position":[[584,5]]},"403":{"position":[[5849,5]]},"790":{"position":[[35,5]]}}}],["kubernet",{"_index":1112,"t":{"164":{"position":[[25,10]]},"166":{"position":[[133,10],[192,11]]}}}],["lack",{"_index":2674,"t":{"792":{"position":[[8439,4]]},"813":{"position":[[8014,4]]}}}],["languag",{"_index":31,"t":{"4":{"position":[[283,9]]},"16":{"position":[[3358,9]]},"52":{"position":[[28,8],[423,9]]},"54":{"position":[[130,9]]},"70":{"position":[[70,8]]},"74":{"position":[[107,8]]},"320":{"position":[[159,8],[202,9]]},"355":{"position":[[1408,9],[1449,8]]},"363":{"position":[[31,8]]},"389":{"position":[[215,8],[258,9]]},"397":{"position":[[612,9],[706,9]]},"399":{"position":[[4094,9]]},"401":{"position":[[2796,8]]},"403":{"position":[[38,8],[7342,9],[8499,9],[8953,9],[9300,9]]},"405":{"position":[[1016,10]]},"409":{"position":[[138,8],[181,9]]},"489":{"position":[[159,8],[202,9]]},"628":{"position":[[1771,9]]},"678":{"position":[[1294,9],[1340,8]]},"706":{"position":[[606,9],[652,8]]},"754":{"position":[[1043,9],[1089,8]]},"775":{"position":[[783,9],[829,8]]},"798":{"position":[[885,9],[930,8]]}}}],["language#th",{"_index":2023,"t":{"628":{"position":[[1291,12]]}}}],["language'",{"_index":2130,"t":{"668":{"position":[[147,10]]}}}],["larg",{"_index":1701,"t":{"427":{"position":[[625,5]]},"815":{"position":[[331,6]]}}}],["last",{"_index":1298,"t":{"263":{"position":[[438,4]]},"399":{"position":[[4637,4]]},"788":{"position":[[8576,4]]},"811":{"position":[[9041,4]]}}}],["latenc",{"_index":23,"t":{"4":{"position":[[207,7]]},"156":{"position":[[438,7]]},"578":{"position":[[42,8]]},"744":{"position":[[667,7]]}}}],["later",{"_index":1273,"t":{"259":{"position":[[2653,5]]},"397":{"position":[[157,5],[587,6]]},"491":{"position":[[1556,5]]},"624":{"position":[[5671,5]]},"769":{"position":[[21196,5]]}}}],["latest",{"_index":883,"t":{"138":{"position":[[164,6]]},"178":{"position":[[333,6]]}}}],["latter",{"_index":2650,"t":{"790":{"position":[[5563,6]]}}}],["layer",{"_index":711,"t":{"94":{"position":[[1154,5]]},"769":{"position":[[20845,5],[20961,5],[21094,5],[36989,5]]}}}],["lead",{"_index":1063,"t":{"152":{"position":[[842,4]]},"397":{"position":[[969,4]]},"605":{"position":[[18773,5],[18808,5],[19050,7]]}}}],["leads#memb",{"_index":1979,"t":{"605":{"position":[[19085,14]]}}}],["leaf",{"_index":1441,"t":{"347":{"position":[[849,4],[1023,7],[1109,7]]},"349":{"position":[[1357,4],[1393,4]]},"576":{"position":[[5424,8],[10758,8]]}}}],["learn",{"_index":139,"t":{"14":{"position":[[367,5]]},"16":{"position":[[309,5],[3315,5]]},"50":{"position":[[106,5]]},"68":{"position":[[2705,5]]},"70":{"position":[[123,5],[188,5],[287,5]]},"72":{"position":[[180,5]]},"134":{"position":[[115,5],[227,5],[312,5]]},"162":{"position":[[87,5]]},"182":{"position":[[136,5],[221,5]]},"196":{"position":[[99,5],[188,5],[286,5]]},"198":{"position":[[80,5]]},"202":{"position":[[23,5]]},"204":{"position":[[1047,5]]},"206":{"position":[[82,5]]},"217":{"position":[[82,5],[156,5]]},"219":{"position":[[23,5]]},"221":{"position":[[21965,5],[22059,5]]},"223":{"position":[[82,5]]},"225":{"position":[[58,5]]},"234":{"position":[[82,5],[152,5]]},"236":{"position":[[23,5]]},"238":{"position":[[766,5]]},"240":{"position":[[123,5]]},"249":{"position":[[82,5],[170,5],[258,5]]},"277":{"position":[[23,5]]},"279":{"position":[[1271,5],[1366,5]]},"281":{"position":[[123,5]]},"283":{"position":[[58,5]]},"292":{"position":[[97,5]]},"294":{"position":[[188,5]]},"296":{"position":[[133,5],[236,5],[361,5],[490,5],[608,5],[714,5],[840,5],[940,5],[1053,5],[1226,5],[1336,5],[1565,5]]},"306":{"position":[[1676,5]]},"308":{"position":[[82,5]]},"320":{"position":[[94,5],[168,5],[231,5]]},"322":{"position":[[172,5]]},"324":{"position":[[21,5],[155,5],[261,5],[375,5]]},"326":{"position":[[28,5]]},"328":{"position":[[1179,5]]},"330":{"position":[[82,5]]},"353":{"position":[[21,5]]},"355":{"position":[[1188,5],[1370,5]]},"359":{"position":[[82,5]]},"361":{"position":[[128,5]]},"375":{"position":[[99,5],[237,5]]},"377":{"position":[[23,5]]},"389":{"position":[[85,5],[150,5],[224,5]]},"403":{"position":[[2640,5],[5159,5]]},"409":{"position":[[85,5],[147,5],[210,5]]},"413":{"position":[[20,5],[118,5]]},"433":{"position":[[92,5],[154,5]]},"437":{"position":[[2515,5],[2665,5]]},"439":{"position":[[103,5]]},"441":{"position":[[105,5]]},"451":{"position":[[95,5],[159,5],[224,5]]},"453":{"position":[[23,5]]},"455":{"position":[[1050,5]]},"457":{"position":[[123,5]]},"473":{"position":[[134,5]]},"475":{"position":[[23,5]]},"477":{"position":[[819,5]]},"479":{"position":[[123,5]]},"489":{"position":[[94,5],[168,5],[237,5]]},"491":{"position":[[23,5]]},"493":{"position":[[909,5]]},"495":{"position":[[123,5]]},"507":{"position":[[125,5]]},"509":{"position":[[23,5]]},"511":{"position":[[797,5]]},"513":{"position":[[123,5]]},"527":{"position":[[96,5]]},"529":{"position":[[23,5]]},"531":{"position":[[750,5]]},"533":{"position":[[123,5]]},"549":{"position":[[115,5],[237,5]]},"551":{"position":[[23,5]]},"553":{"position":[[1221,5]]},"555":{"position":[[123,5]]},"576":{"position":[[10832,5]]},"591":{"position":[[21,5]]},"593":{"position":[[338,5]]},"595":{"position":[[123,5]]},"609":{"position":[[219,5]]},"611":{"position":[[21,5]]},"613":{"position":[[994,5]]},"615":{"position":[[82,5]]},"636":{"position":[[130,5],[219,5],[296,5]]},"638":{"position":[[135,5]]},"652":{"position":[[105,5],[276,5]]},"658":{"position":[[771,5],[930,5]]},"674":{"position":[[106,5],[259,5]]},"676":{"position":[[95,5]]},"678":{"position":[[399,5],[568,5],[867,5],[1147,5]]},"688":{"position":[[201,5]]},"704":{"position":[[117,5]]},"706":{"position":[[399,5],[568,5]]},"716":{"position":[[503,5]]},"724":{"position":[[240,7],[589,8]]},"732":{"position":[[773,5],[932,5]]},"750":{"position":[[101,5],[225,5]]},"752":{"position":[[105,5]]},"754":{"position":[[430,5],[824,5]]},"771":{"position":[[22,8]]},"773":{"position":[[217,5]]},"775":{"position":[[417,5],[599,5]]},"796":{"position":[[99,5]]},"798":{"position":[[417,5],[599,5],[847,5]]}}}],["leav",{"_index":1640,"t":{"407":{"position":[[6,5]]},"574":{"position":[[258,6]]}}}],["left",{"_index":2237,"t":{"698":{"position":[[309,4]]}}}],["legaci",{"_index":2249,"t":{"704":{"position":[[467,6]]},"712":{"position":[[521,6]]},"714":{"position":[[290,6]]},"716":{"position":[[624,6],[1773,6]]},"718":{"position":[[2749,6],[3802,6],[5180,6],[6356,6],[7085,6]]}}}],["legacy_admin",{"_index":2270,"t":{"716":{"position":[[949,13],[1064,13],[1265,15],[1413,15],[1786,14]]},"718":{"position":[[103,14],[256,12],[636,13],[837,15],[985,15],[1987,12],[2820,15],[5259,15],[7298,12],[8123,15],[9121,15],[10326,15],[12227,15],[12253,14],[22838,12],[23668,15],[24673,15],[25885,15],[27813,15],[27839,14],[36076,15],[37074,15],[38279,15],[40180,15],[40206,14],[40467,12],[40522,13],[40567,12],[40624,13]]},"720":{"position":[[5353,12],[5702,13],[5835,13],[5889,12],[5945,12],[6086,15],[6211,14],[6379,14],[6461,15],[11966,12],[12021,13],[12066,12],[12123,13]]},"722":{"position":[[2248,14],[2518,14],[3756,14],[4026,14],[4527,13],[4581,12],[4637,12],[5054,15],[5179,14],[5347,14],[5429,15],[6142,14],[6412,14],[51557,12],[51612,13]]}}}],["length",{"_index":962,"t":{"142":{"position":[[3059,6]]}}}],["less",{"_index":1102,"t":{"158":{"position":[[722,4]]},"343":{"position":[[306,4]]},"397":{"position":[[398,4]]}}}],["let",{"_index":1601,"t":{"403":{"position":[[3209,4]]},"425":{"position":[[1427,4]]},"769":{"position":[[20916,7]]}}}],["let'",{"_index":526,"t":{"56":{"position":[[1025,5]]},"142":{"position":[[470,5]]},"221":{"position":[[6397,5]]},"247":{"position":[[4,5]]},"318":{"position":[[5686,5]]},"355":{"position":[[156,5]]},"357":{"position":[[10,5]]},"393":{"position":[[1310,5]]},"399":{"position":[[436,5],[2178,5]]},"405":{"position":[[1496,5]]},"505":{"position":[[102,5]]},"521":{"position":[[45,5]]},"698":{"position":[[2815,5]]},"718":{"position":[[40369,5]]},"740":{"position":[[20997,5]]},"790":{"position":[[122,5]]},"792":{"position":[[8611,5]]},"809":{"position":[[28212,5]]},"811":{"position":[[1996,5]]}}}],["level",{"_index":1108,"t":{"160":{"position":[[177,6],[205,5]]},"296":{"position":[[406,5]]},"437":{"position":[[2620,5]]},"441":{"position":[[60,5]]},"781":{"position":[[237,5],[270,5]]},"786":{"position":[[34,6]]}}}],["leverag",{"_index":1420,"t":{"336":{"position":[[52,8]]},"467":{"position":[[3,8]]}}}],["lifecycl",{"_index":2049,"t":{"638":{"position":[[7,9]]}}}],["likewis",{"_index":1966,"t":{"601":{"position":[[159,9]]},"692":{"position":[[10388,9]]}}}],["limit",{"_index":960,"t":{"142":{"position":[[3040,6]]},"271":{"position":[[285,5]]},"273":{"position":[[1355,5]]},"288":{"position":[[10088,5]]},"403":{"position":[[3539,5]]},"435":{"position":[[452,8]]},"551":{"position":[[45,11]]},"712":{"position":[[139,7],[1232,8]]}}}],["link",{"_index":1788,"t":{"487":{"position":[[173,7]]},"773":{"position":[[128,5]]}}}],["list",{"_index":258,"t":{"16":{"position":[[5609,5],[23017,4],[23042,4],[23088,4],[23327,4],[23382,4],[23420,4],[28455,4]]},"32":{"position":[[22,5]]},"44":{"position":[[2,4],[48,4]]},"52":{"position":[[287,5]]},"66":{"position":[[238,6]]},"74":{"position":[[697,4],[745,4]]},"118":{"position":[[46,4]]},"122":{"position":[[24,4]]},"128":{"position":[[108,4],[134,4]]},"130":{"position":[[14,4]]},"152":{"position":[[690,4],[1126,4]]},"174":{"position":[[14,4]]},"204":{"position":[[140,4]]},"221":{"position":[[140,4]]},"238":{"position":[[140,4]]},"251":{"position":[[69,4]]},"255":{"position":[[33,4]]},"259":{"position":[[19,4]]},"261":{"position":[[915,4]]},"271":{"position":[[13,5],[40,4],[160,4],[189,4]]},"273":{"position":[[39,6],[754,4],[1197,4],[1285,4],[1515,4],[1568,4],[1654,4],[1901,4],[2232,4],[2796,4]]},"279":{"position":[[140,4]]},"296":{"position":[[602,5],[659,4]]},"306":{"position":[[117,6]]},"328":{"position":[[118,6]]},"355":{"position":[[117,6]]},"379":{"position":[[140,4]]},"395":{"position":[[421,4],[443,4]]},"399":{"position":[[12,4],[1917,4],[1971,4],[3801,4],[3841,5],[3886,4],[4014,4]]},"401":{"position":[[295,4],[2250,4]]},"403":{"position":[[7731,4]]},"415":{"position":[[1143,4]]},"423":{"position":[[3315,4]]},"427":{"position":[[273,4],[514,4]]},"437":{"position":[[140,4]]},"451":{"position":[[188,6]]},"455":{"position":[[140,4]]},"477":{"position":[[140,4]]},"489":{"position":[[261,6]]},"493":{"position":[[140,4]]},"511":{"position":[[140,4]]},"531":{"position":[[140,4]]},"537":{"position":[[5593,4]]},"553":{"position":[[140,4]]},"571":{"position":[[5435,4]]},"581":{"position":[[56,4]]},"583":{"position":[[5616,4],[6057,4]]},"587":{"position":[[211,4],[351,4]]},"593":{"position":[[118,6]]},"613":{"position":[[117,6]]},"652":{"position":[[231,4]]},"678":{"position":[[140,4]]},"706":{"position":[[140,4]]},"712":{"position":[[70,4]]},"754":{"position":[[140,4]]},"765":{"position":[[383,7]]},"769":{"position":[[44429,6]]},"775":{"position":[[140,4]]},"798":{"position":[[140,4]]}}}],["list<tuplekey",{"_index":1161,"t":{"192":{"position":[[741,16]]},"194":{"position":[[900,16]]},"213":{"position":[[3045,16]]},"221":{"position":[[9497,16]]},"230":{"position":[[3307,16]]},"247":{"position":[[3058,16]]},"288":{"position":[[3134,16],[8042,16],[13679,16],[13846,16]]},"318":{"position":[[3431,16]]},"369":{"position":[[3562,16]]},"371":{"position":[[3684,16]]},"385":{"position":[[3131,16]]},"429":{"position":[[2557,16]]},"467":{"position":[[3078,16]]},"469":{"position":[[3240,16]]},"485":{"position":[[3368,16]]},"505":{"position":[[3642,16]]},"521":{"position":[[3091,16]]},"523":{"position":[[3578,16]]},"537":{"position":[[3328,16]]},"541":{"position":[[3327,16]]},"543":{"position":[[3186,16]]},"547":{"position":[[3055,16]]},"583":{"position":[[3487,14]]},"622":{"position":[[3552,16]]},"630":{"position":[[3531,16]]},"634":{"position":[[3189,16]]},"646":{"position":[[3237,16]]},"648":{"position":[[8977,16],[14429,16]]},"660":{"position":[[5801,16]]},"668":{"position":[[7891,16]]},"670":{"position":[[4281,16],[7698,16],[10525,16]]},"672":{"position":[[5340,16]]},"692":{"position":[[3474,16],[8438,16],[13824,16]]},"694":{"position":[[6460,16]]},"696":{"position":[[6027,16],[12222,16]]},"698":{"position":[[6402,16]]},"718":{"position":[[5149,16],[15575,16],[32146,16]]},"722":{"position":[[10396,16],[16688,16],[22569,16],[28424,16],[33907,16],[39038,16]]},"734":{"position":[[6773,16]]},"740":{"position":[[13767,16]]},"742":{"position":[[13707,16],[20701,16]]},"744":{"position":[[4586,16],[11351,16],[17809,16]]},"746":{"position":[[10461,16]]},"767":{"position":[[5119,16],[13987,16],[21028,16]]},"786":{"position":[[4794,16],[14893,16]]},"788":{"position":[[5827,16]]},"790":{"position":[[3312,16],[8900,16]]},"792":{"position":[[6131,16],[18558,16]]},"809":{"position":[[4797,16],[14928,16]]},"811":{"position":[[5878,16]]},"813":{"position":[[5357,16]]},"815":{"position":[[6631,16]]}}}],["list_object",{"_index":461,"t":{"16":{"position":[[27696,15]]},"126":{"position":[[1133,15]]},"583":{"position":[[4612,15]]}}}],["listobject",{"_index":450,"t":{"16":{"position":[[23229,11],[28426,12]]},"152":{"position":[[711,11]]},"174":{"position":[[204,12]]},"178":{"position":[[116,12]]},"180":{"position":[[27,12]]},"200":{"position":[[709,10]]},"431":{"position":[[451,13]]},"551":{"position":[[90,11]]},"581":{"position":[[4,11],[335,12]]},"583":{"position":[[8,11],[5588,12]]},"585":{"position":[[0,11],[689,11]]},"587":{"position":[[18,11]]},"589":{"position":[[290,11],[349,11]]}}}],["listobjectsdeadlin",{"_index":1954,"t":{"585":{"position":[[67,21],[281,19],[528,20]]}}}],["listobjectsmaxresult",{"_index":1956,"t":{"585":{"position":[[149,23],[375,21],[658,22]]}}}],["listobjectsrequest",{"_index":458,"t":{"16":{"position":[[26505,19],[27540,18],[27719,19]]},"126":{"position":[[670,19],[977,18],[1156,19]]},"583":{"position":[[3291,19],[4456,18],[4635,19]]}}}],["liststor",{"_index":367,"t":{"16":{"position":[[13724,13],[14986,13],[15902,13],[19336,13],[20598,13],[21514,13],[25113,13],[26376,13],[27302,13]]},"80":{"position":[[2497,13],[4286,13],[5607,13]]},"112":{"position":[[1131,13],[1978,13],[2546,13]]},"124":{"position":[[1131,13],[1978,13],[2546,13]]},"172":{"position":[[866,13],[1465,13],[2414,13],[3329,13]]},"190":{"position":[[1131,13],[1978,13],[2546,13]]},"213":{"position":[[1512,13],[2864,13],[3745,13]]},"215":{"position":[[1565,13],[2824,13],[3737,13],[6732,13],[7993,13],[8908,13]]},"221":{"position":[[2866,13],[4121,13],[5030,13],[7927,13],[9316,13],[10234,13],[13273,13],[14532,13],[15445,13],[18298,13],[19559,13],[20474,13]]},"230":{"position":[[1774,13],[3125,13],[4005,13]]},"232":{"position":[[1609,13],[2869,13],[3783,13]]},"245":{"position":[[1855,13],[3104,13],[4007,13]]},"247":{"position":[[1529,13],[2876,13],[3752,13],[6628,13],[7878,13],[8782,13]]},"257":{"position":[[1107,13],[1954,13],[2522,13]]},"288":{"position":[[1610,13],[2953,13],[3825,13],[6516,13],[7860,13],[8733,13],[11878,13],[13498,13],[14586,13]]},"312":{"position":[[1705,13],[2965,13],[3879,13],[6734,13],[7993,13],[8906,13]]},"318":{"position":[[1839,13],[3250,13],[4190,13],[7309,13],[8569,13],[9483,13],[12543,13],[13803,13],[14717,13]]},"338":{"position":[[1746,13],[3013,13],[3934,13]]},"345":{"position":[[2680,13],[3937,13],[4848,13]]},"369":{"position":[[1808,13],[3381,13],[4437,13],[7625,13],[8887,13],[9803,13]]},"371":{"position":[[1820,13],[3503,13],[4669,13]]},"373":{"position":[[1537,13],[2799,13],[3715,13]]},"385":{"position":[[1586,13],[2950,13],[3843,13]]},"387":{"position":[[1646,13],[2913,13],[3834,13],[6897,13],[8165,13],[9087,13]]},"445":{"position":[[1708,13],[2971,13],[3888,13],[6758,13],[8020,13],[8936,13]]},"449":{"position":[[1669,13],[2933,13],[3851,13],[6884,13],[8148,13],[9066,13]]},"467":{"position":[[1547,13],[2897,13],[3776,13]]},"469":{"position":[[1629,13],[3059,13],[4018,13]]},"471":{"position":[[1719,13],[2986,13],[3907,13]]},"485":{"position":[[1785,13],[3187,13],[4118,13]]},"487":{"position":[[1847,13],[3110,13],[4027,13]]},"505":{"position":[[1918,13],[3461,13],[4487,13],[7575,13],[8835,13],[9749,13],[12990,13],[14250,13],[15164,13],[18098,13],[19360,13],[20276,13],[23141,13],[24402,13],[25317,13]]},"521":{"position":[[1558,13],[2910,13],[3791,13]]},"523":{"position":[[1968,13],[3397,13],[4355,13]]},"525":{"position":[[1781,13],[3050,13],[3973,13]]},"537":{"position":[[1688,13],[3147,13],[4089,13]]},"541":{"position":[[1691,13],[3146,13],[4084,13]]},"543":{"position":[[1654,13],[3005,13],[3885,13]]},"545":{"position":[[1533,13],[2781,13],[3683,13],[6479,13],[7727,13],[8629,13]]},"547":{"position":[[1530,13],[2873,13],[3745,13],[6469,13],[7718,13],[8621,13]]},"562":{"position":[[1702,13],[2960,13],[3872,13]]},"569":{"position":[[2002,13],[3350,13],[4283,13],[7555,13],[8865,13],[9777,13],[12981,13],[14301,13],[15223,13]]},"571":{"position":[[2087,13],[3317,13],[4132,13]]},"576":{"position":[[1732,13],[3084,13],[4042,13],[7066,13],[8418,13],[9376,13]]},"583":{"position":[[1730,13],[3162,13],[4218,13]]},"605":{"position":[[2831,13],[4090,13],[5003,13],[8424,13],[9683,13],[10596,13],[14669,13],[15931,13],[16847,13],[20921,13],[22180,13],[23093,13],[26579,13],[27839,13],[28753,13]]},"607":{"position":[[2677,13],[3937,13],[4851,13],[8349,13],[9612,13],[10529,13],[14108,13],[15369,13],[16284,13],[19850,13],[21111,13],[22026,13]]},"622":{"position":[[1903,13],[3371,13],[4368,13]]},"624":{"position":[[1656,13],[2926,13],[3850,13]]},"630":{"position":[[1727,13],[3350,13],[4456,13]]},"632":{"position":[[1577,13],[2839,13],[3755,13]]},"634":{"position":[[1584,13],[3007,13],[3959,13],[6948,13],[8211,13],[9128,13],[12001,13],[13267,13],[14187,13]]},"644":{"position":[[2338,13],[3599,13],[4514,13],[7374,13],[8634,13],[9548,13]]},"646":{"position":[[1653,13],[3056,13],[3988,13],[6842,13],[8106,13],[9024,13]]},"648":{"position":[[1720,13],[3048,13],[4025,13],[7312,13],[8796,13],[9763,13],[12762,13],[14247,13],[15215,13],[18292,13],[19553,13],[20468,13],[23372,13],[24631,13],[25544,13]]},"668":{"position":[[6290,13],[7710,13],[8659,13]]},"670":{"position":[[2651,13],[4099,13],[5076,13]]},"692":{"position":[[1935,13],[3293,13],[4180,13],[6895,13],[8257,13],[9148,13],[12026,13],[13643,13],[14697,13],[18209,13],[19470,13],[20385,13],[23325,13],[24584,13],[25497,13]]},"694":{"position":[[4553,13],[6279,13],[7396,13],[10823,13],[12087,13],[13005,13]]},"696":{"position":[[4344,13],[5846,13],[6831,13],[10232,13],[12041,13],[13241,13],[17084,13],[18342,13],[19254,13]]},"698":{"position":[[4601,13],[6221,13],[7278,13],[10798,13],[12061,13],[12978,13]]},"718":{"position":[[3551,13],[4968,13],[5914,13],[8816,13],[10083,13],[11004,13],[13977,13],[15394,13],[16340,13],[19199,13],[20466,13],[21387,13],[24362,13],[25636,13],[26564,13],[30186,13],[31965,13],[33181,13],[36769,13],[38036,13],[38957,13]]},"720":{"position":[[1593,13],[2855,13],[3771,13],[8292,13],[9553,13],[10468,13]]},"722":{"position":[[8521,13],[10215,13],[11346,13],[15021,13],[16507,13],[17522,13],[20802,13],[22388,13],[23457,13],[26742,13],[28243,13],[29227,13],[32338,13],[33726,13],[34643,13],[37486,13],[38857,13],[39757,13],[42706,13],[43965,13],[44878,13],[47813,13],[49087,13],[50015,13]]},"734":{"position":[[4546,13],[6592,13],[8029,13]]},"740":{"position":[[1888,13],[3145,13],[4056,13],[7003,13],[8264,13],[9179,13],[12168,13],[13586,13],[14533,13],[17356,13],[18614,13],[19526,13]]},"742":{"position":[[5999,13],[7252,13],[8159,13],[11628,13],[13526,13],[14861,13],[18923,13],[20520,13],[21600,13],[24897,13],[26154,13],[27065,13]]},"744":{"position":[[2752,13],[4404,13],[5539,13],[9428,13],[11020,13],[12151,13],[15885,13],[17478,13],[18610,13]]},"746":{"position":[[6530,13],[10280,13],[13053,13]]},"767":{"position":[[2461,13],[4938,13],[6714,13],[11957,13],[13806,13],[15092,13],[19068,13],[20847,13],[22063,13],[26455,13],[27715,13],[28629,13],[31635,13],[32896,13],[33811,13],[36674,13],[37938,13],[38856,13],[41733,13],[42998,13],[43917,13]]},"769":{"position":[[1757,13],[3018,13],[3933,13],[9088,13],[10345,13],[11256,13],[14437,13],[15703,13],[16623,13],[24184,13],[25449,13],[26368,13],[31838,13],[33094,13],[34004,13],[40825,13],[42081,13],[42991,13]]},"786":{"position":[[3254,13],[4613,13],[5501,13],[8284,13],[9546,13],[10462,13],[13353,13],[14712,13],[15600,13],[18340,13],[19602,13],[20518,13],[23385,13],[24648,13],[25565,13],[30535,13],[31797,13],[32713,13],[35579,13],[36841,13],[37757,13]]},"788":{"position":[[4002,13],[5646,13],[6773,13],[10281,13],[11545,13],[12463,13]]},"790":{"position":[[1748,13],[3131,13],[4043,13],[7304,13],[8719,13],[9663,13],[12482,13],[13744,13],[14660,13]]},"792":{"position":[[4451,13],[5950,13],[6932,13],[10465,13],[11731,13],[12651,13],[16996,13],[18377,13],[19287,13]]},"809":{"position":[[3254,13],[4616,13],[5507,13],[8305,13],[9570,13],[10489,13],[13389,13],[14747,13],[15634,13],[18370,13],[19631,13],[20546,13],[23409,13],[24672,13],[25589,13],[30046,13],[31307,13],[32222,13],[35084,13],[36346,13],[37262,13]]},"811":{"position":[[3850,13],[5697,13],[6935,13],[10753,13],[12018,13],[12937,13]]},"813":{"position":[[3562,13],[5176,13],[6273,13],[9886,13],[11154,13],[12076,13]]},"815":{"position":[[4607,13],[6450,13],[7730,13],[11415,13],[12684,13],[13607,13],[16586,13],[17857,13],[18782,13],[21694,13],[22967,13],[23894,13],[26891,13],[28162,13],[29087,13],[31997,13],[33268,13],[34193,13]]}}}],["liter",{"_index":1648,"t":{"415":{"position":[[516,8]]}}}],["live",{"_index":2153,"t":{"678":{"position":[[652,4]]},"684":{"position":[[64,4],[121,4]]},"690":{"position":[[61,4],[118,4],[428,4]]},"692":{"position":[[150,4],[193,4],[16610,4]]},"694":{"position":[[1039,4],[2623,4],[2666,4]]},"702":{"position":[[210,4],[295,4]]}}}],["live_video_view",{"_index":1796,"t":{"491":{"position":[[891,17]]},"690":{"position":[[523,18],[707,18],[904,20],[1047,20]]},"692":{"position":[[470,17],[1211,20],[3532,20],[11155,20],[13882,20],[16690,17],[17523,20],[18515,20],[19714,20],[21598,20],[21629,19],[26982,17],[27031,18],[27068,17],[27117,18]]},"694":{"position":[[743,17],[864,18],[1258,18],[1569,20],[2217,20],[9328,18],[10137,20],[11132,20],[12334,20],[14230,20],[14261,19],[14522,17],[14571,18],[14608,17],[14657,18],[15044,17],[15096,18],[15135,17],[15186,18]]},"696":{"position":[[943,18],[1356,20],[2114,20],[15595,18],[16398,20],[17387,20],[18583,20],[20455,20],[20486,19],[20797,17],[20846,18],[20882,17],[20931,18],[21314,17],[21366,18],[21405,17],[21456,18]]},"698":{"position":[[171,17],[369,17],[442,18],[535,18],[799,18],[1182,20],[2417,17],[2604,17],[2716,17],[3728,20],[6461,20],[9025,19],[9111,18],[9188,17],[10111,20],[11105,20],[12306,20],[14197,20],[14228,19]]}}}],["load",{"_index":626,"t":{"78":{"position":[[251,6],[537,6],[823,6],[1109,6],[1350,6]]},"90":{"position":[[312,6],[676,6]]},"108":{"position":[[288,6],[611,6],[934,6],[1257,6],[1552,6]]},"120":{"position":[[288,6],[611,6],[934,6],[1257,6],[1552,6]]},"186":{"position":[[252,6],[539,6],[826,6],[1113,6],[1372,6]]},"253":{"position":[[287,6],[609,6],[896,6],[1183,6],[1477,6]]},"758":{"position":[[422,5]]}}}],["local",{"_index":879,"t":{"138":{"position":[[27,7]]},"142":{"position":[[1550,5],[4197,5]]},"146":{"position":[[164,7],[356,5]]},"202":{"position":[[602,6]]},"269":{"position":[[46,5]]},"273":{"position":[[1742,5],[1921,5],[2178,5],[3137,5],[3240,5]]},"304":{"position":[[826,10]]},"509":{"position":[[620,6]]}}}],["localhost",{"_index":976,"t":{"142":{"position":[[4486,12]]}}}],["locat",{"_index":995,"t":{"144":{"position":[[1075,9],[1170,9],[2600,9],[2695,9]]},"728":{"position":[[180,9]]}}}],["log",{"_index":59,"t":{"6":{"position":[[197,7]]},"96":{"position":[[1637,5]]},"98":{"position":[[2807,5]]},"154":{"position":[[148,5]]},"160":{"position":[[29,4],[99,3],[120,3],[173,3],[201,3],[265,8]]},"654":{"position":[[177,6]]},"660":{"position":[[761,6]]},"662":{"position":[[5,7],[109,7],[219,7],[327,7]]}}}],["log.fatalf(\"rsa.generatekey",{"_index":775,"t":{"96":{"position":[[2146,28]]},"98":{"position":[[3356,28]]}}}],["log.format",{"_index":868,"t":{"130":{"position":[[181,10]]}}}],["log.level",{"_index":869,"t":{"130":{"position":[[210,9]]}}}],["logger",{"_index":700,"t":{"94":{"position":[[630,7]]},"96":{"position":[[1192,7]]},"98":{"position":[[2055,7]]}}}],["logic",{"_index":1410,"t":{"326":{"position":[[242,5]]},"403":{"position":[[2241,5]]},"607":{"position":[[12171,5]]},"668":{"position":[[720,7]]}}}],["login",{"_index":683,"t":{"92":{"position":[[221,5]]}}}],["logo",{"_index":1460,"t":{"365":{"position":[[195,4],[335,8],[488,5],[573,5]]},"371":{"position":[[853,5],[1025,5],[2116,5],[2344,5],[3760,5],[3942,5],[5156,5],[5334,5],[6204,5],[6380,5]]}}}],["long",{"_index":1323,"t":{"273":{"position":[[2567,4]]},"611":{"position":[[290,4]]}}}],["longer",{"_index":1215,"t":{"219":{"position":[[765,6]]},"230":{"position":[[114,6]]},"247":{"position":[[38,6]]},"288":{"position":[[11106,6],[12362,6],[13882,6],[15184,6],[16145,6]]},"312":{"position":[[10740,6],[10886,6]]},"318":{"position":[[137,6],[5551,6]]},"415":{"position":[[800,6]]},"421":{"position":[[297,6]]},"431":{"position":[[187,6],[531,6]]},"491":{"position":[[1583,6]]},"547":{"position":[[4981,6]]},"634":{"position":[[5367,6]]},"648":{"position":[[21886,6]]},"694":{"position":[[349,6]]},"698":{"position":[[2403,6]]}}}],["look",{"_index":528,"t":{"56":{"position":[[1045,4],[2521,4]]},"58":{"position":[[66,4],[2123,4]]},"60":{"position":[[246,4],[3450,4]]},"62":{"position":[[1512,4]]},"64":{"position":[[1891,4]]},"82":{"position":[[7,4]]},"100":{"position":[[7,4]]},"116":{"position":[[7,4]]},"128":{"position":[[7,4]]},"142":{"position":[[1085,4],[3772,4]]},"349":{"position":[[961,4]]},"397":{"position":[[1187,4]]},"423":{"position":[[3025,7]]},"501":{"position":[[130,7]]},"609":{"position":[[93,4],[420,4]]},"792":{"position":[[20616,5]]},"813":{"position":[[14769,5]]},"817":{"position":[[7,4]]}}}],["lookup",{"_index":2074,"t":{"648":{"position":[[117,6]]}}}],["loop",{"_index":2609,"t":{"769":{"position":[[21107,4]]}}}],["lose",{"_index":1204,"t":{"219":{"position":[[250,5],[429,5]]},"698":{"position":[[2535,5],[2585,4]]}}}],["lost",{"_index":917,"t":{"142":{"position":[[146,4]]},"259":{"position":[[1077,4]]},"668":{"position":[[2655,4]]},"742":{"position":[[4382,4]]}}}],["lot",{"_index":1325,"t":{"273":{"position":[[2707,3]]},"275":{"position":[[536,3]]},"423":{"position":[[776,3]]}}}],["low",{"_index":22,"t":{"4":{"position":[[203,3]]},"273":{"position":[[391,4],[617,4],[829,3],[982,4],[1063,3],[1157,4],[2126,4]]},"275":{"position":[[203,3],[287,3],[291,3],[447,3],[484,3],[488,3],[558,3],[594,3]]}}}],["lower",{"_index":1103,"t":{"158":{"position":[[740,5]]},"760":{"position":[[241,5]]},"781":{"position":[[276,5]]}}}],["mac",{"_index":846,"t":{"102":{"position":[[1047,3]]}}}],["machin",{"_index":1690,"t":{"425":{"position":[[1596,7]]}}}],["made",{"_index":548,"t":{"60":{"position":[[42,4]]},"269":{"position":[[672,4]]},"288":{"position":[[9945,4]]},"343":{"position":[[474,4]]},"453":{"position":[[714,4]]},"475":{"position":[[509,4]]},"487":{"position":[[275,4]]},"712":{"position":[[444,5]]},"769":{"position":[[21364,4]]}}}],["main",{"_index":360,"t":{"16":{"position":[[13251,6],[14461,6],[18863,6],[20073,6],[24640,6],[25851,6]]},"80":{"position":[[2024,6],[3761,6]]},"86":{"position":[[510,6],[1245,6]]},"94":{"position":[[1393,4],[1440,6]]},"96":{"position":[[1596,4],[1953,6]]},"98":{"position":[[2756,4],[3163,6]]},"102":{"position":[[404,6]]},"112":{"position":[[658,6],[1453,6]]},"124":{"position":[[658,6],[1453,6]]},"170":{"position":[[555,6],[1155,6]]},"172":{"position":[[1090,6],[1989,6]]},"190":{"position":[[658,6],[1453,6]]},"213":{"position":[[1039,6],[2339,6]]},"215":{"position":[[1092,6],[2299,6],[6259,6],[7468,6]]},"221":{"position":[[2393,6],[3596,6],[7454,6],[8791,6],[12800,6],[14007,6],[17825,6],[19034,6]]},"230":{"position":[[1301,6],[2600,6]]},"232":{"position":[[1136,6],[2344,6]]},"245":{"position":[[1382,6],[2579,6]]},"247":{"position":[[1056,6],[2351,6],[6155,6],[7353,6]]},"257":{"position":[[634,6],[1429,6]]},"288":{"position":[[1137,6],[2428,6],[6043,6],[7335,6],[11405,6],[12973,6]]},"312":{"position":[[1232,6],[2440,6],[6261,6],[7468,6]]},"318":{"position":[[1366,6],[2725,6],[6836,6],[8044,6],[12070,6],[13278,6]]},"338":{"position":[[1273,6],[2488,6]]},"345":{"position":[[2207,6],[3412,6]]},"369":{"position":[[1335,6],[2856,6],[7152,6],[8362,6]]},"371":{"position":[[1347,6],[2978,6]]},"373":{"position":[[1064,6],[2274,6]]},"385":{"position":[[1113,6],[2425,6]]},"387":{"position":[[1173,6],[2388,6],[6424,6],[7640,6]]},"403":{"position":[[3042,4],[3092,4],[3199,4]]},"405":{"position":[[224,4]]},"445":{"position":[[1235,6],[2446,6],[6285,6],[7495,6]]},"449":{"position":[[1196,6],[2408,6],[6411,6],[7623,6]]},"467":{"position":[[1074,6],[2372,6]]},"469":{"position":[[1156,6],[2534,6]]},"471":{"position":[[1246,6],[2461,6]]},"485":{"position":[[1312,6],[2662,6]]},"487":{"position":[[1374,6],[2585,6]]},"505":{"position":[[1445,6],[2936,6],[7102,6],[8310,6],[12517,6],[13725,6],[17625,6],[18835,6],[22668,6],[23877,6]]},"521":{"position":[[1085,6],[2385,6]]},"523":{"position":[[1495,6],[2872,6]]},"525":{"position":[[1308,6],[2525,6]]},"537":{"position":[[1215,6],[2622,6]]},"541":{"position":[[1218,6],[2621,6]]},"543":{"position":[[1181,6],[2480,6]]},"545":{"position":[[1060,6],[2256,6],[6006,6],[7202,6]]},"547":{"position":[[1057,6],[2348,6],[5996,6],[7193,6]]},"562":{"position":[[1229,6],[2435,6]]},"569":{"position":[[1529,6],[2825,6],[7082,6],[8340,6],[12508,6],[13776,6]]},"571":{"position":[[1614,6],[2792,6]]},"576":{"position":[[1259,6],[2559,6],[6593,6],[7893,6]]},"583":{"position":[[1257,6],[2637,6]]},"605":{"position":[[2358,6],[3565,6],[7951,6],[9158,6],[14196,6],[15406,6],[20448,6],[21655,6],[26106,6],[27314,6]]},"607":{"position":[[2204,6],[3412,6],[7876,6],[9087,6],[13635,6],[14844,6],[19377,6],[20586,6]]},"622":{"position":[[1430,6],[2846,6]]},"624":{"position":[[1183,6],[2401,6]]},"630":{"position":[[1254,6],[2825,6]]},"632":{"position":[[1104,6],[2314,6]]},"634":{"position":[[1111,6],[2482,6],[6475,6],[7686,6],[11528,6],[12742,6]]},"644":{"position":[[1865,6],[3074,6],[6901,6],[8109,6]]},"646":{"position":[[1180,6],[2531,6],[6369,6],[7581,6]]},"648":{"position":[[1247,6],[2523,6],[6839,6],[8271,6],[12289,6],[13722,6],[17819,6],[19028,6],[22899,6],[24106,6]]},"668":{"position":[[5817,6],[7185,6]]},"670":{"position":[[2178,6],[3574,6]]},"692":{"position":[[1462,6],[2768,6],[6422,6],[7732,6],[11553,6],[13118,6],[17736,6],[18945,6],[22852,6],[24059,6]]},"694":{"position":[[4080,6],[5754,6],[10350,6],[11562,6]]},"696":{"position":[[3871,6],[5321,6],[9759,6],[11516,6],[16611,6],[17817,6]]},"698":{"position":[[4128,6],[5696,6],[10325,6],[11536,6]]},"718":{"position":[[3078,6],[4443,6],[8343,6],[9558,6],[13504,6],[14869,6],[18726,6],[19941,6],[23889,6],[25111,6],[29713,6],[31440,6],[36296,6],[37511,6]]},"720":{"position":[[1120,6],[2330,6],[7819,6],[9028,6]]},"722":{"position":[[8048,6],[9690,6],[14548,6],[15982,6],[20329,6],[21863,6],[26269,6],[27718,6],[31865,6],[33201,6],[37013,6],[38332,6],[42233,6],[43440,6],[47340,6],[48562,6]]},"734":{"position":[[4073,6],[6067,6]]},"740":{"position":[[1415,6],[2620,6],[6530,6],[7739,6],[11695,6],[13061,6],[16883,6],[18089,6]]},"742":{"position":[[5526,6],[6727,6],[11155,6],[13001,6],[18450,6],[19995,6],[24424,6],[25629,6]]},"744":{"position":[[2279,6],[3879,6],[8955,6],[10495,6],[15412,6],[16953,6]]},"746":{"position":[[6057,6],[9755,6]]},"767":{"position":[[1988,6],[4413,6],[11484,6],[13281,6],[18595,6],[20322,6],[25982,6],[27190,6],[31162,6],[32371,6],[36201,6],[37413,6],[41260,6],[42473,6]]},"769":{"position":[[1284,6],[2493,6],[8615,6],[9820,6],[13964,6],[15178,6],[23711,6],[24924,6],[31365,6],[32569,6],[40352,6],[41556,6]]},"786":{"position":[[2781,6],[4088,6],[7811,6],[9021,6],[12880,6],[14187,6],[17867,6],[19077,6],[22912,6],[24123,6],[30062,6],[31272,6],[35106,6],[36316,6]]},"788":{"position":[[3529,6],[5121,6],[9808,6],[11020,6]]},"790":{"position":[[1275,6],[2606,6],[6831,6],[8194,6],[12009,6],[13219,6]]},"792":{"position":[[3978,6],[5425,6],[9992,6],[11206,6],[16523,6],[17852,6]]},"809":{"position":[[2781,6],[4091,6],[7832,6],[9045,6],[12916,6],[14222,6],[17897,6],[19106,6],[22936,6],[24147,6],[29573,6],[30782,6],[34611,6],[35821,6]]},"811":{"position":[[3377,6],[5172,6],[10280,6],[11493,6]]},"813":{"position":[[3089,6],[4651,6],[9413,6],[10629,6]]},"815":{"position":[[4134,6],[5925,6],[10942,6],[12159,6],[16113,6],[17332,6],[21221,6],[22442,6],[26418,6],[27637,6],[31524,6],[32743,6]]}}}],["maintain",{"_index":1328,"t":{"273":{"position":[[3229,8]]},"290":{"position":[[87,8]]},"773":{"position":[[631,11]]},"781":{"position":[[173,12],[311,10]]},"786":{"position":[[412,11],[633,13],[927,13],[27371,10],[27389,11],[27837,12],[27861,13],[28233,13]]},"788":{"position":[[957,10],[975,11],[1447,12],[1471,13],[1969,13]]},"792":{"position":[[1407,10],[1425,11],[1906,12],[1930,13],[2453,13],[20769,11],[20886,10],[21477,13],[21670,12],[22662,13]]}}}],["major",{"_index":2263,"t":{"712":{"position":[[835,8]]}}}],["make",{"_index":151,"t":{"16":{"position":[[269,4]]},"52":{"position":[[666,4]]},"54":{"position":[[99,4]]},"142":{"position":[[601,4],[3328,4]]},"146":{"position":[[317,4]]},"202":{"position":[[493,6]]},"221":{"position":[[6403,4]]},"273":{"position":[[1241,4]]},"288":{"position":[[121,4],[144,6]]},"306":{"position":[[29,4]]},"316":{"position":[[200,6]]},"318":{"position":[[5692,4],[16279,4],[16423,4]]},"326":{"position":[[205,4]]},"338":{"position":[[5397,4]]},"355":{"position":[[29,4]]},"387":{"position":[[10562,4]]},"399":{"position":[[5,4]]},"403":{"position":[[1922,5],[2001,5],[2137,4],[3266,4],[4841,6]]},"415":{"position":[[215,4]]},"419":{"position":[[93,5],[2018,4],[3840,6]]},"423":{"position":[[973,4]]},"427":{"position":[[388,5]]},"467":{"position":[[4994,4]]},"473":{"position":[[240,4],[282,4]]},"477":{"position":[[1594,4]]},"487":{"position":[[354,6]]},"505":{"position":[[27107,4]]},"509":{"position":[[511,6]]},"519":{"position":[[110,4]]},"525":{"position":[[5633,4]]},"581":{"position":[[294,4]]},"613":{"position":[[29,4]]},"624":{"position":[[5744,4]]},"630":{"position":[[766,4],[1969,4],[3553,4],[4889,4],[5859,4]]},"638":{"position":[[59,4]]},"648":{"position":[[65,5]]},"668":{"position":[[113,4]]},"684":{"position":[[177,4]]},"686":{"position":[[635,4]]},"694":{"position":[[953,4]]},"712":{"position":[[503,4],[609,4]]},"714":{"position":[[1086,4]]},"722":{"position":[[41115,4]]},"726":{"position":[[107,4]]},"767":{"position":[[24408,4],[24929,4],[30124,4]]},"769":{"position":[[21320,4]]},"786":{"position":[[26976,5],[27132,4]]},"788":{"position":[[2252,4],[3020,4],[3158,4],[4244,4],[4438,4],[5849,4],[5997,4],[7206,4],[7350,4],[8208,4],[8350,4]]},"790":{"position":[[6495,4],[7546,4],[8922,4],[10096,4],[10821,4]]},"792":{"position":[[2864,4],[2898,4]]},"809":{"position":[[27000,5],[27164,4]]},"811":{"position":[[2045,4],[2777,4],[3027,4],[4092,4],[4510,4],[5900,4],[6180,4],[7368,4],[7638,4],[8574,4],[8836,4]]}}}],["manag",{"_index":114,"t":{"10":{"position":[[346,7]]},"74":{"position":[[1059,8]]},"102":{"position":[[948,7],[1142,7]]},"132":{"position":[[277,7]]},"134":{"position":[[144,8]]},"146":{"position":[[130,6]]},"182":{"position":[[60,8]]},"196":{"position":[[78,8],[166,8]]},"200":{"position":[[0,6],[48,6],[103,6],[152,6],[225,6],[278,6],[342,6],[407,6]]},"217":{"position":[[130,8],[168,8]]},"221":{"position":[[21978,8],[22025,6]]},"225":{"position":[[24,6]]},"234":{"position":[[130,8],[164,8]]},"249":{"position":[[48,6]]},"326":{"position":[[370,8]]},"351":{"position":[[49,8],[110,8]]},"365":{"position":[[435,7],[931,7]]},"369":{"position":[[98,8],[924,7],[1000,10],[2077,7],[2204,10],[3611,7],[3696,8],[4897,7],[4968,9],[5799,7],[5878,8],[6970,9],[7963,9],[9164,8],[10306,9],[10906,11],[11081,9],[11122,8]]},"371":{"position":[[824,7],[2087,7],[3731,7],[5127,7],[6175,7]]},"403":{"position":[[2712,8],[6890,6],[6931,8]]},"453":{"position":[[641,8]]},"527":{"position":[[70,8]]},"652":{"position":[[54,8]]},"660":{"position":[[155,10],[224,7],[359,7],[444,7],[1102,8],[1213,7],[1240,7],[1850,10],[2379,9],[2463,9],[2875,7],[2935,7],[2985,7],[3268,8],[3400,8],[3532,8],[3664,8],[3796,8],[4291,8],[4479,8],[4667,8],[4855,8],[5043,8],[5843,8],[5985,8],[6127,8],[6269,8],[6411,8],[7091,8],[7229,8],[7367,8],[7505,8],[7643,8],[8908,8],[9044,8],[9180,8],[9316,8],[9452,8]]},"672":{"position":[[440,8],[491,7],[578,7],[1725,10],[1964,9],[2338,9],[2807,8],[2939,8],[3071,8],[3203,8],[3335,8],[3830,8],[4018,8],[4206,8],[4394,8],[4582,8],[5382,8],[5524,8],[5666,8],[5808,8],[5950,8],[6630,8],[6768,8],[6906,8],[7044,8],[7182,8],[8447,8],[8583,8],[8719,8],[8855,8],[8991,8]]},"684":{"position":[[189,10]]},"702":{"position":[[150,10]]},"710":{"position":[[439,10],[512,6],[550,6]]},"724":{"position":[[632,10]]},"734":{"position":[[168,7],[289,7],[2215,7],[3294,7],[4808,7],[6815,7],[8482,7],[9927,7]]},"738":{"position":[[243,7]]},"740":{"position":[[202,7],[369,7],[10617,7],[11375,7],[12429,7],[13808,7],[14985,7],[15715,7]]},"746":{"position":[[4022,7],[6792,7],[10503,7],[13506,7],[16954,7]]},"794":{"position":[[72,9],[97,6]]}}}],["manager\"},{\"user\":\"user:beth\",\"relation\":\"assignee\",\"object\":\"role:media",{"_index":1478,"t":{"369":{"position":[[5617,72]]}}}],["manager#assigne",{"_index":1486,"t":{"371":{"position":[[895,18],[2173,19],[3809,18],[5195,18],[6247,18]]}}}],["manager#assignee\",\"relation\":\"editor\",\"object\":\"asset",{"_index":1494,"t":{"371":{"position":[[5916,53]]}}}],["mani",{"_index":1450,"t":{"353":{"position":[[248,4]]},"529":{"position":[[301,4],[334,4]]},"605":{"position":[[18597,4]]},"758":{"position":[[3,4]]}}}],["manual",{"_index":442,"t":{"16":{"position":[[17547,8],[23306,8]]}}}],["map",{"_index":2164,"t":{"690":{"position":[[483,7]]}}}],["march",{"_index":1720,"t":{"431":{"position":[[80,5],[760,5]]}}}],["mari",{"_index":2400,"t":{"740":{"position":[[10600,5],[11356,4],[12410,4],[13789,4],[14966,4],[15696,4]]}}}],["mark",{"_index":1394,"t":{"316":{"position":[[16,4]]},"664":{"position":[[369,4]]},"668":{"position":[[441,4],[2466,4]]},"742":{"position":[[828,4],[962,4],[4213,4],[9552,4]]},"815":{"position":[[2666,4]]}}}],["market",{"_index":113,"t":{"10":{"position":[[332,9],[411,9]]},"714":{"position":[[659,9],[773,10]]},"722":{"position":[[418,9],[587,9],[989,9],[1073,9],[1172,10],[6804,10],[6834,9],[25103,10],[25136,10],[30732,9],[30770,9],[36020,9]]}}}],["match",{"_index":490,"t":{"52":{"position":[[484,7]]},"263":{"position":[[746,5]]},"273":{"position":[[2495,8]]},"349":{"position":[[1437,6]]},"373":{"position":[[39,5]]},"419":{"position":[[1643,5]]},"571":{"position":[[64,5]]},"587":{"position":[[143,5]]},"648":{"position":[[5669,5]]},"704":{"position":[[708,5]]},"720":{"position":[[87,5]]},"767":{"position":[[24265,5]]},"769":{"position":[[37568,7]]},"771":{"position":[[195,5]]},"773":{"position":[[808,5]]},"792":{"position":[[15044,5]]},"796":{"position":[[677,5]]},"813":{"position":[[14545,5]]}}}],["matter",{"_index":1976,"t":{"605":{"position":[[18586,6]]}}}],["max",{"_index":961,"t":{"142":{"position":[[3055,3]]}}}],["maximum",{"_index":1276,"t":{"259":{"position":[[2703,7]]},"585":{"position":[[112,7]]}}}],["mean",{"_index":50,"t":{"6":{"position":[[96,5]]},"8":{"position":[[133,5]]},"16":{"position":[[9875,5],[29606,7]]},"40":{"position":[[52,5]]},"48":{"position":[[91,7]]},"263":{"position":[[463,5]]},"273":{"position":[[926,5],[2524,4],[3312,7]]},"288":{"position":[[10163,5]]},"338":{"position":[[107,5]]},"349":{"position":[[1230,5]]},"405":{"position":[[148,5]]},"425":{"position":[[2734,4],[2855,7]]},"429":{"position":[[312,5]]},"485":{"position":[[5747,4],[6096,4]]},"501":{"position":[[208,7]]},"525":{"position":[[198,5]]},"624":{"position":[[5510,7]]},"670":{"position":[[804,5]]},"688":{"position":[[91,5]]},"716":{"position":[[359,5]]},"718":{"position":[[1873,5]]},"744":{"position":[[180,5]]},"769":{"position":[[6110,5],[19845,4]]},"792":{"position":[[164,5]]},"809":{"position":[[1633,5]]}}}],["meant",{"_index":496,"t":{"52":{"position":[[657,5]]}}}],["media",{"_index":1378,"t":{"304":{"position":[[440,6],[617,5]]},"365":{"position":[[429,5],[511,5],[925,5],[957,5]]},"369":{"position":[[91,6],[137,6],[918,5],[1035,5],[2071,5],[2244,5],[3605,5],[3732,5],[4891,5],[5014,5],[5793,5],[5914,5]]},"371":{"position":[[818,5],[989,5],[2081,5],[2308,5],[3725,5],[3906,5],[5121,5],[5298,5],[6169,5],[6344,5]]},"399":{"position":[[4458,5]]}}}],["meet",{"_index":1760,"t":{"469":{"position":[[841,7],[1907,7],[3298,7],[4487,7],[5233,7]]}}}],["meeting_notes.doc",{"_index":1414,"t":{"328":{"position":[[313,19]]}}}],["member",{"_index":187,"t":{"16":{"position":[[1867,7],[2192,8],[2308,8],[2421,8],[2533,8],[2610,9],[2667,9],[5040,6],[5538,6],[6259,6],[6413,7],[9010,6],[10966,6],[11048,9]]},"54":{"position":[[205,7],[906,9],[963,9],[2032,8],[2223,8],[2336,8],[3354,8],[3545,8],[3658,8],[3836,6]]},"56":{"position":[[1104,7],[1171,9],[1228,9],[1345,8],[1497,7],[1664,6],[1776,6],[1867,6],[2004,6],[2046,9],[2152,6],[2191,9],[2237,7],[2269,7],[2342,9],[2394,6],[2456,9]]},"200":{"position":[[187,7],[304,7]]},"202":{"position":[[374,7]]},"221":{"position":[[248,6],[368,7],[536,9],[593,9],[836,8],[959,6],[1083,7],[6415,6],[7154,6],[7211,9],[8179,6],[9529,6],[9594,9],[10677,6],[11364,6],[11769,6]]},"230":{"position":[[19,6],[123,6],[323,6],[1058,9],[3365,9]]},"261":{"position":[[116,7],[343,9],[400,9],[641,8],[846,8]]},"296":{"position":[[301,7]]},"304":{"position":[[753,7]]},"306":{"position":[[296,7],[561,7],[834,8],[889,9],[946,9],[1142,7],[1304,6],[1367,9],[1419,6],[1481,9]]},"314":{"position":[[355,7],[725,8],[780,9],[837,9]]},"316":{"position":[[458,7],[920,8],[975,9],[1032,9]]},"326":{"position":[[383,7]]},"345":{"position":[[105,7],[278,9],[335,9],[598,8],[695,8],[862,8],[922,9]]},"347":{"position":[[541,8],[651,8]]},"349":{"position":[[1279,7]]},"369":{"position":[[6088,7]]},"371":{"position":[[54,7]]},"397":{"position":[[2565,6],[2617,6]]},"399":{"position":[[1605,6],[1657,6],[3447,6],[3499,6]]},"401":{"position":[[1937,6],[1989,6],[2428,6],[3211,7]]},"403":{"position":[[645,7],[657,6],[707,7],[844,8],[974,6],[1139,7],[1236,7],[1253,7],[1369,9],[1629,7],[2017,6],[2108,7],[2487,8],[2518,7],[2589,9],[2872,7],[4852,7],[5004,7],[9993,7]]},"405":{"position":[[1459,8],[1612,6],[1677,9],[1729,6],[1791,9],[1971,7],[2240,7],[2822,6],[2858,7],[3400,6],[3435,7]]},"419":{"position":[[163,6],[477,9],[1142,6],[1202,9],[1371,7],[1807,6],[1867,6],[1937,9],[2331,7],[2684,9],[2741,9],[3975,6]]},"421":{"position":[[120,6],[177,9],[621,6],[683,9]]},"423":{"position":[[128,9],[1283,7],[1396,7],[1738,9],[1795,9],[2322,8],[2873,8],[3097,7]]},"435":{"position":[[259,6]]},"437":{"position":[[439,7],[551,6],[593,6],[863,7],[1334,9],[1391,9],[1987,6],[2054,9],[2110,6],[2176,9],[2287,8]]},"445":{"position":[[10451,7],[10596,7]]},"447":{"position":[[112,6],[341,6],[394,7],[870,8],[1115,9],[1172,9]]},"449":{"position":[[133,6],[5348,6]]},"451":{"position":[[124,8]]},"485":{"position":[[6106,7]]},"509":{"position":[[392,7]]},"517":{"position":[[144,7],[343,7],[379,7]]},"519":{"position":[[95,8],[281,7],[534,8],[589,9],[646,9]]},"521":{"position":[[27,7],[106,6],[841,9],[3150,9]]},"523":{"position":[[260,8],[288,7],[396,7],[1187,8],[2252,8],[3642,8],[4830,8],[5582,8]]},"525":{"position":[[67,6],[127,7],[5435,6],[5458,7]]},"601":{"position":[[417,7],[831,8],[942,8],[997,9],[1054,9],[1426,6]]},"605":{"position":[[228,7],[642,8],[753,8],[808,9],[865,9],[12502,6],[12530,7],[12636,9],[12850,6],[12878,6],[12999,7],[18269,6],[18347,7],[18751,6],[18785,7],[18823,7],[18852,7],[18884,7],[18913,7],[19016,9],[19112,9],[19196,9]]},"607":{"position":[[241,7],[517,9],[574,9],[12250,6],[12278,7],[12382,9],[17708,6],[17786,7]]},"628":{"position":[[1844,6]]},"660":{"position":[[258,7],[485,6],[936,7],[1406,9],[1532,9]]},"668":{"position":[[1129,7],[1384,9],[1964,9]]},"672":{"position":[[136,7],[744,9],[1324,9]]},"704":{"position":[[224,7]]},"712":{"position":[[243,7],[1117,7],[1181,7],[1254,7]]},"714":{"position":[[340,6],[478,7],[862,7]]},"716":{"position":[[750,7],[979,6],[1122,7],[1331,9],[1565,9],[1833,6],[1840,8]]},"718":{"position":[[134,7],[340,6],[407,6],[694,7],[903,9],[1137,9],[1493,7],[1546,9],[1603,9],[1771,8],[1858,9],[1920,6],[12452,6],[13181,6],[13252,9],[14234,6],[15612,6],[15691,9],[16788,6],[17517,6],[18512,9],[19510,9],[20715,9],[22622,9],[22642,8],[28331,6],[28396,9],[29394,6],[29461,9],[30809,6],[32457,6],[32532,9],[33895,6],[35031,6],[40837,6],[40886,7],[40924,6],[40975,7]]},"720":{"position":[[905,9],[1898,9],[3098,9],[4984,9],[5004,8],[5225,6],[5408,6],[5467,6],[5758,6],[5909,7],[6237,9],[6613,9],[6787,6],[7605,9],[8597,9],[9796,9],[11679,9],[11699,8],[12336,6],[12385,7],[12424,6],[12475,7]]},"722":{"position":[[715,6],[759,7],[884,7],[2356,8],[2626,8],[3864,8],[4134,8],[4601,7],[5205,9],[5581,9],[6250,8],[6520,8],[13344,7],[14195,6],[15317,6],[16764,6],[18009,6],[18815,6],[19091,6],[30806,7],[51655,6],[51704,7],[52483,6],[52534,7]]},"754":{"position":[[470,7],[503,7],[564,7]]},"762":{"position":[[337,6],[370,6],[410,6]]},"765":{"position":[[595,7],[782,7],[1274,9],[1331,9]]},"767":{"position":[[18017,6],[18092,9],[18146,6],[18212,9],[18269,6],[18346,9],[19320,6],[19505,6],[19684,6],[21060,6],[21143,9],[21199,6],[21273,9],[21332,6],[21417,9],[22506,6],[22641,6],[22770,6],[23634,6],[23767,6],[23894,6],[24505,6],[24613,6],[24829,6],[25770,9],[26761,9],[27959,9],[29840,9],[29860,8],[30949,9],[31941,9],[33140,9],[35024,9],[35044,8]]},"769":{"position":[[6763,7],[7343,9],[21735,7],[22474,9],[22531,9],[28267,7],[28415,7],[28869,6],[28927,7],[29632,8],[29807,9],[29864,9],[30173,6],[30255,6],[37323,9],[37814,6],[37872,7],[38462,8],[38637,9],[38694,9]]},"773":{"position":[[360,7]]},"781":{"position":[[358,7],[389,7]]},"783":{"position":[[56,6],[104,6],[149,6],[199,7],[241,7],[281,7],[524,7]]},"788":{"position":[[63,7],[394,7],[503,9],[560,9],[655,8],[733,6],[1730,8],[1842,8],[1953,8],[2068,8],[2178,8],[2235,6],[3035,6],[3108,9],[3163,7],[4259,6],[4443,7],[5864,6],[5945,9],[6002,7],[7221,6],[7355,7],[8223,6],[8355,7]]},"790":{"position":[[1019,9],[3390,9],[5362,7],[5387,7],[5516,7],[5618,7],[5726,6],[6508,6],[6577,9],[7559,6],[8935,6],[9012,9],[10109,6],[10834,6]]},"792":{"position":[[59,7],[950,7],[1055,9],[1112,9],[2214,8],[2326,8],[2437,8],[2552,8],[2662,8],[2876,6],[3642,9],[6189,9],[8914,8],[22273,8],[22323,8],[22435,8],[22485,8],[22596,8],[22646,8],[22761,8],[22811,8],[22921,8],[22971,8],[23371,8],[23421,8]]},"806":{"position":[[308,7],[476,7]]},"811":{"position":[[236,7],[363,6],[665,7],[1258,8],[1371,8],[1487,8],[1600,8],[1657,9],[1714,9],[1852,8],[1929,9],[1975,7],[2027,7],[2054,7],[2804,6],[2860,9],[2924,9],[2991,9],[3032,7],[4119,6],[4515,7],[5927,6],[5991,9],[6065,9],[6142,9],[6185,7],[7395,6],[7643,7],[8601,6],[8841,7]]},"813":{"position":[[1413,8],[1526,8],[1642,8],[1755,8],[15169,7],[16329,8],[16442,8],[16558,8],[16671,8],[16728,9],[16785,9]]},"815":{"position":[[933,7],[2093,8],[2206,8],[2322,8],[2471,8],[2528,9],[2585,9],[2701,7],[3616,7],[5039,7],[6797,7],[8303,7],[9528,7],[15037,6],[25344,6]]}}}],["member'",{"_index":1594,"t":{"403":{"position":[[2165,8]]},"517":{"position":[[434,8]]}}}],["membership",{"_index":1171,"t":{"200":{"position":[[238,10]]},"217":{"position":[[145,10],[183,11]]},"219":{"position":[[52,10],[504,10]]},"296":{"position":[[262,11]]},"351":{"position":[[64,10]]},"403":{"position":[[1802,10],[2360,10]]},"527":{"position":[[85,10]]},"788":{"position":[[256,11]]},"792":{"position":[[502,10],[839,11],[8777,11]]},"813":{"position":[[8215,11]]}}}],["memori",{"_index":915,"t":{"142":{"position":[[61,6],[74,6]]},"148":{"position":[[158,6]]}}}],["mention",{"_index":681,"t":{"92":{"position":[[85,9]]},"365":{"position":[[38,9]]},"767":{"position":[[73,9]]},"769":{"position":[[38866,9]]}}}],["messag",{"_index":2250,"t":{"710":{"position":[[11,9]]}}}],["met",{"_index":1735,"t":{"435":{"position":[[243,4]]},"700":{"position":[[290,4]]},"724":{"position":[[559,4]]},"752":{"position":[[281,3]]},"771":{"position":[[870,4]]}}}],["metadata",{"_index":179,"t":{"16":{"position":[[1107,11],[2086,11],[2638,11],[6948,11],[7945,11],[11613,11]]},"54":{"position":[[934,11],[1907,11],[3229,11]]},"56":{"position":[[1199,11]]},"58":{"position":[[459,11]]},"60":{"position":[[617,11],[1037,11],[1775,11]]},"62":{"position":[[393,11]]},"64":{"position":[[470,11]]},"66":{"position":[[497,11]]},"68":{"position":[[1485,11],[2191,11]]},"80":{"position":[[381,11],[1593,11]]},"204":{"position":[[588,11],[759,11]]},"221":{"position":[[564,11],[733,11]]},"238":{"position":[[471,11]]},"261":{"position":[[371,11],[537,11],[742,11]]},"263":{"position":[[388,8]]},"279":{"position":[[622,11],[900,11]]},"306":{"position":[[710,11],[917,11]]},"314":{"position":[[531,11],[808,11]]},"316":{"position":[[726,11],[1003,11]]},"328":{"position":[[645,11]]},"336":{"position":[[519,11]]},"345":{"position":[[306,11],[475,11]]},"347":{"position":[[418,11]]},"355":{"position":[[850,11]]},"367":{"position":[[702,11],[1026,11]]},"379":{"position":[[545,11]]},"419":{"position":[[2712,11],[3072,11],[3580,11]]},"423":{"position":[[1766,11],[2126,11],[2677,11]]},"425":{"position":[[978,11]]},"429":{"position":[[1451,11]]},"437":{"position":[[1113,11],[1362,11]]},"447":{"position":[[894,11],[1143,11]]},"455":{"position":[[586,11],[755,11]]},"463":{"position":[[592,11],[787,11]]},"465":{"position":[[418,11],[752,11]]},"477":{"position":[[490,11]]},"493":{"position":[[546,11]]},"501":{"position":[[524,11]]},"503":{"position":[[1273,11]]},"511":{"position":[[502,11]]},"519":{"position":[[430,11],[617,11]]},"531":{"position":[[456,11]]},"539":{"position":[[566,11],[800,11]]},"553":{"position":[[721,11]]},"601":{"position":[[671,11],[1025,11]]},"605":{"position":[[482,11],[836,11]]},"607":{"position":[[449,11],[545,11]]},"613":{"position":[[566,11],[733,11]]},"620":{"position":[[449,11],[687,11]]},"628":{"position":[[610,11],[864,11]]},"660":{"position":[[1503,11],[2630,11]]},"668":{"position":[[1935,11]]},"672":{"position":[[1295,11],[2505,11]]},"690":{"position":[[1018,11]]},"694":{"position":[[2040,11]]},"696":{"position":[[536,11],[1827,11],[2466,11]]},"698":{"position":[[1605,11],[2003,11]]},"716":{"position":[[1384,11]]},"718":{"position":[[956,11],[1574,11]]},"720":{"position":[[6432,11]]},"722":{"position":[[2035,11],[3543,11],[5400,11],[5929,11]]},"734":{"position":[[1032,11],[1654,11],[2050,11]]},"742":{"position":[[363,11],[596,11],[2046,11],[3873,11]]},"746":{"position":[[1380,11],[2475,11],[2871,11],[3042,11],[3215,11]]},"748":{"position":[[1142,11],[1780,11],[2942,11],[3338,11],[3509,11],[3682,11]]},"765":{"position":[[939,11],[1117,11],[1302,11]]},"769":{"position":[[5709,11],[6939,11],[7186,11],[7371,11],[19346,11],[22070,11],[22317,11],[22502,11],[29269,11],[29650,11],[29835,11],[36324,11],[36842,11],[38168,11],[38480,11],[38665,11]]},"786":{"position":[[690,11],[1454,11],[27996,11],[28635,11]]},"788":{"position":[[531,11],[1606,11]]},"792":{"position":[[1083,11],[2090,11],[22149,11],[23167,11]]},"809":{"position":[[731,11],[1336,11],[27891,11]]},"811":{"position":[[1133,11],[1685,11]]},"813":{"position":[[1215,11],[16131,11],[16756,11]]},"815":{"position":[[1895,11],[2556,11]]}}}],["method",{"_index":368,"t":{"16":{"position":[[13776,7],[15038,7],[15954,7],[17482,7],[19388,7],[20650,7],[21566,7],[23241,7],[25165,7],[26428,7],[27354,7]]},"80":{"position":[[2549,7],[4338,7],[5659,7]]},"92":{"position":[[227,6]]},"98":{"position":[[85,6],[4061,6]]},"112":{"position":[[1183,7],[2030,7],[2598,7]]},"124":{"position":[[1183,7],[2030,7],[2598,7]]},"140":{"position":[[461,7]]},"144":{"position":[[650,7],[825,6],[2084,7],[2274,6]]},"172":{"position":[[918,7],[941,7],[1517,7],[1564,7],[2466,7],[2508,6],[3381,7]]},"190":{"position":[[1183,7],[2030,7],[2598,7]]},"213":{"position":[[1564,7],[2916,7],[3797,7]]},"215":{"position":[[1617,7],[2876,7],[3789,7],[6784,7],[8045,7],[8960,7]]},"221":{"position":[[2918,7],[4173,7],[5082,7],[7979,7],[9368,7],[10286,7],[13325,7],[14584,7],[15497,7],[18350,7],[19611,7],[20526,7]]},"230":{"position":[[1826,7],[3177,7],[4057,7]]},"232":{"position":[[1661,7],[2921,7],[3835,7]]},"245":{"position":[[1907,7],[3156,7],[4059,7]]},"247":{"position":[[1581,7],[2928,7],[3804,7],[6680,7],[7930,7],[8834,7]]},"257":{"position":[[1159,7],[2006,7],[2574,7]]},"288":{"position":[[1662,7],[3005,7],[3877,7],[6568,7],[7912,7],[8785,7],[11930,7],[13550,7],[14638,7]]},"312":{"position":[[1757,7],[3017,7],[3931,7],[6786,7],[8045,7],[8958,7]]},"318":{"position":[[1891,7],[3302,7],[4242,7],[7361,7],[8621,7],[9535,7],[12595,7],[13855,7],[14769,7]]},"338":{"position":[[1798,7],[3065,7],[3986,7]]},"345":{"position":[[2732,7],[3989,7],[4900,7]]},"369":{"position":[[1860,7],[3433,7],[4489,7],[7677,7],[8939,7],[9855,7]]},"371":{"position":[[1872,7],[3555,7],[4721,7]]},"373":{"position":[[1589,7],[2851,7],[3767,7]]},"385":{"position":[[1638,7],[3002,7],[3895,7]]},"387":{"position":[[1698,7],[2965,7],[3886,7],[6949,7],[8217,7],[9139,7]]},"445":{"position":[[1760,7],[3023,7],[3940,7],[6810,7],[8072,7],[8988,7]]},"449":{"position":[[1721,7],[2985,7],[3903,7],[6936,7],[8200,7],[9118,7]]},"467":{"position":[[1599,7],[2949,7],[3828,7]]},"469":{"position":[[1681,7],[3111,7],[4070,7]]},"471":{"position":[[1771,7],[3038,7],[3959,7]]},"485":{"position":[[1837,7],[3239,7],[4170,7]]},"487":{"position":[[1899,7],[3162,7],[4079,7]]},"505":{"position":[[1970,7],[3513,7],[4539,7],[7627,7],[8887,7],[9801,7],[13042,7],[14302,7],[15216,7],[18150,7],[19412,7],[20328,7],[23193,7],[24454,7],[25369,7]]},"521":{"position":[[1610,7],[2962,7],[3843,7]]},"523":{"position":[[2020,7],[3449,7],[4407,7]]},"525":{"position":[[1833,7],[3102,7],[4025,7]]},"537":{"position":[[1740,7],[3199,7],[4141,7]]},"541":{"position":[[1743,7],[3198,7],[4136,7]]},"543":{"position":[[1706,7],[3057,7],[3937,7]]},"545":{"position":[[1585,7],[2833,7],[3735,7],[6531,7],[7779,7],[8681,7]]},"547":{"position":[[1582,7],[2925,7],[3797,7],[6521,7],[7770,7],[8673,7]]},"562":{"position":[[1754,7],[3012,7],[3924,7]]},"569":{"position":[[2054,7],[3402,7],[4335,7],[7607,7],[8917,7],[9829,7],[13033,7],[14353,7],[15275,7]]},"571":{"position":[[2139,7],[3369,7],[4184,7]]},"576":{"position":[[1784,7],[3136,7],[4094,7],[7118,7],[8470,7],[9428,7]]},"583":{"position":[[1782,7],[3214,7],[4270,7]]},"605":{"position":[[2883,7],[4142,7],[5055,7],[8476,7],[9735,7],[10648,7],[14721,7],[15983,7],[16899,7],[20973,7],[22232,7],[23145,7],[26631,7],[27891,7],[28805,7]]},"607":{"position":[[2729,7],[3989,7],[4903,7],[8401,7],[9664,7],[10581,7],[14160,7],[15421,7],[16336,7],[19902,7],[21163,7],[22078,7]]},"622":{"position":[[1955,7],[3423,7],[4420,7]]},"624":{"position":[[1708,7],[2978,7],[3902,7]]},"630":{"position":[[1779,7],[3402,7],[4508,7]]},"632":{"position":[[1629,7],[2891,7],[3807,7]]},"634":{"position":[[1636,7],[3059,7],[4011,7],[7000,7],[8263,7],[9180,7],[12053,7],[13319,7],[14239,7]]},"644":{"position":[[2390,7],[3651,7],[4566,7],[7426,7],[8686,7],[9600,7]]},"646":{"position":[[1705,7],[3108,7],[4040,7],[6894,7],[8158,7],[9076,7]]},"648":{"position":[[1772,7],[3100,7],[4077,7],[7364,7],[8848,7],[9815,7],[12814,7],[14299,7],[15267,7],[18344,7],[19605,7],[20520,7],[23424,7],[24683,7],[25596,7]]},"668":{"position":[[6342,7],[7762,7],[8711,7]]},"670":{"position":[[2703,7],[4151,7],[5128,7]]},"692":{"position":[[1987,7],[3345,7],[4232,7],[6947,7],[8309,7],[9200,7],[12078,7],[13695,7],[14749,7],[18261,7],[19522,7],[20437,7],[23377,7],[24636,7],[25549,7]]},"694":{"position":[[4605,7],[6331,7],[7448,7],[10875,7],[12139,7],[13057,7]]},"696":{"position":[[4396,7],[5898,7],[6883,7],[10284,7],[12093,7],[13293,7],[17136,7],[18394,7],[19306,7]]},"698":{"position":[[4653,7],[6273,7],[7330,7],[10850,7],[12113,7],[13030,7]]},"718":{"position":[[3603,7],[5020,7],[5966,7],[8868,7],[10135,7],[11056,7],[14029,7],[15446,7],[16392,7],[19251,7],[20518,7],[21439,7],[24414,7],[25688,7],[26616,7],[30238,7],[32017,7],[33233,7],[36821,7],[38088,7],[39009,7]]},"720":{"position":[[1645,7],[2907,7],[3823,7],[8344,7],[9605,7],[10520,7]]},"722":{"position":[[8573,7],[10267,7],[11398,7],[15073,7],[16559,7],[17574,7],[20854,7],[22440,7],[23509,7],[26794,7],[28295,7],[29279,7],[32390,7],[33778,7],[34695,7],[37538,7],[38909,7],[39809,7],[42758,7],[44017,7],[44930,7],[47865,7],[49139,7],[50067,7]]},"728":{"position":[[27,7]]},"734":{"position":[[4598,7],[6644,7],[8081,7]]},"740":{"position":[[1940,7],[3197,7],[4108,7],[7055,7],[8316,7],[9231,7],[12220,7],[13638,7],[14585,7],[17408,7],[18666,7],[19578,7]]},"742":{"position":[[6051,7],[7304,7],[8211,7],[11680,7],[13578,7],[14913,7],[18975,7],[20572,7],[21652,7],[24949,7],[26206,7],[27117,7]]},"744":{"position":[[2804,7],[4456,7],[5591,7],[9480,7],[11072,7],[12203,7],[15937,7],[17530,7],[18662,7]]},"746":{"position":[[6582,7],[10332,7],[13105,7]]},"767":{"position":[[2513,7],[4990,7],[6766,7],[12009,7],[13858,7],[15144,7],[19120,7],[20899,7],[22115,7],[26507,7],[27767,7],[28681,7],[31687,7],[32948,7],[33863,7],[36726,7],[37990,7],[38908,7],[41785,7],[43050,7],[43969,7]]},"769":{"position":[[1809,7],[3070,7],[3985,7],[9140,7],[10397,7],[11308,7],[14489,7],[15755,7],[16675,7],[24236,7],[25501,7],[26420,7],[31890,7],[33146,7],[34056,7],[40877,7],[42133,7],[43043,7]]},"786":{"position":[[3306,7],[4665,7],[5553,7],[8336,7],[9598,7],[10514,7],[13405,7],[14764,7],[15652,7],[18392,7],[19654,7],[20570,7],[23437,7],[24700,7],[25617,7],[30587,7],[31849,7],[32765,7],[35631,7],[36893,7],[37809,7]]},"788":{"position":[[4054,7],[5698,7],[6825,7],[10333,7],[11597,7],[12515,7]]},"790":{"position":[[1800,7],[3183,7],[4095,7],[7356,7],[8771,7],[9715,7],[12534,7],[13796,7],[14712,7]]},"792":{"position":[[4503,7],[6002,7],[6984,7],[10517,7],[11783,7],[12703,7],[17048,7],[18429,7],[19339,7]]},"809":{"position":[[3306,7],[4668,7],[5559,7],[8357,7],[9622,7],[10541,7],[13441,7],[14799,7],[15686,7],[18422,7],[19683,7],[20598,7],[23461,7],[24724,7],[25641,7],[30098,7],[31359,7],[32274,7],[35136,7],[36398,7],[37314,7]]},"811":{"position":[[3902,7],[5749,7],[6987,7],[10805,7],[12070,7],[12989,7]]},"813":{"position":[[3614,7],[5228,7],[6325,7],[9938,7],[11206,7],[12128,7]]},"815":{"position":[[4659,7],[6502,7],[7782,7],[11467,7],[12736,7],[13659,7],[16638,7],[17909,7],[18834,7],[21746,7],[23019,7],[23946,7],[26943,7],[28214,7],[29139,7],[32049,7],[33320,7],[34245,7]]}}}],["method=oidc",{"_index":1008,"t":{"144":{"position":[[3051,11]]}}}],["method=preshar",{"_index":998,"t":{"144":{"position":[[1532,16]]}}}],["metric",{"_index":1054,"t":{"152":{"position":[[570,7],[615,7]]},"154":{"position":[[127,8],[236,7]]},"156":{"position":[[8,7],[107,7],[171,7],[303,7],[393,7],[509,7]]}}}],["middlewar",{"_index":710,"t":{"94":{"position":[[1128,10]]},"96":{"position":[[1542,10],[2194,10]]},"98":{"position":[[2538,12],[3404,10],[4401,10],[5460,10]]}}}],["migrat",{"_index":875,"t":{"132":{"position":[[302,7]]},"134":{"position":[[207,9],[240,7],[291,9],[325,7]]},"142":{"position":[[1008,7],[1146,7],[1891,8],[1995,7],[2012,7],[2202,8],[2797,7],[3629,7],[3695,7],[3833,7],[4565,8],[4666,7],[4683,7],[4853,8],[5425,7]]},"182":{"position":[[116,9],[149,7],[200,9],[234,7]]},"296":{"position":[[1555,9],[1574,7]]},"411":{"position":[[32,9]]},"413":{"position":[[0,9],[29,7],[94,9],[127,7]]},"415":{"position":[[724,9],[990,7]]},"425":{"position":[[1734,7],[1855,9]]},"433":{"position":[[54,9],[72,9],[105,7]]},"642":{"position":[[225,7],[856,7]]},"648":{"position":[[6,7]]}}}],["million",{"_index":78,"t":{"8":{"position":[[185,8]]}}}],["minim",{"_index":2050,"t":{"638":{"position":[[241,8]]}}}],["minimum",{"_index":1109,"t":{"160":{"position":[[193,7]]}}}],["minut",{"_index":1280,"t":{"259":{"position":[[2828,6]]}}}],["mirror",{"_index":582,"t":{"68":{"position":[[52,7]]}}}],["miss",{"_index":522,"t":{"56":{"position":[[764,8]]}}}],["mod",{"_index":834,"t":{"102":{"position":[[759,3]]}}}],["mode",{"_index":1670,"t":{"419":{"position":[[2554,7]]}}}],["model",{"_index":147,"t":{"16":{"position":[[174,5],[388,6],[1444,7],[1469,5],[1563,5],[1635,6],[1651,5],[2779,6],[2979,6],[3228,9],[3541,5],[3629,5],[4171,6],[5303,5],[6553,5],[6631,5],[7721,6],[9128,6],[9596,6],[9973,5],[10280,5],[28676,5],[30284,8],[30320,9],[30330,8]]},"22":{"position":[[17,5],[111,5]]},"26":{"position":[[154,6]]},"30":{"position":[[74,5]]},"40":{"position":[[150,5],[457,5]]},"50":{"position":[[175,8]]},"52":{"position":[[99,6],[671,8],[1041,9]]},"54":{"position":[[32,6],[149,5],[3706,5]]},"56":{"position":[[2529,8]]},"58":{"position":[[2131,8],[2183,9],[2228,9]]},"60":{"position":[[272,5],[294,5],[1269,5],[1903,5],[3458,9],[3499,9],[3532,9],[3563,9]]},"62":{"position":[[955,5],[1520,8],[1572,8],[1616,9],[1626,8]]},"64":{"position":[[1019,5],[1899,8]]},"66":{"position":[[210,8],[1067,9],[1118,5]]},"68":{"position":[[875,5],[1804,5]]},"70":{"position":[[82,8],[162,9],[224,8],[299,8]]},"74":{"position":[[219,5],[378,5],[425,5]]},"76":{"position":[[56,5]]},"80":{"position":[[64,6],[80,5],[652,6],[697,6],[6693,6],[7251,5],[7312,5]]},"82":{"position":[[93,5],[135,8],[173,9],[188,9],[238,8]]},"84":{"position":[[141,5]]},"90":{"position":[[227,5],[591,5]]},"100":{"position":[[108,8],[164,8],[259,8]]},"108":{"position":[[236,5],[559,5],[882,5],[1205,5],[1500,5]]},"120":{"position":[[236,5],[559,5],[882,5],[1205,5],[1500,5]]},"134":{"position":[[336,5]]},"146":{"position":[[78,5]]},"174":{"position":[[168,5],[277,5]]},"178":{"position":[[46,5],[197,5],[354,5],[464,6]]},"182":{"position":[[83,5],[245,5]]},"186":{"position":[[236,6],[523,6],[810,6],[1097,6],[1356,6]]},"198":{"position":[[227,5]]},"204":{"position":[[201,6],[321,5],[943,8],[1279,5],[1553,5]]},"208":{"position":[[201,5],[475,5]]},"217":{"position":[[48,5],[61,8],[101,5]]},"221":{"position":[[201,6],[315,5],[1260,5],[21861,8],[22291,5],[22565,5]]},"227":{"position":[[201,5],[475,5]]},"234":{"position":[[48,5],[61,8],[101,5]]},"236":{"position":[[245,5]]},"238":{"position":[[201,6],[270,5],[691,5],[998,5],[1272,5]]},"240":{"position":[[48,5]]},"242":{"position":[[201,5],[475,5]]},"249":{"position":[[101,5],[147,8],[189,5]]},"251":{"position":[[322,5]]},"253":{"position":[[236,5],[558,5],[880,6],[1167,6],[1426,5]]},"261":{"position":[[45,6],[61,5]]},"269":{"position":[[183,5]]},"279":{"position":[[201,6],[359,5],[1196,5],[1284,8],[1598,5],[1872,5]]},"281":{"position":[[48,5]]},"285":{"position":[[201,5],[475,5]]},"294":{"position":[[85,6],[313,5]]},"296":{"position":[[47,5],[153,8],[245,5],[370,5],[416,5],[499,5],[617,5],[723,5],[849,5],[949,5],[1062,5],[1235,5],[1412,6],[1514,8],[1596,6]]},"298":{"position":[[76,8],[233,5]]},"300":{"position":[[44,5],[154,5],[261,5],[370,5]]},"302":{"position":[[44,5]]},"304":{"position":[[32,5]]},"306":{"position":[[169,5],[449,5],[1572,8],[1908,5],[2182,5]]},"310":{"position":[[201,5],[475,5]]},"312":{"position":[[29,5],[10599,5],[10688,5]]},"314":{"position":[[119,5],[191,5],[220,5]]},"316":{"position":[[307,5]]},"318":{"position":[[20,5],[273,6],[5612,5],[16138,5]]},"320":{"position":[[48,5],[68,9],[130,9],[243,5]]},"322":{"position":[[69,6],[228,6]]},"324":{"position":[[30,5],[164,5],[270,5],[384,5]]},"328":{"position":[[170,5],[390,5],[1075,8],[1411,5],[1685,5]]},"332":{"position":[[201,5],[475,5]]},"336":{"position":[[137,5],[175,5],[839,5]]},"340":{"position":[[83,8],[187,8]]},"345":{"position":[[36,6],[52,5]]},"347":{"position":[[36,6],[52,5]]},"349":{"position":[[48,6],[954,6]]},"353":{"position":[[34,5],[327,8],[631,5],[731,5]]},"355":{"position":[[139,6],[374,5],[494,5],[1074,8],[1201,8]]},"365":{"position":[[32,5],[238,5],[1005,5],[1145,5],[1318,5]]},"367":{"position":[[245,5],[274,5]]},"373":{"position":[[14,5],[5149,5]]},"375":{"position":[[48,5],[68,8],[187,8],[256,5]]},"377":{"position":[[255,5]]},"379":{"position":[[201,6],[290,5],[990,5],[1264,5]]},"381":{"position":[[201,5],[475,5]]},"389":{"position":[[48,5],[124,9],[186,9]]},"391":{"position":[[67,5],[143,6],[271,5],[368,5]]},"393":{"position":[[18,5],[1076,9],[1303,6]]},"395":{"position":[[26,5],[382,6],[500,5]]},"397":{"position":[[500,6],[1052,9]]},"399":{"position":[[149,6],[4104,5],[4259,5],[4304,5]]},"401":{"position":[[106,6],[2851,5],[3381,5],[3426,5]]},"403":{"position":[[1063,5],[1826,8],[2687,8],[3511,6],[5184,8],[8106,8],[9422,5],[9931,5],[10481,5],[10588,5]]},"405":{"position":[[166,6],[432,5],[677,5],[1120,6],[2465,5],[3944,5],[4081,6]]},"407":{"position":[[230,5],[307,5],[383,5],[438,6]]},"409":{"position":[[48,5],[222,8]]},"411":{"position":[[42,6],[179,5]]},"413":{"position":[[135,6]]},"415":{"position":[[20,5],[220,6],[277,5],[408,5],[914,5],[1009,5],[1084,5],[1182,5],[1291,6]]},"417":{"position":[[253,6],[260,5]]},"419":{"position":[[36,5],[108,5],[1671,5],[2027,5],[2229,5],[2276,5]]},"421":{"position":[[17,7],[357,5],[449,6]]},"423":{"position":[[9,5],[714,5],[1341,5]]},"425":{"position":[[465,6],[772,5],[1436,5],[1822,5],[2425,6],[2553,6],[2622,6],[2830,6],[3132,6],[3197,6],[3293,5],[3447,5]]},"427":{"position":[[32,6],[76,7],[120,6]]},"429":{"position":[[703,5],[908,5],[1039,5]]},"431":{"position":[[137,6],[217,6],[368,6],[503,6],[749,7],[785,5],[860,5],[923,7],[953,6],[998,5],[1210,6]]},"435":{"position":[[30,5]]},"437":{"position":[[190,5],[701,5],[2381,8],[2436,5],[2528,8],[2584,5],[2630,5],[2897,5],[3171,5]]},"439":{"position":[[24,5]]},"441":{"position":[[24,5],[70,5]]},"443":{"position":[[201,5],[475,5]]},"445":{"position":[[29,5]]},"447":{"position":[[184,5]]},"451":{"position":[[48,5],[73,9],[138,9],[200,9],[236,5]]},"453":{"position":[[347,5]]},"455":{"position":[[201,6],[337,5],[975,5],[1282,5],[1556,5]]},"457":{"position":[[48,5]]},"459":{"position":[[201,5],[475,5]]},"461":{"position":[[17,5],[258,5]]},"463":{"position":[[96,5],[240,8],[319,5]]},"465":{"position":[[90,5],[123,5]]},"471":{"position":[[55,5]]},"473":{"position":[[48,5],[84,8],[153,5],[207,8],[357,8]]},"477":{"position":[[201,6],[280,5],[744,5],[1051,5],[1325,5]]},"479":{"position":[[48,5]]},"481":{"position":[[201,5],[475,5]]},"489":{"position":[[48,5],[68,9],[130,9],[217,8],[249,5]]},"491":{"position":[[36,5],[64,5],[109,5],[594,5]]},"493":{"position":[[201,6],[301,5],[834,5],[1141,5],[1415,5]]},"495":{"position":[[48,5]]},"497":{"position":[[201,5],[475,5]]},"499":{"position":[[14,8],[405,5]]},"501":{"position":[[159,6],[279,5]]},"503":{"position":[[256,6],[751,5]]},"507":{"position":[[48,5],[81,8],[198,8],[302,8]]},"511":{"position":[[201,6],[295,5],[722,5],[1029,5],[1303,5]]},"513":{"position":[[48,5]]},"515":{"position":[[201,5],[475,5]]},"517":{"position":[[324,5]]},"519":{"position":[[55,6],[158,6],[174,5]]},"527":{"position":[[147,8],[271,8]]},"531":{"position":[[201,5],[259,5],[675,5],[982,5],[1256,5]]},"533":{"position":[[48,5]]},"535":{"position":[[201,5],[475,5]]},"537":{"position":[[16,6]]},"539":{"position":[[15,8],[57,5],[84,5],[919,6]]},"541":{"position":[[10,6]]},"549":{"position":[[48,5],[85,8],[197,8],[249,8],[325,8]]},"553":{"position":[[201,6],[363,5],[1146,5],[1453,5],[1727,5]]},"555":{"position":[[48,5]]},"557":{"position":[[201,5],[475,5]]},"571":{"position":[[164,5],[258,6]]},"583":{"position":[[5836,5]]},"585":{"position":[[779,6]]},"591":{"position":[[34,5],[251,5]]},"593":{"position":[[263,5],[570,5],[844,5]]},"595":{"position":[[48,5]]},"597":{"position":[[201,5],[475,5]]},"601":{"position":[[254,5],[1155,5]]},"605":{"position":[[36,5],[65,5],[24779,5],[30217,5],[30506,5]]},"607":{"position":[[126,5],[699,6]]},"609":{"position":[[144,8],[188,8],[307,8],[391,8]]},"611":{"position":[[34,5],[354,6]]},"613":{"position":[[169,5],[315,5],[890,8],[1226,5],[1500,5]]},"617":{"position":[[201,5],[475,5]]},"620":{"position":[[148,5]]},"624":{"position":[[5329,5]]},"628":{"position":[[30,5],[85,5]]},"632":{"position":[[35,5]]},"636":{"position":[[98,8],[143,5],[183,8],[232,5],[275,8],[309,5]]},"638":{"position":[[104,6],[197,6],[288,6]]},"640":{"position":[[274,5],[548,5]]},"642":{"position":[[63,6],[78,6],[247,6],[263,5],[828,5],[877,5]]},"644":{"position":[[68,6],[100,5],[265,5]]},"646":{"position":[[41,6]]},"650":{"position":[[77,5],[125,5]]},"654":{"position":[[278,8]]},"658":{"position":[[75,5],[602,8],[784,8],[840,5]]},"660":{"position":[[122,5],[858,6],[874,5]]},"664":{"position":[[309,5]]},"666":{"position":[[23,5]]},"668":{"position":[[25,6],[2551,5]]},"672":{"position":[[35,5],[74,5]]},"674":{"position":[[70,8],[119,5]]},"676":{"position":[[30,5],[108,5],[194,8]]},"678":{"position":[[324,5],[412,8],[496,5]]},"682":{"position":[[50,5],[172,6]]},"686":{"position":[[63,5]]},"690":{"position":[[611,5],[651,5]]},"694":{"position":[[298,5],[542,7],[1139,5],[1158,5]]},"696":{"position":[[759,5],[783,5],[15394,5]]},"698":{"position":[[154,6],[639,5]]},"700":{"position":[[168,5]]},"702":{"position":[[143,6],[354,5]]},"704":{"position":[[30,5],[289,8],[327,5],[547,8]]},"706":{"position":[[324,5],[412,8],[496,5]]},"710":{"position":[[291,5],[363,6],[627,5],[687,8]]},"714":{"position":[[63,5]]},"716":{"position":[[870,6],[1005,5]]},"718":{"position":[[81,5],[561,6],[577,5]]},"720":{"position":[[5574,6],[5622,6],[5776,5]]},"722":{"position":[[17,7],[104,5],[1463,5],[3024,5],[4449,5],[4468,5]]},"724":{"position":[[84,5],[295,5],[439,5]]},"726":{"position":[[140,5],[189,5]]},"728":{"position":[[310,8]]},"732":{"position":[[75,5],[604,8],[786,8],[842,5]]},"734":{"position":[[122,5],[516,5],[531,5]]},"738":{"position":[[335,5]]},"740":{"position":[[23,5]]},"742":{"position":[[25,6],[89,6],[4298,5]]},"746":{"position":[[35,5],[74,5]]},"748":{"position":[[57,8],[202,5],[226,5]]},"750":{"position":[[189,8],[238,5]]},"752":{"position":[[30,5],[118,5],[246,5]]},"754":{"position":[[261,8]]},"758":{"position":[[117,5],[237,6],[665,5],[725,8]]},"760":{"position":[[9,5]]},"762":{"position":[[63,5]]},"765":{"position":[[125,6],[612,5]]},"767":{"position":[[24226,5]]},"769":{"position":[[6208,5],[6499,5],[6571,5],[7489,8],[18119,8],[18169,7],[21469,5],[21508,5],[27966,5],[28644,5],[35447,6],[37562,5],[37599,5]]},"771":{"position":[[34,5],[172,5],[231,5],[594,6],[750,5]]},"773":{"position":[[30,5],[69,5],[290,8],[430,8],[550,8],[973,5]]},"775":{"position":[[261,8],[345,5],[430,8]]},"779":{"position":[[122,5],[194,6],[243,5],[304,8]]},"781":{"position":[[20,5]]},"786":{"position":[[275,6],[291,5],[1255,5],[27183,5],[27233,5],[29014,5]]},"788":{"position":[[334,6],[350,5],[783,5]]},"792":{"position":[[324,5],[898,5],[1243,5],[14113,8],[20610,5],[20642,5]]},"796":{"position":[[65,5],[172,8],[323,5],[440,8],[983,8],[1055,5]]},"798":{"position":[[261,8],[345,5],[430,8],[723,8]]},"802":{"position":[[160,5],[232,6],[281,5],[348,8]]},"804":{"position":[[26,5]]},"809":{"position":[[95,5],[360,6],[376,5],[27215,5],[27265,5],[28526,5]]},"811":{"position":[[310,6],[341,5],[407,5]]},"813":{"position":[[481,5],[13546,8],[14763,5],[14795,5]]},"815":{"position":[[474,5],[552,5]]}}}],["model(",{"_index":1015,"t":{"146":{"position":[[117,8]]}}}],["modeljson",{"_index":635,"t":{"80":{"position":[[4404,9]]}}}],["modifi",{"_index":1393,"t":{"312":{"position":[[10588,6],[10677,6]]},"316":{"position":[[151,9]]},"318":{"position":[[250,8],[5585,8]]},"453":{"position":[[528,6]]},"503":{"position":[[708,6]]},"620":{"position":[[75,6]]},"722":{"position":[[3037,8]]},"742":{"position":[[750,6]]},"769":{"position":[[28519,6]]}}}],["modul",{"_index":833,"t":{"102":{"position":[[333,6],[1262,6]]}}}],["module.export",{"_index":728,"t":{"96":{"position":[[284,14],[850,14]]},"98":{"position":[[255,14],[975,14],[1679,14]]}}}],["more",{"_index":37,"t":{"4":{"position":[[348,4]]},"6":{"position":[[419,4]]},"10":{"position":[[484,4]]},"14":{"position":[[373,4]]},"16":{"position":[[1502,4],[3321,4],[3507,4],[4448,4],[5164,4],[7472,4],[9432,4],[12517,4],[13331,4],[14541,4],[18129,4],[18943,4],[20153,4],[22910,4],[23901,4],[24720,4],[25931,4],[28742,4],[29330,4],[30255,4]]},"22":{"position":[[50,4]]},"50":{"position":[[33,4],[139,4],[218,4]]},"52":{"position":[[691,4]]},"56":{"position":[[2501,4]]},"58":{"position":[[2101,4]]},"60":{"position":[[3430,4]]},"62":{"position":[[1490,4]]},"64":{"position":[[1871,4]]},"66":{"position":[[1045,4]]},"68":{"position":[[2711,4]]},"70":{"position":[[33,4],[157,4],[268,4],[334,4]]},"80":{"position":[[965,4],[2104,4],[3841,4]]},"82":{"position":[[42,4],[183,4],[291,4]]},"100":{"position":[[155,4],[248,4],[306,4]]},"104":{"position":[[126,4],[218,4],[298,4],[382,4]]},"112":{"position":[[238,4],[738,4],[1533,4]]},"116":{"position":[[41,4],[173,4]]},"124":{"position":[[238,4],[738,4],[1533,4]]},"128":{"position":[[41,4],[187,4]]},"134":{"position":[[33,4],[202,4],[286,4],[353,4]]},"162":{"position":[[33,4],[159,4]]},"164":{"position":[[175,4]]},"182":{"position":[[33,4],[195,4],[262,4]]},"190":{"position":[[238,4],[738,4],[1533,4]]},"196":{"position":[[33,4],[161,4],[260,4],[357,4]]},"204":{"position":[[1053,4]]},"206":{"position":[[88,4]]},"213":{"position":[[351,4],[1119,4],[2419,4]]},"215":{"position":[[361,4],[1172,4],[2379,4],[5526,4],[6339,4],[7548,4]]},"217":{"position":[[33,4],[125,4],[195,4]]},"221":{"position":[[1666,4],[2473,4],[3676,4],[6729,4],[7534,4],[8871,4],[12069,4],[12880,4],[14087,4],[17092,4],[17905,4],[19114,4],[21971,4],[22065,4]]},"223":{"position":[[88,4]]},"225":{"position":[[64,4]]},"230":{"position":[[613,4],[1381,4],[2680,4]]},"232":{"position":[[404,4],[1216,4],[2424,4]]},"234":{"position":[[33,4],[125,4],[187,4]]},"238":{"position":[[772,4]]},"240":{"position":[[129,4]]},"245":{"position":[[661,4],[1462,4],[2659,4]]},"247":{"position":[[372,4],[1136,4],[2431,4],[5433,4],[6235,4],[7433,4]]},"249":{"position":[[33,4],[142,4],[219,4],[312,4]]},"257":{"position":[[214,4],[714,4],[1509,4]]},"259":{"position":[[2522,4]]},"263":{"position":[[90,4]]},"273":{"position":[[2370,5],[3337,4],[3567,4]]},"279":{"position":[[1277,4],[1372,4]]},"281":{"position":[[129,4]]},"283":{"position":[[64,4]]},"288":{"position":[[458,4],[1217,4],[2508,4],[5362,4],[6123,4],[7415,4],[10540,4],[11485,4],[13053,4]]},"292":{"position":[[33,4],[151,4],[225,4]]},"306":{"position":[[1682,4]]},"308":{"position":[[88,4]]},"312":{"position":[[500,4],[1312,4],[2520,4],[5530,4],[6341,4],[7548,4]]},"318":{"position":[[619,4],[1446,4],[2805,4],[6104,4],[6916,4],[8124,4],[11338,4],[12150,4],[13358,4]]},"320":{"position":[[33,4],[140,4],[212,4],[264,4]]},"328":{"position":[[1185,4]]},"330":{"position":[[88,4]]},"338":{"position":[[534,4],[1353,4],[2568,4]]},"340":{"position":[[33,4],[182,4],[281,4]]},"345":{"position":[[1478,4],[2287,4],[3492,4]]},"351":{"position":[[31,4],[105,4],[168,4]]},"355":{"position":[[1194,4],[1376,4]]},"359":{"position":[[88,4]]},"361":{"position":[[134,4]]},"369":{"position":[[482,4],[1415,4],[2936,4],[6418,4],[7232,4],[8442,4]]},"371":{"position":[[384,4],[1427,4],[3058,4]]},"373":{"position":[[330,4],[1144,4],[2354,4]]},"375":{"position":[[33,4],[182,4],[305,4]]},"385":{"position":[[413,4],[1193,4],[2505,4]]},"387":{"position":[[434,4],[1253,4],[2468,4],[5684,4],[6504,4],[7720,4]]},"389":{"position":[[33,4],[119,4],[196,4],[268,4]]},"393":{"position":[[1015,4],[1107,4]]},"397":{"position":[[320,4]]},"403":{"position":[[1785,4],[2646,5],[3972,4],[5165,4],[6863,4],[8067,4]]},"409":{"position":[[33,4],[119,4],[191,4],[257,4]]},"415":{"position":[[308,4]]},"419":{"position":[[2033,4],[3903,4]]},"425":{"position":[[501,4]]},"433":{"position":[[34,4],[123,4],[226,4]]},"437":{"position":[[2521,4],[2671,4]]},"439":{"position":[[109,4]]},"441":{"position":[[111,4]]},"445":{"position":[[500,4],[1315,4],[2526,4],[5551,4],[6365,4],[7575,4]]},"449":{"position":[[460,4],[1276,4],[2488,4],[5675,4],[6491,4],[7703,4]]},"451":{"position":[[33,4],[133,4],[195,4],[257,4]]},"455":{"position":[[1056,4]]},"457":{"position":[[129,4]]},"467":{"position":[[388,4],[1154,4],[2452,4]]},"469":{"position":[[390,4],[1236,4],[2614,4]]},"471":{"position":[[507,4],[1326,4],[2541,4],[6265,5]]},"473":{"position":[[33,4],[202,4],[352,4],[449,4]]},"477":{"position":[[825,4]]},"479":{"position":[[129,4]]},"485":{"position":[[574,4],[1392,4],[2742,4]]},"487":{"position":[[639,4],[1454,4],[2665,4]]},"489":{"position":[[33,4],[140,4],[212,4],[268,4]]},"491":{"position":[[212,4],[1103,4]]},"493":{"position":[[915,4]]},"495":{"position":[[129,4]]},"499":{"position":[[146,4]]},"505":{"position":[[622,4],[1525,4],[3016,4],[6370,4],[7182,4],[8390,4],[11785,4],[12597,4],[13805,4],[16891,4],[17705,4],[18915,4],[21935,4],[22748,4],[23957,4]]},"507":{"position":[[33,4],[193,4],[297,4],[396,4]]},"511":{"position":[[803,4]]},"513":{"position":[[129,4]]},"521":{"position":[[397,4],[1165,4],[2465,4]]},"523":{"position":[[730,4],[1575,4],[2952,4]]},"525":{"position":[[567,4],[1388,4],[2605,4]]},"527":{"position":[[33,4],[142,4],[266,4],[348,4]]},"531":{"position":[[756,4]]},"533":{"position":[[129,4]]},"537":{"position":[[476,4],[1295,4],[2702,4]]},"541":{"position":[[483,4],[1298,4],[2701,4]]},"543":{"position":[[494,4],[1261,4],[2560,4]]},"545":{"position":[[340,4],[1140,4],[2336,4],[5286,4],[6086,4],[7282,4]]},"547":{"position":[[377,4],[1137,4],[2428,4],[5275,4],[6076,4],[7273,4]]},"549":{"position":[[33,4],[192,4],[320,4],[387,4]]},"553":{"position":[[1227,4]]},"555":{"position":[[129,4]]},"562":{"position":[[499,4],[1309,4],[2515,4]]},"569":{"position":[[749,4],[1609,4],[2905,4],[6321,4],[7162,4],[8420,4],[11737,4],[12588,4],[13856,4]]},"571":{"position":[[952,4],[1694,4],[2872,4]]},"576":{"position":[[490,4],[1339,4],[2639,4],[5824,4],[6673,4],[7973,4]]},"583":{"position":[[129,4],[411,4],[1337,4],[2717,4]]},"585":{"position":[[221,4]]},"589":{"position":[[38,4],[149,4],[215,4],[285,4],[365,4]]},"593":{"position":[[344,4]]},"595":{"position":[[129,4]]},"605":{"position":[[1627,4],[2438,4],[3645,4],[7220,4],[8031,4],[9238,4],[13462,4],[14276,4],[15486,4],[19717,4],[20528,4],[21735,4],[25374,4],[26186,4],[27394,4]]},"607":{"position":[[1472,4],[2284,4],[3492,4],[7141,4],[7956,4],[9167,4],[12902,4],[13715,4],[14924,4],[18644,4],[19457,4],[20666,4]]},"609":{"position":[[33,4],[302,4],[386,4],[519,4]]},"613":{"position":[[1000,4]]},"615":{"position":[[88,4]]},"622":{"position":[[626,4],[1510,4],[2926,4]]},"624":{"position":[[441,4],[1263,4],[2481,4]]},"626":{"position":[[33,4]]},"630":{"position":[[351,4],[1334,4],[2905,4]]},"632":{"position":[[370,4],[1184,4],[2394,4]]},"634":{"position":[[351,4],[1191,4],[2562,4],[5740,4],[6555,4],[7766,4],[10790,4],[11608,4],[12822,4]]},"636":{"position":[[33,4],[178,4],[270,4],[328,4]]},"644":{"position":[[1132,4],[1945,4],[3154,4],[6169,4],[6981,4],[8189,4]]},"646":{"position":[[441,4],[1260,4],[2611,4],[5633,4],[6449,4],[7661,4]]},"648":{"position":[[416,4],[1327,4],[2603,4],[6075,4],[6919,4],[8351,4],[11523,4],[12369,4],[13802,4],[17086,4],[17899,4],[19108,4],[22168,4],[22979,4],[24186,4]]},"652":{"position":[[34,4],[146,4],[245,4],[348,4]]},"658":{"position":[[777,4],[936,4]]},"666":{"position":[[3999,4]]},"668":{"position":[[5061,4],[5897,4],[7265,4]]},"670":{"position":[[1393,4],[2258,4],[3654,4]]},"674":{"position":[[33,4],[214,4],[337,4],[417,4]]},"678":{"position":[[405,4],[574,4],[873,4],[1153,4]]},"692":{"position":[[768,4],[1542,4],[2848,4],[5724,4],[6502,4],[7812,4],[10712,4],[11633,4],[13198,4],[17003,4],[17816,4],[19025,4],[22121,4],[22932,4],[24139,4]]},"694":{"position":[[3186,4],[4160,4],[5834,4],[9614,4],[10430,4],[11642,4]]},"696":{"position":[[3089,4],[3951,4],[5401,4],[8782,4],[9839,4],[11596,4],[15881,4],[16691,4],[17897,4]]},"698":{"position":[[3284,4],[4208,4],[5776,4],[9590,4],[10405,4],[11616,4]]},"700":{"position":[[204,4],[242,4]]},"704":{"position":[[314,5],[513,4],[585,5]]},"706":{"position":[[405,4],[574,4]]},"714":{"position":[[408,4]]},"718":{"position":[[2325,4],[3158,4],[4523,4],[7604,4],[8423,4],[9638,4],[12751,4],[13584,4],[14949,4],[17987,4],[18806,4],[20021,4],[23143,4],[23969,4],[25191,4],[28710,4],[29793,4],[31520,4],[35557,4],[36376,4],[37591,4]]},"720":{"position":[[386,4],[1200,4],[2410,4],[7086,4],[7899,4],[9108,4]]},"722":{"position":[[7130,4],[8128,4],[9770,4],[13726,4],[14628,4],[16062,4],[19463,4],[20409,4],[21943,4],[25488,4],[26349,4],[27798,4],[31141,4],[31945,4],[33281,4],[36306,4],[37093,4],[38412,4],[41502,4],[42313,4],[43520,4],[46594,4],[47420,4],[48642,4]]},"724":{"position":[[598,4]]},"726":{"position":[[11,4],[195,4]]},"732":{"position":[[779,4],[938,4]]},"734":{"position":[[2859,4],[4153,4],[6147,4]]},"740":{"position":[[686,4],[1495,4],[2700,4],[5797,4],[6610,4],[7819,4],[10941,4],[11775,4],[13141,4],[16153,4],[16963,4],[18169,4]]},"742":{"position":[[4801,4],[5606,4],[6807,4],[10033,4],[11235,4],[13081,4],[17573,4],[18530,4],[20075,4],[23695,4],[24504,4],[25709,4]]},"744":{"position":[[1346,4],[2359,4],[3959,4],[8041,4],[9035,4],[10575,4],[14497,4],[15492,4],[17033,4]]},"746":{"position":[[3587,4],[6137,4],[9835,4]]},"750":{"position":[[33,4],[184,4],[333,4],[407,4]]},"754":{"position":[[436,4],[830,4]]},"767":{"position":[[455,4],[2068,4],[4493,4],[10411,4],[11564,4],[13361,4],[17592,4],[18675,4],[20402,4],[25250,4],[26062,4],[27270,4],[30429,4],[31242,4],[32451,4],[35465,4],[36281,4],[37493,4],[40523,4],[41340,4],[42553,4]]},"769":{"position":[[551,4],[1364,4],[2573,4],[7886,4],[8695,4],[9900,4],[13226,4],[14044,4],[15258,4],[22974,4],[23791,4],[25004,4],[30637,4],[31445,4],[32649,4],[39624,4],[40432,4],[41636,4]]},"773":{"position":[[315,4],[598,5]]},"775":{"position":[[423,4],[605,4]]},"786":{"position":[[2086,4],[2861,4],[4168,4],[7077,4],[7891,4],[9101,4],[12185,4],[12960,4],[14267,4],[17133,4],[17947,4],[19157,4],[22177,4],[22992,4],[24203,4],[29328,4],[30142,4],[31352,4],[34372,4],[35186,4],[36396,4]]},"788":{"position":[[2605,4],[3609,4],[5201,4],[9072,4],[9888,4],[11100,4]]},"790":{"position":[[556,4],[1355,4],[2686,4],[6080,4],[6911,4],[8274,4],[11275,4],[12089,4],[13299,4]]},"792":{"position":[[3199,4],[4058,4],[5505,4],[9254,4],[10072,4],[11286,4],[14054,4],[15806,4],[16603,4],[17932,4]]},"796":{"position":[[197,5],[488,5],[1010,5]]},"798":{"position":[[423,4],[605,4],[853,4]]},"809":{"position":[[2083,4],[2861,4],[4171,4],[7095,4],[7912,4],[9125,4],[12222,4],[12996,4],[14302,4],[17164,4],[17977,4],[19186,4],[22201,4],[23016,4],[24227,4],[28840,4],[29653,4],[30862,4],[33877,4],[34691,4],[35901,4]]},"811":{"position":[[2362,4],[3457,4],[5252,4],[9543,4],[10360,4],[11573,4]]},"813":{"position":[[2195,4],[3169,4],[4731,4],[8673,4],[9493,4],[10709,4],[13487,4]]},"815":{"position":[[3067,4],[4214,4],[6005,4],[10201,4],[11022,4],[12239,4],[15370,4],[16193,4],[17412,4],[20476,4],[21301,4],[22522,4],[25675,4],[26498,4],[27717,4],[30781,4],[31604,4],[32823,4]]},"817":{"position":[[42,4],[153,4]]}}}],["much",{"_index":1622,"t":{"405":{"position":[[954,4]]}}}],["multi",{"_index":2089,"t":{"660":{"position":[[134,5]]},"748":{"position":[[113,5]]}}}],["multipl",{"_index":577,"t":{"64":{"position":[[1913,8]]},"142":{"position":[[17,8]]},"144":{"position":[[384,8]]},"196":{"position":[[312,8]]},"200":{"position":[[527,8]]},"273":{"position":[[1482,8]]},"277":{"position":[[43,8],[118,8]]},"290":{"position":[[27,8]]},"296":{"position":[[818,8],[865,8],[1278,8]]},"435":{"position":[[57,8],[581,8]]},"455":{"position":[[1737,8]]},"459":{"position":[[656,8]]},"654":{"position":[[634,8]]},"658":{"position":[[793,8],[856,8]]},"660":{"position":[[269,8]]},"668":{"position":[[711,8]]},"674":{"position":[[84,8],[135,8]]},"712":{"position":[[214,8]]},"728":{"position":[[661,8]]},"732":{"position":[[795,8],[858,8]]},"750":{"position":[[203,8],[254,8]]},"758":{"position":[[51,8]]},"771":{"position":[[445,8]]}}}],["myprogram",{"_index":386,"t":{"16":{"position":[[14431,9],[20043,9],[25821,9]]},"80":{"position":[[3731,9]]},"86":{"position":[[1215,9]]},"112":{"position":[[1423,9]]},"124":{"position":[[1423,9]]},"170":{"position":[[1125,9]]},"172":{"position":[[1959,9]]},"190":{"position":[[1423,9]]},"213":{"position":[[2309,9]]},"215":{"position":[[2269,9],[7438,9]]},"221":{"position":[[3566,9],[8761,9],[13977,9],[19004,9]]},"230":{"position":[[2570,9]]},"232":{"position":[[2314,9]]},"245":{"position":[[2549,9]]},"247":{"position":[[2321,9],[7323,9]]},"257":{"position":[[1399,9]]},"288":{"position":[[2398,9],[7305,9],[12943,9]]},"312":{"position":[[2410,9],[7438,9]]},"318":{"position":[[2695,9],[8014,9],[13248,9]]},"338":{"position":[[2458,9]]},"345":{"position":[[3382,9]]},"369":{"position":[[2826,9],[8332,9]]},"371":{"position":[[2948,9]]},"373":{"position":[[2244,9]]},"385":{"position":[[2395,9]]},"387":{"position":[[2358,9],[7610,9]]},"445":{"position":[[2416,9],[7465,9]]},"449":{"position":[[2378,9],[7593,9]]},"467":{"position":[[2342,9]]},"469":{"position":[[2504,9]]},"471":{"position":[[2431,9]]},"485":{"position":[[2632,9]]},"487":{"position":[[2555,9]]},"505":{"position":[[2906,9],[8280,9],[13695,9],[18805,9],[23847,9]]},"521":{"position":[[2355,9]]},"523":{"position":[[2842,9]]},"525":{"position":[[2495,9]]},"537":{"position":[[2592,9]]},"541":{"position":[[2591,9]]},"543":{"position":[[2450,9]]},"545":{"position":[[2226,9],[7172,9]]},"547":{"position":[[2318,9],[7163,9]]},"562":{"position":[[2405,9]]},"569":{"position":[[2795,9],[8310,9],[13746,9]]},"571":{"position":[[2762,9]]},"576":{"position":[[2529,9],[7863,9]]},"583":{"position":[[2607,9]]},"605":{"position":[[3535,9],[9128,9],[15376,9],[21625,9],[27284,9]]},"607":{"position":[[3382,9],[9057,9],[14814,9],[20556,9]]},"622":{"position":[[2816,9]]},"624":{"position":[[2371,9]]},"630":{"position":[[2795,9]]},"632":{"position":[[2284,9]]},"634":{"position":[[2452,9],[7656,9],[12712,9]]},"644":{"position":[[3044,9],[8079,9]]},"646":{"position":[[2501,9],[7551,9]]},"648":{"position":[[2493,9],[8241,9],[13692,9],[18998,9],[24076,9]]},"668":{"position":[[7155,9]]},"670":{"position":[[3544,9]]},"692":{"position":[[2738,9],[7702,9],[13088,9],[18915,9],[24029,9]]},"694":{"position":[[5724,9],[11532,9]]},"696":{"position":[[5291,9],[11486,9],[17787,9]]},"698":{"position":[[5666,9],[11506,9]]},"718":{"position":[[4413,9],[9528,9],[14839,9],[19911,9],[25081,9],[31410,9],[37481,9]]},"720":{"position":[[2300,9],[8998,9]]},"722":{"position":[[9660,9],[15952,9],[21833,9],[27688,9],[33171,9],[38302,9],[43410,9],[48532,9]]},"734":{"position":[[6037,9]]},"740":{"position":[[2590,9],[7709,9],[13031,9],[18059,9]]},"742":{"position":[[6697,9],[12971,9],[19965,9],[25599,9]]},"744":{"position":[[3849,9],[10465,9],[16923,9]]},"746":{"position":[[9725,9]]},"767":{"position":[[4383,9],[13251,9],[20292,9],[27160,9],[32341,9],[37383,9],[42443,9]]},"769":{"position":[[2463,9],[9790,9],[15148,9],[24894,9],[32539,9],[41526,9]]},"786":{"position":[[4058,9],[8991,9],[14157,9],[19047,9],[24093,9],[31242,9],[36286,9]]},"788":{"position":[[5091,9],[10990,9]]},"790":{"position":[[2576,9],[8164,9],[13189,9]]},"792":{"position":[[5395,9],[11176,9],[17822,9]]},"809":{"position":[[4061,9],[9015,9],[14192,9],[19076,9],[24117,9],[30752,9],[35791,9]]},"811":{"position":[[5142,9],[11463,9]]},"813":{"position":[[4621,9],[10599,9]]},"815":{"position":[[5895,9],[12129,9],[17302,9],[22412,9],[27607,9],[32713,9]]}}}],["mysql",{"_index":920,"t":{"142":{"position":[[280,5],[292,5],[324,5],[2904,6],[2922,5],[3011,5],[3386,5],[3447,5],[3555,5],[3862,5],[4087,5],[4279,6],[4317,5],[4586,6],[5397,5]]}}}],["mysql:8",{"_index":970,"t":{"142":{"position":[[3527,7],[4293,7]]}}}],["mysql_database=openfga",{"_index":969,"t":{"142":{"position":[[3504,22],[4408,22]]}}}],["mysql_root_password=secret",{"_index":968,"t":{"142":{"position":[[3474,26],[4379,26]]}}}],["mysqladmin",{"_index":974,"t":{"142":{"position":[[4458,13]]}}}],["n",{"_index":1413,"t":{"326":{"position":[[511,1]]}}}],["name",{"_index":592,"t":{"68":{"position":[[403,5],[426,5],[453,5],[577,5]]},"86":{"position":[[425,5],[996,5],[1696,4],[2196,4],[2459,9]]},"96":{"position":[[2465,4]]},"98":{"position":[[103,4],[3744,4],[3894,4],[3984,4],[4037,5],[4281,4],[4308,4]]},"142":{"position":[[749,4],[1309,4],[1561,6],[3442,4],[3976,4],[4208,6]]},"144":{"position":[[1432,4],[2951,4]]},"152":{"position":[[525,4]]},"176":{"position":[[276,5]]},"263":{"position":[[397,6]]},"318":{"position":[[16383,5]]},"338":{"position":[[5500,5]]},"387":{"position":[[10665,5]]},"403":{"position":[[577,5],[754,5],[825,6],[5520,5],[5591,6]]},"467":{"position":[[5144,5]]},"477":{"position":[[1744,5]]},"505":{"position":[[27257,5]]},"525":{"position":[[5736,5]]},"624":{"position":[[5848,5]]},"650":{"position":[[484,5]]},"686":{"position":[[601,5]]},"714":{"position":[[1052,5]]},"767":{"position":[[24374,5]]}}}],["namespac",{"_index":384,"t":{"16":{"position":[[14403,9],[20015,9],[25793,9]]},"80":{"position":[[3703,9]]},"86":{"position":[[1187,9]]},"112":{"position":[[1395,9]]},"124":{"position":[[1395,9]]},"170":{"position":[[1097,9]]},"172":{"position":[[1931,9]]},"190":{"position":[[1395,9]]},"213":{"position":[[2281,9]]},"215":{"position":[[2241,9],[7410,9]]},"221":{"position":[[3538,9],[8733,9],[13949,9],[18976,9]]},"230":{"position":[[2542,9]]},"232":{"position":[[2286,9]]},"245":{"position":[[2521,9]]},"247":{"position":[[2293,9],[7295,9]]},"257":{"position":[[1371,9]]},"273":{"position":[[657,9]]},"288":{"position":[[2370,9],[7277,9],[12915,9]]},"312":{"position":[[2382,9],[7410,9]]},"318":{"position":[[2667,9],[7986,9],[13220,9]]},"338":{"position":[[2430,9]]},"345":{"position":[[3354,9]]},"369":{"position":[[2798,9],[8304,9]]},"371":{"position":[[2920,9]]},"373":{"position":[[2216,9]]},"385":{"position":[[2367,9]]},"387":{"position":[[2330,9],[7582,9]]},"445":{"position":[[2388,9],[7437,9]]},"449":{"position":[[2350,9],[7565,9]]},"467":{"position":[[2314,9]]},"469":{"position":[[2476,9]]},"471":{"position":[[2403,9]]},"485":{"position":[[2604,9]]},"487":{"position":[[2527,9]]},"505":{"position":[[2878,9],[8252,9],[13667,9],[18777,9],[23819,9]]},"521":{"position":[[2327,9]]},"523":{"position":[[2814,9]]},"525":{"position":[[2467,9]]},"537":{"position":[[2564,9]]},"541":{"position":[[2563,9]]},"543":{"position":[[2422,9]]},"545":{"position":[[2198,9],[7144,9]]},"547":{"position":[[2290,9],[7135,9]]},"562":{"position":[[2377,9]]},"569":{"position":[[2767,9],[8282,9],[13718,9]]},"571":{"position":[[2734,9]]},"576":{"position":[[2501,9],[7835,9]]},"583":{"position":[[2579,9]]},"605":{"position":[[3507,9],[9100,9],[15348,9],[21597,9],[27256,9]]},"607":{"position":[[3354,9],[9029,9],[14786,9],[20528,9]]},"622":{"position":[[2788,9]]},"624":{"position":[[2343,9]]},"630":{"position":[[2767,9]]},"632":{"position":[[2256,9]]},"634":{"position":[[2424,9],[7628,9],[12684,9]]},"644":{"position":[[3016,9],[8051,9]]},"646":{"position":[[2473,9],[7523,9]]},"648":{"position":[[2465,9],[8213,9],[13664,9],[18970,9],[24048,9]]},"668":{"position":[[7127,9]]},"670":{"position":[[3516,9]]},"692":{"position":[[2710,9],[7674,9],[13060,9],[18887,9],[24001,9]]},"694":{"position":[[5696,9],[11504,9]]},"696":{"position":[[5263,9],[11458,9],[17759,9]]},"698":{"position":[[5638,9],[11478,9]]},"718":{"position":[[4385,9],[9500,9],[14811,9],[19883,9],[25053,9],[31382,9],[37453,9]]},"720":{"position":[[2272,9],[8970,9]]},"722":{"position":[[9632,9],[15924,9],[21805,9],[27660,9],[33143,9],[38274,9],[43382,9],[48504,9]]},"734":{"position":[[6009,9]]},"740":{"position":[[2562,9],[7681,9],[13003,9],[18031,9]]},"742":{"position":[[6669,9],[12943,9],[19937,9],[25571,9]]},"744":{"position":[[3821,9],[10437,9],[16895,9]]},"746":{"position":[[9697,9]]},"767":{"position":[[4355,9],[13223,9],[20264,9],[27132,9],[32313,9],[37355,9],[42415,9]]},"769":{"position":[[2435,9],[9762,9],[15120,9],[24866,9],[32511,9],[41498,9]]},"786":{"position":[[4030,9],[8963,9],[14129,9],[19019,9],[24065,9],[31214,9],[36258,9]]},"788":{"position":[[5063,9],[10962,9]]},"790":{"position":[[2548,9],[8136,9],[13161,9]]},"792":{"position":[[5367,9],[11148,9],[17794,9]]},"809":{"position":[[4033,9],[8987,9],[14164,9],[19048,9],[24089,9],[30724,9],[35763,9]]},"811":{"position":[[5114,9],[11435,9]]},"813":{"position":[[4593,9],[10571,9]]},"815":{"position":[[5867,9],[12101,9],[17274,9],[22384,9],[27579,9],[32685,9]]}}}],["narrow",{"_index":1330,"t":{"275":{"position":[[183,6],[311,6]]}}}],["navig",{"_index":608,"t":{"74":{"position":[[55,8],[141,8],[259,8],[345,8],[462,8],[570,8],[678,8],[801,8],[897,8],[1002,8],[1111,8]]},"142":{"position":[[2692,8],[5323,8]]},"166":{"position":[[124,8],[213,8]]},"200":{"position":[[94,8],[216,8],[333,8],[491,8],[624,8],[735,8],[811,8]]},"296":{"position":[[110,8],[215,8],[330,8],[460,8],[587,8],[691,8],[809,8],[918,8],[1004,8],[1174,8],[1311,8],[1428,8],[1546,8],[1641,8]]},"300":{"position":[[107,8],[217,8],[324,8],[433,8]]},"302":{"position":[[107,8]]},"324":{"position":[[121,8],[221,8],[357,8],[463,8]]},"413":{"position":[[85,8],[166,8]]}}}],["necessari",{"_index":2338,"t":{"722":{"position":[[41066,9]]},"726":{"position":[[283,9]]},"792":{"position":[[787,10]]}}}],["need",{"_index":105,"t":{"10":{"position":[[115,4]]},"16":{"position":[[3441,6],[3855,5],[13695,6],[14957,6],[15873,6],[16781,6],[19307,6],[20569,6],[21485,6],[22393,6],[25084,6],[26347,6],[27273,6],[28144,6]]},"24":{"position":[[55,6]]},"78":{"position":[[147,7],[433,7],[719,7],[1005,7],[1291,7]]},"80":{"position":[[2468,6],[4257,6],[5578,6],[6755,6]]},"84":{"position":[[76,4]]},"90":{"position":[[130,7],[494,7]]},"94":{"position":[[135,4],[1002,4]]},"96":{"position":[[69,4]]},"98":{"position":[[2612,6]]},"108":{"position":[[147,7],[470,7],[793,7],[1116,7],[1439,7]]},"112":{"position":[[39,4],[1102,6],[1949,6],[2517,6]]},"114":{"position":[[1443,6]]},"120":{"position":[[147,7],[470,7],[793,7],[1116,7],[1439,7]]},"124":{"position":[[39,4],[1102,6],[1949,6],[2517,6]]},"126":{"position":[[1457,6]]},"142":{"position":[[2516,6],[2559,6],[2612,6],[5147,6],[5190,6],[5243,6]]},"144":{"position":[[517,4],[1769,4],[1951,4]]},"148":{"position":[[111,6],[411,4]]},"158":{"position":[[602,4]]},"172":{"position":[[50,4],[837,6],[1436,6],[2385,6],[3300,6]]},"178":{"position":[[289,4]]},"186":{"position":[[147,7],[434,7],[721,7],[1008,7],[1295,7]]},"190":{"position":[[39,4],[1102,6],[1949,6],[2517,6]]},"192":{"position":[[1410,6]]},"194":{"position":[[1570,6]]},"204":{"position":[[915,4],[969,4]]},"206":{"position":[[4,4]]},"211":{"position":[[158,4]]},"213":{"position":[[1483,6],[2835,6],[3716,6],[4572,6]]},"215":{"position":[[1536,6],[2795,6],[3708,6],[4613,6],[6703,6],[7964,6],[8879,6],[9786,6]]},"219":{"position":[[544,4]]},"221":{"position":[[2837,6],[4092,6],[5001,6],[5902,6],[7898,6],[9287,6],[10205,6],[11097,6],[13244,6],[14503,6],[15416,6],[16321,6],[18269,6],[19530,6],[20445,6],[21352,6],[21887,4],[22005,4]]},"223":{"position":[[4,4]]},"225":{"position":[[4,4]]},"230":{"position":[[1745,6],[3096,6],[3976,6],[4831,6]]},"232":{"position":[[1580,6],[2840,6],[3754,6],[4660,6]]},"238":{"position":[[600,4],[647,4]]},"240":{"position":[[4,4]]},"245":{"position":[[1826,6],[3075,6],[3978,6],[4873,6]]},"247":{"position":[[1500,6],[2847,6],[3723,6],[4574,6],[6599,6],[7849,6],[8753,6],[9649,6]]},"253":{"position":[[147,7],[469,7],[791,7],[1078,7],[1365,7]]},"257":{"position":[[15,4],[1078,6],[1925,6],[2493,6]]},"259":{"position":[[689,6],[2272,6]]},"261":{"position":[[1716,6],[3148,6]]},"263":{"position":[[786,4]]},"273":{"position":[[1460,4]]},"279":{"position":[[1105,4],[1152,4],[1312,4]]},"281":{"position":[[4,4]]},"283":{"position":[[4,4]]},"288":{"position":[[9,4],[1581,6],[2924,6],[3796,6],[4643,6],[5068,4],[6487,6],[7831,6],[8704,6],[9552,6],[11849,6],[13469,6],[14557,6],[15603,6]]},"294":{"position":[[254,6]]},"304":{"position":[[263,4]]},"306":{"position":[[1544,4],[1598,4]]},"308":{"position":[[4,4]]},"312":{"position":[[1676,6],[2936,6],[3850,6],[4756,6],[6705,6],[7964,6],[8877,6],[9782,6],[10579,4]]},"314":{"position":[[67,4]]},"316":{"position":[[65,4]]},"318":{"position":[[1810,6],[3221,6],[4161,6],[5075,6],[7280,6],[8540,6],[9454,6],[10360,6],[12514,6],[13774,6],[14688,6],[15594,6]]},"328":{"position":[[1047,4],[1101,4]]},"330":{"position":[[4,4]]},"334":{"position":[[273,4]]},"338":{"position":[[1717,6],[2984,6],[3905,6],[4818,6]]},"345":{"position":[[2651,6],[3908,6],[4819,6],[5722,6]]},"355":{"position":[[1046,4],[1110,4],[1246,4]]},"359":{"position":[[4,4]]},"361":{"position":[[4,4]]},"365":{"position":[[1111,4]]},"369":{"position":[[1779,6],[3352,6],[4408,6],[5434,6],[7596,6],[8858,6],[9774,6],[10682,6]]},"371":{"position":[[42,4],[1791,6],[3474,6],[4640,6],[5776,6]]},"373":{"position":[[30,5],[1508,6],[2770,6],[3686,6],[4594,6]]},"379":{"position":[[743,4]]},"383":{"position":[[76,4]]},"385":{"position":[[1557,6],[2921,6],[3814,6],[4682,6]]},"387":{"position":[[1617,6],[2884,6],[3805,6],[4718,6],[6868,6],[8136,6],[9058,6],[9972,6]]},"393":{"position":[[1090,4]]},"399":{"position":[[3860,4]]},"403":{"position":[[1881,4],[6995,4],[8161,4],[8619,4],[9049,4]]},"415":{"position":[[473,4],[766,4]]},"419":{"position":[[85,4],[2241,5]]},"421":{"position":[[254,4]]},"423":{"position":[[1099,4],[3010,4],[3283,4]]},"425":{"position":[[557,4],[733,4],[1153,4],[1647,4],[1726,4],[1913,4],[2020,4],[2567,4],[2600,4],[2956,4]]},"429":{"position":[[3260,6]]},"437":{"position":[[2353,4],[2416,4],[2564,4]]},"439":{"position":[[4,4]]},"441":{"position":[[4,4]]},"445":{"position":[[1679,6],[2942,6],[3859,6],[4768,6],[6729,6],[7991,6],[8907,6],[9815,6],[10532,4]]},"449":{"position":[[38,4],[1640,6],[2904,6],[3822,6],[4732,6],[6855,6],[8119,6],[9037,6],[9947,6]]},"453":{"position":[[520,4]]},"455":{"position":[[884,4],[931,4]]},"457":{"position":[[4,4]]},"461":{"position":[[224,4],[549,4]]},"463":{"position":[[63,4]]},"467":{"position":[[39,4],[1518,6],[2868,6],[3747,6],[4601,6]]},"469":{"position":[[46,4],[1600,6],[3030,6],[3989,6],[4922,6]]},"471":{"position":[[1690,6],[2957,6],[3878,6],[4791,6]]},"477":{"position":[[653,4],[700,4]]},"479":{"position":[[4,4]]},"485":{"position":[[14,4],[1756,6],[3158,6],[4089,6],[4994,6]]},"487":{"position":[[1818,6],[3081,6],[3998,6],[4907,6]]},"493":{"position":[[743,4],[790,4]]},"495":{"position":[[4,4]]},"499":{"position":[[264,4]]},"505":{"position":[[1889,6],[3432,6],[4458,6],[5454,6],[7546,6],[8806,6],[9720,6],[10626,6],[12961,6],[14221,6],[15135,6],[16041,6],[18069,6],[19331,6],[20247,6],[21155,6],[23112,6],[24373,6],[25288,6],[26195,6]]},"511":{"position":[[631,4],[678,4]]},"513":{"position":[[4,4]]},"517":{"position":[[265,5]]},"519":{"position":[[3,4]]},"521":{"position":[[1529,6],[2881,6],[3762,6],[4618,6]]},"523":{"position":[[1939,6],[3368,6],[4326,6],[5258,6]]},"525":{"position":[[1752,6],[3021,6],[3944,6],[4859,6]]},"531":{"position":[[584,4],[631,4]]},"533":{"position":[[4,4]]},"537":{"position":[[1659,6],[3118,6],[4060,6],[4974,6]]},"541":{"position":[[1662,6],[3117,6],[4055,6],[4965,6]]},"543":{"position":[[141,4],[1625,6],[2976,6],[3856,6],[4711,6]]},"545":{"position":[[1504,6],[2752,6],[3654,6],[4548,6],[6450,6],[7698,6],[8600,6],[9494,6]]},"547":{"position":[[1501,6],[2844,6],[3716,6],[4563,6],[6440,6],[7689,6],[8592,6],[9487,6]]},"553":{"position":[[1055,4],[1102,4]]},"555":{"position":[[4,4]]},"562":{"position":[[27,4],[1673,6],[2931,6],[3843,6],[4747,6]]},"569":{"position":[[26,4],[1973,6],[3321,6],[4254,6],[5194,6],[7526,6],[8836,6],[9748,6],[10669,6],[12952,6],[14272,6],[15194,6],[16125,6]]},"571":{"position":[[2058,6],[3288,6],[4103,6],[4925,6]]},"574":{"position":[[219,4]]},"576":{"position":[[1703,6],[3055,6],[4013,6],[4900,6],[7037,6],[8389,6],[9347,6],[10234,6]]},"583":{"position":[[1701,6],[3133,6],[4189,6],[5189,6]]},"593":{"position":[[141,4],[219,4]]},"595":{"position":[[4,4]]},"605":{"position":[[2802,6],[4061,6],[4974,6],[5879,6],[8395,6],[9654,6],[10567,6],[11472,6],[14640,6],[15902,6],[16818,6],[17726,6],[20892,6],[22151,6],[23064,6],[23969,6],[26550,6],[27810,6],[28724,6],[29630,6]]},"607":{"position":[[2648,6],[3908,6],[4822,6],[5728,6],[8320,6],[9583,6],[10500,6],[11409,6],[14079,6],[15340,6],[16255,6],[17162,6],[19821,6],[21082,6],[21997,6],[22904,6]]},"613":{"position":[[862,4],[916,4]]},"615":{"position":[[4,4]]},"620":{"position":[[67,4]]},"622":{"position":[[1874,6],[3342,6],[4339,6],[5310,6]]},"624":{"position":[[1627,6],[2897,6],[3821,6],[4737,6],[5622,6]]},"630":{"position":[[37,4],[1698,6],[3321,6],[4427,6],[5503,6]]},"632":{"position":[[1548,6],[2810,6],[3726,6],[4634,6]]},"634":{"position":[[1555,6],[2978,6],[3930,6],[4856,6],[6919,6],[8182,6],[9099,6],[10008,6],[11972,6],[13238,6],[14158,6],[15070,6]]},"638":{"position":[[51,4]]},"644":{"position":[[2309,6],[3570,6],[4485,6],[5392,6],[7345,6],[8605,6],[9519,6],[10425,6]]},"646":{"position":[[1624,6],[3027,6],[3959,6],[4865,6],[6813,6],[8077,6],[8995,6],[9905,6]]},"648":{"position":[[1691,6],[3019,6],[3996,6],[4980,6],[7283,6],[8767,6],[9734,6],[10673,6],[12733,6],[14218,6],[15186,6],[16126,6],[18263,6],[19524,6],[20439,6],[21346,6],[23343,6],[24602,6],[25515,6],[26420,6]]},"658":{"position":[[576,4],[647,4],[820,4]]},"660":{"position":[[432,5],[8181,6]]},"664":{"position":[[163,4]]},"666":{"position":[[98,6],[1608,6],[3507,6],[5416,6],[7324,6],[9230,6],[11140,6]]},"668":{"position":[[2311,4],[4190,6],[4774,4],[6261,6],[7681,6],[8630,6],[9553,6],[11439,6]]},"670":{"position":[[2622,6],[4070,6],[5047,6],[5998,6],[8582,6],[11411,6]]},"672":{"position":[[7720,6]]},"678":{"position":[[280,4],[451,4],[690,4],[1043,4]]},"692":{"position":[[1906,6],[3264,6],[4151,6],[5013,6],[6866,6],[8228,6],[9119,6],[9985,6],[11997,6],[13614,6],[14668,6],[15691,6],[18180,6],[19441,6],[20356,6],[21263,6],[23296,6],[24555,6],[25468,6],[26373,6]]},"694":{"position":[[400,4],[4524,6],[6250,6],[7367,6],[8450,6],[10794,6],[12058,6],[12976,6],[13886,6]]},"696":{"position":[[4315,6],[5817,6],[6802,6],[7759,6],[8343,4],[10203,6],[12012,6],[13212,6],[14378,6],[17055,6],[18313,6],[19225,6],[20129,6]]},"698":{"position":[[4572,6],[6192,6],[7249,6],[8275,6],[10769,6],[12032,6],[12949,6],[13858,6]]},"700":{"position":[[279,4]]},"706":{"position":[[280,4],[451,4]]},"710":{"position":[[85,5]]},"712":{"position":[[432,5],[462,4]]},"718":{"position":[[518,4],[3522,6],[4939,6],[5885,6],[6805,6],[8787,6],[10054,6],[10975,6],[11888,6],[13948,6],[15365,6],[16311,6],[17231,6],[19170,6],[20437,6],[21358,6],[22271,6],[24333,6],[25607,6],[26535,6],[27455,6],[30157,6],[31936,6],[33152,6],[34334,6],[36740,6],[38007,6],[38928,6],[39841,6]]},"720":{"position":[[1564,6],[2826,6],[3742,6],[4650,6],[8263,6],[9524,6],[10439,6],[11346,6]]},"722":{"position":[[8492,6],[10186,6],[11317,6],[12417,6],[14992,6],[16478,6],[17493,6],[18482,6],[20773,6],[22359,6],[23428,6],[24468,6],[26713,6],[28214,6],[29198,6],[30154,6],[32309,6],[33697,6],[34614,6],[35506,6],[37457,6],[38828,6],[39728,6],[40603,6],[42677,6],[43936,6],[44849,6],[45754,6],[47784,6],[49058,6],[49986,6],[50906,6]]},"724":{"position":[[548,4]]},"732":{"position":[[578,4],[649,4],[822,4]]},"734":{"position":[[266,4],[4517,6],[6563,6],[8000,6],[9399,6]]},"740":{"position":[[98,6],[1859,6],[3116,6],[4027,6],[4930,6],[6974,6],[8235,6],[9150,6],[10057,6],[12139,6],[13557,6],[14504,6],[15425,6],[17327,6],[18585,6],[19497,6],[20401,6]]},"742":{"position":[[708,4],[2693,5],[4094,4],[5970,6],[7223,6],[8130,6],[9029,6],[9517,4],[11599,6],[13497,6],[14832,6],[16133,6],[17239,4],[18894,6],[20491,6],[21571,6],[22621,6],[24868,6],[26125,6],[27036,6],[27939,6]]},"744":{"position":[[917,4],[2723,6],[4375,6],[5510,6],[6615,6],[9399,6],[10991,6],[12122,6],[13236,6],[15856,6],[17449,6],[18581,6],[19696,6]]},"746":{"position":[[6501,6],[10251,6],[13024,6],[15727,6]]},"754":{"position":[[306,4],[647,4]]},"758":{"position":[[464,5],[540,5]]},"767":{"position":[[2432,6],[4909,6],[6685,6],[8415,6],[11928,6],[13777,6],[15063,6],[16315,6],[19039,6],[20818,6],[22034,6],[23216,6],[26426,6],[27686,6],[28600,6],[29506,6],[31606,6],[32867,6],[33782,6],[34689,6],[36645,6],[37909,6],[38827,6],[39737,6],[41704,6],[42969,6],[43888,6],[44799,6]]},"769":{"position":[[1728,6],[2989,6],[3904,6],[4811,6],[9059,6],[10316,6],[11227,6],[12130,6],[14408,6],[15674,6],[16594,6],[17506,6],[19927,5],[20855,5],[20967,5],[24155,6],[25420,6],[26339,6],[27250,6],[31809,6],[33065,6],[33975,6],[34877,6],[35859,4],[40796,6],[42052,6],[42962,6],[43864,6]]},"771":{"position":[[859,4]]},"775":{"position":[[300,4],[475,4]]},"786":{"position":[[232,4],[3225,6],[4584,6],[5472,6],[6335,6],[8255,6],[9517,6],[10433,6],[11341,6],[13324,6],[14683,6],[15571,6],[16434,6],[18311,6],[19573,6],[20489,6],[21397,6],[23356,6],[24619,6],[25536,6],[26445,6],[27192,4],[30506,6],[31768,6],[32684,6],[33592,6],[35550,6],[36812,6],[37728,6],[38636,6]]},"788":{"position":[[275,4],[3973,6],[5617,6],[6744,6],[7841,6],[10252,6],[11516,6],[12434,6],[13344,6]]},"790":{"position":[[1719,6],[3102,6],[4014,6],[4901,6],[7275,6],[8690,6],[9634,6],[10552,6],[12453,6],[13715,6],[14631,6],[15539,6]]},"792":{"position":[[428,4],[4422,6],[5921,6],[6903,6],[7857,6],[8874,4],[10436,6],[11702,6],[12622,6],[13534,6],[16967,6],[18348,6],[19258,6],[20143,6]]},"798":{"position":[[300,4],[475,4],[751,4]]},"809":{"position":[[317,4],[3225,6],[4587,6],[5478,6],[6344,6],[8276,6],[9541,6],[10460,6],[11371,6],[13360,6],[14718,6],[15605,6],[16467,6],[18341,6],[19602,6],[20517,6],[21424,6],[23380,6],[24643,6],[25560,6],[26469,6],[27224,4],[30017,6],[31278,6],[32193,6],[33100,6],[35055,6],[36317,6],[37233,6],[38141,6]]},"811":{"position":[[251,4],[3821,6],[5668,6],[6906,6],[8108,6],[10724,6],[11989,6],[12908,6],[13819,6]]},"813":{"position":[[345,4],[370,4],[3533,6],[5147,6],[6244,6],[7311,6],[8297,4],[9857,6],[11125,6],[12047,6],[12961,6]]},"815":{"position":[[455,4],[2753,4],[4578,6],[6421,6],[7701,6],[8947,6],[11386,6],[12655,6],[13578,6],[14493,6],[16557,6],[17828,6],[18753,6],[19670,6],[21665,6],[22938,6],[23865,6],[24784,6],[26862,6],[28133,6],[29058,6],[29975,6],[31968,6],[33239,6],[34164,6],[35081,6]]}}}],["neg",{"_index":1246,"t":{"247":{"position":[[5147,8]]},"427":{"position":[[661,10]]}}}],["nest",{"_index":1407,"t":{"324":{"position":[[170,6]]},"326":{"position":[[252,6]]},"403":{"position":[[2338,6]]},"678":{"position":[[518,6]]},"706":{"position":[[518,6]]},"775":{"position":[[367,6]]},"786":{"position":[[29033,6]]},"790":{"position":[[26,8]]},"798":{"position":[[367,6]]},"809":{"position":[[28545,6]]}}}],["net",{"_index":35,"t":{"4":{"position":[[331,4]]},"16":{"position":[[12261,4],[17873,4],[23645,4]]},"78":{"position":[[11,4]]},"80":{"position":[[720,4]]},"86":{"position":[[11,4]]},"102":{"position":[[61,4],[831,4]]},"104":{"position":[[231,4],[253,4],[289,4],[373,4]]},"108":{"position":[[11,4]]},"112":{"position":[[84,4]]},"114":{"position":[[90,4]]},"120":{"position":[[11,4]]},"124":{"position":[[84,4]]},"126":{"position":[[85,4]]},"170":{"position":[[80,4]]},"172":{"position":[[393,4]]},"186":{"position":[[11,4]]},"190":{"position":[[84,4]]},"192":{"position":[[72,4]]},"194":{"position":[[227,4]]},"213":{"position":[[95,4]]},"215":{"position":[[105,4],[5270,4]]},"221":{"position":[[1410,4],[6473,4],[11813,4],[16836,4]]},"230":{"position":[[357,4]]},"232":{"position":[[148,4]]},"245":{"position":[[405,4]]},"247":{"position":[[116,4],[5177,4]]},"253":{"position":[[11,4]]},"257":{"position":[[60,4]]},"259":{"position":[[75,4],[1228,4]]},"261":{"position":[[1058,4],[2060,4]]},"288":{"position":[[202,4],[5106,4],[10284,4]]},"312":{"position":[[244,4],[5274,4]]},"318":{"position":[[363,4],[5848,4],[11082,4]]},"338":{"position":[[278,4]]},"345":{"position":[[1222,4]]},"369":{"position":[[226,4],[6162,4]]},"371":{"position":[[128,4]]},"373":{"position":[[74,4]]},"385":{"position":[[157,4]]},"387":{"position":[[178,4],[5428,4]]},"429":{"position":[[1843,4]]},"445":{"position":[[244,4],[5295,4]]},"449":{"position":[[204,4],[5419,4]]},"467":{"position":[[132,4]]},"469":{"position":[[134,4]]},"471":{"position":[[251,4]]},"485":{"position":[[318,4]]},"487":{"position":[[383,4]]},"505":{"position":[[366,4],[6114,4],[11529,4],[16635,4],[21679,4]]},"521":{"position":[[141,4]]},"523":{"position":[[474,4]]},"525":{"position":[[311,4]]},"537":{"position":[[220,4]]},"541":{"position":[[227,4]]},"543":{"position":[[238,4]]},"545":{"position":[[84,4],[5030,4]]},"547":{"position":[[121,4],[5019,4]]},"562":{"position":[[243,4]]},"569":{"position":[[493,4],[6065,4],[11481,4]]},"571":{"position":[[696,4]]},"576":{"position":[[234,4],[5568,4]]},"583":{"position":[[155,4]]},"605":{"position":[[1371,4],[6964,4],[13206,4],[19461,4],[25118,4]]},"607":{"position":[[1216,4],[6885,4],[12646,4],[18388,4]]},"622":{"position":[[370,4]]},"624":{"position":[[185,4]]},"630":{"position":[[95,4]]},"632":{"position":[[114,4]]},"634":{"position":[[95,4],[5484,4],[10534,4]]},"644":{"position":[[876,4],[5913,4]]},"646":{"position":[[185,4],[5377,4]]},"648":{"position":[[160,4],[5819,4],[11267,4],[16830,4],[21912,4]]},"660":{"position":[[3169,4]]},"666":{"position":[[240,4],[2131,4],[4048,4],[5944,4],[7858,4],[9760,4]]},"668":{"position":[[2818,4],[4805,4],[10071,4]]},"670":{"position":[[1137,4],[6603,4],[9428,4]]},"672":{"position":[[2708,4]]},"692":{"position":[[512,4],[5468,4],[10456,4],[16747,4],[21865,4]]},"694":{"position":[[2930,4],[9358,4]]},"696":{"position":[[2833,4],[8526,4],[15625,4]]},"698":{"position":[[3028,4],[9334,4]]},"718":{"position":[[2069,4],[7348,4],[12495,4],[17731,4],[22887,4],[28454,4],[35301,4]]},"720":{"position":[[130,4],[6830,4]]},"722":{"position":[[6874,4],[13470,4],[19207,4],[25232,4],[30885,4],[36050,4],[41246,4],[46338,4]]},"734":{"position":[[2603,4]]},"740":{"position":[[430,4],[5541,4],[10685,4],[15897,4]]},"742":{"position":[[4545,4],[9777,4],[17317,4],[23439,4]]},"744":{"position":[[1090,4],[7785,4],[14241,4]]},"746":{"position":[[3331,4]]},"767":{"position":[[199,4],[10155,4],[17336,4],[24994,4],[30173,4],[35209,4],[40267,4]]},"769":{"position":[[295,4],[7630,4],[12970,4],[22718,4],[30381,4],[39368,4]]},"786":{"position":[[1830,4],[6821,4],[11929,4],[16877,4],[21921,4],[29072,4],[34116,4]]},"788":{"position":[[2349,4],[8816,4]]},"790":{"position":[[300,4],[5824,4],[11019,4]]},"792":{"position":[[2943,4],[8998,4],[15550,4]]},"809":{"position":[[1827,4],[6839,4],[11966,4],[16908,4],[21945,4],[28584,4],[33621,4]]},"811":{"position":[[2106,4],[9287,4]]},"813":{"position":[[1939,4],[8417,4]]},"815":{"position":[[2811,4],[9945,4],[15114,4],[20220,4],[25419,4],[30525,4]]}}}],["network",{"_index":923,"t":{"142":{"position":[[580,7],[661,7],[706,7],[916,8],[1603,9],[1686,9],[2161,9],[2487,9],[3335,8],[3351,7],[3399,7],[3599,8],[4250,9],[4323,9],[4812,9],[5118,9]]},"146":{"position":[[362,9]]},"734":{"position":[[378,7]]}}}],["network=openfga",{"_index":926,"t":{"142":{"position":[[765,15],[1114,15],[1324,15],[3455,15],[3801,15],[3991,15]]},"144":{"position":[[1447,15],[2966,15]]}}}],["never",{"_index":767,"t":{"96":{"position":[[1875,5]]},"98":{"position":[[3085,5]]}}}],["new",{"_index":93,"t":{"8":{"position":[[521,3]]},"16":{"position":[[12548,3],[14574,3],[15065,3],[15182,3],[18160,3],[20186,3],[20677,3],[20794,3],[23932,3],[25964,3],[26455,3],[26501,3]]},"58":{"position":[[1519,3],[1694,3],[1992,3]]},"60":{"position":[[2067,3],[2137,3],[2399,3],[2471,3]]},"80":{"position":[[996,3],[3874,3],[4365,3]]},"86":{"position":[[141,3],[1274,3],[1580,3]]},"96":{"position":[[2011,3]]},"98":{"position":[[1152,3],[1997,3],[3221,3]]},"112":{"position":[[269,3],[1566,3],[2057,3]]},"114":{"position":[[716,3]]},"124":{"position":[[269,3],[1566,3],[2057,3]]},"126":{"position":[[666,3]]},"142":{"position":[[576,3]]},"170":{"position":[[205,3],[1184,3],[1578,3]]},"172":{"position":[[556,3],[2018,3],[2488,3],[2554,3],[2671,3]]},"178":{"position":[[460,3]]},"190":{"position":[[269,3],[1566,3],[2057,3]]},"192":{"position":[[723,3],[760,5]]},"194":{"position":[[882,3],[919,5]]},"213":{"position":[[382,3],[2452,3],[2943,3],[3027,3],[3064,5]]},"215":{"position":[[392,3],[2412,3],[2903,3],[3020,3],[5557,3],[7581,3],[8072,3],[8189,3]]},"221":{"position":[[1697,3],[3709,3],[4200,3],[4317,3],[6760,3],[8904,3],[9395,3],[9479,3],[9555,5],[12100,3],[14120,3],[14611,3],[14728,3],[17123,3],[19147,3],[19638,3],[19755,3]]},"230":{"position":[[644,3],[2713,3],[3204,3],[3289,3],[3326,5]]},"232":{"position":[[435,3],[2457,3],[2948,3],[3065,3]]},"245":{"position":[[692,3],[2692,3],[3183,3],[3300,3]]},"247":{"position":[[403,3],[2464,3],[2955,3],[3040,3],[3077,5],[5464,3],[7466,3],[7957,3],[8074,3]]},"251":{"position":[[339,3]]},"257":{"position":[[245,3],[1542,3],[2033,3]]},"288":{"position":[[489,3],[2541,3],[3032,3],[3116,3],[3153,5],[5393,3],[7448,3],[7939,3],[8024,3],[8061,5],[10571,3],[13086,3],[13577,3],[13661,3],[13735,5],[13828,3],[13914,5]]},"312":{"position":[[531,3],[2553,3],[3044,3],[3161,3],[5561,3],[7581,3],[8072,3],[8189,3]]},"318":{"position":[[16,3],[650,3],[2838,3],[3329,3],[3413,3],[3504,5],[6135,3],[8157,3],[8648,3],[8765,3],[11369,3],[13391,3],[13882,3],[13999,3]]},"338":{"position":[[565,3],[2601,3],[3092,3],[3209,3]]},"345":{"position":[[1509,3],[3525,3],[4016,3],[4133,3]]},"349":{"position":[[1202,3]]},"367":{"position":[[94,3],[159,3]]},"369":{"position":[[513,3],[2969,3],[3460,3],[3544,3],[3624,5],[3750,5],[6449,3],[8475,3],[8966,3],[9083,3]]},"371":{"position":[[415,3],[3091,3],[3582,3],[3666,3],[3782,5],[3964,5]]},"373":{"position":[[361,3],[2387,3],[2878,3],[2995,3]]},"385":{"position":[[444,3],[2538,3],[3029,3],[3113,3],[3150,5]]},"387":{"position":[[465,3],[2501,3],[2992,3],[3109,3],[5715,3],[7753,3],[8244,3],[8361,3]]},"397":{"position":[[1728,3]]},"399":{"position":[[2609,3]]},"401":{"position":[[1100,3]]},"411":{"position":[[206,3]]},"415":{"position":[[130,3],[741,3],[1005,3],[1287,3]]},"417":{"position":[[156,3],[199,3]]},"425":{"position":[[1698,3],[1769,3],[2403,3],[2808,3]]},"427":{"position":[[28,3],[116,3]]},"429":{"position":[[809,3],[2539,3],[2576,5]]},"431":{"position":[[129,3],[209,3],[905,3],[935,3]]},"445":{"position":[[531,3],[2559,3],[3050,3],[3167,3],[5582,3],[7608,3],[8099,3],[8216,3]]},"449":{"position":[[491,3],[2521,3],[3012,3],[3129,3],[5706,3],[7736,3],[8227,3],[8344,3]]},"461":{"position":[[567,3],[648,3]]},"467":{"position":[[419,3],[2485,3],[2976,3],[3060,3],[3097,5]]},"469":{"position":[[421,3],[2647,3],[3138,3],[3222,3],[3321,5]]},"471":{"position":[[89,3],[538,3],[2574,3],[3065,3],[3182,3]]},"485":{"position":[[605,3],[2775,3],[3266,3],[3350,3],[3431,5]]},"487":{"position":[[670,3],[2698,3],[3189,3],[3306,3]]},"491":{"position":[[1289,3]]},"503":{"position":[[453,3]]},"505":{"position":[[653,3],[3049,3],[3540,3],[3624,3],[3697,5],[3808,5],[6401,3],[8423,3],[8914,3],[9031,3],[11816,3],[13838,3],[14329,3],[14446,3],[16922,3],[18948,3],[19439,3],[19556,3],[21966,3],[23990,3],[24481,3],[24598,3]]},"521":{"position":[[60,3],[428,3],[2498,3],[2989,3],[3073,3],[3110,5]]},"523":{"position":[[761,3],[2985,3],[3476,3],[3560,3],[3651,5]]},"525":{"position":[[598,3],[2638,3],[3129,3],[3246,3]]},"537":{"position":[[507,3],[2735,3],[3226,3],[3310,3],[3347,5],[3416,5],[5504,3],[5556,3]]},"539":{"position":[[943,3],[994,3]]},"541":{"position":[[514,3],[2734,3],[3225,3],[3309,3],[3346,5],[3413,5]]},"543":{"position":[[23,3],[525,3],[2593,3],[3084,3],[3168,3],[3205,5]]},"545":{"position":[[371,3],[2369,3],[2860,3],[2977,3],[5317,3],[7315,3],[7806,3],[7923,3]]},"547":{"position":[[408,3],[2461,3],[2952,3],[3037,3],[3074,5],[5306,3],[7306,3],[7797,3],[7914,3]]},"562":{"position":[[530,3],[2548,3],[3039,3],[3156,3]]},"569":{"position":[[780,3],[2938,3],[3429,3],[6352,3],[8453,3],[8944,3],[11768,3],[13889,3],[14380,3]]},"571":{"position":[[983,3],[2905,3],[3396,3]]},"576":{"position":[[521,3],[2672,3],[3163,3],[3247,3],[5855,3],[8006,3],[8497,3],[8581,3]]},"583":{"position":[[442,3],[2750,3],[3241,3],[3287,3],[3443,3],[3483,3]]},"605":{"position":[[1658,3],[3678,3],[4169,3],[4286,3],[7251,3],[9271,3],[9762,3],[9879,3],[13493,3],[15519,3],[16010,3],[16127,3],[19748,3],[21768,3],[22259,3],[22376,3],[25405,3],[27427,3],[27918,3],[28035,3]]},"607":{"position":[[1503,3],[3525,3],[4016,3],[4133,3],[7172,3],[9200,3],[9691,3],[9808,3],[12933,3],[14957,3],[15448,3],[15565,3],[18675,3],[20699,3],[21190,3],[21307,3]]},"622":{"position":[[145,3],[657,3],[2959,3],[3450,3],[3534,3],[3672,5]]},"624":{"position":[[472,3],[2514,3],[3005,3],[3122,3]]},"630":{"position":[[382,3],[2938,3],[3429,3],[3513,3],[3602,5],[3755,5]]},"632":{"position":[[401,3],[2427,3],[2918,3],[3035,3]]},"634":{"position":[[382,3],[2595,3],[3086,3],[3171,3],[3258,5],[5771,3],[7799,3],[8290,3],[8407,3],[10821,3],[12855,3],[13346,3],[13463,3]]},"644":{"position":[[1163,3],[3187,3],[3678,3],[3795,3],[6200,3],[8222,3],[8713,3],[8830,3]]},"646":{"position":[[63,3],[94,3],[472,3],[2644,3],[3135,3],[3219,3],[3301,5],[5664,3],[7694,3],[8185,3],[8302,3]]},"648":{"position":[[52,3],[447,3],[2636,3],[3127,3],[5768,3],[6106,3],[8384,3],[8875,3],[8959,3],[8996,5],[9076,5],[11554,3],[13835,3],[14326,3],[14411,3],[14448,5],[14528,5],[17117,3],[19141,3],[19632,3],[19749,3],[22199,3],[24219,3],[24710,3],[24827,3]]},"650":{"position":[[471,3]]},"660":{"position":[[5783,3],[5875,5],[6017,5],[6159,5],[6301,5],[6443,5],[6563,5],[6683,5]]},"666":{"position":[[879,3],[2774,3],[4687,3],[6589,3],[8499,3],[10405,3]]},"668":{"position":[[322,3],[3459,3],[5092,3],[7298,3],[7789,3],[7873,3],[7968,5],[10710,3]]},"670":{"position":[[1424,3],[3687,3],[4178,3],[4263,3],[4385,5],[7567,3],[7670,3],[10394,3],[10497,3]]},"672":{"position":[[5322,3],[5414,5],[5556,5],[5698,5],[5840,5],[5982,5],[6102,5],[6222,5]]},"692":{"position":[[799,3],[2881,3],[3372,3],[3456,3],[3493,5],[5755,3],[7845,3],[8336,3],[8420,3],[8457,5],[10743,3],[13231,3],[13722,3],[13806,3],[13843,5],[13926,5],[14013,5],[17034,3],[19058,3],[19549,3],[19666,3],[22152,3],[24172,3],[24663,3],[24780,3]]},"694":{"position":[[3217,3],[5867,3],[6358,3],[6442,3],[6479,5],[6559,5],[6633,5],[6716,5],[9645,3],[11675,3],[12166,3],[12283,3]]},"696":{"position":[[3120,3],[5434,3],[5925,3],[6009,3],[6046,5],[6140,5],[8813,3],[11629,3],[12120,3],[12204,3],[12241,5],[12346,5],[12451,5],[12544,5],[15912,3],[17930,3],[18421,3],[18538,3]]},"698":{"position":[[2858,3],[3315,3],[5809,3],[6300,3],[6384,3],[6421,5],[6505,5],[6593,5],[9621,3],[11649,3],[12140,3],[12257,3]]},"702":{"position":[[240,3]]},"712":{"position":[[762,3]]},"718":{"position":[[2356,3],[4556,3],[5047,3],[5131,3],[5221,5],[7635,3],[9671,3],[10162,3],[10279,3],[12782,3],[14982,3],[15473,3],[15557,3],[15647,5],[18018,3],[20054,3],[20545,3],[20662,3],[23174,3],[25224,3],[25715,3],[25832,3],[28741,3],[31553,3],[32044,3],[32128,3],[32220,5],[32359,5],[32492,5],[35588,3],[37624,3],[38115,3],[38232,3]]},"720":{"position":[[417,3],[2443,3],[2934,3],[3051,3],[7117,3],[9141,3],[9632,3],[9749,3]]},"722":{"position":[[7161,3],[9803,3],[10294,3],[10378,3],[10415,5],[10515,5],[10626,5],[13757,3],[16095,3],[16586,3],[16670,3],[16821,5],[19494,3],[21976,3],[22467,3],[22551,3],[22695,5],[22773,5],[25519,3],[27831,3],[28322,3],[28406,3],[28443,5],[28532,5],[31172,3],[33314,3],[33805,3],[33889,3],[33926,5],[36337,3],[38445,3],[38936,3],[39020,3],[39057,5],[41533,3],[43553,3],[44044,3],[44161,3],[46625,3],[48675,3],[49166,3],[49283,3]]},"734":{"position":[[2890,3],[6180,3],[6671,3],[6755,3],[6847,5],[6996,5],[7181,5],[7336,5]]},"740":{"position":[[717,3],[2733,3],[3224,3],[3341,3],[5828,3],[7852,3],[8343,3],[8460,3],[10972,3],[13174,3],[13665,3],[13749,3],[13840,5],[16184,3],[18202,3],[18693,3],[18810,3]]},"742":{"position":[[731,3],[2457,3],[4832,3],[6840,3],[7331,3],[7448,3],[10064,3],[13114,3],[13605,3],[13689,3],[13793,5],[13955,5],[14139,5],[17604,3],[20108,3],[20599,3],[20683,3],[20787,5],[20920,5],[23726,3],[25742,3],[26233,3],[26350,3]]},"744":{"position":[[1377,3],[3992,3],[4483,3],[4568,3],[4699,5],[4859,5],[8072,3],[10608,3],[11099,3],[11216,3],[11323,3],[14528,3],[17066,3],[17557,3],[17674,3],[17781,3]]},"746":{"position":[[3618,3],[9868,3],[10359,3],[10443,3],[10535,5],[10684,5],[10869,5],[11024,5],[11178,5],[11338,5],[11500,5],[11663,5],[11825,5],[11986,5],[12147,5],[12331,5]]},"767":{"position":[[486,3],[4526,3],[5017,3],[5101,3],[5200,5],[5349,5],[5511,5],[5669,5],[5843,5],[6020,5],[10442,3],[13394,3],[13885,3],[13969,3],[14076,5],[14236,5],[14397,5],[17623,3],[20435,3],[20926,3],[21010,3],[21104,5],[21234,5],[21375,5],[25281,3],[27303,3],[27794,3],[27911,3],[30460,3],[32484,3],[32975,3],[33092,3],[35496,3],[37526,3],[38017,3],[38134,3],[40554,3],[42586,3],[43077,3],[43194,3]]},"769":{"position":[[582,3],[2606,3],[3097,3],[3214,3],[7917,3],[9933,3],[10424,3],[10541,3],[13257,3],[15291,3],[15782,3],[15899,3],[20777,3],[23005,3],[25037,3],[25528,3],[25645,3],[30668,3],[32682,3],[33173,3],[33290,3],[39655,3],[41669,3],[42160,3],[42277,3]]},"786":{"position":[[2117,3],[4201,3],[4692,3],[4776,3],[4813,5],[7108,3],[9134,3],[9625,3],[9742,3],[12216,3],[14300,3],[14791,3],[14875,3],[14912,5],[17164,3],[19190,3],[19681,3],[19798,3],[22208,3],[24236,3],[24727,3],[24844,3],[29359,3],[31385,3],[31876,3],[31993,3],[34403,3],[36429,3],[36920,3],[37037,3]]},"788":{"position":[[2636,3],[5234,3],[5725,3],[5809,3],[5903,5],[6064,5],[8613,3],[9103,3],[11133,3],[11624,3],[11741,3]]},"790":{"position":[[587,3],[2719,3],[3210,3],[3294,3],[3331,5],[6111,3],[8307,3],[8798,3],[8882,3],[8972,5],[11306,3],[13332,3],[13823,3],[13940,3]]},"792":{"position":[[3230,3],[5538,3],[6029,3],[6113,3],[6150,5],[6234,5],[9285,3],[11319,3],[11810,3],[11927,3],[15530,3],[15837,3],[17965,3],[18456,3],[18540,3],[18577,5]]},"809":{"position":[[2114,3],[4204,3],[4695,3],[4779,3],[4816,5],[7126,3],[9158,3],[9649,3],[9766,3],[12253,3],[14335,3],[14826,3],[14910,3],[14947,5],[17195,3],[19219,3],[19710,3],[19827,3],[22232,3],[24260,3],[24751,3],[24868,3],[28871,3],[30895,3],[31386,3],[31503,3],[33908,3],[35934,3],[36425,3],[36542,3]]},"811":{"position":[[2393,3],[5285,3],[5776,3],[5860,3],[5952,5],[6026,5],[6100,5],[6239,5],[9078,3],[9574,3],[11606,3],[12097,3],[12214,3]]},"813":{"position":[[2226,3],[4764,3],[5255,3],[5339,3],[5423,5],[5572,5],[8704,3],[10742,3],[11233,3],[11350,3]]},"815":{"position":[[189,3],[3098,3],[6038,3],[6529,3],[6613,3],[6703,5],[6867,5],[7037,5],[10232,3],[12272,3],[12763,3],[12880,3],[15401,3],[17445,3],[17936,3],[18053,3],[20507,3],[22555,3],[23046,3],[23163,3],[25706,3],[27750,3],[28241,3],[28358,3],[30812,3],[32856,3],[33347,3],[33464,3]]}}}],["new(\"document:otherdoc",{"_index":1945,"t":{"583":{"position":[[3504,24]]}}}],["new(us",{"_index":2145,"t":{"670":{"position":[[7715,9],[10542,9]]},"744":{"position":[[11368,9],[11451,9],[17826,9],[17909,9]]}}}],["newli",{"_index":754,"t":{"96":{"position":[[1136,5]]},"813":{"position":[[1796,5]]}}}],["next",{"_index":505,"t":{"54":{"position":[[46,4]]},"94":{"position":[[466,5],[1317,5]]},"98":{"position":[[664,5],[5455,4]]},"168":{"position":[[156,5]]},"259":{"position":[[1196,4]]},"399":{"position":[[0,4]]},"407":{"position":[[322,4]]},"648":{"position":[[0,5]]},"670":{"position":[[6488,5]]}}}],["nil",{"_index":369,"t":{"16":{"position":[[13797,3],[19409,3],[25186,3]]},"80":{"position":[[2570,3],[3235,3],[3410,3]]},"86":{"position":[[816,3],[1062,3]]},"96":{"position":[[2140,3]]},"98":{"position":[[3350,3],[4769,3],[5236,3]]},"102":{"position":[[710,3]]},"112":{"position":[[1204,3]]},"124":{"position":[[1204,3]]},"170":{"position":[[923,3]]},"172":{"position":[[1757,3]]},"190":{"position":[[1204,3]]},"192":{"position":[[647,3]]},"194":{"position":[[805,3]]},"213":{"position":[[1585,3],[2049,3]]},"215":{"position":[[1638,3],[6805,3]]},"221":{"position":[[2939,3],[8000,3],[8501,3],[13346,3],[18371,3]]},"230":{"position":[[1847,3],[2310,3]]},"232":{"position":[[1682,3]]},"245":{"position":[[1928,3]]},"247":{"position":[[1602,3],[2061,3],[6701,3]]},"257":{"position":[[1180,3]]},"259":{"position":[[331,3],[1699,3]]},"261":{"position":[[1337,3],[2554,3]]},"288":{"position":[[1683,3],[2138,3],[6589,3],[7045,3],[11951,3],[12683,3]]},"312":{"position":[[1778,3],[6807,3]]},"318":{"position":[[1912,3],[2435,3],[7382,3],[12616,3]]},"338":{"position":[[1819,3]]},"345":{"position":[[2753,3]]},"369":{"position":[[1881,3],[2566,3],[7698,3]]},"371":{"position":[[1893,3],[2688,3]]},"373":{"position":[[1610,3]]},"385":{"position":[[1659,3],[2135,3]]},"387":{"position":[[1719,3],[6970,3]]},"429":{"position":[[2463,3]]},"445":{"position":[[1781,3],[6831,3]]},"449":{"position":[[1742,3],[6957,3]]},"467":{"position":[[1620,3],[2082,3]]},"469":{"position":[[1702,3],[2244,3]]},"471":{"position":[[1792,3]]},"485":{"position":[[1858,3],[2372,3]]},"487":{"position":[[1920,3]]},"505":{"position":[[1991,3],[2646,3],[7648,3],[13063,3],[18171,3],[23214,3]]},"521":{"position":[[1631,3],[2095,3]]},"523":{"position":[[2041,3],[2582,3]]},"525":{"position":[[1854,3]]},"537":{"position":[[1761,3],[2332,3]]},"541":{"position":[[1764,3],[2331,3]]},"543":{"position":[[1727,3],[2190,3]]},"545":{"position":[[1606,3],[6552,3]]},"547":{"position":[[1603,3],[2058,3],[6542,3]]},"562":{"position":[[1775,3]]},"569":{"position":[[2075,3],[7628,3],[13054,3]]},"571":{"position":[[2160,3]]},"576":{"position":[[1805,3],[7139,3]]},"583":{"position":[[1803,3]]},"605":{"position":[[2904,3],[8497,3],[14742,3],[20994,3],[26652,3]]},"607":{"position":[[2750,3],[8422,3],[14181,3],[19923,3]]},"622":{"position":[[1976,3],[2556,3]]},"624":{"position":[[1729,3]]},"630":{"position":[[1800,3],[2535,3]]},"632":{"position":[[1650,3]]},"634":{"position":[[1657,3],[2192,3],[7021,3],[12074,3]]},"644":{"position":[[2411,3],[7447,3]]},"646":{"position":[[1726,3],[2241,3],[6915,3]]},"648":{"position":[[1793,3],[7385,3],[7981,3],[12835,3],[13432,3],[18365,3],[23445,3]]},"660":{"position":[[5707,3]]},"668":{"position":[[6363,3],[6895,3]]},"670":{"position":[[2724,3],[3284,3]]},"672":{"position":[[5246,3]]},"692":{"position":[[2008,3],[2478,3],[6968,3],[7442,3],[12099,3],[12828,3],[18282,3],[23398,3]]},"694":{"position":[[4626,3],[5464,3],[10896,3]]},"696":{"position":[[4417,3],[5031,3],[10305,3],[11226,3],[17157,3]]},"698":{"position":[[4674,3],[5406,3],[10871,3]]},"718":{"position":[[3624,3],[4153,3],[8889,3],[14050,3],[14579,3],[19272,3],[24435,3],[30259,3],[31150,3],[36842,3]]},"720":{"position":[[1666,3],[8365,3]]},"722":{"position":[[8594,3],[9400,3],[15094,3],[15692,3],[20875,3],[21573,3],[26815,3],[27428,3],[32411,3],[32911,3],[37559,3],[38042,3],[42779,3],[47886,3]]},"734":{"position":[[4619,3],[5777,3]]},"740":{"position":[[1961,3],[7076,3],[12241,3],[12771,3],[17429,3]]},"742":{"position":[[6072,3],[11701,3],[12711,3],[18996,3],[19705,3],[24970,3]]},"744":{"position":[[2825,3],[3589,3],[9501,3],[15958,3]]},"746":{"position":[[6603,3],[9465,3]]},"767":{"position":[[2534,3],[4123,3],[12030,3],[12991,3],[19141,3],[20032,3],[26528,3],[31708,3],[36747,3],[41806,3]]},"769":{"position":[[1830,3],[9161,3],[14510,3],[24257,3],[31911,3],[40898,3]]},"786":{"position":[[3327,3],[3798,3],[8357,3],[13426,3],[13897,3],[18413,3],[23458,3],[30608,3],[35652,3]]},"788":{"position":[[4075,3],[4831,3],[10354,3]]},"790":{"position":[[1821,3],[2316,3],[7377,3],[7904,3],[12555,3]]},"792":{"position":[[4524,3],[5135,3],[10538,3],[17069,3],[17562,3]]},"809":{"position":[[3327,3],[3801,3],[8378,3],[13462,3],[13932,3],[18443,3],[23482,3],[30119,3],[35157,3]]},"811":{"position":[[3923,3],[4882,3],[10826,3]]},"813":{"position":[[3635,3],[4361,3],[9959,3]]},"815":{"position":[[4680,3],[5635,3],[11488,3],[16659,3],[21767,3],[26964,3],[32070,3]]}}}],["node",{"_index":1442,"t":{"347":{"position":[[854,5],[976,8]]},"349":{"position":[[1029,4],[1206,5],[1362,6],[1398,4],[1505,6]]}}}],["node.j",{"_index":322,"t":{"16":{"position":[[12250,7],[17862,7],[23634,7]]},"78":{"position":[[0,7]]},"80":{"position":[[709,7]]},"86":{"position":[[0,7]]},"90":{"position":[[0,7]]},"94":{"position":[[44,7]]},"96":{"position":[[102,7]]},"98":{"position":[[0,7]]},"102":{"position":[[50,7],[90,7]]},"104":{"position":[[61,7],[85,7]]},"108":{"position":[[0,7]]},"112":{"position":[[73,7]]},"114":{"position":[[79,7]]},"120":{"position":[[0,7]]},"124":{"position":[[73,7]]},"126":{"position":[[74,7]]},"170":{"position":[[69,7]]},"172":{"position":[[382,7]]},"186":{"position":[[0,7]]},"190":{"position":[[73,7]]},"192":{"position":[[61,7]]},"194":{"position":[[216,7]]},"213":{"position":[[84,7]]},"215":{"position":[[94,7],[5259,7]]},"221":{"position":[[1399,7],[6462,7],[11802,7],[16825,7]]},"230":{"position":[[346,7]]},"232":{"position":[[137,7]]},"245":{"position":[[394,7]]},"247":{"position":[[105,7],[5166,7]]},"253":{"position":[[0,7]]},"257":{"position":[[49,7]]},"259":{"position":[[64,7],[1217,7]]},"261":{"position":[[1047,7],[2049,7]]},"288":{"position":[[191,7],[5095,7],[10273,7]]},"312":{"position":[[233,7],[5263,7]]},"318":{"position":[[352,7],[5837,7],[11071,7]]},"338":{"position":[[267,7]]},"345":{"position":[[1211,7]]},"369":{"position":[[215,7],[6151,7]]},"371":{"position":[[117,7]]},"373":{"position":[[63,7]]},"385":{"position":[[146,7]]},"387":{"position":[[167,7],[5417,7]]},"429":{"position":[[1832,7]]},"445":{"position":[[233,7],[5284,7]]},"449":{"position":[[193,7],[5408,7]]},"467":{"position":[[121,7]]},"469":{"position":[[123,7]]},"471":{"position":[[240,7]]},"485":{"position":[[307,7]]},"487":{"position":[[372,7]]},"505":{"position":[[355,7],[6103,7],[11518,7],[16624,7],[21668,7]]},"521":{"position":[[130,7]]},"523":{"position":[[463,7]]},"525":{"position":[[300,7]]},"537":{"position":[[209,7]]},"541":{"position":[[216,7]]},"543":{"position":[[227,7]]},"545":{"position":[[73,7],[5019,7]]},"547":{"position":[[110,7],[5008,7]]},"562":{"position":[[232,7]]},"569":{"position":[[482,7],[6054,7],[11470,7]]},"571":{"position":[[685,7]]},"576":{"position":[[223,7],[5557,7]]},"583":{"position":[[144,7]]},"605":{"position":[[1360,7],[6953,7],[13195,7],[19450,7],[25107,7]]},"607":{"position":[[1205,7],[6874,7],[12635,7],[18377,7]]},"622":{"position":[[359,7]]},"624":{"position":[[174,7]]},"630":{"position":[[84,7]]},"632":{"position":[[103,7]]},"634":{"position":[[84,7],[5473,7],[10523,7]]},"644":{"position":[[865,7],[5902,7]]},"646":{"position":[[174,7],[5366,7]]},"648":{"position":[[149,7],[5808,7],[11256,7],[16819,7],[21901,7]]},"660":{"position":[[3158,7]]},"666":{"position":[[229,7],[2120,7],[4037,7],[5933,7],[7847,7],[9749,7]]},"668":{"position":[[2807,7],[4794,7],[10060,7]]},"670":{"position":[[1126,7],[6592,7],[9417,7]]},"672":{"position":[[2697,7]]},"692":{"position":[[501,7],[5457,7],[10445,7],[16736,7],[21854,7]]},"694":{"position":[[2919,7],[9347,7]]},"696":{"position":[[2822,7],[8515,7],[15614,7]]},"698":{"position":[[3017,7],[9323,7]]},"718":{"position":[[2058,7],[7337,7],[12484,7],[17720,7],[22876,7],[28443,7],[35290,7]]},"720":{"position":[[119,7],[6819,7]]},"722":{"position":[[6863,7],[13459,7],[19196,7],[25221,7],[30874,7],[36039,7],[41235,7],[46327,7]]},"734":{"position":[[2592,7]]},"740":{"position":[[419,7],[5530,7],[10674,7],[15886,7]]},"742":{"position":[[4534,7],[9766,7],[17306,7],[23428,7]]},"744":{"position":[[1079,7],[7774,7],[14230,7]]},"746":{"position":[[3320,7]]},"767":{"position":[[188,7],[10144,7],[17325,7],[24983,7],[30162,7],[35198,7],[40256,7]]},"769":{"position":[[284,7],[7619,7],[12959,7],[22707,7],[30370,7],[39357,7]]},"786":{"position":[[1819,7],[6810,7],[11918,7],[16866,7],[21910,7],[29061,7],[34105,7]]},"788":{"position":[[2338,7],[8805,7]]},"790":{"position":[[289,7],[5813,7],[11008,7]]},"792":{"position":[[2932,7],[8987,7],[15539,7]]},"809":{"position":[[1816,7],[6828,7],[11955,7],[16897,7],[21934,7],[28573,7],[33610,7]]},"811":{"position":[[2095,7],[9276,7]]},"813":{"position":[[1928,7],[8406,7]]},"815":{"position":[[2800,7],[9934,7],[15103,7],[20209,7],[25408,7],[30514,7]]}}}],["node.js/javascript",{"_index":33,"t":{"4":{"position":[[303,19]]}}}],["non",{"_index":559,"t":{"60":{"position":[[3093,3]]},"429":{"position":[[370,3]]}}}],["nonassign",{"_index":1502,"t":{"375":{"position":[[155,13]]},"609":{"position":[[275,13]]}}}],["none",{"_index":1110,"t":{"160":{"position":[[248,4]]}}}],["normal",{"_index":2267,"t":{"714":{"position":[[471,6]]},"716":{"position":[[743,6]]},"722":{"position":[[877,6]]}}}],["not_serv",{"_index":1036,"t":{"150":{"position":[[201,11]]}}}],["notat",{"_index":1428,"t":{"343":{"position":[[431,9]]}}}],["note",{"_index":479,"t":{"16":{"position":[[30094,4]]},"60":{"position":[[2944,4],[3304,5]]},"80":{"position":[[7261,4]]},"92":{"position":[[181,4]]},"142":{"position":[[2997,4]]},"154":{"position":[[154,4]]},"176":{"position":[[230,4]]},"259":{"position":[[2665,4]]},"273":{"position":[[771,4]]},"318":{"position":[[16240,5]]},"338":{"position":[[5346,4]]},"387":{"position":[[10510,5]]},"403":{"position":[[2300,4],[6673,4],[10450,4]]},"431":{"position":[[340,5]]},"437":{"position":[[2226,4]]},"467":{"position":[[4988,5]]},"469":{"position":[[809,5],[849,5],[1875,5],[1915,5],[3266,5],[3306,5],[4455,5],[4495,5],[5201,5],[5241,5]]},"471":{"position":[[5319,5],[5799,4]]},"485":{"position":[[5462,4]]},"503":{"position":[[1448,5]]},"505":{"position":[[27101,5]]},"525":{"position":[[5581,5]]},"605":{"position":[[12216,5],[12771,4],[12935,4],[18526,4],[24478,5]]},"624":{"position":[[5293,4],[5692,5]]},"666":{"position":[[11634,4]]},"672":{"position":[[9634,4]]},"710":{"position":[[585,5]]},"722":{"position":[[4206,4]]},"740":{"position":[[20901,4]]},"742":{"position":[[4049,4],[9604,4]]},"746":{"position":[[19137,4]]},"758":{"position":[[623,5]]},"769":{"position":[[5963,4]]},"779":{"position":[[201,5]]},"790":{"position":[[5411,5]]},"792":{"position":[[2768,4]]},"802":{"position":[[239,5]]},"813":{"position":[[278,4]]}}}],["noth",{"_index":2134,"t":{"668":{"position":[[2298,7],[2675,7]]},"742":{"position":[[4081,7],[4402,7]]}}}],["notic",{"_index":540,"t":{"58":{"position":[[933,6]]},"403":{"position":[[6693,7]]},"431":{"position":[[35,6],[59,6]]},"463":{"position":[[970,6]]},"503":{"position":[[1454,6]]},"607":{"position":[[657,6]]},"668":{"position":[[2634,6]]},"694":{"position":[[0,6]]},"698":{"position":[[0,6],[2194,6]]},"742":{"position":[[4361,6]]},"769":{"position":[[27781,6],[29947,6]]},"813":{"position":[[1785,6]]}}}],["notif",{"_index":1655,"t":{"417":{"position":[[342,13]]}}}],["notion",{"_index":2661,"t":{"792":{"position":[[450,6],[688,6]]},"813":{"position":[[386,6]]}}}],["noun",{"_index":1553,"t":{"399":{"position":[[2025,5],[2104,5],[2127,7],[2149,5],[2172,5],[3762,4],[4713,4]]},"401":{"position":[[390,4],[407,6],[419,7]]}}}],["now",{"_index":760,"t":{"96":{"position":[[1532,3]]},"98":{"position":[[1588,3]]},"142":{"position":[[860,3],[2869,3],[3546,3],[5497,3]]},"221":{"position":[[6393,3],[11540,3]]},"230":{"position":[[86,3]]},"247":{"position":[[0,3],[5134,3]]},"263":{"position":[[155,3]]},"290":{"position":[[544,3]]},"312":{"position":[[10865,4]]},"314":{"position":[[915,3]]},"316":{"position":[[0,3]]},"318":{"position":[[5530,4],[5682,3]]},"338":{"position":[[120,3],[181,3]]},"345":{"position":[[623,3]]},"399":{"position":[[3995,3],[4201,3]]},"401":{"position":[[3323,3]]},"463":{"position":[[1000,3]]},"469":{"position":[[0,3]]},"471":{"position":[[0,3]]},"505":{"position":[[0,3],[6037,3]]},"521":{"position":[[7,3]]},"525":{"position":[[0,3]]},"543":{"position":[[0,4]]},"545":{"position":[[7,3]]},"547":{"position":[[8,3],[4953,3]]},"605":{"position":[[943,3],[1239,3],[6832,3],[13071,3]]},"607":{"position":[[803,3],[1083,3],[6749,3],[12512,3]]},"622":{"position":[[44,3]]},"646":{"position":[[0,3]]},"650":{"position":[[431,4]]},"668":{"position":[[2508,3]]},"670":{"position":[[0,3]]},"692":{"position":[[16400,3],[26876,4]]},"694":{"position":[[9275,3]]},"696":{"position":[[0,3],[15362,3]]},"698":{"position":[[2648,3],[8976,3]]},"718":{"position":[[7272,3]]},"722":{"position":[[41038,3]]},"742":{"position":[[4255,3],[17169,3]]},"744":{"position":[[0,3]]},"767":{"position":[[0,3],[24687,3]]},"769":{"position":[[5511,4],[7531,3],[20851,3],[21307,3],[22609,3],[27801,3],[30296,3],[35815,4],[38781,3]]},"786":{"position":[[6739,3],[29020,3],[29056,4]]},"788":{"position":[[2210,3]]},"790":{"position":[[5716,3]]},"792":{"position":[[884,4],[2860,3]]},"809":{"position":[[6754,3],[28532,3],[28568,4]]},"811":{"position":[[2002,3]]}}}],["npm",{"_index":694,"t":{"94":{"position":[[358,4],[363,3]]},"102":{"position":[[109,3],[137,4],[142,3]]}}}],["nuget",{"_index":839,"t":{"102":{"position":[[856,6]]}}}],["number",{"_index":1309,"t":{"273":{"position":[[87,6],[155,6],[324,6],[522,6],[548,6],[833,6],[947,6],[994,6],[1389,6],[1818,6],[1975,6],[2960,6]]},"275":{"position":[[410,6]]},"427":{"position":[[631,6]]},"529":{"position":[[241,6]]},"585":{"position":[[120,6],[456,6],[556,6]]},"734":{"position":[[2293,6],[2365,6],[2413,6],[3454,6],[3609,6],[3741,6],[5024,6],[5235,6],[5423,6],[6985,6],[7150,6],[7292,6],[8648,6],[8809,6],[8947,6],[10091,6],[10250,6],[10386,6]]},"746":{"position":[[4182,6],[4337,6],[4469,6],[7008,6],[7219,6],[7407,6],[10673,6],[10838,6],[10980,6],[13672,6],[13833,6],[13971,6],[17118,6],[17277,6],[17413,6]]},"794":{"position":[[13,6]]}}}],["o",{"_index":1521,"t":{"393":{"position":[[538,4],[613,3],[694,3],[1180,2]]},"395":{"position":[[128,3]]},"403":{"position":[[274,2]]},"405":{"position":[[305,2],[530,3],[610,3],[906,1],[952,1]]}}}],["obj_1",{"_index":600,"t":{"68":{"position":[[2548,5],[2578,5],[2698,6]]}}}],["object",{"_index":76,"t":{"8":{"position":[[86,7],[197,8],[256,7]]},"12":{"position":[[70,7],[87,7],[111,8]]},"14":{"position":[[134,8],[220,8],[359,7]]},"16":{"position":[[105,6],[523,7],[742,6],[2896,7],[4008,8],[4020,6],[4181,6],[4388,6],[4569,7],[4748,7],[5005,6],[5104,6],[5367,6],[5772,6],[5841,6],[5910,6],[5944,6],[5954,6],[5979,6],[6021,6],[6066,6],[6226,6],[6285,6],[6456,6],[7412,6],[8155,7],[8386,7],[8818,6],[9037,7],[9249,7],[9389,9],[9571,7],[9717,7],[9866,6],[10146,6],[10182,6],[10240,6],[10606,9],[10751,9],[10899,9],[11058,9],[11904,9],[13047,7],[14040,7],[15240,6],[17155,6],[17200,6],[17441,7],[18659,7],[19652,7],[20852,6],[22767,6],[22812,6],[23022,7],[23047,7],[23093,7],[23131,7],[23332,7],[23387,7],[23428,7],[23551,7],[25532,10],[28081,7],[28370,11],[28464,7],[29084,7],[29620,6],[29726,6],[30055,9],[30147,6]]},"18":{"position":[[48,7]]},"20":{"position":[[91,6]]},"26":{"position":[[3,6]]},"28":{"position":[[60,7]]},"30":{"position":[[138,6]]},"36":{"position":[[67,6]]},"38":{"position":[[70,7]]},"40":{"position":[[43,6],[323,6],[359,6],[417,6]]},"42":{"position":[[121,7]]},"44":{"position":[[7,7],[53,7],[91,7]]},"48":{"position":[[105,6],[211,6]]},"50":{"position":[[45,6],[55,6]]},"52":{"position":[[143,6],[258,6],[343,7]]},"54":{"position":[[1109,9],[1234,9],[1300,9],[1453,9],[1529,9],[1595,9],[1716,9],[1791,9],[1857,9],[2431,9],[2556,9],[2622,9],[2775,9],[2851,9],[2917,9],[3038,9],[3113,9],[3179,9],[3736,8]]},"56":{"position":[[115,7],[226,7],[395,7],[580,6],[817,7],[858,7],[1446,6],[1675,7],[2056,9],[2201,9],[2352,9],[2466,9]]},"58":{"position":[[51,7],[720,6],[1585,9],[1760,9],[2058,9]]},"60":{"position":[[90,8],[151,6],[184,6],[227,6],[921,9],[987,9],[1659,9],[1725,9],[2216,9],[2341,9],[2537,9],[2632,7],[2721,6],[2747,6],[2770,6],[2816,6],[3481,8]]},"62":{"position":[[760,9],[887,9],[1069,6],[1193,6],[1421,9]]},"64":{"position":[[800,9],[951,9],[1133,6],[1201,6],[1400,9],[1661,9],[1833,9]]},"66":{"position":[[812,9],[1002,9],[1225,6],[1296,6],[1435,9],[1725,9],[1848,9]]},"68":{"position":[[765,7],[2541,6],[2571,6],[2591,6]]},"70":{"position":[[326,7]]},"74":{"position":[[702,7],[750,7]]},"98":{"position":[[162,6],[1446,7],[4274,6],[5083,7]]},"106":{"position":[[123,7]]},"110":{"position":[[77,6]]},"114":{"position":[[61,6],[273,7],[486,7],[774,6]]},"118":{"position":[[51,7],[88,7]]},"122":{"position":[[33,7]]},"126":{"position":[[599,10],[1394,7],[1683,11],[1807,7]]},"128":{"position":[[113,7],[139,7]]},"142":{"position":[[3144,6],[3198,6]]},"152":{"position":[[695,7]]},"176":{"position":[[36,6]]},"188":{"position":[[76,6],[135,7]]},"192":{"position":[[178,7],[427,7],[809,6]]},"194":{"position":[[133,6],[192,7],[335,7],[585,7],[968,6]]},"196":{"position":[[153,7],[252,7]]},"200":{"position":[[77,7],[172,6],[371,6],[422,7]]},"202":{"position":[[82,7],[175,6],[274,7]]},"204":{"position":[[1039,7],[1097,7],[1197,6],[1343,6],[1418,7],[1632,6]]},"206":{"position":[[74,7]]},"208":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"211":{"position":[[97,6],[305,9]]},"213":{"position":[[806,7],[1828,7],[3115,6]]},"215":{"position":[[891,7],[1881,7],[3078,6],[4984,6],[5026,6],[6057,7],[7049,7],[8248,6],[10161,6],[10203,6]]},"219":{"position":[[632,8]]},"221":{"position":[[1195,9],[2191,7],[3177,7],[4370,6],[6259,6],[6301,6],[7221,7],[8280,7],[9604,6],[12599,7],[13589,7],[14786,6],[16692,6],[16734,6],[17623,7],[18615,7],[19814,6],[21727,6],[21769,6],[21957,7],[22051,7],[22109,7],[22209,6],[22355,6],[22430,7],[22644,6]]},"223":{"position":[[74,7]]},"225":{"position":[[50,7]]},"227":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"230":{"position":[[1068,7],[2089,7],[3375,6]]},"232":{"position":[[934,7],[1925,7],[3123,6],[5032,6],[5074,6]]},"236":{"position":[[72,7],[314,7],[422,7]]},"238":{"position":[[758,7],[816,7],[916,6],[1062,6],[1137,7],[1351,6]]},"240":{"position":[[115,7]]},"242":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"245":{"position":[[199,9],[1191,7],[2171,7],[3358,6],[5234,6],[5266,6]]},"247":{"position":[[827,7],[1844,7],[3126,6],[5963,7],[6944,7],[8132,6],[10011,6],[10043,6]]},"249":{"position":[[134,7]]},"261":{"position":[[992,6]]},"263":{"position":[[316,7],[381,6]]},"267":{"position":[[112,6],[159,7]]},"269":{"position":[[419,7]]},"271":{"position":[[19,7],[48,6],[122,6],[165,7],[249,6]]},"273":{"position":[[97,7],[165,7],[235,7],[334,7],[558,7],[644,7],[843,7],[898,7],[957,7],[1004,7],[1108,7],[1209,7],[1293,6],[1828,7],[1909,6],[1985,7],[2082,7],[2970,7],[3067,7]]},"275":{"position":[[23,7],[65,7],[104,7],[219,7],[279,7],[376,7],[420,7]]},"279":{"position":[[1263,7],[1358,7],[1416,7],[1516,6],[1662,6],[1737,7],[1951,6]]},"281":{"position":[[115,7]]},"283":{"position":[[50,7]]},"285":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"288":{"position":[[908,7],[1921,7],[3199,6],[5814,7],[6828,7],[8107,6],[11039,7],[11176,7],[12238,7],[12466,7],[13793,6],[13960,6]]},"290":{"position":[[307,9],[414,9]]},"296":{"position":[[399,6],[482,7],[767,7]]},"304":{"position":[[70,7]]},"306":{"position":[[1256,9],[1377,9],[1491,9],[1726,7],[1826,6],[1972,6],[2047,7],[2261,6],[2394,6]]},"310":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6],[687,6]]},"312":{"position":[[1031,7],[2022,7],[3220,6],[5130,6],[5172,6],[6060,7],[7050,7],[8247,6],[10153,6],[10195,6]]},"318":{"position":[[1127,7],[2208,7],[3554,6],[6634,7],[7625,7],[8823,6],[10732,6],[10774,6],[11869,7],[12860,7],[14058,6],[15968,6],[16010,6],[16316,6]]},"324":{"position":[[230,6],[240,6],[298,7]]},"328":{"position":[[980,9],[1229,7],[1329,6],[1475,6],[1550,7],[1764,6]]},"332":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"338":{"position":[[1063,7],[2061,7],[3266,6],[5195,6],[5246,6],[5434,6]]},"343":{"position":[[152,7],[464,6],[499,6]]},"345":{"position":[[799,9],[932,9],[2008,7],[2996,7],[4191,6],[6091,6],[6131,6]]},"349":{"position":[[169,7],[310,6],[450,6],[507,7],[614,6],[630,6],[695,7],[776,7],[788,6],[798,6],[882,8]]},"353":{"position":[[303,6],[565,8]]},"355":{"position":[[1210,6],[1220,6],[1295,7],[1361,8]]},"361":{"position":[[53,7],[119,8]]},"369":{"position":[[980,7],[1096,7],[2167,7],[2339,7],[3675,6],[3801,6],[6950,7],[7943,7],[9143,6],[11060,6],[11103,6]]},"371":{"position":[[934,7],[1105,7],[2231,7],[2458,7],[3849,6],[4030,6]]},"373":{"position":[[860,7],[1853,7],[3053,6],[4968,6],[5013,6]]},"375":{"position":[[206,6],[216,6],[262,6],[272,6]]},"377":{"position":[[62,6],[324,7],[431,7]]},"379":{"position":[[808,7],[908,6],[1054,6],[1129,7],[1343,6]]},"381":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"383":{"position":[[224,7]]},"385":{"position":[[865,7],[1899,7],[3198,6]]},"387":{"position":[[963,7],[1961,7],[3166,6],[5095,6],[5146,6],[6213,7],[7212,7],[8418,6],[10350,6],[10401,6],[10599,6]]},"393":{"position":[[247,7],[421,7],[531,6],[606,6],[687,6],[870,6],[973,6],[1173,6],[1232,7]]},"395":{"position":[[121,6],[430,6]]},"397":{"position":[[890,7],[1106,8],[1254,7]]},"399":{"position":[[33,7],[91,7],[169,7],[270,7],[322,6],[456,6],[1925,6],[1979,6],[3789,6],[4022,6],[4610,6]]},"401":{"position":[[312,7]]},"403":{"position":[[267,6],[416,7],[1379,7],[1572,6],[1904,6],[2599,7],[2743,8],[3773,6],[4094,7],[4459,6],[4775,7],[4923,6],[5119,9],[5773,7],[5861,6],[5871,6],[6418,7],[6486,7],[6736,7],[6818,6],[6828,6],[6897,6],[6907,6],[6962,8],[7782,6]]},"405":{"position":[[298,6],[396,7],[523,6],[603,6],[899,6],[945,6],[1687,7],[1801,7],[1917,7],[2078,7],[2186,7],[2344,7]]},"409":{"position":[[249,7]]},"415":{"position":[[1148,6]]},"419":{"position":[[654,9],[713,9],[913,9],[989,9],[1048,9],[1212,9],[1335,9],[1481,9],[1595,9],[1947,9],[2963,9],[3022,9],[3395,9],[3471,9],[3530,9]]},"421":{"position":[[187,9],[273,7],[693,9]]},"423":{"position":[[138,9],[214,9],[292,9],[503,9],[2017,9],[2076,9],[2492,9],[2568,9],[2627,9],[3214,9]]},"425":{"position":[[67,7],[130,7],[234,9],[630,6],[666,6],[1232,7],[1335,9],[2177,7],[2280,9],[3061,6],[3118,9]]},"427":{"position":[[519,8]]},"429":{"position":[[190,7],[229,7],[1972,7],[2238,7],[2637,6]]},"435":{"position":[[136,7]]},"437":{"position":[[1071,9],[1689,9],[1815,9],[1939,9],[2064,9],[2186,9],[2403,8],[2613,6],[2715,7],[2815,6],[2961,6],[3036,7],[3250,6]]},"441":{"position":[[53,6]]},"443":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"445":{"position":[[1034,7],[2028,7],[3229,6],[5151,6],[5193,6],[6084,7],[7077,7],[8277,6],[10195,6],[10237,6]]},"447":{"position":[[602,9],[710,9],[786,9],[844,9]]},"449":{"position":[[995,7],[1990,7],[3192,6],[5118,6],[5160,6],[6209,7],[7204,7],[8406,6],[10331,6],[10373,6]]},"453":{"position":[[67,8],[112,6],[274,6],[284,6],[409,6],[462,7],[553,7],[580,6],[590,6]]},"455":{"position":[[1042,7],[1100,7],[1200,6],[1346,6],[1421,7],[1635,6],[1774,6]]},"457":{"position":[[115,7]]},"459":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6],[693,6]]},"463":{"position":[[259,6],[269,6],[1049,7]]},"467":{"position":[[840,7],[1860,7],[3145,6],[5031,6]]},"469":{"position":[[908,7],[2008,7],[3373,6]]},"471":{"position":[[1036,7],[2034,7],[3239,6],[5168,6],[5219,6],[5855,6],[5978,7],[6253,7]]},"473":{"position":[[75,8],[103,6],[113,6],[159,6],[169,6]]},"475":{"position":[[62,7],[227,7]]},"477":{"position":[[811,7],[869,7],[969,6],[1115,6],[1190,7],[1404,6],[1566,6],[1631,6]]},"479":{"position":[[115,7]]},"481":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6],[716,6]]},"483":{"position":[[55,7],[87,8],[169,6]]},"485":{"position":[[208,7],[1010,6],[1066,7],[2048,6],[2138,7],[3411,6],[3475,6],[4572,6],[5280,6],[5588,6],[5680,6],[5827,9],[6206,9]]},"487":{"position":[[292,6],[1166,7],[2160,7],[3361,6],[5276,6],[5325,6]]},"491":{"position":[[307,7],[1211,6]]},"493":{"position":[[901,7],[959,7],[1059,6],[1205,6],[1280,7],[1494,6],[1621,7],[1769,7],[1872,7]]},"495":{"position":[[115,7]]},"497":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6],[681,7],[829,7],[932,7]]},"503":{"position":[[479,6]]},"505":{"position":[[1110,7],[1212,7],[2267,7],[2425,7],[3745,6],[3857,6],[6907,7],[7898,7],[9096,6],[11012,6],[11048,6],[11259,6],[12321,7],[13312,7],[14510,6],[16425,6],[16461,6],[17430,7],[18423,7],[19623,6],[21547,6],[21583,6],[22473,7],[23465,7],[24664,6],[26584,6],[26620,6],[26852,6],[26940,6],[27144,6]]},"509":{"position":[[86,6],[193,6],[292,7]]},"511":{"position":[[220,6],[789,7],[847,7],[947,6],[1093,6],[1168,7],[1382,6]]},"513":{"position":[[115,7]]},"515":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"517":{"position":[[123,7],[404,6],[457,6]]},"519":{"position":[[22,6]]},"521":{"position":[[851,7],[1873,7],[3160,6]]},"523":{"position":[[250,6],[1247,7],[2346,7],[3710,6]]},"525":{"position":[[1098,7],[2098,7],[3305,6],[5242,6],[5293,6],[5670,6]]},"529":{"position":[[72,6],[115,7],[190,6],[251,6]]},"531":{"position":[[742,7],[800,7],[900,6],[1046,6],[1121,7],[1335,6]]},"533":{"position":[[115,7]]},"535":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"537":{"position":[[63,6],[928,7],[987,7],[2001,7],[2116,7],[3395,6],[3464,6]]},"539":{"position":[[429,9],[487,9]]},"541":{"position":[[933,7],[990,7],[2002,7],[2115,7],[3392,6],[3459,6]]},"543":{"position":[[952,7],[1973,7],[3259,6]]},"545":{"position":[[870,7],[1849,7],[3035,6],[4908,6],[4939,6],[5816,7],[6795,7],[7981,6],[9854,6],[9885,6]]},"547":{"position":[[829,7],[1842,7],[3120,6],[5805,7],[6785,7],[7972,6],[9848,6],[9879,6]]},"549":{"position":[[76,8],[107,7],[168,6],[184,7],[206,6],[216,6],[270,7],[355,6],[365,6]]},"553":{"position":[[673,9],[997,9],[1213,7],[1271,7],[1371,6],[1517,6],[1592,7],[1806,6]]},"555":{"position":[[115,7]]},"557":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"560":{"position":[[98,7]]},"562":{"position":[[117,7],[1028,7],[2017,7],[3213,6],[5115,6],[5157,6]]},"564":{"position":[[199,7]]},"569":{"position":[[111,7],[190,7],[248,6],[322,7],[2281,7],[3567,6],[5848,7],[5978,7],[7796,7],[9061,6],[11269,6],[13224,7],[14499,6],[16545,6]]},"571":{"position":[[532,7],[604,7],[2366,7],[3534,6]]},"574":{"position":[[106,7]]},"576":{"position":[[104,7],[969,7],[1010,6],[2017,7],[2076,6],[3343,6],[3384,6],[4486,7],[5231,6],[6303,7],[6344,6],[7351,7],[7410,6],[8677,6],[8718,6],[9820,7],[10565,6]]},"578":{"position":[[175,7],[276,7]]},"581":{"position":[[72,7],[266,6]]},"583":{"position":[[36,7],[1007,7],[2159,7],[2318,10],[5126,7],[5439,10],[5532,11],[5625,7],[5942,6],[6062,7]]},"585":{"position":[[440,8],[466,7],[566,7]]},"587":{"position":[[93,6],[204,6],[220,7],[342,6],[426,6],[446,7]]},"591":{"position":[[188,7]]},"593":{"position":[[330,7],[388,7],[488,6],[634,6],[709,7],[923,6],[1083,7]]},"595":{"position":[[115,7]]},"597":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6],[714,7]]},"599":{"position":[[77,6],[152,7],[292,6]]},"601":{"position":[[66,6],[1175,6]]},"605":{"position":[[1203,9],[2157,7],[3147,7],[4344,6],[6250,6],[6292,6],[6796,9],[7750,7],[8740,7],[9937,6],[11843,6],[11885,6],[12646,9],[12730,9],[13056,6],[13995,7],[14988,7],[16188,6],[18106,6],[18148,6],[19026,9],[19122,9],[19206,9],[19290,9],[20247,7],[21237,7],[22434,6],[24340,6],[24382,6],[24946,9],[25905,7],[26896,7],[28094,6],[30004,6],[30046,6]]},"607":{"position":[[1047,9],[2002,7],[2993,7],[4191,6],[6100,6],[6142,6],[6713,9],[7674,7],[8668,7],[9869,6],[11790,6],[11832,6],[12392,9],[12476,9],[13433,7],[14425,7],[15624,6],[17537,6],[17579,6],[18215,9],[19176,7],[20168,7],[21367,6],[23281,6],[23323,6]]},"611":{"position":[[62,7],[264,8],[303,7]]},"613":{"position":[[1044,7],[1144,6],[1290,6],[1365,7],[1579,6]]},"617":{"position":[[19,7],[119,6],[265,6],[340,7],[554,6]]},"622":{"position":[[320,7],[1074,6],[1185,7],[2178,6],[2323,7],[3607,6],[3726,6],[4834,6],[5617,6]]},"624":{"position":[[976,7],[1977,7],[3185,6],[5129,6],[5177,6],[5781,6]]},"626":{"position":[[0,6],[10,6]]},"628":{"position":[[1354,6],[1364,6],[1545,6],[1638,6]]},"630":{"position":[[867,7],[1012,7],[2104,7],[2305,7],[3662,6],[3817,6]]},"632":{"position":[[900,7],[1893,7],[3093,6],[5008,6],[5053,6]]},"634":{"position":[[869,7],[1962,7],[3320,6],[6270,7],[7264,7],[8465,6],[10383,6],[10428,6],[11331,7],[12328,7],[13532,6],[15470,6],[15508,6]]},"636":{"position":[[45,6],[55,6]]},"640":{"position":[[92,7],[192,6],[338,6],[413,7],[627,6]]},"642":{"position":[[500,9],[686,9],[767,9],[1116,9]]},"644":{"position":[[658,9],[733,9],[1665,7],[2657,7],[3856,6],[5771,6],[5812,6],[6701,7],[7692,7],[8890,6],[10801,6],[10842,6]]},"646":{"position":[[942,7],[2015,7],[3353,6],[6169,7],[7164,7],[8366,6],[10293,6],[10334,6]]},"648":{"position":[[5679,6],[6528,7],[6601,7],[7626,7],[7755,7],[9045,6],[9128,6],[11978,7],[12051,7],[13077,7],[13206,7],[14497,6],[14580,6],[17619,7],[18611,7],[19810,6],[21725,6],[21766,6],[22698,7],[23688,7],[24885,6],[26791,6],[26832,6]]},"650":{"position":[[364,9]]},"652":{"position":[[236,8]]},"654":{"position":[[321,6]]},"658":{"position":[[139,6],[333,7],[414,6],[611,6],[621,6],[696,7],[762,8]]},"660":{"position":[[1897,9],[1955,9],[2076,9],[2134,9],[2220,9],[2280,9],[2353,9],[2437,9],[2513,9],[2588,9],[3350,7],[3482,7],[3614,7],[3746,7],[3878,7],[3983,7],[4095,7],[4407,7],[4595,7],[4783,7],[4971,7],[5159,7],[5320,7],[5488,7],[5933,6],[6075,6],[6217,6],[6359,6],[6501,6],[6616,6],[6738,6]]},"666":{"position":[[436,7],[650,7],[939,6],[1977,6],[2011,6],[2329,7],[2545,7],[2836,6],[3882,6],[3916,6],[4244,7],[4458,7],[4747,6],[5785,6],[5819,6],[6142,7],[6359,7],[6651,6],[7700,6],[7734,6],[8054,7],[8269,7],[8559,6],[9600,6],[9634,6],[9958,7],[10175,7],[10467,6],[11516,6],[11550,6]]},"668":{"position":[[1499,9],[1640,9],[1767,9],[1843,9],[3014,7],[3229,7],[3519,6],[4560,6],[4594,6],[5581,7],[6671,7],[8026,6],[10267,7],[10481,7],[10770,6],[11808,6],[11842,6]]},"670":{"position":[[1942,7],[3060,7],[4443,6],[6799,7],[6908,7],[7128,7],[7312,7],[7627,6],[9064,6],[9098,6],[9224,6],[9624,7],[9733,7],[9954,7],[10138,7],[10454,6],[11894,6],[11928,6],[12054,6]]},"672":{"position":[[859,9],[1000,9],[1127,9],[1203,9],[1772,9],[1830,9],[1938,9],[2015,9],[2073,9],[2159,9],[2219,9],[2312,9],[2388,9],[2463,9],[2889,7],[3021,7],[3153,7],[3285,7],[3417,7],[3522,7],[3634,7],[3946,7],[4134,7],[4322,7],[4510,7],[4698,7],[4859,7],[5027,7],[5472,6],[5614,6],[5756,6],[5898,6],[6040,6],[6155,6],[6277,6]]},"678":{"position":[[391,7],[750,6],[812,6],[1139,7]]},"688":{"position":[[110,6]]},"692":{"position":[[1232,7],[2260,7],[3553,6],[6192,7],[7224,7],[8521,6],[11176,7],[11253,7],[11323,7],[12351,7],[12484,7],[12610,7],[13903,6],[13990,6],[14070,6],[17544,7],[18536,7],[19735,6],[21658,6],[21691,6],[22659,7],[23649,7],[24846,6],[26760,6],[26793,6],[26936,6]]},"694":{"position":[[623,6],[3647,7],[3711,7],[3784,7],[3850,7],[4875,7],[4995,7],[5124,7],[5246,7],[6536,6],[6610,6],[6693,6],[6769,6],[10158,7],[11153,7],[12355,6],[14290,6],[14323,6],[14476,6]]},"696":{"position":[[3553,7],[3630,7],[4669,7],[4802,7],[6106,6],[6193,6],[9268,7],[9363,7],[9446,7],[9529,7],[10579,7],[10730,7],[10869,7],[11008,7],[12323,6],[12428,6],[12521,6],[12614,6],[16419,7],[17408,7],[18604,6],[20515,6],[20548,6],[20751,6]]},"698":{"position":[[2352,6],[3749,7],[3827,7],[3898,7],[4927,7],[5061,7],[5188,7],[6482,6],[6570,6],[6651,6],[10132,7],[11126,7],[12327,6],[14257,6],[14290,6],[14429,6]]},"704":{"position":[[185,7],[390,6],[432,7],[693,6]]},"706":{"position":[[391,7]]},"716":{"position":[[378,7],[1716,7],[1961,6]]},"718":{"position":[[245,6],[1341,6],[1395,7],[1715,7],[1933,6],[2836,7],[3923,7],[5275,6],[8139,7],[9137,7],[10342,6],[12277,6],[12322,6],[13262,7],[14349,7],[15701,6],[18522,7],[19520,7],[20725,6],[22660,6],[22705,6],[23684,7],[24689,7],[25901,6],[27863,6],[27908,6],[28156,7],[28280,7],[28406,7],[29225,7],[29347,7],[29471,7],[30562,7],[30740,7],[30920,7],[32276,6],[32408,6],[32542,6],[36092,7],[37090,7],[38295,6],[40230,6],[40275,6],[40410,6]]},"720":{"position":[[915,7],[1908,7],[3108,6],[5022,6],[5067,6],[7615,7],[8607,7],[9806,6],[11717,6],[11762,6],[11909,6]]},"722":{"position":[[4357,6],[4411,6],[7604,7],[7694,7],[7795,7],[8856,7],[9002,7],[9159,7],[10485,6],[10585,6],[10696,6],[14311,7],[15467,7],[16888,6],[20022,7],[20092,7],[21222,7],[21348,7],[22743,6],[22823,6],[25940,7],[26021,7],[27055,7],[27192,7],[28491,6],[28582,6],[31612,7],[32670,7],[33993,6],[36760,7],[37801,7],[39107,6],[42033,7],[43023,7],[44220,6],[46127,6],[46167,6],[47125,7],[48130,7],[49342,6],[51294,6],[51350,6],[51500,6]]},"728":{"position":[[353,6]]},"732":{"position":[[139,6],[334,7],[415,6],[613,6],[623,6],[698,7],[764,8]]},"734":{"position":[[1262,9],[1321,9],[1457,9],[1522,9],[1612,9],[1946,9],[2006,9],[3376,7],[3512,7],[3688,7],[3838,7],[4924,7],[5116,7],[5348,7],[5554,7],[6905,6],[7051,6],[7237,6],[7397,6]]},"740":{"position":[[1218,7],[2206,7],[3401,6],[5303,6],[5341,6],[6333,7],[7325,7],[8524,6],[10442,6],[10480,6],[11457,7],[12545,7],[13898,6],[16685,7],[17674,7],[18870,6],[20775,6],[20813,6]]},"742":{"position":[[1774,9],[1844,9],[1920,9],[1998,9],[3192,9],[3251,9],[3410,9],[3495,9],[3554,9],[3669,9],[3734,9],[3831,9],[5328,7],[6312,7],[7503,6],[9388,6],[9426,6],[10569,7],[10721,7],[10917,7],[12025,7],[12233,7],[12485,7],[13858,6],[14020,6],[14226,6],[18091,7],[18214,7],[19302,7],[19481,7],[20834,6],[20967,6],[24227,7],[25215,7],[26410,6],[28312,6],[28350,6]]},"744":{"position":[[1893,7],[2043,7],[3159,7],[3365,7],[4746,6],[4906,6],[8573,7],[8675,7],[8756,7],[9746,7],[9923,7],[10059,7],[11276,6],[13790,6],[13828,6],[13947,6],[14029,6],[15029,7],[15131,7],[15212,7],[16203,7],[16380,7],[16516,7],[17734,6],[20251,6],[20289,6],[20408,6],[20490,6]]},"746":{"position":[[1108,9],[1178,9],[1254,9],[1332,9],[1794,9],[1853,9],[2012,9],[2097,9],[2156,9],[2271,9],[2336,9],[2433,9],[2767,9],[2827,9],[4104,7],[4240,7],[4416,7],[4566,7],[4712,7],[4863,7],[5016,7],[5169,7],[5321,7],[5472,7],[5623,7],[5819,7],[6908,7],[7100,7],[7332,7],[7538,7],[7740,7],[7947,7],[8156,7],[8365,7],[8573,7],[8780,7],[8987,7],[9239,7],[10593,6],[10739,6],[10925,6],[11085,6],[11241,6],[11402,6],[11565,6],[11728,6],[11890,6],[12051,6],[12212,6],[12418,6]]},"748":{"position":[[1508,9],[1578,9],[1654,9],[1732,9],[2261,9],[2320,9],[2479,9],[2564,9],[2623,9],[2738,9],[2803,9],[2900,9],[3234,9],[3294,9]]},"750":{"position":[[70,6],[80,6],[111,7]]},"754":{"position":[[270,6],[280,6],[355,7],[421,8],[707,6],[769,6]]},"767":{"position":[[979,7],[1118,7],[1270,7],[1424,7],[1588,7],[1755,7],[2846,7],[3041,7],[3249,7],[3459,7],[3679,7],[3902,7],[5258,6],[5407,6],[5569,6],[5733,6],[5907,6],[6084,6],[10947,7],[11097,7],[11247,7],[12354,7],[12560,7],[12766,7],[14138,6],[14298,6],[14458,6],[18102,7],[18222,7],[18356,7],[19439,7],[19615,7],[19805,7],[21153,6],[21283,6],[21427,6],[24620,7],[24768,9],[25780,7],[26771,7],[27969,6],[29878,6],[29921,6],[30959,7],[31951,7],[33150,6],[35062,6],[35105,6],[36008,7],[37003,7],[38205,6],[40139,6],[40173,6],[41062,7],[42058,7],[43261,6],[45194,6],[45233,6]]},"769":{"position":[[1081,7],[2073,7],[3272,6],[5184,6],[5223,6],[6101,6],[6367,6],[6403,6],[6459,6],[7522,8],[8416,7],[9404,7],[10599,6],[12499,6],[12538,6],[13765,7],[14762,7],[15966,6],[17902,6],[17941,6],[18152,7],[18426,7],[18513,6],[18633,7],[18755,7],[18877,7],[19871,6],[20044,9],[20105,6],[20193,9],[20265,9],[20482,6],[20650,9],[23513,7],[24509,7],[25712,6],[27645,6],[27684,6],[30187,6],[31167,7],[32154,7],[33348,6],[35245,6],[35284,6],[35771,9],[37080,9],[37333,9],[37416,9],[37488,9],[40154,7],[41141,7],[42335,6],[44232,6],[44271,6],[44393,6],[44448,6]]},"771":{"position":[[325,6],[375,6],[500,7]]},"773":{"position":[[278,7],[496,6],[538,7],[793,6],[992,7],[1061,6],[1111,6]]},"775":{"position":[[439,6],[449,6],[524,7],[590,8]]},"786":{"position":[[1135,6],[1189,7],[1566,7],[2539,7],[3568,7],[4862,6],[7607,7],[8600,7],[9800,6],[11715,6],[11760,6],[12638,7],[13667,7],[14961,6],[17663,7],[18656,7],[19856,6],[21771,6],[21816,6],[22707,7],[23701,7],[24902,6],[26820,6],[26865,6],[28793,6],[28966,6],[29858,7],[30851,7],[32051,6],[33966,6],[34011,6],[34902,7],[35895,7],[37095,6],[39010,6],[39055,6]]},"788":{"position":[[298,6],[3118,7],[3287,7],[4376,7],[4601,7],[5955,6],[6134,6],[9604,7],[10599,7],[11801,6],[13724,6],[13769,6]]},"790":{"position":[[1029,7],[2082,7],[3400,6],[6587,7],[7672,7],[9022,6],[11805,7],[12798,7],[13998,6],[15913,6],[15958,6]]},"792":{"position":[[3652,7],[3736,7],[4765,7],[4905,7],[6199,6],[6293,6],[9783,7],[10780,7],[11984,6],[13910,6],[13955,6],[14135,8],[14470,6],[14650,7],[14746,7],[14895,9],[15094,9],[16281,7],[17332,7],[18648,6]]},"796":{"position":[[160,7],[386,6],[428,7],[662,6],[971,7],[1074,7],[1143,6],[1193,6]]},"798":{"position":[[439,6],[449,6],[524,7],[590,8]]},"809":{"position":[[1105,6],[1159,7],[1477,7],[1693,6],[2539,7],[3571,7],[4868,6],[7628,7],[8624,7],[9827,6],[11754,6],[11799,6],[12674,7],[13702,7],[14995,6],[17693,7],[18685,7],[19884,6],[21795,6],[21840,6],[22731,7],[23725,7],[24926,6],[26844,6],[26889,6],[28260,7],[29369,7],[30361,7],[31560,6],[33471,6],[33516,6],[34407,7],[35400,7],[36600,6],[38515,6],[38560,6]]},"811":{"position":[[274,6],[1797,7],[2870,7],[2934,7],[3001,7],[3135,7],[4219,7],[4339,7],[4462,7],[4652,7],[6001,6],[6075,6],[6152,6],[6296,6],[10076,7],[11072,7],[12275,6],[14202,6],[14247,6]]},"813":{"position":[[303,6],[2696,7],[2847,7],[3924,7],[4131,7],[5473,6],[5634,6],[9204,7],[10203,7],[11409,6],[13343,6],[13388,6],[13568,8],[13909,6],[14092,6],[14153,7],[14249,7],[14394,9],[14595,9],[14668,9]]},"815":{"position":[[3572,7],[3738,7],[3884,7],[4973,7],[5195,7],[5397,7],[6751,6],[6927,6],[7083,6],[10730,7],[11730,7],[12937,6],[14872,6],[14925,6],[15900,7],[16902,7],[18111,6],[20053,6],[20106,6],[21009,7],[22013,7],[23224,6],[25175,6],[25228,6],[26205,7],[27207,7],[28416,6],[30358,6],[30411,6],[31311,7],[32313,7],[33522,6],[35464,6],[35517,6]]},"817":{"position":[[120,7]]}}}],["object\":\"account:check",{"_index":2388,"t":{"734":{"position":[[10151,26],[10331,26]]},"746":{"position":[[17178,26],[17358,26]]}}}],["object\":\"asset",{"_index":1498,"t":{"371":{"position":[[6287,15],[6462,15]]}}}],["object\":\"branch:east",{"_index":2410,"t":{"740":{"position":[[15799,21]]}}}],["object\":\"branch:west",{"_index":2385,"t":{"734":{"position":[[10011,21]]},"742":{"position":[[16726,21],[16882,21],[17082,21]]},"746":{"position":[[17038,21],[17662,21],[17817,21],[17974,21],[18131,21],[18287,21],[18442,21],[18597,21],[18797,21]]}}}],["object\":\"channel:gener",{"_index":2326,"t":{"722":{"position":[[12965,26],[18933,26],[24943,26],[25017,26]]}}}],["object\":\"channel:marketing_intern",{"_index":2327,"t":{"722":{"position":[[13059,37],[30544,37],[30629,37]]}}}],["object\":\"channel:proj_marketing_campaign",{"_index":2328,"t":{"722":{"position":[[13164,42],[35859,42],[40922,42]]}}}],["object\":\"company:xyz",{"_index":1190,"t":{"213":{"position":[[4873,22]]}}}],["object\":\"device:1",{"_index":2174,"t":{"692":{"position":[[5329,19],[10309,19],[16152,19],[16233,19],[16307,19]]},"694":{"position":[[8960,19],[9028,19],[9105,19],[9175,19]]},"698":{"position":[[8740,19],[8822,19],[8897,19]]}}}],["object\":\"device:2",{"_index":2226,"t":{"696":{"position":[[14996,19],[15182,19]]}}}],["object\":\"device:3",{"_index":2227,"t":{"696":{"position":[[15095,19],[15269,19]]}}}],["object\":\"device_group:group1",{"_index":2210,"t":{"696":{"position":[[8162,30],[8243,30]]}}}],["object\":\"document:2021",{"_index":2695,"t":{"809":{"position":[[6656,23],[16771,23]]},"811":{"position":[[8946,23]]},"813":{"position":[[7754,23],[7909,23]]},"815":{"position":[[9482,23],[9652,23],[9802,23]]}}}],["object\":\"document:compani",{"_index":1781,"t":{"485":{"position":[[5338,26]]}}}],["object\":\"document:may_budget.doc",{"_index":2017,"t":{"622":{"position":[[5730,34]]}}}],["object\":\"document:meeting_notes.doc",{"_index":1507,"t":{"385":{"position":[[4992,37]]},"469":{"position":[[5302,37]]},"523":{"position":[[5644,37]]}}}],["object\":\"document:plan",{"_index":1402,"t":{"318":{"position":[[5434,28]]}}}],["object\":\"document:roadmap",{"_index":2071,"t":{"646":{"position":[[5218,27]]},"648":{"position":[[11047,27],[11124,27],[16502,27],[16579,27]]}}}],["object\":\"domain:xyz",{"_index":2708,"t":{"811":{"position":[[8669,21],[8737,21],[8808,21]]}}}],["object\":\"feature:data_preview",{"_index":2043,"t":{"630":{"position":[[6111,31]]},"634":{"position":[[5240,31]]}}}],["object\":\"feature:draft_pr",{"_index":2544,"t":{"767":{"position":[[9495,28],[9821,28]]}}}],["object\":\"feature:issu",{"_index":2542,"t":{"767":{"position":[[9196,25],[9339,25],[9653,25]]}}}],["object\":\"feature:sso",{"_index":2546,"t":{"767":{"position":[[9992,22]]}}}],["object\":\"folder:not",{"_index":1759,"t":{"467":{"position":[[4897,23]]}}}],["object\":\"folder:plan",{"_index":1716,"t":{"429":{"position":[[3585,26]]}}}],["object\":\"ip",{"_index":2455,"t":{"742":{"position":[[23063,12]]},"744":{"position":[[7086,12]]}}}],["object\":\"org:contoso",{"_index":1228,"t":{"221":{"position":[[11433,22]]},"230":{"position":[[5130,22]]}}}],["object\":\"org:xyz",{"_index":1873,"t":{"543":{"position":[[5014,18]]}}}],["object\":\"organization:a",{"_index":2113,"t":{"660":{"position":[[8992,25]]},"668":{"position":[[9929,25]]},"670":{"position":[[6403,25]]},"672":{"position":[[8531,25]]}}}],["object\":\"organization:alpha",{"_index":2573,"t":{"767":{"position":[[23721,29]]}}}],["object\":\"organization:b",{"_index":2114,"t":{"660":{"position":[[9128,25],[9400,25]]},"672":{"position":[[8667,25],[8939,25]]}}}],["object\":\"organization:bay",{"_index":2574,"t":{"767":{"position":[[23845,29]]}}}],["object\":\"organization:c",{"_index":2115,"t":{"660":{"position":[[9264,25],[9536,25]]},"672":{"position":[[8803,25],[9075,25]]}}}],["object\":\"organization:contoso",{"_index":2672,"t":{"792":{"position":[[8246,31],[20493,31]]}}}],["object\":\"organization:cup",{"_index":2575,"t":{"767":{"position":[[23983,28]]}}}],["object\":\"plan:advanc",{"_index":2040,"t":{"630":{"position":[[5962,24]]}}}],["object\":\"plan:enterpris",{"_index":2568,"t":{"767":{"position":[[17169,26]]}}}],["object\":\"plan:fre",{"_index":2564,"t":{"767":{"position":[[16861,20]]}}}],["object\":\"plan:team",{"_index":2566,"t":{"767":{"position":[[17015,20]]}}}],["object\":\"project:x",{"_index":2117,"t":{"660":{"position":[[9645,20],[9761,20]]},"672":{"position":[[9184,20],[9300,20]]}}}],["object\":\"repo:1",{"_index":1858,"t":{"537":{"position":[[5322,17]]},"541":{"position":[[5307,17]]},"547":{"position":[[4851,17]]}}}],["object\":\"repo:2",{"_index":1859,"t":{"537":{"position":[[5385,17]]},"541":{"position":[[5368,17]]}}}],["object\":\"repo:contoso/tool",{"_index":2626,"t":{"786":{"position":[[6641,31],[16740,31]]},"788":{"position":[[8481,31]]},"792":{"position":[[8334,31]]}}}],["object\":\"role:media",{"_index":1480,"t":{"369":{"position":[[5857,20],[5977,20]]}}}],["object\":\"team:contoso/engin",{"_index":2639,"t":{"788":{"position":[[8308,35]]},"790":{"position":[[5251,35]]}}}],["object\":\"team:contoso/protocol",{"_index":2659,"t":{"790":{"position":[[10915,33]]}}}],["object\":\"team:writ",{"_index":1836,"t":{"521":{"position":[[4918,23]]}}}],["object\":\"timeslot:12_13",{"_index":2456,"t":{"742":{"position":[[23190,25]]},"744":{"position":[[7240,25]]}}}],["object\":\"transaction:a",{"_index":2393,"t":{"734":{"position":[[10485,24]]},"746":{"position":[[17512,24]]}}}],["object\":\"trip:europ",{"_index":1821,"t":{"505":{"position":[[5849,22],[5955,22]]}}}],["object\":\"tweet:1",{"_index":1245,"t":{"247":{"position":[[4869,18]]},"288":{"position":[[4930,18],[9841,18],[16040,18],[16217,18]]}}}],["object\":\"workspace:sandcastl",{"_index":2284,"t":{"718":{"position":[[7174,31],[17600,31],[34856,31],[34982,31],[35110,31]]}}}],["object#rel",{"_index":1429,"t":{"343":{"position":[[441,16]]}}}],["object'",{"_index":2602,"t":{"769":{"position":[[18830,8]]}}}],["object:'docu",{"_index":1886,"t":{"569":{"position":[[1222,19],[6775,19]]},"571":{"position":[[1425,19]]}}}],["object:'document:plan",{"_index":1909,"t":{"569":{"position":[[12193,27]]}}}],["object:z",{"_index":1881,"t":{"564":{"position":[[79,11],[174,10],[286,10]]}}}],["object=\"account:check",{"_index":2372,"t":{"734":{"position":[[8702,24],[8884,24]]},"746":{"position":[[13726,24],[13908,24]]}}}],["object=\"asset",{"_index":1492,"t":{"371":{"position":[[5233,13],[5410,13]]},"373":{"position":[[4197,13]]}}}],["object=\"branch:east",{"_index":2407,"t":{"740":{"position":[[15063,19]]}}}],["object=\"branch:west",{"_index":2369,"t":{"734":{"position":[[8560,19]]},"742":{"position":[[15411,19],[15569,19],[15771,19]]},"746":{"position":[[13584,19],[14216,19],[14373,19],[14532,19],[14691,19],[14849,19],[15006,19],[15163,19],[15365,19]]}}}],["object=\"channel:gener",{"_index":2320,"t":{"722":{"position":[[11835,25],[18121,25],[24030,25],[24107,25],[45361,25]]}}}],["object=\"channel:marketing_intern",{"_index":2321,"t":{"722":{"position":[[11932,36],[29694,36],[29782,36]]}}}],["object=\"channel:proj_marketing_campaign",{"_index":2322,"t":{"722":{"position":[[12040,41],[35129,41],[40226,41],[50498,41]]}}}],["object=\"company:xyz",{"_index":1187,"t":{"213":{"position":[[4215,21]]}}}],["object=\"device:1",{"_index":2171,"t":{"692":{"position":[[4659,18],[9631,18],[15176,18],[15260,18],[15337,18],[20878,18],[25987,18]]},"694":{"position":[[7872,18],[7943,18],[8023,18],[8096,18],[13501,18]]},"698":{"position":[[7758,18],[7843,18],[7921,18],[13472,18]]}}}],["object=\"device:2",{"_index":2221,"t":{"696":{"position":[[13742,18],[13934,18],[19744,18]]}}}],["object=\"device:3",{"_index":2222,"t":{"696":{"position":[[13844,18],[14024,18]]}}}],["object=\"device_group:group1",{"_index":2208,"t":{"696":{"position":[[7310,29],[7394,29]]}}}],["object=\"docu",{"_index":1901,"t":{"569":{"position":[[4731,19],[10206,19]]},"571":{"position":[[4580,19]]}}}],["object=\"document:2021",{"_index":2692,"t":{"809":{"position":[[5978,21],[10974,21],[16101,21],[21027,21],[26071,21],[32703,21],[37744,21]]},"811":{"position":[[7742,21],[13422,21]]},"813":{"position":[[6788,21],[6945,21],[12559,21]]},"815":{"position":[[8249,21],[8421,21],[8573,21],[14088,21],[19264,21],[24379,21],[29569,21],[34675,21]]}}}],["object=\"document:budget",{"_index":1438,"t":{"345":{"position":[[5330,25]]}}}],["object=\"document:compani",{"_index":1779,"t":{"485":{"position":[[4624,24]]},"487":{"position":[[4506,24]]}}}],["object=\"document:may_budget.doc",{"_index":2014,"t":{"622":{"position":[[4941,33]]},"624":{"position":[[4337,33]]}}}],["object=\"document:meeting_notes.doc",{"_index":1422,"t":{"338":{"position":[[4415,36]]},"385":{"position":[[4310,36]]},"387":{"position":[[4315,36],[9568,36]]},"469":{"position":[[4550,36]]},"471":{"position":[[4388,36]]},"523":{"position":[[4886,36]]},"525":{"position":[[4456,36]]}}}],["object=\"document:new",{"_index":419,"t":{"16":{"position":[[16384,20],[21996,20]]}}}],["object=\"document:otherdoc",{"_index":1947,"t":{"583":{"position":[[4860,27]]}}}],["object=\"document:plan",{"_index":1191,"t":{"215":{"position":[[4219,27],[9391,27]]},"221":{"position":[[5507,27],[15927,27],[20957,27]]},"232":{"position":[[4265,27]]},"312":{"position":[[4362,27],[9388,27]]},"318":{"position":[[4712,27],[9965,27],[15200,27]]},"445":{"position":[[4374,27],[9421,27]]},"449":{"position":[[4338,27],[9552,27]]},"562":{"position":[[4353,27]]},"569":{"position":[[15654,27]]},"605":{"position":[[5485,27],[11078,27],[17332,27],[23575,27],[29236,27]]},"607":{"position":[[5333,27],[11014,27],[16767,27],[22510,27]]}}}],["object=\"document:roadmap",{"_index":2059,"t":{"644":{"position":[[4999,26],[10032,26]]},"646":{"position":[[4503,26],[9512,26]]},"648":{"position":[[10231,26],[10311,26],[15684,26],[15764,26],[20953,26],[26026,26]]}}}],["object=\"document:z",{"_index":859,"t":{"114":{"position":[[1180,20]]},"192":{"position":[[1178,20]]},"194":{"position":[[1338,20]]}}}],["object=\"domain:xyz",{"_index":2705,"t":{"811":{"position":[[7457,20],[7528,20],[7602,20]]}}}],["object=\"feature:data_preview",{"_index":2037,"t":{"630":{"position":[[5137,30]]},"632":{"position":[[4237,30]]},"634":{"position":[[4490,30],[9610,30]]}}}],["object=\"feature:draft_pr",{"_index":2537,"t":{"767":{"position":[[7555,27],[7885,27]]}}}],["object=\"feature:issu",{"_index":2535,"t":{"767":{"position":[[7252,24],[7397,24],[7715,24],[44408,24]]},"769":{"position":[[4415,24],[11738,24],[17114,24],[26859,24],[34486,24],[43473,24]]}}}],["object=\"feature:sso",{"_index":2539,"t":{"767":{"position":[[8058,21]]}}}],["object=\"folder:not",{"_index":1757,"t":{"467":{"position":[[4243,22]]}}}],["object=\"folder:plan",{"_index":1712,"t":{"429":{"position":[[3023,25]]}}}],["object=\"ip",{"_index":2450,"t":{"742":{"position":[[22132,10]]},"744":{"position":[[6099,10],[12758,10],[19217,10]]}}}],["object=\"org:contoso",{"_index":1225,"t":{"221":{"position":[[10740,21]]},"230":{"position":[[4474,21]]}}}],["object=\"org:xyz",{"_index":1869,"t":{"543":{"position":[[4358,17]]}}}],["object=\"organization:a",{"_index":2104,"t":{"660":{"position":[[7169,24]]},"668":{"position":[[9193,24]]},"670":{"position":[[5638,24],[8312,24]]},"672":{"position":[[6708,24]]}}}],["object=\"organization:alpha",{"_index":2569,"t":{"767":{"position":[[22587,28],[29111,28]]}}}],["object=\"organization:b",{"_index":2105,"t":{"660":{"position":[[7307,24],[7583,24]]},"672":{"position":[[6846,24],[7122,24]]}}}],["object=\"organization:bay",{"_index":2570,"t":{"767":{"position":[[22713,28],[34293,28]]}}}],["object=\"organization:c",{"_index":2106,"t":{"660":{"position":[[7445,24],[7721,24]]},"670":{"position":[[11140,24]]},"672":{"position":[[6984,24],[7260,24]]}}}],["object=\"organization:contoso",{"_index":2668,"t":{"792":{"position":[[7400,30],[19777,30]]}}}],["object=\"organization:cup",{"_index":2571,"t":{"767":{"position":[[22853,27]]}}}],["object=\"plan:advanc",{"_index":2034,"t":{"630":{"position":[[4986,23]]},"634":{"position":[[14680,23]]}}}],["object=\"plan:enterpris",{"_index":2560,"t":{"767":{"position":[[15954,25]]}}}],["object=\"plan:fre",{"_index":2556,"t":{"767":{"position":[[15642,19]]}}}],["object=\"plan:team",{"_index":2558,"t":{"767":{"position":[[15798,19],[39351,19]]}}}],["object=\"project:x",{"_index":2108,"t":{"660":{"position":[[7832,19],[7950,19]]},"666":{"position":[[1346,19],[3245,19],[5154,19],[7061,19],[8967,19],[10877,19]]},"668":{"position":[[3927,19],[11177,19]]},"670":{"position":[[8182,19],[11010,19]]},"672":{"position":[[7371,19],[7489,19]]}}}],["object=\"repo:1",{"_index":1854,"t":{"537":{"position":[[4556,16]]},"541":{"position":[[4549,16]]},"545":{"position":[[4165,16]]},"547":{"position":[[4211,16],[9103,16]]}}}],["object=\"repo:2",{"_index":1855,"t":{"537":{"position":[[4622,16]]},"541":{"position":[[4613,16]]},"545":{"position":[[9111,16]]}}}],["object=\"repo:contoso/tool",{"_index":2624,"t":{"786":{"position":[[5969,30],[10944,30],[16068,30],[21000,30],[26047,30],[33195,30],[38239,30]]},"788":{"position":[[7475,30],[12947,30]]},"790":{"position":[[15142,30]]},"792":{"position":[[7491,30],[13132,30]]}}}],["object=\"role:media",{"_index":1475,"t":{"369":{"position":[[4949,18],[5071,18],[10287,18]]}}}],["object=\"team:contoso/engin",{"_index":2636,"t":{"788":{"position":[[7300,34]]},"790":{"position":[[4531,34]]}}}],["object=\"team:contoso/protocol",{"_index":2656,"t":{"790":{"position":[[10184,32]]}}}],["object=\"team:writ",{"_index":1834,"t":{"521":{"position":[[4260,22]]}}}],["object=\"timeslot:12_13",{"_index":2451,"t":{"742":{"position":[[22261,24]]},"744":{"position":[[6255,24],[12842,24]]}}}],["object=\"timeslot:18_19",{"_index":2468,"t":{"744":{"position":[[19301,24]]}}}],["object=\"transaction:a",{"_index":2377,"t":{"734":{"position":[[9040,23]]},"740":{"position":[[4540,23],[9667,23],[20010,23]]},"742":{"position":[[8638,23],[27549,23]]},"744":{"position":[[12635,23],[19094,23]]},"746":{"position":[[14064,23]]}}}],["object=\"trip:europ",{"_index":1817,"t":{"505":{"position":[[4989,21],[5097,21],[10238,21],[15652,21],[20767,21],[25807,21]]}}}],["object=\"tweet:1",{"_index":1240,"t":{"245":{"position":[[4489,17]]},"247":{"position":[[4221,17],[9264,17]]},"288":{"position":[[4290,17],[9199,17],[15099,17],[15250,17]]}}}],["object=\"workspace:sandcastl",{"_index":2280,"t":{"718":{"position":[[6439,30],[11491,30],[16865,30],[21874,30],[27057,30],[33710,30],[33838,30],[33968,30],[39444,30]]},"720":{"position":[[4252,30],[10949,30]]}}}],["object=i",{"_index":308,"t":{"16":{"position":[[9925,9]]},"40":{"position":[[102,9]]},"769":{"position":[[6160,9]]}}}],["object_id",{"_index":2010,"t":{"622":{"position":[[1116,9],[2220,9],[3649,9],[4876,9],[5659,9]]}}}],["object_typ",{"_index":561,"t":{"60":{"position":[[3138,17]]},"429":{"position":[[415,17]]},"471":{"position":[[6145,17]]}}}],["object_type:object_id",{"_index":1913,"t":{"571":{"position":[[385,22]]}}}],["object_type>#<rel",{"_index":562,"t":{"60":{"position":[[3168,27]]},"429":{"position":[[445,27]]}}}],["object_type>:<object_id",{"_index":1768,"t":{"471":{"position":[[5999,26]]}}}],["object_type>:<object_id>#<rel",{"_index":1770,"t":{"471":{"position":[[6176,39]]}}}],["objecttype:objectid#rel",{"_index":2710,"t":{"811":{"position":[[9158,29]]}}}],["obsolet",{"_index":2073,"t":{"648":{"position":[[87,9]]},"650":{"position":[[97,8]]}}}],["obtain",{"_index":857,"t":{"112":{"position":[[2733,6]]},"124":{"position":[[2733,6]]},"144":{"position":[[1777,6]]},"190":{"position":[[2733,6]]},"257":{"position":[[2709,6]]},"415":{"position":[[1050,6]]}}}],["occur",{"_index":1656,"t":{"417":{"position":[[421,7]]},"429":{"position":[[587,5]]},"605":{"position":[[18614,5]]}}}],["odd",{"_index":1510,"t":{"391":{"position":[[84,3]]}}}],["offer",{"_index":26,"t":{"4":{"position":[[235,6]]},"445":{"position":[[10356,5]]},"748":{"position":[[102,8]]},"754":{"position":[[997,6]]},"758":{"position":[[16,10]]},"760":{"position":[[158,8],[310,8]]}}}],["offic",{"_index":2087,"t":{"654":{"position":[[599,6]]},"702":{"position":[[269,7]]},"728":{"position":[[626,6]]},"734":{"position":[[456,6],[2494,6]]},"740":{"position":[[20983,6]]},"742":{"position":[[9725,6],[10475,6],[10627,6],[10757,6],[11897,6],[12105,6],[12291,6],[13756,6],[13918,6],[14058,6],[15321,6],[15479,6],[15615,6],[16630,6],[16786,6],[16920,6]]},"746":{"position":[[4620,6],[4770,6],[4922,6],[5075,6],[5227,6],[5378,6],[5529,6],[5659,6],[7614,6],[7820,6],[8028,6],[8237,6],[8445,6],[8652,6],[8859,6],[9045,6],[11141,6],[11301,6],[11463,6],[11626,6],[11788,6],[11949,6],[12110,6],[12250,6],[14128,6],[14284,6],[14442,6],[14601,6],[14759,6],[14916,6],[15073,6],[15209,6],[17568,6],[17722,6],[17878,6],[18035,6],[18191,6],[18346,6],[18501,6],[18635,6]]}}}],["offici",{"_index":447,"t":{"16":{"position":[[22977,8],[28809,8]]},"164":{"position":[[64,8],[113,8]]},"589":{"position":[[106,8],[173,8],[241,8],[316,8]]}}}],["oidc",{"_index":984,"t":{"144":{"position":[[141,5],[1709,5],[1733,4],[1788,4],[2092,4],[2097,5],[2111,5],[2135,5],[3073,4],[3109,4]]}}}],["old",{"_index":2082,"t":{"648":{"position":[[11231,3],[21860,3]]}}}],["on",{"_index":182,"t":{"16":{"position":[[1495,3],[3500,3],[3902,3],[6543,3],[10454,3]]},"22":{"position":[[43,3]]},"52":{"position":[[203,3],[320,3]]},"56":{"position":[[1897,3]]},"58":{"position":[[1394,3]]},"60":{"position":[[1969,3]]},"62":{"position":[[1307,3]]},"92":{"position":[[63,3]]},"259":{"position":[[2590,3],[2824,3]]},"261":{"position":[[979,3]]},"288":{"position":[[180,3],[9974,4],[10183,3]]},"290":{"position":[[668,3]]},"326":{"position":[[276,3]]},"334":{"position":[[292,4]]},"343":{"position":[[239,5]]},"349":{"position":[[1433,3]]},"365":{"position":[[828,3]]},"395":{"position":[[255,3]]},"397":{"position":[[258,4],[299,4]]},"401":{"position":[[281,3]]},"403":{"position":[[2467,3],[3022,3],[3480,3],[3571,3],[3965,3],[4984,3],[6341,3]]},"405":{"position":[[852,3]]},"423":{"position":[[340,3]]},"425":{"position":[[2136,4],[2669,3]]},"429":{"position":[[1787,3]]},"453":{"position":[[108,3],[405,3]]},"491":{"position":[[222,3]]},"539":{"position":[[961,3]]},"543":{"position":[[114,3],[159,3]]},"547":{"position":[[99,3]]},"569":{"position":[[470,3],[6020,3],[11436,3]]},"576":{"position":[[202,3]]},"583":{"position":[[6155,3]]},"599":{"position":[[357,3]]},"605":{"position":[[24652,3]]},"609":{"position":[[38,3]]},"670":{"position":[[946,3]]},"678":{"position":[[862,4]]},"710":{"position":[[130,3]]},"712":{"position":[[207,3]]},"714":{"position":[[679,3]]},"718":{"position":[[1418,3]]},"720":{"position":[[102,3]]},"722":{"position":[[1127,4],[1227,4]]},"744":{"position":[[453,3]]},"750":{"position":[[133,3]]},"754":{"position":[[819,4]]},"767":{"position":[[24867,3]]},"769":{"position":[[20519,3],[37580,3]]},"786":{"position":[[1212,3],[27003,3],[28398,3]]},"792":{"position":[[15534,4]]},"809":{"position":[[1182,3],[27027,3],[28226,3]]}}}],["onc",{"_index":1235,"t":{"232":{"position":[[0,4]]},"259":{"position":[[2504,4]]},"263":{"position":[[0,4]]},"369":{"position":[[0,4]]},"387":{"position":[[0,4]]},"397":{"position":[[622,4]]},"405":{"position":[[0,4],[3983,4]]},"407":{"position":[[124,4]]},"487":{"position":[[0,4]]},"622":{"position":[[0,4]]},"624":{"position":[[0,4]]},"758":{"position":[[408,4]]}}}],["onlin",{"_index":126,"t":{"14":{"position":[[88,6]]}}}],["open",{"_index":9,"t":{"4":{"position":[[14,4]]},"712":{"position":[[1129,4],[1210,5]]}}}],["open_fga_api",{"_index":400,"t":{"16":{"position":[[15517,12],[21129,12],[26917,12]]},"80":{"position":[[5222,12]]},"86":{"position":[[1785,12]]},"112":{"position":[[2161,12]]},"124":{"position":[[2161,12]]},"170":{"position":[[1670,12]]},"172":{"position":[[2763,12]]},"190":{"position":[[2161,12]]},"213":{"position":[[3360,12]]},"215":{"position":[[3352,12],[8523,12]]},"221":{"position":[[4645,12],[9849,12],[15060,12],[20089,12]]},"230":{"position":[[3620,12]]},"232":{"position":[[3398,12]]},"245":{"position":[[3622,12]]},"247":{"position":[[3367,12],[8397,12]]},"257":{"position":[[2137,12]]},"288":{"position":[[3440,12],[8348,12],[14201,12]]},"312":{"position":[[3494,12],[8521,12]]},"318":{"position":[[3805,12],[9098,12],[14332,12]]},"338":{"position":[[3549,12]]},"345":{"position":[[4463,12]]},"369":{"position":[[4052,12],[9418,12]]},"371":{"position":[[4284,12]]},"373":{"position":[[3330,12]]},"385":{"position":[[3458,12]]},"387":{"position":[[3449,12],[8702,12]]},"445":{"position":[[3503,12],[8551,12]]},"449":{"position":[[3466,12],[8681,12]]},"467":{"position":[[3391,12]]},"469":{"position":[[3633,12]]},"471":{"position":[[3522,12]]},"485":{"position":[[3733,12]]},"487":{"position":[[3642,12]]},"505":{"position":[[4102,12],[9364,12],[14779,12],[19891,12],[24932,12]]},"521":{"position":[[3406,12]]},"523":{"position":[[3970,12]]},"525":{"position":[[3588,12]]},"537":{"position":[[3704,12]]},"541":{"position":[[3699,12]]},"543":{"position":[[3500,12]]},"545":{"position":[[3298,12],[8244,12]]},"547":{"position":[[3360,12],[8236,12]]},"562":{"position":[[3487,12]]},"569":{"position":[[3898,12],[9392,12],[14838,12]]},"571":{"position":[[3747,12]]},"576":{"position":[[3657,12],[8991,12]]},"583":{"position":[[3833,12]]},"605":{"position":[[4618,12],[10211,12],[16462,12],[22708,12],[28368,12]]},"607":{"position":[[4466,12],[10144,12],[15899,12],[21641,12]]},"622":{"position":[[3983,12]]},"624":{"position":[[3465,12]]},"630":{"position":[[4071,12]]},"632":{"position":[[3370,12]]},"634":{"position":[[3574,12],[8743,12],[13802,12]]},"644":{"position":[[4129,12],[9163,12]]},"646":{"position":[[3603,12],[8639,12]]},"648":{"position":[[3640,12],[9378,12],[14830,12],[20083,12],[25159,12]]},"668":{"position":[[8274,12]]},"670":{"position":[[4691,12]]},"692":{"position":[[3795,12],[8763,12],[14312,12],[20000,12],[25112,12]]},"694":{"position":[[7011,12],[12620,12]]},"696":{"position":[[6446,12],[12856,12],[18869,12]]},"698":{"position":[[6893,12],[12593,12]]},"718":{"position":[[5529,12],[10619,12],[15955,12],[21002,12],[26179,12],[32796,12],[38572,12]]},"720":{"position":[[3386,12],[10083,12]]},"722":{"position":[[10961,12],[17137,12],[23072,12],[28842,12],[34258,12],[39372,12],[44493,12],[49630,12]]},"734":{"position":[[7644,12]]},"740":{"position":[[3671,12],[8794,12],[14148,12],[19141,12]]},"742":{"position":[[7774,12],[14476,12],[21215,12],[26680,12]]},"744":{"position":[[5154,12],[11766,12],[18225,12]]},"746":{"position":[[12668,12]]},"767":{"position":[[6329,12],[14707,12],[21678,12],[28244,12],[33426,12],[38471,12],[43532,12]]},"769":{"position":[[3548,12],[10871,12],[16238,12],[25983,12],[33619,12],[42606,12]]},"786":{"position":[[5116,12],[10077,12],[15215,12],[20133,12],[25180,12],[32328,12],[37372,12]]},"788":{"position":[[6388,12],[12078,12]]},"790":{"position":[[3658,12],[9278,12],[14275,12]]},"792":{"position":[[6547,12],[12266,12],[18902,12]]},"809":{"position":[[5122,12],[10104,12],[15249,12],[20161,12],[25204,12],[31837,12],[36877,12]]},"811":{"position":[[6550,12],[12552,12]]},"813":{"position":[[5888,12],[11691,12]]},"815":{"position":[[7345,12],[13222,12],[18397,12],[23509,12],[28702,12],[33808,12]]}}}],["open_fga_api.openfgaapi(openfga_sdk.apiclient(configur",{"_index":410,"t":{"16":{"position":[[16024,61],[21636,61],[27424,61]]},"80":{"position":[[5729,61]]},"86":{"position":[[2059,61]]},"112":{"position":[[2668,61]]},"124":{"position":[[2668,61]]},"170":{"position":[[1919,61]]},"172":{"position":[[3476,61]]},"190":{"position":[[2668,61]]},"213":{"position":[[3867,61]]},"215":{"position":[[3859,61],[9030,61]]},"221":{"position":[[5152,61],[10356,61],[15567,61],[20596,61]]},"230":{"position":[[4127,61]]},"232":{"position":[[3905,61]]},"245":{"position":[[4129,61]]},"247":{"position":[[3874,61],[8904,61]]},"257":{"position":[[2644,61]]},"288":{"position":[[3947,61],[8855,61],[14708,61]]},"312":{"position":[[4001,61],[9028,61]]},"318":{"position":[[4312,61],[9605,61],[14839,61]]},"338":{"position":[[4056,61]]},"345":{"position":[[4970,61]]},"369":{"position":[[4559,61],[9925,61]]},"371":{"position":[[4791,61]]},"373":{"position":[[3837,61]]},"385":{"position":[[3965,61]]},"387":{"position":[[3956,61],[9209,61]]},"445":{"position":[[4010,61],[9058,61]]},"449":{"position":[[3973,61],[9188,61]]},"467":{"position":[[3898,61]]},"469":{"position":[[4140,61]]},"471":{"position":[[4029,61]]},"485":{"position":[[4240,61]]},"487":{"position":[[4149,61]]},"505":{"position":[[4609,61],[9871,61],[15286,61],[20398,61],[25439,61]]},"521":{"position":[[3913,61]]},"523":{"position":[[4477,61]]},"525":{"position":[[4095,61]]},"537":{"position":[[4211,61]]},"541":{"position":[[4206,61]]},"543":{"position":[[4007,61]]},"545":{"position":[[3805,61],[8751,61]]},"547":{"position":[[3867,61],[8743,61]]},"562":{"position":[[3994,61]]},"569":{"position":[[4405,61],[9899,61],[15345,61]]},"571":{"position":[[4254,61]]},"576":{"position":[[4164,61],[9498,61]]},"583":{"position":[[4340,61]]},"605":{"position":[[5125,61],[10718,61],[16969,61],[23215,61],[28875,61]]},"607":{"position":[[4973,61],[10651,61],[16406,61],[22148,61]]},"622":{"position":[[4490,61]]},"624":{"position":[[3972,61]]},"630":{"position":[[4578,61]]},"632":{"position":[[3877,61]]},"634":{"position":[[4081,61],[9250,61],[14309,61]]},"644":{"position":[[4636,61],[9670,61]]},"646":{"position":[[4110,61],[9146,61]]},"648":{"position":[[4147,61],[9885,61],[15337,61],[20590,61],[25666,61]]},"668":{"position":[[8781,61]]},"670":{"position":[[5198,61]]},"692":{"position":[[4302,61],[9270,61],[14819,61],[20507,61],[25619,61]]},"694":{"position":[[7518,61],[13127,61]]},"696":{"position":[[6953,61],[13363,61],[19376,61]]},"698":{"position":[[7400,61],[13100,61]]},"718":{"position":[[6036,61],[11126,61],[16462,61],[21509,61],[26686,61],[33303,61],[39079,61]]},"720":{"position":[[3893,61],[10590,61]]},"722":{"position":[[11468,61],[17644,61],[23579,61],[29349,61],[34765,61],[39879,61],[45000,61],[50137,61]]},"734":{"position":[[8151,61]]},"740":{"position":[[4178,61],[9301,61],[14655,61],[19648,61]]},"742":{"position":[[8281,61],[14983,61],[21722,61],[27187,61]]},"744":{"position":[[5661,61],[12273,61],[18732,61]]},"746":{"position":[[13175,61]]},"767":{"position":[[6836,61],[15214,61],[22185,61],[28751,61],[33933,61],[38978,61],[44039,61]]},"769":{"position":[[4055,61],[11378,61],[16745,61],[26490,61],[34126,61],[43113,61]]},"786":{"position":[[5623,61],[10584,61],[15722,61],[20640,61],[25687,61],[32835,61],[37879,61]]},"788":{"position":[[6895,61],[12585,61]]},"790":{"position":[[4165,61],[9785,61],[14782,61]]},"792":{"position":[[7054,61],[12773,61],[19409,61]]},"809":{"position":[[5629,61],[10611,61],[15756,61],[20668,61],[25711,61],[32344,61],[37384,61]]},"811":{"position":[[7057,61],[13059,61]]},"813":{"position":[[6395,61],[12198,61]]},"815":{"position":[[7852,61],[13729,61],[18904,61],[24016,61],[29209,61],[34315,61]]}}}],["openfga",{"_index":8,"t":{"4":{"position":[[0,7]]},"16":{"position":[[4,7],[2908,7],[3016,7],[3336,7],[3401,7],[8835,8],[9951,7],[10258,7],[17353,7],[17497,7],[23080,7],[23256,7],[29518,8],[29591,7]]},"24":{"position":[[15,7]]},"36":{"position":[[84,8]]},"40":{"position":[[128,7],[435,7]]},"42":{"position":[[33,7]]},"44":{"position":[[40,7]]},"48":{"position":[[3,8],[76,7]]},"50":{"position":[[89,7],[122,7],[210,7]]},"52":{"position":[[825,7],[998,7]]},"54":{"position":[[108,7]]},"56":{"position":[[954,7],[992,7]]},"60":{"position":[[2954,7]]},"68":{"position":[[32,7],[190,7],[203,7],[845,7],[1028,7]]},"70":{"position":[[106,7],[139,7],[259,8]]},"72":{"position":[[75,8],[159,8]]},"74":{"position":[[6,7],[30,7],[177,7],[438,7],[546,7],[654,7],[777,7],[958,7],[1088,7]]},"76":{"position":[[80,7]]},"78":{"position":[[54,7],[340,7],[626,7],[912,7],[1198,7]]},"80":{"position":[[7270,7]]},"84":{"position":[[13,7],[102,7],[216,7]]},"86":{"position":[[131,7],[462,7]]},"88":{"position":[[46,7]]},"90":{"position":[[37,7],[176,7],[401,7],[540,7]]},"96":{"position":[[19,7]]},"98":{"position":[[1115,7],[4846,7]]},"100":{"position":[[146,8],[239,8],[297,8]]},"102":{"position":[[28,7],[361,7],[823,7],[1159,7]]},"104":{"position":[[53,7],[131,7],[206,7],[223,7],[271,7],[303,7],[355,7]]},"108":{"position":[[54,7],[377,7],[700,7],[1023,7],[1346,7]]},"116":{"position":[[100,7]]},"120":{"position":[[54,7],[377,7],[700,7],[1023,7],[1346,7]]},"128":{"position":[[100,7]]},"130":{"position":[[75,7]]},"132":{"position":[[31,8],[101,7],[173,7],[294,7],[397,8]]},"134":{"position":[[52,7]]},"136":{"position":[[44,7]]},"138":{"position":[[19,7]]},"140":{"position":[[22,7],[179,7],[291,7],[617,7]]},"142":{"position":[[0,7],[254,7],[348,7],[499,7],[676,7],[908,7],[983,8],[1056,7],[1287,8],[1314,7],[1613,8],[1698,7],[2173,7],[2181,8],[2299,7],[2499,7],[2789,7],[2853,7],[2932,7],[2983,8],[3366,7],[3591,7],[3670,8],[3743,7],[3954,8],[3981,7],[4260,8],[4335,7],[4824,7],[4832,8],[4950,7],[5130,7],[5417,7],[5481,7]]},"144":{"position":[[41,7],[237,7],[292,7],[492,7],[1437,7],[1926,7],[2956,7]]},"146":{"position":[[180,7]]},"148":{"position":[[221,7]]},"150":{"position":[[0,7]]},"152":{"position":[[20,7],[491,7],[542,7],[607,7],[1095,7]]},"154":{"position":[[0,7],[259,7]]},"156":{"position":[[0,7],[379,7],[467,7]]},"158":{"position":[[0,7]]},"160":{"position":[[0,7]]},"162":{"position":[[52,8],[123,7]]},"164":{"position":[[10,7],[73,7]]},"166":{"position":[[36,7],[87,7],[172,7]]},"168":{"position":[[38,7]]},"170":{"position":[[195,7],[507,7]]},"172":{"position":[[144,7],[329,7],[546,7],[1042,7]]},"174":{"position":[[73,8]]},"178":{"position":[[272,7]]},"186":{"position":[[54,7],[341,7],[628,7],[915,7],[1202,7]]},"198":{"position":[[33,7],[146,8],[291,7]]},"200":{"position":[[793,8]]},"204":{"position":[[75,7],[1060,7],[1649,7]]},"208":{"position":[[571,7]]},"221":{"position":[[75,7],[1291,7],[11519,7],[22072,7],[22661,7]]},"227":{"position":[[571,7]]},"230":{"position":[[285,7]]},"232":{"position":[[95,7]]},"236":{"position":[[152,8]]},"238":{"position":[[75,7],[779,7],[1368,7]]},"242":{"position":[[571,7]]},"245":{"position":[[372,7]]},"253":{"position":[[54,7],[376,7],[698,7],[985,7],[1272,7]]},"263":{"position":[[350,7],[704,7]]},"267":{"position":[[22,7]]},"269":{"position":[[129,7]]},"271":{"position":[[152,7]]},"273":{"position":[[1858,7],[2392,8]]},"279":{"position":[[75,7],[1379,7],[1968,7]]},"285":{"position":[[571,7]]},"290":{"position":[[577,7]]},"292":{"position":[[156,7],[200,7]]},"294":{"position":[[168,7]]},"296":{"position":[[1528,8]]},"298":{"position":[[90,8]]},"304":{"position":[[84,8]]},"306":{"position":[[65,7],[1689,7],[2278,7]]},"310":{"position":[[571,7]]},"312":{"position":[[60,7]]},"318":{"position":[[16271,7]]},"320":{"position":[[59,8],[180,7]]},"322":{"position":[[152,7]]},"328":{"position":[[66,7],[1192,7],[1781,7]]},"332":{"position":[[571,7]]},"338":{"position":[[5389,7]]},"343":{"position":[[388,8]]},"345":{"position":[[1051,7]]},"349":{"position":[[891,7]]},"353":{"position":[[74,8]]},"355":{"position":[[65,7],[1418,7]]},"363":{"position":[[0,7]]},"375":{"position":[[59,8],[296,8]]},"377":{"position":[[101,8],[180,8]]},"379":{"position":[[75,7],[771,7],[1360,7]]},"381":{"position":[[571,7]]},"383":{"position":[[92,7]]},"387":{"position":[[41,8],[5404,7],[10554,7]]},"389":{"position":[[59,8],[68,7],[101,7],[236,7]]},"391":{"position":[[379,8]]},"393":{"position":[[27,7],[258,7],[617,7],[898,7]]},"397":{"position":[[842,8]]},"399":{"position":[[4072,7],[4322,8]]},"401":{"position":[[124,7],[2493,8],[2774,7],[3444,8]]},"403":{"position":[[16,7],[689,7],[763,7],[3354,7],[3674,7],[4195,7],[4358,7],[5440,7],[5529,7],[6002,7],[6537,7],[6769,7],[7320,7],[8477,7],[8931,7],[9278,7],[10459,7]]},"405":{"position":[[312,7],[534,7],[828,7]]},"409":{"position":[[59,8],[68,7],[101,7],[159,7]]},"415":{"position":[[12,7],[365,7]]},"417":{"position":[[282,7]]},"419":{"position":[[3862,7]]},"423":{"position":[[639,7]]},"425":{"position":[[3390,7],[3514,7]]},"427":{"position":[[355,7],[427,7]]},"429":{"position":[[24,7],[143,8]]},"431":{"position":[[149,7],[1051,7]]},"433":{"position":[[190,7]]},"435":{"position":[[150,8]]},"437":{"position":[[75,7],[2678,7],[3267,7]]},"443":{"position":[[571,7]]},"445":{"position":[[60,7]]},"455":{"position":[[75,7],[1063,7],[1652,7]]},"459":{"position":[[571,7]]},"467":{"position":[[5116,8]]},"471":{"position":[[5911,7]]},"473":{"position":[[193,8]]},"477":{"position":[[75,7],[832,7],[1421,7],[1470,7],[1716,8]]},"481":{"position":[[571,7],[620,7]]},"487":{"position":[[99,7]]},"489":{"position":[[59,8],[180,7]]},"491":{"position":[[77,7],[607,9],[1048,8]]},"493":{"position":[[75,7],[922,7],[1516,7],[1540,7]]},"497":{"position":[[576,7],[600,7]]},"499":{"position":[[48,8]]},"501":{"position":[[22,7]]},"503":{"position":[[19,7]]},"505":{"position":[[27229,8]]},"507":{"position":[[184,8]]},"509":{"position":[[99,8]]},"511":{"position":[[75,7],[810,7],[1399,7]]},"515":{"position":[[571,7]]},"517":{"position":[[253,8]]},"525":{"position":[[5625,7]]},"531":{"position":[[75,7],[763,7],[1352,7]]},"535":{"position":[[571,7]]},"553":{"position":[[75,7],[1234,7],[1823,7]]},"557":{"position":[[571,7]]},"560":{"position":[[106,7]]},"562":{"position":[[5252,7]]},"593":{"position":[[66,7],[183,7],[351,7],[940,7]]},"597":{"position":[[571,7]]},"611":{"position":[[278,8]]},"613":{"position":[[65,7],[1007,7],[1596,7]]},"617":{"position":[[571,7]]},"622":{"position":[[242,8]]},"624":{"position":[[41,8],[5736,7]]},"640":{"position":[[55,7],[644,7]]},"652":{"position":[[312,7]]},"656":{"position":[[55,7]]},"658":{"position":[[245,7],[431,7]]},"666":{"position":[[66,7]]},"668":{"position":[[125,7],[682,7]]},"670":{"position":[[148,7],[406,7],[476,7],[627,8],[907,7],[6554,7],[9378,7]]},"674":{"position":[[342,7],[392,7]]},"676":{"position":[[72,8],[140,7],[159,7]]},"678":{"position":[[75,7],[152,7],[235,7],[1309,7]]},"680":{"position":[[65,7]]},"682":{"position":[[119,8],[222,8]]},"688":{"position":[[4,7],[279,8]]},"690":{"position":[[190,7],[584,8]]},"700":{"position":[[67,8],[113,8]]},"704":{"position":[[94,8]]},"706":{"position":[[75,7],[152,7],[235,7],[621,7]]},"708":{"position":[[65,7]]},"710":{"position":[[317,8]]},"716":{"position":[[43,8],[284,7],[581,8]]},"718":{"position":[[35,7],[463,7],[1287,7],[7280,7],[17712,7]]},"720":{"position":[[5307,7],[5647,7]]},"722":{"position":[[13373,8]]},"724":{"position":[[48,7],[150,8],[231,8],[273,7],[384,8]]},"728":{"position":[[245,7]]},"730":{"position":[[55,7]]},"732":{"position":[[246,7],[432,7]]},"740":{"position":[[66,7]]},"744":{"position":[[148,7],[432,7],[7342,7],[7493,8],[7736,7],[14191,7]]},"750":{"position":[[338,7],[382,7]]},"752":{"position":[[82,8],[151,7],[238,7]]},"754":{"position":[[75,7],[152,7],[235,7],[1058,7]]},"756":{"position":[[65,7]]},"758":{"position":[[184,8]]},"762":{"position":[[493,7]]},"767":{"position":[[24093,7],[24939,7],[30064,7]]},"769":{"position":[[24,7],[5320,7],[6186,7],[6477,7],[12643,7],[18434,7],[20924,7],[27793,7],[27991,7],[35425,7],[35540,7]]},"771":{"position":[[69,7],[150,7],[385,7],[572,7],[695,8]]},"773":{"position":[[81,8],[1121,8]]},"775":{"position":[[75,7],[152,7],[235,7],[798,7]]},"777":{"position":[[65,7]]},"779":{"position":[[148,8]]},"786":{"position":[[176,7],[1081,7],[6747,7],[16857,8],[27137,7]]},"788":{"position":[[312,7],[8617,7],[8717,7]]},"792":{"position":[[714,8]]},"794":{"position":[[247,8]]},"796":{"position":[[76,8],[1203,8]]},"798":{"position":[[75,7],[152,7],[235,7],[899,7]]},"800":{"position":[[65,7]]},"802":{"position":[[186,8]]},"809":{"position":[[34,7],[263,7],[1051,7],[6762,7],[16888,8],[27169,7]]},"811":{"position":[[288,7],[9082,7],[9188,7]]},"815":{"position":[[359,7]]}}}],["openfga'",{"_index":487,"t":{"52":{"position":[[4,9],[117,9],[631,9]]},"104":{"position":[[4,9]]},"405":{"position":[[214,9]]},"716":{"position":[[846,9]]}}}],["openfga.createstor",{"_index":651,"t":{"86":{"position":[[403,21]]}}}],["openfga.newapiclient(configur",{"_index":656,"t":{"86":{"position":[[856,35]]},"170":{"position":[[963,35]]},"172":{"position":[[1797,35]]}}}],["openfga.newconfiguration(openfga.configur",{"_index":653,"t":{"86":{"position":[[541,47]]},"102":{"position":[[435,47]]},"170":{"position":[[586,47]]},"172":{"position":[[1121,47]]}}}],["openfga.ptrstring(\"fga",{"_index":660,"t":{"86":{"position":[[1002,22]]}}}],["openfga.sdk",{"_index":842,"t":{"102":{"position":[[924,11],[1002,11],[1094,11]]}}}],["openfga.sdk.api",{"_index":381,"t":{"16":{"position":[[14313,16],[19925,16],[25703,16]]},"80":{"position":[[3613,16]]},"86":{"position":[[1097,16]]},"112":{"position":[[1305,16]]},"124":{"position":[[1305,16]]},"170":{"position":[[1007,16]]},"172":{"position":[[1841,16]]},"190":{"position":[[1305,16]]},"213":{"position":[[2191,16]]},"215":{"position":[[2151,16],[7320,16]]},"221":{"position":[[3448,16],[8643,16],[13859,16],[18886,16]]},"230":{"position":[[2452,16]]},"232":{"position":[[2196,16]]},"245":{"position":[[2431,16]]},"247":{"position":[[2203,16],[7205,16]]},"257":{"position":[[1281,16]]},"288":{"position":[[2280,16],[7187,16],[12825,16]]},"312":{"position":[[2292,16],[7320,16]]},"318":{"position":[[2577,16],[7896,16],[13130,16]]},"338":{"position":[[2340,16]]},"345":{"position":[[3264,16]]},"369":{"position":[[2708,16],[8214,16]]},"371":{"position":[[2830,16]]},"373":{"position":[[2126,16]]},"385":{"position":[[2277,16]]},"387":{"position":[[2240,16],[7492,16]]},"445":{"position":[[2298,16],[7347,16]]},"449":{"position":[[2260,16],[7475,16]]},"467":{"position":[[2224,16]]},"469":{"position":[[2386,16]]},"471":{"position":[[2313,16]]},"485":{"position":[[2514,16]]},"487":{"position":[[2437,16]]},"505":{"position":[[2788,16],[8162,16],[13577,16],[18687,16],[23729,16]]},"521":{"position":[[2237,16]]},"523":{"position":[[2724,16]]},"525":{"position":[[2377,16]]},"537":{"position":[[2474,16]]},"541":{"position":[[2473,16]]},"543":{"position":[[2332,16]]},"545":{"position":[[2108,16],[7054,16]]},"547":{"position":[[2200,16],[7045,16]]},"562":{"position":[[2287,16]]},"569":{"position":[[2677,16],[8192,16],[13628,16]]},"571":{"position":[[2644,16]]},"576":{"position":[[2411,16],[7745,16]]},"583":{"position":[[2489,16]]},"605":{"position":[[3417,16],[9010,16],[15258,16],[21507,16],[27166,16]]},"607":{"position":[[3264,16],[8939,16],[14696,16],[20438,16]]},"622":{"position":[[2698,16]]},"624":{"position":[[2253,16]]},"630":{"position":[[2677,16]]},"632":{"position":[[2166,16]]},"634":{"position":[[2334,16],[7538,16],[12594,16]]},"644":{"position":[[2926,16],[7961,16]]},"646":{"position":[[2383,16],[7433,16]]},"648":{"position":[[2375,16],[8123,16],[13574,16],[18880,16],[23958,16]]},"668":{"position":[[7037,16]]},"670":{"position":[[3426,16]]},"692":{"position":[[2620,16],[7584,16],[12970,16],[18797,16],[23911,16]]},"694":{"position":[[5606,16],[11414,16]]},"696":{"position":[[5173,16],[11368,16],[17669,16]]},"698":{"position":[[5548,16],[11388,16]]},"718":{"position":[[4295,16],[9410,16],[14721,16],[19793,16],[24963,16],[31292,16],[37363,16]]},"720":{"position":[[2182,16],[8880,16]]},"722":{"position":[[9542,16],[15834,16],[21715,16],[27570,16],[33053,16],[38184,16],[43292,16],[48414,16]]},"734":{"position":[[5919,16]]},"740":{"position":[[2472,16],[7591,16],[12913,16],[17941,16]]},"742":{"position":[[6579,16],[12853,16],[19847,16],[25481,16]]},"744":{"position":[[3731,16],[10347,16],[16805,16]]},"746":{"position":[[9607,16]]},"767":{"position":[[4265,16],[13133,16],[20174,16],[27042,16],[32223,16],[37265,16],[42325,16]]},"769":{"position":[[2345,16],[9672,16],[15030,16],[24776,16],[32421,16],[41408,16]]},"786":{"position":[[3940,16],[8873,16],[14039,16],[18929,16],[23975,16],[31124,16],[36168,16]]},"788":{"position":[[4973,16],[10872,16]]},"790":{"position":[[2458,16],[8046,16],[13071,16]]},"792":{"position":[[5277,16],[11058,16],[17704,16]]},"809":{"position":[[3943,16],[8897,16],[14074,16],[18958,16],[23999,16],[30634,16],[35673,16]]},"811":{"position":[[5024,16],[11345,16]]},"813":{"position":[[4503,16],[10481,16]]},"815":{"position":[[5777,16],[12011,16],[17184,16],[22294,16],[27489,16],[32595,16]]}}}],["openfga.sdk.configur",{"_index":382,"t":{"16":{"position":[[14336,26],[19948,26],[25726,26]]},"80":{"position":[[3636,26]]},"86":{"position":[[1120,26]]},"112":{"position":[[1328,26]]},"124":{"position":[[1328,26]]},"170":{"position":[[1030,26]]},"172":{"position":[[1864,26]]},"190":{"position":[[1328,26]]},"213":{"position":[[2214,26]]},"215":{"position":[[2174,26],[7343,26]]},"221":{"position":[[3471,26],[8666,26],[13882,26],[18909,26]]},"230":{"position":[[2475,26]]},"232":{"position":[[2219,26]]},"245":{"position":[[2454,26]]},"247":{"position":[[2226,26],[7228,26]]},"257":{"position":[[1304,26]]},"288":{"position":[[2303,26],[7210,26],[12848,26]]},"312":{"position":[[2315,26],[7343,26]]},"318":{"position":[[2600,26],[7919,26],[13153,26]]},"338":{"position":[[2363,26]]},"345":{"position":[[3287,26]]},"369":{"position":[[2731,26],[8237,26]]},"371":{"position":[[2853,26]]},"373":{"position":[[2149,26]]},"385":{"position":[[2300,26]]},"387":{"position":[[2263,26],[7515,26]]},"445":{"position":[[2321,26],[7370,26]]},"449":{"position":[[2283,26],[7498,26]]},"467":{"position":[[2247,26]]},"469":{"position":[[2409,26]]},"471":{"position":[[2336,26]]},"485":{"position":[[2537,26]]},"487":{"position":[[2460,26]]},"505":{"position":[[2811,26],[8185,26],[13600,26],[18710,26],[23752,26]]},"521":{"position":[[2260,26]]},"523":{"position":[[2747,26]]},"525":{"position":[[2400,26]]},"537":{"position":[[2497,26]]},"541":{"position":[[2496,26]]},"543":{"position":[[2355,26]]},"545":{"position":[[2131,26],[7077,26]]},"547":{"position":[[2223,26],[7068,26]]},"562":{"position":[[2310,26]]},"569":{"position":[[2700,26],[8215,26],[13651,26]]},"571":{"position":[[2667,26]]},"576":{"position":[[2434,26],[7768,26]]},"583":{"position":[[2512,26]]},"605":{"position":[[3440,26],[9033,26],[15281,26],[21530,26],[27189,26]]},"607":{"position":[[3287,26],[8962,26],[14719,26],[20461,26]]},"622":{"position":[[2721,26]]},"624":{"position":[[2276,26]]},"630":{"position":[[2700,26]]},"632":{"position":[[2189,26]]},"634":{"position":[[2357,26],[7561,26],[12617,26]]},"644":{"position":[[2949,26],[7984,26]]},"646":{"position":[[2406,26],[7456,26]]},"648":{"position":[[2398,26],[8146,26],[13597,26],[18903,26],[23981,26]]},"668":{"position":[[7060,26]]},"670":{"position":[[3449,26]]},"692":{"position":[[2643,26],[7607,26],[12993,26],[18820,26],[23934,26]]},"694":{"position":[[5629,26],[11437,26]]},"696":{"position":[[5196,26],[11391,26],[17692,26]]},"698":{"position":[[5571,26],[11411,26]]},"718":{"position":[[4318,26],[9433,26],[14744,26],[19816,26],[24986,26],[31315,26],[37386,26]]},"720":{"position":[[2205,26],[8903,26]]},"722":{"position":[[9565,26],[15857,26],[21738,26],[27593,26],[33076,26],[38207,26],[43315,26],[48437,26]]},"734":{"position":[[5942,26]]},"740":{"position":[[2495,26],[7614,26],[12936,26],[17964,26]]},"742":{"position":[[6602,26],[12876,26],[19870,26],[25504,26]]},"744":{"position":[[3754,26],[10370,26],[16828,26]]},"746":{"position":[[9630,26]]},"767":{"position":[[4288,26],[13156,26],[20197,26],[27065,26],[32246,26],[37288,26],[42348,26]]},"769":{"position":[[2368,26],[9695,26],[15053,26],[24799,26],[32444,26],[41431,26]]},"786":{"position":[[3963,26],[8896,26],[14062,26],[18952,26],[23998,26],[31147,26],[36191,26]]},"788":{"position":[[4996,26],[10895,26]]},"790":{"position":[[2481,26],[8069,26],[13094,26]]},"792":{"position":[[5300,26],[11081,26],[17727,26]]},"809":{"position":[[3966,26],[8920,26],[14097,26],[18981,26],[24022,26],[30657,26],[35696,26]]},"811":{"position":[[5047,26],[11368,26]]},"813":{"position":[[4526,26],[10504,26]]},"815":{"position":[[5800,26],[12034,26],[17207,26],[22317,26],[27512,26],[32618,26]]}}}],["openfga.sdk.model.createstorerequest",{"_index":663,"t":{"86":{"position":[[1655,38]]}}}],["openfga/go",{"_index":832,"t":{"102":{"position":[[243,11]]}}}],["openfga/openfga",{"_index":882,"t":{"138":{"position":[[137,15],[239,15]]},"142":{"position":[[1130,15],[1379,15],[3817,15],[4046,15]]},"144":{"position":[[1502,15],[3021,15]]},"148":{"position":[[365,15],[611,15]]},"152":{"position":[[183,15],[319,15]]}}}],["openfga/openfga:latest",{"_index":951,"t":{"142":{"position":[[1956,22],[2260,22],[4627,22],[4911,22]]}}}],["openfga/sdk",{"_index":650,"t":{"86":{"position":[[109,15]]},"98":{"position":[[959,15]]},"102":{"position":[[117,13],[154,12],[188,12]]},"170":{"position":[[173,15]]},"172":{"position":[[524,15]]}}}],["openfga_",{"_index":911,"t":{"140":{"position":[[776,8]]}}}],["openfga_allow_evaluating_1_0_model",{"_index":1727,"t":{"431":{"position":[[561,35],[1110,35]]}}}],["openfga_allow_writing_1_0_model",{"_index":1723,"t":{"431":{"position":[[269,32],[1073,32]]}}}],["openfga_authn_method=oidc",{"_index":1005,"t":{"144":{"position":[[2302,26]]}}}],["openfga_authn_method=preshar",{"_index":992,"t":{"144":{"position":[[853,31]]}}}],["openfga_authn_oidc_audience=oidc",{"_index":1007,"t":{"144":{"position":[[2451,32]]}}}],["openfga_authn_oidc_issuer=oidc",{"_index":1006,"t":{"144":{"position":[[2371,30]]}}}],["openfga_authn_preshared_keys=\"key1,key2",{"_index":993,"t":{"144":{"position":[[927,40]]}}}],["openfga_datastore_engine=mysql",{"_index":980,"t":{"142":{"position":[[4706,30],[4973,30]]}}}],["openfga_datastore_engine=postgr",{"_index":952,"t":{"142":{"position":[[2035,33],[2322,33]]}}}],["openfga_datastore_uri=postgres://postgres:password@postgres:5432/postgres?sslmode=dis",{"_index":953,"t":{"142":{"position":[[2071,89],[2358,89]]}}}],["openfga_datastore_uri=root:secret@tcp(mysql:3306)/openfga?parsetime=tru",{"_index":981,"t":{"142":{"position":[[4739,72],[5006,72]]}}}],["openfga_experimentals=\"feature1",{"_index":1049,"t":{"152":{"position":[[338,32]]}}}],["openfga_grpc_tls_key",{"_index":913,"t":{"140":{"position":[[854,22]]}}}],["openfga_http_tls_cert=/users/myuser/key/server.crt",{"_index":996,"t":{"144":{"position":[[1092,50],[2617,50]]}}}],["openfga_http_tls_enabled=tru",{"_index":994,"t":{"144":{"position":[[1010,29],[2535,29]]}}}],["openfga_http_tls_key=/users/myuser/key/server.key",{"_index":997,"t":{"144":{"position":[[1187,49],[2712,49]]}}}],["openfga_log_format=json",{"_index":955,"t":{"142":{"position":[[2450,23],[5081,23]]}}}],["openfga_metrics_addr",{"_index":1082,"t":{"156":{"position":[[321,21]]}}}],["openfga_metrics_enable_rpc_histogram",{"_index":1087,"t":{"156":{"position":[[544,38]]}}}],["openfga_metrics_enabled=fals",{"_index":1080,"t":{"156":{"position":[[197,29]]}}}],["openfga_sdk",{"_index":398,"t":{"16":{"position":[[15477,11],[21089,11],[26877,11]]},"80":{"position":[[5182,11]]},"86":{"position":[[1745,11]]},"102":{"position":[[1225,11],[1288,11]]},"112":{"position":[[2121,11]]},"124":{"position":[[2121,11]]},"170":{"position":[[1630,11]]},"172":{"position":[[2723,11]]},"190":{"position":[[2121,11]]},"213":{"position":[[3320,11]]},"215":{"position":[[3312,11],[8483,11]]},"221":{"position":[[4605,11],[9809,11],[15020,11],[20049,11]]},"230":{"position":[[3580,11]]},"232":{"position":[[3358,11]]},"245":{"position":[[3582,11]]},"247":{"position":[[3327,11],[8357,11]]},"257":{"position":[[2097,11]]},"288":{"position":[[3400,11],[8308,11],[14161,11]]},"312":{"position":[[3454,11],[8481,11]]},"318":{"position":[[3765,11],[9058,11],[14292,11]]},"338":{"position":[[3509,11]]},"345":{"position":[[4423,11]]},"369":{"position":[[4012,11],[9378,11]]},"371":{"position":[[4244,11]]},"373":{"position":[[3290,11]]},"385":{"position":[[3418,11]]},"387":{"position":[[3409,11],[8662,11]]},"445":{"position":[[3463,11],[8511,11]]},"449":{"position":[[3426,11],[8641,11]]},"467":{"position":[[3351,11]]},"469":{"position":[[3593,11]]},"471":{"position":[[3482,11]]},"485":{"position":[[3693,11]]},"487":{"position":[[3602,11]]},"505":{"position":[[4062,11],[9324,11],[14739,11],[19851,11],[24892,11]]},"521":{"position":[[3366,11]]},"523":{"position":[[3930,11]]},"525":{"position":[[3548,11]]},"537":{"position":[[3664,11]]},"541":{"position":[[3659,11]]},"543":{"position":[[3460,11]]},"545":{"position":[[3258,11],[8204,11]]},"547":{"position":[[3320,11],[8196,11]]},"562":{"position":[[3447,11]]},"569":{"position":[[3858,11],[9352,11],[14798,11]]},"571":{"position":[[3707,11]]},"576":{"position":[[3617,11],[8951,11]]},"583":{"position":[[3793,11]]},"605":{"position":[[4578,11],[10171,11],[16422,11],[22668,11],[28328,11]]},"607":{"position":[[4426,11],[10104,11],[15859,11],[21601,11]]},"622":{"position":[[3943,11]]},"624":{"position":[[3425,11]]},"630":{"position":[[4031,11]]},"632":{"position":[[3330,11]]},"634":{"position":[[3534,11],[8703,11],[13762,11]]},"644":{"position":[[4089,11],[9123,11]]},"646":{"position":[[3563,11],[8599,11]]},"648":{"position":[[3600,11],[9338,11],[14790,11],[20043,11],[25119,11]]},"668":{"position":[[8234,11]]},"670":{"position":[[4651,11]]},"692":{"position":[[3755,11],[8723,11],[14272,11],[19960,11],[25072,11]]},"694":{"position":[[6971,11],[12580,11]]},"696":{"position":[[6406,11],[12816,11],[18829,11]]},"698":{"position":[[6853,11],[12553,11]]},"718":{"position":[[5489,11],[10579,11],[15915,11],[20962,11],[26139,11],[32756,11],[38532,11]]},"720":{"position":[[3346,11],[10043,11]]},"722":{"position":[[10921,11],[17097,11],[23032,11],[28802,11],[34218,11],[39332,11],[44453,11],[49590,11]]},"734":{"position":[[7604,11]]},"740":{"position":[[3631,11],[8754,11],[14108,11],[19101,11]]},"742":{"position":[[7734,11],[14436,11],[21175,11],[26640,11]]},"744":{"position":[[5114,11],[11726,11],[18185,11]]},"746":{"position":[[12628,11]]},"767":{"position":[[6289,11],[14667,11],[21638,11],[28204,11],[33386,11],[38431,11],[43492,11]]},"769":{"position":[[3508,11],[10831,11],[16198,11],[25943,11],[33579,11],[42566,11]]},"786":{"position":[[5076,11],[10037,11],[15175,11],[20093,11],[25140,11],[32288,11],[37332,11]]},"788":{"position":[[6348,11],[12038,11]]},"790":{"position":[[3618,11],[9238,11],[14235,11]]},"792":{"position":[[6507,11],[12226,11],[18862,11]]},"809":{"position":[[5082,11],[10064,11],[15209,11],[20121,11],[25164,11],[31797,11],[36837,11]]},"811":{"position":[[6510,11],[12512,11]]},"813":{"position":[[5848,11],[11651,11]]},"815":{"position":[[7305,11],[13182,11],[18357,11],[23469,11],[28662,11],[33768,11]]}}}],["openfga_sdk.api",{"_index":399,"t":{"16":{"position":[[15494,15],[21106,15],[26894,15]]},"80":{"position":[[5199,15]]},"86":{"position":[[1762,15]]},"112":{"position":[[2138,15]]},"124":{"position":[[2138,15]]},"170":{"position":[[1647,15]]},"172":{"position":[[2740,15]]},"190":{"position":[[2138,15]]},"213":{"position":[[3337,15]]},"215":{"position":[[3329,15],[8500,15]]},"221":{"position":[[4622,15],[9826,15],[15037,15],[20066,15]]},"230":{"position":[[3597,15]]},"232":{"position":[[3375,15]]},"245":{"position":[[3599,15]]},"247":{"position":[[3344,15],[8374,15]]},"257":{"position":[[2114,15]]},"288":{"position":[[3417,15],[8325,15],[14178,15]]},"312":{"position":[[3471,15],[8498,15]]},"318":{"position":[[3782,15],[9075,15],[14309,15]]},"338":{"position":[[3526,15]]},"345":{"position":[[4440,15]]},"369":{"position":[[4029,15],[9395,15]]},"371":{"position":[[4261,15]]},"373":{"position":[[3307,15]]},"385":{"position":[[3435,15]]},"387":{"position":[[3426,15],[8679,15]]},"445":{"position":[[3480,15],[8528,15]]},"449":{"position":[[3443,15],[8658,15]]},"467":{"position":[[3368,15]]},"469":{"position":[[3610,15]]},"471":{"position":[[3499,15]]},"485":{"position":[[3710,15]]},"487":{"position":[[3619,15]]},"505":{"position":[[4079,15],[9341,15],[14756,15],[19868,15],[24909,15]]},"521":{"position":[[3383,15]]},"523":{"position":[[3947,15]]},"525":{"position":[[3565,15]]},"537":{"position":[[3681,15]]},"541":{"position":[[3676,15]]},"543":{"position":[[3477,15]]},"545":{"position":[[3275,15],[8221,15]]},"547":{"position":[[3337,15],[8213,15]]},"562":{"position":[[3464,15]]},"569":{"position":[[3875,15],[9369,15],[14815,15]]},"571":{"position":[[3724,15]]},"576":{"position":[[3634,15],[8968,15]]},"583":{"position":[[3810,15]]},"605":{"position":[[4595,15],[10188,15],[16439,15],[22685,15],[28345,15]]},"607":{"position":[[4443,15],[10121,15],[15876,15],[21618,15]]},"622":{"position":[[3960,15]]},"624":{"position":[[3442,15]]},"630":{"position":[[4048,15]]},"632":{"position":[[3347,15]]},"634":{"position":[[3551,15],[8720,15],[13779,15]]},"644":{"position":[[4106,15],[9140,15]]},"646":{"position":[[3580,15],[8616,15]]},"648":{"position":[[3617,15],[9355,15],[14807,15],[20060,15],[25136,15]]},"668":{"position":[[8251,15]]},"670":{"position":[[4668,15]]},"692":{"position":[[3772,15],[8740,15],[14289,15],[19977,15],[25089,15]]},"694":{"position":[[6988,15],[12597,15]]},"696":{"position":[[6423,15],[12833,15],[18846,15]]},"698":{"position":[[6870,15],[12570,15]]},"718":{"position":[[5506,15],[10596,15],[15932,15],[20979,15],[26156,15],[32773,15],[38549,15]]},"720":{"position":[[3363,15],[10060,15]]},"722":{"position":[[10938,15],[17114,15],[23049,15],[28819,15],[34235,15],[39349,15],[44470,15],[49607,15]]},"734":{"position":[[7621,15]]},"740":{"position":[[3648,15],[8771,15],[14125,15],[19118,15]]},"742":{"position":[[7751,15],[14453,15],[21192,15],[26657,15]]},"744":{"position":[[5131,15],[11743,15],[18202,15]]},"746":{"position":[[12645,15]]},"767":{"position":[[6306,15],[14684,15],[21655,15],[28221,15],[33403,15],[38448,15],[43509,15]]},"769":{"position":[[3525,15],[10848,15],[16215,15],[25960,15],[33596,15],[42583,15]]},"786":{"position":[[5093,15],[10054,15],[15192,15],[20110,15],[25157,15],[32305,15],[37349,15]]},"788":{"position":[[6365,15],[12055,15]]},"790":{"position":[[3635,15],[9255,15],[14252,15]]},"792":{"position":[[6524,15],[12243,15],[18879,15]]},"809":{"position":[[5099,15],[10081,15],[15226,15],[20138,15],[25181,15],[31814,15],[36854,15]]},"811":{"position":[[6527,15],[12529,15]]},"813":{"position":[[5865,15],[11668,15]]},"815":{"position":[[7322,15],[13199,15],[18374,15],[23486,15],[28679,15],[33785,15]]}}}],["openfga_sdk.apiexcept",{"_index":671,"t":{"86":{"position":[[2284,24]]}}}],["openfga_sdk.configur",{"_index":401,"t":{"16":{"position":[[15546,26],[21158,26],[26946,26]]},"80":{"position":[[5251,26]]},"86":{"position":[[1885,26]]},"112":{"position":[[2190,26]]},"124":{"position":[[2190,26]]},"170":{"position":[[1699,26]]},"172":{"position":[[2994,26]]},"190":{"position":[[2190,26]]},"213":{"position":[[3389,26]]},"215":{"position":[[3381,26],[8552,26]]},"221":{"position":[[4674,26],[9878,26],[15089,26],[20118,26]]},"230":{"position":[[3649,26]]},"232":{"position":[[3427,26]]},"245":{"position":[[3651,26]]},"247":{"position":[[3396,26],[8426,26]]},"257":{"position":[[2166,26]]},"288":{"position":[[3469,26],[8377,26],[14230,26]]},"312":{"position":[[3523,26],[8550,26]]},"318":{"position":[[3834,26],[9127,26],[14361,26]]},"338":{"position":[[3578,26]]},"345":{"position":[[4492,26]]},"369":{"position":[[4081,26],[9447,26]]},"371":{"position":[[4313,26]]},"373":{"position":[[3359,26]]},"385":{"position":[[3487,26]]},"387":{"position":[[3478,26],[8731,26]]},"445":{"position":[[3532,26],[8580,26]]},"449":{"position":[[3495,26],[8710,26]]},"467":{"position":[[3420,26]]},"469":{"position":[[3662,26]]},"471":{"position":[[3551,26]]},"485":{"position":[[3762,26]]},"487":{"position":[[3671,26]]},"505":{"position":[[4131,26],[9393,26],[14808,26],[19920,26],[24961,26]]},"521":{"position":[[3435,26]]},"523":{"position":[[3999,26]]},"525":{"position":[[3617,26]]},"537":{"position":[[3733,26]]},"541":{"position":[[3728,26]]},"543":{"position":[[3529,26]]},"545":{"position":[[3327,26],[8273,26]]},"547":{"position":[[3389,26],[8265,26]]},"562":{"position":[[3516,26]]},"569":{"position":[[3927,26],[9421,26],[14867,26]]},"571":{"position":[[3776,26]]},"576":{"position":[[3686,26],[9020,26]]},"583":{"position":[[3862,26]]},"605":{"position":[[4647,26],[10240,26],[16491,26],[22737,26],[28397,26]]},"607":{"position":[[4495,26],[10173,26],[15928,26],[21670,26]]},"622":{"position":[[4012,26]]},"624":{"position":[[3494,26]]},"630":{"position":[[4100,26]]},"632":{"position":[[3399,26]]},"634":{"position":[[3603,26],[8772,26],[13831,26]]},"644":{"position":[[4158,26],[9192,26]]},"646":{"position":[[3632,26],[8668,26]]},"648":{"position":[[3669,26],[9407,26],[14859,26],[20112,26],[25188,26]]},"668":{"position":[[8303,26]]},"670":{"position":[[4720,26]]},"692":{"position":[[3824,26],[8792,26],[14341,26],[20029,26],[25141,26]]},"694":{"position":[[7040,26],[12649,26]]},"696":{"position":[[6475,26],[12885,26],[18898,26]]},"698":{"position":[[6922,26],[12622,26]]},"718":{"position":[[5558,26],[10648,26],[15984,26],[21031,26],[26208,26],[32825,26],[38601,26]]},"720":{"position":[[3415,26],[10112,26]]},"722":{"position":[[10990,26],[17166,26],[23101,26],[28871,26],[34287,26],[39401,26],[44522,26],[49659,26]]},"734":{"position":[[7673,26]]},"740":{"position":[[3700,26],[8823,26],[14177,26],[19170,26]]},"742":{"position":[[7803,26],[14505,26],[21244,26],[26709,26]]},"744":{"position":[[5183,26],[11795,26],[18254,26]]},"746":{"position":[[12697,26]]},"767":{"position":[[6358,26],[14736,26],[21707,26],[28273,26],[33455,26],[38500,26],[43561,26]]},"769":{"position":[[3577,26],[10900,26],[16267,26],[26012,26],[33648,26],[42635,26]]},"786":{"position":[[5145,26],[10106,26],[15244,26],[20162,26],[25209,26],[32357,26],[37401,26]]},"788":{"position":[[6417,26],[12107,26]]},"790":{"position":[[3687,26],[9307,26],[14304,26]]},"792":{"position":[[6576,26],[12295,26],[18931,26]]},"809":{"position":[[5151,26],[10133,26],[15278,26],[20190,26],[25233,26],[31866,26],[36906,26]]},"811":{"position":[[6579,26],[12581,26]]},"813":{"position":[[5917,26],[11720,26]]},"815":{"position":[[7374,26],[13251,26],[18426,26],[23538,26],[28731,26],[33837,26]]}}}],["openfga_sdk.credenti",{"_index":1132,"t":{"172":{"position":[[2781,23]]}}}],["openfga_sdk.models.check_request",{"_index":411,"t":{"16":{"position":[[16093,32],[21705,32]]},"114":{"position":[[889,32]]},"215":{"position":[[3928,32],[9099,32]]},"221":{"position":[[5221,32],[15636,32],[20665,32]]},"232":{"position":[[3974,32]]},"245":{"position":[[4198,32]]},"247":{"position":[[8973,32]]},"312":{"position":[[4070,32],[9097,32]]},"318":{"position":[[9674,32],[14908,32]]},"338":{"position":[[4125,32]]},"345":{"position":[[5039,32]]},"369":{"position":[[9994,32]]},"373":{"position":[[3906,32]]},"387":{"position":[[4025,32],[9278,32]]},"445":{"position":[[4079,32],[9127,32]]},"449":{"position":[[4042,32],[9257,32]]},"471":{"position":[[4098,32]]},"487":{"position":[[4218,32]]},"505":{"position":[[9940,32],[15355,32],[20467,32],[25508,32]]},"525":{"position":[[4164,32]]},"545":{"position":[[3874,32],[8820,32]]},"547":{"position":[[8812,32]]},"562":{"position":[[4063,32]]},"605":{"position":[[5194,32],[10787,32],[17038,32],[23284,32],[28944,32]]},"607":{"position":[[5042,32],[10720,32],[16475,32],[22217,32]]},"624":{"position":[[4041,32]]},"632":{"position":[[3946,32]]},"634":{"position":[[9319,32],[14378,32]]},"644":{"position":[[4705,32],[9739,32]]},"646":{"position":[[9215,32]]},"648":{"position":[[20659,32],[25735,32]]},"666":{"position":[[1053,32],[2950,32],[4861,32],[6766,32],[8674,32],[10582,32]]},"668":{"position":[[3634,32],[10884,32]]},"670":{"position":[[7889,32],[10717,32]]},"692":{"position":[[20576,32],[25688,32]]},"694":{"position":[[13196,32]]},"696":{"position":[[19445,32]]},"698":{"position":[[13169,32]]},"718":{"position":[[11195,32],[21578,32],[26755,32],[39148,32]]},"720":{"position":[[3962,32],[10659,32]]},"722":{"position":[[45069,32],[50206,32]]},"740":{"position":[[4247,32],[9370,32],[19717,32]]},"742":{"position":[[8350,32],[27256,32]]},"744":{"position":[[12342,32],[18801,32]]},"767":{"position":[[28820,32],[34002,32],[39047,32],[44108,32]]},"769":{"position":[[4124,32],[11447,32],[16814,32],[26559,32],[34195,32],[43182,32]]},"786":{"position":[[10653,32],[20709,32],[25756,32],[32904,32],[37948,32]]},"788":{"position":[[12654,32]]},"790":{"position":[[14851,32]]},"792":{"position":[[12842,32]]},"809":{"position":[[10680,32],[20737,32],[25780,32],[32413,32],[37453,32]]},"811":{"position":[[13128,32]]},"813":{"position":[[12267,32]]},"815":{"position":[[13798,32],[18973,32],[24085,32],[29278,32],[34384,32]]}}}],["openfga_sdk.models.contextual_tuple_key",{"_index":413,"t":{"16":{"position":[[16205,40],[21817,40],[27618,40]]},"114":{"position":[[1001,40]]},"126":{"position":[[1055,40]]},"215":{"position":[[4040,40],[9211,40]]},"221":{"position":[[5333,40],[15748,40],[20777,40]]},"232":{"position":[[4086,40]]},"245":{"position":[[4310,40]]},"247":{"position":[[9085,40]]},"312":{"position":[[4182,40],[9209,40]]},"318":{"position":[[9786,40],[15020,40]]},"338":{"position":[[4237,40]]},"345":{"position":[[5151,40]]},"369":{"position":[[10106,40]]},"373":{"position":[[4018,40]]},"387":{"position":[[4137,40],[9390,40]]},"445":{"position":[[4191,40],[9239,40]]},"449":{"position":[[4154,40],[9369,40]]},"471":{"position":[[4210,40]]},"487":{"position":[[4330,40]]},"505":{"position":[[10052,40],[15467,40],[20579,40],[25620,40]]},"525":{"position":[[4276,40]]},"545":{"position":[[3986,40],[8932,40]]},"547":{"position":[[8924,40]]},"562":{"position":[[4175,40]]},"583":{"position":[[4534,40]]},"605":{"position":[[5306,40],[10899,40],[17150,40],[23396,40],[29056,40]]},"607":{"position":[[5154,40],[10832,40],[16587,40],[22329,40]]},"624":{"position":[[4153,40]]},"632":{"position":[[4058,40]]},"634":{"position":[[9431,40],[14490,40]]},"644":{"position":[[4817,40],[9851,40]]},"646":{"position":[[9327,40]]},"648":{"position":[[20771,40],[25847,40]]},"666":{"position":[[1165,40],[3062,40],[4973,40],[6878,40],[8786,40],[10694,40]]},"668":{"position":[[3746,40],[10996,40]]},"670":{"position":[[8001,40],[10829,40]]},"692":{"position":[[20688,40],[25800,40]]},"694":{"position":[[13308,40]]},"696":{"position":[[19557,40]]},"698":{"position":[[13281,40]]},"718":{"position":[[11307,40],[21690,40],[26867,40],[39260,40]]},"720":{"position":[[4074,40],[10771,40]]},"722":{"position":[[45181,40],[50318,40]]},"740":{"position":[[4359,40],[9482,40],[19829,40]]},"742":{"position":[[8462,40],[27368,40]]},"744":{"position":[[12454,40],[18913,40]]},"767":{"position":[[28932,40],[34114,40],[39159,40],[44220,40]]},"769":{"position":[[4236,40],[11559,40],[16926,40],[26671,40],[34307,40],[43294,40]]},"786":{"position":[[10765,40],[20821,40],[25868,40],[33016,40],[38060,40]]},"788":{"position":[[12766,40]]},"790":{"position":[[14963,40]]},"792":{"position":[[12954,40]]},"809":{"position":[[10792,40],[20849,40],[25892,40],[32525,40],[37565,40]]},"811":{"position":[[13240,40]]},"813":{"position":[[12379,40]]},"815":{"position":[[13910,40],[19085,40],[24197,40],[29390,40],[34496,40]]}}}],["openfga_sdk.models.create_store_request",{"_index":664,"t":{"86":{"position":[[1803,39]]}}}],["openfga_sdk.models.expand_request",{"_index":1925,"t":{"576":{"position":[[4233,33],[9567,33]]}}}],["openfga_sdk.models.expand_respons",{"_index":1927,"t":{"576":{"position":[[4295,34],[9629,34]]}}}],["openfga_sdk.models.list_objects_request",{"_index":460,"t":{"16":{"position":[[27493,39]]},"126":{"position":[[930,39]]},"583":{"position":[[4409,39]]}}}],["openfga_sdk.models.read_request",{"_index":1896,"t":{"569":{"position":[[4474,31],[9968,31],[15414,31]]},"571":{"position":[[4323,31]]},"648":{"position":[[4216,31]]}}}],["openfga_sdk.models.read_respons",{"_index":1898,"t":{"569":{"position":[[4532,32],[10026,32],[15472,32]]},"571":{"position":[[4381,32]]},"648":{"position":[[4274,32]]}}}],["openfga_sdk.models.tuple_key",{"_index":412,"t":{"16":{"position":[[16153,28],[21765,28],[27566,28]]},"114":{"position":[[949,28]]},"126":{"position":[[1003,28]]},"192":{"position":[[901,28],[953,29]]},"194":{"position":[[1060,28],[1112,29]]},"213":{"position":[[3936,28],[3988,29]]},"215":{"position":[[3988,28],[9159,28]]},"221":{"position":[[5281,28],[10425,28],[10477,29],[15696,28],[20725,28]]},"230":{"position":[[4196,28],[4248,29]]},"232":{"position":[[4034,28]]},"245":{"position":[[4258,28]]},"247":{"position":[[3943,28],[3995,29],[9033,28]]},"288":{"position":[[4016,28],[4068,29],[8924,28],[8976,29],[14777,28],[14829,29]]},"312":{"position":[[4130,28],[9157,28]]},"318":{"position":[[4381,28],[4433,29],[9734,28],[14968,28]]},"338":{"position":[[4185,28]]},"345":{"position":[[5099,28]]},"369":{"position":[[4628,28],[4680,29],[10054,28]]},"371":{"position":[[4860,28],[4912,29]]},"373":{"position":[[3966,28]]},"385":{"position":[[4034,28],[4086,29]]},"387":{"position":[[4085,28],[9338,28]]},"429":{"position":[[2734,28],[2786,29]]},"445":{"position":[[4139,28],[9187,28]]},"449":{"position":[[4102,28],[9317,28]]},"467":{"position":[[3967,28],[4019,29]]},"469":{"position":[[4209,28],[4261,29]]},"471":{"position":[[4158,28]]},"485":{"position":[[4309,28],[4361,29]]},"487":{"position":[[4278,28]]},"505":{"position":[[4678,28],[4730,29],[10000,28],[15415,28],[20527,28],[25568,28]]},"521":{"position":[[3982,28],[4034,29]]},"523":{"position":[[4546,28],[4598,29]]},"525":{"position":[[4224,28]]},"537":{"position":[[4280,28],[4332,29]]},"541":{"position":[[4275,28],[4327,29]]},"543":{"position":[[4076,28],[4128,29]]},"545":{"position":[[3934,28],[8880,28]]},"547":{"position":[[3936,28],[3988,29],[8872,28]]},"562":{"position":[[4123,28]]},"569":{"position":[[4592,28],[10086,28],[15532,28]]},"571":{"position":[[4441,28]]},"576":{"position":[[4359,28],[9693,28]]},"583":{"position":[[4482,28]]},"605":{"position":[[5254,28],[10847,28],[17098,28],[23344,28],[29004,28]]},"607":{"position":[[5102,28],[10780,28],[16535,28],[22277,28]]},"622":{"position":[[4559,28],[4611,29]]},"624":{"position":[[4101,28]]},"630":{"position":[[4647,28],[4699,29]]},"632":{"position":[[4006,28]]},"634":{"position":[[4150,28],[4202,29],[9379,28],[14438,28]]},"644":{"position":[[4765,28],[9799,28]]},"646":{"position":[[4179,28],[4231,29],[9275,28]]},"648":{"position":[[4334,28],[9954,28],[10006,29],[15406,28],[15458,29],[20719,28],[25795,28]]},"660":{"position":[[6829,28],[6881,29]]},"666":{"position":[[1113,28],[3010,28],[4921,28],[6826,28],[8734,28],[10642,28]]},"668":{"position":[[3694,28],[8850,28],[8902,29],[10944,28]]},"670":{"position":[[5267,28],[5319,29],[7949,28],[10777,28]]},"672":{"position":[[6368,28],[6420,29]]},"692":{"position":[[4371,28],[4423,29],[9339,28],[9391,29],[14888,28],[14940,29],[20636,28],[25748,28]]},"694":{"position":[[7587,28],[7639,29],[13256,28]]},"696":{"position":[[7022,28],[7074,29],[13432,28],[13484,29],[19505,28]]},"698":{"position":[[7469,28],[7521,29],[13229,28]]},"718":{"position":[[6105,28],[6157,29],[11255,28],[16531,28],[16583,29],[21638,28],[26815,28],[33372,28],[33424,29],[39208,28]]},"720":{"position":[[4022,28],[10719,28]]},"722":{"position":[[11537,28],[11589,29],[17713,28],[17765,29],[23648,28],[23700,29],[29418,28],[29470,29],[34834,28],[34886,29],[39948,28],[40000,29],[45129,28],[50266,28]]},"734":{"position":[[8220,28],[8272,29]]},"740":{"position":[[4307,28],[9430,28],[14724,28],[14776,29],[19777,28]]},"742":{"position":[[8410,28],[15052,28],[15104,29],[21791,28],[21843,29],[27316,28]]},"744":{"position":[[5730,28],[5782,29],[12402,28],[18861,28]]},"746":{"position":[[13244,28],[13296,29]]},"767":{"position":[[6905,28],[6957,29],[15283,28],[15335,29],[22254,28],[22306,29],[28880,28],[34062,28],[39107,28],[44168,28]]},"769":{"position":[[4184,28],[11507,28],[16874,28],[26619,28],[34255,28],[43242,28]]},"786":{"position":[[5692,28],[5744,29],[10713,28],[15791,28],[15843,29],[20769,28],[25816,28],[32964,28],[38008,28]]},"788":{"position":[[6964,28],[7016,29],[12714,28]]},"790":{"position":[[4234,28],[4286,29],[9854,28],[9906,29],[14911,28]]},"792":{"position":[[7123,28],[7175,29],[12902,28],[19478,28],[19530,29]]},"809":{"position":[[5698,28],[5750,29],[10740,28],[15825,28],[15877,29],[20797,28],[25840,28],[32473,28],[37513,28]]},"811":{"position":[[7126,28],[7178,29],[13188,28]]},"813":{"position":[[6464,28],[6516,29],[12327,28]]},"815":{"position":[[7921,28],[7973,29],[13858,28],[19033,28],[24145,28],[29338,28],[34444,28]]}}}],["openfga_sdk.models.write_authorization_model_request",{"_index":639,"t":{"80":{"position":[[5798,52]]}}}],["openfga_sdk.models.write_request",{"_index":1162,"t":{"192":{"position":[[1007,32]]},"194":{"position":[[1166,32]]},"213":{"position":[[4042,32]]},"221":{"position":[[10531,32]]},"230":{"position":[[4302,32]]},"247":{"position":[[4049,32]]},"288":{"position":[[4122,32],[9030,32],[14883,32]]},"318":{"position":[[4487,32]]},"369":{"position":[[4734,32]]},"371":{"position":[[4966,32]]},"385":{"position":[[4140,32]]},"429":{"position":[[2840,32]]},"467":{"position":[[4073,32]]},"469":{"position":[[4315,32]]},"485":{"position":[[4415,32]]},"505":{"position":[[4784,32]]},"521":{"position":[[4088,32]]},"523":{"position":[[4652,32]]},"537":{"position":[[4386,32]]},"541":{"position":[[4381,32]]},"543":{"position":[[4182,32]]},"547":{"position":[[4042,32]]},"622":{"position":[[4665,32]]},"630":{"position":[[4753,32]]},"634":{"position":[[4256,32]]},"646":{"position":[[4285,32]]},"648":{"position":[[10060,32],[15512,32]]},"660":{"position":[[6935,32]]},"668":{"position":[[8956,32]]},"670":{"position":[[5373,32]]},"672":{"position":[[6474,32]]},"692":{"position":[[4477,32],[9445,32],[14994,32]]},"694":{"position":[[7693,32]]},"696":{"position":[[7128,32],[13538,32]]},"698":{"position":[[7575,32]]},"718":{"position":[[6211,32],[16637,32],[33478,32]]},"722":{"position":[[11643,32],[17819,32],[23754,32],[29524,32],[34940,32],[40054,32]]},"734":{"position":[[8326,32]]},"740":{"position":[[14830,32]]},"742":{"position":[[15158,32],[21897,32]]},"744":{"position":[[5836,32]]},"746":{"position":[[13350,32]]},"767":{"position":[[7011,32],[15389,32],[22360,32]]},"786":{"position":[[5798,32],[15897,32]]},"788":{"position":[[7070,32]]},"790":{"position":[[4340,32],[9960,32]]},"792":{"position":[[7229,32],[19584,32]]},"809":{"position":[[5804,32],[15931,32]]},"811":{"position":[[7232,32]]},"813":{"position":[[6570,32]]},"815":{"position":[[8027,32]]}}}],["openfga_trace_enabled=tru",{"_index":1089,"t":{"158":{"position":[[145,27]]}}}],["openfga_trace_otlp_endpoint",{"_index":1091,"t":{"158":{"position":[[320,28]]}}}],["openfga_trace_sample_ratio",{"_index":1095,"t":{"158":{"position":[[468,27]]}}}],["openfgaapi",{"_index":333,"t":{"16":{"position":[[12406,10],[12552,12],[18018,10],[18164,12],[23790,10],[23936,12]]},"80":{"position":[[854,10],[1000,12]]},"86":{"position":[[36,10],[91,10],[145,12],[2345,10]]},"98":{"position":[[886,10],[941,10],[1156,12]]},"112":{"position":[[127,10],[273,12]]},"124":{"position":[[127,10],[273,12]]},"170":{"position":[[100,10],[155,10],[209,12]]},"172":{"position":[[432,10],[506,10],[560,12]]},"190":{"position":[[127,10],[273,12]]},"213":{"position":[[240,10],[386,12]]},"215":{"position":[[250,10],[396,12],[5415,10],[5561,12]]},"221":{"position":[[1555,10],[1701,12],[6618,10],[6764,12],[11958,10],[12104,12],[16981,10],[17127,12]]},"230":{"position":[[502,10],[648,12]]},"232":{"position":[[293,10],[439,12]]},"245":{"position":[[550,10],[696,12]]},"247":{"position":[[261,10],[407,12],[5322,10],[5468,12]]},"257":{"position":[[103,10],[249,12]]},"288":{"position":[[347,10],[493,12],[5251,10],[5397,12],[10429,10],[10575,12]]},"312":{"position":[[389,10],[535,12],[5419,10],[5565,12]]},"318":{"position":[[508,10],[654,12],[5993,10],[6139,12],[11227,10],[11373,12]]},"338":{"position":[[423,10],[569,12]]},"345":{"position":[[1367,10],[1513,12]]},"369":{"position":[[371,10],[517,12],[6307,10],[6453,12]]},"371":{"position":[[273,10],[419,12]]},"373":{"position":[[219,10],[365,12]]},"385":{"position":[[302,10],[448,12]]},"387":{"position":[[323,10],[469,12],[5573,10],[5719,12]]},"445":{"position":[[389,10],[535,12],[5440,10],[5586,12]]},"449":{"position":[[349,10],[495,12],[5564,10],[5710,12]]},"467":{"position":[[277,10],[423,12]]},"469":{"position":[[279,10],[425,12]]},"471":{"position":[[396,10],[542,12]]},"485":{"position":[[463,10],[609,12]]},"487":{"position":[[528,10],[674,12]]},"505":{"position":[[511,10],[657,12],[6259,10],[6405,12],[11674,10],[11820,12],[16780,10],[16926,12],[21824,10],[21970,12]]},"521":{"position":[[286,10],[432,12]]},"523":{"position":[[619,10],[765,12]]},"525":{"position":[[456,10],[602,12]]},"537":{"position":[[365,10],[511,12]]},"541":{"position":[[372,10],[518,12]]},"543":{"position":[[383,10],[529,12]]},"545":{"position":[[229,10],[375,12],[5175,10],[5321,12]]},"547":{"position":[[266,10],[412,12],[5164,10],[5310,12]]},"562":{"position":[[388,10],[534,12]]},"569":{"position":[[638,10],[784,12],[6210,10],[6356,12],[11626,10],[11772,12]]},"571":{"position":[[841,10],[987,12]]},"576":{"position":[[379,10],[525,12],[5713,10],[5859,12]]},"583":{"position":[[300,10],[446,12]]},"605":{"position":[[1516,10],[1662,12],[7109,10],[7255,12],[13351,10],[13497,12],[19606,10],[19752,12],[25263,10],[25409,12]]},"607":{"position":[[1361,10],[1507,12],[7030,10],[7176,12],[12791,10],[12937,12],[18533,10],[18679,12]]},"622":{"position":[[515,10],[661,12]]},"624":{"position":[[330,10],[476,12]]},"630":{"position":[[240,10],[386,12]]},"632":{"position":[[259,10],[405,12]]},"634":{"position":[[240,10],[386,12],[5629,10],[5775,12],[10679,10],[10825,12]]},"644":{"position":[[1021,10],[1167,12],[6058,10],[6204,12]]},"646":{"position":[[330,10],[476,12],[5522,10],[5668,12]]},"648":{"position":[[305,10],[451,12],[5964,10],[6110,12],[11412,10],[11558,12],[16975,10],[17121,12],[22057,10],[22203,12]]},"668":{"position":[[4950,10],[5096,12]]},"670":{"position":[[1282,10],[1428,12]]},"692":{"position":[[657,10],[803,12],[5613,10],[5759,12],[10601,10],[10747,12],[16892,10],[17038,12],[22010,10],[22156,12]]},"694":{"position":[[3075,10],[3221,12],[9503,10],[9649,12]]},"696":{"position":[[2978,10],[3124,12],[8671,10],[8817,12],[15770,10],[15916,12]]},"698":{"position":[[3173,10],[3319,12],[9479,10],[9625,12]]},"718":{"position":[[2214,10],[2360,12],[7493,10],[7639,12],[12640,10],[12786,12],[17876,10],[18022,12],[23032,10],[23178,12],[28599,10],[28745,12],[35446,10],[35592,12]]},"720":{"position":[[275,10],[421,12],[6975,10],[7121,12]]},"722":{"position":[[7019,10],[7165,12],[13615,10],[13761,12],[19352,10],[19498,12],[25377,10],[25523,12],[31030,10],[31176,12],[36195,10],[36341,12],[41391,10],[41537,12],[46483,10],[46629,12]]},"734":{"position":[[2748,10],[2894,12]]},"740":{"position":[[575,10],[721,12],[5686,10],[5832,12],[10830,10],[10976,12],[16042,10],[16188,12]]},"742":{"position":[[4690,10],[4836,12],[9922,10],[10068,12],[17462,10],[17608,12],[23584,10],[23730,12]]},"744":{"position":[[1235,10],[1381,12],[7930,10],[8076,12],[14386,10],[14532,12]]},"746":{"position":[[3476,10],[3622,12]]},"767":{"position":[[344,10],[490,12],[10300,10],[10446,12],[17481,10],[17627,12],[25139,10],[25285,12],[30318,10],[30464,12],[35354,10],[35500,12],[40412,10],[40558,12]]},"769":{"position":[[440,10],[586,12],[7775,10],[7921,12],[13115,10],[13261,12],[22863,10],[23009,12],[30526,10],[30672,12],[39513,10],[39659,12]]},"786":{"position":[[1975,10],[2121,12],[6966,10],[7112,12],[12074,10],[12220,12],[17022,10],[17168,12],[22066,10],[22212,12],[29217,10],[29363,12],[34261,10],[34407,12]]},"788":{"position":[[2494,10],[2640,12],[8961,10],[9107,12]]},"790":{"position":[[445,10],[591,12],[5969,10],[6115,12],[11164,10],[11310,12]]},"792":{"position":[[3088,10],[3234,12],[9143,10],[9289,12],[15695,10],[15841,12]]},"809":{"position":[[1972,10],[2118,12],[6984,10],[7130,12],[12111,10],[12257,12],[17053,10],[17199,12],[22090,10],[22236,12],[28729,10],[28875,12],[33766,10],[33912,12]]},"811":{"position":[[2251,10],[2397,12],[9432,10],[9578,12]]},"813":{"position":[[2084,10],[2230,12],[8562,10],[8708,12]]},"815":{"position":[[2956,10],[3102,12],[10090,10],[10236,12],[15259,10],[15405,12],[20365,10],[20511,12],[25564,10],[25710,12],[30670,10],[30816,12]]}}}],["openfgaapi(configur",{"_index":394,"t":{"16":{"position":[[15069,26],[20681,26],[26459,26]]},"80":{"position":[[4369,26]]},"86":{"position":[[1584,26]]},"112":{"position":[[2061,26]]},"124":{"position":[[2061,26]]},"170":{"position":[[1582,26]]},"172":{"position":[[2675,26]]},"190":{"position":[[2061,26]]},"213":{"position":[[2947,26]]},"215":{"position":[[2907,26],[8076,26]]},"221":{"position":[[4204,26],[9399,26],[14615,26],[19642,26]]},"230":{"position":[[3208,26]]},"232":{"position":[[2952,26]]},"245":{"position":[[3187,26]]},"247":{"position":[[2959,26],[7961,26]]},"257":{"position":[[2037,26]]},"288":{"position":[[3036,26],[7943,26],[13581,26]]},"312":{"position":[[3048,26],[8076,26]]},"318":{"position":[[3333,26],[8652,26],[13886,26]]},"338":{"position":[[3096,26]]},"345":{"position":[[4020,26]]},"369":{"position":[[3464,26],[8970,26]]},"371":{"position":[[3586,26]]},"373":{"position":[[2882,26]]},"385":{"position":[[3033,26]]},"387":{"position":[[2996,26],[8248,26]]},"445":{"position":[[3054,26],[8103,26]]},"449":{"position":[[3016,26],[8231,26]]},"467":{"position":[[2980,26]]},"469":{"position":[[3142,26]]},"471":{"position":[[3069,26]]},"485":{"position":[[3270,26]]},"487":{"position":[[3193,26]]},"505":{"position":[[3544,26],[8918,26],[14333,26],[19443,26],[24485,26]]},"521":{"position":[[2993,26]]},"523":{"position":[[3480,26]]},"525":{"position":[[3133,26]]},"537":{"position":[[3230,26]]},"541":{"position":[[3229,26]]},"543":{"position":[[3088,26]]},"545":{"position":[[2864,26],[7810,26]]},"547":{"position":[[2956,26],[7801,26]]},"562":{"position":[[3043,26]]},"569":{"position":[[3433,26],[8948,26],[14384,26]]},"571":{"position":[[3400,26]]},"576":{"position":[[3167,26],[8501,26]]},"583":{"position":[[3245,26]]},"605":{"position":[[4173,26],[9766,26],[16014,26],[22263,26],[27922,26]]},"607":{"position":[[4020,26],[9695,26],[15452,26],[21194,26]]},"622":{"position":[[3454,26]]},"624":{"position":[[3009,26]]},"630":{"position":[[3433,26]]},"632":{"position":[[2922,26]]},"634":{"position":[[3090,26],[8294,26],[13350,26]]},"644":{"position":[[3682,26],[8717,26]]},"646":{"position":[[3139,26],[8189,26]]},"648":{"position":[[3131,26],[8879,26],[14330,26],[19636,26],[24714,26]]},"668":{"position":[[7793,26]]},"670":{"position":[[4182,26]]},"692":{"position":[[3376,26],[8340,26],[13726,26],[19553,26],[24667,26]]},"694":{"position":[[6362,26],[12170,26]]},"696":{"position":[[5929,26],[12124,26],[18425,26]]},"698":{"position":[[6304,26],[12144,26]]},"718":{"position":[[5051,26],[10166,26],[15477,26],[20549,26],[25719,26],[32048,26],[38119,26]]},"720":{"position":[[2938,26],[9636,26]]},"722":{"position":[[10298,26],[16590,26],[22471,26],[28326,26],[33809,26],[38940,26],[44048,26],[49170,26]]},"734":{"position":[[6675,26]]},"740":{"position":[[3228,26],[8347,26],[13669,26],[18697,26]]},"742":{"position":[[7335,26],[13609,26],[20603,26],[26237,26]]},"744":{"position":[[4487,26],[11103,26],[17561,26]]},"746":{"position":[[10363,26]]},"767":{"position":[[5021,26],[13889,26],[20930,26],[27798,26],[32979,26],[38021,26],[43081,26]]},"769":{"position":[[3101,26],[10428,26],[15786,26],[25532,26],[33177,26],[42164,26]]},"786":{"position":[[4696,26],[9629,26],[14795,26],[19685,26],[24731,26],[31880,26],[36924,26]]},"788":{"position":[[5729,26],[11628,26]]},"790":{"position":[[3214,26],[8802,26],[13827,26]]},"792":{"position":[[6033,26],[11814,26],[18460,26]]},"809":{"position":[[4699,26],[9653,26],[14830,26],[19714,26],[24755,26],[31390,26],[36429,26]]},"811":{"position":[[5780,26],[12101,26]]},"813":{"position":[[5259,26],[11237,26]]},"815":{"position":[[6533,26],[12767,26],[17940,26],[23050,26],[28245,26],[33351,26]]}}}],["openfgaapi.listobjects(bodi",{"_index":459,"t":{"16":{"position":[[26663,29]]},"126":{"position":[[828,29]]},"583":{"position":[[3579,29]]}}}],["openid",{"_index":684,"t":{"92":{"position":[[249,6]]}}}],["opentelemetri",{"_index":1055,"t":{"152":{"position":[[631,13]]},"154":{"position":[[301,13]]}}}],["oper",{"_index":544,"t":{"58":{"position":[[1298,9]]},"62":{"position":[[10,8]]},"64":{"position":[[17,8]]},"66":{"position":[[14,8]]},"259":{"position":[[861,9],[922,9]]},"306":{"position":[[2296,9],[2320,8]]},"310":{"position":[[589,9],[613,8]]},"316":{"position":[[232,8]]},"403":{"position":[[7709,8]]},"437":{"position":[[3288,9],[3315,8]]},"443":{"position":[[592,9],[619,8]]},"455":{"position":[[1666,9],[1686,8]]},"459":{"position":[[585,9],[605,8]]},"640":{"position":[[665,9],[692,8]]},"648":{"position":[[16687,9],[16713,9]]},"668":{"position":[[728,10]]},"704":{"position":[[612,8]]},"771":{"position":[[414,8]]},"773":{"position":[[712,8]]},"796":{"position":[[581,8]]}}}],["opt",{"_index":731,"t":{"96":{"position":[[329,5],[892,5]]},"98":{"position":[[300,5],[1020,5],[1721,5]]}}}],["optim",{"_index":1151,"t":{"180":{"position":[[91,9]]},"273":{"position":[[494,9]]},"415":{"position":[[325,10]]},"585":{"position":[[709,7]]}}}],["option",{"_index":243,"t":{"16":{"position":[[4636,8],[12370,9],[12522,7],[13185,9],[13336,7],[13681,9],[14279,9],[14546,7],[14943,9],[15438,9],[15859,9],[17982,9],[18134,7],[18797,9],[18948,7],[19293,9],[19891,9],[20158,7],[20555,9],[21050,9],[21471,9],[23754,9],[23906,7],[24574,9],[24725,7],[25070,9],[25669,9],[25936,7],[26333,9],[26838,9],[27259,9]]},"80":{"position":[[818,9],[970,7],[1958,9],[2109,7],[2454,9],[3579,9],[3846,7],[4243,9],[5143,9],[5564,9]]},"86":{"position":[[200,9],[632,9],[1365,9]]},"98":{"position":[[1211,9],[4628,9]]},"102":{"position":[[526,9]]},"112":{"position":[[243,7],[743,7],[1088,9],[1538,7],[1935,9],[2503,9]]},"124":{"position":[[243,7],[743,7],[1088,9],[1538,7],[1935,9],[2503,9]]},"138":{"position":[[338,8]]},"140":{"position":[[806,6]]},"142":{"position":[[41,8]]},"170":{"position":[[264,9],[677,9],[1275,9]]},"172":{"position":[[615,9],[823,9],[1212,9],[1422,9],[2109,9],[2371,9],[3068,9],[3286,9]]},"190":{"position":[[243,7],[743,7],[1088,9],[1538,7],[1935,9],[2503,9]]},"213":{"position":[[204,9],[356,7],[973,9],[1124,7],[1469,9],[2157,9],[2424,7],[2821,9],[3281,9],[3702,9]]},"215":{"position":[[214,9],[366,7],[1026,9],[1177,7],[1522,9],[2117,9],[2384,7],[2781,9],[3273,9],[3694,9],[5379,9],[5531,7],[6193,9],[6344,7],[6689,9],[7286,9],[7553,7],[7950,9],[8444,9],[8865,9]]},"221":{"position":[[1519,9],[1671,7],[2327,9],[2478,7],[2823,9],[3414,9],[3681,7],[4078,9],[4566,9],[4987,9],[6582,9],[6734,7],[7388,9],[7539,7],[7884,9],[8609,9],[8876,7],[9273,9],[9770,9],[10191,9],[11922,9],[12074,7],[12734,9],[12885,7],[13230,9],[13825,9],[14092,7],[14489,9],[14981,9],[15402,9],[16945,9],[17097,7],[17759,9],[17910,7],[18255,9],[18852,9],[19119,7],[19516,9],[20010,9],[20431,9]]},"230":{"position":[[466,9],[618,7],[1235,9],[1386,7],[1731,9],[2418,9],[2685,7],[3082,9],[3541,9],[3962,9]]},"232":{"position":[[257,9],[409,7],[1070,9],[1221,7],[1566,9],[2162,9],[2429,7],[2826,9],[3319,9],[3740,9]]},"245":{"position":[[514,9],[666,7],[1316,9],[1467,7],[1812,9],[2397,9],[2664,7],[3061,9],[3543,9],[3964,9]]},"247":{"position":[[225,9],[377,7],[990,9],[1141,7],[1486,9],[2169,9],[2436,7],[2833,9],[3288,9],[3709,9],[5286,9],[5438,7],[6089,9],[6240,7],[6585,9],[7171,9],[7438,7],[7835,9],[8318,9],[8739,9]]},"257":{"position":[[219,7],[719,7],[1064,9],[1514,7],[1911,9],[2479,9]]},"273":{"position":[[6,6],[2147,6]]},"275":{"position":[[148,6]]},"288":{"position":[[311,9],[463,7],[1071,9],[1222,7],[1567,9],[2246,9],[2513,7],[2910,9],[3361,9],[3782,9],[5215,9],[5367,7],[5977,9],[6128,7],[6473,9],[7153,9],[7420,7],[7817,9],[8269,9],[8690,9],[10393,9],[10545,7],[11339,9],[11490,7],[11835,9],[12791,9],[13058,7],[13455,9],[14122,9],[14543,9]]},"312":{"position":[[353,9],[505,7],[1166,9],[1317,7],[1662,9],[2258,9],[2525,7],[2922,9],[3415,9],[3836,9],[5383,9],[5535,7],[6195,9],[6346,7],[6691,9],[7286,9],[7553,7],[7950,9],[8442,9],[8863,9]]},"318":{"position":[[472,9],[624,7],[1300,9],[1451,7],[1796,9],[2543,9],[2810,7],[3207,9],[3726,9],[4147,9],[5957,9],[6109,7],[6770,9],[6921,7],[7266,9],[7862,9],[8129,7],[8526,9],[9019,9],[9440,9],[11191,9],[11343,7],[12004,9],[12155,7],[12500,9],[13096,9],[13363,7],[13760,9],[14253,9],[14674,9]]},"338":{"position":[[387,9],[539,7],[1207,9],[1358,7],[1703,9],[2306,9],[2573,7],[2970,9],[3470,9],[3891,9]]},"345":{"position":[[1331,9],[1483,7],[2141,9],[2292,7],[2637,9],[3230,9],[3497,7],[3894,9],[4384,9],[4805,9]]},"369":{"position":[[335,9],[487,7],[1269,9],[1420,7],[1765,9],[2674,9],[2941,7],[3338,9],[3973,9],[4394,9],[6271,9],[6423,7],[7086,9],[7237,7],[7582,9],[8180,9],[8447,7],[8844,9],[9339,9],[9760,9]]},"371":{"position":[[237,9],[389,7],[1281,9],[1432,7],[1777,9],[2796,9],[3063,7],[3460,9],[4205,9],[4626,9]]},"373":{"position":[[183,9],[335,7],[998,9],[1149,7],[1494,9],[2092,9],[2359,7],[2756,9],[3251,9],[3672,9]]},"385":{"position":[[266,9],[418,7],[1047,9],[1198,7],[1543,9],[2243,9],[2510,7],[2907,9],[3379,9],[3800,9]]},"387":{"position":[[287,9],[439,7],[1107,9],[1258,7],[1603,9],[2206,9],[2473,7],[2870,9],[3370,9],[3791,9],[5537,9],[5689,7],[6358,9],[6509,7],[6854,9],[7458,9],[7725,7],[8122,9],[8623,9],[9044,9]]},"415":{"position":[[313,7]]},"445":{"position":[[353,9],[505,7],[1169,9],[1320,7],[1665,9],[2264,9],[2531,7],[2928,9],[3424,9],[3845,9],[5404,9],[5556,7],[6219,9],[6370,7],[6715,9],[7313,9],[7580,7],[7977,9],[8472,9],[8893,9]]},"449":{"position":[[313,9],[465,7],[1130,9],[1281,7],[1626,9],[2226,9],[2493,7],[2890,9],[3387,9],[3808,9],[5528,9],[5680,7],[6345,9],[6496,7],[6841,9],[7441,9],[7708,7],[8105,9],[8602,9],[9023,9]]},"467":{"position":[[241,9],[393,7],[1008,9],[1159,7],[1504,9],[2190,9],[2457,7],[2854,9],[3312,9],[3733,9]]},"469":{"position":[[243,9],[395,7],[1090,9],[1241,7],[1586,9],[2352,9],[2619,7],[3016,9],[3554,9],[3975,9]]},"471":{"position":[[360,9],[512,7],[1180,9],[1331,7],[1676,9],[2279,9],[2546,7],[2943,9],[3443,9],[3864,9]]},"485":{"position":[[427,9],[579,7],[1246,9],[1397,7],[1742,9],[2480,9],[2747,7],[3144,9],[3654,9],[4075,9]]},"487":{"position":[[492,9],[644,7],[1308,9],[1459,7],[1804,9],[2403,9],[2670,7],[3067,9],[3563,9],[3984,9]]},"505":{"position":[[475,9],[627,7],[1379,9],[1530,7],[1875,9],[2754,9],[3021,7],[3418,9],[4023,9],[4444,9],[6223,9],[6375,7],[7036,9],[7187,7],[7532,9],[8128,9],[8395,7],[8792,9],[9285,9],[9706,9],[11638,9],[11790,7],[12451,9],[12602,7],[12947,9],[13543,9],[13810,7],[14207,9],[14700,9],[15121,9],[16744,9],[16896,7],[17559,9],[17710,7],[18055,9],[18653,9],[18920,7],[19317,9],[19812,9],[20233,9],[21788,9],[21940,7],[22602,9],[22753,7],[23098,9],[23695,9],[23962,7],[24359,9],[24853,9],[25274,9]]},"521":{"position":[[250,9],[402,7],[1019,9],[1170,7],[1515,9],[2203,9],[2470,7],[2867,9],[3327,9],[3748,9]]},"523":{"position":[[583,9],[735,7],[1429,9],[1580,7],[1925,9],[2690,9],[2957,7],[3354,9],[3891,9],[4312,9]]},"525":{"position":[[420,9],[572,7],[1242,9],[1393,7],[1738,9],[2343,9],[2610,7],[3007,9],[3509,9],[3930,9]]},"537":{"position":[[329,9],[481,7],[1149,9],[1300,7],[1645,9],[2440,9],[2707,7],[3104,9],[3625,9],[4046,9]]},"541":{"position":[[336,9],[488,7],[1152,9],[1303,7],[1648,9],[2439,9],[2706,7],[3103,9],[3620,9],[4041,9]]},"543":{"position":[[347,9],[499,7],[1115,9],[1266,7],[1611,9],[2298,9],[2565,7],[2962,9],[3421,9],[3842,9]]},"545":{"position":[[193,9],[345,7],[994,9],[1145,7],[1490,9],[2074,9],[2341,7],[2738,9],[3219,9],[3640,9],[5139,9],[5291,7],[5940,9],[6091,7],[6436,9],[7020,9],[7287,7],[7684,9],[8165,9],[8586,9]]},"547":{"position":[[230,9],[382,7],[991,9],[1142,7],[1487,9],[2166,9],[2433,7],[2830,9],[3281,9],[3702,9],[5128,9],[5280,7],[5930,9],[6081,7],[6426,9],[7011,9],[7278,7],[7675,9],[8157,9],[8578,9]]},"562":{"position":[[352,9],[504,7],[1163,9],[1314,7],[1659,9],[2253,9],[2520,7],[2917,9],[3408,9],[3829,9]]},"569":{"position":[[602,9],[754,7],[1463,9],[1614,7],[1959,9],[2643,9],[2910,7],[3307,9],[3819,9],[4240,9],[6174,9],[6326,7],[7016,9],[7167,7],[7512,9],[8158,9],[8425,7],[8822,9],[9313,9],[9734,9],[11590,9],[11742,7],[12442,9],[12593,7],[12938,9],[13594,9],[13861,7],[14258,9],[14759,9],[15180,9]]},"571":{"position":[[805,9],[957,7],[1548,9],[1699,7],[2044,9],[2610,9],[2877,7],[3274,9],[3668,9],[4089,9]]},"576":{"position":[[343,9],[495,7],[1193,9],[1344,7],[1689,9],[2377,9],[2644,7],[3041,9],[3578,9],[3999,9],[5677,9],[5829,7],[6527,9],[6678,7],[7023,9],[7711,9],[7978,7],[8375,9],[8912,9],[9333,9]]},"581":{"position":[[210,7]]},"583":{"position":[[264,9],[416,7],[1191,9],[1342,7],[1687,9],[2455,9],[2722,7],[3119,9],[3754,9],[4175,9]]},"605":{"position":[[1480,9],[1632,7],[2292,9],[2443,7],[2788,9],[3383,9],[3650,7],[4047,9],[4539,9],[4960,9],[7073,9],[7225,7],[7885,9],[8036,7],[8381,9],[8976,9],[9243,7],[9640,9],[10132,9],[10553,9],[13315,9],[13467,7],[14130,9],[14281,7],[14626,9],[15224,9],[15491,7],[15888,9],[16383,9],[16804,9],[19570,9],[19722,7],[20382,9],[20533,7],[20878,9],[21473,9],[21740,7],[22137,9],[22629,9],[23050,9],[25227,9],[25379,7],[26040,9],[26191,7],[26536,9],[27132,9],[27399,7],[27796,9],[28289,9],[28710,9]]},"607":{"position":[[1325,9],[1477,7],[2138,9],[2289,7],[2634,9],[3230,9],[3497,7],[3894,9],[4387,9],[4808,9],[6994,9],[7146,7],[7810,9],[7961,7],[8306,9],[8905,9],[9172,7],[9569,9],[10065,9],[10486,9],[12755,9],[12907,7],[13569,9],[13720,7],[14065,9],[14662,9],[14929,7],[15326,9],[15820,9],[16241,9],[18497,9],[18649,7],[19311,9],[19462,7],[19807,9],[20404,9],[20671,7],[21068,9],[21562,9],[21983,9]]},"622":{"position":[[479,9],[631,7],[1364,9],[1515,7],[1860,9],[2664,9],[2931,7],[3328,9],[3904,9],[4325,9]]},"624":{"position":[[294,9],[446,7],[1117,9],[1268,7],[1613,9],[2219,9],[2486,7],[2883,9],[3386,9],[3807,9]]},"630":{"position":[[204,9],[356,7],[1188,9],[1339,7],[1684,9],[2643,9],[2910,7],[3307,9],[3992,9],[4413,9]]},"632":{"position":[[223,9],[375,7],[1038,9],[1189,7],[1534,9],[2132,9],[2399,7],[2796,9],[3291,9],[3712,9]]},"634":{"position":[[204,9],[356,7],[1045,9],[1196,7],[1541,9],[2300,9],[2567,7],[2964,9],[3495,9],[3916,9],[5593,9],[5745,7],[6409,9],[6560,7],[6905,9],[7504,9],[7771,7],[8168,9],[8664,9],[9085,9],[10643,9],[10795,7],[11462,9],[11613,7],[11958,9],[12560,9],[12827,7],[13224,9],[13723,9],[14144,9]]},"644":{"position":[[985,9],[1137,7],[1799,9],[1950,7],[2295,9],[2892,9],[3159,7],[3556,9],[4050,9],[4471,9],[6022,9],[6174,7],[6835,9],[6986,7],[7331,9],[7927,9],[8194,7],[8591,9],[9084,9],[9505,9]]},"646":{"position":[[294,9],[446,7],[1114,9],[1265,7],[1610,9],[2349,9],[2616,7],[3013,9],[3524,9],[3945,9],[5486,9],[5638,7],[6303,9],[6454,7],[6799,9],[7399,9],[7666,7],[8063,9],[8560,9],[8981,9]]},"648":{"position":[[269,9],[421,7],[1181,9],[1332,7],[1677,9],[2341,9],[2608,7],[3005,9],[3561,9],[3982,9],[5928,9],[6080,7],[6773,9],[6924,7],[7269,9],[8089,9],[8356,7],[8753,9],[9299,9],[9720,9],[11376,9],[11528,7],[12223,9],[12374,7],[12719,9],[13540,9],[13807,7],[14204,9],[14751,9],[15172,9],[16939,9],[17091,7],[17753,9],[17904,7],[18249,9],[18846,9],[19113,7],[19510,9],[20004,9],[20425,9],[22021,9],[22173,7],[22833,9],[22984,7],[23329,9],[23924,9],[24191,7],[24588,9],[25080,9],[25501,9]]},"668":{"position":[[4914,9],[5066,7],[5751,9],[5902,7],[6247,9],[7003,9],[7270,7],[7667,9],[8195,9],[8616,9]]},"670":{"position":[[1246,9],[1398,7],[2112,9],[2263,7],[2608,9],[3392,9],[3659,7],[4056,9],[4612,9],[5033,9]]},"692":{"position":[[621,9],[773,7],[1396,9],[1547,7],[1892,9],[2586,9],[2853,7],[3250,9],[3716,9],[4137,9],[5577,9],[5729,7],[6356,9],[6507,7],[6852,9],[7550,9],[7817,7],[8214,9],[8684,9],[9105,9],[10565,9],[10717,7],[11487,9],[11638,7],[11983,9],[12936,9],[13203,7],[13600,9],[14233,9],[14654,9],[16856,9],[17008,7],[17670,9],[17821,7],[18166,9],[18763,9],[19030,7],[19427,9],[19921,9],[20342,9],[21974,9],[22126,7],[22786,9],[22937,7],[23282,9],[23877,9],[24144,7],[24541,9],[25033,9],[25454,9]]},"694":{"position":[[3039,9],[3191,7],[4014,9],[4165,7],[4510,9],[5572,9],[5839,7],[6236,9],[6932,9],[7353,9],[9467,9],[9619,7],[10284,9],[10435,7],[10780,9],[11380,9],[11647,7],[12044,9],[12541,9],[12962,9]]},"696":{"position":[[2942,9],[3094,7],[3805,9],[3956,7],[4301,9],[5139,9],[5406,7],[5803,9],[6367,9],[6788,9],[8635,9],[8787,7],[9693,9],[9844,7],[10189,9],[11334,9],[11601,7],[11998,9],[12777,9],[13198,9],[15734,9],[15886,7],[16545,9],[16696,7],[17041,9],[17635,9],[17902,7],[18299,9],[18790,9],[19211,9]]},"698":{"position":[[3137,9],[3289,7],[4062,9],[4213,7],[4558,9],[5514,9],[5781,7],[6178,9],[6814,9],[7235,9],[9443,9],[9595,7],[10259,9],[10410,7],[10755,9],[11354,9],[11621,7],[12018,9],[12514,9],[12935,9]]},"718":{"position":[[2178,9],[2330,7],[3012,9],[3163,7],[3508,9],[4261,9],[4528,7],[4925,9],[5450,9],[5871,9],[7457,9],[7609,7],[8277,9],[8428,7],[8773,9],[9376,9],[9643,7],[10040,9],[10540,9],[10961,9],[12604,9],[12756,7],[13438,9],[13589,7],[13934,9],[14687,9],[14954,7],[15351,9],[15876,9],[16297,9],[17840,9],[17992,7],[18660,9],[18811,7],[19156,9],[19759,9],[20026,7],[20423,9],[20923,9],[21344,9],[22996,9],[23148,7],[23823,9],[23974,7],[24319,9],[24929,9],[25196,7],[25593,9],[26100,9],[26521,9],[28563,9],[28715,7],[29647,9],[29798,7],[30143,9],[31258,9],[31525,7],[31922,9],[32717,9],[33138,9],[35410,9],[35562,7],[36230,9],[36381,7],[36726,9],[37329,9],[37596,7],[37993,9],[38493,9],[38914,9]]},"720":{"position":[[239,9],[391,7],[1054,9],[1205,7],[1550,9],[2148,9],[2415,7],[2812,9],[3307,9],[3728,9],[6939,9],[7091,7],[7753,9],[7904,7],[8249,9],[8846,9],[9113,7],[9510,9],[10004,9],[10425,9]]},"722":{"position":[[6983,9],[7135,7],[7982,9],[8133,7],[8478,9],[9508,9],[9775,7],[10172,9],[10882,9],[11303,9],[13579,9],[13731,7],[14482,9],[14633,7],[14978,9],[15800,9],[16067,7],[16464,9],[17058,9],[17479,9],[19316,9],[19468,7],[20263,9],[20414,7],[20759,9],[21681,9],[21948,7],[22345,9],[22993,9],[23414,9],[25341,9],[25493,7],[26203,9],[26354,7],[26699,9],[27536,9],[27803,7],[28200,9],[28763,9],[29184,9],[30994,9],[31146,7],[31799,9],[31950,7],[32295,9],[33019,9],[33286,7],[33683,9],[34179,9],[34600,9],[36159,9],[36311,7],[36947,9],[37098,7],[37443,9],[38150,9],[38417,7],[38814,9],[39293,9],[39714,9],[41355,9],[41507,7],[42167,9],[42318,7],[42663,9],[43258,9],[43525,7],[43922,9],[44414,9],[44835,9],[46447,9],[46599,7],[47274,9],[47425,7],[47770,9],[48380,9],[48647,7],[49044,9],[49551,9],[49972,9]]},"734":{"position":[[2712,9],[2864,7],[4007,9],[4158,7],[4503,9],[5885,9],[6152,7],[6549,9],[7565,9],[7986,9]]},"740":{"position":[[539,9],[691,7],[1349,9],[1500,7],[1845,9],[2438,9],[2705,7],[3102,9],[3592,9],[4013,9],[5650,9],[5802,7],[6464,9],[6615,7],[6960,9],[7557,9],[7824,7],[8221,9],[8715,9],[9136,9],[10794,9],[10946,7],[11629,9],[11780,7],[12125,9],[12879,9],[13146,7],[13543,9],[14069,9],[14490,9],[16006,9],[16158,7],[16817,9],[16968,7],[17313,9],[17907,9],[18174,7],[18571,9],[19062,9],[19483,9]]},"742":{"position":[[4654,9],[4806,7],[5460,9],[5611,7],[5956,9],[6545,9],[6812,7],[7209,9],[7695,9],[8116,9],[9886,9],[10038,7],[11089,9],[11240,7],[11585,9],[12819,9],[13086,7],[13483,9],[14397,9],[14818,9],[17426,9],[17578,7],[18384,9],[18535,7],[18880,9],[19813,9],[20080,7],[20477,9],[21136,9],[21557,9],[23548,9],[23700,7],[24358,9],[24509,7],[24854,9],[25447,9],[25714,7],[26111,9],[26601,9],[27022,9]]},"744":{"position":[[1199,9],[1351,7],[2213,9],[2364,7],[2709,9],[3697,9],[3964,7],[4361,9],[5075,9],[5496,9],[7894,9],[8046,7],[8889,9],[9040,7],[9385,9],[10313,9],[10580,7],[10977,9],[11687,9],[12108,9],[14350,9],[14502,7],[15346,9],[15497,7],[15842,9],[16771,9],[17038,7],[17435,9],[18146,9],[18567,9]]},"746":{"position":[[3440,9],[3592,7],[5991,9],[6142,7],[6487,9],[9573,9],[9840,7],[10237,9],[12589,9],[13010,9]]},"758":{"position":[[523,7]]},"767":{"position":[[308,9],[460,7],[1922,9],[2073,7],[2418,9],[4231,9],[4498,7],[4895,9],[6250,9],[6671,9],[10264,9],[10416,7],[11418,9],[11569,7],[11914,9],[13099,9],[13366,7],[13763,9],[14628,9],[15049,9],[17445,9],[17597,7],[18529,9],[18680,7],[19025,9],[20140,9],[20407,7],[20804,9],[21599,9],[22020,9],[25103,9],[25255,7],[25916,9],[26067,7],[26412,9],[27008,9],[27275,7],[27672,9],[28165,9],[28586,9],[30282,9],[30434,7],[31096,9],[31247,7],[31592,9],[32189,9],[32456,7],[32853,9],[33347,9],[33768,9],[35318,9],[35470,7],[36135,9],[36286,7],[36631,9],[37231,9],[37498,7],[37895,9],[38392,9],[38813,9],[40376,9],[40528,7],[41194,9],[41345,7],[41690,9],[42291,9],[42558,7],[42955,9],[43453,9],[43874,9]]},"769":{"position":[[404,9],[556,7],[1218,9],[1369,7],[1714,9],[2311,9],[2578,7],[2975,9],[3469,9],[3890,9],[7739,9],[7891,7],[8549,9],[8700,7],[9045,9],[9638,9],[9905,7],[10302,9],[10792,9],[11213,9],[13079,9],[13231,7],[13898,9],[14049,7],[14394,9],[14996,9],[15263,7],[15660,9],[16159,9],[16580,9],[22827,9],[22979,7],[23645,9],[23796,7],[24141,9],[24742,9],[25009,7],[25406,9],[25904,9],[26325,9],[30490,9],[30642,7],[31299,9],[31450,7],[31795,9],[32387,9],[32654,7],[33051,9],[33540,9],[33961,9],[39477,9],[39629,7],[40286,9],[40437,7],[40782,9],[41374,9],[41641,7],[42038,9],[42527,9],[42948,9]]},"786":{"position":[[1939,9],[2091,7],[2715,9],[2866,7],[3211,9],[3906,9],[4173,7],[4570,9],[5037,9],[5458,9],[6930,9],[7082,7],[7745,9],[7896,7],[8241,9],[8839,9],[9106,7],[9503,9],[9998,9],[10419,9],[12038,9],[12190,7],[12814,9],[12965,7],[13310,9],[14005,9],[14272,7],[14669,9],[15136,9],[15557,9],[16986,9],[17138,7],[17801,9],[17952,7],[18297,9],[18895,9],[19162,7],[19559,9],[20054,9],[20475,9],[22030,9],[22182,7],[22846,9],[22997,7],[23342,9],[23941,9],[24208,7],[24605,9],[25101,9],[25522,9],[29181,9],[29333,7],[29996,9],[30147,7],[30492,9],[31090,9],[31357,7],[31754,9],[32249,9],[32670,9],[34225,9],[34377,7],[35040,9],[35191,7],[35536,9],[36134,9],[36401,7],[36798,9],[37293,9],[37714,9]]},"788":{"position":[[2458,9],[2610,7],[3463,9],[3614,7],[3959,9],[4939,9],[5206,7],[5603,9],[6309,9],[6730,9],[8925,9],[9077,7],[9742,9],[9893,7],[10238,9],[10838,9],[11105,7],[11502,9],[11999,9],[12420,9]]},"790":{"position":[[409,9],[561,7],[1209,9],[1360,7],[1705,9],[2424,9],[2691,7],[3088,9],[3579,9],[4000,9],[5933,9],[6085,7],[6765,9],[6916,7],[7261,9],[8012,9],[8279,7],[8676,9],[9199,9],[9620,9],[11128,9],[11280,7],[11943,9],[12094,7],[12439,9],[13037,9],[13304,7],[13701,9],[14196,9],[14617,9]]},"792":{"position":[[3052,9],[3204,7],[3912,9],[4063,7],[4408,9],[5243,9],[5510,7],[5907,9],[6468,9],[6889,9],[9107,9],[9259,7],[9926,9],[10077,7],[10422,9],[11024,9],[11291,7],[11688,9],[12187,9],[12608,9],[15659,9],[15811,7],[16457,9],[16608,7],[16953,9],[17670,9],[17937,7],[18334,9],[18823,9],[19244,9]]},"809":{"position":[[1936,9],[2088,7],[2715,9],[2866,7],[3211,9],[3909,9],[4176,7],[4573,9],[5043,9],[5464,9],[6948,9],[7100,7],[7766,9],[7917,7],[8262,9],[8863,9],[9130,7],[9527,9],[10025,9],[10446,9],[12075,9],[12227,7],[12850,9],[13001,7],[13346,9],[14040,9],[14307,7],[14704,9],[15170,9],[15591,9],[17017,9],[17169,7],[17831,9],[17982,7],[18327,9],[18924,9],[19191,7],[19588,9],[20082,9],[20503,9],[22054,9],[22206,7],[22870,9],[23021,7],[23366,9],[23965,9],[24232,7],[24629,9],[25125,9],[25546,9],[28693,9],[28845,7],[29507,9],[29658,7],[30003,9],[30600,9],[30867,7],[31264,9],[31758,9],[32179,9],[33730,9],[33882,7],[34545,9],[34696,7],[35041,9],[35639,9],[35906,7],[36303,9],[36798,9],[37219,9]]},"811":{"position":[[2215,9],[2367,7],[3311,9],[3462,7],[3807,9],[4990,9],[5257,7],[5654,9],[6471,9],[6892,9],[9396,9],[9548,7],[10214,9],[10365,7],[10710,9],[11311,9],[11578,7],[11975,9],[12473,9],[12894,9]]},"813":{"position":[[2048,9],[2200,7],[3023,9],[3174,7],[3519,9],[4469,9],[4736,7],[5133,9],[5809,9],[6230,9],[8526,9],[8678,7],[9347,9],[9498,7],[9843,9],[10447,9],[10714,7],[11111,9],[11612,9],[12033,9]]},"815":{"position":[[2920,9],[3072,7],[4068,9],[4219,7],[4564,9],[5743,9],[6010,7],[6407,9],[7266,9],[7687,9],[10054,9],[10206,7],[10876,9],[11027,7],[11372,9],[11977,9],[12244,7],[12641,9],[13143,9],[13564,9],[15223,9],[15375,7],[16047,9],[16198,7],[16543,9],[17150,9],[17417,7],[17814,9],[18318,9],[18739,9],[20329,9],[20481,7],[21155,9],[21306,7],[21651,9],[22260,9],[22527,7],[22924,9],[23430,9],[23851,9],[25528,9],[25680,7],[26352,9],[26503,7],[26848,9],[27455,9],[27722,7],[28119,9],[28623,9],[29044,9],[30634,9],[30786,7],[31458,9],[31609,7],[31954,9],[32561,9],[32828,7],[33225,9],[33729,9],[34150,9]]}}}],["opts.rel",{"_index":1906,"t":{"569":{"position":[[5579,15],[11034,15]]},"571":{"position":[[5192,15]]}}}],["order",{"_index":150,"t":{"16":{"position":[[260,5]]},"64":{"position":[[1333,5]]},"66":{"position":[[1368,5]]},"140":{"position":[[246,6]]},"204":{"position":[[3,5]]},"221":{"position":[[3,5]]},"238":{"position":[[3,5]]},"251":{"position":[[146,5]]},"255":{"position":[[25,7]]},"263":{"position":[[304,6]]},"279":{"position":[[3,5]]},"312":{"position":[[10558,5]]},"334":{"position":[[178,5]]},"365":{"position":[[1090,5]]},"379":{"position":[[3,5]]},"399":{"position":[[362,5]]},"403":{"position":[[7792,5]]},"437":{"position":[[3,5]]},"455":{"position":[[3,5]]},"477":{"position":[[3,5]]},"493":{"position":[[3,5]]},"499":{"position":[[236,5]]},"511":{"position":[[3,5]]},"517":{"position":[[226,5]]},"523":{"position":[[272,5]]},"531":{"position":[[3,5]]},"553":{"position":[[3,5]]},"605":{"position":[[24695,5]]},"660":{"position":[[382,5]]},"664":{"position":[[3,5]]},"668":{"position":[[35,5],[263,5],[4681,5]]},"670":{"position":[[138,5]]},"678":{"position":[[3,5]]},"706":{"position":[[3,5]]},"734":{"position":[[147,5]]},"738":{"position":[[3,5]]},"742":{"position":[[35,5]]},"744":{"position":[[138,5]]},"748":{"position":[[3,5]]},"754":{"position":[[3,5]]},"769":{"position":[[19858,5],[28336,5],[30076,5]]},"775":{"position":[[3,5]]},"798":{"position":[[3,5]]}}}],["org",{"_index":1216,"t":{"221":{"position":[[228,3],[347,3],[514,6],[817,6],[896,3],[974,3],[1106,3],[7176,3],[8201,3],[9551,3],[10699,3],[11386,3]]},"345":{"position":[[84,3],[256,6],[579,6],[715,4],[882,4]]},"347":{"position":[[522,6],[632,6]]},"485":{"position":[[6121,3]]},"539":{"position":[[191,5],[202,3],[649,5],[746,6],[952,3]]},"541":{"position":[[56,3]]},"726":{"position":[[243,6]]},"754":{"position":[[484,3],[527,3]]},"783":{"position":[[171,3],[304,3],[331,3],[354,3],[390,3],[465,3]]},"792":{"position":[[14616,3],[15253,3],[15353,3]]}}}],["org#memb",{"_index":1217,"t":{"221":{"position":[[422,12]]}}}],["org:*#memb",{"_index":1785,"t":{"485":{"position":[[6170,15]]}}}],["org:contoso",{"_index":1221,"t":{"221":{"position":[[6425,11],[7229,14],[9613,13],[11789,12]]},"230":{"position":[[29,11],[133,12],[333,12],[1076,14],[3384,13]]}}}],["org:contoso#memb",{"_index":1218,"t":{"221":{"position":[[1151,21]]}}}],["org:xyz",{"_index":1437,"t":{"345":{"position":[[942,10]]},"539":{"position":[[1253,8],[1266,7]]},"541":{"position":[[903,10],[960,10],[3361,10],[3428,10]]},"543":{"position":[[218,8],[960,10],[3268,9]]},"545":{"position":[[64,8]]},"547":{"position":[[76,8],[799,10],[3089,10]]}}}],["org:xyz#memb",{"_index":1435,"t":{"345":{"position":[[759,17]]}}}],["organ",{"_index":165,"t":{"16":{"position":[[601,12],[3425,10],[29422,12]]},"24":{"position":[[39,10]]},"202":{"position":[[540,12]]},"219":{"position":[[320,12],[357,13]]},"296":{"position":[[1205,12],[1287,14]]},"365":{"position":[[271,12],[832,12]]},"397":{"position":[[1792,12],[2007,12],[2578,13],[2630,12]]},"399":{"position":[[423,12],[834,12],[1049,12],[1618,13],[1670,12],[2674,12],[2889,12],[3460,13],[3512,12],[3976,12],[4162,12]]},"401":{"position":[[1164,12],[1379,12],[1950,13],[2002,12],[2415,12],[3181,12]]},"403":{"position":[[375,13],[614,15],[721,13],[987,12],[1109,12],[1217,13],[1267,12],[1640,14],[1976,12],[2152,12],[2499,12],[2529,12],[2815,12],[2842,12],[4866,12],[5015,12],[7105,12],[9909,13],[9963,12]]},"405":{"position":[[1446,12],[1634,12],[1748,12],[1995,12],[2263,12]]},"435":{"position":[[273,12]]},"437":{"position":[[275,13],[395,12],[526,13],[569,13],[611,13],[766,14],[833,12],[1196,14],[1303,15],[1587,12],[2001,12],[2124,12],[2250,13]]},"445":{"position":[[10466,12],[10621,12]]},"447":{"position":[[249,14],[364,12],[977,14],[1084,15]]},"453":{"position":[[794,12],[867,12]]},"473":{"position":[[435,13]]},"509":{"position":[[558,12]]},"529":{"position":[[278,12]]},"541":{"position":[[156,12]]},"628":{"position":[[1936,13]]},"654":{"position":[[120,13],[214,13],[456,12],[643,14],[721,12]]},"660":{"position":[[341,12],[458,12],[526,12],[798,12],[906,12],[1049,14],[1080,14],[1375,15],[2713,14],[2791,14],[2891,13],[2951,12],[3001,12],[3038,12],[3078,12],[3285,12],[3417,12],[3549,12],[3681,12],[3813,12],[3908,12],[4033,12],[4308,12],[4496,12],[4684,12],[4872,12],[5060,12],[5211,12],[5392,12],[5860,12],[6002,12],[6144,12],[6286,12],[6428,12],[6533,12],[6668,12],[7108,12],[7246,12],[7384,12],[7522,12],[7660,12],[7761,12],[7892,12],[8925,12],[9061,12],[9197,12],[9333,12],[9469,12],[9568,12],[9697,12]]},"662":{"position":[[38,12],[142,12],[252,12],[360,12]]},"664":{"position":[[226,12]]},"666":{"position":[[11751,12]]},"668":{"position":[[83,12],[387,14],[1040,14],[1099,12],[1353,15],[2424,14],[2584,12],[2741,13],[4748,12]]},"670":{"position":[[881,12],[6538,12],[9362,12],[12227,12],[12268,12],[12297,12],[12326,12],[12355,12],[12386,12],[12416,12],[12446,12],[12475,12],[12505,12],[12533,12]]},"672":{"position":[[106,12],[387,14],[418,14],[713,15],[2588,14],[2666,14],[2824,12],[2956,12],[3088,12],[3220,12],[3352,12],[3447,12],[3572,12],[3847,12],[4035,12],[4223,12],[4411,12],[4599,12],[4750,12],[4931,12],[5399,12],[5541,12],[5683,12],[5825,12],[5967,12],[6072,12],[6207,12],[6647,12],[6785,12],[6923,12],[7061,12],[7199,12],[7300,12],[7431,12],[8464,12],[8600,12],[8736,12],[8872,12],[9008,12],[9107,12],[9236,12]]},"710":{"position":[[173,13]]},"712":{"position":[[587,13]]},"728":{"position":[[670,14],[748,12]]},"754":{"position":[[957,12]]},"762":{"position":[[118,13]]},"765":{"position":[[299,14],[531,12],[569,12],[732,14],[752,12],[1205,14],[1243,15]]},"767":{"position":[[10114,13],[10847,12],[10997,12],[11142,12],[12220,12],[12426,12],[12627,12],[14030,12],[14190,12],[14345,12],[15546,12],[15702,12],[15853,12],[16759,12],[16913,12],[17062,12],[17281,13],[18048,12],[18299,12],[19351,12],[19714,12],[21091,12],[21362,12],[22537,12],[22800,12],[23665,12],[23924,12]]},"769":{"position":[[6713,14],[6733,12],[7274,14],[7312,15],[20341,13],[20381,13],[20687,12],[20737,12],[21038,12],[21685,14],[21705,12],[22405,14],[22443,15],[28429,12],[28828,14],[28897,12],[29738,14],[29776,15],[37773,14],[37842,12],[38568,14],[38606,15]]},"773":{"position":[[45,12],[374,12],[416,13],[1188,13],[1239,12]]},"775":{"position":[[678,13],[744,13]]},"781":{"position":[[366,13],[397,13],[474,14],[550,12]]},"788":{"position":[[42,13]]},"792":{"position":[[73,12],[460,12],[489,12],[698,12],[821,13],[920,12],[1024,15],[1512,14],[2732,14],[2817,13],[8499,12],[8805,12],[8901,12],[21083,14],[21103,12],[21140,14],[22295,15],[22457,15],[22618,15],[22783,15],[22943,15],[23041,14],[23079,15],[23250,14],[23393,15]]},"794":{"position":[[51,12]]},"796":{"position":[[308,14]]},"811":{"position":[[62,12]]}}}],["organiz",{"_index":1596,"t":{"403":{"position":[[2345,14]]}}}],["organization#memb",{"_index":1590,"t":{"403":{"position":[[1479,21],[2060,19]]}}}],["organization'",{"_index":1593,"t":{"403":{"position":[[2093,14]]},"437":{"position":[[2272,14]]},"712":{"position":[[369,14]]},"792":{"position":[[112,14]]}}}],["organization's/system'",{"_index":1360,"t":{"294":{"position":[[216,23]]}}}],["organization:a",{"_index":2094,"t":{"660":{"position":[[3358,18],[3946,17],[5942,16],[6578,17]]},"668":{"position":[[5516,14],[5589,17],[6572,14],[7953,14],[8035,16],[9132,14],[9862,14]]},"670":{"position":[[1110,15],[1877,14],[1950,17],[2961,14],[4370,14],[4452,16],[5577,14],[6336,14],[6916,16],[7776,17],[9233,17]]},"672":{"position":[[2897,18],[3485,17],[5481,16],[6117,17]]}}}],["organization:a#memb",{"_index":1597,"t":{"403":{"position":[[2554,24],[5072,24]]}}}],["organization:abc",{"_index":1737,"t":{"437":{"position":[[1648,19],[2074,19]]},"449":{"position":[[143,16],[5358,16]]}}}],["organization:alpha",{"_index":2547,"t":{"767":{"position":[[10901,21],[14091,21],[18110,22],[21162,20],[24515,18],[24839,19],[25788,21],[26779,21],[27978,20],[29887,21],[29928,20]]},"769":{"position":[[12861,18],[13723,21],[14720,21],[15923,21],[17789,21],[17832,20],[22644,18],[23471,21],[24467,21],[25669,21],[27532,21],[27575,20],[27829,18],[28012,18],[28179,18]]}}}],["organization:auth0.com",{"_index":269,"t":{"16":{"position":[[6233,22]]}}}],["organization:auth0.com#memb",{"_index":267,"t":{"16":{"position":[[6099,29]]}}}],["organization:b",{"_index":1598,"t":{"403":{"position":[[2607,17]]},"660":{"position":[[3490,18],[3754,18],[4056,17],[6084,16],[6368,16],[6698,17]]},"672":{"position":[[3029,18],[3293,18],[3595,17],[5623,16],[5907,16],[6237,17]]}}}],["organization:bay",{"_index":2548,"t":{"767":{"position":[[11051,21],[14251,21],[18230,22],[21292,20],[30967,21],[31959,21],[33159,20],[35071,21],[35112,20],[35962,21],[36957,21],[38158,21],[40018,21],[40061,20]]}}}],["organization:c",{"_index":2095,"t":{"660":{"position":[[3622,18],[3886,18],[6226,16],[6510,16]]},"670":{"position":[[9741,16],[10603,17],[12063,17]]},"672":{"position":[[3161,18],[3425,18],[5765,16],[6049,16]]}}}],["organization:contoso",{"_index":1630,"t":{"405":{"position":[[1695,23],[3410,20],[3446,20]]},"792":{"position":[[3660,24],[3693,23],[6208,22],[6249,23],[14959,22],[15104,23],[16289,23],[18657,22]]}}}],["organization:contoso#memb",{"_index":2679,"t":{"792":{"position":[[15297,28],[16226,30],[18592,30]]}}}],["organization:cup",{"_index":2549,"t":{"767":{"position":[[11202,20],[14412,20],[18364,20],[21436,19]]}}}],["organization:fabrikam",{"_index":1633,"t":{"405":{"position":[[1809,24],[2832,21],[2869,21]]}}}],["organization:org_ajuc9kj",{"_index":235,"t":{"16":{"position":[[4323,24],[4841,24],[5012,24]]}}}],["organization:org_ajuc9kj#memb",{"_index":252,"t":{"16":{"position":[[4922,33]]}}}],["organization:xyz",{"_index":1738,"t":{"437":{"position":[[2196,19]]}}}],["organization:z",{"_index":2613,"t":{"769":{"position":[[37343,16],[37372,17]]}}}],["organization:{id",{"_index":1589,"t":{"403":{"position":[[1387,19]]}}}],["origin",{"_index":197,"t":{"16":{"position":[[3053,8]]},"349":{"position":[[722,8]]},"654":{"position":[[492,11]]},"668":{"position":[[860,8]]},"728":{"position":[[519,11]]}}}],["os",{"_index":358,"t":{"16":{"position":[[13239,4],[15455,2],[18851,4],[21067,2],[24628,4],[26855,2]]},"80":{"position":[[2012,4],[5160,2]]},"86":{"position":[[498,4],[1735,2]]},"98":{"position":[[2813,4]]},"112":{"position":[[646,4],[2099,2]]},"124":{"position":[[646,4],[2099,2]]},"170":{"position":[[543,4],[1620,2]]},"172":{"position":[[1078,4],[2713,2]]},"190":{"position":[[646,4],[2099,2]]},"213":{"position":[[1027,4],[3298,2]]},"215":{"position":[[1080,4],[3290,2],[6247,4],[8461,2]]},"221":{"position":[[2381,4],[4583,2],[7442,4],[9787,2],[12788,4],[14998,2],[17813,4],[20027,2]]},"230":{"position":[[1289,4],[3558,2]]},"232":{"position":[[1124,4],[3336,2]]},"245":{"position":[[1370,4],[3560,2]]},"247":{"position":[[1044,4],[3305,2],[6143,4],[8335,2]]},"257":{"position":[[622,4],[2075,2]]},"288":{"position":[[1125,4],[3378,2],[6031,4],[8286,2],[11393,4],[14139,2]]},"312":{"position":[[1220,4],[3432,2],[6249,4],[8459,2]]},"318":{"position":[[1354,4],[3743,2],[6824,4],[9036,2],[12058,4],[14270,2]]},"338":{"position":[[1261,4],[3487,2]]},"345":{"position":[[2195,4],[4401,2]]},"369":{"position":[[1323,4],[3990,2],[7140,4],[9356,2]]},"371":{"position":[[1335,4],[4222,2]]},"373":{"position":[[1052,4],[3268,2]]},"385":{"position":[[1101,4],[3396,2]]},"387":{"position":[[1161,4],[3387,2],[6412,4],[8640,2]]},"445":{"position":[[1223,4],[3441,2],[6273,4],[8489,2]]},"449":{"position":[[1184,4],[3404,2],[6399,4],[8619,2]]},"467":{"position":[[1062,4],[3329,2]]},"469":{"position":[[1144,4],[3571,2]]},"471":{"position":[[1234,4],[3460,2]]},"485":{"position":[[1300,4],[3671,2]]},"487":{"position":[[1362,4],[3580,2]]},"505":{"position":[[1433,4],[4040,2],[7090,4],[9302,2],[12505,4],[14717,2],[17613,4],[19829,2],[22656,4],[24870,2]]},"521":{"position":[[1073,4],[3344,2]]},"523":{"position":[[1483,4],[3908,2]]},"525":{"position":[[1296,4],[3526,2]]},"537":{"position":[[1203,4],[3642,2]]},"541":{"position":[[1206,4],[3637,2]]},"543":{"position":[[1169,4],[3438,2]]},"545":{"position":[[1048,4],[3236,2],[5994,4],[8182,2]]},"547":{"position":[[1045,4],[3298,2],[5984,4],[8174,2]]},"562":{"position":[[1217,4],[3425,2]]},"569":{"position":[[1517,4],[3836,2],[7070,4],[9330,2],[12496,4],[14776,2]]},"571":{"position":[[1602,4],[3685,2]]},"576":{"position":[[1247,4],[3595,2],[6581,4],[8929,2]]},"583":{"position":[[1245,4],[3771,2]]},"605":{"position":[[2346,4],[4556,2],[7939,4],[10149,2],[14184,4],[16400,2],[20436,4],[22646,2],[26094,4],[28306,2]]},"607":{"position":[[2192,4],[4404,2],[7864,4],[10082,2],[13623,4],[15837,2],[19365,4],[21579,2]]},"622":{"position":[[1418,4],[3921,2]]},"624":{"position":[[1171,4],[3403,2]]},"630":{"position":[[1242,4],[4009,2]]},"632":{"position":[[1092,4],[3308,2]]},"634":{"position":[[1099,4],[3512,2],[6463,4],[8681,2],[11516,4],[13740,2]]},"644":{"position":[[1853,4],[4067,2],[6889,4],[9101,2]]},"646":{"position":[[1168,4],[3541,2],[6357,4],[8577,2]]},"648":{"position":[[1235,4],[3578,2],[6827,4],[9316,2],[12277,4],[14768,2],[17807,4],[20021,2],[22887,4],[25097,2]]},"668":{"position":[[5805,4],[8212,2]]},"670":{"position":[[2166,4],[4629,2]]},"692":{"position":[[1450,4],[3733,2],[6410,4],[8701,2],[11541,4],[14250,2],[17724,4],[19938,2],[22840,4],[25050,2]]},"694":{"position":[[4068,4],[6949,2],[10338,4],[12558,2]]},"696":{"position":[[3859,4],[6384,2],[9747,4],[12794,2],[16599,4],[18807,2]]},"698":{"position":[[4116,4],[6831,2],[10313,4],[12531,2]]},"718":{"position":[[3066,4],[5467,2],[8331,4],[10557,2],[13492,4],[15893,2],[18714,4],[20940,2],[23877,4],[26117,2],[29701,4],[32734,2],[36284,4],[38510,2]]},"720":{"position":[[1108,4],[3324,2],[7807,4],[10021,2]]},"722":{"position":[[8036,4],[10899,2],[14536,4],[17075,2],[20317,4],[23010,2],[26257,4],[28780,2],[31853,4],[34196,2],[37001,4],[39310,2],[42221,4],[44431,2],[47328,4],[49568,2]]},"734":{"position":[[4061,4],[7582,2]]},"740":{"position":[[1403,4],[3609,2],[6518,4],[8732,2],[11683,4],[14086,2],[16871,4],[19079,2]]},"742":{"position":[[5514,4],[7712,2],[11143,4],[14414,2],[18438,4],[21153,2],[24412,4],[26618,2]]},"744":{"position":[[2267,4],[5092,2],[8943,4],[11704,2],[15400,4],[18163,2]]},"746":{"position":[[6045,4],[12606,2]]},"767":{"position":[[1976,4],[6267,2],[11472,4],[14645,2],[18583,4],[21616,2],[25970,4],[28182,2],[31150,4],[33364,2],[36189,4],[38409,2],[41248,4],[43470,2]]},"769":{"position":[[1272,4],[3486,2],[8603,4],[10809,2],[13952,4],[16176,2],[23699,4],[25921,2],[31353,4],[33557,2],[40340,4],[42544,2]]},"786":{"position":[[2769,4],[5054,2],[7799,4],[10015,2],[12868,4],[15153,2],[17855,4],[20071,2],[22900,4],[25118,2],[30050,4],[32266,2],[35094,4],[37310,2]]},"788":{"position":[[3517,4],[6326,2],[9796,4],[12016,2]]},"790":{"position":[[1263,4],[3596,2],[6819,4],[9216,2],[11997,4],[14213,2]]},"792":{"position":[[3966,4],[6485,2],[9980,4],[12204,2],[16511,4],[18840,2]]},"809":{"position":[[2769,4],[5060,2],[7820,4],[10042,2],[12904,4],[15187,2],[17885,4],[20099,2],[22924,4],[25142,2],[29561,4],[31775,2],[34599,4],[36815,2]]},"811":{"position":[[3365,4],[6488,2],[10268,4],[12490,2]]},"813":{"position":[[3077,4],[5826,2],[9401,4],[11629,2]]},"815":{"position":[[4122,4],[7283,2],[10930,4],[13160,2],[16101,4],[18335,2],[21209,4],[23447,2],[26406,4],[28640,2],[31512,4],[33746,2]]}}}],["os.environ.get('fga_api_host",{"_index":405,"t":{"16":{"position":[[15679,31],[21291,31],[27079,31]]},"80":{"position":[[5384,31]]},"86":{"position":[[1965,31]]},"112":{"position":[[2323,31]]},"124":{"position":[[2323,31]]},"170":{"position":[[1783,31]]},"190":{"position":[[2323,31]]},"213":{"position":[[3522,31]]},"215":{"position":[[3514,31],[8685,31]]},"221":{"position":[[4807,31],[10011,31],[15222,31],[20251,31]]},"230":{"position":[[3782,31]]},"232":{"position":[[3560,31]]},"245":{"position":[[3784,31]]},"247":{"position":[[3529,31],[8559,31]]},"257":{"position":[[2299,31]]},"288":{"position":[[3602,31],[8510,31],[14363,31]]},"312":{"position":[[3656,31],[8683,31]]},"318":{"position":[[3967,31],[9260,31],[14494,31]]},"338":{"position":[[3711,31]]},"345":{"position":[[4625,31]]},"369":{"position":[[4214,31],[9580,31]]},"371":{"position":[[4446,31]]},"373":{"position":[[3492,31]]},"385":{"position":[[3620,31]]},"387":{"position":[[3611,31],[8864,31]]},"445":{"position":[[3665,31],[8713,31]]},"449":{"position":[[3628,31],[8843,31]]},"467":{"position":[[3553,31]]},"469":{"position":[[3795,31]]},"471":{"position":[[3684,31]]},"485":{"position":[[3895,31]]},"487":{"position":[[3804,31]]},"505":{"position":[[4264,31],[9526,31],[14941,31],[20053,31],[25094,31]]},"521":{"position":[[3568,31]]},"523":{"position":[[4132,31]]},"525":{"position":[[3750,31]]},"537":{"position":[[3866,31]]},"541":{"position":[[3861,31]]},"543":{"position":[[3662,31]]},"545":{"position":[[3460,31],[8406,31]]},"547":{"position":[[3522,31],[8398,31]]},"562":{"position":[[3649,31]]},"569":{"position":[[4060,31],[9554,31],[15000,31]]},"571":{"position":[[3909,31]]},"576":{"position":[[3819,31],[9153,31]]},"583":{"position":[[3995,31]]},"605":{"position":[[4780,31],[10373,31],[16624,31],[22870,31],[28530,31]]},"607":{"position":[[4628,31],[10306,31],[16061,31],[21803,31]]},"622":{"position":[[4145,31]]},"624":{"position":[[3627,31]]},"630":{"position":[[4233,31]]},"632":{"position":[[3532,31]]},"634":{"position":[[3736,31],[8905,31],[13964,31]]},"644":{"position":[[4291,31],[9325,31]]},"646":{"position":[[3765,31],[8801,31]]},"648":{"position":[[3802,31],[9540,31],[14992,31],[20245,31],[25321,31]]},"668":{"position":[[8436,31]]},"670":{"position":[[4853,31]]},"692":{"position":[[3957,31],[8925,31],[14474,31],[20162,31],[25274,31]]},"694":{"position":[[7173,31],[12782,31]]},"696":{"position":[[6608,31],[13018,31],[19031,31]]},"698":{"position":[[7055,31],[12755,31]]},"718":{"position":[[5691,31],[10781,31],[16117,31],[21164,31],[26341,31],[32958,31],[38734,31]]},"720":{"position":[[3548,31],[10245,31]]},"722":{"position":[[11123,31],[17299,31],[23234,31],[29004,31],[34420,31],[39534,31],[44655,31],[49792,31]]},"734":{"position":[[7806,31]]},"740":{"position":[[3833,31],[8956,31],[14310,31],[19303,31]]},"742":{"position":[[7936,31],[14638,31],[21377,31],[26842,31]]},"744":{"position":[[5316,31],[11928,31],[18387,31]]},"746":{"position":[[12830,31]]},"767":{"position":[[6491,31],[14869,31],[21840,31],[28406,31],[33588,31],[38633,31],[43694,31]]},"769":{"position":[[3710,31],[11033,31],[16400,31],[26145,31],[33781,31],[42768,31]]},"786":{"position":[[5278,31],[10239,31],[15377,31],[20295,31],[25342,31],[32490,31],[37534,31]]},"788":{"position":[[6550,31],[12240,31]]},"790":{"position":[[3820,31],[9440,31],[14437,31]]},"792":{"position":[[6709,31],[12428,31],[19064,31]]},"809":{"position":[[5284,31],[10266,31],[15411,31],[20323,31],[25366,31],[31999,31],[37039,31]]},"811":{"position":[[6712,31],[12714,31]]},"813":{"position":[[6050,31],[11853,31]]},"815":{"position":[[7507,31],[13384,31],[18559,31],[23671,31],[28864,31],[33970,31]]}}}],["os.environ.get('fga_api_schem",{"_index":403,"t":{"16":{"position":[[15586,33],[21198,33],[26986,33]]},"80":{"position":[[5291,33]]},"86":{"position":[[1921,32]]},"112":{"position":[[2230,33]]},"124":{"position":[[2230,33]]},"170":{"position":[[1739,32]]},"190":{"position":[[2230,33]]},"213":{"position":[[3429,33]]},"215":{"position":[[3421,33],[8592,33]]},"221":{"position":[[4714,33],[9918,33],[15129,33],[20158,33]]},"230":{"position":[[3689,33]]},"232":{"position":[[3467,33]]},"245":{"position":[[3691,33]]},"247":{"position":[[3436,33],[8466,33]]},"257":{"position":[[2206,33]]},"288":{"position":[[3509,33],[8417,33],[14270,33]]},"312":{"position":[[3563,33],[8590,33]]},"318":{"position":[[3874,33],[9167,33],[14401,33]]},"338":{"position":[[3618,33]]},"345":{"position":[[4532,33]]},"369":{"position":[[4121,33],[9487,33]]},"371":{"position":[[4353,33]]},"373":{"position":[[3399,33]]},"385":{"position":[[3527,33]]},"387":{"position":[[3518,33],[8771,33]]},"445":{"position":[[3572,33],[8620,33]]},"449":{"position":[[3535,33],[8750,33]]},"467":{"position":[[3460,33]]},"469":{"position":[[3702,33]]},"471":{"position":[[3591,33]]},"485":{"position":[[3802,33]]},"487":{"position":[[3711,33]]},"505":{"position":[[4171,33],[9433,33],[14848,33],[19960,33],[25001,33]]},"521":{"position":[[3475,33]]},"523":{"position":[[4039,33]]},"525":{"position":[[3657,33]]},"537":{"position":[[3773,33]]},"541":{"position":[[3768,33]]},"543":{"position":[[3569,33]]},"545":{"position":[[3367,33],[8313,33]]},"547":{"position":[[3429,33],[8305,33]]},"562":{"position":[[3556,33]]},"569":{"position":[[3967,33],[9461,33],[14907,33]]},"571":{"position":[[3816,33]]},"576":{"position":[[3726,33],[9060,33]]},"583":{"position":[[3902,33]]},"605":{"position":[[4687,33],[10280,33],[16531,33],[22777,33],[28437,33]]},"607":{"position":[[4535,33],[10213,33],[15968,33],[21710,33]]},"622":{"position":[[4052,33]]},"624":{"position":[[3534,33]]},"630":{"position":[[4140,33]]},"632":{"position":[[3439,33]]},"634":{"position":[[3643,33],[8812,33],[13871,33]]},"644":{"position":[[4198,33],[9232,33]]},"646":{"position":[[3672,33],[8708,33]]},"648":{"position":[[3709,33],[9447,33],[14899,33],[20152,33],[25228,33]]},"668":{"position":[[8343,33]]},"670":{"position":[[4760,33]]},"692":{"position":[[3864,33],[8832,33],[14381,33],[20069,33],[25181,33]]},"694":{"position":[[7080,33],[12689,33]]},"696":{"position":[[6515,33],[12925,33],[18938,33]]},"698":{"position":[[6962,33],[12662,33]]},"718":{"position":[[5598,33],[10688,33],[16024,33],[21071,33],[26248,33],[32865,33],[38641,33]]},"720":{"position":[[3455,33],[10152,33]]},"722":{"position":[[11030,33],[17206,33],[23141,33],[28911,33],[34327,33],[39441,33],[44562,33],[49699,33]]},"734":{"position":[[7713,33]]},"740":{"position":[[3740,33],[8863,33],[14217,33],[19210,33]]},"742":{"position":[[7843,33],[14545,33],[21284,33],[26749,33]]},"744":{"position":[[5223,33],[11835,33],[18294,33]]},"746":{"position":[[12737,33]]},"767":{"position":[[6398,33],[14776,33],[21747,33],[28313,33],[33495,33],[38540,33],[43601,33]]},"769":{"position":[[3617,33],[10940,33],[16307,33],[26052,33],[33688,33],[42675,33]]},"786":{"position":[[5185,33],[10146,33],[15284,33],[20202,33],[25249,33],[32397,33],[37441,33]]},"788":{"position":[[6457,33],[12147,33]]},"790":{"position":[[3727,33],[9347,33],[14344,33]]},"792":{"position":[[6616,33],[12335,33],[18971,33]]},"809":{"position":[[5191,33],[10173,33],[15318,33],[20230,33],[25273,33],[31906,33],[36946,33]]},"811":{"position":[[6619,33],[12621,33]]},"813":{"position":[[5957,33],[11760,33]]},"815":{"position":[[7414,33],[13291,33],[18466,33],[23578,33],[28771,33],[33877,33]]}}}],["os.environ.get('fga_store_id",{"_index":407,"t":{"16":{"position":[[15826,30],[21438,30],[27226,30]]},"80":{"position":[[5531,30]]},"112":{"position":[[2470,30]]},"124":{"position":[[2470,30]]},"170":{"position":[[1826,30]]},"190":{"position":[[2470,30]]},"213":{"position":[[3669,30]]},"215":{"position":[[3661,30],[8832,30]]},"221":{"position":[[4954,30],[10158,30],[15369,30],[20398,30]]},"230":{"position":[[3929,30]]},"232":{"position":[[3707,30]]},"245":{"position":[[3931,30]]},"247":{"position":[[3676,30],[8706,30]]},"257":{"position":[[2446,30]]},"288":{"position":[[3749,30],[8657,30],[14510,30]]},"312":{"position":[[3803,30],[8830,30]]},"318":{"position":[[4114,30],[9407,30],[14641,30]]},"338":{"position":[[3858,30]]},"345":{"position":[[4772,30]]},"369":{"position":[[4361,30],[9727,30]]},"371":{"position":[[4593,30]]},"373":{"position":[[3639,30]]},"385":{"position":[[3767,30]]},"387":{"position":[[3758,30],[9011,30]]},"445":{"position":[[3812,30],[8860,30]]},"449":{"position":[[3775,30],[8990,30]]},"467":{"position":[[3700,30]]},"469":{"position":[[3942,30]]},"471":{"position":[[3831,30]]},"485":{"position":[[4042,30]]},"487":{"position":[[3951,30]]},"505":{"position":[[4411,30],[9673,30],[15088,30],[20200,30],[25241,30]]},"521":{"position":[[3715,30]]},"523":{"position":[[4279,30]]},"525":{"position":[[3897,30]]},"537":{"position":[[4013,30]]},"541":{"position":[[4008,30]]},"543":{"position":[[3809,30]]},"545":{"position":[[3607,30],[8553,30]]},"547":{"position":[[3669,30],[8545,30]]},"562":{"position":[[3796,30]]},"569":{"position":[[4207,30],[9701,30],[15147,30]]},"571":{"position":[[4056,30]]},"576":{"position":[[3966,30],[9300,30]]},"583":{"position":[[4142,30]]},"605":{"position":[[4927,30],[10520,30],[16771,30],[23017,30],[28677,30]]},"607":{"position":[[4775,30],[10453,30],[16208,30],[21950,30]]},"622":{"position":[[4292,30]]},"624":{"position":[[3774,30]]},"630":{"position":[[4380,30]]},"632":{"position":[[3679,30]]},"634":{"position":[[3883,30],[9052,30],[14111,30]]},"644":{"position":[[4438,30],[9472,30]]},"646":{"position":[[3912,30],[8948,30]]},"648":{"position":[[3949,30],[9687,30],[15139,30],[20392,30],[25468,30]]},"668":{"position":[[8583,30]]},"670":{"position":[[5000,30]]},"692":{"position":[[4104,30],[9072,30],[14621,30],[20309,30],[25421,30]]},"694":{"position":[[7320,30],[12929,30]]},"696":{"position":[[6755,30],[13165,30],[19178,30]]},"698":{"position":[[7202,30],[12902,30]]},"718":{"position":[[5838,30],[10928,30],[16264,30],[21311,30],[26488,30],[33105,30],[38881,30]]},"720":{"position":[[3695,30],[10392,30]]},"722":{"position":[[11270,30],[17446,30],[23381,30],[29151,30],[34567,30],[39681,30],[44802,30],[49939,30]]},"734":{"position":[[7953,30]]},"740":{"position":[[3980,30],[9103,30],[14457,30],[19450,30]]},"742":{"position":[[8083,30],[14785,30],[21524,30],[26989,30]]},"744":{"position":[[5463,30],[12075,30],[18534,30]]},"746":{"position":[[12977,30]]},"767":{"position":[[6638,30],[15016,30],[21987,30],[28553,30],[33735,30],[38780,30],[43841,30]]},"769":{"position":[[3857,30],[11180,30],[16547,30],[26292,30],[33928,30],[42915,30]]},"786":{"position":[[5425,30],[10386,30],[15524,30],[20442,30],[25489,30],[32637,30],[37681,30]]},"788":{"position":[[6697,30],[12387,30]]},"790":{"position":[[3967,30],[9587,30],[14584,30]]},"792":{"position":[[6856,30],[12575,30],[19211,30]]},"809":{"position":[[5431,30],[10413,30],[15558,30],[20470,30],[25513,30],[32146,30],[37186,30]]},"811":{"position":[[6859,30],[12861,30]]},"813":{"position":[[6197,30],[12000,30]]},"815":{"position":[[7654,30],[13531,30],[18706,30],[23818,30],[29011,30],[34117,30]]}}}],["os.environ.get(fga_api_host",{"_index":1137,"t":{"172":{"position":[[3109,29]]}}}],["os.environ.get(fga_api_schem",{"_index":1136,"t":{"172":{"position":[[3034,31]]}}}],["os.environ.get(fga_store_id",{"_index":1138,"t":{"172":{"position":[[3254,29]]}}}],["os.getenv(\"fga_api_host",{"_index":364,"t":{"16":{"position":[[13510,26],[19122,26],[24899,26]]},"80":{"position":[[2283,26]]},"86":{"position":[[671,26]]},"98":{"position":[[4693,26]]},"102":{"position":[[565,26]]},"112":{"position":[[917,26]]},"124":{"position":[[917,26]]},"170":{"position":[[742,26]]},"172":{"position":[[1251,26]]},"190":{"position":[[917,26]]},"213":{"position":[[1298,26]]},"215":{"position":[[1351,26],[6518,26]]},"221":{"position":[[2652,26],[7713,26],[13059,26],[18084,26]]},"230":{"position":[[1560,26]]},"232":{"position":[[1395,26]]},"245":{"position":[[1641,26]]},"247":{"position":[[1315,26],[6414,26]]},"257":{"position":[[893,26]]},"288":{"position":[[1396,26],[6302,26],[11664,26]]},"312":{"position":[[1491,26],[6520,26]]},"318":{"position":[[1625,26],[7095,26],[12329,26]]},"338":{"position":[[1532,26]]},"345":{"position":[[2466,26]]},"369":{"position":[[1594,26],[7411,26]]},"371":{"position":[[1606,26]]},"373":{"position":[[1323,26]]},"385":{"position":[[1372,26]]},"387":{"position":[[1432,26],[6683,26]]},"445":{"position":[[1494,26],[6544,26]]},"449":{"position":[[1455,26],[6670,26]]},"467":{"position":[[1333,26]]},"469":{"position":[[1415,26]]},"471":{"position":[[1505,26]]},"485":{"position":[[1571,26]]},"487":{"position":[[1633,26]]},"505":{"position":[[1704,26],[7361,26],[12776,26],[17884,26],[22927,26]]},"521":{"position":[[1344,26]]},"523":{"position":[[1754,26]]},"525":{"position":[[1567,26]]},"537":{"position":[[1474,26]]},"541":{"position":[[1477,26]]},"543":{"position":[[1440,26]]},"545":{"position":[[1319,26],[6265,26]]},"547":{"position":[[1316,26],[6255,26]]},"562":{"position":[[1488,26]]},"569":{"position":[[1788,26],[7341,26],[12767,26]]},"571":{"position":[[1873,26]]},"576":{"position":[[1518,26],[6852,26]]},"583":{"position":[[1516,26]]},"605":{"position":[[2617,26],[8210,26],[14455,26],[20707,26],[26365,26]]},"607":{"position":[[2463,26],[8135,26],[13894,26],[19636,26]]},"622":{"position":[[1689,26]]},"624":{"position":[[1442,26]]},"630":{"position":[[1513,26]]},"632":{"position":[[1363,26]]},"634":{"position":[[1370,26],[6734,26],[11787,26]]},"644":{"position":[[2124,26],[7160,26]]},"646":{"position":[[1439,26],[6628,26]]},"648":{"position":[[1506,26],[7098,26],[12548,26],[18078,26],[23158,26]]},"668":{"position":[[6076,26]]},"670":{"position":[[2437,26]]},"692":{"position":[[1721,26],[6681,26],[11812,26],[17995,26],[23111,26]]},"694":{"position":[[4339,26],[10609,26]]},"696":{"position":[[4130,26],[10018,26],[16870,26]]},"698":{"position":[[4387,26],[10584,26]]},"718":{"position":[[3337,26],[8602,26],[13763,26],[18985,26],[24148,26],[29972,26],[36555,26]]},"720":{"position":[[1379,26],[8078,26]]},"722":{"position":[[8307,26],[14807,26],[20588,26],[26528,26],[32124,26],[37272,26],[42492,26],[47599,26]]},"734":{"position":[[4332,26]]},"740":{"position":[[1674,26],[6789,26],[11954,26],[17142,26]]},"742":{"position":[[5785,26],[11414,26],[18709,26],[24683,26]]},"744":{"position":[[2538,26],[9214,26],[15671,26]]},"746":{"position":[[6316,26]]},"767":{"position":[[2247,26],[11743,26],[18854,26],[26241,26],[31421,26],[36460,26],[41519,26]]},"769":{"position":[[1543,26],[8874,26],[14223,26],[23970,26],[31624,26],[40611,26]]},"786":{"position":[[3040,26],[8070,26],[13139,26],[18126,26],[23171,26],[30321,26],[35365,26]]},"788":{"position":[[3788,26],[10067,26]]},"790":{"position":[[1534,26],[7090,26],[12268,26]]},"792":{"position":[[4237,26],[10251,26],[16782,26]]},"809":{"position":[[3040,26],[8091,26],[13175,26],[18156,26],[23195,26],[29832,26],[34870,26]]},"811":{"position":[[3636,26],[10539,26]]},"813":{"position":[[3348,26],[9672,26]]},"815":{"position":[[4393,26],[11201,26],[16372,26],[21480,26],[26677,26],[31783,26]]}}}],["os.getenv(\"fga_api_schem",{"_index":654,"t":{"86":{"position":[[600,28]]},"98":{"position":[[4596,28]]},"102":{"position":[[494,28]]},"170":{"position":[[645,28]]},"172":{"position":[[1180,28]]}}}],["os.getenv(\"fga_bearer_token",{"_index":1128,"t":{"172":{"position":[[1631,30]]}}}],["os.getenv(\"fga_schem",{"_index":363,"t":{"16":{"position":[[13427,24],[19039,24],[24816,24]]},"80":{"position":[[2200,24]]},"112":{"position":[[834,24]]},"124":{"position":[[834,24]]},"190":{"position":[[834,24]]},"213":{"position":[[1215,24]]},"215":{"position":[[1268,24],[6435,24]]},"221":{"position":[[2569,24],[7630,24],[12976,24],[18001,24]]},"230":{"position":[[1477,24]]},"232":{"position":[[1312,24]]},"245":{"position":[[1558,24]]},"247":{"position":[[1232,24],[6331,24]]},"257":{"position":[[810,24]]},"288":{"position":[[1313,24],[6219,24],[11581,24]]},"312":{"position":[[1408,24],[6437,24]]},"318":{"position":[[1542,24],[7012,24],[12246,24]]},"338":{"position":[[1449,24]]},"345":{"position":[[2383,24]]},"369":{"position":[[1511,24],[7328,24]]},"371":{"position":[[1523,24]]},"373":{"position":[[1240,24]]},"385":{"position":[[1289,24]]},"387":{"position":[[1349,24],[6600,24]]},"445":{"position":[[1411,24],[6461,24]]},"449":{"position":[[1372,24],[6587,24]]},"467":{"position":[[1250,24]]},"469":{"position":[[1332,24]]},"471":{"position":[[1422,24]]},"485":{"position":[[1488,24]]},"487":{"position":[[1550,24]]},"505":{"position":[[1621,24],[7278,24],[12693,24],[17801,24],[22844,24]]},"521":{"position":[[1261,24]]},"523":{"position":[[1671,24]]},"525":{"position":[[1484,24]]},"537":{"position":[[1391,24]]},"541":{"position":[[1394,24]]},"543":{"position":[[1357,24]]},"545":{"position":[[1236,24],[6182,24]]},"547":{"position":[[1233,24],[6172,24]]},"562":{"position":[[1405,24]]},"569":{"position":[[1705,24],[7258,24],[12684,24]]},"571":{"position":[[1790,24]]},"576":{"position":[[1435,24],[6769,24]]},"583":{"position":[[1433,24]]},"605":{"position":[[2534,24],[8127,24],[14372,24],[20624,24],[26282,24]]},"607":{"position":[[2380,24],[8052,24],[13811,24],[19553,24]]},"622":{"position":[[1606,24]]},"624":{"position":[[1359,24]]},"630":{"position":[[1430,24]]},"632":{"position":[[1280,24]]},"634":{"position":[[1287,24],[6651,24],[11704,24]]},"644":{"position":[[2041,24],[7077,24]]},"646":{"position":[[1356,24],[6545,24]]},"648":{"position":[[1423,24],[7015,24],[12465,24],[17995,24],[23075,24]]},"668":{"position":[[5993,24]]},"670":{"position":[[2354,24]]},"692":{"position":[[1638,24],[6598,24],[11729,24],[17912,24],[23028,24]]},"694":{"position":[[4256,24],[10526,24]]},"696":{"position":[[4047,24],[9935,24],[16787,24]]},"698":{"position":[[4304,24],[10501,24]]},"718":{"position":[[3254,24],[8519,24],[13680,24],[18902,24],[24065,24],[29889,24],[36472,24]]},"720":{"position":[[1296,24],[7995,24]]},"722":{"position":[[8224,24],[14724,24],[20505,24],[26445,24],[32041,24],[37189,24],[42409,24],[47516,24]]},"734":{"position":[[4249,24]]},"740":{"position":[[1591,24],[6706,24],[11871,24],[17059,24]]},"742":{"position":[[5702,24],[11331,24],[18626,24],[24600,24]]},"744":{"position":[[2455,24],[9131,24],[15588,24]]},"746":{"position":[[6233,24]]},"767":{"position":[[2164,24],[11660,24],[18771,24],[26158,24],[31338,24],[36377,24],[41436,24]]},"769":{"position":[[1460,24],[8791,24],[14140,24],[23887,24],[31541,24],[40528,24]]},"786":{"position":[[2957,24],[7987,24],[13056,24],[18043,24],[23088,24],[30238,24],[35282,24]]},"788":{"position":[[3705,24],[9984,24]]},"790":{"position":[[1451,24],[7007,24],[12185,24]]},"792":{"position":[[4154,24],[10168,24],[16699,24]]},"809":{"position":[[2957,24],[8008,24],[13092,24],[18073,24],[23112,24],[29749,24],[34787,24]]},"811":{"position":[[3553,24],[10456,24]]},"813":{"position":[[3265,24],[9589,24]]},"815":{"position":[[4310,24],[11118,24],[16289,24],[21397,24],[26594,24],[31700,24]]}}}],["os.getenv(\"fga_store_id",{"_index":365,"t":{"16":{"position":[[13651,26],[19263,26],[25040,26]]},"80":{"position":[[2424,26]]},"98":{"position":[[4729,26]]},"112":{"position":[[1058,26]]},"124":{"position":[[1058,26]]},"170":{"position":[[883,26]]},"172":{"position":[[1392,26]]},"190":{"position":[[1058,26]]},"213":{"position":[[1439,26]]},"215":{"position":[[1492,26],[6659,26]]},"221":{"position":[[2793,26],[7854,26],[13200,26],[18225,26]]},"230":{"position":[[1701,26]]},"232":{"position":[[1536,26]]},"245":{"position":[[1782,26]]},"247":{"position":[[1456,26],[6555,26]]},"257":{"position":[[1034,26]]},"288":{"position":[[1537,26],[6443,26],[11805,26]]},"312":{"position":[[1632,26],[6661,26]]},"318":{"position":[[1766,26],[7236,26],[12470,26]]},"338":{"position":[[1673,26]]},"345":{"position":[[2607,26]]},"369":{"position":[[1735,26],[7552,26]]},"371":{"position":[[1747,26]]},"373":{"position":[[1464,26]]},"385":{"position":[[1513,26]]},"387":{"position":[[1573,26],[6824,26]]},"445":{"position":[[1635,26],[6685,26]]},"449":{"position":[[1596,26],[6811,26]]},"467":{"position":[[1474,26]]},"469":{"position":[[1556,26]]},"471":{"position":[[1646,26]]},"485":{"position":[[1712,26]]},"487":{"position":[[1774,26]]},"505":{"position":[[1845,26],[7502,26],[12917,26],[18025,26],[23068,26]]},"521":{"position":[[1485,26]]},"523":{"position":[[1895,26]]},"525":{"position":[[1708,26]]},"537":{"position":[[1615,26]]},"541":{"position":[[1618,26]]},"543":{"position":[[1581,26]]},"545":{"position":[[1460,26],[6406,26]]},"547":{"position":[[1457,26],[6396,26]]},"562":{"position":[[1629,26]]},"569":{"position":[[1929,26],[7482,26],[12908,26]]},"571":{"position":[[2014,26]]},"576":{"position":[[1659,26],[6993,26]]},"583":{"position":[[1657,26]]},"605":{"position":[[2758,26],[8351,26],[14596,26],[20848,26],[26506,26]]},"607":{"position":[[2604,26],[8276,26],[14035,26],[19777,26]]},"622":{"position":[[1830,26]]},"624":{"position":[[1583,26]]},"630":{"position":[[1654,26]]},"632":{"position":[[1504,26]]},"634":{"position":[[1511,26],[6875,26],[11928,26]]},"644":{"position":[[2265,26],[7301,26]]},"646":{"position":[[1580,26],[6769,26]]},"648":{"position":[[1647,26],[7239,26],[12689,26],[18219,26],[23299,26]]},"668":{"position":[[6217,26]]},"670":{"position":[[2578,26]]},"692":{"position":[[1862,26],[6822,26],[11953,26],[18136,26],[23252,26]]},"694":{"position":[[4480,26],[10750,26]]},"696":{"position":[[4271,26],[10159,26],[17011,26]]},"698":{"position":[[4528,26],[10725,26]]},"718":{"position":[[3478,26],[8743,26],[13904,26],[19126,26],[24289,26],[30113,26],[36696,26]]},"720":{"position":[[1520,26],[8219,26]]},"722":{"position":[[8448,26],[14948,26],[20729,26],[26669,26],[32265,26],[37413,26],[42633,26],[47740,26]]},"734":{"position":[[4473,26]]},"740":{"position":[[1815,26],[6930,26],[12095,26],[17283,26]]},"742":{"position":[[5926,26],[11555,26],[18850,26],[24824,26]]},"744":{"position":[[2679,26],[9355,26],[15812,26]]},"746":{"position":[[6457,26]]},"767":{"position":[[2388,26],[11884,26],[18995,26],[26382,26],[31562,26],[36601,26],[41660,26]]},"769":{"position":[[1684,26],[9015,26],[14364,26],[24111,26],[31765,26],[40752,26]]},"786":{"position":[[3181,26],[8211,26],[13280,26],[18267,26],[23312,26],[30462,26],[35506,26]]},"788":{"position":[[3929,26],[10208,26]]},"790":{"position":[[1675,26],[7231,26],[12409,26]]},"792":{"position":[[4378,26],[10392,26],[16923,26]]},"809":{"position":[[3181,26],[8232,26],[13316,26],[18297,26],[23336,26],[29973,26],[35011,26]]},"811":{"position":[[3777,26],[10680,26]]},"813":{"position":[[3489,26],[9813,26]]},"815":{"position":[[4534,26],[11342,26],[16513,26],[21621,26],[26818,26],[31924,26]]}}}],["otel",{"_index":1053,"t":{"152":{"position":[[565,4]]}}}],["other",{"_index":117,"t":{"10":{"position":[[440,8]]},"304":{"position":[[403,6]]},"403":{"position":[[5713,6]]},"407":{"position":[[392,7]]},"742":{"position":[[762,7]]}}}],["other'",{"_index":2464,"t":{"744":{"position":[[769,7]]}}}],["otlp",{"_index":1088,"t":{"158":{"position":[[41,4],[301,4]]}}}],["out",{"_index":1301,"t":{"267":{"position":[[155,3]]},"269":{"position":[[593,3]]},"403":{"position":[[1896,3]]},"407":{"position":[[153,3]]},"589":{"position":[[6,3]]},"648":{"position":[[5642,3]]},"692":{"position":[[16571,3]]},"698":{"position":[[2826,4]]},"724":{"position":[[659,3]]},"769":{"position":[[20948,4]]}}}],["outlin",{"_index":863,"t":{"130":{"position":[[19,8]]},"174":{"position":[[19,8]]},"391":{"position":[[317,8]]},"710":{"position":[[710,8]]},"758":{"position":[[752,8]]},"765":{"position":[[274,8]]},"779":{"position":[[331,8]]},"802":{"position":[[375,8]]}}}],["outsid",{"_index":99,"t":{"8":{"position":[[614,8]]},"740":{"position":[[20975,7]]}}}],["over",{"_index":507,"t":{"54":{"position":[[69,4]]},"140":{"position":[[710,4]]},"219":{"position":[[560,4]]},"273":{"position":[[1477,4]]},"403":{"position":[[296,4]]}}}],["overrid",{"_index":1724,"t":{"431":{"position":[[318,8],[613,8]]}}}],["overview",{"_index":1172,"t":{"200":{"position":[[657,8]]}}}],["own",{"_index":611,"t":{"74":{"position":[[197,4]]},"435":{"position":[[291,4]]},"437":{"position":[[509,5]]},"445":{"position":[[10484,4]]},"449":{"position":[[165,4],[5380,4]]},"473":{"position":[[423,5]]},"529":{"position":[[296,4]]},"545":{"position":[[55,5]]},"660":{"position":[[214,5],[508,5],[3029,5],[3923,4],[5226,4],[6548,4],[7776,4],[9583,4]]},"672":{"position":[[3462,4],[4765,4],[6087,4],[7315,4],[9122,4]]},"773":{"position":[[1252,5]]},"775":{"position":[[730,5]]},"781":{"position":[[536,5]]},"783":{"position":[[394,4],[444,5]]},"792":{"position":[[14625,4]]},"806":{"position":[[241,5],[447,5]]}}}],["owner",{"_index":177,"t":{"16":{"position":[[948,6],[1080,8],[1346,8],[1810,6],[2059,8],[2457,8],[6755,6],[6921,8],[7187,8],[7386,6]]},"54":{"position":[[274,6],[305,5],[475,5],[566,6],[597,5],[767,5],[1149,8],[1326,7],[1742,7],[1936,8],[2471,8],[2648,7],[3064,7],[3258,8],[3964,6]]},"68":{"position":[[432,7],[550,7],[918,6],[957,5],[1140,8],[1250,7],[1514,8]]},"80":{"position":[[182,6],[354,8],[548,8],[1566,8],[1760,8]]},"98":{"position":[[547,8],[4213,8],[4252,8]]},"259":{"position":[[3083,8]]},"261":{"position":[[160,6],[213,6],[510,8],[566,8],[715,8],[771,8]]},"397":{"position":[[1397,5],[1471,5],[1548,5],[1666,5],[1847,5],[1895,5],[2047,5],[2110,6],[2177,5],[2281,5],[2331,5],[2415,5],[2450,5],[2495,5],[2528,5],[2744,5],[2780,5]]},"399":{"position":[[534,5],[608,5],[685,5],[761,5],[889,5],[937,5],[1089,5],[1152,6],[1217,5],[1321,5],[1371,5],[1455,5],[1490,5],[1535,5],[1568,5],[1784,5],[1820,5],[2278,5],[2352,5],[2429,5],[2547,5],[2729,5],[2777,5],[2929,5],[2992,6],[3059,5],[3163,5],[3213,5],[3297,5],[3332,5],[3377,5],[3410,5],[3626,5],[3662,5]]},"401":{"position":[[769,5],[843,5],[920,5],[1038,5],[1219,5],[1267,5],[1419,5],[1482,6],[1549,5],[1653,5],[1703,5],[1787,5],[1822,5],[1867,5],[1900,5],[2116,5],[2152,5],[2285,5],[2368,5],[2461,5],[2924,6],[3068,6],[3247,6]]},"403":{"position":[[3312,6],[3323,5],[3378,6],[3484,5],[3575,5],[3721,5],[3865,6],[3977,6],[3984,6],[4085,8],[7160,5],[7208,5],[7370,5],[7389,5],[7857,5],[7920,5],[8038,5],[8261,6],[8324,5],[8546,5],[8577,5],[8720,5],[8768,5],[8991,5],[9000,5],[9129,5],[9164,5],[9335,5],[9470,6],[9630,5],[9649,5],[9704,5],[9757,5],[9803,5],[9812,5],[9855,5],[10059,6],[10219,5],[10238,5],[10293,5],[10346,5],[10392,5],[10401,5],[10444,5]]},"405":{"position":[[1871,6],[1908,8],[2140,6],[2177,8],[2581,5],[3159,5]]},"437":{"position":[[300,6],[759,6],[984,8],[1142,8],[1611,5],[1680,8],[2299,5]]},"447":{"position":[[126,6],[242,6],[353,5],[515,8],[812,7],[923,8]]},"491":{"position":[[240,6],[477,6],[1518,8],[1569,6]]},"493":{"position":[[285,6],[355,6],[493,8],[575,8]]},"499":{"position":[[110,6]]},"501":{"position":[[190,5],[247,5],[333,6],[471,8],[553,8]]},"503":{"position":[[650,6],[805,6],[863,5],[902,5],[1010,8],[1113,7],[1252,7],[1302,8]]},"505":{"position":[[332,5],[1150,5],[1203,8],[2329,5],[3787,5],[3848,8],[5039,5],[5891,5],[26806,5],[26874,5],[26962,5],[27018,6]]},"539":{"position":[[171,5],[184,6],[455,7],[539,8],[595,8],[1007,5],[1166,5],[1288,5]]},"541":{"position":[[67,5],[176,5],[924,8],[981,8],[3383,8],[3450,8]]},"547":{"position":[[820,8],[3111,8]]},"660":{"position":[[1042,6],[1132,5],[1173,5],[1798,8],[1923,7],[2102,7],[2659,8],[3974,8],[6607,8]]},"672":{"position":[[380,6],[470,5],[522,5],[1673,8],[1798,7],[2041,7],[2534,8],[3513,8],[6146,8]]},"712":{"position":[[493,6]]},"726":{"position":[[229,7]]},"792":{"position":[[1226,7],[1505,6],[2063,8],[2678,8],[2783,7],[3727,8],[6284,8],[14211,5],[14340,7],[20756,5],[20912,5],[21063,5],[21076,6],[21133,6],[21456,7],[21781,7],[22101,7],[22122,8],[22987,8],[23110,8],[23196,8]]},"804":{"position":[[171,7]]},"809":{"position":[[145,7],[434,6],[623,8],[760,8],[11927,5],[12665,8],[14986,8],[17684,8],[18676,8],[19875,8],[21759,8],[21778,7],[27069,6],[27323,6],[27362,5],[27544,8],[27654,7],[27920,8],[29360,8],[30352,8],[31551,8],[33435,8],[33454,7]]},"811":{"position":[[465,6],[532,5],[786,8],[896,7],[1162,8]]},"813":{"position":[[565,6],[632,5],[868,8],[978,7],[1317,8],[14853,6],[14884,5],[14941,5],[15290,8],[15394,7],[15538,7],[16233,8]]},"815":{"position":[[610,6],[641,5],[698,5],[1054,8],[1158,7],[1302,7],[1997,8],[2683,6],[3494,5],[3563,8],[4861,5],[6665,5],[6742,8],[8175,5],[9402,5],[9912,5],[10721,8],[11721,8],[12928,8],[14836,8],[14855,7]]}}}],["ownership",{"_index":1744,"t":{"445":{"position":[[10611,9]]},"792":{"position":[[528,9]]}}}],["p",{"_index":885,"t":{"138":{"position":[[201,1],[214,1],[227,1]]},"142":{"position":[[1341,1],[1354,1],[1367,1],[4008,1],[4021,1],[4034,1]]},"144":{"position":[[1464,1],[1477,1],[1490,1],[2983,1],[2996,1],[3009,1]]},"148":{"position":[[314,1],[327,1],[340,1],[353,1],[560,1],[573,1],[586,1],[599,1]]},"152":{"position":[[158,1],[171,1],[294,1],[307,1]]}}}],["p$$mysql_root_password",{"_index":978,"t":{"142":{"position":[[4515,23]]}}}],["packag",{"_index":691,"t":{"94":{"position":[[165,9],[187,7],[249,7],[318,7],[1035,9],[1063,7],[1183,7],[1385,7]]},"96":{"position":[[129,7],[1588,7]]},"98":{"position":[[2748,7]]},"102":{"position":[[40,9],[98,7],[221,7],[916,7],[940,7],[994,7],[1134,7]]}}}],["page",{"_index":446,"t":{"16":{"position":[[22964,4],[28796,4]]},"259":{"position":[[2682,4],[2711,4]]},"273":{"position":[[1491,5]]},"758":{"position":[[445,5]]}}}],["page_s",{"_index":1262,"t":{"259":{"position":[[779,14],[2486,12]]},"261":{"position":[[1825,12],[3379,12]]}}}],["page_size=\"25",{"_index":1260,"t":{"259":{"position":[[561,15],[2025,15]]},"261":{"position":[[1588,15],[2901,15]]}}}],["pages",{"_index":1253,"t":{"259":{"position":[[139,8],[188,9],[405,8],[454,9],[1388,8],[1437,9],[1869,8],[1918,9]]},"261":{"position":[[1128,8],[1177,9],[1417,8],[1466,9],[2226,8],[2275,9],[2730,8],[2779,9]]}}}],["pagesize(25",{"_index":1257,"t":{"259":{"position":[[297,13],[1546,13]]},"261":{"position":[[1303,13],[2401,13]]}}}],["pagin",{"_index":1251,"t":{"259":{"position":[[9,9]]},"273":{"position":[[1468,8],[2305,8]]}}}],["pair",{"_index":765,"t":{"96":{"position":[[1845,4],[2034,4]]},"98":{"position":[[3055,4],[3244,4]]}}}],["paper",{"_index":199,"t":{"16":{"position":[[3095,6]]},"52":{"position":[[526,6]]},"68":{"position":[[99,6],[374,6]]}}}],["parallel",{"_index":1300,"t":{"267":{"position":[[95,8]]},"744":{"position":[[730,8]]}}}],["paramet",{"_index":1290,"t":{"261":{"position":[[2010,9]]},"383":{"position":[[186,11]]},"403":{"position":[[6799,9]]}}}],["parent",{"_index":122,"t":{"12":{"position":[[181,6]]},"60":{"position":[[1413,6],[2046,6],[2116,6],[2782,7],[3468,6]]},"68":{"position":[[735,8],[797,6],[1010,6],[1416,8],[1887,6],[2122,8],[2621,6],[2656,6],[2681,6]]},"200":{"position":[[448,6]]},"296":{"position":[[469,6],[521,6]]},"397":{"position":[[1587,6],[1714,6],[1933,6],[2215,6],[2369,6],[2800,6],[2836,6]]},"399":{"position":[[975,6],[1255,6],[1409,6],[1840,6],[1876,6],[2468,6],[2595,6],[2815,6],[3097,6],[3251,6],[3682,6],[3718,6]]},"401":{"position":[[959,6],[1086,6],[1305,6],[1587,6],[1741,6],[2172,6],[2208,6],[2268,6],[2408,6],[2909,7],[3082,7]]},"403":{"position":[[5396,7],[5408,6],[5477,6],[5610,9],[5660,7],[5816,6],[5901,6],[6049,6],[6141,7],[6222,6],[6408,9],[6476,9],[6597,6],[7240,6],[7400,6],[7933,6],[7969,6],[8362,6],[8567,6],[8588,6],[8816,6],[9011,6],[9595,7],[9660,6],[9725,6],[9747,6],[9768,6],[9823,6],[10184,7],[10249,6],[10314,6],[10336,6],[10357,6],[10412,6]]},"419":{"position":[[207,6],[259,6],[297,6],[375,6],[542,9],[680,8],[802,9],[1015,8],[1325,9],[2375,7],[2429,6],[2467,7],[2545,6],[2851,9],[2989,8],[3101,9],[3284,9],[3497,8],[3609,9]]},"423":{"position":[[204,9],[1440,7],[1507,6],[1545,7],[1636,6],[1905,9],[2043,8],[2155,9],[2381,9],[2594,8],[2706,9]]},"429":{"position":[[964,7],[1032,6],[1095,6],[1147,6],[1258,9],[1382,8],[1480,9],[1579,8],[1962,9],[2627,9]]},"437":{"position":[[2390,6],[2458,6]]},"439":{"position":[[46,6]]},"453":{"position":[[251,6]]},"461":{"position":[[275,6],[706,6]]},"463":{"position":[[11,6],[421,7],[733,9],[816,9],[1010,6],[1064,7]]},"465":{"position":[[225,7],[279,6],[559,9],[683,8],[781,9],[1042,6],[1092,7],[1158,6]]},"469":{"position":[[86,6],[827,6],[898,9],[1893,6],[3284,6],[3363,9],[4473,6],[5219,6]]},"471":{"position":[[5604,6],[5656,6]]},"473":{"position":[[58,6],[253,7],[302,6]]},"549":{"position":[[94,6],[161,6]]},"611":{"position":[[139,6]]},"620":{"position":[[36,6],[122,6],[206,7],[395,9],[478,9]]},"622":{"position":[[94,6],[204,6],[1175,9],[3716,9]]},"624":{"position":[[138,6],[966,9],[1967,9],[3175,9],[5091,9],[5111,8],[5410,6],[5490,6]]},"636":{"position":[[192,6],[238,6]]},"722":{"position":[[1378,6],[6770,6]]},"769":{"position":[[7509,6],[18139,6],[18278,8],[18532,6],[18839,7]]},"771":{"position":[[237,6]]},"773":{"position":[[979,6]]},"790":{"position":[[109,6]]},"792":{"position":[[14122,6],[14688,7],[14870,6],[14941,9]]},"796":{"position":[[1061,6]]},"813":{"position":[[420,6],[539,7],[842,9],[1244,9],[1808,8],[2762,6],[2837,9],[4012,6],[5541,6],[5624,9],[6864,6],[7822,6],[8064,6],[8278,6],[8324,6],[13555,6],[13786,8],[14134,9],[14191,7],[14369,6],[14440,9],[14895,6],[14962,6],[15036,6],[15107,6],[15121,7],[15431,8],[15644,8],[15864,8],[16081,8],[16103,9],[16160,9]]},"815":{"position":[[652,6],[719,6],[793,6],[871,6],[885,7],[1195,8],[1408,8],[1628,8],[1845,8],[1867,9],[1924,9]]}}}],["parent(",{"_index":1611,"t":{"403":{"position":[[6233,9]]}}}],["parent_fold",{"_index":511,"t":{"54":{"position":[[316,13],[337,14],[422,13],[496,13],[608,13],[629,14],[714,13],[788,13],[1260,15],[1347,16],[1555,15],[1817,15],[2048,16],[2582,15],[2669,16],[2877,15],[3139,15],[3370,16],[3949,14]]},"60":{"position":[[410,14],[471,13],[802,16],[947,15],[1066,16],[1498,13],[1685,15],[2199,16]]}}}],["parent_workspac",{"_index":294,"t":{"16":{"position":[[9020,16]]},"722":{"position":[[1673,17],[1945,19],[2064,19],[2817,16],[3092,17],[3374,19],[3572,19],[4701,17],[5760,19],[5958,19],[7584,19],[7674,19],[7775,19],[10465,19],[10565,19],[10676,19]]}}}],["pars",{"_index":789,"t":{"98":{"position":[[61,5],[2569,5],[4046,5]]}}}],["parsetime=tru",{"_index":921,"t":{"142":{"position":[[422,15]]}}}],["part",{"_index":482,"t":{"16":{"position":[[30206,4]]},"152":{"position":[[1018,4]]},"219":{"position":[[772,4]]},"236":{"position":[[144,4]]},"296":{"position":[[651,4]]},"304":{"position":[[698,4]]},"345":{"position":[[842,4],[1086,4],[1159,4]]},"377":{"position":[[172,4]]},"399":{"position":[[2060,4],[4375,4]]},"403":{"position":[[910,4],[2250,4],[7495,4]]},"485":{"position":[[5905,4],[6024,4]]},"790":{"position":[[165,4]]}}}],["part_of",{"_index":1585,"t":{"403":{"position":[[856,9]]}}}],["partial",{"_index":1317,"t":{"273":{"position":[[1560,7]]},"712":{"position":[[62,7]]}}}],["particip",{"_index":1541,"t":{"397":{"position":[[1141,13]]}}}],["particular",{"_index":56,"t":{"6":{"position":[[158,10]]},"16":{"position":[[28651,10],[28977,10],[29244,10]]},"46":{"position":[[109,10]]},"56":{"position":[[608,10],[833,10]]},"60":{"position":[[2581,10]]},"142":{"position":[[3132,11]]},"196":{"position":[[142,10],[241,10]]},"202":{"position":[[71,10]]},"211":{"position":[[86,10]]},"219":{"position":[[621,10]]},"236":{"position":[[61,10]]},"245":{"position":[[73,10]]},"263":{"position":[[268,10]]},"269":{"position":[[158,10]]},"304":{"position":[[708,10]]},"403":{"position":[[5919,10]]},"405":{"position":[[366,10]]},"415":{"position":[[817,11]]},"435":{"position":[[125,10]]},"485":{"position":[[162,10]]},"529":{"position":[[61,10]]},"562":{"position":[[55,10],[106,10]]},"569":{"position":[[88,10],[145,10],[167,10],[237,10],[274,10],[299,10],[356,10],[5825,10],[11258,10],[11295,10]]},"576":{"position":[[64,10]]},"578":{"position":[[135,10],[236,10]]},"581":{"position":[[85,10]]},"583":{"position":[[5811,10]]},"587":{"position":[[56,10],[193,10],[233,10]]},"628":{"position":[[1447,10]]},"654":{"position":[[61,10],[109,10]]},"658":{"position":[[547,10]]},"660":{"position":[[182,10]]},"668":{"position":[[498,10]]},"670":{"position":[[776,10]]},"712":{"position":[[304,10]]},"732":{"position":[[549,10]]},"734":{"position":[[436,10]]},"744":{"position":[[7642,10]]},"769":{"position":[[18502,10]]},"792":{"position":[[8574,10]]}}}],["partner",{"_index":2091,"t":{"660":{"position":[[568,7],[1071,8],[1202,7],[1823,10],[2246,9],[2735,10],[4084,10],[6727,10]]},"672":{"position":[[409,8],[551,7],[1698,10],[2185,9],[2610,10],[3623,10],[6266,10]]}}}],["pass",{"_index":1129,"t":{"172":{"position":[[1673,6]]},"271":{"position":[[230,4]]},"273":{"position":[[1313,4]]},"405":{"position":[[3818,5]]}}}],["password",{"_index":63,"t":{"6":{"position":[[282,8]]}}}],["path",{"_index":1539,"t":{"397":{"position":[[993,5]]},"435":{"position":[[604,5]]},"771":{"position":[[463,5]]}}}],["pattern",{"_index":1370,"t":{"296":{"position":[[1487,8]]},"298":{"position":[[49,8],[264,8]]},"304":{"position":[[286,8]]},"549":{"position":[[258,8]]},"611":{"position":[[185,7]]},"636":{"position":[[107,9],[168,9]]},"769":{"position":[[7498,7],[18128,7]]}}}],["pc",{"_index":2459,"t":{"744":{"position":[[359,2],[393,2]]}}}],["pend",{"_index":2675,"t":{"792":{"position":[[8789,9]]},"813":{"position":[[8227,9]]}}}],["peopl",{"_index":1376,"t":{"304":{"position":[[354,6]]},"710":{"position":[[54,6],[103,6]]}}}],["per",{"_index":1084,"t":{"156":{"position":[[446,3]]},"290":{"position":[[43,3]]},"543":{"position":[[124,3]]}}}],["percentag",{"_index":1310,"t":{"273":{"position":[[221,10],[630,10],[874,10],[1084,10],[2058,10],[2894,10],[3043,10],[3287,10]]},"275":{"position":[[562,10]]}}}],["perform",{"_index":53,"t":{"6":{"position":[[128,7]]},"74":{"position":[[579,7],[612,7],[687,7],[735,7]]},"90":{"position":[[286,7],[650,7]]},"106":{"position":[[36,7]]},"116":{"position":[[56,7]]},"118":{"position":[[36,7]]},"128":{"position":[[56,7]]},"132":{"position":[[15,11]]},"148":{"position":[[143,11]]},"178":{"position":[[257,11],[297,7]]},"263":{"position":[[621,10]]},"273":{"position":[[3613,10]]},"290":{"position":[[609,7]]},"349":{"position":[[904,7]]},"393":{"position":[[583,7],[847,7],[1147,7]]},"395":{"position":[[95,7]]},"397":{"position":[[98,7],[1221,7]]},"399":{"position":[[237,7],[4420,9]]},"401":{"position":[[246,7]]},"403":{"position":[[241,7]]},"405":{"position":[[272,7],[503,7]]},"415":{"position":[[340,11],[1159,9]]},"427":{"position":[[679,12]]},"435":{"position":[[106,7]]},"585":{"position":[[717,11]]},"587":{"position":[[329,7],[413,7]]},"648":{"position":[[16671,7]]},"652":{"position":[[118,7]]},"658":{"position":[[905,7]]},"660":{"position":[[623,7]]},"674":{"position":[[189,7]]},"682":{"position":[[264,7]]},"688":{"position":[[139,7]]},"690":{"position":[[233,7]]},"712":{"position":[[823,7]]},"716":{"position":[[85,7],[408,7]]},"732":{"position":[[907,7]]},"750":{"position":[[308,7]]}}}],["period",{"_index":2421,"t":{"742":{"position":[[9662,8]]}}}],["permiss",{"_index":84,"t":{"8":{"position":[[295,11]]},"10":{"position":[[30,11],[197,11]]},"16":{"position":[[1552,10]]},"22":{"position":[[100,10]]},"50":{"position":[[189,10]]},"58":{"position":[[2203,11]]},"62":{"position":[[1591,11]]},"70":{"position":[[238,10]]},"98":{"position":[[1648,12]]},"200":{"position":[[756,11]]},"269":{"position":[[615,11]]},"296":{"position":[[349,11],[422,11]]},"343":{"position":[[187,11],[274,11]]},"351":{"position":[[143,11]]},"353":{"position":[[346,12],[520,11]]},"355":{"position":[[1093,12]]},"365":{"position":[[121,11],[176,11],[803,11],[1261,11]]},"375":{"position":[[87,11],[169,12]]},"391":{"position":[[172,12],[293,12]]},"393":{"position":[[767,10]]},"401":{"position":[[656,11]]},"403":{"position":[[7567,10],[8125,12]]},"435":{"position":[[326,11]]},"437":{"position":[[2547,12],[2636,11]]},"441":{"position":[[76,11]]},"491":{"position":[[52,11],[255,11],[436,11],[493,11],[582,11],[698,11],[1029,11],[1121,12],[1437,11],[1717,11]]},"499":{"position":[[33,11],[160,11],[421,11],[476,11]]},"503":{"position":[[0,11],[67,11],[151,12],[341,10],[409,11],[617,11],[665,11]]},"505":{"position":[[53,11],[200,12]]},"507":{"position":[[68,12]]},"517":{"position":[[106,10]]},"527":{"position":[[302,11]]},"581":{"position":[[198,11]]},"583":{"position":[[113,11]]},"591":{"position":[[262,11],[384,11]]},"609":{"position":[[207,11],[289,12],[342,11]]},"624":{"position":[[5365,12]]},"672":{"position":[[9603,10]]},"676":{"position":[[36,11],[116,10]]},"678":{"position":[[928,10]]},"682":{"position":[[250,10]]},"686":{"position":[[202,12]]},"690":{"position":[[219,10]]},"692":{"position":[[16587,10]]},"694":{"position":[[207,11],[1016,10]]},"698":{"position":[[2435,10],[2622,11]]},"700":{"position":[[217,10]]},"704":{"position":[[36,11],[494,11]]},"710":{"position":[[280,10],[483,11],[573,11],[648,12]]},"712":{"position":[[939,10],[1197,12]]},"716":{"position":[[71,10],[456,12]]},"718":{"position":[[207,11],[448,11],[503,11]]},"724":{"position":[[485,10]]},"726":{"position":[[206,11]]},"746":{"position":[[19106,10]]},"771":{"position":[[796,10]]},"773":{"position":[[58,10]]},"779":{"position":[[111,10],[265,12]]},"781":{"position":[[9,10],[125,12]]},"786":{"position":[[23,10],[123,11],[161,11],[217,11],[27172,10]]},"788":{"position":[[100,12],[202,11]]},"790":{"position":[[90,11],[16104,11]]},"792":{"position":[[29,11],[248,10],[293,11],[400,11],[657,11],[8478,12],[8860,10],[15238,10],[15338,10]]},"794":{"position":[[29,12]]},"796":{"position":[[53,11]]},"802":{"position":[[149,10],[309,12]]},"804":{"position":[[15,10],[131,12],[330,10],[368,10]]},"809":{"position":[[210,11],[248,11],[302,11],[27204,10]]},"811":{"position":[[180,11]]},"813":{"position":[[0,10],[253,11],[8047,11]]},"815":{"position":[[94,11],[253,11]]},"817":{"position":[[72,11]]}}}],["permission(",{"_index":1485,"t":{"371":{"position":[[102,14]]}}}],["permit",{"_index":1964,"t":{"591":{"position":[[373,10]]},"712":{"position":[[190,9]]}}}],["persist",{"_index":916,"t":{"142":{"position":[[126,10]]},"259":{"position":[[1026,10],[2622,10]]},"672":{"position":[[9415,9]]},"746":{"position":[[18919,9]]}}}],["person",{"_index":1139,"t":{"174":{"position":[[95,8]]},"176":{"position":[[120,8]]},"682":{"position":[[236,6],[350,6]]},"690":{"position":[[206,6]]},"692":{"position":[[16512,6]]},"716":{"position":[[57,6],[172,6]]}}}],["pg_isreadi",{"_index":943,"t":{"142":{"position":[[1828,11]]}}}],["phone",{"_index":2458,"t":{"744":{"position":[[340,5]]}}}],["photo",{"_index":130,"t":{"14":{"position":[[196,7]]},"202":{"position":[[469,5]]},"509":{"position":[[487,5]]}}}],["phrase",{"_index":2597,"t":{"769":{"position":[[6004,7]]}}}],["pick",{"_index":1528,"t":{"395":{"position":[[389,4]]},"397":{"position":[[634,6],[2681,6]]},"399":{"position":[[1721,6],[3563,6]]},"401":{"position":[[2053,6]]}}}],["pictur",{"_index":1558,"t":{"399":{"position":[[4511,7]]}}}],["ping",{"_index":975,"t":{"142":{"position":[[4472,7]]}}}],["pip3",{"_index":853,"t":{"102":{"position":[[1212,4]]}}}],["place",{"_index":1265,"t":{"259":{"position":[[937,6]]}}}],["plain",{"_index":1535,"t":{"397":{"position":[[606,5]]},"628":{"position":[[1765,5]]}}}],["plaintext",{"_index":1042,"t":{"150":{"position":[[364,9]]}}}],["plan",{"_index":41,"t":{"4":{"position":[[392,7]]},"60":{"position":[[2093,8],[2280,8]]},"180":{"position":[[11,8]]},"221":{"position":[[939,9],[1123,8]]},"306":{"position":[[354,11],[1183,8]]},"312":{"position":[[10839,8]]},"318":{"position":[[222,8],[1067,8],[2114,8],[3486,8],[4656,8],[5372,8]]},"437":{"position":[[498,10],[671,10],[1620,8],[1751,8],[1876,8],[2312,8]]},"449":{"position":[[78,8],[174,8],[5283,8],[5389,8]]},"453":{"position":[[927,5],[972,4]]},"553":{"position":[[935,8]]},"605":{"position":[[1296,8],[6889,8],[12577,8],[13131,8],[18960,8],[19381,8],[25038,8],[30180,8],[30386,8]]},"607":{"position":[[1140,8],[6809,8],[12325,8],[12570,8],[18308,8]]},"626":{"position":[[151,6]]},"628":{"position":[[70,5],[159,6],[235,4],[703,6],[802,7],[1086,5],[1458,4],[1472,4],[1525,4],[1645,4],[1814,4],[1856,4],[1884,4],[1950,5],[2083,5]]},"630":{"position":[[909,4],[2168,4],[3706,4],[5038,4],[6006,4]]},"634":{"position":[[784,4],[1843,4],[3227,4],[4409,4],[5153,4]]},"754":{"position":[[518,4],[577,4],[987,4]]},"760":{"position":[[100,6],[203,5],[254,6],[403,4],[464,4]]},"762":{"position":[[183,4],[243,4],[303,4]]},"765":{"position":[[314,5],[441,4],[519,4],[686,6],[698,4],[1032,6],[1062,7]]},"767":{"position":[[166,5],[879,4],[902,4],[1018,4],[1041,4],[1157,4],[1180,4],[1318,4],[1341,4],[1469,4],[1492,4],[1636,4],[1659,4],[2712,4],[2735,4],[2907,4],[2930,4],[3102,4],[3125,4],[3319,4],[3342,4],[3526,4],[3549,4],[3749,4],[3772,4],[5150,4],[5173,4],[5299,4],[5322,4],[5448,4],[5471,4],[5619,4],[5642,4],[5780,4],[5803,4],[5957,4],[5980,4],[7156,4],[7179,4],[7301,4],[7324,4],[7446,4],[7469,4],[7613,4],[7636,4],[7770,4],[7793,4],[7943,4],[7966,4],[9094,4],[9117,4],[9237,4],[9260,4],[9380,4],[9403,4],[9545,4],[9568,4],[9700,4],[9723,4],[9871,4],[9894,4],[10100,5],[10888,4],[11038,4],[11189,4],[12261,4],[12467,4],[12674,4],[14071,4],[14231,4],[14392,4],[15587,4],[15743,4],[15900,4],[16800,4],[16954,4],[17109,4]]},"769":{"position":[[5581,6],[5802,6],[6645,6],[6679,4],[7032,6],[7131,7],[18926,4],[19031,6],[19439,6],[19729,6],[19829,4],[20431,6],[20724,5],[20781,5],[21582,6],[21651,4],[22163,6],[22262,7],[28385,5],[28501,5],[28718,6],[28794,4],[29362,6],[29461,7],[30062,4],[30138,5],[30225,4],[35995,6],[36417,6],[36569,6],[36935,6],[37673,6],[37739,4],[38261,6],[38291,7]]},"806":{"position":[[342,8]]},"813":{"position":[[2645,8],[2719,11],[2748,8],[2816,10],[3839,8],[3964,11],[3998,8],[4081,11],[5414,8],[5497,9],[5527,8],[5602,10],[6741,8],[6810,10],[6850,8],[6915,10],[7701,8],[7778,9],[7808,8],[7877,10],[14473,9],[14620,10],[14693,10]]}}}],["plan'",{"_index":2502,"t":{"754":{"position":[[604,6]]},"769":{"position":[[30275,6]]}}}],["plan:advanc",{"_index":2026,"t":{"630":{"position":[[801,13],[875,17],[966,16],[2004,13],[3588,13],[3671,15],[3770,16],[4924,13],[5894,13]]},"634":{"position":[[22,13],[823,16],[3273,16],[5458,14],[11339,16],[12336,16],[13541,15],[15479,16],[15515,15]]}}}],["plan:enterpris",{"_index":2526,"t":{"767":{"position":[[1376,18],[1540,18],[1707,18],[5684,18],[5858,18],[6035,18],[11255,18],[14467,17]]}}}],["plan:fre",{"_index":2522,"t":{"767":{"position":[[937,12],[5215,12],[10955,13],[14147,11],[41020,12],[42016,12],[43218,12],[45081,12],[45115,11]]},"769":{"position":[[27867,9]]}}}],["plan:i",{"_index":2614,"t":{"769":{"position":[[37426,8],[37447,9]]}}}],["plan:team",{"_index":2524,"t":{"767":{"position":[[1076,12],[1228,12],[5364,12],[5526,12],[11105,13],[14307,11],[36016,12],[37011,12],[38214,11],[40148,12],[40180,11]]}}}],["plan:z",{"_index":2605,"t":{"769":{"position":[[20203,8],[20224,9]]}}}],["planning\",\"relation\":\"parent\",\"object\":\"document:2021",{"_index":2716,"t":{"813":{"position":[[7530,53]]}}}],["planning\"},{\"user\":\"document:2021",{"_index":2715,"t":{"813":{"position":[[7496,33]]}}}],["platform",{"_index":1380,"t":{"304":{"position":[[623,9]]},"704":{"position":[[68,8]]},"724":{"position":[[124,8],[321,9]]},"752":{"position":[[55,8]]}}}],["playground",{"_index":157,"t":{"16":{"position":[[446,11],[3204,10]]},"52":{"position":[[845,11]]},"80":{"position":[[7450,11]]},"130":{"position":[[242,11]]},"138":{"position":[[449,11]]},"142":{"position":[[2627,10],[5258,10]]},"146":{"position":[[4,10],[202,10],[387,11]]},"403":{"position":[[10597,10]]},"431":{"position":[[822,10]]}}}],["pleas",{"_index":241,"t":{"16":{"position":[[4466,6],[5182,6],[7490,6],[9450,6],[22928,6],[28760,6],[29348,6],[30273,6]]},"152":{"position":[[1074,6]]},"154":{"position":[[159,6]]},"164":{"position":[[93,6]]},"172":{"position":[[345,6]]},"417":{"position":[[210,6]]},"485":{"position":[[5455,6]]}}}],["plugin",{"_index":693,"t":{"94":{"position":[[242,6],[281,7],[391,6],[447,6]]},"96":{"position":[[274,9]]},"98":{"position":[[245,9],[868,9]]}}}],["point",{"_index":1534,"t":{"397":{"position":[[557,6]]},"405":{"position":[[1347,5]]},"634":{"position":[[7,5]]}}}],["polici",{"_index":2261,"t":{"712":{"position":[[743,9]]}}}],["poll",{"_index":1771,"t":{"475":{"position":[[381,4]]}}}],["port",{"_index":889,"t":{"138":{"position":[[347,4]]},"142":{"position":[[1706,6],[2507,6],[4343,6],[5138,6]]},"146":{"position":[[227,4],[327,4]]},"148":{"position":[[453,4]]}}}],["posit",{"_index":2235,"t":{"698":{"position":[[201,8],[318,8],[2775,8]]},"702":{"position":[[244,8]]}}}],["possibl",{"_index":168,"t":{"16":{"position":[[705,8],[5326,11],[5685,9],[5728,8]]},"20":{"position":[[54,8]]},"30":{"position":[[97,11]]},"32":{"position":[[98,9]]},"52":{"position":[[243,8]]},"58":{"position":[[1062,8]]},"60":{"position":[[47,8]]},"140":{"position":[[517,8]]},"150":{"position":[[156,8]]},"174":{"position":[[186,8]]},"204":{"position":[[1302,11]]},"208":{"position":[[224,11]]},"221":{"position":[[22314,11]]},"227":{"position":[[224,11]]},"236":{"position":[[283,8]]},"238":{"position":[[1021,11]]},"242":{"position":[[224,11]]},"261":{"position":[[897,8]]},"265":{"position":[[16,8]]},"279":{"position":[[1621,11]]},"285":{"position":[[224,11]]},"306":{"position":[[1931,11]]},"310":{"position":[[224,11]]},"328":{"position":[[1434,11]]},"332":{"position":[[224,11]]},"377":{"position":[[293,8]]},"379":{"position":[[1013,11]]},"381":{"position":[[224,11]]},"427":{"position":[[6,8]]},"437":{"position":[[2920,11]]},"443":{"position":[[224,11]]},"455":{"position":[[1305,11]]},"459":{"position":[[224,11]]},"477":{"position":[[1074,11]]},"481":{"position":[[224,11]]},"493":{"position":[[1164,11]]},"497":{"position":[[224,11]]},"511":{"position":[[1052,11]]},"515":{"position":[[224,11]]},"531":{"position":[[1005,11]]},"535":{"position":[[224,11]]},"553":{"position":[[1476,11]]},"557":{"position":[[224,11]]},"593":{"position":[[593,11]]},"597":{"position":[[224,11]]},"613":{"position":[[1249,11]]},"617":{"position":[[224,11]]},"640":{"position":[[297,11]]},"658":{"position":[[98,11]]},"722":{"position":[[1278,8]]},"732":{"position":[[98,11]]},"769":{"position":[[21240,11]]},"771":{"position":[[454,8]]}}}],["post",{"_index":108,"t":{"10":{"position":[[143,7],[393,5]]},"16":{"position":[[16681,4],[22293,4],[28037,4]]},"80":{"position":[[6640,4]]},"86":{"position":[[2390,4]]},"98":{"position":[[460,7],[4138,7]]},"114":{"position":[[1343,4]]},"126":{"position":[[1350,4]]},"192":{"position":[[1310,4]]},"194":{"position":[[1470,4]]},"213":{"position":[[4472,4]]},"215":{"position":[[4513,4],[9686,4]]},"221":{"position":[[5802,4],[10997,4],[16221,4],[21252,4]]},"230":{"position":[[4731,4]]},"232":{"position":[[4560,4]]},"245":{"position":[[4773,4]]},"247":{"position":[[4474,4],[9549,4]]},"259":{"position":[[587,4],[2170,4]]},"261":{"position":[[1614,4],[3046,4]]},"288":{"position":[[4543,4],[9452,4],[15503,4]]},"312":{"position":[[4656,4],[9682,4]]},"318":{"position":[[4975,4],[10260,4],[15494,4]]},"338":{"position":[[4718,4]]},"345":{"position":[[5622,4]]},"369":{"position":[[5334,4],[10582,4]]},"371":{"position":[[5676,4]]},"373":{"position":[[4494,4]]},"385":{"position":[[4582,4]]},"387":{"position":[[4618,4],[9872,4]]},"417":{"position":[[364,6]]},"429":{"position":[[3160,4]]},"431":{"position":[[69,7]]},"445":{"position":[[4668,4],[9715,4]]},"449":{"position":[[4632,4],[9847,4]]},"467":{"position":[[4501,4]]},"469":{"position":[[4822,4]]},"471":{"position":[[4691,4]]},"475":{"position":[[443,4]]},"485":{"position":[[4894,4]]},"487":{"position":[[4807,4]]},"505":{"position":[[5354,4],[10526,4],[15941,4],[21055,4],[26095,4]]},"521":{"position":[[4518,4]]},"523":{"position":[[5158,4]]},"525":{"position":[[4759,4]]},"537":{"position":[[4874,4]]},"541":{"position":[[4865,4]]},"543":{"position":[[4611,4]]},"545":{"position":[[4448,4],[9394,4]]},"547":{"position":[[4463,4],[9387,4]]},"562":{"position":[[4647,4]]},"569":{"position":[[5095,4],[10570,4],[16026,4]]},"571":{"position":[[4826,4]]},"576":{"position":[[4799,4],[10133,4]]},"583":{"position":[[5082,4]]},"605":{"position":[[5779,4],[11372,4],[17626,4],[23869,4],[29530,4]]},"607":{"position":[[5628,4],[11309,4],[17062,4],[22804,4]]},"611":{"position":[[502,5],[557,5]]},"622":{"position":[[5210,4]]},"624":{"position":[[4637,4]]},"630":{"position":[[5403,4]]},"632":{"position":[[4534,4]]},"634":{"position":[[4756,4],[9908,4],[14970,4]]},"644":{"position":[[5292,4],[10325,4]]},"646":{"position":[[4765,4],[9805,4]]},"648":{"position":[[4881,4],[10573,4],[16026,4],[21246,4],[26320,4]]},"660":{"position":[[8081,4]]},"666":{"position":[[1508,4],[3407,4],[5316,4],[7224,4],[9130,4],[11040,4]]},"668":{"position":[[4090,4],[9453,4],[11339,4]]},"670":{"position":[[5898,4],[8482,4],[11311,4]]},"672":{"position":[[7620,4]]},"682":{"position":[[207,4]]},"692":{"position":[[4913,4],[9885,4],[15591,4],[21163,4],[26273,4]]},"694":{"position":[[8350,4],[13786,4]]},"696":{"position":[[7659,4],[14278,4],[20029,4]]},"698":{"position":[[8175,4],[13758,4]]},"700":{"position":[[8,5],[85,5]]},"710":{"position":[[565,7]]},"712":{"position":[[1189,7],[1227,4],[1266,4]]},"714":{"position":[[850,4],[955,4]]},"716":{"position":[[28,4]]},"718":{"position":[[6705,4],[11788,4],[17131,4],[22171,4],[27355,4],[34234,4],[39741,4]]},"720":{"position":[[4550,4],[11246,4]]},"722":{"position":[[12317,4],[18382,4],[24368,4],[30054,4],[35406,4],[40503,4],[45654,4],[50806,4]]},"734":{"position":[[9299,4]]},"740":{"position":[[4830,4],[9957,4],[15325,4],[20301,4]]},"742":{"position":[[8929,4],[16033,4],[22521,4],[27839,4]]},"744":{"position":[[6515,4],[13136,4],[19596,4]]},"746":{"position":[[15627,4]]},"767":{"position":[[8315,4],[16215,4],[23116,4],[29406,4],[34589,4],[39637,4],[44699,4]]},"769":{"position":[[4711,4],[12030,4],[17406,4],[27150,4],[34777,4],[43764,4]]},"786":{"position":[[6235,4],[11241,4],[16334,4],[21297,4],[26345,4],[33492,4],[38536,4]]},"788":{"position":[[7741,4],[13244,4]]},"790":{"position":[[4801,4],[10452,4],[15439,4]]},"792":{"position":[[7757,4],[13434,4],[20043,4]]},"794":{"position":[[186,4]]},"809":{"position":[[6244,4],[11271,4],[16367,4],[21324,4],[26369,4],[33000,4],[38041,4]]},"811":{"position":[[8008,4],[13719,4]]},"813":{"position":[[7211,4],[12861,4]]},"815":{"position":[[8847,4],[14393,4],[19570,4],[24684,4],[29875,4],[34981,4]]}}}],["postgr",{"_index":899,"t":{"140":{"position":[[306,8],[389,8]]},"142":{"position":[[177,8],[192,8],[227,8],[438,9],[511,8],[690,8],[754,8],[869,8],[1175,8],[1420,8],[1632,9],[1677,8],[1843,9],[1912,9],[2766,8],[2970,8]]}}}],["postgres://postgres:password@postgres:5432/postgres?sslmode=dis",{"_index":933,"t":{"142":{"position":[[1202,69],[1447,69]]}}}],["postgres://user:password@localhost:5432/mydatabas",{"_index":904,"t":{"140":{"position":[[403,50]]}}}],["postgres:14",{"_index":929,"t":{"142":{"position":[[837,11],[1649,11]]}}}],["postgres_password=password",{"_index":928,"t":{"142":{"position":[[810,26],[1767,26]]}}}],["postgres_user=postgr",{"_index":927,"t":{"142":{"position":[[784,22],[1742,22]]}}}],["potenti",{"_index":270,"t":{"16":{"position":[[6336,9]]}}}],["pprof",{"_index":1024,"t":{"148":{"position":[[193,5]]}}}],["practic",{"_index":616,"t":{"74":{"position":[[922,9],[937,9],[1031,9],[1046,9]]},"130":{"position":[[53,9]]},"134":{"position":[[105,9],[130,9]]},"162":{"position":[[77,9],[102,9]]},"174":{"position":[[53,9]]},"433":{"position":[[144,9],[169,9]]},"638":{"position":[[146,9]]},"652":{"position":[[266,9],[291,9]]},"694":{"position":[[231,8]]}}}],["pre",{"_index":983,"t":{"144":{"position":[[104,3],[147,3],[187,3],[1255,3],[2780,3]]},"267":{"position":[[0,3]]}}}],["preauthor",{"_index":788,"t":{"98":{"position":[[45,12],[2134,12],[2551,12],[3539,13]]}}}],["preauthorize(c",{"_index":811,"t":{"98":{"position":[[3843,14]]}}}],["preauthorize.j",{"_index":791,"t":{"98":{"position":[[200,16]]}}}],["prefer",{"_index":1329,"t":{"275":{"position":[[138,9]]},"712":{"position":[[727,11]]}}}],["prefix",{"_index":910,"t":{"140":{"position":[[762,8]]}}}],["prepar",{"_index":807,"t":{"98":{"position":[[2594,7]]}}}],["prepend",{"_index":815,"t":{"98":{"position":[[4290,7]]}}}],["preposit",{"_index":1576,"t":{"401":{"position":[[2641,13]]}}}],["prerequisit",{"_index":1878,"t":{"560":{"position":[[131,12]]}}}],["presenc",{"_index":312,"t":{"16":{"position":[[11212,8]]},"654":{"position":[[95,8]]}}}],["present",{"_index":148,"t":{"16":{"position":[[222,7],[29777,7]]},"48":{"position":[[262,7]]},"52":{"position":[[387,13],[917,14]]},"298":{"position":[[18,7]]},"304":{"position":[[599,7]]},"599":{"position":[[250,7],[480,7]]},"668":{"position":[[4785,8]]},"670":{"position":[[43,7]]},"744":{"position":[[43,7]]}}}],["preshar",{"_index":900,"t":{"140":{"position":[[336,9],[469,9],[479,10]]},"144":{"position":[[658,9],[668,10],[835,10],[1559,9],[2284,10]]}}}],["press",{"_index":2231,"t":{"696":{"position":[[20697,5]]}}}],["prevalid",{"_index":745,"t":{"96":{"position":[[740,13],[934,14]]},"98":{"position":[[1763,14]]}}}],["prevent",{"_index":1374,"t":{"304":{"position":[[38,10],[450,7]]},"405":{"position":[[1053,7]]},"435":{"position":[[370,7]]},"547":{"position":[[28,7]]},"666":{"position":[[11664,9]]},"740":{"position":[[20931,9]]}}}],["preview",{"_index":2027,"t":{"630":{"position":[[942,7],[2201,7],[3739,7],[5071,7],[6039,7]]},"634":{"position":[[799,7],[1858,7],[3242,7],[4424,7],[5168,7]]}}}],["previou",{"_index":1522,"t":{"393":{"position":[[705,8]]},"399":{"position":[[184,8],[344,8]]},"405":{"position":[[2508,8]]},"417":{"position":[[102,8]]},"483":{"position":[[3,8]]},"574":{"position":[[283,8]]},"650":{"position":[[21,8]]},"694":{"position":[[2827,8]]},"765":{"position":[[63,8]]},"792":{"position":[[15489,8]]}}}],["previous",{"_index":1361,"t":{"294":{"position":[[323,10]]},"401":{"position":[[12,10]]},"419":{"position":[[2122,10]]},"694":{"position":[[361,10]]},"767":{"position":[[24902,10]]},"769":{"position":[[21427,10]]}}}],["price",{"_index":1661,"t":{"419":{"position":[[1247,9],[1531,9],[1843,9]]},"425":{"position":[[178,9],[357,9],[1274,9],[2219,9]]},"760":{"position":[[196,6],[247,6]]}}}],["print(\"except",{"_index":673,"t":{"86":{"position":[[2315,16]]}}}],["prior",{"_index":1698,"t":{"427":{"position":[[70,5]]}}}],["prioriti",{"_index":909,"t":{"140":{"position":[[701,8]]}}}],["privat",{"_index":734,"t":{"96":{"position":[[390,8],[1818,7],[1887,7]]},"98":{"position":[[3028,7],[3097,7]]},"219":{"position":[[371,7]]},"288":{"position":[[5049,8]]},"712":{"position":[[995,7],[1046,7],[1142,8]]},"714":{"position":[[757,7]]}}}],["private/publ",{"_index":770,"t":{"96":{"position":[[2015,14]]},"98":{"position":[[3225,14]]}}}],["privatekey",{"_index":768,"t":{"96":{"position":[[1919,10],[2085,11]]},"98":{"position":[[3129,10],[3295,11]]}}}],["privatekey.publ",{"_index":780,"t":{"96":{"position":[[2277,20]]},"98":{"position":[[3487,20]]}}}],["privileg",{"_index":1363,"t":{"296":{"position":[[874,10]]},"435":{"position":[[529,10]]},"451":{"position":[[54,10]]},"642":{"position":[[160,10]]},"644":{"position":[[211,10]]}}}],["probabl",{"_index":1333,"t":{"275":{"position":[[349,11]]},"397":{"position":[[311,8]]}}}],["problem",{"_index":1023,"t":{"148":{"position":[[165,9]]},"263":{"position":[[103,8],[224,7]]},"664":{"position":[[64,7]]},"670":{"position":[[78,7]]},"692":{"position":[[257,7]]},"738":{"position":[[64,7]]},"744":{"position":[[78,7]]}}}],["proce",{"_index":1960,"t":{"585":{"position":[[786,7]]}}}],["proceed",{"_index":2589,"t":{"767":{"position":[[30110,10]]}}}],["process",{"_index":45,"t":{"6":{"position":[[31,7],[224,7],[326,7]]},"94":{"position":[[330,10]]},"391":{"position":[[328,7]]},"395":{"position":[[198,8],[277,7]]},"399":{"position":[[4212,7]]},"401":{"position":[[3334,7]]},"405":{"position":[[4054,7]]},"718":{"position":[[28015,7]]}}}],["process.env.fga_api_host",{"_index":343,"t":{"16":{"position":[[12662,25],[18274,25],[24046,25]]},"80":{"position":[[1110,25]]},"86":{"position":[[239,24]]},"98":{"position":[[1276,25]]},"112":{"position":[[383,25]]},"124":{"position":[[383,25]]},"170":{"position":[[329,25]]},"172":{"position":[[654,25]]},"190":{"position":[[383,25]]},"213":{"position":[[496,25]]},"215":{"position":[[506,25],[5671,25]]},"221":{"position":[[1811,25],[6874,25],[12214,25],[17237,25]]},"230":{"position":[[758,25]]},"232":{"position":[[549,25]]},"245":{"position":[[806,25]]},"247":{"position":[[517,25],[5578,25]]},"257":{"position":[[359,25]]},"288":{"position":[[603,25],[5507,25],[10685,25]]},"312":{"position":[[645,25],[5675,25]]},"318":{"position":[[764,25],[6249,25],[11483,25]]},"338":{"position":[[679,25]]},"345":{"position":[[1623,25]]},"369":{"position":[[627,25],[6563,25]]},"371":{"position":[[529,25]]},"373":{"position":[[475,25]]},"385":{"position":[[558,25]]},"387":{"position":[[579,25],[5829,25]]},"445":{"position":[[645,25],[5696,25]]},"449":{"position":[[605,25],[5820,25]]},"467":{"position":[[533,25]]},"469":{"position":[[535,25]]},"471":{"position":[[652,25]]},"485":{"position":[[719,25]]},"487":{"position":[[784,25]]},"505":{"position":[[767,25],[6515,25],[11930,25],[17036,25],[22080,25]]},"521":{"position":[[542,25]]},"523":{"position":[[875,25]]},"525":{"position":[[712,25]]},"537":{"position":[[621,25]]},"541":{"position":[[628,25]]},"543":{"position":[[639,25]]},"545":{"position":[[485,25],[5431,25]]},"547":{"position":[[522,25],[5420,25]]},"562":{"position":[[644,25]]},"569":{"position":[[894,25],[6466,25],[11882,25]]},"571":{"position":[[1097,25]]},"576":{"position":[[635,25],[5969,25]]},"583":{"position":[[556,25]]},"605":{"position":[[1772,25],[7365,25],[13607,25],[19862,25],[25519,25]]},"607":{"position":[[1617,25],[7286,25],[13047,25],[18789,25]]},"622":{"position":[[771,25]]},"624":{"position":[[586,25]]},"630":{"position":[[496,25]]},"632":{"position":[[515,25]]},"634":{"position":[[496,25],[5885,25],[10935,25]]},"644":{"position":[[1277,25],[6314,25]]},"646":{"position":[[586,25],[5778,25]]},"648":{"position":[[561,25],[6220,25],[11668,25],[17231,25],[22313,25]]},"668":{"position":[[5206,25]]},"670":{"position":[[1538,25]]},"692":{"position":[[913,25],[5869,25],[10857,25],[17148,25],[22266,25]]},"694":{"position":[[3331,25],[9759,25]]},"696":{"position":[[3234,25],[8927,25],[16026,25]]},"698":{"position":[[3429,25],[9735,25]]},"718":{"position":[[2470,25],[7749,25],[12896,25],[18132,25],[23288,25],[28855,25],[35702,25]]},"720":{"position":[[531,25],[7231,25]]},"722":{"position":[[7275,25],[13871,25],[19608,25],[25633,25],[31286,25],[36451,25],[41647,25],[46739,25]]},"734":{"position":[[3004,25]]},"740":{"position":[[831,25],[5942,25],[11086,25],[16298,25]]},"742":{"position":[[4946,25],[10178,25],[17718,25],[23840,25]]},"744":{"position":[[1491,25],[8186,25],[14642,25]]},"746":{"position":[[3732,25]]},"767":{"position":[[600,25],[10556,25],[17737,25],[25395,25],[30574,25],[35610,25],[40668,25]]},"769":{"position":[[696,25],[8031,25],[13371,25],[23119,25],[30782,25],[39769,25]]},"786":{"position":[[2231,25],[7222,25],[12330,25],[17278,25],[22322,25],[29473,25],[34517,25]]},"788":{"position":[[2750,25],[9217,25]]},"790":{"position":[[701,25],[6225,25],[11420,25]]},"792":{"position":[[3344,25],[9399,25],[15951,25]]},"809":{"position":[[2228,25],[7240,25],[12367,25],[17309,25],[22346,25],[28985,25],[34022,25]]},"811":{"position":[[2507,25],[9688,25]]},"813":{"position":[[2340,25],[8818,25]]},"815":{"position":[[3212,25],[10346,25],[15515,25],[20621,25],[25820,25],[30926,25]]}}}],["process.env.fga_api_schem",{"_index":340,"t":{"16":{"position":[[12576,27],[18188,27],[23960,27]]},"80":{"position":[[1024,27]]},"86":{"position":[[169,27]]},"98":{"position":[[1180,27]]},"112":{"position":[[297,27]]},"124":{"position":[[297,27]]},"170":{"position":[[233,27]]},"172":{"position":[[584,27]]},"190":{"position":[[297,27]]},"213":{"position":[[410,27]]},"215":{"position":[[420,27],[5585,27]]},"221":{"position":[[1725,27],[6788,27],[12128,27],[17151,27]]},"230":{"position":[[672,27]]},"232":{"position":[[463,27]]},"245":{"position":[[720,27]]},"247":{"position":[[431,27],[5492,27]]},"257":{"position":[[273,27]]},"288":{"position":[[517,27],[5421,27],[10599,27]]},"312":{"position":[[559,27],[5589,27]]},"318":{"position":[[678,27],[6163,27],[11397,27]]},"338":{"position":[[593,27]]},"345":{"position":[[1537,27]]},"369":{"position":[[541,27],[6477,27]]},"371":{"position":[[443,27]]},"373":{"position":[[389,27]]},"385":{"position":[[472,27]]},"387":{"position":[[493,27],[5743,27]]},"445":{"position":[[559,27],[5610,27]]},"449":{"position":[[519,27],[5734,27]]},"467":{"position":[[447,27]]},"469":{"position":[[449,27]]},"471":{"position":[[566,27]]},"485":{"position":[[633,27]]},"487":{"position":[[698,27]]},"505":{"position":[[681,27],[6429,27],[11844,27],[16950,27],[21994,27]]},"521":{"position":[[456,27]]},"523":{"position":[[789,27]]},"525":{"position":[[626,27]]},"537":{"position":[[535,27]]},"541":{"position":[[542,27]]},"543":{"position":[[553,27]]},"545":{"position":[[399,27],[5345,27]]},"547":{"position":[[436,27],[5334,27]]},"562":{"position":[[558,27]]},"569":{"position":[[808,27],[6380,27],[11796,27]]},"571":{"position":[[1011,27]]},"576":{"position":[[549,27],[5883,27]]},"583":{"position":[[470,27]]},"605":{"position":[[1686,27],[7279,27],[13521,27],[19776,27],[25433,27]]},"607":{"position":[[1531,27],[7200,27],[12961,27],[18703,27]]},"622":{"position":[[685,27]]},"624":{"position":[[500,27]]},"630":{"position":[[410,27]]},"632":{"position":[[429,27]]},"634":{"position":[[410,27],[5799,27],[10849,27]]},"644":{"position":[[1191,27],[6228,27]]},"646":{"position":[[500,27],[5692,27]]},"648":{"position":[[475,27],[6134,27],[11582,27],[17145,27],[22227,27]]},"668":{"position":[[5120,27]]},"670":{"position":[[1452,27]]},"692":{"position":[[827,27],[5783,27],[10771,27],[17062,27],[22180,27]]},"694":{"position":[[3245,27],[9673,27]]},"696":{"position":[[3148,27],[8841,27],[15940,27]]},"698":{"position":[[3343,27],[9649,27]]},"718":{"position":[[2384,27],[7663,27],[12810,27],[18046,27],[23202,27],[28769,27],[35616,27]]},"720":{"position":[[445,27],[7145,27]]},"722":{"position":[[7189,27],[13785,27],[19522,27],[25547,27],[31200,27],[36365,27],[41561,27],[46653,27]]},"734":{"position":[[2918,27]]},"740":{"position":[[745,27],[5856,27],[11000,27],[16212,27]]},"742":{"position":[[4860,27],[10092,27],[17632,27],[23754,27]]},"744":{"position":[[1405,27],[8100,27],[14556,27]]},"746":{"position":[[3646,27]]},"767":{"position":[[514,27],[10470,27],[17651,27],[25309,27],[30488,27],[35524,27],[40582,27]]},"769":{"position":[[610,27],[7945,27],[13285,27],[23033,27],[30696,27],[39683,27]]},"786":{"position":[[2145,27],[7136,27],[12244,27],[17192,27],[22236,27],[29387,27],[34431,27]]},"788":{"position":[[2664,27],[9131,27]]},"790":{"position":[[615,27],[6139,27],[11334,27]]},"792":{"position":[[3258,27],[9313,27],[15865,27]]},"809":{"position":[[2142,27],[7154,27],[12281,27],[17223,27],[22260,27],[28899,27],[33936,27]]},"811":{"position":[[2421,27],[9602,27]]},"813":{"position":[[2254,27],[8732,27]]},"815":{"position":[[3126,27],[10260,27],[15429,27],[20535,27],[25734,27],[30840,27]]}}}],["process.env.fga_bearer_token",{"_index":1124,"t":{"172":{"position":[[994,29]]}}}],["process.env.fga_store_id",{"_index":349,"t":{"16":{"position":[[12802,25],[18414,25],[24186,25]]},"80":{"position":[[1250,25]]},"98":{"position":[[1311,25]]},"112":{"position":[[523,25]]},"124":{"position":[[523,25]]},"170":{"position":[[469,24]]},"172":{"position":[[794,25]]},"190":{"position":[[523,25]]},"213":{"position":[[636,25]]},"215":{"position":[[646,25],[5811,25]]},"221":{"position":[[1951,25],[7014,25],[12354,25],[17377,25]]},"230":{"position":[[898,25]]},"232":{"position":[[689,25]]},"245":{"position":[[946,25]]},"247":{"position":[[657,25],[5718,25]]},"257":{"position":[[499,25]]},"288":{"position":[[743,25],[5647,25],[10825,25]]},"312":{"position":[[785,25],[5815,25]]},"318":{"position":[[904,25],[6389,25],[11623,25]]},"338":{"position":[[819,25]]},"345":{"position":[[1763,25]]},"369":{"position":[[767,25],[6703,25]]},"371":{"position":[[669,25]]},"373":{"position":[[615,25]]},"385":{"position":[[698,25]]},"387":{"position":[[719,25],[5969,25]]},"445":{"position":[[785,25],[5836,25]]},"449":{"position":[[745,25],[5960,25]]},"467":{"position":[[673,25]]},"469":{"position":[[675,25]]},"471":{"position":[[792,25]]},"485":{"position":[[859,25]]},"487":{"position":[[924,25]]},"505":{"position":[[907,25],[6655,25],[12070,25],[17176,25],[22220,25]]},"521":{"position":[[682,25]]},"523":{"position":[[1015,25]]},"525":{"position":[[852,25]]},"537":{"position":[[761,25]]},"541":{"position":[[768,25]]},"543":{"position":[[779,25]]},"545":{"position":[[625,25],[5571,25]]},"547":{"position":[[662,25],[5560,25]]},"562":{"position":[[784,25]]},"569":{"position":[[1034,25],[6606,25],[12022,25]]},"571":{"position":[[1237,25]]},"576":{"position":[[775,25],[6109,25]]},"583":{"position":[[696,25]]},"605":{"position":[[1912,25],[7505,25],[13747,25],[20002,25],[25659,25]]},"607":{"position":[[1757,25],[7426,25],[13187,25],[18929,25]]},"622":{"position":[[911,25]]},"624":{"position":[[726,25]]},"630":{"position":[[636,25]]},"632":{"position":[[655,25]]},"634":{"position":[[636,25],[6025,25],[11075,25]]},"644":{"position":[[1417,25],[6454,25]]},"646":{"position":[[726,25],[5918,25]]},"648":{"position":[[701,25],[6360,25],[11808,25],[17371,25],[22453,25]]},"668":{"position":[[5346,25]]},"670":{"position":[[1678,25]]},"692":{"position":[[1053,25],[6009,25],[10997,25],[17288,25],[22406,25]]},"694":{"position":[[3471,25],[9899,25]]},"696":{"position":[[3374,25],[9067,25],[16166,25]]},"698":{"position":[[3569,25],[9875,25]]},"718":{"position":[[2610,25],[7889,25],[13036,25],[18272,25],[23428,25],[28995,25],[35842,25]]},"720":{"position":[[671,25],[7371,25]]},"722":{"position":[[7415,25],[14011,25],[19748,25],[25773,25],[31426,25],[36591,25],[41787,25],[46879,25]]},"734":{"position":[[3144,25]]},"740":{"position":[[971,25],[6082,25],[11226,25],[16438,25]]},"742":{"position":[[5086,25],[10318,25],[17858,25],[23980,25]]},"744":{"position":[[1631,25],[8326,25],[14782,25]]},"746":{"position":[[3872,25]]},"767":{"position":[[740,25],[10696,25],[17877,25],[25535,25],[30714,25],[35750,25],[40808,25]]},"769":{"position":[[836,25],[8171,25],[13511,25],[23259,25],[30922,25],[39909,25]]},"786":{"position":[[2371,25],[7362,25],[12470,25],[17418,25],[22462,25],[29613,25],[34657,25]]},"788":{"position":[[2890,25],[9357,25]]},"790":{"position":[[841,25],[6365,25],[11560,25]]},"792":{"position":[[3484,25],[9539,25],[16091,25]]},"809":{"position":[[2368,25],[7380,25],[12507,25],[17449,25],[22486,25],[29125,25],[34162,25]]},"811":{"position":[[2647,25],[9828,25]]},"813":{"position":[[2480,25],[8958,25]]},"815":{"position":[[3352,25],[10486,25],[15655,25],[20761,25],[25960,25],[31066,25]]}}}],["process.exit(1",{"_index":707,"t":{"94":{"position":[[893,16]]},"96":{"position":[[1494,16]]},"98":{"position":[[2489,16]]}}}],["prod",{"_index":956,"t":{"142":{"position":[[2656,6],[5287,6]]}}}],["produc",{"_index":2058,"t":{"644":{"position":[[840,7]]}}}],["product",{"_index":128,"t":{"14":{"position":[[156,8]]},"56":{"position":[[1986,7],[2134,7],[2284,7]]},"74":{"position":[[906,10],[969,10]]},"96":{"position":[[1769,11],[1787,11]]},"98":{"position":[[2979,11],[2997,11]]},"130":{"position":[[88,10]]},"134":{"position":[[63,10],[179,10],[263,10]]},"144":{"position":[[445,11],[1879,11]]},"148":{"position":[[44,10]]},"162":{"position":[[61,10],[136,10]]},"170":{"position":[[53,10]]},"172":{"position":[[287,11],[360,10]]},"178":{"position":[[399,10]]},"182":{"position":[[92,10],[172,10]]},"269":{"position":[[217,11]]},"296":{"position":[[1608,10]]},"306":{"position":[[396,7],[1157,7],[1318,7],[1433,7]]},"312":{"position":[[10323,7]]},"413":{"position":[[52,10]]},"415":{"position":[[1232,10]]},"433":{"position":[[128,10],[203,10]]},"585":{"position":[[845,11]]},"605":{"position":[[12516,7],[12545,7],[18283,7],[18362,7],[18765,7],[18800,7],[18838,7],[18867,7]]},"607":{"position":[[12264,7],[12293,7],[17722,7],[17801,7]]},"652":{"position":[[250,10],[325,10]]},"686":{"position":[[526,11]]},"714":{"position":[[977,11]]},"758":{"position":[[8,7]]},"767":{"position":[[24299,11]]}}}],["profil",{"_index":1020,"t":{"148":{"position":[[19,9],[175,9],[255,8],[387,8],[429,8],[515,8],[633,8],[652,8]]},"273":{"position":[[3528,8]]},"275":{"position":[[623,8]]},"304":{"position":[[573,7]]}}}],["program",{"_index":30,"t":{"4":{"position":[[271,11]]},"405":{"position":[[1004,11]]}}}],["programmat",{"_index":612,"t":{"74":{"position":[[384,16],[498,16],[595,16],[718,16]]},"198":{"position":[[93,16]]}}}],["proj",{"_index":2268,"t":{"714":{"position":[[653,5]]},"722":{"position":[[412,5],[581,5],[983,5],[1067,5],[6828,5],[30726,5],[30764,5],[36014,5]]}}}],["project",{"_index":1524,"t":{"393":{"position":[[877,7],[980,7]]},"660":{"position":[[147,7],[201,8],[288,7],[371,7],[411,8],[424,7],[497,7],[541,7],[671,8],[734,7],[1017,7],[1772,10],[2867,7],[2927,7],[2977,7],[3016,7],[3053,7],[3259,8],[3391,8],[3523,8],[3655,8],[3787,8],[3928,7],[4008,7],[4282,8],[4470,8],[4658,8],[4846,8],[5034,8],[5231,7],[5367,7],[5834,8],[5976,8],[6118,8],[6260,8],[6402,8],[6553,7],[6643,7],[7082,8],[7220,8],[7358,8],[7496,8],[7634,8],[7781,7],[7867,7],[8899,8],[9035,8],[9171,8],[9307,8],[9443,8],[9588,7],[9672,7]]},"662":{"position":[[93,7],[203,7],[311,7],[421,7],[475,7]]},"664":{"position":[[208,8]]},"666":{"position":[[145,8],[219,7],[2110,7],[4027,7],[5923,7],[7837,7],[9739,7],[11692,8]]},"668":{"position":[[2283,9]]},"670":{"position":[[450,8]]},"672":{"position":[[355,7],[1647,10],[2798,8],[2930,8],[3062,8],[3194,8],[3326,8],[3467,7],[3547,7],[3821,8],[4009,8],[4197,8],[4385,8],[4573,8],[4770,7],[4906,7],[5373,8],[5515,8],[5657,8],[5799,8],[5941,8],[6092,7],[6182,7],[6621,8],[6759,8],[6897,8],[7035,8],[7173,8],[7320,7],[7406,7],[8438,8],[8574,8],[8710,8],[8846,8],[8982,8],[9127,7],[9211,7]]}}}],["project:52e529c6",{"_index":2581,"t":{"767":{"position":[[24628,16]]}}}],["project:x",{"_index":2096,"t":{"660":{"position":[[3991,13],[4103,12],[6625,11],[6747,11]]},"666":{"position":[[444,12],[658,12],[948,11],[1986,12],[2018,11],[2337,12],[2553,12],[2845,11],[3891,12],[3923,11],[4252,12],[4466,12],[4756,11],[5794,12],[5826,11],[6150,12],[6367,12],[6660,11],[7709,12],[7741,11],[8062,12],[8277,12],[8568,11],[9609,12],[9641,11],[9966,12],[10183,12],[10476,11],[11525,12],[11557,11]]},"668":{"position":[[3022,12],[3237,12],[3528,11],[4569,12],[4601,11],[10275,12],[10489,12],[10779,11],[11817,12],[11849,11]]},"670":{"position":[[6807,12],[7136,12],[7636,11],[9073,12],[9105,11],[9632,12],[9962,12],[10463,11],[11903,12],[11935,11]]},"672":{"position":[[3530,13],[3642,12],[6164,11],[6286,11]]}}}],["project_editor",{"_index":2093,"t":{"660":{"position":[[989,15],[1153,14],[1182,14],[1467,17],[1679,17],[2160,16],[2306,16]]},"668":{"position":[[781,16],[917,16],[1256,15],[1695,17],[2381,16]]},"672":{"position":[[263,15],[502,14],[531,14],[1055,17],[2099,16],[2245,16]]}}}],["project_manag",{"_index":2092,"t":{"660":{"position":[[958,16],[1111,15],[1432,18],[1601,18],[1981,17],[3331,18],[3463,18],[3595,18],[3727,18],[3859,18],[5914,18],[6056,18],[6198,18],[6340,18],[6482,18]]},"668":{"position":[[528,17],[900,16],[1151,16],[1233,15],[1410,18],[1666,17],[2033,18],[2359,17]]},"672":{"position":[[158,16],[240,15],[449,15],[770,18],[1026,17],[1393,18],[1856,17],[2870,18],[3002,18],[3134,18],[3266,18],[3398,18],[5453,18],[5595,18],[5737,18],[5879,18],[6021,18]]}}}],["prometheu",{"_index":1076,"t":{"156":{"position":[[39,10]]}}}],["propag",{"_index":2712,"t":{"813":{"position":[[11,11],[8037,9]]}}}],["proper",{"_index":1692,"t":{"425":{"position":[[1968,6],[2150,6]]},"505":{"position":[[193,6]]}}}],["properti",{"_index":480,"t":{"16":{"position":[[30154,11]]}}}],["protect",{"_index":724,"t":{"96":{"position":[[30,7],[773,7]]},"263":{"position":[[49,7]]}}}],["protocol",{"_index":2643,"t":{"790":{"position":[[142,9],[5373,9],[5740,9]]}}}],["provid",{"_index":603,"t":{"72":{"position":[[19,7]]},"92":{"position":[[314,7]]},"94":{"position":[[200,8],[1076,8],[1196,8]]},"96":{"position":[[181,9]]},"144":{"position":[[1823,9]]},"148":{"position":[[239,9]]},"152":{"position":[[82,9]]},"156":{"position":[[289,7],[495,7]]},"158":{"position":[[430,7]]},"383":{"position":[[84,7]]},"393":{"position":[[1007,7]]},"415":{"position":[[300,7]]},"581":{"position":[[159,8]]},"769":{"position":[[12755,8]]}}}],["provider'",{"_index":686,"t":{"92":{"position":[[264,10]]}}}],["psa",{"_index":1784,"t":{"485":{"position":[[6146,3]]}}}],["psa.doc",{"_index":1776,"t":{"485":{"position":[[299,7],[1092,9],[2181,10],[3502,8],[4649,9],[5176,10],[5365,8],[6234,9]]},"487":{"position":[[90,8],[1192,9],[2186,9],[3388,8],[4531,9],[5132,11],[5303,9],[5350,8]]}}}],["pseudocod",{"_index":325,"t":{"16":{"position":[[12278,10],[17890,10],[23662,10]]},"213":{"position":[[112,10]]},"215":{"position":[[122,10],[5287,10]]},"221":{"position":[[1427,10],[6490,10],[11830,10],[16853,10]]},"230":{"position":[[374,10]]},"232":{"position":[[165,10]]},"245":{"position":[[422,10]]},"247":{"position":[[133,10],[5194,10]]},"288":{"position":[[219,10],[5123,10],[10301,10]]},"312":{"position":[[261,10],[5291,10]]},"318":{"position":[[380,10],[5865,10],[11099,10]]},"338":{"position":[[295,10]]},"345":{"position":[[1239,10]]},"369":{"position":[[243,10],[6179,10]]},"371":{"position":[[145,10]]},"373":{"position":[[91,10]]},"385":{"position":[[174,10]]},"387":{"position":[[195,10],[5445,10]]},"429":{"position":[[1860,10]]},"445":{"position":[[261,10],[5312,10]]},"449":{"position":[[221,10],[5436,10]]},"467":{"position":[[149,10]]},"469":{"position":[[151,10]]},"471":{"position":[[268,10]]},"485":{"position":[[335,10]]},"487":{"position":[[400,10]]},"505":{"position":[[383,10],[6131,10],[11546,10],[16652,10],[21696,10]]},"521":{"position":[[158,10]]},"523":{"position":[[491,10]]},"525":{"position":[[328,10]]},"537":{"position":[[237,10]]},"541":{"position":[[244,10]]},"543":{"position":[[255,10]]},"545":{"position":[[101,10],[5047,10]]},"547":{"position":[[138,10],[5036,10]]},"562":{"position":[[260,10]]},"569":{"position":[[510,10],[6082,10],[11498,10]]},"571":{"position":[[713,10]]},"576":{"position":[[251,10],[5585,10]]},"583":{"position":[[172,10]]},"605":{"position":[[1388,10],[6981,10],[13223,10],[19478,10],[25135,10]]},"607":{"position":[[1233,10],[6902,10],[12663,10],[18405,10]]},"622":{"position":[[387,10]]},"624":{"position":[[202,10]]},"630":{"position":[[112,10]]},"632":{"position":[[131,10]]},"634":{"position":[[112,10],[5501,10],[10551,10]]},"644":{"position":[[893,10],[5930,10]]},"646":{"position":[[202,10],[5394,10]]},"648":{"position":[[177,10],[5836,10],[11284,10],[16847,10],[21929,10]]},"660":{"position":[[3186,10]]},"666":{"position":[[257,10],[2148,10],[4065,10],[5961,10],[7875,10],[9777,10]]},"668":{"position":[[2835,10],[4822,10],[10088,10]]},"670":{"position":[[1154,10],[6620,10],[9445,10]]},"672":{"position":[[2725,10]]},"692":{"position":[[529,10],[5485,10],[10473,10],[16764,10],[21882,10]]},"694":{"position":[[2947,10],[9375,10]]},"696":{"position":[[2850,10],[8543,10],[15642,10]]},"698":{"position":[[3045,10],[9351,10]]},"718":{"position":[[2086,10],[7365,10],[12512,10],[17748,10],[22904,10],[28471,10],[35318,10]]},"720":{"position":[[147,10],[6847,10]]},"722":{"position":[[6891,10],[13487,10],[19224,10],[25249,10],[30902,10],[36067,10],[41263,10],[46355,10]]},"734":{"position":[[2620,10]]},"740":{"position":[[447,10],[5558,10],[10702,10],[15914,10]]},"742":{"position":[[4562,10],[9794,10],[17334,10],[23456,10]]},"744":{"position":[[1107,10],[7802,10],[14258,10]]},"746":{"position":[[3348,10]]},"767":{"position":[[216,10],[10172,10],[17353,10],[25011,10],[30190,10],[35226,10],[40284,10]]},"769":{"position":[[312,10],[7647,10],[12987,10],[22735,10],[30398,10],[39385,10]]},"786":{"position":[[1847,10],[6838,10],[11946,10],[16894,10],[21938,10],[29089,10],[34133,10]]},"788":{"position":[[2366,10],[8833,10]]},"790":{"position":[[317,10],[5841,10],[11036,10]]},"792":{"position":[[2960,10],[9015,10],[15567,10]]},"809":{"position":[[1844,10],[6856,10],[11983,10],[16925,10],[21962,10],[28601,10],[33638,10]]},"811":{"position":[[2123,10],[9304,10]]},"813":{"position":[[1956,10],[8434,10]]},"815":{"position":[[2828,10],[9962,10],[15131,10],[20237,10],[25436,10],[30542,10]]}}}],["ptrstring(\"1uhxcsutp0vkpysnkq1pbb1jezw",{"_index":456,"t":{"16":{"position":[[25320,41]]},"126":{"position":[[387,41]]},"583":{"position":[[1937,41]]}}}],["ptrstring(\"document:otherdoc",{"_index":1944,"t":{"583":{"position":[[2167,31]]}}}],["ptrstring(\"read",{"_index":1943,"t":{"583":{"position":[[2138,20]]}}}],["ptrstring(\"user:bob",{"_index":1942,"t":{"583":{"position":[[2105,22]]}}}],["public",{"_index":474,"t":{"16":{"position":[[29499,6],[29538,6],[30293,6]]},"48":{"position":[[23,6]]},"56":{"position":[[1716,6]]},"60":{"position":[[3124,6]]},"96":{"position":[[469,7],[1834,6]]},"98":{"position":[[3044,6]]},"249":{"position":[[156,6],[204,6]]},"273":{"position":[[3544,7]]},"275":{"position":[[636,7]]},"279":{"position":[[1293,6],[1338,6]]},"283":{"position":[[30,6]]},"288":{"position":[[134,6],[10225,6]]},"296":{"position":[[700,6]]},"320":{"position":[[217,6],[249,6]]},"415":{"position":[[636,6]]},"425":{"position":[[41,6],[3040,6]]},"427":{"position":[[337,6]]},"429":{"position":[[401,6]]},"451":{"position":[[210,6],[242,6]]},"471":{"position":[[6131,6]]},"475":{"position":[[42,6],[115,6],[142,6],[286,6],[374,6],[514,6]]},"477":{"position":[[1442,6]]},"481":{"position":[[592,6]]},"485":{"position":[[71,6],[101,6],[5483,6]]},"487":{"position":[[364,7]]},"599":{"position":[[414,6]]},"605":{"position":[[1033,6],[6630,6],[6744,7]]},"712":{"position":[[1025,6],[1094,7]]},"714":{"position":[[533,6],[690,6]]},"722":{"position":[[939,6],[13310,6],[30792,6]]},"796":{"position":[[863,6],[992,6]]},"798":{"position":[[732,6]]},"806":{"position":[[422,6]]},"815":{"position":[[108,6],[208,6],[321,6],[387,6],[493,6],[2731,6],[3517,6],[3595,6],[3671,6],[3761,6],[3831,6],[3907,6],[4884,6],[5013,6],[5094,6],[5235,6],[5310,6],[5437,6],[6688,6],[6775,6],[6852,6],[6951,6],[7022,6],[7107,6],[8198,6],[8271,6],[8358,6],[8443,6],[8524,6],[8595,6],[9130,6],[9222,6],[9300,6],[9425,6],[9506,6],[9583,6],[9676,6],[9747,6],[9826,6],[10753,6],[11753,6],[12961,6],[14110,6],[14717,6],[14896,6],[14947,6],[15923,6],[16925,6],[18135,6],[19286,6],[19895,6],[20077,6],[20128,6],[21032,6],[22036,6],[23248,6],[24401,6],[25012,6],[25199,6],[25250,6],[26228,6],[27230,6],[28440,6],[29591,6],[30200,6],[30382,6],[30433,6],[31334,6],[32336,6],[33546,6],[34697,6],[35306,6],[35488,6],[35539,6]]}}}],["publicli",{"_index":273,"t":{"16":{"position":[[6559,8],[29900,8]]},"475":{"position":[[325,8]]},"483":{"position":[[213,10]]},"710":{"position":[[409,8]]},"796":{"position":[[1045,9]]},"798":{"position":[[827,8]]},"804":{"position":[[444,8]]},"806":{"position":[[516,8]]},"815":{"position":[[65,9]]}}}],["publish",{"_index":115,"t":{"10":{"position":[[374,7]]},"399":{"position":[[4557,9]]},"475":{"position":[[451,9]]}}}],["pull",{"_index":881,"t":{"138":{"position":[[132,4]]},"758":{"position":[[392,4],[432,4],[509,4],[607,4]]},"760":{"position":[[414,4]]},"762":{"position":[[587,4],[732,4],[884,4]]},"767":{"position":[[1198,4],[1510,4],[3143,4],[3567,4],[5489,4],[5821,4],[7487,4],[7811,4],[9421,4],[9741,4]]},"769":{"position":[[38977,4],[39122,4],[39274,4]]}}}],["purpos",{"_index":1527,"t":{"395":{"position":[[215,7]]},"403":{"position":[[1046,8]]},"587":{"position":[[30,7]]},"792":{"position":[[150,8]]}}}],["pypi",{"_index":852,"t":{"102":{"position":[[1194,5]]}}}],["python",{"_index":36,"t":{"4":{"position":[[340,7]]},"16":{"position":[[12266,6],[17878,6],[23650,6]]},"78":{"position":[[16,6]]},"80":{"position":[[725,6]]},"86":{"position":[[16,6]]},"102":{"position":[[66,6],[1167,6]]},"104":{"position":[[311,6],[335,6]]},"108":{"position":[[16,6]]},"112":{"position":[[89,6]]},"114":{"position":[[95,6]]},"120":{"position":[[16,6]]},"124":{"position":[[89,6]]},"126":{"position":[[90,6]]},"170":{"position":[[85,6]]},"172":{"position":[[398,6]]},"186":{"position":[[16,6]]},"190":{"position":[[89,6]]},"192":{"position":[[77,6]]},"194":{"position":[[232,6]]},"213":{"position":[[100,6]]},"215":{"position":[[110,6],[5275,6]]},"221":{"position":[[1415,6],[6478,6],[11818,6],[16841,6]]},"230":{"position":[[362,6]]},"232":{"position":[[153,6]]},"245":{"position":[[410,6]]},"247":{"position":[[121,6],[5182,6]]},"253":{"position":[[16,6]]},"257":{"position":[[65,6]]},"259":{"position":[[80,6],[1233,6]]},"261":{"position":[[1063,6],[2065,6]]},"288":{"position":[[207,6],[5111,6],[10289,6]]},"312":{"position":[[249,6],[5279,6]]},"318":{"position":[[368,6],[5853,6],[11087,6]]},"338":{"position":[[283,6]]},"345":{"position":[[1227,6]]},"369":{"position":[[231,6],[6167,6]]},"371":{"position":[[133,6]]},"373":{"position":[[79,6]]},"385":{"position":[[162,6]]},"387":{"position":[[183,6],[5433,6]]},"429":{"position":[[1848,6]]},"445":{"position":[[249,6],[5300,6]]},"449":{"position":[[209,6],[5424,6]]},"467":{"position":[[137,6]]},"469":{"position":[[139,6]]},"471":{"position":[[256,6]]},"485":{"position":[[323,6]]},"487":{"position":[[388,6]]},"505":{"position":[[371,6],[6119,6],[11534,6],[16640,6],[21684,6]]},"521":{"position":[[146,6]]},"523":{"position":[[479,6]]},"525":{"position":[[316,6]]},"537":{"position":[[225,6]]},"541":{"position":[[232,6]]},"543":{"position":[[243,6]]},"545":{"position":[[89,6],[5035,6]]},"547":{"position":[[126,6],[5024,6]]},"562":{"position":[[248,6]]},"569":{"position":[[498,6],[6070,6],[11486,6]]},"571":{"position":[[701,6]]},"576":{"position":[[239,6],[5573,6]]},"583":{"position":[[160,6]]},"605":{"position":[[1376,6],[6969,6],[13211,6],[19466,6],[25123,6]]},"607":{"position":[[1221,6],[6890,6],[12651,6],[18393,6]]},"622":{"position":[[375,6]]},"624":{"position":[[190,6]]},"630":{"position":[[100,6]]},"632":{"position":[[119,6]]},"634":{"position":[[100,6],[5489,6],[10539,6]]},"644":{"position":[[881,6],[5918,6]]},"646":{"position":[[190,6],[5382,6]]},"648":{"position":[[165,6],[5824,6],[11272,6],[16835,6],[21917,6]]},"660":{"position":[[3174,6]]},"666":{"position":[[245,6],[2136,6],[4053,6],[5949,6],[7863,6],[9765,6]]},"668":{"position":[[2823,6],[4810,6],[10076,6]]},"670":{"position":[[1142,6],[6608,6],[9433,6]]},"672":{"position":[[2713,6]]},"692":{"position":[[517,6],[5473,6],[10461,6],[16752,6],[21870,6]]},"694":{"position":[[2935,6],[9363,6]]},"696":{"position":[[2838,6],[8531,6],[15630,6]]},"698":{"position":[[3033,6],[9339,6]]},"718":{"position":[[2074,6],[7353,6],[12500,6],[17736,6],[22892,6],[28459,6],[35306,6]]},"720":{"position":[[135,6],[6835,6]]},"722":{"position":[[6879,6],[13475,6],[19212,6],[25237,6],[30890,6],[36055,6],[41251,6],[46343,6]]},"734":{"position":[[2608,6]]},"740":{"position":[[435,6],[5546,6],[10690,6],[15902,6]]},"742":{"position":[[4550,6],[9782,6],[17322,6],[23444,6]]},"744":{"position":[[1095,6],[7790,6],[14246,6]]},"746":{"position":[[3336,6]]},"767":{"position":[[204,6],[10160,6],[17341,6],[24999,6],[30178,6],[35214,6],[40272,6]]},"769":{"position":[[300,6],[7635,6],[12975,6],[22723,6],[30386,6],[39373,6]]},"786":{"position":[[1835,6],[6826,6],[11934,6],[16882,6],[21926,6],[29077,6],[34121,6]]},"788":{"position":[[2354,6],[8821,6]]},"790":{"position":[[305,6],[5829,6],[11024,6]]},"792":{"position":[[2948,6],[9003,6],[15555,6]]},"809":{"position":[[1832,6],[6844,6],[11971,6],[16913,6],[21950,6],[28589,6],[33626,6]]},"811":{"position":[[2111,6],[9292,6]]},"813":{"position":[[1944,6],[8422,6]]},"815":{"position":[[2816,6],[9950,6],[15119,6],[20225,6],[25424,6],[30530,6]]}}}],["queri",{"_index":445,"t":{"16":{"position":[[22956,7],[28788,7]]},"142":{"position":[[416,5]]},"178":{"position":[[89,7],[316,5]]},"200":{"position":[[646,7]]},"263":{"position":[[770,6]]},"271":{"position":[[276,5]]},"273":{"position":[[149,5],[351,5],[481,5],[1261,5],[3411,6]]},"275":{"position":[[54,5]]},"405":{"position":[[3854,5]]},"415":{"position":[[661,5]]},"427":{"position":[[490,7]]},"429":{"position":[[122,5]]},"567":{"position":[[114,6]]},"569":{"position":[[393,5],[5910,5],[11332,5]]},"571":{"position":[[74,5],[590,5]]},"587":{"position":[[149,5]]},"589":{"position":[[65,5]]},"599":{"position":[[329,5],[397,5],[495,5]]},"652":{"position":[[164,7]]},"692":{"position":[[26952,5]]},"694":{"position":[[14492,5]]},"696":{"position":[[15461,8],[15490,7],[20656,7],[20677,7],[20767,5]]},"698":{"position":[[8987,5],[14373,5],[14445,5]]},"702":{"position":[[110,7]]},"718":{"position":[[40426,5]]},"720":{"position":[[12,7],[5194,5],[11925,5]]},"722":{"position":[[196,7],[268,7],[51516,5]]},"726":{"position":[[96,7],[306,7]]},"762":{"position":[[487,5],[506,7]]},"767":{"position":[[24257,7],[30013,8]]},"769":{"position":[[70,5],[230,5],[5358,5],[7560,6],[12667,6],[12852,5],[22634,6],[30318,6],[44464,5]]}}}],["question",{"_index":1230,"t":{"221":{"position":[[11716,8]]},"393":{"position":[[487,9],[1120,9],[1206,8]]},"395":{"position":[[68,8]]},"403":{"position":[[168,8]]},"405":{"position":[[250,9],[758,10]]},"407":{"position":[[362,9]]},"564":{"position":[[32,8],[134,10]]},"628":{"position":[[1993,8]]},"632":{"position":[[93,9]]},"692":{"position":[[16485,10]]},"786":{"position":[[16844,9]]},"809":{"position":[[16875,9]]}}}],["quit",{"_index":1203,"t":{"219":{"position":[[235,5]]}}}],["r",{"_index":303,"t":{"16":{"position":[[9845,1],[10118,1]]},"40":{"position":[[22,1],[295,1]]},"393":{"position":[[524,1],[680,1],[734,1]]},"405":{"position":[[596,1],[892,1],[938,1]]},"769":{"position":[[6080,1],[6339,1]]}}}],["ran",{"_index":2305,"t":{"720":{"position":[[29,3]]}}}],["rand.read",{"_index":772,"t":{"96":{"position":[[2059,11]]},"98":{"position":[[3269,11]]}}}],["random",{"_index":1119,"t":{"172":{"position":[[69,6]]}}}],["rang",{"_index":2413,"t":{"742":{"position":[[181,6],[489,5],[547,7],[986,5],[1398,6],[2239,6],[9596,7],[10795,5],[12329,5],[14096,5],[15653,5],[16958,5],[17229,6],[18046,5],[19223,5],[20781,5],[22091,5],[23016,5]]},"744":{"position":[[1032,5],[1848,5],[3080,5],[4693,5],[6058,5],[7039,5],[7716,5],[14172,5]]},"746":{"position":[[200,6],[764,5],[1573,6],[3166,7],[5697,5],[9083,5],[12288,5],[15247,5],[18673,5]]},"748":{"position":[[413,6],[977,5],[2040,6],[3633,7]]}}}],["range:10.0.0.0/16",{"_index":2429,"t":{"742":{"position":[[10858,19],[12407,20],[14166,19],[15713,19],[17022,19],[18111,20],[19339,20],[20855,18],[22151,19],[23084,18]]},"744":{"position":[[1913,20],[3196,20],[4767,18],[6118,19],[7107,18],[8695,18],[9960,20],[11430,20],[12777,20],[13968,20],[15151,18],[16417,20],[17888,20],[19236,20],[20429,20]]},"746":{"position":[[5760,19],[9161,20],[12358,19],[15307,19],[18737,19]]}}}],["range:10.0.0.0/16\",\"relation\":\"approved_ip_address_range\",\"object\":\"branch:west",{"_index":2443,"t":{"742":{"position":[[16443,79]]},"746":{"position":[[16774,79]]}}}],["range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:12_13",{"_index":2453,"t":{"742":{"position":[[22800,85]]},"744":{"position":[[6795,85],[13559,88]]}}}],["range:10.0.0.0/16\"},{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"timeslot:18_19",{"_index":2469,"t":{"744":{"position":[[20019,88]]}}}],["rapid",{"_index":1012,"t":{"146":{"position":[[27,5]]}}}],["rate",{"_index":81,"t":{"8":{"position":[[249,4]]}}}],["ratio",{"_index":1094,"t":{"158":{"position":[[415,6],[457,5],[631,5],[783,7]]}}}],["ratio=1",{"_index":1097,"t":{"158":{"position":[[583,9]]}}}],["rbac",{"_index":5,"t":{"2":{"position":[[65,5]]},"10":{"position":[[495,4]]},"397":{"position":[[769,4]]}}}],["re",{"_index":1649,"t":{"415":{"position":[[951,2]]},"425":{"position":[[3331,2],[3497,2]]},"539":{"position":[[1028,2]]}}}],["reach",{"_index":919,"t":{"142":{"position":[[273,6],[367,6]]},"769":{"position":[[187,5]]}}}],["read",{"_index":69,"t":{"6":{"position":[[414,4]]},"10":{"position":[[479,4]]},"68":{"position":[[2305,4]]},"82":{"position":[[144,4],[219,4]]},"94":{"position":[[736,5],[1495,5]]},"96":{"position":[[1055,5],[1300,7],[2329,5],[2526,4]]},"98":{"position":[[1925,5],[2253,7],[3608,5],[3805,4]]},"116":{"position":[[118,4]]},"128":{"position":[[125,4]]},"200":{"position":[[691,5]]},"211":{"position":[[226,4]]},"215":{"position":[[53,4]]},"221":{"position":[[982,4],[1114,4],[1375,4],[11624,4]]},"232":{"position":[[71,4]]},"245":{"position":[[141,4]]},"251":{"position":[[41,4]]},"255":{"position":[[126,4]]},"259":{"position":[[2919,4],[3111,4]]},"296":{"position":[[794,5]]},"318":{"position":[[16448,5]]},"345":{"position":[[724,4]]},"403":{"position":[[1780,4],[2660,4],[3137,4],[6858,4],[8062,4]]},"415":{"position":[[59,4],[237,4]]},"425":{"position":[[2036,4]]},"431":{"position":[[346,7]]},"435":{"position":[[498,7]]},"475":{"position":[[490,4]]},"491":{"position":[[830,4]]},"551":{"position":[[72,5]]},"567":{"position":[[4,4]]},"569":{"position":[[0,4],[1126,4],[4647,7],[5506,5],[5515,4],[6698,4],[10141,7],[10961,5],[10970,4],[12114,4],[15587,7],[16427,5],[16436,4]]},"571":{"position":[[4,4],[269,4],[1329,4],[4496,7],[5119,5],[5128,4],[5405,4]]},"581":{"position":[[307,4]]},"587":{"position":[[6,4]]},"589":{"position":[[154,4],[206,4]]},"648":{"position":[[105,4],[793,4],[4389,7],[5336,5],[5345,4]]},"652":{"position":[[214,5]]},"672":{"position":[[9511,5],[9566,4]]},"686":{"position":[[653,4]]},"714":{"position":[[402,5],[1104,4]]},"722":{"position":[[2989,4]]},"746":{"position":[[19015,5]]},"767":{"position":[[24426,4]]},"769":{"position":[[18448,4]]},"790":{"position":[[5486,4]]},"792":{"position":[[14806,4],[15013,5]]},"813":{"position":[[14305,4],[14514,5]]}}}],["read(c",{"_index":721,"t":{"94":{"position":[[1528,6]]},"96":{"position":[[2362,6]]},"98":{"position":[[3641,6]]}}}],["read.j",{"_index":747,"t":{"96":{"position":[[841,8]]},"98":{"position":[[1670,8]]}}}],["read/:docu",{"_index":749,"t":{"96":{"position":[[913,18]]},"98":{"position":[[1742,18]]}}}],["read/writ",{"_index":599,"t":{"68":{"position":[[1765,11]]}}}],["read/{docu",{"_index":688,"t":{"92":{"position":[[334,16]]},"94":{"position":[[510,16],[1361,16]]},"96":{"position":[[42,16]]},"98":{"position":[[1607,16]]}}}],["read_chang",{"_index":1258,"t":{"259":{"position":[[494,15],[1958,15]]},"261":{"position":[[1506,15],[2819,15]]}}}],["readabl",{"_index":1406,"t":{"318":{"position":[[16399,8]]},"419":{"position":[[2038,9]]}}}],["readassert",{"_index":1729,"t":{"431":{"position":[[687,14],[1296,15]]}}}],["readauthorizationmodel",{"_index":1728,"t":{"431":{"position":[[635,23],[659,23],[1244,23],[1268,23]]}}}],["readchang",{"_index":2499,"t":{"746":{"position":[[19070,11]]}}}],["reader",{"_index":255,"t":{"16":{"position":[[5476,6]]},"80":{"position":[[138,7],[302,9],[410,9],[1514,9],[1622,9]]},"92":{"position":[[190,6]]},"98":{"position":[[438,9],[4123,9]]},"110":{"position":[[65,6]]},"114":{"position":[[49,6],[263,9],[476,9],[764,9]]},"122":{"position":[[77,6]]},"126":{"position":[[61,6],[233,9],[458,9],[775,9],[1639,9],[1834,6]]},"188":{"position":[[64,6],[125,9]]},"192":{"position":[[168,9],[799,9]]},"194":{"position":[[108,6],[182,9],[325,9],[958,9]]},"204":{"position":[[295,6],[426,7],[731,9],[788,9]]},"211":{"position":[[59,6],[295,9]]},"215":{"position":[[881,9],[1871,9],[3068,9],[4946,9],[4966,8],[6047,9],[7039,9],[8238,9],[10123,9],[10143,8]]},"221":{"position":[[289,6],[414,7],[705,9],[762,9],[1185,9],[2181,9],[3167,9],[4360,9],[6221,9],[6241,8],[12589,9],[13579,9],[14776,9],[16654,9],[16674,8],[17613,9],[18605,9],[19804,9],[21689,9],[21709,8]]},"230":{"position":[[47,6]]},"232":{"position":[[924,9],[1915,9],[3113,9],[4994,9],[5014,8]]},"238":{"position":[[253,7],[325,7],[443,9],[500,9]]},"245":{"position":[[48,6],[189,9],[351,6],[1181,9],[2161,9],[3348,9],[5196,9],[5216,8]]},"247":{"position":[[51,6],[817,9],[3116,9],[5060,6],[5953,9],[6934,9],[8122,9],[9973,9],[9993,8]]},"269":{"position":[[361,7]]},"279":{"position":[[253,7]]},"340":{"position":[[262,7]]},"345":{"position":[[151,7],[447,9],[504,9],[789,9],[1009,6],[1123,6],[1998,9],[2986,9],[4181,9],[6053,9],[6073,8]]},"347":{"position":[[143,7],[311,9],[447,9],[728,6]]},"507":{"position":[[377,7]]},"553":{"position":[[256,6],[291,8],[443,7],[600,9],[819,9]]},"562":{"position":[[188,6],[1018,9],[2007,9],[3203,9],[5077,9],[5097,8],[5348,6]]},"571":{"position":[[498,6],[625,6],[3524,9],[5231,9],[5244,8],[5393,7],[5528,7]]},"576":{"position":[[158,6],[919,9],[951,8],[1999,8],[3293,9],[3325,8],[4476,9],[5148,9],[5180,8],[10881,6]]},"583":{"position":[[905,9],[997,9],[2007,9],[3395,9],[3529,9],[5371,9],[5483,9],[5658,9],[5678,8],[5932,9]]},"678":{"position":[[559,8]]},"706":{"position":[[559,8]]},"773":{"position":[[888,6],[928,6]]},"775":{"position":[[408,8]]},"781":{"position":[[207,7]]},"783":{"position":[[513,6]]},"786":{"position":[[345,7],[554,9],[719,9],[1309,7],[1426,9],[1483,9],[1619,8],[1701,8],[1738,6],[2529,9],[4852,9],[6766,6],[7597,9],[8590,9],[9790,9],[11677,9],[11697,8],[22697,9],[23691,9],[24892,9],[26782,9],[26802,8],[27068,7],[27287,7],[27540,9],[28025,9],[28468,7],[28527,9],[28664,9],[28760,6],[28831,10],[28901,8],[34892,9],[35885,9],[37085,9],[38972,9],[38992,8]]},"788":{"position":[[837,7],[1150,9],[1635,9]]},"792":{"position":[[1287,7],[1609,9],[2119,9],[20990,7],[21051,6],[21908,9],[22063,8],[22178,9]]},"798":{"position":[[408,8]]}}}],["readfilesync(`${path.join(__dirnam",{"_index":735,"t":{"96":{"position":[[399,36],[477,36]]}}}],["readi",{"_index":621,"t":{"78":{"position":[[79,5],[365,5],[651,5],[937,5],[1223,5]]},"90":{"position":[[62,5],[426,5]]},"108":{"position":[[79,5],[402,5],[725,5],[1048,5],[1371,5]]},"120":{"position":[[79,5],[402,5],[725,5],[1048,5],[1371,5]]},"178":{"position":[[437,5]]},"186":{"position":[[79,5],[366,5],[653,5],[940,5],[1227,5]]},"253":{"position":[[79,5],[401,5],[723,5],[1010,5],[1297,5]]},"415":{"position":[[1264,5]]},"583":{"position":[[6131,5]]}}}],["readrequest",{"_index":1897,"t":{"569":{"position":[[4513,11],[4662,12],[10007,11],[10156,12],[15453,11],[15602,12]]},"571":{"position":[[4362,11],[4511,12]]},"648":{"position":[[3196,15],[4255,11],[4404,13]]}}}],["readrequest(new",{"_index":1895,"t":{"569":{"position":[[3498,15],[9013,15],[14449,15]]},"571":{"position":[[3465,15]]}}}],["readrespons",{"_index":1899,"t":{"569":{"position":[[4572,12],[10066,12],[15512,12]]},"571":{"position":[[4421,12]]},"648":{"position":[[4314,12]]}}}],["readresponse({\"tupl",{"_index":1915,"t":{"571":{"position":[[4666,27]]}}}],["readresponse({\"tuples\":[{\"key",{"_index":1903,"t":{"569":{"position":[[4817,31],[10292,31],[15748,31]]},"648":{"position":[[4479,31]]}}}],["real",{"_index":1626,"t":{"405":{"position":[[1292,4]]}}}],["realiti",{"_index":2306,"t":{"720":{"position":[[93,8],[5330,8]]}}}],["realiz",{"_index":300,"t":{"16":{"position":[[9523,11]]},"38":{"position":[[22,11]]},"630":{"position":[[3,7]]}}}],["reason",{"_index":1582,"t":{"403":{"position":[[530,6]]},"591":{"position":[[361,7]]},"628":{"position":[[1681,6]]}}}],["rebac",{"_index":7,"t":{"2":{"position":[[77,6]]},"4":{"position":[[93,6]]},"12":{"position":[[0,5]]},"391":{"position":[[45,7]]},"393":{"position":[[12,5],[361,5],[625,7],[906,7]]},"397":{"position":[[823,5]]},"401":{"position":[[171,7]]},"405":{"position":[[542,7]]}}}],["receiv",{"_index":1100,"t":{"158":{"position":[[684,9]]},"429":{"position":[[1813,8]]}}}],["recommend",{"_index":215,"t":{"16":{"position":[[3707,11]]},"132":{"position":[[46,11]]},"148":{"position":[[75,9]]},"152":{"position":[[882,11]]},"158":{"position":[[529,11]]},"170":{"position":[[37,11]]},"178":{"position":[[15,11]]},"182":{"position":[[41,14]]},"273":{"position":[[421,11],[725,11],[1732,9],[1936,11],[2135,11]]},"393":{"position":[[38,10]]},"399":{"position":[[4642,15]]},"401":{"position":[[2579,9]]},"403":{"position":[[392,9]]},"415":{"position":[[1029,11]]},"638":{"position":[[215,16]]},"686":{"position":[[551,11]]},"714":{"position":[[1002,11]]},"767":{"position":[[24324,11]]}}}],["record",{"_index":2156,"t":{"684":{"position":[[73,8],[130,8]]},"690":{"position":[[70,8],[127,8],[446,8]]},"692":{"position":[[159,8],[202,8]]},"694":{"position":[[372,8],[2632,8],[2675,8]]},"702":{"position":[[304,8]]}}}],["recorded_video_view",{"_index":2165,"t":{"690":{"position":[[542,22],[740,22],[941,24],[1127,24]]},"692":{"position":[[5423,21],[6167,24],[8496,24],[11228,24],[13965,24],[27154,21],[27207,22],[27248,21],[27301,22]]},"694":{"position":[[765,22],[885,22],[1321,22],[1744,24],[2297,24],[14694,21],[14747,22],[14788,21],[14841,22],[15226,21],[15282,22],[15325,21],[15380,22]]},"696":{"position":[[1006,22],[1531,24],[2194,24],[20967,21],[21020,22],[21060,21],[21113,22],[21496,21],[21552,22],[21595,21],[21650,22]]},"698":{"position":[[461,21],[554,21],[852,22],[1341,24],[3802,24],[6545,24],[14476,21],[14530,22]]}}}],["recurs",{"_index":1446,"t":{"349":{"position":[[1236,11]]},"574":{"position":[[227,11]]}}}],["reduc",{"_index":1382,"t":{"304":{"position":[[663,6]]}}}],["refer",{"_index":448,"t":{"16":{"position":[[22996,10],[28828,10]]},"58":{"position":[[13,9],[964,9]]},"152":{"position":[[1081,5]]},"154":{"position":[[166,5]]},"164":{"position":[[100,5]]},"292":{"position":[[208,9]]},"403":{"position":[[886,5],[5649,5]]},"463":{"position":[[231,5]]},"589":{"position":[[96,9],[115,9],[163,9],[182,9],[231,9],[250,9],[306,9],[325,9]]},"674":{"position":[[400,9]]},"698":{"position":[[2210,9]]},"710":{"position":[[373,10],[392,5]]},"750":{"position":[[390,9]]}}}],["referenc",{"_index":539,"t":{"58":{"position":[[864,11]]},"60":{"position":[[59,11],[2599,11],[2981,10],[3055,11]]},"429":{"position":[[157,11],[331,11]]},"471":{"position":[[6220,11]]}}}],["reflect",{"_index":1809,"t":{"505":{"position":[[30,8]]},"696":{"position":[[2808,7]]},"702":{"position":[[363,7]]}}}],["regard",{"_index":2201,"t":{"696":{"position":[[82,9]]}}}],["regex",{"_index":1783,"t":{"485":{"position":[[5520,5]]}}}],["regist",{"_index":753,"t":{"96":{"position":[[1123,8]]},"98":{"position":[[1984,8]]}}}],["rego",{"_index":40,"t":{"4":{"position":[[383,4]]}}}],["regress",{"_index":1624,"t":{"405":{"position":[[1061,11]]}}}],["regular",{"_index":2053,"t":{"642":{"position":[[176,7]]}}}],["regularli",{"_index":82,"t":{"8":{"position":[[268,9],[500,9]]}}}],["regulatori",{"_index":1145,"t":{"176":{"position":[[205,10]]}}}],["reject",{"_index":290,"t":{"16":{"position":[[8474,9]]},"290":{"position":[[759,6]]},"431":{"position":[[988,9]]},"682":{"position":[[384,9]]},"716":{"position":[[206,9]]}}}],["relat",{"_index":79,"t":{"8":{"position":[[216,10]]},"12":{"position":[[39,9]]},"14":{"position":[[229,9],[261,8],[295,9],[328,8]]},"16":{"position":[[714,9],[761,8],[862,9],[984,12],[1121,12],[1682,9],[1850,9],[1963,12],[2100,12],[2180,11],[2296,11],[2409,11],[2521,11],[2595,12],[2652,12],[3749,7],[4375,8],[4555,7],[4645,9],[4990,7],[5091,8],[5218,10],[5231,8],[5452,9],[5565,8],[5589,8],[5895,7],[6006,7],[6132,7],[6211,7],[6270,7],[6493,7],[6669,9],[6825,12],[6962,12],[7345,10],[7399,8],[7535,7],[7566,7],[7677,7],[7693,9],[7824,9],[7902,12],[7959,12],[8186,8],[8374,8],[8603,9],[8631,7],[8699,8],[8805,8],[8987,9],[9367,11],[9540,8],[9988,8],[10168,7],[10537,7],[10584,11],[10690,7],[10729,11],[10819,7],[10877,11],[11036,11],[11355,9],[11465,12],[11553,11],[11627,12],[11882,11],[13027,9],[14020,9],[15219,8],[17106,8],[17146,8],[17828,8],[18639,9],[19632,9],[20831,8],[22718,8],[22758,8],[23619,8],[24386,9],[25381,9],[26599,8],[28314,11],[28527,8],[29071,8],[30033,11],[30135,8]]},"20":{"position":[[63,9],[110,8]]},"28":{"position":[[46,7]]},"30":{"position":[[2,8]]},"32":{"position":[[2,8]]},"34":{"position":[[11,7],[122,7],[138,9]]},"36":{"position":[[54,8]]},"38":{"position":[[39,8]]},"40":{"position":[[165,8],[345,7]]},"52":{"position":[[193,6],[233,9],[327,7]]},"54":{"position":[[188,9],[232,9],[524,9],[891,12],[948,12],[1058,12],[1123,11],[1248,11],[1314,11],[1467,11],[1543,11],[1609,11],[1730,11],[1805,11],[1871,11],[1921,12],[2020,11],[2211,11],[2324,11],[2380,12],[2445,11],[2570,11],[2636,11],[2789,11],[2865,11],[2931,11],[3052,11],[3127,11],[3193,11],[3243,12],[3342,11],[3533,11],[3646,11],[3820,8],[3938,10]]},"56":{"position":[[58,8],[217,8],[302,7],[382,8],[566,7],[619,8],[802,8],[844,8],[1087,9],[1156,12],[1213,12],[1333,11],[1408,9],[1484,8],[1783,8],[1971,7],[2034,11],[2119,7],[2179,11],[2330,11],[2444,11]]},"58":{"position":[[29,9],[136,9],[248,12],[362,11],[431,11],[473,12],[682,9],[762,9],[834,8],[901,8],[1118,9],[1187,10],[1209,8],[1563,11],[1738,11],[2036,11]]},"60":{"position":[[71,9],[161,7],[208,7],[333,9],[393,9],[574,12],[631,12],[731,11],[787,12],[935,11],[1001,11],[1051,12],[1362,8],[1451,9],[1558,12],[1673,11],[1739,11],[1789,12],[2187,11],[2319,11],[2515,11],[2611,9],[2624,7],[2700,7],[2759,7],[2805,7],[2992,8],[3075,8]]},"62":{"position":[[183,9],[271,12],[359,11],[407,12],[738,11],[865,11],[986,7],[1054,7],[1144,8],[1178,7],[1399,11]]},"64":{"position":[[201,9],[299,12],[378,11],[436,11],[484,12],[778,11],[920,11],[1050,7],[1118,7],[1186,7],[1378,11],[1639,11],[1802,11]]},"66":{"position":[[268,9],[362,12],[464,11],[511,12],[790,11],[923,8],[979,11],[1149,7],[1210,7],[1281,7],[1413,11],[1703,11],[1825,11]]},"68":{"position":[[415,8],[442,8],[540,9],[566,8],[664,9],[725,9],[811,9],[901,9],[1125,12],[1238,11],[1342,11],[1404,11],[1449,11],[1499,12],[1830,9],[1960,12],[2048,11],[2110,11],[2155,11],[2205,12],[2414,7],[2471,7],[2526,7],[2598,7]]},"80":{"position":[[121,9],[287,12],[395,12],[1499,12],[1607,12]]},"98":{"position":[[149,8],[1418,9],[5024,9]]},"114":{"position":[[253,9],[466,9],[753,8]]},"126":{"position":[[223,9],[448,9],[764,8],[1627,11]]},"134":{"position":[[217,9],[248,9]]},"182":{"position":[[69,9],[126,9],[157,9]]},"188":{"position":[[115,9]]},"192":{"position":[[158,9],[389,9],[788,8]]},"194":{"position":[[172,9],[315,9],[547,9],[947,8]]},"196":{"position":[[321,9]]},"198":{"position":[[130,7]]},"200":{"position":[[434,8]]},"202":{"position":[[160,8],[259,8]]},"204":{"position":[[261,8],[302,9],[361,9],[409,9],[543,12],[602,12],[716,12],[773,12],[854,11],[1183,7],[1206,9],[1616,8]]},"208":{"position":[[105,7],[128,9],[538,8]]},"211":{"position":[[283,11]]},"213":{"position":[[784,9],[1788,9],[3092,8]]},"215":{"position":[[871,9],[1861,9],[3057,8],[4935,8],[4975,8],[6037,9],[7029,9],[8227,8],[10112,8],[10152,8]]},"221":{"position":[[255,8],[296,9],[351,9],[397,9],[521,12],[578,12],[690,12],[747,12],[824,11],[1173,11],[2171,9],[3157,9],[4349,8],[6210,8],[6250,8],[7201,9],[8242,9],[9583,8],[12579,9],[13569,9],[14765,8],[16643,8],[16683,8],[17603,9],[18595,9],[19793,8],[21678,8],[21718,8],[22195,7],[22218,9],[22628,8]]},"227":{"position":[[105,7],[128,9],[538,8]]},"230":{"position":[[1048,9],[2051,9],[3354,8]]},"232":{"position":[[914,9],[1905,9],[3102,8],[4983,8],[5023,8]]},"236":{"position":[[269,9]]},"238":{"position":[[308,9],[428,12],[485,12],[902,7],[925,9],[1335,8]]},"242":{"position":[[105,7],[128,9],[538,8]]},"245":{"position":[[177,11],[1171,9],[2151,9],[3337,8],[5185,8],[5225,8]]},"247":{"position":[[807,9],[1806,9],[3105,8],[5094,10],[5943,9],[6924,9],[8111,8],[9962,8],[10002,8]]},"259":{"position":[[3071,11]]},"261":{"position":[[99,9],[143,9],[196,9],[328,12],[385,12],[495,12],[551,12],[629,11],[700,12],[756,12],[834,11],[964,6]]},"279":{"position":[[387,9],[450,9],[579,12],[636,12],[770,11],[824,12],[914,12],[1502,7],[1525,9],[1935,8]]},"285":{"position":[[105,7],[128,9],[538,8]]},"288":{"position":[[888,9],[1883,9],[3178,8],[5794,9],[6790,9],[8086,8],[11019,9],[11156,9],[12200,9],[12428,9],[13772,8],[13939,8]]},"290":{"position":[[283,11],[387,11],[508,7]]},"296":{"position":[[1582,9]]},"306":{"position":[[232,7],[285,7],[490,9],[544,9],[667,12],[724,12],[822,11],[874,12],[931,12],[1234,11],[1355,11],[1469,11],[1812,7],[1835,9],[2245,8],[2380,7]]},"310":{"position":[[105,7],[128,9],[538,8],[673,7]]},"312":{"position":[[1011,9],[2002,9],[3199,8],[5081,8],[5121,8],[6040,9],[7030,9],[8226,8],[10104,8],[10144,8]]},"314":{"position":[[86,9],[142,8],[261,9],[338,9],[461,12],[545,12],[713,11],[765,12],[822,12]]},"316":{"position":[[165,8],[348,9],[441,9],[564,12],[693,11],[740,12],[908,11],[960,12],[1017,12]]},"318":{"position":[[1106,9],[2169,9],[3532,8],[6614,9],[7605,9],[8802,8],[10683,8],[10723,8],[11849,9],[12840,9],[14037,8],[15919,8],[15959,8]]},"326":{"position":[[195,9],[259,10],[287,8],[319,9],[542,9]]},"328":{"position":[[233,7],[431,9],[576,12],[659,12],[958,11],[1315,7],[1338,9],[1748,8]]},"332":{"position":[[105,7],[128,9],[538,8]]},"336":{"position":[[216,9],[371,12],[459,11],[533,12]]},"338":{"position":[[1043,9],[2041,9],[3245,8],[5146,8],[5186,8]]},"343":{"position":[[135,8],[582,7],[666,7]]},"345":{"position":[[88,9],[134,9],[263,12],[320,12],[432,12],[489,12],[586,11],[777,11],[910,11],[1988,9],[2976,9],[4170,8],[6042,8],[6082,8]]},"347":{"position":[[93,9],[270,12],[384,11],[432,12],[529,11],[639,11]]},"349":{"position":[[154,8],[435,8],[491,8],[599,8],[675,8],[872,9],[982,9],[1065,9]]},"353":{"position":[[287,9]]},"355":{"position":[[541,9],[702,12],[790,11],[864,12]]},"367":{"position":[[117,9],[200,7],[321,9],[423,9],[554,12],[642,11],[716,12],[814,11],[927,11],[981,12],[1040,12]]},"369":{"position":[[958,9],[1074,9],[2127,9],[2299,9],[3652,8],[3778,8],[6928,9],[7921,9],[9120,8],[11007,8],[11051,8]]},"371":{"position":[[914,9],[1085,9],[2193,9],[2420,9],[3828,8],[4009,8]]},"373":{"position":[[840,9],[1833,9],[3032,8],[4919,8],[4959,8]]},"377":{"position":[[279,9]]},"379":{"position":[[331,9],[476,12],[559,12],[894,7],[917,9],[1327,8]]},"381":{"position":[[105,7],[128,9],[538,8]]},"383":{"position":[[208,8]]},"385":{"position":[[845,9],[1861,9],[3177,8]]},"387":{"position":[[943,9],[1941,9],[3145,8],[5046,8],[5086,8],[6193,9],[7192,9],[8397,8],[10301,8],[10341,8]]},"393":{"position":[[406,8],[515,8],[671,8],[725,8],[954,8]]},"395":{"position":[[448,9],[481,9]]},"397":{"position":[[60,7],[679,7]]},"399":{"position":[[3944,10]]},"401":{"position":[[50,10],[61,9],[199,9],[336,9],[2502,9],[2826,9],[2892,9],[3051,9],[3194,9],[3230,9]]},"403":{"position":[[59,8],[95,9],[327,9],[635,9],[664,8],[745,8],[816,8],[1073,8],[1122,9],[1184,8],[1359,9],[1419,8],[1460,11],[1589,9],[1725,8],[2024,9],[2276,7],[2579,9],[2855,9],[3181,9],[3302,9],[3329,8],[3798,8],[3848,9],[3909,8],[4075,9],[4141,9],[4170,8],[4484,8],[4534,9],[4596,8],[4755,9],[5097,11],[5206,9],[5235,8],[5280,9],[5334,9],[5386,9],[5415,8],[5511,8],[5582,8],[5682,8],[5752,8],[6074,8],[6124,9],[6168,8],[6398,9],[6466,9],[6971,9],[7032,8],[7612,9],[7672,8],[7739,9],[8044,9],[8138,9],[8198,8],[8411,9],[8595,9],[8656,8],[8865,9],[9018,9],[9086,8],[9212,9],[9453,9],[9976,9],[10042,9]]},"405":{"position":[[587,8],[883,8],[929,8],[1667,9],[1781,9],[1898,9],[2058,9],[2167,9],[2324,9],[2616,8],[2665,8],[2714,8],[2762,8],[2941,8],[2990,8],[3039,8],[3097,8],[3194,8],[3243,8],[3292,8],[3340,8],[3517,8],[3576,8],[3625,8],[3683,8],[3954,8]]},"407":{"position":[[58,10]]},"411":{"position":[[53,10]]},"413":{"position":[[10,9],[37,9]]},"415":{"position":[[600,9]]},"419":{"position":[[146,9],[190,9],[280,9],[424,12],[462,12],[527,12],[668,11],[727,11],[787,12],[927,11],[1003,11],[1062,11],[1190,11],[1313,11],[1459,11],[1573,11],[1925,11],[2102,9],[2150,9],[2314,9],[2358,9],[2450,9],[2631,12],[2669,12],[2726,12],[2836,12],[2977,11],[3036,11],[3086,12],[3269,12],[3409,11],[3485,11],[3544,11],[3594,12]]},"421":{"position":[[165,11],[376,9],[431,9],[530,12],[671,11]]},"423":{"position":[[116,11],[192,11],[270,11],[481,11],[1379,9],[1423,9],[1528,9],[1685,12],[1723,12],[1780,12],[1890,12],[2031,11],[2090,11],[2140,12],[2310,11],[2366,12],[2506,11],[2582,11],[2641,11],[2691,12],[2861,11],[3192,11],[3351,8]]},"425":{"position":[[212,11],[421,8],[590,9],[813,9],[894,12],[935,12],[992,12],[1313,11],[2258,11]]},"427":{"position":[[221,9],[305,9]]},"429":{"position":[[169,9],[182,7],[202,8],[221,7],[351,9],[947,9],[1078,9],[1243,12],[1370,11],[1415,11],[1465,12],[1567,11],[1952,9],[2200,9],[2616,8]]},"431":{"position":[[1169,8]]},"433":{"position":[[82,9],[113,9]]},"437":{"position":[[253,7],[289,7],[328,8],[428,7],[742,9],[846,9],[969,12],[1085,11],[1127,12],[1319,12],[1376,12],[1668,11],[1793,11],[1917,11],[2042,11],[2164,11],[2801,7],[2824,9],[3234,8]]},"443":{"position":[[105,7],[128,9],[538,8]]},"445":{"position":[[1011,9],[2005,9],[3205,8],[5096,8],[5142,8],[6061,9],[7054,9],[8253,8],[10140,8],[10186,8],[10556,8]]},"447":{"position":[[29,8],[225,9],[377,9],[500,12],[616,11],[724,11],[800,11],[858,11],[908,12],[1100,12],[1157,12]]},"449":{"position":[[971,9],[1966,9],[3167,8],[5061,8],[5109,8],[6185,9],[7180,9],[8381,8],[10274,8],[10322,8]]},"453":{"position":[[391,8],[535,9]]},"455":{"position":[[253,7],[304,7],[376,9],[422,9],[543,12],[600,12],[712,12],[769,12],[1186,7],[1209,9],[1619,8],[1760,7]]},"459":{"position":[[105,7],[128,9],[538,8],[679,7]]},"461":{"position":[[341,8]]},"463":{"position":[[18,8],[358,9],[404,9],[549,12],[606,12],[718,12],[801,12],[1017,9]]},"465":{"position":[[19,9],[162,9],[208,9],[375,12],[432,12],[544,12],[671,11],[716,11],[766,12],[1027,7],[1128,7]]},"467":{"position":[[26,9],[820,9],[1822,9],[3124,8]]},"469":{"position":[[888,9],[1970,9],[3352,8]]},"471":{"position":[[1016,9],[2014,9],[3218,8],[5119,8],[5159,8],[5405,8],[5502,8],[5840,7],[6232,9],[6245,7]]},"477":{"position":[[261,9],[321,9],[449,12],[504,12],[955,7],[978,9],[1388,8]]},"481":{"position":[[105,7],[128,9],[538,8]]},"483":{"position":[[67,7],[155,7]]},"485":{"position":[[185,8],[1048,9],[2102,9],[3456,8],[5807,11],[6186,11]]},"487":{"position":[[1148,9],[2142,9],[3342,8],[5231,8],[5267,8]]},"491":{"position":[[642,9],[722,9],[761,9],[1633,8]]},"493":{"position":[[254,7],[338,9],[478,12],[560,12],[1045,7],[1068,9],[1478,8]]},"497":{"position":[[105,7],[128,9],[538,8]]},"499":{"position":[[298,7],[316,9],[369,9],[542,9]]},"501":{"position":[[0,8],[80,9],[316,9],[456,12],[538,12]]},"503":{"position":[[83,9],[127,10],[226,8],[286,8],[306,9],[392,9],[421,7],[457,9],[788,9],[995,12],[1101,11],[1191,11],[1240,11],[1287,12],[1580,8]]},"505":{"position":[[1090,9],[1193,9],[2229,9],[2388,9],[3724,8],[3837,8],[6879,9],[7870,9],[9067,8],[10947,8],[11003,8],[11244,7],[11296,7],[12294,9],[13285,9],[14482,8],[16362,8],[16416,8],[17402,9],[18395,9],[19594,8],[21482,8],[21538,8],[22446,9],[23438,9],[24636,8],[26521,8],[26575,8],[26837,7],[26888,7],[26925,7],[26976,7]]},"509":{"position":[[178,8],[277,8]]},"511":{"position":[[261,7],[336,9],[459,12],[516,12],[933,7],[956,9],[1366,8]]},"515":{"position":[[105,7],[128,9],[538,8]]},"517":{"position":[[191,8],[389,8]]},"519":{"position":[[215,9],[264,9],[387,12],[444,12],[522,11],[574,12],[631,12]]},"521":{"position":[[831,9],[1835,9],[3139,8]]},"523":{"position":[[97,7],[140,9],[222,7],[308,8],[1158,7],[1227,9],[2223,7],[2308,9],[3613,7],[3689,8],[4801,7],[5553,7]]},"525":{"position":[[1078,9],[2078,9],[3284,8],[5193,8],[5233,8]]},"531":{"position":[[241,8],[296,9],[414,12],[470,12],[886,7],[909,9],[1319,8]]},"535":{"position":[[105,7],[128,9],[538,8]]},"537":{"position":[[37,7],[113,7],[909,9],[968,9],[1964,9],[2079,9],[3375,8],[3444,8]]},"539":{"position":[[121,9],[206,9],[329,12],[443,11],[501,11],[580,12],[753,12],[814,12],[965,8],[998,8],[1043,8],[1228,7],[1277,7]]},"541":{"position":[[914,9],[971,9],[1965,9],[2078,9],[3372,8],[3439,8]]},"543":{"position":[[193,7],[928,9],[1931,9],[3234,8]]},"545":{"position":[[851,9],[1830,9],[3015,8],[4861,8],[4899,8],[5797,9],[6776,9],[7961,8],[9807,8],[9845,8]]},"547":{"position":[[810,9],[1805,9],[3100,8],[5786,9],[6766,9],[7952,8],[9801,8],[9839,8]]},"553":{"position":[[404,9],[559,12],[687,11],[735,12],[975,11],[1357,7],[1380,9],[1790,8]]},"557":{"position":[[105,7],[128,9],[538,8]]},"562":{"position":[[1008,9],[1997,9],[3192,8],[5066,8],[5106,8]]},"569":{"position":[[78,7],[156,8],[226,8],[285,8],[367,9],[2243,9],[3546,8],[5608,9],[5884,9],[5967,7],[6010,9],[11063,9],[11306,9],[11394,7],[13186,9],[14478,8],[16481,8]]},"571":{"position":[[2328,9],[3513,8],[5221,9],[5493,6]]},"576":{"position":[[909,9],[960,8],[1939,9],[2008,8],[3282,8],[3334,8],[4466,9],[5189,8],[6243,9],[6294,8],[7273,9],[7342,8],[8616,8],[8668,8],[9800,9],[10523,8],[10849,7],[10910,7],[10952,7]]},"583":{"position":[[895,9],[987,9],[1997,9],[2128,9],[3384,8],[5359,11],[5471,11],[5687,8],[5921,8]]},"591":{"position":[[173,8]]},"593":{"position":[[474,7],[497,9],[907,8],[1014,8]]},"597":{"position":[[105,7],[128,9],[538,8],[645,8]]},"599":{"position":[[303,8]]},"601":{"position":[[51,8],[295,9],[400,9],[523,12],[611,11],[685,12],[819,11],[930,11],[982,12],[1039,12],[1245,10],[1280,9],[1433,8]]},"603":{"position":[[82,8]]},"605":{"position":[[106,9],[211,9],[334,12],[422,11],[496,12],[630,11],[741,11],[793,12],[850,12],[966,8],[1181,11],[2137,9],[3127,9],[4323,8],[6201,8],[6241,8],[6548,8],[6774,11],[7730,9],[8720,9],[9916,8],[11794,8],[11834,8],[12158,8],[12624,11],[12708,11],[13975,9],[14968,9],[16167,8],[18057,8],[18097,8],[18473,8],[19004,11],[19100,11],[19184,11],[19268,11],[20227,9],[21217,9],[22413,8],[24291,8],[24331,8],[24924,11],[25885,9],[26876,9],[28073,8],[29955,8],[29995,8]]},"607":{"position":[[107,9],[167,9],[224,9],[347,12],[395,11],[463,12],[502,12],[559,12],[782,8],[826,8],[1025,11],[1982,9],[2973,9],[4170,8],[6051,8],[6091,8],[6415,8],[6691,11],[7654,9],[8648,9],[9848,8],[11741,8],[11781,8],[12109,8],[12370,11],[12454,11],[13413,9],[14405,9],[15603,8],[17488,8],[17528,8],[17916,8],[18057,9],[18193,11],[19156,9],[20148,9],[21346,8],[23232,8],[23272,8]]},"609":{"position":[[112,8],[439,8]]},"613":{"position":[[232,7],[287,7],[356,9],[400,9],[523,12],[580,12],[690,12],[747,12],[1130,7],[1153,9],[1563,8]]},"617":{"position":[[105,7],[128,9],[538,8]]},"620":{"position":[[129,9],[189,9],[257,9],[380,12],[463,12],[644,12],[701,12]]},"622":{"position":[[1165,9],[2285,9],[3705,8]]},"624":{"position":[[956,9],[1957,9],[3164,8],[5080,8],[5120,8],[5476,8]]},"628":{"position":[[125,9],[240,9],[373,12],[509,11],[563,11],[624,12],[810,12],[878,12],[1003,10],[1042,8]]},"630":{"position":[[836,9],[983,9],[2055,9],[2258,9],[3630,8],[3787,8]]},"632":{"position":[[880,9],[1873,9],[3072,8],[4959,8],[4999,8]]},"634":{"position":[[840,9],[1915,9],[3290,8],[6250,9],[7244,9],[8444,8],[10334,8],[10374,8],[11300,9],[12297,9],[13500,8],[15399,8],[15461,8]]},"640":{"position":[[178,7],[201,9],[611,8]]},"642":{"position":[[38,10],[120,9],[141,8],[294,9],[424,12],[514,11],[629,9],[664,11],[745,11],[908,9],[1039,12],[1130,11]]},"644":{"position":[[296,9],[476,12],[590,11],[672,11],[747,11],[1642,9],[2634,9],[3832,8],[5716,8],[5762,8],[6679,9],[7670,9],[8867,8],[10748,8],[10792,8]]},"646":{"position":[[98,9],[922,9],[1977,9],[3332,8],[6146,9],[7141,9],[8342,8],[10238,8],[10284,8]]},"648":{"position":[[56,8],[5694,8],[6508,9],[6581,9],[7588,9],[7717,9],[9024,8],[9107,8],[11958,9],[12031,9],[13039,9],[13168,9],[14476,8],[14559,8],[17596,9],[18588,9],[19786,8],[21670,8],[21716,8],[22678,9],[23668,9],[24864,8],[26742,8],[26782,8]]},"650":{"position":[[106,9],[156,9],[287,12],[378,11],[475,8]]},"658":{"position":[[2,9],[398,8]]},"660":{"position":[[919,9],[1025,9],[1391,12],[1517,12],[1783,12],[1911,11],[1969,11],[2090,11],[2148,11],[2234,11],[2294,11],[2367,11],[2451,11],[2527,11],[2602,11],[2644,12],[3321,9],[3453,9],[3585,9],[3717,9],[3849,9],[3964,9],[4074,9],[4360,9],[4548,9],[4736,9],[4924,9],[5112,9],[5283,9],[5449,9],[5903,8],[6045,8],[6187,8],[6329,8],[6471,8],[6596,8],[6716,8]]},"664":{"position":[[445,7]]},"666":{"position":[[414,9],[628,9],[916,8],[1924,8],[1968,8],[2305,9],[2521,9],[2811,8],[3825,8],[3873,8],[4222,9],[4436,9],[4724,8],[5732,8],[5776,8],[6118,9],[6335,9],[6626,8],[7643,8],[7691,8],[8032,9],[8247,9],[8536,8],[9547,8],[9591,8],[9934,9],[10151,9],[10442,8],[11459,8],[11507,8]]},"668":{"position":[[326,9],[358,8],[429,8],[546,8],[644,8],[869,8],[1026,9],[1112,9],[1369,12],[1513,11],[1654,11],[1781,11],[1857,11],[1949,12],[2398,8],[2992,9],[3207,9],[3496,8],[4507,8],[4551,8],[5552,9],[6624,9],[7996,8],[10245,9],[10459,9],[10747,8],[11755,8],[11799,8]]},"670":{"position":[[1096,8],[1913,9],[3013,9],[4413,8],[6777,9],[6879,9],[7106,9],[7265,9],[7604,8],[7738,9],[9011,8],[9055,8],[9194,8],[9602,9],[9704,9],[9932,9],[10091,9],[10431,8],[10565,9],[11841,8],[11885,8],[12024,8]]},"672":{"position":[[119,9],[363,9],[729,12],[873,11],[1014,11],[1141,11],[1217,11],[1309,12],[1658,12],[1786,11],[1844,11],[1952,11],[2029,11],[2087,11],[2173,11],[2233,11],[2326,11],[2402,11],[2477,11],[2519,12],[2860,9],[2992,9],[3124,9],[3256,9],[3388,9],[3503,9],[3613,9],[3899,9],[4087,9],[4275,9],[4463,9],[4651,9],[4822,9],[4988,9],[5442,8],[5584,8],[5726,8],[5868,8],[6010,8],[6135,8],[6255,8]]},"678":{"position":[[525,9],[735,8],[790,8],[838,8]]},"688":{"position":[[126,9],[251,9]]},"690":{"position":[[499,10],[690,9],[889,12],[1032,12]]},"692":{"position":[[1201,9],[2211,9],[3521,8],[6157,9],[7171,9],[8485,8],[11145,9],[11218,9],[11295,9],[12302,9],[12431,9],[12564,9],[13871,8],[13954,8],[14041,8],[17513,9],[18505,9],[19703,8],[21587,8],[21649,8],[22631,9],[23621,9],[24817,8],[26695,8],[26751,8],[26943,8],[26958,9],[27008,7],[27094,7],[27184,7],[27278,7],[27365,7],[27444,7]]},"694":{"position":[[54,9],[147,7],[533,8],[605,8],[640,8],[680,7],[730,7],[806,7],[851,7],[1187,9],[1492,12],[1653,11],[1704,11],[1832,11],[1883,11],[2004,11],[2054,12],[2769,9],[2867,8],[3619,9],[3689,9],[3756,9],[3828,9],[4829,9],[4955,9],[5078,9],[5206,9],[6507,8],[6587,8],[6664,8],[6746,8],[9305,7],[10127,9],[11122,9],[12323,8],[14219,8],[14281,8],[14483,8],[14498,9],[14548,7],[14634,7],[14724,7],[14818,7],[14905,7],[14984,7],[15073,7],[15163,7],[15259,7],[15357,7],[15450,7],[15533,7]]},"696":{"position":[[367,9],[457,12],[550,12],[822,9],[1126,9],[1279,12],[1440,11],[1491,11],[1619,11],[1670,11],[1791,11],[1841,12],[1949,11],[2078,11],[2387,12],[2480,12],[3525,9],[3608,9],[4623,9],[4762,9],[6077,8],[6170,8],[8407,8],[9240,9],[9335,9],[9424,9],[9507,9],[10533,9],[10684,9],[10829,9],[10968,9],[12294,8],[12399,8],[12498,8],[12591,8],[15572,7],[16388,9],[17377,9],[18572,8],[20444,8],[20506,8],[20758,8],[20773,9],[20823,7],[20908,7],[20997,7],[21090,7],[21176,7],[21255,7],[21343,7],[21433,7],[21529,7],[21627,7],[21720,7],[21803,7]]},"698":{"position":[[71,9],[522,9],[678,9],[952,9],[1105,12],[1250,11],[1301,11],[1413,11],[1464,11],[1569,11],[1619,12],[1727,11],[1856,11],[1924,12],[2017,12],[2734,8],[2962,9],[3718,9],[3792,9],[3870,9],[4878,9],[5008,9],[5142,9],[6450,8],[6534,8],[6622,8],[9002,7],[9088,7],[9156,9],[9206,10],[9299,8],[10101,9],[11095,9],[12295,8],[14186,8],[14248,8],[14436,8],[14451,9],[14507,7],[14595,7]]},"700":{"position":[[247,9]]},"704":{"position":[[375,8],[411,8],[676,8]]},"706":{"position":[[525,9]]},"716":{"position":[[316,8],[395,9],[553,9],[930,7],[1047,9],[1250,12],[1398,12],[1753,7],[1984,8]]},"718":{"position":[[236,8],[478,10],[619,9],[822,12],[970,12],[1378,8],[1431,9],[1476,9],[1531,12],[1588,12],[1752,7],[1830,7],[1907,7],[2810,9],[3879,9],[5248,8],[8113,9],[9111,9],[10315,8],[12216,8],[12268,8],[13242,9],[14311,9],[15680,8],[18502,9],[19500,9],[20704,8],[22611,8],[22651,8],[23658,9],[24663,9],[25874,8],[27802,8],[27854,8],[28128,9],[28261,9],[28386,9],[29197,9],[29328,9],[29451,9],[30516,9],[30703,9],[30882,9],[32247,8],[32388,8],[32521,8],[36066,9],[37064,9],[38268,8],[40169,8],[40221,8],[40417,8],[40432,9],[40487,7],[40589,7],[40679,7],[40766,7],[40851,7],[40940,7]]},"720":{"position":[[895,9],[1888,9],[3087,8],[4973,8],[5013,8],[5415,10],[5676,7],[5724,7],[5818,9],[6071,12],[6199,11],[6310,11],[6367,11],[6446,12],[7595,9],[8587,9],[9785,8],[11668,8],[11708,8],[11916,8],[11931,9],[11986,7],[12088,7],[12178,7],[12265,7],[12350,7],[12440,7]]},"722":{"position":[[36,9],[125,9],[294,7],[353,9],[400,8],[447,7],[530,9],[554,8],[626,7],[693,9],[798,8],[1287,9],[1359,8],[1656,9],[1930,12],[2049,12],[2236,11],[2289,11],[2344,11],[2391,11],[2506,11],[2559,11],[2614,11],[2661,11],[2778,10],[2800,7],[2840,7],[2870,7],[2902,9],[2932,8],[3075,9],[3359,12],[3509,11],[3557,12],[3744,11],[3797,11],[3852,11],[3899,11],[4014,11],[4067,11],[4122,11],[4169,11],[4340,8],[4393,9],[4510,9],[4684,9],[5039,12],[5167,11],[5278,11],[5335,11],[5414,12],[5745,12],[5895,11],[5943,12],[6130,11],[6183,11],[6238,11],[6285,11],[6400,11],[6453,11],[6508,11],[6555,11],[6684,8],[7574,9],[7664,9],[7765,9],[8808,9],[8954,9],[9111,9],[10454,8],[10554,8],[10665,8],[13401,8],[14158,7],[14211,7],[14291,9],[15280,7],[15333,7],[15429,9],[16727,7],[16780,7],[16867,8],[17972,7],[18025,7],[18778,7],[18831,7],[19056,7],[19107,7],[19936,8],[19973,8],[20002,9],[20072,9],[21102,8],[21139,8],[21184,9],[21310,9],[22649,8],[22686,8],[22722,8],[22802,8],[23948,8],[23985,8],[24855,8],[24892,8],[25920,9],[26001,9],[27017,9],[27154,9],[28470,8],[28561,8],[31592,9],[32632,9],[33972,8],[36740,9],[37763,9],[39086,8],[41197,7],[42013,9],[43003,9],[44199,8],[46078,8],[46118,8],[46273,7],[47105,9],[48110,9],[49321,8],[51245,8],[51285,8],[51485,9],[51507,8],[51522,9],[51577,7],[51669,7],[51763,7],[51852,7],[51928,7],[52015,7],[52112,7],[52213,7],[52315,7],[52410,7],[52499,7],[52583,7],[52673,7],[52779,7]]},"724":{"position":[[516,9]]},"732":{"position":[[2,9],[399,8]]},"734":{"position":[[570,9],[624,9],[818,9],[980,12],[1046,12],[1166,12],[1276,11],[1335,11],[1471,11],[1536,11],[1626,11],[1668,12],[1856,12],[1960,11],[2020,11],[2064,12],[3347,9],[3490,9],[3668,9],[3817,9],[4877,9],[5076,9],[5310,9],[5515,9],[6875,8],[7028,8],[7216,8],[7375,8]]},"738":{"position":[[422,7]]},"740":{"position":[[1196,9],[2184,9],[3378,8],[5250,8],[5294,8],[6311,9],[7303,9],[8501,8],[10389,8],[10433,8],[11428,9],[12498,9],[13868,8],[16663,9],[17652,9],[18847,8],[20722,8],[20766,8]]},"742":{"position":[[222,7],[270,9],[322,12],[377,12],[495,9],[555,12],[610,12],[735,10],[816,8],[950,8],[1076,8],[1311,9],[1555,12],[1788,11],[1858,11],[1934,11],[2012,11],[2060,12],[2394,8],[2480,8],[2525,8],[2811,9],[3096,12],[3206,11],[3265,11],[3424,11],[3509,11],[3568,11],[3683,11],[3748,11],[3845,11],[3887,12],[4151,8],[5306,9],[6290,9],[7480,8],[9335,8],[9379,8],[10538,9],[10690,9],[10878,9],[11976,9],[12184,9],[12428,9],[13826,8],[13988,8],[14186,8],[18073,9],[18196,9],[19266,9],[19445,9],[20815,8],[20948,8],[24205,9],[25193,9],[26387,8],[28259,8],[28303,8]]},"744":{"position":[[1875,9],[2025,9],[3123,9],[3329,9],[4727,8],[4887,8],[8551,9],[8657,9],[8738,9],[9724,9],[9887,9],[10023,9],[11253,8],[11391,9],[11474,9],[13737,8],[13781,8],[13928,8],[14010,8],[15007,9],[15113,9],[15194,9],[16181,9],[16344,9],[16480,9],[17711,8],[17849,9],[17932,9],[20198,8],[20242,8],[20389,8],[20471,8]]},"746":{"position":[[113,9],[350,9],[631,9],[718,9],[770,9],[889,12],[1122,11],[1192,11],[1268,11],[1346,11],[1394,12],[1698,12],[1808,11],[1867,11],[2026,11],[2111,11],[2170,11],[2285,11],[2350,11],[2447,11],[2489,12],[2677,12],[2781,11],[2841,11],[2885,12],[3001,12],[3056,12],[3174,12],[3229,12],[4075,9],[4218,9],[4396,9],[4545,9],[4681,9],[4832,9],[4985,9],[5138,9],[5290,9],[5441,9],[5592,9],[5780,9],[6861,9],[7060,9],[7294,9],[7499,9],[7691,9],[7898,9],[8107,9],[8316,9],[8524,9],[8731,9],[8938,9],[9182,9],[10563,8],[10716,8],[10904,8],[11063,8],[11209,8],[11370,8],[11533,8],[11696,8],[11858,8],[12019,8],[12180,8],[12378,8]]},"748":{"position":[[263,9],[306,9],[563,9],[844,9],[931,9],[983,9],[1100,12],[1156,12],[1265,12],[1522,11],[1592,11],[1668,11],[1746,11],[1794,12],[2165,12],[2275,11],[2334,11],[2493,11],[2578,11],[2637,11],[2752,11],[2817,11],[2914,11],[2956,12],[3144,12],[3248,11],[3308,11],[3352,12],[3468,12],[3523,12],[3641,12],[3696,12]]},"750":{"position":[[123,6]]},"754":{"position":[[692,8],[747,8],[795,8]]},"765":{"position":[[414,10],[479,8],[652,9],[703,9],[765,9],[887,12],[953,12],[1070,12],[1131,12],[1259,12],[1316,12]]},"767":{"position":[[131,9],[950,9],[1089,9],[1241,9],[1395,9],[1559,9],[1726,9],[2799,9],[2994,9],[3202,9],[3412,9],[3632,9],[3855,9],[5228,8],[5377,8],[5539,8],[5703,8],[5877,8],[6054,8],[10078,9],[10923,9],[11073,9],[11223,9],[12312,9],[12518,9],[12724,9],[14113,8],[14273,8],[14433,8],[17259,9],[18082,9],[18202,9],[18336,9],[19401,9],[19577,9],[19767,9],[21132,8],[21262,8],[21406,8],[24603,9],[24757,7],[24781,12],[24960,8],[25760,9],[26751,9],[27948,8],[29829,8],[29869,8],[30939,9],[31931,9],[33129,8],[35013,8],[35053,8],[35984,9],[36979,9],[38180,8],[40082,8],[40130,8],[41033,9],[42029,9],[43231,8],[45127,8],[45185,8]]},"769":{"position":[[247,7],[1061,9],[2053,9],[3251,8],[5135,8],[5175,8],[5417,8],[5446,8],[5547,9],[5631,12],[5723,12],[5902,8],[6223,8],[6389,7],[6611,9],[6684,9],[6746,9],[6861,12],[6953,12],[7139,12],[7200,12],[7328,12],[7385,12],[7575,7],[8396,9],[9384,9],[10578,8],[12450,8],[12490,8],[12691,8],[12791,8],[12880,7],[13745,9],[14742,9],[15945,8],[17853,8],[17893,8],[18266,11],[18311,11],[18486,7],[18523,8],[18617,8],[18785,7],[18851,7],[18997,9],[19116,12],[19252,11],[19306,11],[19360,12],[19538,7],[19632,8],[19658,7],[19896,8],[20022,11],[20112,7],[20167,11],[20234,11],[20413,8],[20489,7],[20567,8],[20628,11],[21278,8],[21548,9],[21656,9],[21718,9],[21840,12],[21976,11],[22030,11],[22084,12],[22270,12],[22331,12],[22459,12],[22516,12],[22663,7],[23493,9],[24489,9],[25691,8],[27596,8],[27636,8],[27816,9],[27906,8],[28053,8],[28134,7],[28198,7],[28369,8],[28485,8],[28684,9],[28799,9],[28910,9],[29032,12],[29168,11],[29222,11],[29283,12],[29469,12],[29571,11],[29620,11],[29664,12],[29792,12],[29849,12],[30022,8],[30122,8],[30160,7],[30194,7],[30333,7],[31147,9],[32134,9],[33327,8],[35196,8],[35236,8],[35505,9],[35635,8],[35749,11],[35961,9],[36087,12],[36223,11],[36277,11],[36338,12],[36535,9],[36651,12],[36747,11],[36801,11],[36856,12],[37058,11],[37138,7],[37191,9],[37220,8],[37311,11],[37390,11],[37457,11],[37639,9],[37744,9],[37855,9],[37977,12],[38073,11],[38127,11],[38182,12],[38299,12],[38401,11],[38450,11],[38494,12],[38622,12],[38679,12],[40134,9],[41121,9],[42314,8],[44183,8],[44223,8],[44404,8],[44455,8],[44470,9],[44515,7],[44594,7],[44669,7],[44741,7],[44820,7],[44896,7],[44974,7],[45059,7],[45141,7]]},"771":{"position":[[827,9]]},"773":{"position":[[481,8],[517,8],[776,8]]},"775":{"position":[[374,9]]},"786":{"position":[[191,10],[328,9],[539,12],[704,12],[1172,8],[1225,9],[1292,9],[1411,12],[1468,12],[1600,7],[1678,7],[2519,9],[3530,9],[4841,8],[7587,9],[8580,9],[9779,8],[11666,8],[11706,8],[12618,9],[13629,9],[14940,8],[17643,9],[18636,9],[19835,8],[21722,8],[21762,8],[22687,9],[23681,9],[24881,8],[26771,8],[26811,8],[27270,9],[27525,12],[27613,11],[27720,11],[27825,11],[27938,11],[28010,12],[28411,9],[28451,9],[28512,12],[28600,11],[28649,12],[28876,7],[28951,7],[29838,9],[30831,9],[32030,8],[33917,8],[33957,8],[34882,9],[35875,9],[37074,8],[38961,8],[39001,8]]},"788":{"position":[[377,9],[488,12],[545,12],[643,11],[704,9],[754,7],[820,9],[1135,12],[1223,11],[1330,11],[1435,11],[1548,11],[1620,12],[1718,11],[1830,11],[1941,11],[2056,11],[2166,11],[3098,9],[3268,9],[4338,9],[4564,9],[5934,8],[6114,8],[9585,9],[10580,9],[11781,8],[13677,8],[13715,8]]},"790":{"position":[[1009,9],[2044,9],[3379,8],[5626,8],[6567,9],[7634,9],[9001,8],[11786,9],[12779,9],[13978,8],[15866,8],[15904,8]]},"792":{"position":[[543,9],[933,9],[1040,12],[1097,12],[1270,9],[1594,12],[1682,11],[1789,11],[1894,11],[2007,11],[2104,12],[2202,11],[2314,11],[2425,11],[2540,11],[2650,11],[2791,9],[3632,9],[3717,9],[4727,9],[4868,9],[6178,8],[6273,8],[8585,8],[8742,8],[8939,9],[9764,9],[10761,9],[11964,8],[13863,8],[13901,8],[14328,11],[14372,11],[14552,7],[14666,7],[14729,7],[14835,7],[14929,11],[16257,9],[17290,9],[18623,8],[20679,9],[21116,9],[21300,12],[21407,11],[21444,11],[21554,11],[21658,11],[21731,11],[21769,11],[21876,11],[21981,11],[22051,11],[22089,11],[22163,12],[22261,11],[22311,11],[22423,11],[22473,11],[22584,11],[22634,11],[22749,11],[22799,11],[22909,11],[22959,11],[23095,12],[23181,12],[23359,11],[23409,11]]},"796":{"position":[[371,8],[407,8],[645,8],[954,8]]},"798":{"position":[[374,9]]},"809":{"position":[[278,10],[417,9],[608,12],[745,12],[1142,8],[1195,9],[1239,9],[1293,12],[1350,12],[1513,7],[1591,7],[1667,7],[2516,9],[3530,9],[4844,8],[7605,9],[8601,9],[9803,8],[11699,8],[11745,8],[12655,9],[13665,9],[14975,8],[17674,9],[18666,9],[19864,8],[21748,8],[21786,8],[22711,9],[23705,9],[24905,8],[26795,8],[26835,8],[27306,9],[27529,12],[27642,11],[27749,11],[27854,11],[27905,12],[28239,9],[28296,7],[28405,7],[28466,7],[29350,9],[30342,9],[31540,8],[33424,8],[33462,8],[34387,9],[35380,9],[36579,8],[38466,8],[38506,8]]},"811":{"position":[[448,9],[648,9],[771,12],[884,11],[991,11],[1096,11],[1147,12],[1246,11],[1359,11],[1475,11],[1588,11],[1642,12],[1699,12],[1833,7],[1904,7],[2850,9],[2914,9],[2981,9],[3115,9],[4181,9],[4301,9],[4424,9],[4614,9],[5980,8],[6054,8],[6131,8],[6275,8],[10056,9],[11052,9],[12254,8],[14153,8],[14193,8]]},"813":{"position":[[522,9],[827,12],[966,11],[1073,11],[1178,11],[1229,12],[1401,11],[1514,11],[1630,11],[1743,11],[1817,8],[1875,8],[2676,9],[2827,9],[3886,9],[4093,9],[5452,8],[5613,8],[9184,9],[10183,9],[11388,8],[13294,8],[13334,8],[13709,11],[13774,11],[13819,11],[13996,7],[14077,7],[14169,7],[14232,7],[14334,7],[14428,11],[14836,9],[15152,9],[15275,12],[15382,11],[15419,11],[15526,11],[15594,11],[15632,11],[15742,11],[15811,11],[15852,11],[15959,11],[16031,11],[16069,11],[16145,12],[16317,11],[16430,11],[16546,11],[16659,11],[16713,12],[16770,12]]},"815":{"position":[[533,9],[593,9],[916,9],[1039,12],[1146,11],[1183,11],[1290,11],[1358,11],[1396,11],[1506,11],[1575,11],[1616,11],[1723,11],[1795,11],[1833,11],[1909,12],[2081,11],[2194,11],[2310,11],[2459,11],[2513,12],[2570,12],[3553,9],[3715,9],[3864,9],[4936,9],[5154,9],[5359,9],[6731,8],[6903,8],[7062,8],[10711,9],[11711,9],[12917,8],[14825,8],[14863,8],[15880,9],[16882,9],[18090,8],[20004,8],[20044,8],[20986,9],[21990,9],[23200,8],[25120,8],[25166,8],[26185,9],[27187,9],[28395,8],[30309,8],[30349,8],[31291,9],[32293,9],[33501,8],[35415,8],[35455,8]]}}}],["relation\":\"account",{"_index":2392,"t":{"734":{"position":[[10463,21]]},"746":{"position":[[17490,21]]}}}],["relation\":\"account_manag",{"_index":2384,"t":{"734":{"position":[[9981,29]]},"740":{"position":[[15769,29]]},"746":{"position":[[17008,29]]}}}],["relation\":\"admin",{"_index":1857,"t":{"537":{"position":[[5302,19],[5365,19]]},"788":{"position":[[8461,19]]}}}],["relation\":\"approved_ip_address_rang",{"_index":2448,"t":{"742":{"position":[[17042,39]]},"746":{"position":[[18757,39]]}}}],["relation\":\"approved_timeslot",{"_index":2445,"t":{"742":{"position":[[16694,31],[16850,31]]},"746":{"position":[[17630,31],[17785,31],[17942,31],[18099,31],[18255,31],[18410,31],[18565,31]]}}}],["relation\":\"assigne",{"_index":1479,"t":{"369":{"position":[[5834,22],[5954,22]]}}}],["relation\":\"associated_plan",{"_index":2042,"t":{"630":{"position":[[6081,29]]},"634":{"position":[[5210,29]]},"767":{"position":[[9166,29],[9309,29],[9465,29],[9623,29],[9791,29],[9962,29]]}}}],["relation\":\"block",{"_index":1401,"t":{"318":{"position":[[5412,21]]}}}],["relation\":\"branch",{"_index":2390,"t":{"734":{"position":[[10310,20]]},"746":{"position":[[17337,20]]}}}],["relation\":\"channels_admin",{"_index":2302,"t":{"718":{"position":[[34827,28]]}}}],["relation\":\"comment",{"_index":2694,"t":{"809":{"position":[[6632,23]]},"815":{"position":[[9628,23]]}}}],["relation\":\"custom",{"_index":2387,"t":{"734":{"position":[[10128,22]]},"746":{"position":[[17155,22]]}}}],["relation\":\"device_renam",{"_index":2182,"t":{"692":{"position":[[16278,28]]},"698":{"position":[[8868,28]]}}}],["relation\":\"editor",{"_index":1497,"t":{"371":{"position":[[6266,20]]},"385":{"position":[[4971,20]]},"467":{"position":[[4876,20]]},"523":{"position":[[5623,20]]},"648":{"position":[[16481,20],[16558,20]]}}}],["relation\":\"employe",{"_index":1189,"t":{"213":{"position":[[4850,22]]}}}],["relation\":\"guest",{"_index":2304,"t":{"718":{"position":[[34962,19]]}}}],["relation\":\"it_admin",{"_index":2198,"t":{"694":{"position":[[9005,22],[9152,22]]},"696":{"position":[[8220,22],[15159,22],[15246,22]]}}}],["relation\":\"legacy_admin",{"_index":2283,"t":{"718":{"position":[[7147,26]]}}}],["relation\":\"live_video_view",{"_index":2173,"t":{"692":{"position":[[5297,31],[16120,31]]},"698":{"position":[[8708,31]]}}}],["relation\":\"memb",{"_index":1227,"t":{"221":{"position":[[11412,20]]},"230":{"position":[[5109,20]]},"521":{"position":[[4897,20]]},"718":{"position":[[17579,20],[35089,20]]},"767":{"position":[[23700,20],[23824,20],[23962,20]]},"788":{"position":[[8287,20]]},"790":{"position":[[5230,20],[10894,20]]},"792":{"position":[[8225,20]]},"811":{"position":[[8648,20],[8716,20],[8787,20]]}}}],["relation\":\"own",{"_index":1823,"t":{"505":{"position":[[5935,19]]},"541":{"position":[[5287,19],[5348,19]]},"547":{"position":[[4831,19]]},"660":{"position":[[9625,19]]},"672":{"position":[[9164,19]]},"792":{"position":[[8314,19]]},"809":{"position":[[16751,19]]},"815":{"position":[[9462,19]]}}}],["relation\":\"par",{"_index":1715,"t":{"429":{"position":[[3564,20]]},"469":{"position":[[5281,20]]},"622":{"position":[[5709,20]]},"813":{"position":[[7888,20]]}}}],["relation\":\"parent_workspac",{"_index":2325,"t":{"722":{"position":[[12934,30],[13028,30],[13133,30]]}}}],["relation\":\"partn",{"_index":2119,"t":{"660":{"position":[[9739,21]]},"672":{"position":[[9278,21]]}}}],["relation\":\"project_manag",{"_index":2112,"t":{"660":{"position":[[8962,29],[9098,29],[9234,29],[9370,29],[9506,29]]},"672":{"position":[[8501,29],[8637,29],[8773,29],[8909,29],[9045,29]]}}}],["relation\":\"read",{"_index":1244,"t":{"247":{"position":[[4848,20]]},"786":{"position":[[6620,20]]}}}],["relation\":\"recorded_video_view",{"_index":2178,"t":{"692":{"position":[[10273,35],[16197,35]]},"698":{"position":[[8786,35]]}}}],["relation\":\"repo_admin",{"_index":1872,"t":{"543":{"position":[[4989,24]]},"792":{"position":[[20468,24]]}}}],["relation\":\"security_guard",{"_index":2197,"t":{"694":{"position":[[8931,28],[9076,28]]},"696":{"position":[[8133,28],[14967,28],[15066,28]]}}}],["relation\":\"subscrib",{"_index":2563,"t":{"767":{"position":[[16836,24],[16990,24],[17144,24]]}}}],["relation\":\"subscriber_memb",{"_index":2039,"t":{"630":{"position":[[5930,31]]}}}],["relation\":\"us",{"_index":2454,"t":{"742":{"position":[[23044,18],[23171,18]]},"744":{"position":[[7067,18],[7221,18]]}}}],["relation\":\"user_in_context",{"_index":2138,"t":{"668":{"position":[[9899,29]]},"670":{"position":[[6373,29]]}}}],["relation\":\"view",{"_index":1346,"t":{"288":{"position":[[4909,20],[9820,20],[16019,20],[16196,20]]},"371":{"position":[[6441,20]]},"485":{"position":[[5319,18]]},"505":{"position":[[5828,20]]},"722":{"position":[[18912,20]]},"811":{"position":[[8925,20]]},"813":{"position":[[7733,20]]},"815":{"position":[[9781,20]]}}}],["relation\":\"writ",{"_index":2070,"t":{"646":{"position":[[5197,20]]},"648":{"position":[[11026,20],[11103,20]]},"722":{"position":[[24922,20],[24996,20],[30523,20],[30608,20],[35838,20],[40901,20]]},"786":{"position":[[16719,20]]}}}],["relation'",{"_index":1965,"t":{"601":{"position":[[136,10]]}}}],["relation:'read",{"_index":1914,"t":{"571":{"position":[[1406,18]]}}}],["relation:'writ",{"_index":1885,"t":{"569":{"position":[[1203,18],[12174,18]]}}}],["relation=\"access",{"_index":2044,"t":{"632":{"position":[[4218,18]]},"634":{"position":[[9591,18]]},"769":{"position":[[4396,18],[11719,18],[17095,18],[26840,18],[34467,18],[43454,18]]}}}],["relation=\"account",{"_index":2376,"t":{"734":{"position":[[9020,19]]},"746":{"position":[[14044,19]]}}}],["relation=\"account_manag",{"_index":2368,"t":{"734":{"position":[[8532,27]]},"740":{"position":[[15035,27]]},"746":{"position":[[13556,27]]}}}],["relation=\"admin",{"_index":1853,"t":{"537":{"position":[[4538,17],[4604,17]]},"545":{"position":[[4147,17],[9093,17]]},"547":{"position":[[9085,17]]},"788":{"position":[[7457,17],[12929,17]]},"790":{"position":[[15124,17]]},"792":{"position":[[13114,17]]}}}],["relation=\"approved_ip_address_rang",{"_index":2439,"t":{"742":{"position":[[15733,37]]},"746":{"position":[[15327,37]]}}}],["relation=\"approved_timeslot",{"_index":2436,"t":{"742":{"position":[[15381,29],[15539,29]]},"746":{"position":[[14186,29],[14343,29],[14502,29],[14661,29],[14819,29],[14976,29],[15133,29]]}}}],["relation=\"assigne",{"_index":1474,"t":{"369":{"position":[[4928,20],[5050,20],[10266,20]]}}}],["relation=\"associated_plan",{"_index":2036,"t":{"630":{"position":[[5109,27]]},"634":{"position":[[4462,27]]},"767":{"position":[[7224,27],[7369,27],[7527,27],[7687,27],[7857,27],[8030,27],[44380,27]]}}}],["relation=\"block",{"_index":1398,"t":{"318":{"position":[[4692,19]]}}}],["relation=\"booking_add",{"_index":1828,"t":{"505":{"position":[[15626,25],[25781,25]]}}}],["relation=\"booking_view",{"_index":1824,"t":{"505":{"position":[[10211,26],[20740,26]]}}}],["relation=\"branch",{"_index":2374,"t":{"734":{"position":[[8865,18]]},"746":{"position":[[13889,18]]}}}],["relation=\"can_delet",{"_index":1745,"t":{"449":{"position":[[4315,22],[9529,22]]},"666":{"position":[[3222,22],[7038,22],[10854,22]]}}}],["relation=\"can_edit",{"_index":2061,"t":{"644":{"position":[[10011,20]]}}}],["relation=\"can_view",{"_index":2123,"t":{"666":{"position":[[1325,20],[5133,20],[8946,20]]},"668":{"position":[[3906,20],[11156,20]]},"670":{"position":[[8161,20],[10989,20]]},"740":{"position":[[4519,20],[9646,20],[19989,20]]},"742":{"position":[[8617,20],[27528,20]]},"744":{"position":[[12614,20],[19073,20]]}}}],["relation=\"can_writ",{"_index":1740,"t":{"445":{"position":[[4352,21],[9399,21]]},"644":{"position":[[4977,21]]},"646":{"position":[[9490,21]]},"648":{"position":[[20931,21]]}}}],["relation=\"channels_admin",{"_index":2298,"t":{"718":{"position":[[33683,26]]}}}],["relation=\"comment",{"_index":2691,"t":{"809":{"position":[[5956,21],[10952,21]]},"815":{"position":[[8399,21],[24357,21]]}}}],["relation=\"custom",{"_index":2371,"t":{"734":{"position":[[8681,20]]},"746":{"position":[[13705,20]]}}}],["relation=\"device_renam",{"_index":2180,"t":{"692":{"position":[[15310,26],[25960,26]]},"698":{"position":[[7894,26]]}}}],["relation=\"editor",{"_index":1388,"t":{"312":{"position":[[4343,18],[9369,18]]},"318":{"position":[[9946,18],[15181,18]]},"371":{"position":[[5214,18]]},"373":{"position":[[4178,18]]},"385":{"position":[[4291,18]]},"387":{"position":[[4296,18]]},"467":{"position":[[4224,18]]},"471":{"position":[[4369,18]]},"523":{"position":[[4867,18]]},"525":{"position":[[4437,18]]},"648":{"position":[[15665,18],[15745,18],[26007,18]]}}}],["relation=\"employe",{"_index":1186,"t":{"213":{"position":[[4194,20]]}}}],["relation=\"guest",{"_index":2300,"t":{"718":{"position":[[33820,17]]}}}],["relation=\"it_admin",{"_index":2194,"t":{"694":{"position":[[7922,20],[8075,20]]},"696":{"position":[[7373,20],[13913,20],[14003,20]]}}}],["relation=\"legacy_admin",{"_index":2279,"t":{"718":{"position":[[6414,24],[11466,24],[27032,24],[39419,24]]}}}],["relation=\"live_video_view",{"_index":2170,"t":{"692":{"position":[[4629,29],[15146,29],[20848,29]]},"694":{"position":[[13471,29]]},"696":{"position":[[19714,29]]},"698":{"position":[[7728,29],[13442,29]]}}}],["relation=\"memb",{"_index":1224,"t":{"221":{"position":[[10721,18]]},"230":{"position":[[4455,18]]},"521":{"position":[[4241,18]]},"718":{"position":[[16846,18],[21855,18],[33949,18]]},"720":{"position":[[4233,18],[10930,18]]},"767":{"position":[[22568,18],[22694,18],[22834,18],[29092,18],[34274,18]]},"788":{"position":[[7281,18]]},"790":{"position":[[4512,18],[10165,18]]},"792":{"position":[[7381,18]]},"811":{"position":[[7438,18],[7509,18],[7583,18]]}}}],["relation=\"own",{"_index":1819,"t":{"505":{"position":[[5079,17]]},"541":{"position":[[4531,17],[4595,17]]},"547":{"position":[[4193,17]]},"660":{"position":[[7814,17]]},"672":{"position":[[7353,17]]},"792":{"position":[[7473,17]]},"809":{"position":[[16083,17],[21009,17],[32685,17]]},"815":{"position":[[8231,17],[14070,17]]}}}],["relation=\"par",{"_index":1711,"t":{"429":{"position":[[3004,18]]},"469":{"position":[[4531,18]]},"622":{"position":[[4922,18]]},"624":{"position":[[4318,18]]},"813":{"position":[[6926,18]]}}}],["relation=\"parent_workspac",{"_index":2319,"t":{"722":{"position":[[11806,28],[11903,28],[12011,28]]}}}],["relation=\"partn",{"_index":2110,"t":{"660":{"position":[[7930,19]]},"672":{"position":[[7469,19]]}}}],["relation=\"project_manag",{"_index":2103,"t":{"660":{"position":[[7141,27],[7279,27],[7417,27],[7555,27],[7693,27]]},"672":{"position":[[6680,27],[6818,27],[6956,27],[7094,27],[7232,27]]}}}],["relation=\"read",{"_index":858,"t":{"114":{"position":[[1161,18]]},"126":{"position":[[1248,18]]},"192":{"position":[[1159,18]]},"194":{"position":[[1319,18]]},"215":{"position":[[4200,18],[9372,18]]},"221":{"position":[[5488,18],[15908,18],[20938,18]]},"232":{"position":[[4246,18]]},"245":{"position":[[4470,18]]},"247":{"position":[[4202,18],[9245,18]]},"345":{"position":[[5311,18]]},"562":{"position":[[4334,18]]},"571":{"position":[[4561,18]]},"583":{"position":[[4726,18],[4841,18]]},"786":{"position":[[5950,18],[10925,18],[26028,18],[38220,18]]}}}],["relation=\"recorded_video_view",{"_index":2176,"t":{"692":{"position":[[9597,33],[15226,33]]},"698":{"position":[[7809,33]]}}}],["relation=\"repo_admin",{"_index":1868,"t":{"543":{"position":[[4335,22]]},"792":{"position":[[19754,22]]}}}],["relation=\"security_guard",{"_index":2193,"t":{"694":{"position":[[7845,26],[7996,26]]},"696":{"position":[[7283,26],[13715,26],[13817,26]]}}}],["relation=\"subscrib",{"_index":2555,"t":{"767":{"position":[[15619,22],[15775,22],[15931,22],[39328,22]]}}}],["relation=\"subscriber_memb",{"_index":2033,"t":{"630":{"position":[[4956,29]]},"634":{"position":[[14650,29]]}}}],["relation=\"us",{"_index":2449,"t":{"742":{"position":[[22115,16],[22244,16]]},"744":{"position":[[6082,16],[6238,16],[12741,16],[12825,16],[19200,16],[19284,16]]}}}],["relation=\"user_in_context",{"_index":2136,"t":{"668":{"position":[[9165,27]]},"670":{"position":[[5610,27],[8284,27],[11112,27]]}}}],["relation=\"view",{"_index":418,"t":{"16":{"position":[[16365,18],[21977,18],[27811,18]]},"288":{"position":[[4271,18],[9180,18],[15080,18],[15231,18]]},"338":{"position":[[4396,18]]},"371":{"position":[[5391,18]]},"387":{"position":[[9549,18]]},"485":{"position":[[4607,16]]},"487":{"position":[[4489,16]]},"505":{"position":[[4970,18]]},"605":{"position":[[5466,18],[11059,18],[17313,18],[23556,18],[29217,18]]},"607":{"position":[[5314,18],[10995,18],[16748,18],[22491,18]]},"722":{"position":[[18102,18],[45342,18],[50479,18]]},"811":{"position":[[7723,18],[13403,18]]},"813":{"position":[[6769,18],[12540,18]]},"815":{"position":[[8554,18],[34656,18]]}}}],["relation=\"writ",{"_index":1900,"t":{"569":{"position":[[4712,18],[15635,18]]},"646":{"position":[[4484,18]]},"648":{"position":[[10212,18],[10292,18]]},"722":{"position":[[24011,18],[24088,18],[29675,18],[29763,18],[35110,18],[40207,18]]},"786":{"position":[[16049,18],[20981,18],[33176,18]]},"809":{"position":[[26052,18],[37725,18]]},"815":{"position":[[19245,18],[29550,18]]}}}],["relation=r",{"_index":307,"t":{"16":{"position":[[9913,11]]},"40":{"position":[[90,11]]},"769":{"position":[[6148,11]]}}}],["relationship",{"_index":143,"t":{"16":{"position":[[74,12],[202,12],[2800,12],[2854,12],[3571,12],[3639,12],[4102,12],[4129,12],[4423,12],[5139,12],[5343,12],[5663,12],[5737,12],[5848,13],[5961,13],[6073,13],[6463,13],[7447,12],[7733,12],[8052,12],[8298,12],[8659,12],[8730,12],[8753,12],[8846,12],[9149,12],[9207,12],[9306,12],[9486,14],[9503,12],[9617,12],[9675,12],[9725,13],[9807,15],[9832,12],[9885,12],[10016,12],[10047,12],[10105,12],[10222,12],[10320,12],[10417,12],[10475,12],[11121,12],[11224,12],[11259,12],[11816,12],[11961,12],[12063,12],[12169,12],[17420,12],[17670,12],[17728,12],[22943,12],[23183,12],[23485,12],[28775,12],[29008,12],[29099,12],[29669,12],[29991,12]]},"26":{"position":[[85,12],[112,12]]},"30":{"position":[[114,12]]},"32":{"position":[[76,12]]},"36":{"position":[[2,12]]},"38":{"position":[[2,12]]},"40":{"position":[[9,12],[62,12],[193,12],[224,12],[282,12],[399,12]]},"42":{"position":[[100,12]]},"44":{"position":[[143,12]]},"48":{"position":[[154,12]]},"50":{"position":[[62,13]]},"54":{"position":[[3867,14]]},"56":{"position":[[92,13],[729,12],[887,13],[1523,12],[1627,12],[1918,12],[2562,14]]},"58":{"position":[[985,12],[1042,12],[1268,13],[1415,12],[1821,12],[1887,12],[2168,14]]},"60":{"position":[[25,13],[1990,12],[2428,13],[2673,13]]},"62":{"position":[[88,12],[656,12],[1557,14]]},"64":{"position":[[103,12],[1595,12],[1758,12]]},"66":{"position":[[102,12],[718,12],[1608,12],[1659,12]]},"68":{"position":[[2338,12]]},"74":{"position":[[229,12],[478,12]]},"82":{"position":[[205,13]]},"84":{"position":[[151,12]]},"90":{"position":[[249,12],[613,12]]},"98":{"position":[[781,12],[2706,12]]},"106":{"position":[[102,12]]},"108":{"position":[[258,12],[581,12],[904,12],[1227,12],[1522,12]]},"110":{"position":[[52,12]]},"114":{"position":[[36,12],[1749,12],[1786,12]]},"118":{"position":[[135,12]]},"120":{"position":[[258,12],[581,12],[904,12],[1227,12],[1522,12]]},"122":{"position":[[84,12]]},"126":{"position":[[48,12],[1841,12]]},"146":{"position":[[137,12]]},"178":{"position":[[76,12],[133,12]]},"184":{"position":[[43,12]]},"188":{"position":[[51,12]]},"192":{"position":[[11,12]]},"194":{"position":[[10,12],[115,12]]},"200":{"position":[[25,12],[129,12],[255,12],[349,13],[384,12],[536,12],[633,12]]},"202":{"position":[[111,12]]},"204":{"position":[[1319,12],[1469,13],[1511,12],[1561,12]]},"208":{"position":[[241,12],[391,13],[433,12],[483,12]]},"211":{"position":[[66,12]]},"215":{"position":[[5228,12]]},"219":{"position":[[655,12]]},"221":{"position":[[1045,12],[1270,12],[22331,12],[22481,13],[22523,12],[22573,12]]},"227":{"position":[[241,12],[391,13],[433,12],[483,12]]},"230":{"position":[[54,12]]},"232":{"position":[[15,12]]},"236":{"position":[[115,12],[173,12],[337,12],[390,13]]},"238":{"position":[[710,12],[1038,12],[1188,13],[1230,12],[1280,12]]},"240":{"position":[[67,12]]},"242":{"position":[[241,12],[391,13],[433,12],[483,12]]},"245":{"position":[[55,12],[264,12],[358,13]]},"247":{"position":[[58,12],[4985,12]]},"249":{"position":[[238,12],[284,12]]},"251":{"position":[[77,12]]},"253":{"position":[[257,12],[579,12],[1447,12]]},"277":{"position":[[52,12],[127,12]]},"279":{"position":[[336,13],[1215,12],[1638,12],[1788,13],[1830,12],[1880,12]]},"281":{"position":[[67,12]]},"285":{"position":[[241,12],[391,13],[433,12],[483,12]]},"292":{"position":[[70,12],[123,12]]},"296":{"position":[[534,14]]},"306":{"position":[[1088,12],[1948,12],[2098,13],[2140,12],[2190,12]]},"310":{"position":[[241,12],[391,13],[433,12],[483,12]]},"312":{"position":[[39,12]]},"314":{"position":[[930,12]]},"316":{"position":[[100,12]]},"318":{"position":[[45,12],[332,12],[5628,12]]},"324":{"position":[[7,13],[36,13],[141,13],[177,13],[247,13],[420,13]]},"326":{"position":[[64,14],[471,12],[513,12]]},"328":{"position":[[885,12],[1451,12],[1601,13],[1643,12],[1693,12]]},"332":{"position":[[241,12],[391,13],[433,12],[483,12]]},"334":{"position":[[253,12]]},"336":{"position":[[24,12],[72,13],[870,12],[931,12]]},"338":{"position":[[15,12],[5365,12]]},"340":{"position":[[56,13]]},"345":{"position":[[1016,12],[1130,13]]},"347":{"position":[[735,12]]},"349":{"position":[[187,12],[249,13],[289,12],[530,13],[750,12],[805,13],[1324,13]]},"355":{"position":[[1227,14],[1273,13],[1338,13]]},"361":{"position":[[31,13],[96,13]]},"365":{"position":[[1174,12],[1228,12]]},"367":{"position":[[1163,12]]},"369":{"position":[[183,12]]},"375":{"position":[[130,12],[223,13],[279,13]]},"377":{"position":[[143,12],[346,12],[399,13]]},"379":{"position":[[1030,12],[1180,13],[1222,12],[1272,12]]},"381":{"position":[[241,12],[391,13],[433,12],[483,12]]},"383":{"position":[[125,12],[151,12]]},"385":{"position":[[13,12]]},"387":{"position":[[10,12],[70,12],[5363,12],[10530,12]]},"391":{"position":[[11,12]]},"401":{"position":[[137,12]]},"403":{"position":[[1550,13],[1758,13],[1863,14],[1942,12],[2428,12],[2721,13],[3637,12],[3700,12],[3780,13],[4321,12],[4384,12],[4466,13],[4930,13],[4946,12],[5878,13],[5965,12],[6028,12],[6354,12],[6835,14],[6914,13],[6940,13],[7462,12]]},"405":{"position":[[377,12],[442,12],[699,12],[789,12],[1230,12],[1255,12],[1468,13],[1541,12],[1583,12],[2395,12],[2479,12]]},"407":{"position":[[81,12]]},"423":{"position":[[421,12],[1168,13],[1239,12]]},"425":{"position":[[110,12],[336,12],[3095,12]]},"437":{"position":[[1533,12],[2471,14],[2937,12],[3087,13],[3129,12],[3179,12],[3350,12]]},"439":{"position":[[59,14]]},"443":{"position":[[241,12],[391,13],[433,12],[483,12],[654,12]]},"445":{"position":[[39,12]]},"453":{"position":[[45,13],[91,13],[136,12],[291,14],[436,12],[597,13]]},"455":{"position":[[994,12],[1322,12],[1472,13],[1514,12],[1564,12]]},"457":{"position":[[67,12]]},"459":{"position":[[241,12],[391,13],[433,12],[483,12]]},"461":{"position":[[282,12],[571,12],[652,12]]},"463":{"position":[[149,12],[189,12],[276,13]]},"467":{"position":[[56,12],[5092,12]]},"471":{"position":[[93,12],[5344,12]]},"473":{"position":[[120,13],[176,13]]},"475":{"position":[[251,12]]},"477":{"position":[[763,12],[1091,12],[1241,13],[1283,12],[1333,12],[1527,12],[1692,12]]},"479":{"position":[[67,12]]},"481":{"position":[[241,12],[391,13],[433,12],[483,12],[677,12]]},"485":{"position":[[31,12],[232,12],[5704,12],[6053,12]]},"487":{"position":[[15,12],[154,12],[232,12]]},"491":{"position":[[119,12]]},"493":{"position":[[853,12],[1181,12],[1331,13],[1373,12],[1423,12],[1526,13],[1586,12],[1674,12],[1737,13],[1840,13]]},"495":{"position":[[67,12]]},"497":{"position":[[241,12],[391,13],[433,12],[483,12],[586,13],[646,12],[734,12],[797,13],[900,13]]},"499":{"position":[[497,13]]},"503":{"position":[[189,12],[1521,12]]},"505":{"position":[[115,12],[231,12],[27205,12]]},"507":{"position":[[111,13],[167,13]]},"509":{"position":[[129,12]]},"511":{"position":[[741,12],[1069,12],[1219,13],[1261,12],[1311,12]]},"513":{"position":[[67,12]]},"515":{"position":[[241,12],[391,13],[433,12],[483,12]]},"521":{"position":[[64,12]]},"523":{"position":[[360,12]]},"525":{"position":[[20,12],[92,12],[5601,12]]},"529":{"position":[[89,12],[164,12]]},"531":{"position":[[694,12],[1022,12],[1172,13],[1214,12],[1264,12]]},"533":{"position":[[67,12]]},"535":{"position":[[241,12],[391,13],[433,12],[483,12]]},"537":{"position":[[179,12],[5514,12]]},"541":{"position":[[104,12]]},"549":{"position":[[54,13],[142,13],[223,13],[372,14]]},"553":{"position":[[317,12],[917,12],[1165,12],[1493,12],[1643,13],[1685,12],[1735,12]]},"555":{"position":[[67,12]]},"557":{"position":[[241,12],[391,13],[433,12],[483,12]]},"560":{"position":[[77,12],[144,13],[181,12]]},"562":{"position":[[86,12],[195,12],[5309,12]]},"564":{"position":[[59,12],[154,12],[222,12],[266,12]]},"567":{"position":[[49,12]]},"569":{"position":[[53,12],[414,12],[451,12],[5931,12],[11353,12]]},"571":{"position":[[45,13],[408,12],[505,13],[632,14],[5468,12]]},"574":{"position":[[85,12]]},"576":{"position":[[75,12],[165,12]]},"578":{"position":[[146,12],[247,12]]},"581":{"position":[[137,12]]},"583":{"position":[[72,13]]},"587":{"position":[[67,12],[118,12],[175,12],[276,12],[363,13]]},"589":{"position":[[71,14]]},"591":{"position":[[40,13],[145,13]]},"593":{"position":[[282,12],[610,12],[760,13],[802,12],[852,12],[955,12],[1062,13]]},"595":{"position":[[67,12]]},"597":{"position":[[241,12],[391,13],[433,12],[483,12],[586,12],[693,13]]},"599":{"position":[[7,13],[25,13],[58,12],[119,12],[180,13],[203,12],[228,12]]},"601":{"position":[[7,13],[95,12],[213,12],[1305,13],[1350,12],[1466,14]]},"603":{"position":[[54,13]]},"605":{"position":[[1064,12],[6411,12],[6464,12],[6508,13],[12004,12],[12074,12],[12118,13],[12238,12],[12346,13],[12394,13],[12468,12],[12791,12],[12957,12],[18308,12],[18389,12],[18433,13],[18570,12],[18681,12],[18720,12],[24500,12],[24619,13],[24679,12],[24736,14],[24818,12],[30351,12],[30421,12]]},"607":{"position":[[68,13],[717,12],[908,12],[6274,12],[6327,12],[6371,13],[6507,12],[11964,12],[12021,12],[12065,13],[12218,12],[17747,12],[17828,12],[17872,13],[17978,13],[18031,12],[18085,12]]},"609":{"position":[[53,13],[250,12],[506,12]]},"611":{"position":[[232,13],[361,12],[408,12]]},"613":{"position":[[1266,12],[1416,13],[1458,12],[1508,12]]},"617":{"position":[[241,12],[391,13],[433,12],[483,12]]},"622":{"position":[[59,12],[149,12],[264,12]]},"624":{"position":[[10,12],[70,12],[5712,12]]},"628":{"position":[[1214,12],[1239,12],[1311,12],[1371,12],[1565,12],[1655,12]]},"630":{"position":[[15,13],[63,12]]},"632":{"position":[[45,12],[5231,13]]},"636":{"position":[[62,13],[205,13],[255,14]]},"638":{"position":[[275,12]]},"640":{"position":[[314,12],[464,13],[506,12],[556,12],[727,12]]},"642":{"position":[[586,12]]},"644":{"position":[[127,12]]},"646":{"position":[[67,12],[160,13]]},"648":{"position":[[27,12],[128,12],[5794,13],[11235,12],[21864,12]]},"650":{"position":[[30,12]]},"652":{"position":[[63,12],[151,12]]},"658":{"position":[[115,12],[312,12],[343,12],[628,14],[674,13],[739,13]]},"660":{"position":[[3137,12]]},"664":{"position":[[106,13]]},"666":{"position":[[33,12]]},"672":{"position":[[45,12]]},"674":{"position":[[144,13]]},"678":{"position":[[343,12],[432,14],[671,14],[1094,13]]},"688":{"position":[[44,12]]},"692":{"position":[[365,12],[427,12],[10417,12],[16423,12],[16708,12],[21826,12],[26897,13]]},"694":{"position":[[415,12],[2737,12],[14421,13]]},"696":{"position":[[2661,12],[2779,12],[8483,12],[15414,12]]},"698":{"position":[[250,12],[2234,12],[2331,12],[2664,12],[2996,12],[9248,12],[14392,13]]},"704":{"position":[[139,13],[344,12],[567,13]]},"706":{"position":[[343,12],[432,14]]},"716":{"position":[[1870,12],[1940,12]]},"718":{"position":[[2039,12],[28037,13]]},"720":{"position":[[5561,12],[11889,14]]},"722":{"position":[[6600,12],[6648,12],[13439,12],[41076,12]]},"726":{"position":[[16,12],[263,12]]},"732":{"position":[[115,12],[313,12],[344,12],[630,14],[676,13],[741,13]]},"734":{"position":[[2571,12]]},"738":{"position":[[104,13]]},"740":{"position":[[33,12]]},"742":{"position":[[2436,12],[9529,12],[17265,12]]},"744":{"position":[[948,12]]},"746":{"position":[[45,12]]},"750":{"position":[[87,13],[263,13]]},"754":{"position":[[287,14],[333,13],[398,13],[628,14]]},"765":{"position":[[136,12]]},"767":{"position":[[20,12],[59,13],[24156,14],[24460,12],[24878,12],[30026,12]]},"769":{"position":[[6019,12],[6044,13],[6067,12],[6120,12],[6251,12],[6282,12],[6326,12],[6441,12],[12945,13],[18404,12],[18457,12],[18548,12],[18650,12],[19958,12],[19977,12],[20079,12],[20456,12],[20891,13],[21158,13],[35391,13],[35470,12],[35702,12],[35841,13],[35885,12],[37015,12],[37264,12]]},"771":{"position":[[250,13],[297,12],[349,12],[475,12],[536,12],[625,13]]},"773":{"position":[[232,13],[450,12],[580,13],[935,12],[1033,12],[1085,12]]},"775":{"position":[[281,14],[456,14],[502,13],[567,13]]},"786":{"position":[[1799,12],[28767,12]]},"788":{"position":[[2317,12],[8581,12]]},"790":{"position":[[269,12]]},"792":{"position":[[14444,12],[14815,12],[14994,12],[15187,12],[15412,12],[15498,12]]},"796":{"position":[[114,13],[340,12],[470,13],[802,12],[882,12],[1115,12],[1167,12]]},"798":{"position":[[281,14],[456,14],[502,13],[567,13],[777,12]]},"809":{"position":[[1796,12]]},"811":{"position":[[9046,12]]},"813":{"position":[[1908,12],[8174,12],[8256,12],[13883,12],[14314,12],[14495,12]]},"815":{"position":[[2779,12]]}}}],["releas",{"_index":1043,"t":{"152":{"position":[[8,8],[1112,7],[1194,8]]}}}],["relev",{"_index":154,"t":{"16":{"position":[[330,8]]}}}],["reli",{"_index":2161,"t":{"688":{"position":[[100,6]]},"716":{"position":[[368,6]]}}}],["reliabl",{"_index":21,"t":{"4":{"position":[[187,11]]}}}],["remain",{"_index":1447,"t":{"349":{"position":[[1495,9]]},"722":{"position":[[1522,7],[6626,7]]},"726":{"position":[[146,7]]}}}],["remedi",{"_index":2238,"t":{"698":{"position":[[410,6]]}}}],["rememb",{"_index":1587,"t":{"403":{"position":[[939,8]]},"405":{"position":[[178,8]]},"696":{"position":[[2691,8]]}}}],["remot",{"_index":2395,"t":{"736":{"position":[[167,8],[289,8]]}}}],["remov",{"_index":1198,"t":{"219":{"position":[[88,8]]},"247":{"position":[[4966,7]]},"251":{"position":[[229,7]]},"288":{"position":[[9922,8]]},"375":{"position":[[112,6]]},"401":{"position":[[2632,8]]},"415":{"position":[[464,8]]},"419":{"position":[[2196,7]]},"427":{"position":[[238,6]]},"431":{"position":[[1038,7],[1152,7],[1225,7]]},"445":{"position":[[10506,6]]},"453":{"position":[[509,6]]},"491":{"position":[[1622,6]]},"527":{"position":[[117,6]]},"601":{"position":[[193,8]]},"607":{"position":[[747,7]]},"609":{"position":[[232,6],[486,8]]},"634":{"position":[[768,6],[1827,6],[3211,6],[4393,6],[5137,6]]},"648":{"position":[[11220,6]]},"650":{"position":[[10,6],[86,6]]},"670":{"position":[[1034,6]]},"698":{"position":[[423,6],[2274,8],[9282,7]]},"744":{"position":[[1763,6],[1937,6],[2995,6],[3225,6],[4608,6],[4792,6],[5973,6],[6153,6],[6954,6],[7132,6]]},"769":{"position":[[21024,7],[21229,6],[35805,6],[35867,6]]},"771":{"position":[[642,8]]}}}],["renam",{"_index":1807,"t":{"503":{"position":[[566,7]]},"678":{"position":[[907,7]]},"684":{"position":[[158,6]]},"690":{"position":[[155,6],[467,6]]},"692":{"position":[[221,6],[16533,6],[16664,6]]},"694":{"position":[[1053,6],[2694,6]]},"712":{"position":[[677,8],[971,6]]}}}],["rename/delet",{"_index":1700,"t":{"427":{"position":[[176,13],[205,13]]}}}],["repeat",{"_index":2293,"t":{"718":{"position":[[28003,6]]},"722":{"position":[[51455,6]]}}}],["replac",{"_index":2610,"t":{"769":{"position":[[21389,7]]}}}],["repli",{"_index":67,"t":{"6":{"position":[[371,5]]},"16":{"position":[[17282,6],[22894,6],[28688,6]]},"94":{"position":[[715,6]]},"96":{"position":[[641,6],[1001,6]]},"98":{"position":[[366,6],[1083,6],[1871,6]]},"215":{"position":[[5105,6],[10282,6]]},"221":{"position":[[6380,6],[16813,6],[21848,6]]},"232":{"position":[[5153,6]]},"245":{"position":[[5335,6]]},"247":{"position":[[10112,6]]},"312":{"position":[[5251,6],[10274,6]]},"318":{"position":[[10853,6],[16089,6]]},"338":{"position":[[5334,6]]},"345":{"position":[[6208,6]]},"369":{"position":[[11183,6]]},"373":{"position":[[5095,6]]},"387":{"position":[[5234,6],[10489,6]]},"445":{"position":[[5272,6],[10316,6]]},"449":{"position":[[5239,6],[10452,6]]},"471":{"position":[[5307,6]]},"487":{"position":[[5411,6]]},"505":{"position":[[11121,6],[16534,6],[21656,6],[26693,6]]},"525":{"position":[[5381,6]]},"545":{"position":[[5007,6],[9953,6]]},"547":{"position":[[9947,6]]},"562":{"position":[[5236,6]]},"569":{"position":[[5685,6],[11118,6],[16575,6]]},"571":{"position":[[5298,6]]},"576":{"position":[[5314,6],[10648,6]]},"583":{"position":[[5977,6]]},"605":{"position":[[6371,6],[11964,6],[18227,6],[24461,6],[30125,6]]},"607":{"position":[[6221,6],[11911,6],[17658,6],[23402,6]]},"624":{"position":[[5262,6]]},"632":{"position":[[5135,6]]},"634":{"position":[[10510,6],[15583,6]]},"644":{"position":[[5890,6],[10920,6]]},"646":{"position":[[10412,6]]},"648":{"position":[[5371,6],[21844,6],[26910,6]]},"666":{"position":[[2082,6],[3987,6],[5890,6],[7805,6],[9705,6],[11621,6]]},"668":{"position":[[4665,6],[11913,6]]},"670":{"position":[[9306,6],[12136,6]]},"692":{"position":[[21761,6],[26863,6]]},"694":{"position":[[14393,6]]},"696":{"position":[[20618,6]]},"698":{"position":[[14360,6]]},"718":{"position":[[12404,6],[22787,6],[27990,6],[40357,6]]},"720":{"position":[[5149,6],[11844,6]]},"722":{"position":[[46244,6],[51443,6]]},"740":{"position":[[5416,6],[10555,6],[20888,6]]},"742":{"position":[[9501,6],[28425,6]]},"744":{"position":[[14111,6],[20572,6]]},"767":{"position":[[30001,6],[35185,6],[40244,6],[45309,6]]},"769":{"position":[[5299,6],[12614,6],[18017,6],[27760,6],[35360,6],[44347,6]]},"786":{"position":[[11842,6],[21898,6],[26947,6],[26970,5],[34093,6],[39137,6]]},"788":{"position":[[13851,6]]},"790":{"position":[[16040,6]]},"792":{"position":[[14037,6]]},"809":{"position":[[11881,6],[21922,6],[26971,6],[26994,5],[33598,6],[38642,6]]},"811":{"position":[[14329,6]]},"813":{"position":[[13470,6]]},"815":{"position":[[15015,6],[20196,6],[25318,6],[30501,6],[35607,6]]}}}],["reply.code(401).send(`not",{"_index":800,"t":{"98":{"position":[[1493,25]]}}}],["reply.send(err",{"_index":744,"t":{"96":{"position":[[699,16]]},"98":{"position":[[637,16],[1554,16]]}}}],["repo",{"_index":257,"t":{"16":{"position":[[5519,4]]},"96":{"position":[[1913,5]]},"98":{"position":[[3123,5]]},"527":{"position":[[319,4]]},"529":{"position":[[306,5]]},"531":{"position":[[209,4],[291,4],[406,7]]},"537":{"position":[[78,5],[128,6],[5532,4],[5601,5]]},"539":{"position":[[116,4],[321,7],[1022,5],[1062,5]]},"541":{"position":[[78,5]]},"543":{"position":[[86,5],[128,5]]},"545":{"position":[[49,5]]},"775":{"position":[[654,4]]},"783":{"position":[[335,4],[380,5]]},"786":{"position":[[323,4],[531,7],[1287,4],[1403,7],[1582,6],[1693,4],[27265,4],[27517,7],[28446,4],[28504,7],[28808,6],[28891,4]]},"788":{"position":[[815,4],[1127,7]]},"792":{"position":[[652,4],[1265,4],[1586,7],[8696,4],[8731,4],[8956,4],[14485,6],[14567,4],[14634,6],[20674,4],[21292,7]]}}}],["repo'",{"_index":2631,"t":{"788":{"position":[[697,6]]}}}],["repo:1",{"_index":1848,"t":{"537":{"position":[[135,6],[936,10],[3404,8]]},"539":{"position":[[1297,7],[1330,7]]},"541":{"position":[[941,10],[3401,8]]},"545":{"position":[[878,9],[1857,9],[3044,8],[4917,9],[4946,8]]},"547":{"position":[[65,6],[837,9],[3129,8],[5000,7],[5813,9],[6793,9],[7981,8],[9857,9],[9886,8]]}}}],["repo:2",{"_index":1849,"t":{"537":{"position":[[146,7],[995,9],[3473,8]]},"541":{"position":[[998,9],[3468,8]]},"545":{"position":[[5824,9],[6803,9],[7990,8],[9863,9],[9892,8]]}}}],["repo:auth0/express_jwt",{"_index":295,"t":{"16":{"position":[[9049,23]]}}}],["repo:contoso/tool",{"_index":2622,"t":{"786":{"position":[[1759,20],[2547,23],[4871,22],[6787,22],[7615,23],[8608,23],[9809,22],[11724,23],[11767,22],[12646,23],[14970,22],[17671,23],[18664,23],[19865,22],[21780,23],[21823,22],[22715,23],[23709,23],[24911,22],[26829,23],[26872,22],[29866,23],[30859,23],[32060,22],[33975,23],[34018,22],[34910,23],[35903,23],[37104,22],[39019,23],[39062,22]]},"788":{"position":[[2272,20],[3295,23],[6143,22],[9612,23],[10607,23],[11810,22],[13733,23],[13776,22]]},"790":{"position":[[11813,23],[12806,23],[14007,22],[15922,23],[15965,22]]},"792":{"position":[[3744,23],[6302,22],[9791,23],[10788,23],[11993,22],[13919,23],[13962,22],[14846,20],[14905,23]]}}}],["repo_admin",{"_index":1751,"t":{"453":{"position":[[775,12]]},"539":{"position":[[155,10],[223,11],[513,12],[768,13],[829,13],[974,11],[1150,10],[1239,10]]},"543":{"position":[[204,10],[938,13],[3245,13]]},"783":{"position":[[312,11]]},"792":{"position":[[8837,10],[14195,10],[14384,12],[14757,12],[15128,13],[15268,10],[15372,11],[16267,13],[18634,13],[21162,11],[23135,13],[23272,13]]}}}],["repositori",{"_index":164,"t":{"16":{"position":[[590,10]]},"219":{"position":[[379,13]]},"340":{"position":[[228,10]]},"453":{"position":[[753,10],[846,12]]},"473":{"position":[[410,12]]},"507":{"position":[[343,10]]},"541":{"position":[[185,12]]},"773":{"position":[[391,10],[648,10],[684,11],[900,11],[1159,10],[1221,12]]},"775":{"position":[[717,12]]},"781":{"position":[[218,12],[419,12],[447,10],[523,12]]},"783":{"position":[[432,11]]},"786":{"position":[[45,13],[206,10],[1748,10],[6776,10],[11906,11]]},"790":{"position":[[5801,11]]},"792":{"position":[[127,14],[197,10],[517,10],[746,12],[1206,12],[2839,13],[8599,11],[14590,11]]},"809":{"position":[[6794,10]]}}}],["repository:auth0/express",{"_index":233,"t":{"16":{"position":[[4294,24],[4809,24]]}}}],["repres",{"_index":225,"t":{"16":{"position":[[4027,10],[4962,10],[9326,11],[29552,12],[29709,10]]},"26":{"position":[[10,10]]},"48":{"position":[[37,12],[194,10]]},"68":{"position":[[71,11]]},"198":{"position":[[302,9]]},"204":{"position":[[1426,10]]},"208":{"position":[[348,10]]},"221":{"position":[[1009,11],[22438,10]]},"227":{"position":[[348,10]]},"236":{"position":[[254,9],[360,9]]},"238":{"position":[[1145,10]]},"242":{"position":[[348,10]]},"279":{"position":[[1745,10]]},"285":{"position":[[348,10]]},"294":{"position":[[201,9]]},"306":{"position":[[185,10],[1059,11],[2055,10]]},"310":{"position":[[348,10]]},"326":{"position":[[41,9]]},"328":{"position":[[186,10],[856,11],[1558,10]]},"332":{"position":[[348,10]]},"343":{"position":[[10,10],[260,9],[410,11],[552,10],[636,10]]},"349":{"position":[[85,9]]},"367":{"position":[[74,9]]},"377":{"position":[[264,9],[369,9]]},"379":{"position":[[1137,10]]},"381":{"position":[[348,10]]},"385":{"position":[[109,11]]},"403":{"position":[[429,9],[3682,12],[4366,12],[6013,9],[7552,12]]},"405":{"position":[[1282,9]]},"437":{"position":[[206,10],[1504,11],[3044,10]]},"443":{"position":[[348,10]]},"455":{"position":[[1429,10]]},"459":{"position":[[348,10]]},"477":{"position":[[1198,10],[1486,12],[1550,9]]},"481":{"position":[[348,10],[636,12],[700,9]]},"493":{"position":[[1288,10]]},"497":{"position":[[348,10]]},"499":{"position":[[245,9]]},"503":{"position":[[141,9]]},"507":{"position":[[144,9]]},"511":{"position":[[1176,10]]},"515":{"position":[[348,10]]},"517":{"position":[[235,9]]},"523":{"position":[[3,9],[69,10],[195,9]]},"531":{"position":[[1129,10]]},"535":{"position":[[348,10]]},"541":{"position":[[35,12]]},"553":{"position":[[1600,10]]},"557":{"position":[[348,10]]},"574":{"position":[[130,11]]},"593":{"position":[[717,10]]},"597":{"position":[[348,10]]},"613":{"position":[[185,10],[1373,10]]},"617":{"position":[[348,10]]},"620":{"position":[[3,9]]},"640":{"position":[[421,10]]},"718":{"position":[[219,11],[438,9]]},"722":{"position":[[13386,9]]},"726":{"position":[[39,9]]},"765":{"position":[[159,9]]},"767":{"position":[[43,9]]},"781":{"position":[[29,11]]},"786":{"position":[[135,12],[151,9]]},"788":{"position":[[214,12]]},"790":{"position":[[16116,12]]},"792":{"position":[[412,12],[617,9]]},"794":{"position":[[219,9]]},"796":{"position":[[30,9]]},"804":{"position":[[35,11]]},"809":{"position":[[222,12],[238,9]]},"811":{"position":[[192,12]]},"813":{"position":[[265,12]]}}}],["represent",{"_index":488,"t":{"52":{"position":[[56,14]]},"767":{"position":[[24103,14]]}}}],["request",{"_index":319,"t":{"16":{"position":[[12135,7],[17310,9],[17328,7],[23030,9],[23055,7],[28926,8],[28988,8],[29212,8],[29261,8],[29457,7]]},"42":{"position":[[8,7]]},"44":{"position":[[15,7]]},"46":{"position":[[58,8],[120,8]]},"74":{"position":[[710,7],[758,7]]},"94":{"position":[[705,9]]},"96":{"position":[[631,9],[991,9]]},"98":{"position":[[356,9],[1073,9],[1861,9]]},"106":{"position":[[52,7]]},"118":{"position":[[59,7]]},"156":{"position":[[430,7]]},"172":{"position":[[1723,7]]},"200":{"position":[[568,8]]},"263":{"position":[[491,7]]},"288":{"position":[[10073,8],[10148,9]]},"290":{"position":[[47,7],[725,9]]},"312":{"position":[[223,9]]},"318":{"position":[[5806,7],[11039,7]]},"345":{"position":[[1185,7]]},"365":{"position":[[1050,8]]},"369":{"position":[[6141,9]]},"429":{"position":[[745,9],[784,7]]},"431":{"position":[[426,8]]},"445":{"position":[[223,9]]},"453":{"position":[[688,8]]},"493":{"position":[[1789,7],[1811,7]]},"497":{"position":[[849,7],[871,7]]},"605":{"position":[[1260,7],[6853,7],[13092,7],[19345,7],[25001,7]]},"607":{"position":[[1104,7],[6770,7],[12533,7],[18270,7]]},"654":{"position":[[360,8]]},"658":{"position":[[219,8],[496,8],[558,8]]},"668":{"position":[[10052,7]]},"670":{"position":[[686,7]]},"718":{"position":[[35245,7]]},"728":{"position":[[392,8]]},"732":{"position":[[220,8],[497,8],[560,8]]},"744":{"position":[[287,8],[708,8],[865,7],[7552,7]]},"758":{"position":[[397,10],[437,7],[514,8],[612,10]]},"760":{"position":[[419,8]]},"762":{"position":[[592,8],[737,8],[889,8]]},"767":{"position":[[1203,8],[1515,8],[3148,8],[3572,8],[5494,8],[5826,8],[7492,8],[7816,8],[9426,8],[9746,8]]},"769":{"position":[[38982,8],[39127,8],[39279,8]]}}}],["request.jwtverifi",{"_index":743,"t":{"96":{"position":[[662,20]]}}}],["request.method",{"_index":793,"t":{"98":{"position":[[388,16]]}}}],["request.object",{"_index":796,"t":{"98":{"position":[[565,14],[1454,15]]}}}],["request.params.docu",{"_index":703,"t":{"94":{"position":[[742,23]]},"96":{"position":[[1061,23]]},"98":{"position":[[1931,23]]}}}],["request.rel",{"_index":794,"t":{"98":{"position":[[419,16],[468,16],[528,16],[1428,17]]}}}],["request.us",{"_index":751,"t":{"96":{"position":[[1033,12]]},"98":{"position":[[1404,13],[1903,12]]}}}],["requir",{"_index":260,"t":{"16":{"position":[[5633,12],[12691,9],[13540,9],[13738,8],[14776,9],[15000,8],[15713,9],[15916,8],[16808,7],[18303,9],[19152,9],[19350,8],[20388,9],[20612,8],[21325,9],[21528,8],[22420,7],[24075,9],[24929,9],[25127,8],[26166,9],[26390,8],[27113,9],[27316,8],[28171,7]]},"32":{"position":[[46,12]]},"60":{"position":[[126,8]]},"80":{"position":[[1139,9],[2313,9],[2511,8],[4076,9],[4300,8],[5418,9],[5621,8],[6782,7]]},"86":{"position":[[267,9],[701,9],[1459,9]]},"94":{"position":[[552,7]]},"102":{"position":[[595,9]]},"112":{"position":[[412,9],[947,9],[1145,8],[1768,9],[1992,8],[2357,9],[2560,8]]},"114":{"position":[[1470,7]]},"124":{"position":[[412,9],[947,9],[1145,8],[1768,9],[1992,8],[2357,9],[2560,8]]},"126":{"position":[[1484,7]]},"142":{"position":[[216,8],[313,8],[962,8]]},"158":{"position":[[714,7]]},"170":{"position":[[358,9],[772,9],[1396,9]]},"172":{"position":[[683,9],[880,8],[1281,9],[1479,8],[2204,9],[2428,8],[3141,9],[3343,8]]},"176":{"position":[[216,13]]},"190":{"position":[[412,9],[947,9],[1145,8],[1768,9],[1992,8],[2357,9],[2560,8]]},"192":{"position":[[1437,7]]},"194":{"position":[[1597,7]]},"213":{"position":[[525,9],[1328,9],[1526,8],[2654,9],[2878,8],[3556,9],[3759,8],[4599,7]]},"215":{"position":[[535,9],[1381,9],[1579,8],[2614,9],[2838,8],[3548,9],[3751,8],[4640,7],[5700,9],[6548,9],[6746,8],[7783,9],[8007,8],[8719,9],[8922,8],[9813,7]]},"221":{"position":[[1840,9],[2682,9],[2880,8],[3911,9],[4135,8],[4841,9],[5044,8],[5929,7],[6903,9],[7743,9],[7941,8],[9106,9],[9330,8],[10045,9],[10248,8],[11124,7],[12243,9],[13089,9],[13287,8],[14322,9],[14546,8],[15256,9],[15459,8],[16348,7],[17266,9],[18114,9],[18312,8],[19349,9],[19573,8],[20285,9],[20488,8],[21379,7]]},"230":{"position":[[787,9],[1590,9],[1788,8],[2915,9],[3139,8],[3816,9],[4019,8],[4858,7]]},"232":{"position":[[578,9],[1425,9],[1623,8],[2659,9],[2883,8],[3594,9],[3797,8],[4687,7]]},"245":{"position":[[835,9],[1671,9],[1869,8],[2894,9],[3118,8],[3818,9],[4021,8],[4900,7]]},"247":{"position":[[546,9],[1345,9],[1543,8],[2666,9],[2890,8],[3563,9],[3766,8],[4601,7],[5607,9],[6444,9],[6642,8],[7668,9],[7892,8],[8593,9],[8796,8],[9676,7]]},"257":{"position":[[388,9],[923,9],[1121,8],[1744,9],[1968,8],[2333,9],[2536,8]]},"259":{"position":[[716,7],[2299,7]]},"261":{"position":[[1743,7],[3175,7]]},"263":{"position":[[559,7]]},"288":{"position":[[632,9],[1426,9],[1624,8],[2743,9],[2967,8],[3636,9],[3839,8],[4670,7],[5536,9],[6332,9],[6530,8],[7650,9],[7874,8],[8544,9],[8747,8],[9579,7],[10714,9],[11694,9],[11892,8],[13288,9],[13512,8],[14397,9],[14600,8],[15630,7]]},"296":{"position":[[87,13],[855,9]]},"300":{"position":[[84,13],[194,13],[301,13],[410,13]]},"302":{"position":[[84,13]]},"312":{"position":[[674,9],[1521,9],[1719,8],[2755,9],[2979,8],[3690,9],[3893,8],[4783,7],[5704,9],[6550,9],[6748,8],[7783,9],[8007,8],[8717,9],[8920,8],[9809,7]]},"318":{"position":[[793,9],[1655,9],[1853,8],[3040,9],[3264,8],[4001,9],[4204,8],[5102,7],[6278,9],[7125,9],[7323,8],[8359,9],[8583,8],[9294,9],[9497,8],[10387,7],[11512,9],[12359,9],[12557,8],[13593,9],[13817,8],[14528,9],[14731,8],[15621,7]]},"338":{"position":[[708,9],[1562,9],[1760,8],[2803,9],[3027,8],[3745,9],[3948,8],[4845,7]]},"345":{"position":[[1652,9],[2496,9],[2694,8],[3727,9],[3951,8],[4659,9],[4862,8],[5749,7]]},"369":{"position":[[656,9],[1624,9],[1822,8],[3171,9],[3395,8],[4248,9],[4451,8],[5461,7],[6592,9],[7441,9],[7639,8],[8677,9],[8901,8],[9614,9],[9817,8],[10709,7]]},"371":{"position":[[558,9],[1636,9],[1834,8],[3293,9],[3517,8],[4480,9],[4683,8],[5803,7]]},"373":{"position":[[504,9],[1353,9],[1551,8],[2589,9],[2813,8],[3526,9],[3729,8],[4621,7]]},"385":{"position":[[587,9],[1402,9],[1600,8],[2740,9],[2964,8],[3654,9],[3857,8],[4709,7]]},"387":{"position":[[608,9],[1462,9],[1660,8],[2703,9],[2927,8],[3645,9],[3848,8],[4745,7],[5858,9],[6713,9],[6911,8],[7955,9],[8179,8],[8898,9],[9101,8],[9999,7]]},"395":{"position":[[32,8]]},"397":{"position":[[357,12],[434,11]]},"403":{"position":[[3594,12]]},"415":{"position":[[565,9]]},"419":{"position":[[2060,8]]},"429":{"position":[[3287,7]]},"431":{"position":[[889,8]]},"435":{"position":[[48,8],[571,9]]},"445":{"position":[[674,9],[1524,9],[1722,8],[2761,9],[2985,8],[3699,9],[3902,8],[4795,7],[5725,9],[6574,9],[6772,8],[7810,9],[8034,8],[8747,9],[8950,8],[9842,7]]},"447":{"position":[[75,8]]},"449":{"position":[[634,9],[1485,9],[1683,8],[2723,9],[2947,8],[3662,9],[3865,8],[4759,7],[5849,9],[6700,9],[6898,8],[7938,9],[8162,8],[8877,9],[9080,8],[9974,7]]},"467":{"position":[[562,9],[1363,9],[1561,8],[2687,9],[2911,8],[3587,9],[3790,8],[4628,7]]},"469":{"position":[[564,9],[1445,9],[1643,8],[2849,9],[3073,8],[3829,9],[4032,8],[4949,7]]},"471":{"position":[[681,9],[1535,9],[1733,8],[2776,9],[3000,8],[3718,9],[3921,8],[4818,7]]},"485":{"position":[[748,9],[1601,9],[1799,8],[2977,9],[3201,8],[3929,9],[4132,8],[5021,7]]},"487":{"position":[[813,9],[1663,9],[1861,8],[2900,9],[3124,8],[3838,9],[4041,8],[4934,7]]},"505":{"position":[[796,9],[1734,9],[1932,8],[3251,9],[3475,8],[4298,9],[4501,8],[5481,7],[6544,9],[7391,9],[7589,8],[8625,9],[8849,8],[9560,9],[9763,8],[10653,7],[11959,9],[12806,9],[13004,8],[14040,9],[14264,8],[14975,9],[15178,8],[16068,7],[17065,9],[17914,9],[18112,8],[19150,9],[19374,8],[20087,9],[20290,8],[21182,7],[22109,9],[22957,9],[23155,8],[24192,9],[24416,8],[25128,9],[25331,8],[26222,7]]},"521":{"position":[[571,9],[1374,9],[1572,8],[2700,9],[2924,8],[3602,9],[3805,8],[4645,7]]},"523":{"position":[[904,9],[1784,9],[1982,8],[3187,9],[3411,8],[4166,9],[4369,8],[5285,7]]},"525":{"position":[[741,9],[1597,9],[1795,8],[2840,9],[3064,8],[3784,9],[3987,8],[4886,7]]},"537":{"position":[[650,9],[1504,9],[1702,8],[2937,9],[3161,8],[3900,9],[4103,8],[5001,7]]},"541":{"position":[[657,9],[1507,9],[1705,8],[2936,9],[3160,8],[3895,9],[4098,8],[4992,7]]},"543":{"position":[[668,9],[1470,9],[1668,8],[2795,9],[3019,8],[3696,9],[3899,8],[4738,7]]},"545":{"position":[[514,9],[1349,9],[1547,8],[2571,9],[2795,8],[3494,9],[3697,8],[4575,7],[5460,9],[6295,9],[6493,8],[7517,9],[7741,8],[8440,9],[8643,8],[9521,7]]},"547":{"position":[[551,9],[1346,9],[1544,8],[2663,9],[2887,8],[3556,9],[3759,8],[4590,7],[5449,9],[6285,9],[6483,8],[7508,9],[7732,8],[8432,9],[8635,8],[9514,7]]},"562":{"position":[[673,9],[1518,9],[1716,8],[2750,9],[2974,8],[3683,9],[3886,8],[4774,7]]},"569":{"position":[[923,9],[1818,9],[2016,8],[3140,9],[3364,8],[4094,9],[4297,8],[5221,7],[6495,9],[7371,9],[7569,8],[8655,9],[8879,8],[9588,9],[9791,8],[10696,7],[11911,9],[12797,9],[12995,8],[14091,9],[14315,8],[15034,9],[15237,8],[16152,7]]},"571":{"position":[[1126,9],[1903,9],[2101,8],[3107,9],[3331,8],[3943,9],[4146,8],[4952,7]]},"576":{"position":[[664,9],[1548,9],[1746,8],[2874,9],[3098,8],[3853,9],[4056,8],[4927,7],[5998,9],[6882,9],[7080,8],[8208,9],[8432,8],[9187,9],[9390,8],[10261,7]]},"583":{"position":[[585,9],[1546,9],[1744,8],[2952,9],[3176,8],[4029,9],[4232,8],[5216,7]]},"605":{"position":[[1801,9],[2647,9],[2845,8],[3880,9],[4104,8],[4814,9],[5017,8],[5906,7],[7394,9],[8240,9],[8438,8],[9473,9],[9697,8],[10407,9],[10610,8],[11499,7],[13636,9],[14485,9],[14683,8],[15721,9],[15945,8],[16658,9],[16861,8],[17753,7],[19891,9],[20737,9],[20935,8],[21970,9],[22194,8],[22904,9],[23107,8],[23996,7],[25548,9],[26395,9],[26593,8],[27629,9],[27853,8],[28564,9],[28767,8],[29657,7]]},"607":{"position":[[1646,9],[2493,9],[2691,8],[3727,9],[3951,8],[4662,9],[4865,8],[5755,7],[7315,9],[8165,9],[8363,8],[9402,9],[9626,8],[10340,9],[10543,8],[11436,7],[13076,9],[13924,9],[14122,8],[15159,9],[15383,8],[16095,9],[16298,8],[17189,7],[18818,9],[19666,9],[19864,8],[20901,9],[21125,8],[21837,9],[22040,8],[22931,7]]},"622":{"position":[[800,9],[1719,9],[1917,8],[3161,9],[3385,8],[4179,9],[4382,8],[5337,7]]},"624":{"position":[[615,9],[1472,9],[1670,8],[2716,9],[2940,8],[3661,9],[3864,8],[4764,7]]},"630":{"position":[[525,9],[1543,9],[1741,8],[3140,9],[3364,8],[4267,9],[4470,8],[5530,7]]},"632":{"position":[[544,9],[1393,9],[1591,8],[2629,9],[2853,8],[3566,9],[3769,8],[4661,7],[5214,9]]},"634":{"position":[[525,9],[1400,9],[1598,8],[2797,9],[3021,8],[3770,9],[3973,8],[4883,7],[5914,9],[6764,9],[6962,8],[8001,9],[8225,8],[8939,9],[9142,8],[10035,7],[10964,9],[11817,9],[12015,8],[13057,9],[13281,8],[13998,9],[14201,8],[15097,7]]},"644":{"position":[[1306,9],[2154,9],[2352,8],[3389,9],[3613,8],[4325,9],[4528,8],[5419,7],[6343,9],[7190,9],[7388,8],[8424,9],[8648,8],[9359,9],[9562,8],[10452,7]]},"646":{"position":[[615,9],[1469,9],[1667,8],[2846,9],[3070,8],[3799,9],[4002,8],[4892,7],[5807,9],[6658,9],[6856,8],[7896,9],[8120,8],[8835,9],[9038,8],[9932,7]]},"648":{"position":[[590,9],[1536,9],[1734,8],[2838,9],[3062,8],[3836,9],[4039,8],[5007,7],[6249,9],[7128,9],[7326,8],[8586,9],[8810,8],[9574,9],[9777,8],[10700,7],[11697,9],[12578,9],[12776,8],[14037,9],[14261,8],[15026,9],[15229,8],[16153,7],[17260,9],[18108,9],[18306,8],[19343,9],[19567,8],[20279,9],[20482,8],[21373,7],[22342,9],[23188,9],[23386,8],[24421,9],[24645,8],[25355,9],[25558,8],[26447,7]]},"658":{"position":[[846,9]]},"660":{"position":[[8208,7]]},"664":{"position":[[26,12],[350,8]]},"666":{"position":[[1635,7],[3534,7],[5443,7],[7351,7],[9257,7],[11167,7]]},"668":{"position":[[558,7],[945,7],[2447,8],[4217,7],[5235,9],[6106,9],[6304,8],[7500,9],[7724,8],[8470,9],[8673,8],[9580,7],[11466,7]]},"670":{"position":[[1567,9],[2467,9],[2665,8],[3889,9],[4113,8],[4887,9],[5090,8],[6025,7],[8609,7],[11438,7],[12194,12]]},"672":{"position":[[7747,7]]},"674":{"position":[[125,9]]},"678":{"position":[[761,9]]},"684":{"position":[[14,13]]},"686":{"position":[[76,12]]},"688":{"position":[[226,12]]},"690":{"position":[[4,12]]},"692":{"position":[[4,12],[942,9],[1751,9],[1949,8],[3083,9],[3307,8],[3991,9],[4194,8],[5040,7],[5898,9],[6711,9],[6909,8],[8047,9],[8271,8],[8959,9],[9162,8],[10012,7],[10886,9],[11842,9],[12040,8],[13433,9],[13657,8],[14508,9],[14711,8],[15718,7],[17177,9],[18025,9],[18223,8],[19260,9],[19484,8],[20196,9],[20399,8],[21290,7],[22295,9],[23141,9],[23339,8],[24374,9],[24598,8],[25308,9],[25511,8],[26400,7]]},"694":{"position":[[2471,12],[3360,9],[4369,9],[4567,8],[6069,9],[6293,8],[7207,9],[7410,8],[8477,7],[9788,9],[10639,9],[10837,8],[11877,9],[12101,8],[12816,9],[13019,8],[13913,7]]},"696":{"position":[[69,12],[3263,9],[4160,9],[4358,8],[5636,9],[5860,8],[6642,9],[6845,8],[7786,7],[8956,9],[10048,9],[10246,8],[11831,9],[12055,8],[13052,9],[13255,8],[14405,7],[16055,9],[16900,9],[17098,8],[18132,9],[18356,8],[19065,9],[19268,8],[20156,7]]},"698":{"position":[[3458,9],[4417,9],[4615,8],[6011,9],[6235,8],[7089,9],[7292,8],[8302,7],[9764,9],[10614,9],[10812,8],[11851,9],[12075,8],[12789,9],[12992,8],[13885,7]]},"700":{"position":[[261,12]]},"714":{"position":[[76,12]]},"716":{"position":[[528,12],[594,12]]},"718":{"position":[[2499,9],[3367,9],[3565,8],[4758,9],[4982,8],[5725,9],[5928,8],[6832,7],[7778,9],[8632,9],[8830,8],[9873,9],[10097,8],[10815,9],[11018,8],[11915,7],[12925,9],[13793,9],[13991,8],[15184,9],[15408,8],[16151,9],[16354,8],[17258,7],[18161,9],[19015,9],[19213,8],[20256,9],[20480,8],[21198,9],[21401,8],[22298,7],[23317,9],[24178,9],[24376,8],[25426,9],[25650,8],[26375,9],[26578,8],[27482,7],[28884,9],[30002,9],[30200,8],[31755,9],[31979,8],[32992,9],[33195,8],[34361,7],[35731,9],[36585,9],[36783,8],[37826,9],[38050,8],[38768,9],[38971,8],[39868,7]]},"720":{"position":[[560,9],[1409,9],[1607,8],[2645,9],[2869,8],[3582,9],[3785,8],[4677,7],[7260,9],[8108,9],[8306,8],[9343,9],[9567,8],[10279,9],[10482,8],[11373,7]]},"722":{"position":[[824,12],[7304,9],[8337,9],[8535,8],[10005,9],[10229,8],[11157,9],[11360,8],[12444,7],[13900,9],[14837,9],[15035,8],[16297,9],[16521,8],[17333,9],[17536,8],[18509,7],[19637,9],[20618,9],[20816,8],[22178,9],[22402,8],[23268,9],[23471,8],[24495,7],[25662,9],[26558,9],[26756,8],[28033,9],[28257,8],[29038,9],[29241,8],[30181,7],[31315,9],[32154,9],[32352,8],[33516,9],[33740,8],[34454,9],[34657,8],[35533,7],[36480,9],[37302,9],[37500,8],[38647,9],[38871,8],[39568,9],[39771,8],[40630,7],[41676,9],[42522,9],[42720,8],[43755,9],[43979,8],[44689,9],[44892,8],[45781,7],[46768,9],[47629,9],[47827,8],[48877,9],[49101,8],[49826,9],[50029,8],[50933,7]]},"724":{"position":[[530,12]]},"732":{"position":[[848,9]]},"734":{"position":[[3033,9],[4362,9],[4560,8],[6382,9],[6606,8],[7840,9],[8043,8],[9426,7]]},"738":{"position":[[26,12]]},"740":{"position":[[860,9],[1704,9],[1902,8],[2935,9],[3159,8],[3867,9],[4070,8],[4957,7],[5971,9],[6819,9],[7017,8],[8054,9],[8278,8],[8990,9],[9193,8],[10084,7],[11115,9],[11984,9],[12182,8],[13376,9],[13600,8],[14344,9],[14547,8],[15452,7],[16327,9],[17172,9],[17370,8],[18404,9],[18628,8],[19337,9],[19540,8],[20428,7]]},"742":{"position":[[4194,8],[4975,9],[5815,9],[6013,8],[7042,9],[7266,8],[7970,9],[8173,8],[9056,7],[9689,12],[10207,9],[11444,9],[11642,8],[13316,9],[13540,8],[14672,9],[14875,8],[16160,7],[17747,9],[18739,9],[18937,8],[20310,9],[20534,8],[21411,9],[21614,8],[22648,7],[23869,9],[24713,9],[24911,8],[25944,9],[26168,8],[26876,9],[27079,8],[27966,7]]},"744":{"position":[[1520,9],[2568,9],[2766,8],[4194,9],[4418,8],[5350,9],[5553,8],[6642,7],[8215,9],[9244,9],[9442,8],[10810,9],[11034,8],[11962,9],[12165,8],[13263,7],[14671,9],[15701,9],[15899,8],[17268,9],[17492,8],[18421,9],[18624,8],[19723,7]]},"746":{"position":[[3761,9],[6346,9],[6544,8],[10070,9],[10294,8],[12864,9],[13067,8],[15754,7]]},"750":{"position":[[244,9]]},"752":{"position":[[192,12],[264,12]]},"754":{"position":[[718,9]]},"762":{"position":[[76,12]]},"767":{"position":[[90,12],[629,9],[2277,9],[2475,8],[4728,9],[4952,8],[6525,9],[6728,8],[8442,7],[10585,9],[11773,9],[11971,8],[13596,9],[13820,8],[14903,9],[15106,8],[16342,7],[17766,9],[18884,9],[19082,8],[20637,9],[20861,8],[21874,9],[22077,8],[23243,7],[25424,9],[26271,9],[26469,8],[27505,9],[27729,8],[28440,9],[28643,8],[29533,7],[30603,9],[31451,9],[31649,8],[32686,9],[32910,8],[33622,9],[33825,8],[34716,7],[35639,9],[36490,9],[36688,8],[37728,9],[37952,8],[38667,9],[38870,8],[39764,7],[40697,9],[41549,9],[41747,8],[42788,9],[43012,8],[43728,9],[43931,8],[44826,7]]},"769":{"position":[[725,9],[1573,9],[1771,8],[2808,9],[3032,8],[3744,9],[3947,8],[4838,7],[8060,9],[8904,9],[9102,8],[10135,9],[10359,8],[11067,9],[11270,8],[12157,7],[13400,9],[14253,9],[14451,8],[15493,9],[15717,8],[16434,9],[16637,8],[17533,7],[23148,9],[24000,9],[24198,8],[25239,9],[25463,8],[26179,9],[26382,8],[27277,7],[30811,9],[31654,9],[31852,8],[32884,9],[33108,8],[33815,9],[34018,8],[34904,7],[39798,9],[40641,9],[40839,8],[41871,9],[42095,8],[42802,9],[43005,8],[43891,7]]},"771":{"position":[[104,12],[841,12]]},"781":{"position":[[138,13]]},"783":{"position":[[185,13]]},"786":{"position":[[2260,9],[3070,9],[3268,8],[4403,9],[4627,8],[5312,9],[5515,8],[6362,7],[7251,9],[8100,9],[8298,8],[9336,9],[9560,8],[10273,9],[10476,8],[11368,7],[12359,9],[13169,9],[13367,8],[14502,9],[14726,8],[15411,9],[15614,8],[16461,7],[17307,9],[18156,9],[18354,8],[19392,9],[19616,8],[20329,9],[20532,8],[21424,7],[22351,9],[23201,9],[23399,8],[24438,9],[24662,8],[25376,9],[25579,8],[26472,7],[29502,9],[30351,9],[30549,8],[31587,9],[31811,8],[32524,9],[32727,8],[33619,7],[34546,9],[35395,9],[35593,8],[36631,9],[36855,8],[37568,9],[37771,8],[38663,7]]},"788":{"position":[[2779,9],[3818,9],[4016,8],[5436,9],[5660,8],[6584,9],[6787,8],[7868,7],[9246,9],[10097,9],[10295,8],[11335,9],[11559,8],[12274,9],[12477,8],[13371,7]]},"790":{"position":[[237,11],[730,9],[1564,9],[1762,8],[2921,9],[3145,8],[3854,9],[4057,8],[4928,7],[5458,13],[6254,9],[7120,9],[7318,8],[8509,9],[8733,8],[9474,9],[9677,8],[10579,7],[11449,9],[12298,9],[12496,8],[13534,9],[13758,8],[14471,9],[14674,8],[15566,7]]},"792":{"position":[[3373,9],[4267,9],[4465,8],[5740,9],[5964,8],[6743,9],[6946,8],[7884,7],[9428,9],[10281,9],[10479,8],[11521,9],[11745,8],[12462,9],[12665,8],[13561,7],[15980,9],[16812,9],[17010,8],[18167,9],[18391,8],[19098,9],[19301,8],[20170,7]]},"804":{"position":[[144,13]]},"809":{"position":[[2257,9],[3070,9],[3268,8],[4406,9],[4630,8],[5318,9],[5521,8],[6371,7],[7269,9],[8121,9],[8319,8],[9360,9],[9584,8],[10300,9],[10503,8],[11398,7],[12396,9],[13205,9],[13403,8],[14537,9],[14761,8],[15445,9],[15648,8],[16494,7],[17338,9],[18186,9],[18384,8],[19421,9],[19645,8],[20357,9],[20560,8],[21451,7],[22375,9],[23225,9],[23423,8],[24462,9],[24686,8],[25400,9],[25603,8],[26496,7],[29014,9],[29862,9],[30060,8],[31097,9],[31321,8],[32033,9],[32236,8],[33127,7],[34051,9],[34900,9],[35098,8],[36136,9],[36360,8],[37073,9],[37276,8],[38168,7]]},"811":{"position":[[2536,9],[3666,9],[3864,8],[5487,9],[5711,8],[6746,9],[6949,8],[8135,7],[9717,9],[10569,9],[10767,8],[11808,9],[12032,8],[12748,9],[12951,8],[13846,7]]},"813":{"position":[[2369,9],[3378,9],[3576,8],[4966,9],[5190,8],[6084,9],[6287,8],[7338,7],[8847,9],[9702,9],[9900,8],[10944,9],[11168,8],[11887,9],[12090,8],[12988,7]]},"815":{"position":[[3241,9],[4423,9],[4621,8],[6240,9],[6464,8],[7541,9],[7744,8],[8974,7],[10375,9],[11231,9],[11429,8],[12474,9],[12698,8],[13418,9],[13621,8],[14520,7],[15544,9],[16402,9],[16600,8],[17647,9],[17871,8],[18593,9],[18796,8],[19697,7],[20650,9],[21510,9],[21708,8],[22757,9],[22981,8],[23705,9],[23908,8],[24811,7],[25849,9],[26707,9],[26905,8],[27952,9],[28176,8],[28898,9],[29101,8],[30002,7],[30955,9],[31813,9],[32011,8],[33058,9],[33282,8],[34004,9],[34207,8],[35108,7]]}}}],["require('./author",{"_index":804,"t":{"98":{"position":[[2194,23]]}}}],["require('./jwt",{"_index":755,"t":{"96":{"position":[[1234,14]]},"98":{"position":[[2097,14]]}}}],["require('./preauthor",{"_index":803,"t":{"98":{"position":[[2149,26]]}}}],["require('./rout",{"_index":757,"t":{"96":{"position":[[1283,16]]},"98":{"position":[[2236,16]]}}}],["require('@openfga/sdk",{"_index":334,"t":{"16":{"position":[[12421,24],[18033,24],[23805,24]]},"80":{"position":[[869,24]]},"86":{"position":[[51,24]]},"98":{"position":[[901,24]]},"112":{"position":[[142,24]]},"124":{"position":[[142,24]]},"170":{"position":[[115,24]]},"172":{"position":[[447,24]]},"190":{"position":[[142,24]]},"213":{"position":[[255,24]]},"215":{"position":[[265,24],[5430,24]]},"221":{"position":[[1570,24],[6633,24],[11973,24],[16996,24]]},"230":{"position":[[517,24]]},"232":{"position":[[308,24]]},"245":{"position":[[565,24]]},"247":{"position":[[276,24],[5337,24]]},"257":{"position":[[118,24]]},"288":{"position":[[362,24],[5266,24],[10444,24]]},"312":{"position":[[404,24],[5434,24]]},"318":{"position":[[523,24],[6008,24],[11242,24]]},"338":{"position":[[438,24]]},"345":{"position":[[1382,24]]},"369":{"position":[[386,24],[6322,24]]},"371":{"position":[[288,24]]},"373":{"position":[[234,24]]},"385":{"position":[[317,24]]},"387":{"position":[[338,24],[5588,24]]},"445":{"position":[[404,24],[5455,24]]},"449":{"position":[[364,24],[5579,24]]},"467":{"position":[[292,24]]},"469":{"position":[[294,24]]},"471":{"position":[[411,24]]},"485":{"position":[[478,24]]},"487":{"position":[[543,24]]},"505":{"position":[[526,24],[6274,24],[11689,24],[16795,24],[21839,24]]},"521":{"position":[[301,24]]},"523":{"position":[[634,24]]},"525":{"position":[[471,24]]},"537":{"position":[[380,24]]},"541":{"position":[[387,24]]},"543":{"position":[[398,24]]},"545":{"position":[[244,24],[5190,24]]},"547":{"position":[[281,24],[5179,24]]},"562":{"position":[[403,24]]},"569":{"position":[[653,24],[6225,24],[11641,24]]},"571":{"position":[[856,24]]},"576":{"position":[[394,24],[5728,24]]},"583":{"position":[[315,24]]},"605":{"position":[[1531,24],[7124,24],[13366,24],[19621,24],[25278,24]]},"607":{"position":[[1376,24],[7045,24],[12806,24],[18548,24]]},"622":{"position":[[530,24]]},"624":{"position":[[345,24]]},"630":{"position":[[255,24]]},"632":{"position":[[274,24]]},"634":{"position":[[255,24],[5644,24],[10694,24]]},"644":{"position":[[1036,24],[6073,24]]},"646":{"position":[[345,24],[5537,24]]},"648":{"position":[[320,24],[5979,24],[11427,24],[16990,24],[22072,24]]},"668":{"position":[[4965,24]]},"670":{"position":[[1297,24]]},"692":{"position":[[672,24],[5628,24],[10616,24],[16907,24],[22025,24]]},"694":{"position":[[3090,24],[9518,24]]},"696":{"position":[[2993,24],[8686,24],[15785,24]]},"698":{"position":[[3188,24],[9494,24]]},"718":{"position":[[2229,24],[7508,24],[12655,24],[17891,24],[23047,24],[28614,24],[35461,24]]},"720":{"position":[[290,24],[6990,24]]},"722":{"position":[[7034,24],[13630,24],[19367,24],[25392,24],[31045,24],[36210,24],[41406,24],[46498,24]]},"734":{"position":[[2763,24]]},"740":{"position":[[590,24],[5701,24],[10845,24],[16057,24]]},"742":{"position":[[4705,24],[9937,24],[17477,24],[23599,24]]},"744":{"position":[[1250,24],[7945,24],[14401,24]]},"746":{"position":[[3491,24]]},"767":{"position":[[359,24],[10315,24],[17496,24],[25154,24],[30333,24],[35369,24],[40427,24]]},"769":{"position":[[455,24],[7790,24],[13130,24],[22878,24],[30541,24],[39528,24]]},"786":{"position":[[1990,24],[6981,24],[12089,24],[17037,24],[22081,24],[29232,24],[34276,24]]},"788":{"position":[[2509,24],[8976,24]]},"790":{"position":[[460,24],[5984,24],[11179,24]]},"792":{"position":[[3103,24],[9158,24],[15710,24]]},"809":{"position":[[1987,24],[6999,24],[12126,24],[17068,24],[22105,24],[28744,24],[33781,24]]},"811":{"position":[[2266,24],[9447,24]]},"813":{"position":[[2099,24],[8577,24]]},"815":{"position":[[2971,24],[10105,24],[15274,24],[20380,24],[25579,24],[30685,24]]}}}],["require('fastifi",{"_index":699,"t":{"94":{"position":[[609,20]]},"96":{"position":[[257,16],[1171,20]]},"98":{"position":[[228,16],[851,16],[2034,20]]}}}],["reserv",{"_index":1584,"t":{"403":{"position":[[807,8],[5573,8]]}}}],["resolut",{"_index":1766,"t":{"471":{"position":[[5533,10]]},"505":{"position":[[11191,11],[26783,11]]},"525":{"position":[[5406,10]]},"605":{"position":[[18602,11]]}}}],["resolv",{"_index":1877,"t":{"560":{"position":[[119,7]]}}}],["resourc",{"_index":57,"t":{"6":{"position":[[169,9]]},"8":{"position":[[97,9]]},"10":{"position":[[298,8]]},"219":{"position":[[212,10],[287,10],[584,9]]},"263":{"position":[[62,10],[146,8],[190,8]]},"269":{"position":[[523,8],[601,8]]},"271":{"position":[[201,9]]},"306":{"position":[[1665,10]]},"308":{"position":[[71,10]]},"328":{"position":[[1168,10]]},"330":{"position":[[71,10]]},"355":{"position":[[1177,10]]},"359":{"position":[[71,10]]},"393":{"position":[[233,10]]},"613":{"position":[[983,10]]},"615":{"position":[[71,10]]},"644":{"position":[[246,9]]},"654":{"position":[[72,8],[689,8]]},"728":{"position":[[716,8]]},"798":{"position":[[815,8]]}}}],["resp",{"_index":657,"t":{"86":{"position":[[892,5]]}}}],["respect",{"_index":850,"t":{"102":{"position":[[1123,10]]},"648":{"position":[[5738,14]]}}}],["respond",{"_index":443,"t":{"16":{"position":[[17631,8],[23404,8]]},"221":{"position":[[1304,7],[11554,7],[11666,7]]},"312":{"position":[[83,7]]},"445":{"position":[[83,7]]},"670":{"position":[[930,7]]}}}],["respons",{"_index":379,"t":{"16":{"position":[[14083,9],[15119,8],[16474,8],[17019,9],[19695,9],[20731,8],[22086,8],[22631,9],[24271,8],[25427,9],[26646,8],[27849,8],[28360,9]]},"80":{"position":[[3295,9],[4940,8],[6361,8]]},"114":{"position":[[519,9],[653,8],[1260,8],[1671,9]]},"126":{"position":[[108,8],[494,9],[811,8],[1286,8],[1673,9]]},"150":{"position":[[165,8]]},"192":{"position":[[550,9]]},"194":{"position":[[708,9]]},"213":{"position":[[1952,9]]},"215":{"position":[[1921,9],[2957,8],[4306,8],[4848,9],[7089,9],[8126,8],[9478,8],[10022,9]]},"221":{"position":[[3217,9],[4254,8],[5594,8],[6132,9],[8404,9],[13629,9],[14665,8],[16014,8],[16556,9],[18655,9],[19692,8],[21044,8],[21588,9]]},"230":{"position":[[2213,9]]},"232":{"position":[[1965,9],[3002,8],[4352,8],[4895,9]]},"245":{"position":[[2201,9],[3237,8],[4566,8],[5098,9]]},"247":{"position":[[1964,9],[5156,9],[6974,9],[8011,8],[9341,8],[9874,9]]},"251":{"position":[[180,8]]},"259":{"position":[[224,9],[510,8],[1473,9],[1974,8],[2745,8],[2936,9],[2954,8]]},"261":{"position":[[1213,9],[1522,8],[1847,8],[2311,9],[2835,8]]},"263":{"position":[[605,11]]},"269":{"position":[[574,8]]},"275":{"position":[[470,8]]},"288":{"position":[[2041,9],[6948,9],[12586,9]]},"312":{"position":[[2062,9],[3098,8],[4449,8],[4992,9],[7090,9],[8126,8],[9475,8],[10017,9]]},"318":{"position":[[2338,9],[7665,9],[8702,8],[10052,8],[10595,9],[10870,8],[12900,9],[13936,8],[15287,8],[15830,9],[16105,8]]},"338":{"position":[[2110,9],[3146,8],[4511,8],[5061,9]]},"345":{"position":[[3034,9],[4070,8],[5415,8],[5955,9]]},"347":{"position":[[802,8],[1209,8]]},"353":{"position":[[688,11],[765,11]]},"369":{"position":[[2469,9],[7984,9],[9020,8],[10375,8],[10920,9]]},"371":{"position":[[2591,9]]},"373":{"position":[[1896,9],[2932,8],[4287,8],[4832,9]]},"385":{"position":[[2038,9]]},"387":{"position":[[2010,9],[3046,8],[4411,8],[4961,9],[7261,9],[8298,8],[9664,8],[10215,9]]},"429":{"position":[[2366,9]]},"445":{"position":[[2068,9],[3104,8],[4461,8],[5007,9],[7117,9],[8153,8],[9508,8],[10053,9]]},"449":{"position":[[2030,9],[3066,8],[4425,8],[4972,9],[7244,9],[8281,8],[9639,8],[10186,9]]},"467":{"position":[[1985,9]]},"469":{"position":[[2147,9]]},"471":{"position":[[2083,9],[3119,8],[4484,8],[5034,9]]},"485":{"position":[[2275,9]]},"487":{"position":[[2207,9],[3243,8],[4600,8],[5146,9]]},"505":{"position":[[2549,9],[7932,9],[8968,8],[10319,8],[10862,9],[13346,9],[14383,8],[15733,8],[16276,9],[18457,9],[19493,8],[20848,8],[21393,9],[23499,9],[24535,8],[25888,8],[26432,9]]},"521":{"position":[[1998,9]]},"523":{"position":[[2485,9]]},"525":{"position":[[2147,9],[3183,8],[4552,8],[5104,9]]},"537":{"position":[[2235,9]]},"541":{"position":[[2234,9]]},"543":{"position":[[2093,9]]},"545":{"position":[[1878,9],[2914,8],[4241,8],[4772,9],[6824,9],[7860,8],[9187,8],[9718,9]]},"547":{"position":[[1961,9],[6814,9],[7851,8],[9179,8],[9711,9]]},"562":{"position":[[2057,9],[3093,8],[4440,8],[4981,9]]},"569":{"position":[[2331,9],[3468,8],[4756,8],[4806,8],[5363,9],[7846,9],[8983,8],[10231,8],[10281,8],[10818,9],[13282,9],[14419,8],[15687,8],[15737,8],[16284,9]]},"571":{"position":[[2416,9],[3435,8],[4605,8],[4655,8],[5094,9]]},"574":{"position":[[118,8]]},"576":{"position":[[2185,9],[3202,8],[3473,8],[4575,8],[4627,8],[5116,9],[7519,9],[8536,8],[8807,8],[9909,8],[9961,8],[10450,9]]},"583":{"position":[[781,8],[2213,9],[3562,8],[4894,8],[5522,9],[6159,9]]},"605":{"position":[[1329,8],[3187,9],[4223,8],[5572,8],[6114,9],[6922,8],[8780,9],[9816,8],[11165,8],[11707,9],[13164,8],[15028,9],[16064,8],[17419,8],[17964,9],[19419,8],[21277,9],[22313,8],[23662,8],[24204,9],[25076,8],[26936,9],[27972,8],[29323,8],[29866,9]]},"607":{"position":[[1173,8],[3033,9],[4070,8],[5420,8],[5963,9],[6842,8],[8708,9],[9745,8],[11101,8],[11647,9],[12603,8],[14465,9],[15502,8],[16854,8],[17398,9],[18346,8],[20208,9],[21244,8],[22597,8],[23141,9]]},"622":{"position":[[2459,9]]},"624":{"position":[[2023,9],[3059,8],[4430,8],[4983,9]]},"630":{"position":[[2438,9]]},"632":{"position":[[1936,9],[2972,8],[4327,8],[4872,9]]},"634":{"position":[[2095,9],[7307,9],[8344,8],[9700,8],[10246,9],[12364,9],[13400,8],[14763,8],[15312,9]]},"644":{"position":[[2696,9],[3732,8],[5085,8],[5629,9],[7731,9],[8767,8],[10118,8],[10661,9]]},"646":{"position":[[2144,9],[7203,9],[8239,8],[9598,8],[10145,9]]},"648":{"position":[[1905,9],[3166,8],[4418,8],[4468,8],[5069,9],[7884,9],[13335,9],[18650,9],[19686,8],[21039,8],[21583,9],[23727,9],[24764,8],[26112,8],[26654,9]]},"660":{"position":[[5610,9]]},"666":{"position":[[682,9],[816,8],[1425,8],[1837,9],[2577,9],[2711,8],[3324,8],[3738,9],[4490,9],[4624,8],[5233,8],[5645,9],[6391,9],[6526,8],[7140,8],[7555,9],[8301,9],[8436,8],[9046,8],[9459,9],[10207,9],[10342,8],[10956,8],[11371,9]]},"668":{"position":[[3261,9],[3396,8],[4006,8],[4419,9],[6798,9],[10513,9],[10647,8],[11256,8],[11668,9]]},"670":{"position":[[3187,9],[7370,9],[7504,8],[8399,8],[8924,9],[10196,9],[10331,8],[11227,8],[11753,9]]},"672":{"position":[[5149,9]]},"682":{"position":[[297,9]]},"692":{"position":[[2381,9],[7345,9],[12731,9],[18567,9],[19603,8],[20956,8],[21500,9],[23680,9],[24717,8],[26065,8],[26607,9]]},"694":{"position":[[5367,9],[11184,9],[12220,8],[13579,8],[14126,9]]},"696":{"position":[[4934,9],[11129,9],[17439,9],[18475,8],[19822,8],[20363,9]]},"698":{"position":[[5309,9],[11157,9],[12194,8],[13550,8],[14096,9]]},"716":{"position":[[119,9]]},"718":{"position":[[4056,9],[9180,9],[10216,8],[11581,8],[12131,9],[14482,9],[19563,9],[20599,8],[21964,8],[22514,9],[24732,9],[25769,8],[27147,8],[27704,9],[31053,9],[37133,9],[38169,8],[39534,8],[40084,9]]},"720":{"position":[[70,9],[1951,9],[2988,8],[4342,8],[4887,9],[8650,9],[9686,8],[11039,8],[11583,9]]},"722":{"position":[[9303,9],[15595,9],[21476,9],[27331,9],[32814,9],[37945,9],[43061,9],[44098,8],[45446,8],[45988,9],[48184,9],[49220,8],[50599,8],[51156,9]]},"734":{"position":[[5680,9]]},"740":{"position":[[2242,9],[3278,8],[4623,8],[5163,9],[7361,9],[8397,8],[9750,8],[10294,9],[12674,9],[17710,9],[18747,8],[20093,8],[20634,9]]},"742":{"position":[[6348,9],[7385,8],[8721,8],[9257,9],[12614,9],[19608,9],[23388,8],[25251,9],[26287,8],[27632,8],[28172,9]]},"744":{"position":[[3492,9],[10117,9],[11153,8],[12929,8],[13650,9],[16574,9],[17611,8],[19388,8],[20110,9]]},"746":{"position":[[9368,9]]},"767":{"position":[[4026,9],[12894,9],[19935,9],[26812,9],[27848,8],[29199,8],[29742,9],[31992,9],[33029,8],[34381,8],[34925,9],[37035,9],[38071,8],[39430,8],[39977,9],[42095,9],[43131,8],[44492,8],[45040,9]]},"769":{"position":[[2110,9],[3151,8],[4499,8],[5043,9],[9441,9],[10478,8],[11822,8],[12362,9],[14799,9],[15836,8],[17198,8],[17747,9],[24546,9],[25582,8],[26943,8],[27491,9],[32191,9],[33227,8],[34570,8],[35109,9],[35572,9],[41178,9],[42214,8],[43557,8],[44096,9]]},"786":{"position":[[3701,9],[8643,9],[9679,8],[11034,8],[11579,9],[13800,9],[18699,9],[19735,8],[21090,8],[21635,9],[23744,9],[24781,8],[26137,8],[26683,9],[30894,9],[31930,8],[33285,8],[33830,9],[35938,9],[36974,8],[38329,8],[38874,9]]},"788":{"position":[[4734,9],[10642,9],[11678,8],[13037,8],[13584,9]]},"790":{"position":[[2219,9],[7807,9],[12841,9],[13877,8],[15232,8],[15777,9]]},"792":{"position":[[5038,9],[10823,9],[11864,8],[13222,8],[13771,9],[17465,9]]},"809":{"position":[[3704,9],[8667,9],[9703,8],[11064,8],[11612,9],[13835,9],[18728,9],[19764,8],[21117,8],[21661,9],[23768,9],[24805,8],[26161,8],[26707,9],[30404,9],[31440,8],[32793,8],[33337,9],[35443,9],[36479,8],[37834,8],[38379,9]]},"811":{"position":[[4785,9],[11115,9],[12151,8],[13512,8],[14060,9]]},"813":{"position":[[4264,9],[10246,9],[11287,8],[12649,8],[13200,9]]},"815":{"position":[[5538,9],[11781,9],[12817,8],[14186,8],[14738,9],[16953,9],[17990,8],[19362,8],[19916,9],[22064,9],[23100,8],[24477,8],[25033,9],[27258,9],[28295,8],[29667,8],[30221,9],[32364,9],[33401,8],[34773,8],[35327,9]]}}}],["response.allow",{"_index":397,"t":{"16":{"position":[[15334,16],[16525,16],[20946,16],[22137,16]]},"114":{"position":[[858,16],[1311,16]]},"215":{"position":[[3169,16],[4357,16],[8339,16],[9529,16]]},"221":{"position":[[4461,16],[5645,16],[14877,16],[16065,16],[19905,16],[21095,16]]},"232":{"position":[[3214,16],[4403,16]]},"245":{"position":[[3439,16],[4617,16]]},"247":{"position":[[8213,16],[9392,16]]},"312":{"position":[[3311,16],[4500,16],[8338,16],[9526,16]]},"318":{"position":[[8914,16],[10103,16],[14149,16],[15338,16]]},"338":{"position":[[3366,16],[4562,16]]},"345":{"position":[[4280,16],[5466,16]]},"369":{"position":[[9235,16],[10426,16]]},"373":{"position":[[3147,16],[4338,16]]},"387":{"position":[[3266,16],[4462,16],[8518,16],[9715,16]]},"445":{"position":[[3320,16],[4512,16],[8368,16],[9559,16]]},"449":{"position":[[3283,16],[4476,16],[8497,16],[9690,16]]},"471":{"position":[[3339,16],[4535,16]]},"487":{"position":[[3459,16],[4651,16]]},"505":{"position":[[9181,16],[10370,16],[14595,16],[15784,16],[19708,16],[20899,16],[24749,16],[25939,16]]},"525":{"position":[[3405,16],[4603,16]]},"545":{"position":[[3115,16],[4292,16],[8061,16],[9238,16]]},"547":{"position":[[8052,16],[9230,16]]},"562":{"position":[[3304,16],[4491,16]]},"605":{"position":[[4435,16],[5623,16],[10028,16],[11216,16],[16279,16],[17470,16],[22525,16],[23713,16],[28185,16],[29374,16]]},"607":{"position":[[4282,16],[5471,16],[9960,16],[11152,16],[15715,16],[16905,16],[21458,16],[22648,16]]},"624":{"position":[[3282,16],[4481,16]]},"632":{"position":[[3187,16],[4378,16]]},"634":{"position":[[8559,16],[9751,16],[13619,16],[14814,16]]},"644":{"position":[[3946,16],[5136,16],[8980,16],[10169,16]]},"646":{"position":[[8456,16],[9649,16]]},"648":{"position":[[19900,16],[21090,16],[24975,16],[26163,16]]},"666":{"position":[[1022,16],[1476,16],[2919,16],[3375,16],[4830,16],[5284,16],[6734,16],[7191,16],[8642,16],[9097,16],[10550,16],[11007,16]]},"668":{"position":[[3602,16],[4057,16],[10853,16],[11307,16]]},"670":{"position":[[7858,16],[8450,16],[10685,16],[11278,16]]},"692":{"position":[[19817,16],[21007,16],[24928,16],[26116,16]]},"694":{"position":[[12437,16],[13630,16]]},"696":{"position":[[18686,16],[19873,16]]},"698":{"position":[[12409,16],[13601,16]]},"718":{"position":[[10436,16],[11632,16],[20819,16],[22015,16],[25995,16],[27198,16],[38389,16],[39585,16]]},"720":{"position":[[3202,16],[4393,16],[9900,16],[11090,16]]},"722":{"position":[[44309,16],[45497,16],[49447,16],[50650,16]]},"740":{"position":[[3488,16],[4674,16],[8611,16],[9801,16],[18957,16],[20144,16]]},"742":{"position":[[7590,16],[8772,16],[26497,16],[27683,16]]},"744":{"position":[[11583,16],[12980,16],[18041,16],[19439,16]]},"767":{"position":[[28061,16],[29250,16],[33242,16],[34432,16],[38288,16],[39481,16],[43349,16],[44543,16]]},"769":{"position":[[3360,16],[4550,16],[10687,16],[11873,16],[16054,16],[17249,16],[25800,16],[26994,16],[33436,16],[34621,16],[42423,16],[43608,16]]},"786":{"position":[[9894,16],[11085,16],[19950,16],[21141,16],[24996,16],[26188,16],[32145,16],[33336,16],[37189,16],[38380,16]]},"788":{"position":[[11895,16],[13088,16]]},"790":{"position":[[14092,16],[15283,16]]},"792":{"position":[[12078,16],[13273,16]]},"809":{"position":[[9921,16],[11115,16],[19978,16],[21168,16],[25020,16],[26212,16],[31654,16],[32844,16],[36694,16],[37885,16]]},"811":{"position":[[12369,16],[13563,16]]},"813":{"position":[[11503,16],[12700,16]]},"815":{"position":[[13039,16],[14237,16],[18213,16],[19413,16],[23326,16],[24528,16],[28518,16],[29718,16],[33624,16],[34824,16]]}}}],["response.authorization_model_id",{"_index":643,"t":{"80":{"position":[[6444,31]]}}}],["response.authorizationmodelid",{"_index":638,"t":{"80":{"position":[[5001,29]]}}}],["response.object",{"_index":452,"t":{"16":{"position":[[24431,16],[26696,16]]},"126":{"position":[[268,16],[861,16]]},"583":{"position":[[1048,16],[3612,16]]}}}],["restart",{"_index":918,"t":{"142":{"position":[[166,10]]},"259":{"position":[[1105,7],[1136,7]]}}}],["restrict",{"_index":293,"t":{"16":{"position":[[8677,12],[10065,14],[10435,14]]},"40":{"position":[[242,14]]},"56":{"position":[[334,13],[482,13],[701,13],[747,12],[1541,12]]},"58":{"position":[[1003,13]]},"60":{"position":[[3208,12]]},"64":{"position":[[1922,13]]},"176":{"position":[[188,10]]},"202":{"position":[[553,11]]},"271":{"position":[[103,11]]},"296":{"position":[[827,12],[1138,12]]},"304":{"position":[[731,11],[785,11]]},"403":{"position":[[7480,11]]},"415":{"position":[[447,12],[552,12],[697,12]]},"419":{"position":[[1708,12]]},"425":{"position":[[1409,12]]},"427":{"position":[[252,11],[286,12]]},"429":{"position":[[5,12],[485,13],[527,12]]},"435":{"position":[[554,12]]},"493":{"position":[[1692,13]]},"497":{"position":[[752,13]]},"503":{"position":[[207,11],[1539,13]]},"509":{"position":[[571,11]]},"593":{"position":[[973,13]]},"597":{"position":[[604,13]]},"601":{"position":[[113,12],[231,13]]},"628":{"position":[[1329,14]]},"658":{"position":[[802,13]]},"668":{"position":[[50,11]]},"674":{"position":[[93,12]]},"698":{"position":[[2252,12],[9266,11]]},"716":{"position":[[1888,12]]},"732":{"position":[[804,13]]},"750":{"position":[[212,12]]},"769":{"position":[[6300,14],[35903,12]]},"771":{"position":[[554,12]]}}}],["restrictions](/docs/configur",{"_index":2022,"t":{"628":{"position":[[1257,33]]}}}],["result",{"_index":217,"t":{"16":{"position":[[3791,6]]},"126":{"position":[[1743,6]]},"259":{"position":[[803,6],[948,6]]},"263":{"position":[[733,7],[822,7]]},"267":{"position":[[221,6]]},"269":{"position":[[111,8],[539,9]]},"271":{"position":[[323,6]]},"273":{"position":[[532,8],[762,8],[2379,7],[2504,8],[2606,8],[3380,7],[3701,7]]},"275":{"position":[[195,7],[330,8]]},"349":{"position":[[461,6]]},"365":{"position":[[1079,7]]},"401":{"position":[[2240,9]]},"405":{"position":[[740,7]]},"431":{"position":[[725,7]]},"576":{"position":[[5336,6],[10670,6]]},"583":{"position":[[6119,7],[6240,7]]},"585":{"position":[[28,7],[130,7],[355,8]]},"694":{"position":[[1115,9]]},"696":{"position":[[20737,8]]},"698":{"position":[[9058,6]]},"722":{"position":[[4423,7]]},"765":{"position":[[237,7]]},"767":{"position":[[24242,7]]},"769":{"position":[[6520,9]]},"817":{"position":[[107,7]]}}}],["result'",{"_index":861,"t":{"114":{"position":[[1702,8]]}}}],["retri",{"_index":947,"t":{"142":{"position":[[1880,8],[4554,8]]}}}],["retriev",{"_index":1272,"t":{"259":{"position":[[2538,9]]},"273":{"position":[[2421,9],[2673,10]]},"425":{"position":[[1921,8],[1998,8]]}}}],["return",{"_index":320,"t":{"16":{"position":[[12237,6],[17381,7],[23115,7],[23536,6]]},"42":{"position":[[61,7]]},"44":{"position":[[75,7]]},"62":{"position":[[1460,6]]},"64":{"position":[[1437,6]]},"66":{"position":[[1472,6]]},"80":{"position":[[3280,6],[7226,6]]},"92":{"position":[[354,6]]},"94":{"position":[[727,6],[1555,6]]},"96":{"position":[[1046,6],[2497,6]]},"98":{"position":[[1916,6],[3776,6],[4380,6],[4775,6],[5242,6],[5357,6],[5471,6]]},"114":{"position":[[1730,6]]},"126":{"position":[[3,6]]},"215":{"position":[[81,6],[5174,6]]},"232":{"position":[[108,6]]},"247":{"position":[[5138,6]]},"259":{"position":[[2561,6],[2763,6],[3133,6]]},"263":{"position":[[715,6]]},"267":{"position":[[119,8],[201,6]]},"269":{"position":[[560,9]]},"271":{"position":[[133,9],[303,6]]},"273":{"position":[[128,6],[363,6],[507,6],[1186,6],[1892,6],[3388,8],[3692,8]]},"275":{"position":[[31,8],[368,7]]},"345":{"position":[[1198,6]]},"349":{"position":[[1452,6]]},"365":{"position":[[1059,6]]},"387":{"position":[[5339,6]]},"487":{"position":[[112,6]]},"560":{"position":[[38,7]]},"562":{"position":[[5269,6]]},"567":{"position":[[37,7]]},"571":{"position":[[23,6],[307,6],[659,6],[5419,6]]},"574":{"position":[[15,7],[265,8]]},"576":{"position":[[5499,8]]},"581":{"position":[[44,7]]},"585":{"position":[[17,6],[420,7]]},"587":{"position":[[100,6]]},"605":{"position":[[19410,6],[25067,6]]},"607":{"position":[[18337,6]]},"658":{"position":[[273,7]]},"670":{"position":[[6567,6],[9391,6]]},"698":{"position":[[9049,8]]},"720":{"position":[[48,9],[5205,6]]},"732":{"position":[[274,7]]},"744":{"position":[[7749,6],[14204,6]]},"765":{"position":[[226,6]]},"769":{"position":[[32,9],[5339,9],[18568,6],[18711,6],[37181,6]]},"792":{"position":[[14696,6],[14883,8],[15019,6],[15065,9]]},"813":{"position":[[14199,6],[14382,8],[14520,6],[14566,9]]}}}],["review",{"_index":1734,"t":{"433":{"position":[[0,6]]},"652":{"position":[[0,6]]}}}],["revok",{"_index":1213,"t":{"219":{"position":[[604,6]]},"230":{"position":[[160,6]]},"269":{"position":[[627,7]]}}}],["rewrit",{"_index":1769,"t":{"471":{"position":[[6100,9]]}}}],["rewritten",{"_index":1669,"t":{"419":{"position":[[2253,9]]}}}],["rider",{"_index":848,"t":{"102":{"position":[[1064,6]]}}}],["rm",{"_index":932,"t":{"142":{"position":[[1109,2],[3796,2]]}}}],["rng",{"_index":771,"t":{"96":{"position":[[2052,3]]},"98":{"position":[[3262,3]]}}}],["roadmap",{"_index":237,"t":{"16":{"position":[[4361,7],[9413,9],[10351,7],[10630,9],[10775,9],[10923,9],[11152,7],[11928,9],[12009,7],[12224,7],[13069,9],[14062,9],[15263,8],[16405,9],[17005,11],[17178,9],[17221,8],[17853,8],[18681,9],[19674,9],[20875,8],[22017,9],[22617,11],[22790,9],[22833,8],[29889,7],[30079,9]]},"58":{"position":[[1379,7],[1481,7],[1523,7],[1609,9],[1657,7],[1698,7],[1784,9],[1852,7],[1953,7],[1996,7],[2082,9]]},"60":{"position":[[1954,7],[2071,7],[2141,7],[2240,9],[2403,7],[2475,7],[2561,9]]},"62":{"position":[[576,7],[705,7],[784,9],[832,7],[911,9],[1445,9]]},"64":{"position":[[653,7],[745,7],[824,9],[886,8],[975,9],[1424,9],[1501,7],[1583,8],[1685,9],[1746,8],[1857,9]]},"66":{"position":[[680,7],[757,7],[836,9],[891,8],[1026,9],[1459,9],[1536,7],[1647,8],[1749,9],[1795,7],[1872,9]]},"806":{"position":[[429,7]]},"815":{"position":[[215,8],[3524,7],[3602,10],[3678,7],[3768,10],[3838,7],[3914,9],[4891,7],[5020,10],[5101,7],[5242,10],[5317,7],[5444,10],[6695,7],[6782,8],[6859,7],[6958,8],[7029,7],[7114,8],[8205,7],[8278,9],[8365,7],[8450,9],[8531,7],[8602,9],[9307,10],[9432,7],[9513,8],[9590,7],[9683,8],[9754,7],[9833,8],[10760,9],[11760,9],[12968,8],[14117,9],[14724,11],[14903,9],[14954,8],[15930,9],[16932,9],[18142,8],[19293,9],[19902,11],[20084,9],[20135,8],[21039,9],[22043,9],[23255,8],[24408,9],[25019,11],[25206,9],[25257,8],[26235,9],[27237,9],[28447,8],[29598,9],[30207,11],[30389,9],[30440,8],[31341,9],[32343,9],[33553,8],[34704,9],[35313,11],[35495,9],[35546,8]]}}}],["roadmap\"},{\"user\":\"domain:xyz#member\",\"relation\":\"commenter\",\"object\":\"document:2021",{"_index":2725,"t":{"815":{"position":[[9137,84]]}}}],["roadmap\"},{\"user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2726,"t":{"815":{"position":[[9229,70]]}}}],["roadmap.doc",{"_index":1175,"t":{"202":{"position":[[339,11]]},"509":{"position":[[357,11]]}}}],["role",{"_index":100,"t":{"10":{"position":[[3,4],[79,4],[130,4],[232,6]]},"58":{"position":[[2193,5]]},"62":{"position":[[1581,5]]},"296":{"position":[[339,5],[376,5],[444,6],[934,5],[962,5]]},"353":{"position":[[47,5],[186,5],[260,5],[336,5],[414,5],[499,5],[668,5],[790,5]]},"355":{"position":[[1083,5]]},"365":{"position":[[106,6],[142,5],[443,4],[524,4],[608,4],[699,4],[819,5],[939,4],[970,5],[1160,4],[1218,5],[1282,5]]},"367":{"position":[[12,5],[175,5],[418,4],[806,7],[919,7],[973,7],[1236,5]]},"369":{"position":[[21,4],[46,5],[107,4],[152,5],[932,4],[1048,4],[2085,4],[2257,4],[3619,4],[3745,4],[4905,4],[5027,4],[5807,4],[5927,4],[6104,5]]},"371":{"position":[[19,5],[75,4],[832,4],[1002,4],[2095,4],[2321,4],[3739,4],[3919,4],[5135,4],[5311,4],[6183,4],[6357,4]]},"375":{"position":[[77,5]]},"391":{"position":[[162,5],[283,5]]},"397":{"position":[[737,8],[796,5],[873,5],[956,6],[1032,5]]},"403":{"position":[[8115,5]]},"437":{"position":[[2537,5],[2590,5],[2658,6]]},"441":{"position":[[30,5],[98,6]]},"453":{"position":[[770,4]]},"491":{"position":[[42,5],[139,5],[226,4],[339,5],[405,4],[472,4],[573,4],[624,5],[807,4],[877,4],[944,4],[1019,5],[1089,5],[1273,5],[1326,5]]},"499":{"position":[[23,5],[288,5],[460,5]]},"501":{"position":[[9,5],[70,5],[170,5]]},"503":{"position":[[1622,4]]},"505":{"position":[[43,5],[145,5],[271,4],[324,4]]},"507":{"position":[[58,5]]},"517":{"position":[[98,4]]},"591":{"position":[[449,5]]},"609":{"position":[[197,5],[332,5]]},"660":{"position":[[329,4],[703,4],[2883,4],[2943,4],[2993,4],[3277,4],[3409,4],[3541,4],[3673,4],[3805,4],[4300,4],[4488,4],[4676,4],[4864,4],[5052,4],[5852,4],[5994,4],[6136,4],[6278,4],[6420,4],[7100,4],[7238,4],[7376,4],[7514,4],[7652,4],[8917,4],[9053,4],[9189,4],[9325,4],[9461,4]]},"672":{"position":[[2816,4],[2948,4],[3080,4],[3212,4],[3344,4],[3839,4],[4027,4],[4215,4],[4403,4],[4591,4],[5391,4],[5533,4],[5675,4],[5817,4],[5959,4],[6639,4],[6777,4],[6915,4],[7053,4],[7191,4],[8456,4],[8592,4],[8728,4],[8864,4],[9000,4]]},"678":{"position":[[1020,5]]},"686":{"position":[[192,5]]},"692":{"position":[[306,5]]},"694":{"position":[[2885,5]]},"696":{"position":[[2684,6]]},"698":{"position":[[2510,4],[2556,5]]},"710":{"position":[[434,4],[468,5],[498,4]]},"712":{"position":[[86,7],[104,6],[818,4],[890,6]]},"714":{"position":[[397,4],[426,5]]},"716":{"position":[[493,5]]},"718":{"position":[[97,5]]},"724":{"position":[[627,4]]},"809":{"position":[[111,5]]}}}],["role:media",{"_index":1469,"t":{"369":{"position":[[988,11],[1104,11],[3684,11],[3810,11],[6958,11],[7951,11],[9152,11],[11069,11],[11110,11]]},"371":{"position":[[883,11],[1055,11],[3797,11],[3979,11]]}}}],["roles/permiss",{"_index":1800,"t":{"491":{"position":[[1293,17]]}}}],["root",{"_index":977,"t":{"142":{"position":[[4505,7]]},"347":{"position":[[921,7]]},"349":{"position":[[1024,4]]},"576":{"position":[[5380,8],[10714,8]]}}}],["root:secret@tcp(mysql:3306)/openfga?parsetime=tru",{"_index":972,"t":{"142":{"position":[[3886,52],[4111,52]]}}}],["rout",{"_index":687,"t":{"92":{"position":[[324,5]]},"94":{"position":[[527,5],[662,5],[1378,6]]},"96":{"position":[[59,6],[764,5],[835,5]]},"98":{"position":[[1624,5],[1664,5]]}}}],["routeread",{"_index":756,"t":{"96":{"position":[[1271,9]]},"98":{"position":[[2224,9]]}}}],["rpc",{"_index":1085,"t":{"156":{"position":[[524,3]]}}}],["rs256",{"_index":741,"t":{"96":{"position":[[568,7],[2256,8]]},"98":{"position":[[3466,8]]}}}],["rsa.generatekey(rng",{"_index":773,"t":{"96":{"position":[[2103,20]]},"98":{"position":[[3313,20]]}}}],["rsa.privatekey",{"_index":769,"t":{"96":{"position":[[1930,15]]},"98":{"position":[[3140,15]]}}}],["rule",{"_index":121,"t":{"12":{"position":[[24,5]]}}}],["run",{"_index":350,"t":{"16":{"position":[[12884,3],[15103,3],[16275,3],[18496,3],[20715,3],[21887,3]]},"74":{"position":[[950,7]]},"94":{"position":[[776,3]]},"96":{"position":[[1376,3],[2047,4]]},"98":{"position":[[3257,4]]},"102":{"position":[[752,3]]},"114":{"position":[[110,3],[637,3],[1071,3]]},"130":{"position":[[67,7]]},"134":{"position":[[48,3]]},"138":{"position":[[15,3],[121,3],[185,3],[196,3],[255,4]]},"140":{"position":[[287,3]]},"142":{"position":[[495,3],[740,3],[878,7],[975,7],[1103,3],[1303,3],[1395,3],[2483,3],[2723,4],[2785,3],[3433,3],[3561,7],[3666,3],[3790,3],[3970,3],[4062,3],[5114,3],[5354,4],[5413,3]]},"144":{"position":[[1387,3],[1426,3],[1518,3],[2912,3],[2945,3],[3037,3]]},"146":{"position":[[172,7]]},"148":{"position":[[309,3],[381,3],[555,3],[627,3]]},"152":{"position":[[153,3],[199,3],[289,3],[381,3]]},"156":{"position":[[387,3]]},"162":{"position":[[115,7]]},"215":{"position":[[728,3],[2941,3],[4110,3],[5893,3],[8110,3],[9281,3]]},"221":{"position":[[2033,3],[4238,3],[5403,3],[12436,3],[14649,3],[15818,3],[17459,3],[19676,3],[20847,3]]},"232":{"position":[[771,3],[2986,3],[4156,3]]},"245":{"position":[[1028,3],[3221,3],[4380,3]]},"247":{"position":[[5800,3],[7995,3],[9155,3]]},"271":{"position":[[88,3]]},"273":{"position":[[3658,7]]},"312":{"position":[[867,3],[3082,3],[4252,3],[5897,3],[8110,3],[9279,3]]},"318":{"position":[[6471,3],[8686,3],[9856,3],[11705,3],[13920,3],[15090,3]]},"338":{"position":[[901,3],[3130,3],[4307,3]]},"345":{"position":[[1845,3],[4054,3],[5221,3]]},"369":{"position":[[6785,3],[9004,3],[10176,3]]},"373":{"position":[[697,3],[2916,3],[4088,3]]},"387":{"position":[[801,3],[3030,3],[4207,3],[6051,3],[8282,3],[9460,3]]},"405":{"position":[[3766,3],[3782,3]]},"433":{"position":[[182,7]]},"445":{"position":[[867,3],[3088,3],[4261,3],[5918,3],[8137,3],[9309,3]]},"449":{"position":[[827,3],[3050,3],[4224,3],[6042,3],[8265,3],[9439,3]]},"471":{"position":[[163,7],[874,3],[3103,3],[4280,3]]},"487":{"position":[[1006,3],[3227,3],[4400,3]]},"505":{"position":[[6737,3],[8952,3],[10122,3],[12152,3],[14367,3],[15537,3],[17258,3],[19477,3],[20649,3],[22302,3],[24519,3],[25690,3]]},"525":{"position":[[934,3],[3167,3],[4346,3]]},"545":{"position":[[707,3],[2898,3],[4056,3],[5653,3],[7844,3],[9002,3]]},"547":{"position":[[5642,3],[7835,3],[8994,3]]},"562":{"position":[[866,3],[3077,3],[4245,3]]},"605":{"position":[[1994,3],[4207,3],[5376,3],[7587,3],[9800,3],[10969,3],[13829,3],[16048,3],[17220,3],[20084,3],[22297,3],[23466,3],[25741,3],[27956,3],[29126,3]]},"607":{"position":[[1839,3],[4054,3],[5224,3],[7508,3],[9729,3],[10902,3],[13269,3],[15486,3],[16657,3],[19011,3],[21228,3],[22399,3]]},"624":{"position":[[808,3],[3043,3],[4223,3]]},"632":{"position":[[737,3],[2956,3],[4128,3]]},"634":{"position":[[6107,3],[8328,3],[9501,3],[11157,3],[13384,3],[14560,3]]},"644":{"position":[[1499,3],[3716,3],[4887,3],[6536,3],[8751,3],[9921,3]]},"646":{"position":[[5305,3],[6000,3],[8223,3],[9397,3]]},"648":{"position":[[16790,7],[17453,3],[19670,3],[20841,3],[22535,3],[24748,3],[25917,3]]},"652":{"position":[[304,7]]},"666":{"position":[[271,3],[800,3],[1235,3],[2162,3],[2695,3],[3132,3],[4079,3],[4608,3],[5043,3],[5975,3],[6510,3],[6948,3],[7889,3],[8420,3],[8856,3],[9791,3],[10326,3],[10764,3]]},"668":{"position":[[2849,3],[3380,3],[3816,3],[10036,7],[10102,3],[10631,3],[11066,3]]},"670":{"position":[[6634,3],[7488,3],[8071,3],[9459,3],[10315,3],[10899,3]]},"692":{"position":[[17370,3],[19587,3],[20758,3],[22488,3],[24701,3],[25870,3]]},"694":{"position":[[9981,3],[12204,3],[13378,3]]},"696":{"position":[[16248,3],[18459,3],[19627,3]]},"698":{"position":[[9957,3],[12178,3],[13351,3]]},"702":{"position":[[106,3]]},"718":{"position":[[7971,3],[10200,3],[11377,3],[18354,3],[20583,3],[21760,3],[23510,3],[25753,3],[26937,3],[35924,3],[38153,3],[39330,3]]},"720":{"position":[[753,3],[2972,3],[4144,3],[5181,7],[7453,3],[9670,3],[10841,3]]},"722":{"position":[[187,3],[41869,3],[44082,3],[45251,3],[46961,3],[49204,3],[50388,3]]},"726":{"position":[[92,3],[297,3]]},"740":{"position":[[1053,3],[3262,3],[4429,3],[6164,3],[8381,3],[9552,3],[16520,3],[18731,3],[19899,3]]},"742":{"position":[[5168,3],[7369,3],[8532,3],[24062,3],[26271,3],[27438,3]]},"744":{"position":[[8408,3],[11137,3],[12524,3],[14864,3],[17595,3],[18983,3]]},"767":{"position":[[25617,3],[27832,3],[29002,3],[30796,3],[33013,3],[34184,3],[35832,3],[38055,3],[39229,3],[40890,3],[43115,3],[44290,3]]},"769":{"position":[[221,3],[918,3],[3135,3],[4306,3],[8253,3],[10462,3],[11629,3],[13593,3],[15820,3],[16996,3],[23341,3],[25566,3],[26741,3],[31004,3],[33211,3],[34377,3],[38829,7],[39991,3],[42198,3],[43364,3]]},"786":{"position":[[7444,3],[9663,3],[10835,3],[17500,3],[19719,3],[20891,3],[22544,3],[24765,3],[25938,3],[29695,3],[31914,3],[33086,3],[34739,3],[36958,3],[38130,3]]},"788":{"position":[[9439,3],[11662,3],[12836,3]]},"790":{"position":[[11642,3],[13861,3],[15033,3]]},"792":{"position":[[9621,3],[11848,3],[13024,3]]},"809":{"position":[[7462,3],[9687,3],[10862,3],[17531,3],[19748,3],[20919,3],[22568,3],[24789,3],[25962,3],[29207,3],[31424,3],[32595,3],[34244,3],[36463,3],[37635,3]]},"811":{"position":[[9910,3],[12135,3],[13310,3]]},"813":{"position":[[9040,3],[11271,3],[12449,3]]},"815":{"position":[[10568,3],[12801,3],[13980,3],[15737,3],[17974,3],[19155,3],[20843,3],[23084,3],[24267,3],[26042,3],[28279,3],[29460,3],[31148,3],[33385,3],[34566,3]]}}}],["s\\n",{"_index":674,"t":{"86":{"position":[[2371,5]]}}}],["sale",{"_index":1659,"t":{"419":{"position":[[1156,5],[1272,7],[1386,7],[1412,7],[1821,5],[1881,7]]},"421":{"position":[[134,7],[635,7]]},"423":{"position":[[3112,7],[3145,7]]}}}],["same",{"_index":97,"t":{"8":{"position":[[598,4]]},"16":{"position":[[5381,4],[12100,4]]},"30":{"position":[[152,4]]},"58":{"position":[[46,4],[917,4]]},"196":{"position":[[342,4]]},"202":{"position":[[254,4]]},"204":{"position":[[1357,4]]},"208":{"position":[[279,4]]},"215":{"position":[[5121,4]]},"221":{"position":[[11711,4],[22369,4]]},"227":{"position":[[279,4]]},"238":{"position":[[1076,4]]},"242":{"position":[[279,4]]},"259":{"position":[[2572,4]]},"279":{"position":[[1676,4]]},"285":{"position":[[279,4]]},"306":{"position":[[1986,4]]},"310":{"position":[[279,4]]},"328":{"position":[[1489,4]]},"332":{"position":[[279,4]]},"336":{"position":[[954,4]]},"367":{"position":[[135,4]]},"379":{"position":[[1068,4]]},"381":{"position":[[279,4]]},"423":{"position":[[1207,4]]},"437":{"position":[[2975,4]]},"443":{"position":[[279,4]]},"455":{"position":[[1360,4]]},"459":{"position":[[279,4]]},"477":{"position":[[1129,4]]},"481":{"position":[[279,4]]},"493":{"position":[[1219,4]]},"497":{"position":[[279,4]]},"509":{"position":[[272,4]]},"511":{"position":[[1107,4]]},"515":{"position":[[279,4]]},"531":{"position":[[1060,4]]},"535":{"position":[[279,4]]},"553":{"position":[[1531,4]]},"557":{"position":[[279,4]]},"593":{"position":[[648,4]]},"597":{"position":[[279,4]]},"599":{"position":[[287,4],[369,4]]},"605":{"position":[[24760,4]]},"607":{"position":[[6485,4],[12166,4]]},"613":{"position":[[1304,4]]},"617":{"position":[[279,4]]},"640":{"position":[[352,4]]},"658":{"position":[[153,4]]},"668":{"position":[[750,4]]},"670":{"position":[[297,4],[347,4]]},"696":{"position":[[15485,4]]},"704":{"position":[[427,4]]},"732":{"position":[[153,4]]},"734":{"position":[[304,4]]},"738":{"position":[[298,4]]},"740":{"position":[[257,4],[406,4]]},"744":{"position":[[369,4]]},"773":{"position":[[533,4]]},"786":{"position":[[11901,4]]},"796":{"position":[[423,4]]},"804":{"position":[[363,4]]},"809":{"position":[[11940,4]]}}}],["saml",{"_index":2511,"t":{"760":{"position":[[469,4]]},"767":{"position":[[1671,4],[3784,4],[5992,4],[7978,4],[9906,4]]}}}],["sampl",{"_index":504,"t":{"54":{"position":[[11,6]]},"140":{"position":[[263,6]]},"158":{"position":[[406,8],[450,6],[544,6],[576,6],[622,8],[727,8],[774,8]]},"176":{"position":[[257,7]]},"405":{"position":[[692,6]]},"682":{"position":[[62,6]]},"765":{"position":[[174,6]]}}}],["sandcastl",{"_index":1525,"t":{"393":{"position":[[885,12],[988,12]]},"714":{"position":[[270,10],[310,10],[354,10],[493,10],[713,10],[800,10],[877,10]]},"716":{"position":[[644,10],[696,10],[765,10]]},"718":{"position":[[2769,10],[3822,10],[5200,10],[6376,10],[7105,10],[13195,10],[14248,10],[15626,10],[16802,10],[17531,10],[28089,10],[28220,10],[28345,10],[29156,10],[29285,10],[29408,10],[30459,10],[30644,10],[30823,10],[32199,10],[32338,10],[32471,10],[33645,10],[33780,10],[33909,10],[34785,10],[34918,10],[35045,10]]},"722":{"position":[[729,10],[899,10],[6744,10],[30821,10]]}}}],["satisfi",{"_index":313,"t":{"16":{"position":[[11244,10]]},"62":{"position":[[623,10]]},"64":{"position":[[700,10]]},"567":{"position":[[104,7]]},"670":{"position":[[12211,10]]}}}],["save",{"_index":1266,"t":{"259":{"position":[[995,4],[2604,4]]},"290":{"position":[[176,4]]},"403":{"position":[[10579,4]]}}}],["saw",{"_index":2308,"t":{"720":{"position":[[5169,3]]}}}],["scale",{"_index":25,"t":{"4":{"position":[[225,6]]},"8":{"position":[[127,5]]},"132":{"position":[[161,7]]},"529":{"position":[[226,7]]},"537":{"position":[[5580,5]]}}}],["scenario",{"_index":1075,"t":{"154":{"position":[[411,9]]},"273":{"position":[[306,10]]},"275":{"position":[[0,8]]},"365":{"position":[[246,8]]},"425":{"position":[[1442,9],[2637,8]]},"642":{"position":[[206,9]]},"660":{"position":[[68,9]]},"682":{"position":[[146,9]]},"686":{"position":[[18,9]]},"710":{"position":[[337,9],[700,9]]},"714":{"position":[[18,9],[209,10]]},"734":{"position":[[68,9]]},"752":{"position":[[209,9]]},"758":{"position":[[211,9],[742,9]]},"760":{"position":[[76,10]]},"762":{"position":[[18,9]]},"765":{"position":[[181,10],[216,9],[264,9]]},"767":{"position":[[107,9]]},"769":{"position":[[38856,9]]},"771":{"position":[[121,9],[214,9]]},"779":{"position":[[168,9],[321,9]]},"802":{"position":[[206,9],[365,9]]}}}],["schema",{"_index":183,"t":{"16":{"position":[[1657,6]]},"54":{"position":[[155,6]]},"60":{"position":[[300,6],[3332,6]]},"68":{"position":[[881,6],[1810,6]]},"80":{"position":[[86,6]]},"134":{"position":[[301,6],[342,6]]},"182":{"position":[[210,6],[251,6]]},"204":{"position":[[327,6]]},"221":{"position":[[321,6]]},"238":{"position":[[276,6]]},"261":{"position":[[67,6]]},"279":{"position":[[365,6]]},"306":{"position":[[455,6]]},"314":{"position":[[226,6]]},"316":{"position":[[313,6]]},"328":{"position":[[396,6]]},"336":{"position":[[181,6]]},"345":{"position":[[58,6]]},"347":{"position":[[58,6]]},"355":{"position":[[500,6]]},"367":{"position":[[280,6]]},"379":{"position":[[296,6]]},"399":{"position":[[4110,6]]},"401":{"position":[[2857,6]]},"403":{"position":[[9428,6],[9937,6]]},"411":{"position":[[210,6]]},"413":{"position":[[107,6],[145,6]]},"415":{"position":[[26,6],[138,6],[414,6],[749,7],[920,6],[1015,7]]},"417":{"position":[[71,6],[132,6],[160,6],[266,6],[322,6]]},"419":{"position":[[114,6],[2282,6]]},"423":{"position":[[1347,6]]},"425":{"position":[[778,6],[3299,6],[3453,6]]},"429":{"position":[[48,6],[89,6],[502,6],[649,6],[813,6],[861,6],[914,6],[1045,6],[1676,6]]},"431":{"position":[[866,6],[1004,6]]},"437":{"position":[[707,6]]},"447":{"position":[[190,6]]},"455":{"position":[[343,6]]},"463":{"position":[[325,6]]},"465":{"position":[[129,6]]},"477":{"position":[[286,6]]},"493":{"position":[[307,6]]},"501":{"position":[[285,6]]},"503":{"position":[[757,6]]},"511":{"position":[[301,6]]},"519":{"position":[[180,6]]},"531":{"position":[[265,6]]},"539":{"position":[[90,6]]},"553":{"position":[[369,6]]},"601":{"position":[[260,6]]},"605":{"position":[[71,6]]},"607":{"position":[[132,6]]},"613":{"position":[[321,6]]},"620":{"position":[[154,6]]},"628":{"position":[[91,6]]},"642":{"position":[[269,6],[883,6]]},"644":{"position":[[271,6]]},"650":{"position":[[131,6]]},"660":{"position":[[880,6]]},"672":{"position":[[80,6]]},"690":{"position":[[657,6]]},"694":{"position":[[1164,6]]},"696":{"position":[[789,6]]},"698":{"position":[[645,6]]},"716":{"position":[[1011,6]]},"718":{"position":[[583,6]]},"720":{"position":[[5782,6]]},"722":{"position":[[4474,6]]},"734":{"position":[[537,6]]},"746":{"position":[[80,6]]},"748":{"position":[[232,6]]},"765":{"position":[[618,6]]},"769":{"position":[[6577,6],[21514,6],[28650,6],[37605,6]]},"786":{"position":[[297,6],[1261,6],[27239,6]]},"788":{"position":[[356,6],[789,6]]},"792":{"position":[[904,6],[1249,6],[20648,6]]},"809":{"position":[[382,6],[27271,6]]},"811":{"position":[[413,6]]},"813":{"position":[[487,6],[14801,6]]},"815":{"position":[[558,6]]}}}],["schema.json",{"_index":908,"t":{"140":{"position":[[588,12]]}}}],["schema_vers",{"_index":188,"t":{"16":{"position":[[1894,17]]},"54":{"position":[[804,17]]},"60":{"position":[[487,17]]},"68":{"position":[[1061,17],[1896,17]]},"80":{"position":[[198,17],[1410,17]]},"204":{"position":[[455,17]]},"221":{"position":[[437,17]]},"238":{"position":[[342,17]]},"261":{"position":[[242,17]]},"279":{"position":[[513,17]]},"306":{"position":[[578,17]]},"314":{"position":[[372,17]]},"316":{"position":[[475,17]]},"328":{"position":[[487,17]]},"336":{"position":[[282,17]]},"345":{"position":[[179,17]]},"347":{"position":[[181,17]]},"355":{"position":[[607,17]]},"367":{"position":[[459,17]]},"379":{"position":[[387,17]]},"419":{"position":[[1102,17],[2564,17],[3808,17]]},"423":{"position":[[2948,17]]},"425":{"position":[[1120,17]]},"429":{"position":[[1156,17]]},"437":{"position":[[880,17]]},"447":{"position":[[411,17]]},"455":{"position":[[456,17]]},"463":{"position":[[462,17]]},"465":{"position":[[288,17]]},"477":{"position":[[360,17]]},"493":{"position":[[393,17]]},"501":{"position":[[371,17]]},"503":{"position":[[910,17]]},"511":{"position":[[370,17]]},"519":{"position":[[298,17]]},"531":{"position":[[329,17]]},"539":{"position":[[244,17]]},"553":{"position":[[470,17]]},"601":{"position":[[434,17]]},"605":{"position":[[245,17]]},"607":{"position":[[258,17]]},"613":{"position":[[434,17]]},"620":{"position":[[291,17]]},"628":{"position":[[285,17]]},"642":{"position":[[355,17],[970,17]]},"644":{"position":[[407,17]]},"650":{"position":[[218,17]]},"660":{"position":[[1298,17]]},"672":{"position":[[636,17]]},"690":{"position":[[802,17]]},"694":{"position":[[1425,17]]},"696":{"position":[[1192,17]]},"698":{"position":[[1018,17]]},"716":{"position":[[1160,17]]},"718":{"position":[[732,17]]},"720":{"position":[[5981,17]]},"722":{"position":[[4949,17]]},"734":{"position":[[893,17]]},"746":{"position":[[802,17]]},"748":{"position":[[1015,17]]},"765":{"position":[[799,17]]},"769":{"position":[[6773,17],[18202,15],[21752,17],[28944,17],[37889,17]]},"786":{"position":[[454,17],[1326,17],[27440,17]]},"788":{"position":[[423,17],[1050,17]]},"792":{"position":[[967,17],[1529,17],[21215,17]]},"809":{"position":[[519,17],[27440,17]]},"811":{"position":[[682,17]]},"813":{"position":[[738,17],[13618,15],[15186,17]]},"815":{"position":[[950,17]]}}}],["schema_version\":\"1.1\",\"type_definitions\":[{\"type\":\"user\"},{\"type\":\"document\",\"relations\":{\"reader\":{\"this\":{}},\"writer\":{\"this\":{}},\"owner\":{\"this\":{}}},\"metadata\":{\"relations\":{\"reader\":{\"directly_related_user_types\":[{\"type\":\"user\"}]},\"writer\":{\"directly_related_user_types\":[{\"type\":\"user\"}]},\"owner\":{\"directly_related_user_types\":[{\"type\":\"us",{"_index":645,"t":{"80":{"position":[[6845,362]]}}}],["schema_version\\\":\\\"1.1\\\",\\\"type_definitions\\\":[{\\\"type\\\":\\\"user\\\"},{\\\"type\\\":\\\"document\\\",\\\"relations\\\":{\\\"reader\\\":{\\\"this\\\":{}},\\\"writer\\\":{\\\"this\\\":{}},\\\"owner\\\":{\\\"this\\\":{}}},\\\"metadata\\\":{\\\"relations\\\":{\\\"reader\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"writer\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"user\\\"}]},\\\"owner\\\":{\\\"directly_related_user_types\\\":[{\\\"type\\\":\\\"us",{"_index":629,"t":{"80":{"position":[[2690,418],[4416,419],[5942,418]]}}}],["scheme",{"_index":345,"t":{"16":{"position":[[12720,6],[13569,6],[14805,6],[15742,6],[18332,6],[19181,6],[20417,6],[21354,6],[24104,6],[24958,6],[26195,6],[27142,6]]},"80":{"position":[[1168,6],[2342,6],[4105,6],[5447,6]]},"86":{"position":[[296,6],[730,6],[1488,6],[1912,6]]},"102":{"position":[[624,6]]},"112":{"position":[[441,6],[976,6],[1797,6],[2386,6]]},"124":{"position":[[441,6],[976,6],[1797,6],[2386,6]]},"168":{"position":[[194,6]]},"170":{"position":[[387,6],[801,6],[1425,6]]},"172":{"position":[[712,6],[1310,6],[2233,6],[3170,6]]},"190":{"position":[[441,6],[976,6],[1797,6],[2386,6]]},"213":{"position":[[554,6],[1357,6],[2683,6],[3585,6]]},"215":{"position":[[564,6],[1410,6],[2643,6],[3577,6],[5729,6],[6577,6],[7812,6],[8748,6]]},"221":{"position":[[1869,6],[2711,6],[3940,6],[4870,6],[6932,6],[7772,6],[9135,6],[10074,6],[12272,6],[13118,6],[14351,6],[15285,6],[17295,6],[18143,6],[19378,6],[20314,6]]},"230":{"position":[[816,6],[1619,6],[2944,6],[3845,6]]},"232":{"position":[[607,6],[1454,6],[2688,6],[3623,6]]},"245":{"position":[[864,6],[1700,6],[2923,6],[3847,6]]},"247":{"position":[[575,6],[1374,6],[2695,6],[3592,6],[5636,6],[6473,6],[7697,6],[8622,6]]},"257":{"position":[[417,6],[952,6],[1773,6],[2362,6]]},"288":{"position":[[661,6],[1455,6],[2772,6],[3665,6],[5565,6],[6361,6],[7679,6],[8573,6],[10743,6],[11723,6],[13317,6],[14426,6]]},"312":{"position":[[703,6],[1550,6],[2784,6],[3719,6],[5733,6],[6579,6],[7812,6],[8746,6]]},"318":{"position":[[822,6],[1684,6],[3069,6],[4030,6],[6307,6],[7154,6],[8388,6],[9323,6],[11541,6],[12388,6],[13622,6],[14557,6]]},"338":{"position":[[737,6],[1591,6],[2832,6],[3774,6]]},"345":{"position":[[1681,6],[2525,6],[3756,6],[4688,6]]},"369":{"position":[[685,6],[1653,6],[3200,6],[4277,6],[6621,6],[7470,6],[8706,6],[9643,6]]},"371":{"position":[[587,6],[1665,6],[3322,6],[4509,6]]},"373":{"position":[[533,6],[1382,6],[2618,6],[3555,6]]},"385":{"position":[[616,6],[1431,6],[2769,6],[3683,6]]},"387":{"position":[[637,6],[1491,6],[2732,6],[3674,6],[5887,6],[6742,6],[7984,6],[8927,6]]},"445":{"position":[[703,6],[1553,6],[2790,6],[3728,6],[5754,6],[6603,6],[7839,6],[8776,6]]},"449":{"position":[[663,6],[1514,6],[2752,6],[3691,6],[5878,6],[6729,6],[7967,6],[8906,6]]},"467":{"position":[[591,6],[1392,6],[2716,6],[3616,6]]},"469":{"position":[[593,6],[1474,6],[2878,6],[3858,6]]},"471":{"position":[[710,6],[1564,6],[2805,6],[3747,6]]},"485":{"position":[[777,6],[1630,6],[3006,6],[3958,6]]},"487":{"position":[[842,6],[1692,6],[2929,6],[3867,6]]},"505":{"position":[[825,6],[1763,6],[3280,6],[4327,6],[6573,6],[7420,6],[8654,6],[9589,6],[11988,6],[12835,6],[14069,6],[15004,6],[17094,6],[17943,6],[19179,6],[20116,6],[22138,6],[22986,6],[24221,6],[25157,6]]},"521":{"position":[[600,6],[1403,6],[2729,6],[3631,6]]},"523":{"position":[[933,6],[1813,6],[3216,6],[4195,6]]},"525":{"position":[[770,6],[1626,6],[2869,6],[3813,6]]},"537":{"position":[[679,6],[1533,6],[2966,6],[3929,6]]},"541":{"position":[[686,6],[1536,6],[2965,6],[3924,6]]},"543":{"position":[[697,6],[1499,6],[2824,6],[3725,6]]},"545":{"position":[[543,6],[1378,6],[2600,6],[3523,6],[5489,6],[6324,6],[7546,6],[8469,6]]},"547":{"position":[[580,6],[1375,6],[2692,6],[3585,6],[5478,6],[6314,6],[7537,6],[8461,6]]},"562":{"position":[[702,6],[1547,6],[2779,6],[3712,6]]},"569":{"position":[[952,6],[1847,6],[3169,6],[4123,6],[6524,6],[7400,6],[8684,6],[9617,6],[11940,6],[12826,6],[14120,6],[15063,6]]},"571":{"position":[[1155,6],[1932,6],[3136,6],[3972,6]]},"576":{"position":[[693,6],[1577,6],[2903,6],[3882,6],[6027,6],[6911,6],[8237,6],[9216,6]]},"583":{"position":[[614,6],[1575,6],[2981,6],[4058,6]]},"605":{"position":[[1830,6],[2676,6],[3909,6],[4843,6],[7423,6],[8269,6],[9502,6],[10436,6],[13665,6],[14514,6],[15750,6],[16687,6],[19920,6],[20766,6],[21999,6],[22933,6],[25577,6],[26424,6],[27658,6],[28593,6]]},"607":{"position":[[1675,6],[2522,6],[3756,6],[4691,6],[7344,6],[8194,6],[9431,6],[10369,6],[13105,6],[13953,6],[15188,6],[16124,6],[18847,6],[19695,6],[20930,6],[21866,6]]},"622":{"position":[[829,6],[1748,6],[3190,6],[4208,6]]},"624":{"position":[[644,6],[1501,6],[2745,6],[3690,6]]},"630":{"position":[[554,6],[1572,6],[3169,6],[4296,6]]},"632":{"position":[[573,6],[1422,6],[2658,6],[3595,6]]},"634":{"position":[[554,6],[1429,6],[2826,6],[3799,6],[5943,6],[6793,6],[8030,6],[8968,6],[10993,6],[11846,6],[13086,6],[14027,6]]},"644":{"position":[[1335,6],[2183,6],[3418,6],[4354,6],[6372,6],[7219,6],[8453,6],[9388,6]]},"646":{"position":[[644,6],[1498,6],[2875,6],[3828,6],[5836,6],[6687,6],[7925,6],[8864,6]]},"648":{"position":[[619,6],[1565,6],[2867,6],[3865,6],[6278,6],[7157,6],[8615,6],[9603,6],[11726,6],[12607,6],[14066,6],[15055,6],[17289,6],[18137,6],[19372,6],[20308,6],[22371,6],[23217,6],[24450,6],[25384,6]]},"668":{"position":[[5264,6],[6135,6],[7529,6],[8499,6]]},"670":{"position":[[1596,6],[2496,6],[3918,6],[4916,6]]},"692":{"position":[[971,6],[1780,6],[3112,6],[4020,6],[5927,6],[6740,6],[8076,6],[8988,6],[10915,6],[11871,6],[13462,6],[14537,6],[17206,6],[18054,6],[19289,6],[20225,6],[22324,6],[23170,6],[24403,6],[25337,6]]},"694":{"position":[[3389,6],[4398,6],[6098,6],[7236,6],[9817,6],[10668,6],[11906,6],[12845,6]]},"696":{"position":[[3292,6],[4189,6],[5665,6],[6671,6],[8985,6],[10077,6],[11860,6],[13081,6],[16084,6],[16929,6],[18161,6],[19094,6]]},"698":{"position":[[3487,6],[4446,6],[6040,6],[7118,6],[9793,6],[10643,6],[11880,6],[12818,6]]},"718":{"position":[[2528,6],[3396,6],[4787,6],[5754,6],[7807,6],[8661,6],[9902,6],[10844,6],[12954,6],[13822,6],[15213,6],[16180,6],[18190,6],[19044,6],[20285,6],[21227,6],[23346,6],[24207,6],[25455,6],[26404,6],[28913,6],[30031,6],[31784,6],[33021,6],[35760,6],[36614,6],[37855,6],[38797,6]]},"720":{"position":[[589,6],[1438,6],[2674,6],[3611,6],[7289,6],[8137,6],[9372,6],[10308,6]]},"722":{"position":[[7333,6],[8366,6],[10034,6],[11186,6],[13929,6],[14866,6],[16326,6],[17362,6],[19666,6],[20647,6],[22207,6],[23297,6],[25691,6],[26587,6],[28062,6],[29067,6],[31344,6],[32183,6],[33545,6],[34483,6],[36509,6],[37331,6],[38676,6],[39597,6],[41705,6],[42551,6],[43784,6],[44718,6],[46797,6],[47658,6],[48906,6],[49855,6]]},"734":{"position":[[3062,6],[4391,6],[6411,6],[7869,6]]},"740":{"position":[[889,6],[1733,6],[2964,6],[3896,6],[6000,6],[6848,6],[8083,6],[9019,6],[11144,6],[12013,6],[13405,6],[14373,6],[16356,6],[17201,6],[18433,6],[19366,6]]},"742":{"position":[[5004,6],[5844,6],[7071,6],[7999,6],[10236,6],[11473,6],[13345,6],[14701,6],[17776,6],[18768,6],[20339,6],[21440,6],[23898,6],[24742,6],[25973,6],[26905,6]]},"744":{"position":[[1549,6],[2597,6],[4223,6],[5379,6],[8244,6],[9273,6],[10839,6],[11991,6],[14700,6],[15730,6],[17297,6],[18450,6]]},"746":{"position":[[3790,6],[6375,6],[10099,6],[12893,6]]},"767":{"position":[[658,6],[2306,6],[4757,6],[6554,6],[10614,6],[11802,6],[13625,6],[14932,6],[17795,6],[18913,6],[20666,6],[21903,6],[25453,6],[26300,6],[27534,6],[28469,6],[30632,6],[31480,6],[32715,6],[33651,6],[35668,6],[36519,6],[37757,6],[38696,6],[40726,6],[41578,6],[42817,6],[43757,6]]},"769":{"position":[[754,6],[1602,6],[2837,6],[3773,6],[8089,6],[8933,6],[10164,6],[11096,6],[13429,6],[14282,6],[15522,6],[16463,6],[23177,6],[24029,6],[25268,6],[26208,6],[30840,6],[31683,6],[32913,6],[33844,6],[39827,6],[40670,6],[41900,6],[42831,6]]},"786":{"position":[[2289,6],[3099,6],[4432,6],[5341,6],[7280,6],[8129,6],[9365,6],[10302,6],[12388,6],[13198,6],[14531,6],[15440,6],[17336,6],[18185,6],[19421,6],[20358,6],[22380,6],[23230,6],[24467,6],[25405,6],[29531,6],[30380,6],[31616,6],[32553,6],[34575,6],[35424,6],[36660,6],[37597,6]]},"788":{"position":[[2808,6],[3847,6],[5465,6],[6613,6],[9275,6],[10126,6],[11364,6],[12303,6]]},"790":{"position":[[759,6],[1593,6],[2950,6],[3883,6],[6283,6],[7149,6],[8538,6],[9503,6],[11478,6],[12327,6],[13563,6],[14500,6]]},"792":{"position":[[3402,6],[4296,6],[5769,6],[6772,6],[9457,6],[10310,6],[11550,6],[12491,6],[16009,6],[16841,6],[18196,6],[19127,6]]},"809":{"position":[[2286,6],[3099,6],[4435,6],[5347,6],[7298,6],[8150,6],[9389,6],[10329,6],[12425,6],[13234,6],[14566,6],[15474,6],[17367,6],[18215,6],[19450,6],[20386,6],[22404,6],[23254,6],[24491,6],[25429,6],[29043,6],[29891,6],[31126,6],[32062,6],[34080,6],[34929,6],[36165,6],[37102,6]]},"811":{"position":[[2565,6],[3695,6],[5516,6],[6775,6],[9746,6],[10598,6],[11837,6],[12777,6]]},"813":{"position":[[2398,6],[3407,6],[4995,6],[6113,6],[8876,6],[9731,6],[10973,6],[11916,6]]},"815":{"position":[[3270,6],[4452,6],[6269,6],[7570,6],[10404,6],[11260,6],[12503,6],[13447,6],[15573,6],[16431,6],[17676,6],[18622,6],[20679,6],[21539,6],[22786,6],[23734,6],[25878,6],[26736,6],[27981,6],[28927,6],[30984,6],[31842,6],[33087,6],[34033,6]]}}}],["school",{"_index":1208,"t":{"219":{"position":[[418,6]]}}}],["school'",{"_index":1209,"t":{"219":{"position":[[449,8]]}}}],["scope",{"_index":1533,"t":{"397":{"position":[[511,5],[687,5],[2657,5]]},"399":{"position":[[1697,5],[3539,5]]},"401":{"position":[[2029,5]]},"403":{"position":[[1014,5]]},"660":{"position":[[8,5]]},"734":{"position":[[8,5]]}}}],["scratch",{"_index":1267,"t":{"259":{"position":[[1118,7]]}}}],["sdk",{"_index":29,"t":{"4":{"position":[[262,4],[353,4]]},"16":{"position":[[12304,3],[12394,3],[12464,3],[12501,3],[13119,3],[13234,4],[13278,3],[13315,3],[14213,3],[14303,3],[14488,3],[14525,3],[15373,3],[17505,4],[17538,5],[17916,3],[18006,3],[18076,3],[18113,3],[18731,3],[18846,4],[18890,3],[18927,3],[19825,3],[19915,3],[20100,3],[20137,3],[20985,3],[23264,4],[23297,5],[23688,3],[23778,3],[23848,3],[23885,3],[24508,3],[24623,4],[24667,3],[24704,3],[25603,3],[25693,3],[25878,3],[25915,3],[26773,3]]},"52":{"position":[[785,5]]},"74":{"position":[[72,3],[95,3],[274,3],[309,3]]},"78":{"position":[[193,4],[230,3],[479,4],[516,3],[765,4],[802,3],[1051,4],[1088,3]]},"80":{"position":[[752,3],[842,3],[912,3],[949,3],[1892,3],[2007,4],[2051,3],[2088,3],[3513,3],[3603,3],[3788,3],[3825,3],[5078,3]]},"86":{"position":[[493,4]]},"90":{"position":[[184,4],[548,4]]},"98":{"position":[[2945,4]]},"100":{"position":[[90,4]]},"102":{"position":[[36,3],[255,4],[304,3],[392,4],[836,3],[1174,3]]},"104":{"position":[[14,4],[69,3],[106,3],[142,3],[157,3],[236,3],[294,3],[318,3],[378,3]]},"108":{"position":[[193,4],[516,4],[839,4],[1162,4]]},"112":{"position":[[115,3],[185,3],[222,3],[641,4],[685,3],[722,3],[1295,3],[1480,3],[1517,3]]},"120":{"position":[[193,4],[516,4],[839,4],[1162,4]]},"124":{"position":[[115,3],[185,3],[222,3],[641,4],[685,3],[722,3],[1295,3],[1480,3],[1517,3]]},"168":{"position":[[66,5]]},"170":{"position":[[538,4]]},"172":{"position":[[1073,4]]},"186":{"position":[[193,4],[480,4],[767,4],[1054,4]]},"190":{"position":[[115,3],[185,3],[222,3],[641,4],[685,3],[722,3],[1295,3],[1480,3],[1517,3]]},"213":{"position":[[138,3],[228,3],[298,3],[335,3],[907,3],[1022,4],[1066,3],[1103,3],[2091,3],[2181,3],[2366,3],[2403,3],[3216,3]]},"215":{"position":[[148,3],[238,3],[308,3],[345,3],[960,3],[1075,4],[1119,3],[1156,3],[2051,3],[2141,3],[2326,3],[2363,3],[3208,3],[5313,3],[5403,3],[5473,3],[5510,3],[6127,3],[6242,4],[6286,3],[6323,3],[7220,3],[7310,3],[7495,3],[7532,3],[8379,3]]},"221":{"position":[[1453,3],[1543,3],[1613,3],[1650,3],[2261,3],[2376,4],[2420,3],[2457,3],[3348,3],[3438,3],[3623,3],[3660,3],[4501,3],[6516,3],[6606,3],[6676,3],[6713,3],[7322,3],[7437,4],[7481,3],[7518,3],[8543,3],[8633,3],[8818,3],[8855,3],[9705,3],[11856,3],[11946,3],[12016,3],[12053,3],[12668,3],[12783,4],[12827,3],[12864,3],[13759,3],[13849,3],[14034,3],[14071,3],[14916,3],[16879,3],[16969,3],[17039,3],[17076,3],[17693,3],[17808,4],[17852,3],[17889,3],[18786,3],[18876,3],[19061,3],[19098,3],[19945,3]]},"230":{"position":[[400,3],[490,3],[560,3],[597,3],[1169,3],[1284,4],[1328,3],[1365,3],[2352,3],[2442,3],[2627,3],[2664,3],[3476,3]]},"232":{"position":[[191,3],[281,3],[351,3],[388,3],[1004,3],[1119,4],[1163,3],[1200,3],[2096,3],[2186,3],[2371,3],[2408,3],[3254,3]]},"245":{"position":[[448,3],[538,3],[608,3],[645,3],[1250,3],[1365,4],[1409,3],[1446,3],[2331,3],[2421,3],[2606,3],[2643,3],[3478,3]]},"247":{"position":[[159,3],[249,3],[319,3],[356,3],[924,3],[1039,4],[1083,3],[1120,3],[2103,3],[2193,3],[2378,3],[2415,3],[3223,3],[5220,3],[5310,3],[5380,3],[5417,3],[6023,3],[6138,4],[6182,3],[6219,3],[7105,3],[7195,3],[7380,3],[7417,3],[8253,3]]},"249":{"position":[[307,4]]},"253":{"position":[[193,4],[515,4],[837,4],[1124,4]]},"257":{"position":[[91,3],[161,3],[198,3],[617,4],[661,3],[698,3],[1271,3],[1456,3],[1493,3]]},"288":{"position":[[245,3],[335,3],[405,3],[442,3],[1005,3],[1120,4],[1164,3],[1201,3],[2180,3],[2270,3],[2455,3],[2492,3],[3296,3],[5149,3],[5239,3],[5309,3],[5346,3],[5911,3],[6026,4],[6070,3],[6107,3],[7087,3],[7177,3],[7362,3],[7399,3],[8204,3],[10327,3],[10417,3],[10487,3],[10524,3],[11273,3],[11388,4],[11432,3],[11469,3],[12725,3],[12815,3],[13000,3],[13037,3],[14057,3]]},"292":{"position":[[93,3],[146,4]]},"312":{"position":[[287,3],[377,3],[447,3],[484,3],[1100,3],[1215,4],[1259,3],[1296,3],[2192,3],[2282,3],[2467,3],[2504,3],[3350,3],[5317,3],[5407,3],[5477,3],[5514,3],[6129,3],[6244,4],[6288,3],[6325,3],[7220,3],[7310,3],[7495,3],[7532,3],[8377,3]]},"318":{"position":[[406,3],[496,3],[566,3],[603,3],[1234,3],[1349,4],[1393,3],[1430,3],[2477,3],[2567,3],[2752,3],[2789,3],[3661,3],[5891,3],[5981,3],[6051,3],[6088,3],[6704,3],[6819,4],[6863,3],[6900,3],[7796,3],[7886,3],[8071,3],[8108,3],[8954,3],[11125,3],[11215,3],[11285,3],[11322,3],[11938,3],[12053,4],[12097,3],[12134,3],[13030,3],[13120,3],[13305,3],[13342,3],[14188,3]]},"338":{"position":[[321,3],[411,3],[481,3],[518,3],[1141,3],[1256,4],[1300,3],[1337,3],[2240,3],[2330,3],[2515,3],[2552,3],[3405,3]]},"345":{"position":[[1265,3],[1355,3],[1425,3],[1462,3],[2075,3],[2190,4],[2234,3],[2271,3],[3164,3],[3254,3],[3439,3],[3476,3],[4319,3]]},"369":{"position":[[269,3],[359,3],[429,3],[466,3],[1203,3],[1318,4],[1362,3],[1399,3],[2608,3],[2698,3],[2883,3],[2920,3],[3908,3],[6205,3],[6295,3],[6365,3],[6402,3],[7020,3],[7135,4],[7179,3],[7216,3],[8114,3],[8204,3],[8389,3],[8426,3],[9274,3]]},"371":{"position":[[171,3],[261,3],[331,3],[368,3],[1215,3],[1330,4],[1374,3],[1411,3],[2730,3],[2820,3],[3005,3],[3042,3],[4140,3]]},"373":{"position":[[117,3],[207,3],[277,3],[314,3],[932,3],[1047,4],[1091,3],[1128,3],[2026,3],[2116,3],[2301,3],[2338,3],[3186,3]]},"385":{"position":[[200,3],[290,3],[360,3],[397,3],[981,3],[1096,4],[1140,3],[1177,3],[2177,3],[2267,3],[2452,3],[2489,3],[3314,3]]},"387":{"position":[[221,3],[311,3],[381,3],[418,3],[1041,3],[1156,4],[1200,3],[1237,3],[2140,3],[2230,3],[2415,3],[2452,3],[3305,3],[5471,3],[5561,3],[5631,3],[5668,3],[6292,3],[6407,4],[6451,3],[6488,3],[7392,3],[7482,3],[7667,3],[7704,3],[8558,3]]},"403":{"position":[[10495,3]]},"445":{"position":[[287,3],[377,3],[447,3],[484,3],[1103,3],[1218,4],[1262,3],[1299,3],[2198,3],[2288,3],[2473,3],[2510,3],[3359,3],[5338,3],[5428,3],[5498,3],[5535,3],[6153,3],[6268,4],[6312,3],[6349,3],[7247,3],[7337,3],[7522,3],[7559,3],[8407,3]]},"449":{"position":[[247,3],[337,3],[407,3],[444,3],[1064,3],[1179,4],[1223,3],[1260,3],[2160,3],[2250,3],[2435,3],[2472,3],[3322,3],[5462,3],[5552,3],[5622,3],[5659,3],[6279,3],[6394,4],[6438,3],[6475,3],[7375,3],[7465,3],[7650,3],[7687,3],[8537,3]]},"467":{"position":[[175,3],[265,3],[335,3],[372,3],[942,3],[1057,4],[1101,3],[1138,3],[2124,3],[2214,3],[2399,3],[2436,3],[3247,3]]},"469":{"position":[[177,3],[267,3],[337,3],[374,3],[1024,3],[1139,4],[1183,3],[1220,3],[2286,3],[2376,3],[2561,3],[2598,3],[3489,3]]},"471":{"position":[[294,3],[384,3],[454,3],[491,3],[1114,3],[1229,4],[1273,3],[1310,3],[2213,3],[2303,3],[2488,3],[2525,3],[3378,3]]},"485":{"position":[[361,3],[451,3],[521,3],[558,3],[1180,3],[1295,4],[1339,3],[1376,3],[2414,3],[2504,3],[2689,3],[2726,3],[3589,3]]},"487":{"position":[[426,3],[516,3],[586,3],[623,3],[1242,3],[1357,4],[1401,3],[1438,3],[2337,3],[2427,3],[2612,3],[2649,3],[3498,3]]},"505":{"position":[[409,3],[499,3],[569,3],[606,3],[1313,3],[1428,4],[1472,3],[1509,3],[2688,3],[2778,3],[2963,3],[3000,3],[3958,3],[6157,3],[6247,3],[6317,3],[6354,3],[6970,3],[7085,4],[7129,3],[7166,3],[8062,3],[8152,3],[8337,3],[8374,3],[9220,3],[11572,3],[11662,3],[11732,3],[11769,3],[12385,3],[12500,4],[12544,3],[12581,3],[13477,3],[13567,3],[13752,3],[13789,3],[14635,3],[16678,3],[16768,3],[16838,3],[16875,3],[17493,3],[17608,4],[17652,3],[17689,3],[18587,3],[18677,3],[18862,3],[18899,3],[19747,3],[21722,3],[21812,3],[21882,3],[21919,3],[22536,3],[22651,4],[22695,3],[22732,3],[23629,3],[23719,3],[23904,3],[23941,3],[24788,3]]},"521":{"position":[[184,3],[274,3],[344,3],[381,3],[953,3],[1068,4],[1112,3],[1149,3],[2137,3],[2227,3],[2412,3],[2449,3],[3262,3]]},"523":{"position":[[517,3],[607,3],[677,3],[714,3],[1363,3],[1478,4],[1522,3],[1559,3],[2624,3],[2714,3],[2899,3],[2936,3],[3826,3]]},"525":{"position":[[354,3],[444,3],[514,3],[551,3],[1176,3],[1291,4],[1335,3],[1372,3],[2277,3],[2367,3],[2552,3],[2589,3],[3444,3]]},"537":{"position":[[263,3],[353,3],[423,3],[460,3],[1083,3],[1198,4],[1242,3],[1279,3],[2374,3],[2464,3],[2649,3],[2686,3],[3560,3]]},"541":{"position":[[270,3],[360,3],[430,3],[467,3],[1086,3],[1201,4],[1245,3],[1282,3],[2373,3],[2463,3],[2648,3],[2685,3],[3555,3]]},"543":{"position":[[281,3],[371,3],[441,3],[478,3],[1049,3],[1164,4],[1208,3],[1245,3],[2232,3],[2322,3],[2507,3],[2544,3],[3356,3]]},"545":{"position":[[127,3],[217,3],[287,3],[324,3],[928,3],[1043,4],[1087,3],[1124,3],[2008,3],[2098,3],[2283,3],[2320,3],[3154,3],[5073,3],[5163,3],[5233,3],[5270,3],[5874,3],[5989,4],[6033,3],[6070,3],[6954,3],[7044,3],[7229,3],[7266,3],[8100,3]]},"547":{"position":[[164,3],[254,3],[324,3],[361,3],[925,3],[1040,4],[1084,3],[1121,3],[2100,3],[2190,3],[2375,3],[2412,3],[3216,3],[5062,3],[5152,3],[5222,3],[5259,3],[5864,3],[5979,4],[6023,3],[6060,3],[6945,3],[7035,3],[7220,3],[7257,3],[8092,3]]},"562":{"position":[[286,3],[376,3],[446,3],[483,3],[1097,3],[1212,4],[1256,3],[1293,3],[2187,3],[2277,3],[2462,3],[2499,3],[3343,3]]},"569":{"position":[[536,3],[626,3],[696,3],[733,3],[1397,3],[1512,4],[1556,3],[1593,3],[2577,3],[2667,3],[2852,3],[2889,3],[3754,3],[6108,3],[6198,3],[6268,3],[6305,3],[6950,3],[7065,4],[7109,3],[7146,3],[8092,3],[8182,3],[8367,3],[8404,3],[9248,3],[11524,3],[11614,3],[11684,3],[11721,3],[12376,3],[12491,4],[12535,3],[12572,3],[13528,3],[13618,3],[13803,3],[13840,3],[14694,3]]},"571":{"position":[[739,3],[829,3],[899,3],[936,3],[1482,3],[1597,4],[1641,3],[1678,3],[2544,3],[2634,3],[2819,3],[2856,3],[3603,3]]},"576":{"position":[[277,3],[367,3],[437,3],[474,3],[1127,3],[1242,4],[1286,3],[1323,3],[2311,3],[2401,3],[2586,3],[2623,3],[3513,3],[5611,3],[5701,3],[5771,3],[5808,3],[6461,3],[6576,4],[6620,3],[6657,3],[7645,3],[7735,3],[7920,3],[7957,3],[8847,3]]},"583":{"position":[[198,3],[288,3],[358,3],[395,3],[1125,3],[1240,4],[1284,3],[1321,3],[2389,3],[2479,3],[2664,3],[2701,3],[3689,3]]},"605":{"position":[[1414,3],[1504,3],[1574,3],[1611,3],[2226,3],[2341,4],[2385,3],[2422,3],[3317,3],[3407,3],[3592,3],[3629,3],[4474,3],[7007,3],[7097,3],[7167,3],[7204,3],[7819,3],[7934,4],[7978,3],[8015,3],[8910,3],[9000,3],[9185,3],[9222,3],[10067,3],[13249,3],[13339,3],[13409,3],[13446,3],[14064,3],[14179,4],[14223,3],[14260,3],[15158,3],[15248,3],[15433,3],[15470,3],[16318,3],[19504,3],[19594,3],[19664,3],[19701,3],[20316,3],[20431,4],[20475,3],[20512,3],[21407,3],[21497,3],[21682,3],[21719,3],[22564,3],[25161,3],[25251,3],[25321,3],[25358,3],[25974,3],[26089,4],[26133,3],[26170,3],[27066,3],[27156,3],[27341,3],[27378,3],[28224,3]]},"607":{"position":[[1259,3],[1349,3],[1419,3],[1456,3],[2072,3],[2187,4],[2231,3],[2268,3],[3164,3],[3254,3],[3439,3],[3476,3],[4322,3],[6928,3],[7018,3],[7088,3],[7125,3],[7744,3],[7859,4],[7903,3],[7940,3],[8839,3],[8929,3],[9114,3],[9151,3],[10000,3],[12689,3],[12779,3],[12849,3],[12886,3],[13503,3],[13618,4],[13662,3],[13699,3],[14596,3],[14686,3],[14871,3],[14908,3],[15755,3],[18431,3],[18521,3],[18591,3],[18628,3],[19245,3],[19360,4],[19404,3],[19441,3],[20338,3],[20428,3],[20613,3],[20650,3],[21497,3]]},"622":{"position":[[413,3],[503,3],[573,3],[610,3],[1298,3],[1413,4],[1457,3],[1494,3],[2598,3],[2688,3],[2873,3],[2910,3],[3839,3]]},"624":{"position":[[228,3],[318,3],[388,3],[425,3],[1051,3],[1166,4],[1210,3],[1247,3],[2153,3],[2243,3],[2428,3],[2465,3],[3321,3]]},"630":{"position":[[138,3],[228,3],[298,3],[335,3],[1122,3],[1237,4],[1281,3],[1318,3],[2577,3],[2667,3],[2852,3],[2889,3],[3927,3]]},"632":{"position":[[157,3],[247,3],[317,3],[354,3],[972,3],[1087,4],[1131,3],[1168,3],[2066,3],[2156,3],[2341,3],[2378,3],[3226,3]]},"634":{"position":[[138,3],[228,3],[298,3],[335,3],[979,3],[1094,4],[1138,3],[1175,3],[2234,3],[2324,3],[2509,3],[2546,3],[3430,3],[5527,3],[5617,3],[5687,3],[5724,3],[6343,3],[6458,4],[6502,3],[6539,3],[7438,3],[7528,3],[7713,3],[7750,3],[8599,3],[10577,3],[10667,3],[10737,3],[10774,3],[11396,3],[11511,4],[11555,3],[11592,3],[12494,3],[12584,3],[12769,3],[12806,3],[13658,3]]},"644":{"position":[[919,3],[1009,3],[1079,3],[1116,3],[1733,3],[1848,4],[1892,3],[1929,3],[2826,3],[2916,3],[3101,3],[3138,3],[3985,3],[5956,3],[6046,3],[6116,3],[6153,3],[6769,3],[6884,4],[6928,3],[6965,3],[7861,3],[7951,3],[8136,3],[8173,3],[9019,3]]},"646":{"position":[[228,3],[318,3],[388,3],[425,3],[1048,3],[1163,4],[1207,3],[1244,3],[2283,3],[2373,3],[2558,3],[2595,3],[3459,3],[5420,3],[5510,3],[5580,3],[5617,3],[6237,3],[6352,4],[6396,3],[6433,3],[7333,3],[7423,3],[7608,3],[7645,3],[8495,3]]},"648":{"position":[[203,3],[293,3],[363,3],[400,3],[1115,3],[1230,4],[1274,3],[1311,3],[2275,3],[2365,3],[2550,3],[2587,3],[3496,3],[5862,3],[5952,3],[6022,3],[6059,3],[6707,3],[6822,4],[6866,3],[6903,3],[8023,3],[8113,3],[8298,3],[8335,3],[9234,3],[11310,3],[11400,3],[11470,3],[11507,3],[12157,3],[12272,4],[12316,3],[12353,3],[13474,3],[13564,3],[13749,3],[13786,3],[14686,3],[16873,3],[16963,3],[17033,3],[17070,3],[17687,3],[17802,4],[17846,3],[17883,3],[18780,3],[18870,3],[19055,3],[19092,3],[19939,3],[21955,3],[22045,3],[22115,3],[22152,3],[22767,3],[22882,4],[22926,3],[22963,3],[23858,3],[23948,3],[24133,3],[24170,3],[25015,3]]},"668":{"position":[[4848,3],[4938,3],[5008,3],[5045,3],[5685,3],[5800,4],[5844,3],[5881,3],[6937,3],[7027,3],[7212,3],[7249,3],[8130,3]]},"670":{"position":[[1180,3],[1270,3],[1340,3],[1377,3],[2046,3],[2161,4],[2205,3],[2242,3],[3326,3],[3416,3],[3601,3],[3638,3],[4547,3]]},"692":{"position":[[555,3],[645,3],[715,3],[752,3],[1330,3],[1445,4],[1489,3],[1526,3],[2520,3],[2610,3],[2795,3],[2832,3],[3651,3],[5511,3],[5601,3],[5671,3],[5708,3],[6290,3],[6405,4],[6449,3],[6486,3],[7484,3],[7574,3],[7759,3],[7796,3],[8619,3],[10499,3],[10589,3],[10659,3],[10696,3],[11421,3],[11536,4],[11580,3],[11617,3],[12870,3],[12960,3],[13145,3],[13182,3],[14168,3],[16790,3],[16880,3],[16950,3],[16987,3],[17604,3],[17719,4],[17763,3],[17800,3],[18697,3],[18787,3],[18972,3],[19009,3],[19856,3],[21908,3],[21998,3],[22068,3],[22105,3],[22720,3],[22835,4],[22879,3],[22916,3],[23811,3],[23901,3],[24086,3],[24123,3],[24968,3]]},"694":{"position":[[2973,3],[3063,3],[3133,3],[3170,3],[3948,3],[4063,4],[4107,3],[4144,3],[5506,3],[5596,3],[5781,3],[5818,3],[6867,3],[9401,3],[9491,3],[9561,3],[9598,3],[10218,3],[10333,4],[10377,3],[10414,3],[11314,3],[11404,3],[11589,3],[11626,3],[12476,3]]},"696":{"position":[[2876,3],[2966,3],[3036,3],[3073,3],[3739,3],[3854,4],[3898,3],[3935,3],[5073,3],[5163,3],[5348,3],[5385,3],[6302,3],[8569,3],[8659,3],[8729,3],[8766,3],[9627,3],[9742,4],[9786,3],[9823,3],[11268,3],[11358,3],[11543,3],[11580,3],[12712,3],[15668,3],[15758,3],[15828,3],[15865,3],[16479,3],[16594,4],[16638,3],[16675,3],[17569,3],[17659,3],[17844,3],[17881,3],[18725,3]]},"698":{"position":[[3071,3],[3161,3],[3231,3],[3268,3],[3996,3],[4111,4],[4155,3],[4192,3],[5448,3],[5538,3],[5723,3],[5760,3],[6749,3],[9377,3],[9467,3],[9537,3],[9574,3],[10193,3],[10308,4],[10352,3],[10389,3],[11288,3],[11378,3],[11563,3],[11600,3],[12449,3]]},"718":{"position":[[2112,3],[2202,3],[2272,3],[2309,3],[2946,3],[3061,4],[3105,3],[3142,3],[4195,3],[4285,3],[4470,3],[4507,3],[5385,3],[7391,3],[7481,3],[7551,3],[7588,3],[8211,3],[8326,4],[8370,3],[8407,3],[9310,3],[9400,3],[9585,3],[9622,3],[10475,3],[12538,3],[12628,3],[12698,3],[12735,3],[13372,3],[13487,4],[13531,3],[13568,3],[14621,3],[14711,3],[14896,3],[14933,3],[15811,3],[17774,3],[17864,3],[17934,3],[17971,3],[18594,3],[18709,4],[18753,3],[18790,3],[19693,3],[19783,3],[19968,3],[20005,3],[20858,3],[22930,3],[23020,3],[23090,3],[23127,3],[23757,3],[23872,4],[23916,3],[23953,3],[24863,3],[24953,3],[25138,3],[25175,3],[26035,3],[28497,3],[28587,3],[28657,3],[28694,3],[29581,3],[29696,4],[29740,3],[29777,3],[31192,3],[31282,3],[31467,3],[31504,3],[32652,3],[35344,3],[35434,3],[35504,3],[35541,3],[36164,3],[36279,4],[36323,3],[36360,3],[37263,3],[37353,3],[37538,3],[37575,3],[38428,3]]},"720":{"position":[[173,3],[263,3],[333,3],[370,3],[988,3],[1103,4],[1147,3],[1184,3],[2082,3],[2172,3],[2357,3],[2394,3],[3242,3],[6873,3],[6963,3],[7033,3],[7070,3],[7687,3],[7802,4],[7846,3],[7883,3],[8780,3],[8870,3],[9055,3],[9092,3],[9939,3]]},"722":{"position":[[6917,3],[7007,3],[7077,3],[7114,3],[7916,3],[8031,4],[8075,3],[8112,3],[9442,3],[9532,3],[9717,3],[9754,3],[10817,3],[13513,3],[13603,3],[13673,3],[13710,3],[14416,3],[14531,4],[14575,3],[14612,3],[15734,3],[15824,3],[16009,3],[16046,3],[16993,3],[19250,3],[19340,3],[19410,3],[19447,3],[20197,3],[20312,4],[20356,3],[20393,3],[21615,3],[21705,3],[21890,3],[21927,3],[22928,3],[25275,3],[25365,3],[25435,3],[25472,3],[26137,3],[26252,4],[26296,3],[26333,3],[27470,3],[27560,3],[27745,3],[27782,3],[28698,3],[30928,3],[31018,3],[31088,3],[31125,3],[31733,3],[31848,4],[31892,3],[31929,3],[32953,3],[33043,3],[33228,3],[33265,3],[34114,3],[36093,3],[36183,3],[36253,3],[36290,3],[36881,3],[36996,4],[37040,3],[37077,3],[38084,3],[38174,3],[38359,3],[38396,3],[39228,3],[41289,3],[41379,3],[41449,3],[41486,3],[42101,3],[42216,4],[42260,3],[42297,3],[43192,3],[43282,3],[43467,3],[43504,3],[44349,3],[46381,3],[46471,3],[46541,3],[46578,3],[47208,3],[47323,4],[47367,3],[47404,3],[48314,3],[48404,3],[48589,3],[48626,3],[49486,3]]},"734":{"position":[[2646,3],[2736,3],[2806,3],[2843,3],[3941,3],[4056,4],[4100,3],[4137,3],[5819,3],[5909,3],[6094,3],[6131,3],[7500,3]]},"740":{"position":[[473,3],[563,3],[633,3],[670,3],[1283,3],[1398,4],[1442,3],[1479,3],[2372,3],[2462,3],[2647,3],[2684,3],[3527,3],[5584,3],[5674,3],[5744,3],[5781,3],[6398,3],[6513,4],[6557,3],[6594,3],[7491,3],[7581,3],[7766,3],[7803,3],[8650,3],[10728,3],[10818,3],[10888,3],[10925,3],[11563,3],[11678,4],[11722,3],[11759,3],[12813,3],[12903,3],[13088,3],[13125,3],[14004,3],[15940,3],[16030,3],[16100,3],[16137,3],[16751,3],[16866,4],[16910,3],[16947,3],[17841,3],[17931,3],[18116,3],[18153,3],[18997,3]]},"742":{"position":[[4588,3],[4678,3],[4748,3],[4785,3],[5394,3],[5509,4],[5553,3],[5590,3],[6479,3],[6569,3],[6754,3],[6791,3],[7630,3],[9820,3],[9910,3],[9980,3],[10017,3],[11023,3],[11138,4],[11182,3],[11219,3],[12753,3],[12843,3],[13028,3],[13065,3],[14332,3],[17360,3],[17450,3],[17520,3],[17557,3],[18318,3],[18433,4],[18477,3],[18514,3],[19747,3],[19837,3],[20022,3],[20059,3],[21071,3],[23482,3],[23572,3],[23642,3],[23679,3],[24292,3],[24407,4],[24451,3],[24488,3],[25381,3],[25471,3],[25656,3],[25693,3],[26536,3]]},"744":{"position":[[1133,3],[1223,3],[1293,3],[1330,3],[2147,3],[2262,4],[2306,3],[2343,3],[3631,3],[3721,3],[3906,3],[3943,3],[5010,3],[7828,3],[7918,3],[7988,3],[8025,3],[8823,3],[8938,4],[8982,3],[9019,3],[10247,3],[10337,3],[10522,3],[10559,3],[11622,3],[14284,3],[14374,3],[14444,3],[14481,3],[15280,3],[15395,4],[15439,3],[15476,3],[16705,3],[16795,3],[16980,3],[17017,3],[18081,3]]},"746":{"position":[[3374,3],[3464,3],[3534,3],[3571,3],[5925,3],[6040,4],[6084,3],[6121,3],[9507,3],[9597,3],[9782,3],[9819,3],[12524,3]]},"767":{"position":[[242,3],[332,3],[402,3],[439,3],[1856,3],[1971,4],[2015,3],[2052,3],[4165,3],[4255,3],[4440,3],[4477,3],[6185,3],[10198,3],[10288,3],[10358,3],[10395,3],[11352,3],[11467,4],[11511,3],[11548,3],[13033,3],[13123,3],[13308,3],[13345,3],[14563,3],[17379,3],[17469,3],[17539,3],[17576,3],[18463,3],[18578,4],[18622,3],[18659,3],[20074,3],[20164,3],[20349,3],[20386,3],[21534,3],[25037,3],[25127,3],[25197,3],[25234,3],[25850,3],[25965,4],[26009,3],[26046,3],[26942,3],[27032,3],[27217,3],[27254,3],[28100,3],[30216,3],[30306,3],[30376,3],[30413,3],[31030,3],[31145,4],[31189,3],[31226,3],[32123,3],[32213,3],[32398,3],[32435,3],[33282,3],[35252,3],[35342,3],[35412,3],[35449,3],[36069,3],[36184,4],[36228,3],[36265,3],[37165,3],[37255,3],[37440,3],[37477,3],[38327,3],[40310,3],[40400,3],[40470,3],[40507,3],[41128,3],[41243,4],[41287,3],[41324,3],[42225,3],[42315,3],[42500,3],[42537,3],[43388,3]]},"769":{"position":[[338,3],[428,3],[498,3],[535,3],[1152,3],[1267,4],[1311,3],[1348,3],[2245,3],[2335,3],[2520,3],[2557,3],[3404,3],[7673,3],[7763,3],[7833,3],[7870,3],[8483,3],[8598,4],[8642,3],[8679,3],[9572,3],[9662,3],[9847,3],[9884,3],[10727,3],[13013,3],[13103,3],[13173,3],[13210,3],[13832,3],[13947,4],[13991,3],[14028,3],[14930,3],[15020,3],[15205,3],[15242,3],[16094,3],[22761,3],[22851,3],[22921,3],[22958,3],[23579,3],[23694,4],[23738,3],[23775,3],[24676,3],[24766,3],[24951,3],[24988,3],[25839,3],[30424,3],[30514,3],[30584,3],[30621,3],[31233,3],[31348,4],[31392,3],[31429,3],[32321,3],[32411,3],[32596,3],[32633,3],[33475,3],[39411,3],[39501,3],[39571,3],[39608,3],[40220,3],[40335,4],[40379,3],[40416,3],[41308,3],[41398,3],[41583,3],[41620,3],[42462,3]]},"786":{"position":[[1873,3],[1963,3],[2033,3],[2070,3],[2649,3],[2764,4],[2808,3],[2845,3],[3840,3],[3930,3],[4115,3],[4152,3],[4972,3],[6864,3],[6954,3],[7024,3],[7061,3],[7679,3],[7794,4],[7838,3],[7875,3],[8773,3],[8863,3],[9048,3],[9085,3],[9933,3],[11972,3],[12062,3],[12132,3],[12169,3],[12748,3],[12863,4],[12907,3],[12944,3],[13939,3],[14029,3],[14214,3],[14251,3],[15071,3],[16920,3],[17010,3],[17080,3],[17117,3],[17735,3],[17850,4],[17894,3],[17931,3],[18829,3],[18919,3],[19104,3],[19141,3],[19989,3],[21964,3],[22054,3],[22124,3],[22161,3],[22780,3],[22895,4],[22939,3],[22976,3],[23875,3],[23965,3],[24150,3],[24187,3],[25036,3],[29115,3],[29205,3],[29275,3],[29312,3],[29930,3],[30045,4],[30089,3],[30126,3],[31024,3],[31114,3],[31299,3],[31336,3],[32184,3],[34159,3],[34249,3],[34319,3],[34356,3],[34974,3],[35089,4],[35133,3],[35170,3],[36068,3],[36158,3],[36343,3],[36380,3],[37228,3]]},"788":{"position":[[2392,3],[2482,3],[2552,3],[2589,3],[3397,3],[3512,4],[3556,3],[3593,3],[4873,3],[4963,3],[5148,3],[5185,3],[6244,3],[8859,3],[8949,3],[9019,3],[9056,3],[9676,3],[9791,4],[9835,3],[9872,3],[10772,3],[10862,3],[11047,3],[11084,3],[11934,3]]},"790":{"position":[[343,3],[433,3],[503,3],[540,3],[1143,3],[1258,4],[1302,3],[1339,3],[2358,3],[2448,3],[2633,3],[2670,3],[3514,3],[5867,3],[5957,3],[6027,3],[6064,3],[6699,3],[6814,4],[6858,3],[6895,3],[7946,3],[8036,3],[8221,3],[8258,3],[9134,3],[11062,3],[11152,3],[11222,3],[11259,3],[11877,3],[11992,4],[12036,3],[12073,3],[12971,3],[13061,3],[13246,3],[13283,3],[14131,3]]},"792":{"position":[[2986,3],[3076,3],[3146,3],[3183,3],[3846,3],[3961,4],[4005,3],[4042,3],[5177,3],[5267,3],[5452,3],[5489,3],[6403,3],[9041,3],[9131,3],[9201,3],[9238,3],[9860,3],[9975,4],[10019,3],[10056,3],[10958,3],[11048,3],[11233,3],[11270,3],[12122,3],[15593,3],[15683,3],[15753,3],[15790,3],[16391,3],[16506,4],[16550,3],[16587,3],[17604,3],[17694,3],[17879,3],[17916,3],[18758,3]]},"809":{"position":[[1870,3],[1960,3],[2030,3],[2067,3],[2649,3],[2764,4],[2808,3],[2845,3],[3843,3],[3933,3],[4118,3],[4155,3],[4978,3],[6882,3],[6972,3],[7042,3],[7079,3],[7700,3],[7815,4],[7859,3],[7896,3],[8797,3],[8887,3],[9072,3],[9109,3],[9960,3],[12009,3],[12099,3],[12169,3],[12206,3],[12784,3],[12899,4],[12943,3],[12980,3],[13974,3],[14064,3],[14249,3],[14286,3],[15105,3],[16951,3],[17041,3],[17111,3],[17148,3],[17765,3],[17880,4],[17924,3],[17961,3],[18858,3],[18948,3],[19133,3],[19170,3],[20017,3],[21988,3],[22078,3],[22148,3],[22185,3],[22804,3],[22919,4],[22963,3],[23000,3],[23899,3],[23989,3],[24174,3],[24211,3],[25060,3],[28627,3],[28717,3],[28787,3],[28824,3],[29441,3],[29556,4],[29600,3],[29637,3],[30534,3],[30624,3],[30809,3],[30846,3],[31693,3],[33664,3],[33754,3],[33824,3],[33861,3],[34479,3],[34594,4],[34638,3],[34675,3],[35573,3],[35663,3],[35848,3],[35885,3],[36733,3]]},"811":{"position":[[2149,3],[2239,3],[2309,3],[2346,3],[3245,3],[3360,4],[3404,3],[3441,3],[4924,3],[5014,3],[5199,3],[5236,3],[6406,3],[9330,3],[9420,3],[9490,3],[9527,3],[10148,3],[10263,4],[10307,3],[10344,3],[11245,3],[11335,3],[11520,3],[11557,3],[12408,3]]},"813":{"position":[[1982,3],[2072,3],[2142,3],[2179,3],[2957,3],[3072,4],[3116,3],[3153,3],[4403,3],[4493,3],[4678,3],[4715,3],[5744,3],[8460,3],[8550,3],[8620,3],[8657,3],[9281,3],[9396,4],[9440,3],[9477,3],[10381,3],[10471,3],[10656,3],[10693,3],[11547,3]]},"815":{"position":[[2854,3],[2944,3],[3014,3],[3051,3],[4002,3],[4117,4],[4161,3],[4198,3],[5677,3],[5767,3],[5952,3],[5989,3],[7201,3],[9988,3],[10078,3],[10148,3],[10185,3],[10810,3],[10925,4],[10969,3],[11006,3],[11911,3],[12001,3],[12186,3],[12223,3],[13078,3],[15157,3],[15247,3],[15317,3],[15354,3],[15981,3],[16096,4],[16140,3],[16177,3],[17084,3],[17174,3],[17359,3],[17396,3],[18253,3],[20263,3],[20353,3],[20423,3],[20460,3],[21089,3],[21204,4],[21248,3],[21285,3],[22194,3],[22284,3],[22469,3],[22506,3],[23365,3],[25462,3],[25552,3],[25622,3],[25659,3],[26286,3],[26401,4],[26445,3],[26482,3],[27389,3],[27479,3],[27664,3],[27701,3],[28558,3],[30568,3],[30658,3],[30728,3],[30765,3],[31392,3],[31507,4],[31551,3],[31588,3],[32495,3],[32585,3],[32770,3],[32807,3],[33664,3]]}}}],["sdk/.net",{"_index":441,"t":{"16":{"position":[[17529,8],[23288,8]]}}}],["sdk/go",{"_index":440,"t":{"16":{"position":[[17522,6],[23281,6]]}}}],["search",{"_index":849,"t":{"102":{"position":[[1071,6]]},"140":{"position":[[199,6]]},"200":{"position":[[744,6],[781,6]]},"263":{"position":[[73,6],[217,6],[279,6],[484,6],[763,6]]},"271":{"position":[[295,7]]},"273":{"position":[[142,6],[344,6],[396,6],[474,6],[704,6],[1365,6],[1541,6],[1671,6],[1777,6],[2213,6],[2249,6],[2460,9],[2615,6],[2759,9],[3172,6],[3404,6],[3423,6],[3476,9],[3626,7],[3637,9]]},"275":{"position":[[157,6],[323,6],[361,6],[610,7]]},"471":{"position":[[5814,9]]},"581":{"position":[[186,6]]},"583":{"position":[[101,6]]},"672":{"position":[[9620,6]]},"746":{"position":[[19123,6]]},"817":{"position":[[60,6],[100,6]]}}}],["second",{"_index":1552,"t":{"399":{"position":[[2018,6],[2119,7],[2164,7],[3755,6],[4706,6]]},"585":{"position":[[340,6]]},"605":{"position":[[12950,6]]},"702":{"position":[[13,6]]},"786":{"position":[[26996,6]]},"809":{"position":[[27020,6]]}}}],["secret",{"_index":733,"t":{"96":{"position":[[380,7]]},"144":{"position":[[252,6]]},"172":{"position":[[101,6]]}}}],["section",{"_index":0,"t":{"2":{"position":[[5,7]]},"50":{"position":[[20,8]]},"54":{"position":[[51,8]]},"70":{"position":[[20,8]]},"72":{"position":[[101,7]]},"82":{"position":[[29,8]]},"88":{"position":[[5,7]]},"100":{"position":[[29,8]]},"106":{"position":[[5,7]]},"116":{"position":[[29,7]]},"118":{"position":[[5,7]]},"128":{"position":[[29,7]]},"134":{"position":[[20,8]]},"162":{"position":[[20,8]]},"182":{"position":[[20,8]]},"184":{"position":[[5,7]]},"196":{"position":[[20,8]]},"198":{"position":[[5,7],[172,7]]},"217":{"position":[[20,8]]},"234":{"position":[[20,8]]},"249":{"position":[[20,8]]},"251":{"position":[[5,7]]},"292":{"position":[[20,8]]},"294":{"position":[[5,7],[124,7]]},"298":{"position":[[5,7],[131,7]]},"320":{"position":[[20,8]]},"322":{"position":[[5,7],[108,7]]},"340":{"position":[[20,8]]},"351":{"position":[[18,8]]},"375":{"position":[[20,8]]},"389":{"position":[[20,8]]},"397":{"position":[[171,8]]},"409":{"position":[[20,8]]},"411":{"position":[[5,7],[96,7]]},"433":{"position":[[21,8]]},"451":{"position":[[20,8]]},"473":{"position":[[20,8]]},"489":{"position":[[20,8]]},"507":{"position":[[20,8]]},"527":{"position":[[20,8]]},"549":{"position":[[20,8]]},"605":{"position":[[12439,8]]},"607":{"position":[[8,8]]},"609":{"position":[[20,8]]},"636":{"position":[[20,8]]},"652":{"position":[[21,8]]},"654":{"position":[[5,7]]},"674":{"position":[[20,8]]},"694":{"position":[[2836,8]]},"696":{"position":[[20685,7]]},"712":{"position":[[42,8]]},"718":{"position":[[169,7]]},"722":{"position":[[1483,7],[1598,7]]},"728":{"position":[[5,7]]},"750":{"position":[[20,8]]},"767":{"position":[[117,9]]},"786":{"position":[[78,7]]},"788":{"position":[[157,7]]},"790":{"position":[[16071,7]]},"792":{"position":[[355,7],[14105,7],[14785,7]]},"809":{"position":[[172,7]]},"811":{"position":[[135,7]]},"813":{"position":[[208,7],[13538,7],[14284,7]]},"817":{"position":[[29,8]]}}}],["secur",{"_index":828,"t":{"100":{"position":[[211,8]]},"591":{"position":[[352,8]]},"676":{"position":[[210,8]]},"678":{"position":[[627,8],[1187,8],[1226,8]]},"682":{"position":[[73,8]]},"684":{"position":[[28,8],[251,8],[303,8]]},"686":{"position":[[225,8],[331,8]]},"690":{"position":[[25,8],[296,8]]},"692":{"position":[[32,8],[125,8]]},"694":{"position":[[158,8],[326,8],[2510,8],[2598,8]]},"696":{"position":[[154,8],[206,8],[2718,8],[8364,8]]},"702":{"position":[[178,8],[260,8]]}}}],["security_guard",{"_index":1795,"t":{"491":{"position":[[862,14]]},"694":{"position":[[707,14],[1228,15],[1299,14],[1366,14],[1535,17],[1716,16],[1895,16],[2140,17],[2903,15],[3629,17],[3766,17],[6518,17],[6675,17]]},"696":{"position":[[408,15],[500,17],[636,17],[885,15],[984,14],[1051,14],[1167,15],[1322,17],[1503,16],[1682,16],[1979,17],[2090,16],[2430,17],[2566,17],[3535,17],[6088,17],[8392,14],[9250,17],[9345,17],[12305,17],[12410,17]]},"698":{"position":[[213,14],[330,14],[741,15],[830,14],[887,14],[993,15],[1148,17],[1313,16],[1476,16],[1757,17],[1868,16],[1967,17],[2103,17],[2483,14],[2787,14],[2889,14]]}}}],["see",{"_index":200,"t":{"16":{"position":[[3102,3],[4473,3],[5189,3],[7497,3],[9457,3],[12483,3],[13297,3],[14507,3],[18095,3],[18909,3],[20119,3],[22935,3],[23867,3],[24686,3],[25897,3],[28767,3],[29355,3],[30280,3]]},"66":{"position":[[1063,3]]},"80":{"position":[[931,3],[2070,3],[3807,3]]},"98":{"position":[[759,3],[2684,3]]},"112":{"position":[[204,3],[704,3],[1499,3]]},"116":{"position":[[155,3]]},"124":{"position":[[204,3],[704,3],[1499,3]]},"128":{"position":[[169,3]]},"146":{"position":[[399,3]]},"150":{"position":[[298,3]]},"156":{"position":[[422,3]]},"172":{"position":[[352,3]]},"190":{"position":[[204,3],[704,3],[1499,3]]},"213":{"position":[[317,3],[1085,3],[2385,3]]},"215":{"position":[[32,3],[327,3],[1138,3],[2345,3],[5492,3],[6305,3],[7514,3]]},"221":{"position":[[1359,3],[1632,3],[2439,3],[3642,3],[6695,3],[7500,3],[8837,3],[11608,3],[12035,3],[12846,3],[14053,3],[17058,3],[17871,3],[19080,3]]},"230":{"position":[[579,3],[1347,3],[2646,3]]},"232":{"position":[[370,3],[1182,3],[2390,3]]},"245":{"position":[[333,3],[627,3],[1428,3],[2625,3]]},"247":{"position":[[338,3],[1102,3],[2397,3],[5399,3],[6201,3],[7399,3]]},"257":{"position":[[180,3],[680,3],[1475,3]]},"259":{"position":[[2905,3]]},"273":{"position":[[2599,6]]},"288":{"position":[[424,3],[1183,3],[2474,3],[5328,3],[6089,3],[7381,3],[10506,3],[11451,3],[13019,3]]},"304":{"position":[[21,3]]},"312":{"position":[[137,3],[466,3],[1278,3],[2486,3],[5496,3],[6307,3],[7514,3]]},"316":{"position":[[288,3]]},"318":{"position":[[585,3],[1412,3],[2771,3],[6070,3],[6882,3],[8090,3],[11304,3],[12116,3],[13324,3]]},"338":{"position":[[500,3],[1319,3],[2534,3]]},"340":{"position":[[105,3],[203,3]]},"345":{"position":[[986,3],[1444,3],[2253,3],[3458,3]]},"347":{"position":[[692,3],[1196,3]]},"349":{"position":[[228,3],[515,3],[784,3]]},"351":{"position":[[0,3]]},"369":{"position":[[448,3],[1381,3],[2902,3],[6384,3],[7198,3],[8408,3]]},"371":{"position":[[350,3],[1393,3],[3024,3]]},"373":{"position":[[296,3],[1110,3],[2320,3]]},"385":{"position":[[379,3],[1159,3],[2471,3]]},"387":{"position":[[400,3],[1219,3],[2434,3],[5650,3],[6470,3],[7686,3]]},"407":{"position":[[181,3]]},"425":{"position":[[1476,3]]},"445":{"position":[[136,3],[466,3],[1281,3],[2492,3],[5517,3],[6331,3],[7541,3]]},"449":{"position":[[426,3],[1242,3],[2454,3],[5641,3],[6457,3],[7669,3]]},"461":{"position":[[752,3]]},"467":{"position":[[354,3],[1120,3],[2418,3]]},"469":{"position":[[356,3],[1202,3],[2580,3]]},"471":{"position":[[473,3],[1292,3],[2507,3],[6216,3]]},"473":{"position":[[229,3],[373,3]]},"485":{"position":[[540,3],[1358,3],[2708,3]]},"487":{"position":[[605,3],[1420,3],[2631,3]]},"505":{"position":[[588,3],[1491,3],[2982,3],[6336,3],[7148,3],[8356,3],[11751,3],[12563,3],[13771,3],[16857,3],[17671,3],[18881,3],[21901,3],[22714,3],[23923,3]]},"507":{"position":[[220,3],[318,3]]},"521":{"position":[[363,3],[1131,3],[2431,3]]},"523":{"position":[[696,3],[1541,3],[2918,3]]},"525":{"position":[[533,3],[1354,3],[2571,3]]},"527":{"position":[[169,3]]},"537":{"position":[[442,3],[1261,3],[2668,3]]},"541":{"position":[[449,3],[1264,3],[2667,3]]},"543":{"position":[[460,3],[1227,3],[2526,3]]},"545":{"position":[[306,3],[1106,3],[2302,3],[5252,3],[6052,3],[7248,3]]},"547":{"position":[[343,3],[1103,3],[2394,3],[5241,3],[6042,3],[7239,3]]},"562":{"position":[[465,3],[1275,3],[2481,3]]},"569":{"position":[[715,3],[1575,3],[2871,3],[6287,3],[7128,3],[8386,3],[11703,3],[12554,3],[13822,3]]},"571":{"position":[[918,3],[1660,3],[2838,3]]},"576":{"position":[[456,3],[1305,3],[2605,3],[5790,3],[6639,3],[7939,3]]},"583":{"position":[[55,3],[97,3],[377,3],[1303,3],[2683,3]]},"585":{"position":[[189,3]]},"605":{"position":[[978,3],[1271,3],[1593,3],[2404,3],[3611,3],[6864,3],[7186,3],[7997,3],[9204,3],[12423,3],[13103,3],[13428,3],[14242,3],[15452,3],[19356,3],[19683,3],[20494,3],[21701,3],[24704,3],[25012,3],[25340,3],[26152,3],[27360,3]]},"607":{"position":[[838,3],[1115,3],[1438,3],[2250,3],[3458,3],[6477,3],[6781,3],[7107,3],[7922,3],[9133,3],[12544,3],[12868,3],[13681,3],[14890,3],[18281,3],[18610,3],[19423,3],[20632,3]]},"609":{"position":[[324,3]]},"622":{"position":[[592,3],[1476,3],[2892,3]]},"624":{"position":[[407,3],[1229,3],[2447,3]]},"630":{"position":[[317,3],[1300,3],[2871,3]]},"632":{"position":[[336,3],[1150,3],[2360,3],[5150,3]]},"634":{"position":[[317,3],[1157,3],[2528,3],[5706,3],[6521,3],[7732,3],[10756,3],[11574,3],[12788,3]]},"644":{"position":[[1098,3],[1911,3],[3120,3],[6135,3],[6947,3],[8155,3]]},"646":{"position":[[407,3],[1226,3],[2577,3],[5599,3],[6415,3],[7627,3]]},"648":{"position":[[382,3],[1293,3],[2569,3],[6041,3],[6885,3],[8317,3],[11489,3],[12335,3],[13768,3],[17052,3],[17865,3],[19074,3],[22134,3],[22945,3],[24152,3]]},"668":{"position":[[5027,3],[5863,3],[7231,3]]},"670":{"position":[[1359,3],[2224,3],[3620,3]]},"676":{"position":[[155,3]]},"692":{"position":[[734,3],[1508,3],[2814,3],[5690,3],[6468,3],[7778,3],[10678,3],[11599,3],[13164,3],[16648,3],[16969,3],[17782,3],[18991,3],[22087,3],[22898,3],[24105,3]]},"694":{"position":[[3152,3],[4126,3],[5800,3],[9580,3],[10396,3],[11608,3]]},"696":{"position":[[3055,3],[3917,3],[5367,3],[8748,3],[9805,3],[11562,3],[15847,3],[16657,3],[17863,3],[20729,3]]},"698":{"position":[[2698,3],[3250,3],[4174,3],[5742,3],[9556,3],[10371,3],[11582,3],[14419,4]]},"704":{"position":[[285,3],[543,3]]},"712":{"position":[[203,3]]},"718":{"position":[[2291,3],[3124,3],[4489,3],[7570,3],[8389,3],[9604,3],[12717,3],[13550,3],[14915,3],[17953,3],[18772,3],[19987,3],[23109,3],[23935,3],[25157,3],[28676,3],[29759,3],[31486,3],[35523,3],[36342,3],[37557,3]]},"720":{"position":[[352,3],[1166,3],[2376,3],[7052,3],[7865,3],[9074,3]]},"722":{"position":[[7096,3],[8094,3],[9736,3],[13692,3],[14594,3],[16028,3],[19429,3],[20375,3],[21909,3],[25454,3],[26315,3],[27764,3],[31107,3],[31911,3],[33247,3],[36272,3],[37059,3],[38378,3],[41468,3],[42279,3],[43486,3],[46560,3],[47386,3],[48608,3]]},"734":{"position":[[2825,3],[4119,3],[6113,3]]},"740":{"position":[[652,3],[1461,3],[2666,3],[5763,3],[6576,3],[7785,3],[10907,3],[11741,3],[13107,3],[16119,3],[16929,3],[18135,3],[21003,3]]},"742":{"position":[[4767,3],[5572,3],[6773,3],[9999,3],[11201,3],[13047,3],[17539,3],[18496,3],[20041,3],[23661,3],[24470,3],[25675,3]]},"744":{"position":[[1312,3],[2325,3],[3925,3],[8007,3],[9001,3],[10541,3],[14463,3],[15458,3],[16999,3]]},"746":{"position":[[3553,3],[6103,3],[9801,3]]},"767":{"position":[[421,3],[2034,3],[4459,3],[10377,3],[11530,3],[13327,3],[17558,3],[18641,3],[20368,3],[25216,3],[26028,3],[27236,3],[30395,3],[31208,3],[32417,3],[35431,3],[36247,3],[37459,3],[40489,3],[41306,3],[42519,3]]},"769":{"position":[[517,3],[1330,3],[2539,3],[7852,3],[8661,3],[9866,3],[12924,3],[13192,3],[14010,3],[15224,3],[22940,3],[23757,3],[24970,3],[30603,3],[31411,3],[32615,3],[39590,3],[40398,3],[41602,3]]},"773":{"position":[[286,3],[546,3]]},"786":{"position":[[2052,3],[2827,3],[4134,3],[7043,3],[7857,3],[9067,3],[12151,3],[12926,3],[14233,3],[17099,3],[17913,3],[19123,3],[22143,3],[22958,3],[24169,3],[29294,3],[30108,3],[31318,3],[34338,3],[35152,3],[36362,3]]},"788":{"position":[[2571,3],[3575,3],[5167,3],[9038,3],[9854,3],[11066,3]]},"790":{"position":[[522,3],[1321,3],[2652,3],[6046,3],[6877,3],[8240,3],[11241,3],[12055,3],[13265,3]]},"792":{"position":[[3165,3],[4024,3],[5471,3],[9220,3],[10038,3],[11252,3],[15772,3],[16569,3],[17898,3]]},"796":{"position":[[168,3],[436,3],[979,3]]},"809":{"position":[[2049,3],[2827,3],[4137,3],[7061,3],[7878,3],[9091,3],[12188,3],[12962,3],[14268,3],[17130,3],[17943,3],[19152,3],[22167,3],[22982,3],[24193,3],[28806,3],[29619,3],[30828,3],[33843,3],[34657,3],[35867,3]]},"811":{"position":[[2328,3],[3423,3],[5218,3],[9509,3],[10326,3],[11539,3]]},"813":{"position":[[2161,3],[3135,3],[4697,3],[8639,3],[9459,3],[10675,3]]},"815":{"position":[[3033,3],[4180,3],[5971,3],[10167,3],[10988,3],[12205,3],[15336,3],[16159,3],[17378,3],[20442,3],[21267,3],[22488,3],[25641,3],[26464,3],[27683,3],[30747,3],[31570,3],[32789,3]]}}}],["seen",{"_index":1392,"t":{"312":{"position":[[10498,4]]},"353":{"position":[[319,4]]},"403":{"position":[[5728,4]]},"539":{"position":[[1123,4]]}}}],["self",{"_index":1647,"t":{"415":{"position":[[492,4]]},"419":{"position":[[173,4],[217,4],[239,4],[307,4],[329,4],[2171,4],[2211,4]]},"429":{"position":[[1105,4],[1127,4]]}}}],["semant",{"_index":1695,"t":{"425":{"position":[[3464,10]]}}}],["send",{"_index":1289,"t":{"261":{"position":[[1964,4]]},"288":{"position":[[10038,4]]},"290":{"position":[[22,4]]},"583":{"position":[[6141,5]]}}}],["sens",{"_index":1314,"t":{"273":{"position":[[1246,6]]},"326":{"position":[[219,5]]},"403":{"position":[[1928,5],[2007,5],[2142,5]]},"423":{"position":[[978,5]]},"786":{"position":[[26982,5]]},"809":{"position":[[27006,5]]}}}],["sensit",{"_index":1144,"t":{"176":{"position":[[147,9]]},"435":{"position":[[506,9]]}}}],["sent",{"_index":208,"t":{"16":{"position":[[3298,4],[29189,4]]},"52":{"position":[[623,4]]},"259":{"position":[[2598,5]]},"290":{"position":[[633,4]]},"670":{"position":[[661,4]]},"744":{"position":[[7527,4]]}}}],["sentenc",{"_index":1542,"t":{"397":{"position":[[1170,9],[1330,10]]}}}],["separ",{"_index":220,"t":{"16":{"position":[[3832,8],[3980,8]]},"401":{"position":[[2613,8]]},"403":{"position":[[7718,10]]},"813":{"position":[[352,8]]}}}],["serv",{"_index":891,"t":{"138":{"position":[[368,5],[404,5]]},"148":{"position":[[419,5]]},"150":{"position":[[193,7]]},"154":{"position":[[338,5]]},"431":{"position":[[719,5]]}}}],["server",{"_index":606,"t":{"74":{"position":[[38,7]]},"76":{"position":[[88,7]]},"78":{"position":[[62,7],[348,7],[634,7],[920,7],[1206,7]]},"90":{"position":[[45,7],[409,7]]},"94":{"position":[[784,6]]},"96":{"position":[[1384,7]]},"108":{"position":[[62,7],[385,7],[708,7],[1031,7],[1354,7]]},"120":{"position":[[62,7],[385,7],[708,7],[1031,7],[1354,7]]},"136":{"position":[[52,6]]},"138":{"position":[[284,6],[300,6]]},"140":{"position":[[30,6],[187,6],[625,6]]},"142":{"position":[[159,6],[262,6],[356,6],[2536,6],[2579,6],[2861,7],[5167,6],[5210,6],[5489,7]]},"144":{"position":[[49,6],[500,7],[1306,6],[1934,7],[2831,6]]},"146":{"position":[[419,7]]},"148":{"position":[[229,6]]},"152":{"position":[[850,6]]},"166":{"position":[[44,7],[95,6],[180,6]]},"172":{"position":[[152,7],[337,7]]},"186":{"position":[[62,7],[349,7],[636,7],[923,7],[1210,7]]},"253":{"position":[[62,7],[384,7],[706,7],[993,7],[1280,7]]},"585":{"position":[[209,7],[312,6],[408,6]]}}}],["servic",{"_index":141,"t":{"16":{"position":[[12,7],[2916,7],[16651,7],[16791,7],[22263,7],[22403,7],[28007,7],[28154,7]]},"80":{"position":[[6610,7],[6765,7]]},"92":{"position":[[35,7],[106,7]]},"94":{"position":[[489,7],[1340,7]]},"104":{"position":[[258,7],[342,7]]},"112":{"position":[[2791,7]]},"114":{"position":[[1453,7]]},"124":{"position":[[2791,7]]},"126":{"position":[[1467,7]]},"142":{"position":[[1622,9],[4269,9]]},"190":{"position":[[2791,7]]},"192":{"position":[[1420,7]]},"194":{"position":[[1580,7]]},"213":{"position":[[4442,7],[4582,7]]},"215":{"position":[[4483,7],[4623,7],[9656,7],[9796,7]]},"221":{"position":[[5772,7],[5912,7],[10967,7],[11107,7],[11527,7],[16191,7],[16331,7],[21222,7],[21362,7]]},"230":{"position":[[4701,7],[4841,7]]},"232":{"position":[[4530,7],[4670,7]]},"245":{"position":[[4743,7],[4883,7]]},"247":{"position":[[4444,7],[4584,7],[9519,7],[9659,7]]},"257":{"position":[[2767,7]]},"259":{"position":[[699,7],[2282,7]]},"261":{"position":[[1726,7],[3158,7]]},"263":{"position":[[358,7],[596,8],[839,8]]},"288":{"position":[[4513,7],[4653,7],[9422,7],[9562,7],[15473,7],[15613,7]]},"290":{"position":[[585,7]]},"312":{"position":[[4626,7],[4766,7],[9652,7],[9792,7]]},"318":{"position":[[4945,7],[5085,7],[10230,7],[10370,7],[15464,7],[15604,7]]},"338":{"position":[[4688,7],[4828,7]]},"345":{"position":[[5592,7],[5732,7]]},"365":{"position":[[855,7]]},"369":{"position":[[5304,7],[5444,7],[10552,7],[10692,7]]},"371":{"position":[[5646,7],[5786,7]]},"373":{"position":[[4464,7],[4604,7]]},"385":{"position":[[4552,7],[4692,7]]},"387":{"position":[[4588,7],[4728,7],[9842,7],[9982,7]]},"405":{"position":[[320,7]]},"429":{"position":[[3270,7]]},"445":{"position":[[4638,7],[4778,7],[9685,7],[9825,7]]},"449":{"position":[[4602,7],[4742,7],[9817,7],[9957,7]]},"467":{"position":[[4471,7],[4611,7]]},"469":{"position":[[4792,7],[4932,7]]},"471":{"position":[[4661,7],[4801,7]]},"485":{"position":[[4864,7],[5004,7]]},"487":{"position":[[4777,7],[4917,7]]},"505":{"position":[[5324,7],[5464,7],[10496,7],[10636,7],[15911,7],[16051,7],[21025,7],[21165,7],[26065,7],[26205,7]]},"521":{"position":[[4488,7],[4628,7]]},"523":{"position":[[5128,7],[5268,7]]},"525":{"position":[[4729,7],[4869,7]]},"537":{"position":[[4844,7],[4984,7]]},"541":{"position":[[4835,7],[4975,7]]},"543":{"position":[[4581,7],[4721,7]]},"545":{"position":[[4418,7],[4558,7],[9364,7],[9504,7]]},"547":{"position":[[4433,7],[4573,7],[9357,7],[9497,7]]},"562":{"position":[[4617,7],[4757,7]]},"569":{"position":[[5065,7],[5204,7],[10540,7],[10679,7],[15996,7],[16135,7]]},"571":{"position":[[4796,7],[4935,7]]},"576":{"position":[[4769,7],[4910,7],[10103,7],[10244,7]]},"583":{"position":[[5052,7],[5199,7]]},"605":{"position":[[5749,7],[5889,7],[11342,7],[11482,7],[17596,7],[17736,7],[23839,7],[23979,7],[29500,7],[29640,7]]},"607":{"position":[[5598,7],[5738,7],[11279,7],[11419,7],[17032,7],[17172,7],[22774,7],[22914,7]]},"622":{"position":[[5180,7],[5320,7]]},"624":{"position":[[4607,7],[4747,7]]},"630":{"position":[[5373,7],[5513,7]]},"632":{"position":[[4504,7],[4644,7]]},"634":{"position":[[4726,7],[4866,7],[9878,7],[10018,7],[14940,7],[15080,7]]},"644":{"position":[[9,7],[5262,7],[5402,7],[10295,7],[10435,7]]},"646":{"position":[[4735,7],[4875,7],[9775,7],[9915,7]]},"648":{"position":[[4851,7],[4990,7],[10543,7],[10683,7],[15996,7],[16136,7],[21216,7],[21356,7],[26290,7],[26430,7]]},"660":{"position":[[8191,7]]},"666":{"position":[[1618,7],[3517,7],[5426,7],[7334,7],[9240,7],[11150,7]]},"668":{"position":[[4200,7],[9423,7],[9563,7],[11449,7]]},"670":{"position":[[5868,7],[6008,7],[8592,7],[11421,7]]},"672":{"position":[[7730,7]]},"688":{"position":[[12,7]]},"692":{"position":[[4883,7],[5023,7],[9855,7],[9995,7],[15561,7],[15701,7],[21133,7],[21273,7],[26243,7],[26383,7]]},"694":{"position":[[8320,7],[8460,7],[13756,7],[13896,7]]},"696":{"position":[[7629,7],[7769,7],[14248,7],[14388,7],[19999,7],[20139,7]]},"698":{"position":[[8145,7],[8285,7],[13728,7],[13868,7]]},"718":{"position":[[1295,7],[6675,7],[6815,7],[11758,7],[11898,7],[17101,7],[17241,7],[22141,7],[22281,7],[27325,7],[27465,7],[34204,7],[34344,7],[39711,7],[39851,7]]},"720":{"position":[[4520,7],[4660,7],[11216,7],[11356,7]]},"722":{"position":[[12287,7],[12427,7],[18352,7],[18492,7],[24338,7],[24478,7],[30024,7],[30164,7],[35376,7],[35516,7],[40473,7],[40613,7],[45624,7],[45764,7],[50776,7],[50916,7]]},"734":{"position":[[9269,7],[9409,7]]},"740":{"position":[[4800,7],[4940,7],[9927,7],[10067,7],[15295,7],[15435,7],[20271,7],[20411,7]]},"742":{"position":[[8899,7],[9039,7],[16003,7],[16143,7],[22491,7],[22631,7],[27809,7],[27949,7]]},"744":{"position":[[6485,7],[6625,7],[13106,7],[13246,7],[19566,7],[19706,7]]},"746":{"position":[[15597,7],[15737,7]]},"748":{"position":[[126,7]]},"767":{"position":[[8285,7],[8425,7],[16185,7],[16325,7],[23086,7],[23226,7],[29376,7],[29516,7],[34559,7],[34699,7],[39607,7],[39747,7],[44669,7],[44809,7]]},"769":{"position":[[4681,7],[4821,7],[5328,7],[12000,7],[12140,7],[17376,7],[17516,7],[27120,7],[27260,7],[34747,7],[34887,7],[43734,7],[43874,7]]},"786":{"position":[[1089,7],[6205,7],[6345,7],[11211,7],[11351,7],[16304,7],[16444,7],[21267,7],[21407,7],[26315,7],[26455,7],[33462,7],[33602,7],[38506,7],[38646,7]]},"788":{"position":[[7711,7],[7851,7],[13214,7],[13354,7]]},"790":{"position":[[4771,7],[4911,7],[10422,7],[10562,7],[15409,7],[15549,7]]},"792":{"position":[[7727,7],[7867,7],[13404,7],[13544,7],[20013,7],[20153,7]]},"809":{"position":[[1059,7],[6214,7],[6354,7],[11241,7],[11381,7],[16337,7],[16477,7],[21294,7],[21434,7],[26339,7],[26479,7],[32970,7],[33110,7],[38011,7],[38151,7]]},"811":{"position":[[7978,7],[8118,7],[13689,7],[13829,7]]},"813":{"position":[[7181,7],[7321,7],[12831,7],[12971,7]]},"815":{"position":[[8817,7],[8957,7],[14363,7],[14503,7],[19540,7],[19680,7],[24654,7],[24794,7],[29845,7],[29985,7],[34951,7],[35091,7]]}}}],["service/machin",{"_index":1689,"t":{"425":{"position":[[1577,15]]}}}],["service_completed_successfulli",{"_index":954,"t":{"142":{"position":[[2222,30],[4873,30]]}}}],["service_healthi",{"_index":950,"t":{"142":{"position":[[1933,15],[4604,15]]}}}],["service_unknown",{"_index":1037,"t":{"150":{"position":[[213,15]]}}}],["session",{"_index":2141,"t":{"670":{"position":[[847,9]]}}}],["set",{"_index":111,"t":{"10":{"position":[[267,3]]},"16":{"position":[[4879,3],[4977,3],[6190,3],[16574,3],[16618,3],[22186,3],[22230,3],[27930,3],[27974,3]]},"56":{"position":[[543,4],[1937,4]]},"58":{"position":[[1434,4]]},"60":{"position":[[2009,4]]},"62":{"position":[[137,4]]},"64":{"position":[[149,4]]},"68":{"position":[[2384,3],[2450,3],[2505,3]]},"80":{"position":[[6533,3],[6577,3]]},"92":{"position":[[204,3]]},"98":{"position":[[129,3]]},"112":{"position":[[2758,3]]},"124":{"position":[[2758,3]]},"130":{"position":[[173,3],[202,3]]},"142":{"position":[[2911,7],[2959,7]]},"144":{"position":[[313,3]]},"156":{"position":[[253,3]]},"160":{"position":[[111,4],[184,4],[241,3]]},"172":{"position":[[112,3],[192,3]]},"190":{"position":[[2758,3]]},"202":{"position":[[232,3]]},"213":{"position":[[4365,3],[4409,3]]},"215":{"position":[[4406,3],[4450,3],[9579,3],[9623,3]]},"221":{"position":[[5695,3],[5739,3],[10890,3],[10934,3],[16114,3],[16158,3],[21145,3],[21189,3]]},"230":{"position":[[4624,3],[4668,3]]},"232":{"position":[[4453,3],[4497,3]]},"245":{"position":[[4666,3],[4710,3]]},"247":{"position":[[4367,3],[4411,3],[9442,3],[9486,3]]},"257":{"position":[[2734,3]]},"259":{"position":[[1201,3]]},"261":{"position":[[2020,4]]},"263":{"position":[[726,3]]},"269":{"position":[[103,4],[549,3]]},"271":{"position":[[242,3]]},"273":{"position":[[2442,3],[2919,3],[3537,3],[3685,3]]},"288":{"position":[[4436,3],[4480,3],[9345,3],[9389,3],[15396,3],[15440,3]]},"312":{"position":[[4549,3],[4593,3],[9575,3],[9619,3]]},"316":{"position":[[256,3]]},"318":{"position":[[4868,3],[4912,3],[10153,3],[10197,3],[15387,3],[15431,3]]},"338":{"position":[[4611,3],[4655,3]]},"343":{"position":[[23,3]]},"345":{"position":[[5515,3],[5559,3]]},"349":{"position":[[124,3],[405,3],[569,3],[645,3]]},"353":{"position":[[491,4]]},"369":{"position":[[5227,3],[5271,3],[10475,3],[10519,3]]},"371":{"position":[[25,3],[5569,3],[5613,3]]},"373":{"position":[[4387,3],[4431,3]]},"385":{"position":[[4475,3],[4519,3]]},"387":{"position":[[4511,3],[4555,3],[9765,3],[9809,3]]},"397":{"position":[[68,3]]},"401":{"position":[[43,3]]},"403":{"position":[[3550,3],[4295,3],[6309,3]]},"431":{"position":[[331,8],[626,8]]},"437":{"position":[[3396,4]]},"443":{"position":[[700,4]]},"445":{"position":[[4561,3],[4605,3],[9608,3],[9652,3]]},"449":{"position":[[4525,3],[4569,3],[9740,3],[9784,3]]},"451":{"position":[[178,3]]},"467":{"position":[[4394,3],[4438,3]]},"469":{"position":[[4715,3],[4759,3]]},"471":{"position":[[4584,3],[4628,3]]},"485":{"position":[[4787,3],[4831,3]]},"487":{"position":[[4700,3],[4744,3]]},"505":{"position":[[5247,3],[5291,3],[10419,3],[10463,3],[15834,3],[15878,3],[20948,3],[20992,3],[25988,3],[26032,3]]},"509":{"position":[[250,3]]},"521":{"position":[[4411,3],[4455,3]]},"523":{"position":[[84,3],[209,3],[1145,3],[2210,3],[3600,3],[4788,3],[5051,3],[5095,3],[5540,3]]},"525":{"position":[[4652,3],[4696,3]]},"537":{"position":[[4767,3],[4811,3]]},"541":{"position":[[4758,3],[4802,3]]},"543":{"position":[[4504,3],[4548,3]]},"545":{"position":[[4341,3],[4385,3],[9287,3],[9331,3]]},"547":{"position":[[4356,3],[4400,3],[9280,3],[9324,3]]},"562":{"position":[[4540,3],[4584,3]]},"569":{"position":[[4988,3],[5032,3],[10463,3],[10507,3],[15919,3],[15963,3]]},"571":{"position":[[4719,3],[4763,3]]},"576":{"position":[[4692,3],[4736,3],[10026,3],[10070,3]]},"583":{"position":[[4975,3],[5019,3]]},"585":{"position":[[277,3],[371,3],[507,3],[637,3]]},"599":{"position":[[441,3]]},"605":{"position":[[5672,3],[5716,3],[11265,3],[11309,3],[17519,3],[17563,3],[23762,3],[23806,3],[29423,3],[29467,3]]},"607":{"position":[[5521,3],[5565,3],[11202,3],[11246,3],[16955,3],[16999,3],[22697,3],[22741,3]]},"622":{"position":[[5103,3],[5147,3]]},"624":{"position":[[4530,3],[4574,3]]},"630":{"position":[[5296,3],[5340,3]]},"632":{"position":[[4427,3],[4471,3]]},"634":{"position":[[4649,3],[4693,3],[9801,3],[9845,3],[14863,3],[14907,3]]},"640":{"position":[[773,4]]},"644":{"position":[[5185,3],[5229,3],[10218,3],[10262,3]]},"646":{"position":[[4658,3],[4702,3],[9698,3],[9742,3]]},"648":{"position":[[4774,3],[4818,3],[10466,3],[10510,3],[15919,3],[15963,3],[21139,3],[21183,3],[26213,3],[26257,3]]},"654":{"position":[[706,3]]},"668":{"position":[[9346,3],[9390,3]]},"670":{"position":[[5791,3],[5835,3]]},"690":{"position":[[282,3]]},"692":{"position":[[4806,3],[4850,3],[9778,3],[9822,3],[15484,3],[15528,3],[21056,3],[21100,3],[26166,3],[26210,3]]},"694":{"position":[[580,4],[8243,3],[8287,3],[13679,3],[13723,3]]},"696":{"position":[[7552,3],[7596,3],[14171,3],[14215,3],[19922,3],[19966,3]]},"698":{"position":[[8068,3],[8112,3],[13651,3],[13695,3]]},"712":{"position":[[716,7],[1072,9]]},"716":{"position":[[438,7]]},"718":{"position":[[6598,3],[6642,3],[11681,3],[11725,3],[17024,3],[17068,3],[22064,3],[22108,3],[27248,3],[27292,3],[34127,3],[34171,3],[39634,3],[39678,3]]},"720":{"position":[[4443,3],[4487,3],[11139,3],[11183,3]]},"722":{"position":[[4306,3],[4368,3],[12210,3],[12254,3],[14145,3],[15267,3],[16714,3],[17959,3],[18275,3],[18319,3],[18765,3],[19043,3],[24261,3],[24305,3],[29947,3],[29991,3],[35299,3],[35343,3],[40396,3],[40440,3],[45547,3],[45591,3],[50699,3],[50743,3]]},"728":{"position":[[733,3]]},"734":{"position":[[9192,3],[9236,3]]},"740":{"position":[[4723,3],[4767,3],[9850,3],[9894,3],[15218,3],[15262,3],[20194,3],[20238,3]]},"742":{"position":[[8822,3],[8866,3],[15926,3],[15970,3],[22414,3],[22458,3],[27732,3],[27776,3]]},"744":{"position":[[6408,3],[6452,3],[13029,3],[13073,3],[19489,3],[19533,3]]},"746":{"position":[[15520,3],[15564,3]]},"752":{"position":[[185,3]]},"767":{"position":[[8208,3],[8252,3],[16108,3],[16152,3],[23009,3],[23053,3],[29299,3],[29343,3],[34482,3],[34526,3],[39530,3],[39574,3],[44592,3],[44636,3]]},"769":{"position":[[4604,3],[4648,3],[11923,3],[11967,3],[17299,3],[17343,3],[19598,3],[19645,3],[27043,3],[27087,3],[34670,3],[34714,3],[43657,3],[43701,3]]},"771":{"position":[[97,3]]},"786":{"position":[[6128,3],[6172,3],[11134,3],[11178,3],[16227,3],[16271,3],[21190,3],[21234,3],[26238,3],[26282,3],[28846,3],[28930,3],[33385,3],[33429,3],[38429,3],[38473,3]]},"788":{"position":[[7634,3],[7678,3],[13137,3],[13181,3]]},"790":{"position":[[4694,3],[4738,3],[10345,3],[10389,3],[15332,3],[15376,3]]},"792":{"position":[[20,3],[7650,3],[7694,3],[13327,3],[13371,3],[14522,3],[14707,4],[19936,3],[19980,3]]},"809":{"position":[[6137,3],[6181,3],[11164,3],[11208,3],[16260,3],[16304,3],[21217,3],[21261,3],[26262,3],[26306,3],[32893,3],[32937,3],[37934,3],[37978,3]]},"811":{"position":[[7901,3],[7945,3],[13612,3],[13656,3]]},"813":{"position":[[7104,3],[7148,3],[12754,3],[12798,3],[13966,3],[14056,3],[14210,4]]},"815":{"position":[[8740,3],[8784,3],[14286,3],[14330,3],[19463,3],[19507,3],[24577,3],[24621,3],[29768,3],[29812,3],[34874,3],[34918,3]]}}}],["setup",{"_index":336,"t":{"16":{"position":[[12495,5],[13309,5],[14519,5],[18107,5],[18921,5],[20131,5],[23879,5],[24698,5],[25909,5]]},"74":{"position":[[0,5],[21,5],[268,5]]},"78":{"position":[[105,6],[220,5],[391,6],[506,5],[677,6],[792,5],[963,6],[1078,5],[1249,6]]},"80":{"position":[[943,5],[2082,5],[3819,5]]},"84":{"position":[[207,5]]},"90":{"position":[[88,6],[452,6]]},"94":{"position":[[475,5],[1326,5]]},"96":{"position":[[1536,5]]},"108":{"position":[[105,6],[428,6],[751,6],[1074,6],[1397,6]]},"112":{"position":[[216,5],[716,5],[1511,5]]},"120":{"position":[[105,6],[428,6],[751,6],[1074,6],[1397,6]]},"124":{"position":[[216,5],[716,5],[1511,5]]},"144":{"position":[[436,5],[1870,5]]},"166":{"position":[[27,5],[59,5],[78,5],[144,5],[163,5]]},"170":{"position":[[17,5]]},"172":{"position":[[278,5]]},"186":{"position":[[105,6],[392,6],[679,6],[966,6],[1253,6]]},"190":{"position":[[216,5],[716,5],[1511,5]]},"213":{"position":[[329,5],[1097,5],[2397,5]]},"215":{"position":[[339,5],[1150,5],[2357,5],[5504,5],[6317,5],[7526,5]]},"221":{"position":[[1644,5],[2451,5],[3654,5],[6707,5],[7512,5],[8849,5],[12047,5],[12858,5],[14065,5],[17070,5],[17883,5],[19092,5]]},"230":{"position":[[591,5],[1359,5],[2658,5]]},"232":{"position":[[382,5],[1194,5],[2402,5]]},"245":{"position":[[639,5],[1440,5],[2637,5]]},"247":{"position":[[350,5],[1114,5],[2409,5],[5411,5],[6213,5],[7411,5]]},"253":{"position":[[105,6],[427,6],[749,6],[1036,6],[1323,6]]},"257":{"position":[[192,5],[692,5],[1487,5]]},"288":{"position":[[436,5],[1195,5],[2486,5],[5340,5],[6101,5],[7393,5],[10518,5],[11463,5],[13031,5]]},"312":{"position":[[478,5],[1290,5],[2498,5],[5508,5],[6319,5],[7526,5]]},"318":{"position":[[597,5],[1424,5],[2783,5],[6082,5],[6894,5],[8102,5],[11316,5],[12128,5],[13336,5]]},"338":{"position":[[512,5],[1331,5],[2546,5]]},"345":{"position":[[1456,5],[2265,5],[3470,5]]},"369":{"position":[[460,5],[1393,5],[2914,5],[6396,5],[7210,5],[8420,5]]},"371":{"position":[[362,5],[1405,5],[3036,5]]},"373":{"position":[[308,5],[1122,5],[2332,5]]},"385":{"position":[[391,5],[1171,5],[2483,5]]},"387":{"position":[[412,5],[1231,5],[2446,5],[5662,5],[6482,5],[7698,5]]},"405":{"position":[[1521,5]]},"445":{"position":[[478,5],[1293,5],[2504,5],[5529,5],[6343,5],[7553,5]]},"449":{"position":[[438,5],[1254,5],[2466,5],[5653,5],[6469,5],[7681,5]]},"467":{"position":[[366,5],[1132,5],[2430,5]]},"469":{"position":[[368,5],[1214,5],[2592,5]]},"471":{"position":[[485,5],[1304,5],[2519,5]]},"485":{"position":[[552,5],[1370,5],[2720,5]]},"487":{"position":[[617,5],[1432,5],[2643,5]]},"505":{"position":[[600,5],[1503,5],[2994,5],[6348,5],[7160,5],[8368,5],[11763,5],[12575,5],[13783,5],[16869,5],[17683,5],[18893,5],[21913,5],[22726,5],[23935,5]]},"521":{"position":[[375,5],[1143,5],[2443,5]]},"523":{"position":[[708,5],[1553,5],[2930,5]]},"525":{"position":[[545,5],[1366,5],[2583,5]]},"537":{"position":[[454,5],[1273,5],[2680,5]]},"541":{"position":[[461,5],[1276,5],[2679,5]]},"543":{"position":[[472,5],[1239,5],[2538,5]]},"545":{"position":[[318,5],[1118,5],[2314,5],[5264,5],[6064,5],[7260,5]]},"547":{"position":[[355,5],[1115,5],[2406,5],[5253,5],[6054,5],[7251,5]]},"562":{"position":[[477,5],[1287,5],[2493,5]]},"569":{"position":[[727,5],[1587,5],[2883,5],[6299,5],[7140,5],[8398,5],[11715,5],[12566,5],[13834,5]]},"571":{"position":[[930,5],[1672,5],[2850,5]]},"576":{"position":[[468,5],[1317,5],[2617,5],[5802,5],[6651,5],[7951,5]]},"583":{"position":[[389,5],[1315,5],[2695,5]]},"605":{"position":[[1605,5],[2416,5],[3623,5],[7198,5],[8009,5],[9216,5],[13440,5],[14254,5],[15464,5],[19695,5],[20506,5],[21713,5],[25352,5],[26164,5],[27372,5]]},"607":{"position":[[1450,5],[2262,5],[3470,5],[7119,5],[7934,5],[9145,5],[12880,5],[13693,5],[14902,5],[18622,5],[19435,5],[20644,5]]},"622":{"position":[[604,5],[1488,5],[2904,5]]},"624":{"position":[[419,5],[1241,5],[2459,5]]},"630":{"position":[[329,5],[1312,5],[2883,5]]},"632":{"position":[[348,5],[1162,5],[2372,5]]},"634":{"position":[[329,5],[1169,5],[2540,5],[5718,5],[6533,5],[7744,5],[10768,5],[11586,5],[12800,5]]},"644":{"position":[[1110,5],[1923,5],[3132,5],[6147,5],[6959,5],[8167,5]]},"646":{"position":[[419,5],[1238,5],[2589,5],[5611,5],[6427,5],[7639,5]]},"648":{"position":[[394,5],[1305,5],[2581,5],[6053,5],[6897,5],[8329,5],[11501,5],[12347,5],[13780,5],[17064,5],[17877,5],[19086,5],[22146,5],[22957,5],[24164,5]]},"668":{"position":[[5039,5],[5875,5],[7243,5]]},"670":{"position":[[1371,5],[2236,5],[3632,5]]},"692":{"position":[[746,5],[1520,5],[2826,5],[5702,5],[6480,5],[7790,5],[10690,5],[11611,5],[13176,5],[16981,5],[17794,5],[19003,5],[22099,5],[22910,5],[24117,5]]},"694":{"position":[[3164,5],[4138,5],[5812,5],[9592,5],[10408,5],[11620,5]]},"696":{"position":[[3067,5],[3929,5],[5379,5],[8760,5],[9817,5],[11574,5],[15859,5],[16669,5],[17875,5]]},"698":{"position":[[3262,5],[4186,5],[5754,5],[9568,5],[10383,5],[11594,5]]},"718":{"position":[[2303,5],[3136,5],[4501,5],[7582,5],[8401,5],[9616,5],[12729,5],[13562,5],[14927,5],[17965,5],[18784,5],[19999,5],[23121,5],[23947,5],[25169,5],[28688,5],[29771,5],[31498,5],[35535,5],[36354,5],[37569,5]]},"720":{"position":[[364,5],[1178,5],[2388,5],[7064,5],[7877,5],[9086,5]]},"722":{"position":[[7108,5],[8106,5],[9748,5],[13704,5],[14606,5],[16040,5],[19441,5],[20387,5],[21921,5],[25466,5],[26327,5],[27776,5],[31119,5],[31923,5],[33259,5],[36284,5],[37071,5],[38390,5],[41480,5],[42291,5],[43498,5],[46572,5],[47398,5],[48620,5]]},"734":{"position":[[2837,5],[4131,5],[6125,5]]},"740":{"position":[[664,5],[1473,5],[2678,5],[5775,5],[6588,5],[7797,5],[10919,5],[11753,5],[13119,5],[16131,5],[16941,5],[18147,5]]},"742":{"position":[[4779,5],[5584,5],[6785,5],[10011,5],[11213,5],[13059,5],[17551,5],[18508,5],[20053,5],[23673,5],[24482,5],[25687,5]]},"744":{"position":[[1324,5],[2337,5],[3937,5],[8019,5],[9013,5],[10553,5],[14475,5],[15470,5],[17011,5]]},"746":{"position":[[3565,5],[6115,5],[9813,5]]},"767":{"position":[[433,5],[2046,5],[4471,5],[10389,5],[11542,5],[13339,5],[17570,5],[18653,5],[20380,5],[25228,5],[26040,5],[27248,5],[30407,5],[31220,5],[32429,5],[35443,5],[36259,5],[37471,5],[40501,5],[41318,5],[42531,5]]},"769":{"position":[[529,5],[1342,5],[2551,5],[7864,5],[8673,5],[9878,5],[13204,5],[14022,5],[15236,5],[22952,5],[23769,5],[24982,5],[30615,5],[31423,5],[32627,5],[39602,5],[40410,5],[41614,5]]},"786":{"position":[[2064,5],[2839,5],[4146,5],[7055,5],[7869,5],[9079,5],[12163,5],[12938,5],[14245,5],[17111,5],[17925,5],[19135,5],[22155,5],[22970,5],[24181,5],[29306,5],[30120,5],[31330,5],[34350,5],[35164,5],[36374,5]]},"788":{"position":[[2583,5],[3587,5],[5179,5],[9050,5],[9866,5],[11078,5]]},"790":{"position":[[534,5],[1333,5],[2664,5],[6058,5],[6889,5],[8252,5],[11253,5],[12067,5],[13277,5]]},"792":{"position":[[3177,5],[4036,5],[5483,5],[9232,5],[10050,5],[11264,5],[15784,5],[16581,5],[17910,5]]},"809":{"position":[[2061,5],[2839,5],[4149,5],[7073,5],[7890,5],[9103,5],[12200,5],[12974,5],[14280,5],[17142,5],[17955,5],[19164,5],[22179,5],[22994,5],[24205,5],[28818,5],[29631,5],[30840,5],[33855,5],[34669,5],[35879,5]]},"811":{"position":[[2340,5],[3435,5],[5230,5],[9521,5],[10338,5],[11551,5]]},"813":{"position":[[2173,5],[3147,5],[4709,5],[8651,5],[9471,5],[10687,5]]},"815":{"position":[[3045,5],[4192,5],[5983,5],[10179,5],[11000,5],[12217,5],[15348,5],[16171,5],[17390,5],[20454,5],[21279,5],[22500,5],[25653,5],[26476,5],[27695,5],[30759,5],[31582,5],[32801,5]]}}}],["sever",{"_index":1646,"t":{"415":{"position":[[178,7]]},"603":{"position":[[114,7]]},"760":{"position":[[167,7]]},"769":{"position":[[20801,7]]}}}],["shape",{"_index":1606,"t":{"403":{"position":[[4728,5]]},"792":{"position":[[15085,6]]},"813":{"position":[[14586,6]]}}}],["share",{"_index":94,"t":{"8":{"position":[[551,6]]},"16":{"position":[[3669,6],[6374,7]]},"132":{"position":[[117,6]]},"144":{"position":[[108,6],[151,6],[191,6],[1259,6],[2784,6]]},"172":{"position":[[19,6]]},"202":{"position":[[410,7]]},"304":{"position":[[176,6],[468,7]]},"306":{"position":[[366,6]]},"312":{"position":[[10297,5],[10423,6]]},"397":{"position":[[1751,5],[1968,5]]},"399":{"position":[[793,5],[1010,5],[2633,5],[2850,5]]},"401":{"position":[[1123,5],[1340,5]]},"403":{"position":[[4256,6],[7064,5],[7813,5]]},"405":{"position":[[1944,6],[2213,6]]},"475":{"position":[[306,7]]},"483":{"position":[[194,7]]},"509":{"position":[[428,7]]},"527":{"position":[[204,5]]},"660":{"position":[[556,6],[3066,6],[4021,6],[5380,6],[6656,6],[7880,6],[9685,6]]},"672":{"position":[[3560,6],[4919,6],[6195,6],[7419,6],[9224,6]]},"796":{"position":[[278,8],[1029,5]]},"802":{"position":[[35,6]]},"804":{"position":[[241,6],[437,6]]},"806":{"position":[[256,6]]},"811":{"position":[[27,5]]},"815":{"position":[[40,7],[228,6],[289,6]]}}}],["shell",{"_index":942,"t":{"142":{"position":[[1820,7]]}}}],["shop",{"_index":1799,"t":{"491":{"position":[[977,4]]}}}],["short",{"_index":1409,"t":{"326":{"position":[[8,5]]},"415":{"position":[[382,6]]}}}],["shorter",{"_index":2422,"t":{"742":{"position":[[9757,8]]}}}],["show",{"_index":1458,"t":{"355":{"position":[[380,7]]},"758":{"position":[[493,4]]}}}],["shown",{"_index":1292,"t":{"263":{"position":[[206,6]]},"483":{"position":[[28,5]]},"666":{"position":[[53,5]]},"740":{"position":[[53,5]]},"794":{"position":[[195,5]]}}}],["side",{"_index":1595,"t":{"403":{"position":[[2295,4],[6668,4]]},"425":{"position":[[2066,4]]},"734":{"position":[[2235,4],[2313,4],[2480,4],[3314,4],[3397,7],[3557,4],[3661,6],[4828,4],[4962,7],[5183,4],[5302,7],[6835,4],[6927,5],[7098,4],[7209,6],[8502,4],[8580,6],[8757,4],[8858,6],[9947,4],[10033,5],[10198,4],[10303,6]]},"740":{"position":[[11395,4],[11478,6],[12449,4],[12583,7],[13828,4],[13920,5],[15005,4],[15083,6],[15616,7],[15735,4],[15821,5]]},"742":{"position":[[10500,4],[10590,7],[10652,4],[10742,7],[10826,4],[10938,6],[11922,4],[12063,7],[12130,4],[12271,7],[12360,4],[12523,7],[13781,4],[13880,5],[13943,4],[14042,5],[14127,4],[14248,5],[15346,4],[15431,6],[15504,4],[15589,6],[15684,4],[15791,6],[16523,7],[16655,4],[16748,5],[16811,4],[16904,5],[16989,4],[17104,5]]},"746":{"position":[[4042,4],[4125,7],[4285,4],[4389,6],[4645,4],[4733,7],[4795,4],[4884,7],[4947,4],[5037,7],[5100,4],[5190,7],[5252,4],[5342,7],[5403,4],[5493,7],[5554,4],[5644,7],[5728,4],[5840,6],[6812,4],[6946,7],[7167,4],[7286,7],[7639,4],[7778,7],[7845,4],[7985,7],[8053,4],[8194,7],[8262,4],[8403,7],[8470,4],[8611,7],[8677,4],[8818,7],[8884,4],[9025,7],[9114,4],[9277,7],[10523,4],[10615,5],[10786,4],[10897,6],[11166,4],[11263,5],[11326,4],[11424,5],[11488,4],[11587,5],[11651,4],[11750,5],[11813,4],[11912,5],[11974,4],[12073,5],[12135,4],[12234,5],[12319,4],[12440,5],[13526,4],[13604,6],[13781,4],[13882,6],[14153,4],[14236,6],[14309,4],[14393,6],[14467,4],[14552,6],[14626,4],[14711,6],[14784,4],[14869,6],[14941,4],[15026,6],[15098,4],[15183,6],[15278,4],[15385,6],[16854,7],[16974,4],[17060,5],[17225,4],[17330,6],[17593,4],[17684,5],[17747,4],[17839,5],[17903,4],[17996,5],[18060,4],[18153,5],[18216,4],[18309,5],[18371,4],[18464,5],[18526,4],[18619,5],[18704,4],[18819,5]]}}}],["side\",\"relation\":\"branch\",\"object\":\"account:check",{"_index":2381,"t":{"734":{"position":[[9697,52]]},"746":{"position":[[16025,52]]}}}],["side\"},{\"user\":\"ip",{"_index":2442,"t":{"742":{"position":[[16416,18]]},"746":{"position":[[16747,18]]}}}],["side\"},{\"user\":\"timeslot:10_11\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2490,"t":{"746":{"position":[[16322,84]]}}}],["side\"},{\"user\":\"timeslot:11_12\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2491,"t":{"746":{"position":[[16407,84]]}}}],["side\"},{\"user\":\"timeslot:12_13\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2441,"t":{"742":{"position":[[16331,84]]},"746":{"position":[[16492,84]]}}}],["side\"},{\"user\":\"timeslot:13_14\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2492,"t":{"746":{"position":[[16577,84]]}}}],["side\"},{\"user\":\"timeslot:14_15\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2493,"t":{"746":{"position":[[16662,84]]}}}],["side\"},{\"user\":\"timeslot:9_10\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2489,"t":{"746":{"position":[[16238,83]]}}}],["side\"},{\"user\":\"user:caroline\",\"relation\":\"customer\",\"object\":\"account:check",{"_index":2379,"t":{"734":{"position":[[9590,79]]},"746":{"position":[[15918,79]]}}}],["sign",{"_index":739,"t":{"96":{"position":[[549,5]]},"760":{"position":[[481,4]]},"762":{"position":[[642,4],[788,4],[943,4]]},"767":{"position":[[1683,4],[3796,4],[6004,4],[7990,4],[9918,4]]},"769":{"position":[[39032,4],[39178,4],[39333,4]]}}}],["signific",{"_index":1650,"t":{"417":{"position":[[33,12]]}}}],["signingkey",{"_index":779,"t":{"96":{"position":[[2265,11]]},"98":{"position":[[3475,11]]}}}],["signingmethod",{"_index":778,"t":{"96":{"position":[[2241,14]]},"98":{"position":[[3451,14]]}}}],["similar",{"_index":161,"t":{"16":{"position":[[536,7],[28997,7]]},"18":{"position":[[61,7]]},"142":{"position":[[2948,7]]},"204":{"position":[[1115,7]]},"208":{"position":[[37,7]]},"221":{"position":[[22127,7]]},"227":{"position":[[37,7]]},"238":{"position":[[834,7]]},"242":{"position":[[37,7]]},"279":{"position":[[1434,7]]},"285":{"position":[[37,7]]},"304":{"position":[[372,7]]},"306":{"position":[[1744,7]]},"310":{"position":[[37,7]]},"328":{"position":[[1247,7]]},"332":{"position":[[37,7]]},"379":{"position":[[826,7]]},"381":{"position":[[37,7]]},"401":{"position":[[266,7]]},"403":{"position":[[5247,7],[8386,7],[8840,7],[9187,7]]},"425":{"position":[[2654,7]]},"437":{"position":[[2733,7]]},"443":{"position":[[37,7]]},"455":{"position":[[1118,7]]},"459":{"position":[[37,7]]},"477":{"position":[[887,7]]},"481":{"position":[[37,7]]},"493":{"position":[[977,7]]},"497":{"position":[[37,7]]},"511":{"position":[[865,7]]},"515":{"position":[[37,7]]},"531":{"position":[[818,7]]},"535":{"position":[[37,7]]},"553":{"position":[[1289,7]]},"557":{"position":[[37,7]]},"593":{"position":[[406,7]]},"597":{"position":[[37,7]]},"613":{"position":[[1062,7]]},"617":{"position":[[37,7]]},"640":{"position":[[110,7]]},"760":{"position":[[37,7]]},"765":{"position":[[334,7]]}}}],["similarli",{"_index":2157,"t":{"684":{"position":[[360,9]]},"696":{"position":[[274,9],[8440,9]]}}}],["simpl",{"_index":1118,"t":{"170":{"position":[[10,6]]},"176":{"position":[[286,6]]},"338":{"position":[[5510,6]]},"387":{"position":[[10675,6]]},"397":{"position":[[699,6]]},"467":{"position":[[5154,6]]},"477":{"position":[[1754,6]]},"505":{"position":[[27267,6]]},"525":{"position":[[5746,6]]},"624":{"position":[[5858,6]]},"718":{"position":[[15,6]]},"786":{"position":[[28996,6]]},"809":{"position":[[14,6]]}}}],["simpleauthor",{"_index":2521,"t":{"765":{"position":[[105,19]]}}}],["simpler",{"_index":925,"t":{"142":{"position":[[645,8]]}}}],["simplest",{"_index":2644,"t":{"790":{"position":[[194,8]]},"792":{"position":[[8632,8]]}}}],["simpli",{"_index":1234,"t":{"230":{"position":[[258,6]]}}}],["simplifi",{"_index":537,"t":{"58":{"position":[[76,10]]},"395":{"position":[[293,10]]}}}],["singl",{"_index":218,"t":{"16":{"position":[[3803,6]]},"54":{"position":[[3813,6]]},"200":{"position":[[561,6]]},"277":{"position":[[77,6]]},"290":{"position":[[643,6]]},"326":{"position":[[464,6]]},"601":{"position":[[1419,6]]},"660":{"position":[[519,6]]},"748":{"position":[[72,6],[155,6]]},"760":{"position":[[474,6]]},"762":{"position":[[635,6],[781,6],[936,6]]},"767":{"position":[[1676,6],[3789,6],[5997,6],[7983,6],[9911,6]]},"769":{"position":[[39025,6],[39171,6],[39326,6]]}}}],["situat",{"_index":1311,"t":{"273":{"position":[[453,10],[1711,11],[1956,11]]},"349":{"position":[[67,10]]},"603":{"position":[[122,11]]}}}],["size",{"_index":1274,"t":{"259":{"position":[[2687,4],[2716,4]]}}}],["slack",{"_index":830,"t":{"100":{"position":[[253,5],[286,5]]},"300":{"position":[[333,5]]},"704":{"position":[[82,5],[237,5]]},"710":{"position":[[0,5],[148,5],[217,7],[274,5],[453,5],[477,5],[506,5]]},"712":{"position":[[171,6],[384,5],[662,6]]},"714":{"position":[[247,5],[435,5]]},"718":{"position":[[55,5]]},"724":{"position":[[138,5],[336,6],[646,6],[727,5]]},"726":{"position":[[200,5],[237,5]]}}}],["slack'",{"_index":2254,"t":{"710":{"position":[[401,7],[640,7]]},"712":{"position":[[78,7]]}}}],["slot",{"_index":2419,"t":{"742":{"position":[[9632,5]]}}}],["small",{"_index":1312,"t":{"273":{"position":[[516,5],[2888,5]]},"581":{"position":[[260,5]]}}}],["snake_cas",{"_index":587,"t":{"68":{"position":[[156,10]]}}}],["snippet",{"_index":171,"t":{"16":{"position":[[789,7],[1587,7]]},"56":{"position":[[1842,7]]},"58":{"position":[[1331,7]]},"60":{"position":[[1226,7]]},"62":{"position":[[523,7]]},"64":{"position":[[600,7]]},"66":{"position":[[627,7]]},"718":{"position":[[1686,7]]},"722":{"position":[[2716,7]]},"769":{"position":[[21490,8],[35930,8]]},"809":{"position":[[1448,7]]}}}],["social",{"_index":1377,"t":{"304":{"position":[[433,6],[610,6]]},"399":{"position":[[4451,6]]}}}],["softwar",{"_index":1514,"t":{"391":{"position":[[201,8]]},"638":{"position":[[20,8]]}}}],["sole",{"_index":2239,"t":{"698":{"position":[[2755,6]]}}}],["solut",{"_index":11,"t":{"4":{"position":[[26,8]]},"16":{"position":[[6346,9]]},"273":{"position":[[433,9],[1412,8]]},"312":{"position":[[10781,8]]},"318":{"position":[[5706,8],[10896,8]]},"445":{"position":[[10650,9]]},"449":{"position":[[19,9]]},"581":{"position":[[170,8]]}}}],["solv",{"_index":2120,"t":{"664":{"position":[[12,5]]},"670":{"position":[[89,6]]},"738":{"position":[[12,5]]},"744":{"position":[[89,6],[796,5]]}}}],["someon",{"_index":1794,"t":{"491":{"position":[[790,7],[852,7],[927,7]]},"769":{"position":[[30086,7]]}}}],["soon",{"_index":1951,"t":{"583":{"position":[[6251,4]]}}}],["sort",{"_index":1295,"t":{"263":{"position":[[299,4],[516,7],[673,5]]},"267":{"position":[[57,4]]},"273":{"position":[[1552,5],[1630,4]]}}}],["sound",{"_index":1517,"t":{"393":{"position":[[286,6]]}}}],["sourc",{"_index":10,"t":{"4":{"position":[[19,6]]},"710":{"position":[[200,8]]},"802":{"position":[[80,6]]}}}],["special",{"_index":254,"t":{"16":{"position":[[5067,7],[29583,7]]},"48":{"position":[[68,7]]},"403":{"position":[[6754,7]]},"477":{"position":[[1462,7]]},"481":{"position":[[612,7]]}}}],["specif",{"_index":75,"t":{"8":{"position":[[77,8],[563,8]]},"132":{"position":[[377,8]]},"148":{"position":[[134,8]]},"152":{"position":[[1103,8]]},"154":{"position":[[391,8]]},"261":{"position":[[983,8]]},"296":{"position":[[745,8]]},"304":{"position":[[345,8]]},"324":{"position":[[319,12]]},"343":{"position":[[230,8]]},"347":{"position":[[864,8]]},"425":{"position":[[58,8],[708,8]]},"485":{"position":[[199,8]]},"491":{"position":[[330,8],[1258,8]]},"501":{"position":[[223,8]]},"549":{"position":[[291,12]]},"562":{"position":[[77,8]]},"569":{"position":[[124,8],[203,8],[335,8],[5861,8]]},"571":{"position":[[80,14]]},"574":{"position":[[76,8]]},"576":{"position":[[95,8]]},"578":{"position":[[166,8],[267,8]]},"581":{"position":[[108,8],[128,8]]},"587":{"position":[[166,8],[267,8]]},"601":{"position":[[42,8]]},"603":{"position":[[73,8]]},"611":{"position":[[83,12]]},"654":{"position":[[712,8]]},"728":{"position":[[739,8]]},"794":{"position":[[104,8]]}}}],["specifi",{"_index":278,"t":{"16":{"position":[[7596,9],[23173,9],[23475,9]]},"34":{"position":[[41,9]]},"44":{"position":[[133,9]]},"56":{"position":[[132,9]]},"98":{"position":[[803,9],[2728,9]]},"118":{"position":[[125,9]]},"140":{"position":[[85,9]]},"142":{"position":[[402,9]]},"148":{"position":[[498,10]]},"174":{"position":[[146,7]]},"178":{"position":[[58,9],[172,10]]},"202":{"position":[[130,10]]},"230":{"position":[[298,9]]},"403":{"position":[[2228,7]]},"405":{"position":[[2550,10]]},"415":{"position":[[481,7],[582,7]]},"419":{"position":[[2076,7]]},"421":{"position":[[75,7],[262,7]]},"423":{"position":[[1107,7]]},"425":{"position":[[78,10],[1161,7],[2914,7],[3032,7]]},"509":{"position":[[148,10]]},"571":{"position":[[204,7]]},"605":{"position":[[6430,10],[12023,10],[12287,7],[12815,10],[12979,10],[18327,10],[24549,7],[24842,9],[30223,9],[30512,9]]},"607":{"position":[[6293,10],[6526,10],[11983,10],[17766,10],[18109,9]]},"668":{"position":[[186,7]]},"716":{"position":[[1993,10]]},"815":{"position":[[79,10]]}}}],["spend",{"_index":1958,"t":{"585":{"position":[[324,5]]}}}],["split",{"_index":2132,"t":{"668":{"position":[[775,5]]}}}],["stabl",{"_index":1062,"t":{"152":{"position":[[827,6]]}}}],["stage",{"_index":1579,"t":{"403":{"position":[[128,5]]}}}],["standard",{"_index":1949,"t":{"583":{"position":[[6079,8]]}}}],["start",{"_index":486,"t":{"50":{"position":[[162,7]]},"52":{"position":[[1030,7]]},"70":{"position":[[180,7],[211,7]]},"72":{"position":[[62,7],[197,8]]},"82":{"position":[[122,7],[160,7]]},"94":{"position":[[797,5],[915,8]]},"96":{"position":[[1398,5],[1515,8]]},"98":{"position":[[2393,5],[2510,8]]},"102":{"position":[[7,8]]},"104":{"position":[[117,8]]},"136":{"position":[[29,5]]},"138":{"position":[[270,5]]},"142":{"position":[[684,5],[1281,5],[2756,5],[2843,5],[3380,5],[3948,5],[5387,5],[5471,5]]},"154":{"position":[[47,8]]},"273":{"position":[[2454,5],[2593,5]]},"290":{"position":[[130,6]]},"294":{"position":[[154,8]]},"296":{"position":[[8,7],[69,8]]},"300":{"position":[[66,8],[176,8],[283,8],[392,8]]},"302":{"position":[[66,8]]},"306":{"position":[[11,5],[140,5]]},"320":{"position":[[86,7],[117,7]]},"322":{"position":[[138,8]]},"328":{"position":[[141,5]]},"349":{"position":[[992,5]]},"355":{"position":[[11,5],[149,6],[335,5]]},"357":{"position":[[3,6]]},"365":{"position":[[0,8]]},"389":{"position":[[142,7],[173,7]]},"393":{"position":[[126,5],[215,8],[1320,8]]},"397":{"position":[[180,5],[933,8]]},"399":{"position":[[4042,5]]},"403":{"position":[[402,8]]},"415":{"position":[[978,8]]},"419":{"position":[[3875,5],[4048,5]]},"437":{"position":[[161,5]]},"489":{"position":[[86,7],[117,7]]},"605":{"position":[[7,5]]},"613":{"position":[[140,5]]},"660":{"position":[[819,5]]},"678":{"position":[[254,6]]},"680":{"position":[[84,6]]},"688":{"position":[[169,8]]},"690":{"position":[[266,6]]},"692":{"position":[[16458,5]]},"696":{"position":[[15443,5]]},"706":{"position":[[254,6]]},"708":{"position":[[84,6]]},"716":{"position":[[478,5]]},"734":{"position":[[477,5]]},"752":{"position":[[166,5]]},"754":{"position":[[254,6]]},"756":{"position":[[84,6]]},"765":{"position":[[92,5],[364,5]]},"767":{"position":[[24724,5]]},"769":{"position":[[207,6]]},"771":{"position":[[84,5]]},"775":{"position":[[254,6]]},"777":{"position":[[84,6]]},"792":{"position":[[8617,5]]},"798":{"position":[[254,6]]},"800":{"position":[[84,6]]}}}],["state",{"_index":551,"t":{"60":{"position":[[1284,7]]},"198":{"position":[[316,5]]},"269":{"position":[[471,5]]},"277":{"position":[[172,5]]},"306":{"position":[[1036,5]]},"328":{"position":[[833,5]]},"403":{"position":[[1204,7],[3455,5],[3929,6],[4616,6],[4988,6],[6188,6],[6573,5]]},"437":{"position":[[1481,5]]},"467":{"position":[[80,7]]},"485":{"position":[[256,7]]},"521":{"position":[[88,6]]},"523":{"position":[[384,6]]},"605":{"position":[[1106,6]]},"607":{"position":[[950,6],[6601,6]]},"660":{"position":[[3103,5]]},"670":{"position":[[51,6],[129,5],[388,6],[587,5],[746,5]]},"690":{"position":[[17,7]]},"694":{"position":[[125,7]]},"716":{"position":[[607,7]]},"734":{"position":[[2537,5]]},"742":{"position":[[23397,7]]},"744":{"position":[[51,6],[129,5],[506,6],[895,6],[7453,5],[7612,5]]},"767":{"position":[[24133,5]]}}}],["static",{"_index":387,"t":{"16":{"position":[[14443,6],[20055,6],[25833,6]]},"80":{"position":[[3743,6]]},"86":{"position":[[1227,6]]},"112":{"position":[[1435,6]]},"124":{"position":[[1435,6]]},"170":{"position":[[1137,6]]},"172":{"position":[[1971,6]]},"190":{"position":[[1435,6]]},"213":{"position":[[2321,6]]},"215":{"position":[[2281,6],[7450,6]]},"221":{"position":[[3578,6],[8773,6],[13989,6],[19016,6]]},"230":{"position":[[2582,6]]},"232":{"position":[[2326,6]]},"245":{"position":[[2561,6]]},"247":{"position":[[2333,6],[7335,6]]},"257":{"position":[[1411,6]]},"288":{"position":[[2410,6],[7317,6],[12955,6]]},"312":{"position":[[2422,6],[7450,6]]},"318":{"position":[[2707,6],[8026,6],[13260,6]]},"338":{"position":[[2470,6]]},"345":{"position":[[3394,6]]},"369":{"position":[[2838,6],[8344,6]]},"371":{"position":[[2960,6]]},"373":{"position":[[2256,6]]},"385":{"position":[[2407,6]]},"387":{"position":[[2370,6],[7622,6]]},"445":{"position":[[2428,6],[7477,6]]},"449":{"position":[[2390,6],[7605,6]]},"467":{"position":[[2354,6]]},"469":{"position":[[2516,6]]},"471":{"position":[[2443,6]]},"485":{"position":[[2644,6]]},"487":{"position":[[2567,6]]},"505":{"position":[[2918,6],[8292,6],[13707,6],[18817,6],[23859,6]]},"521":{"position":[[2367,6]]},"523":{"position":[[2854,6]]},"525":{"position":[[2507,6]]},"537":{"position":[[2604,6]]},"541":{"position":[[2603,6]]},"543":{"position":[[2462,6]]},"545":{"position":[[2238,6],[7184,6]]},"547":{"position":[[2330,6],[7175,6]]},"562":{"position":[[2417,6]]},"569":{"position":[[2807,6],[8322,6],[13758,6]]},"571":{"position":[[2774,6]]},"576":{"position":[[2541,6],[7875,6]]},"583":{"position":[[2619,6]]},"605":{"position":[[3547,6],[9140,6],[15388,6],[21637,6],[27296,6]]},"607":{"position":[[3394,6],[9069,6],[14826,6],[20568,6]]},"622":{"position":[[2828,6]]},"624":{"position":[[2383,6]]},"630":{"position":[[2807,6]]},"632":{"position":[[2296,6]]},"634":{"position":[[2464,6],[7668,6],[12724,6]]},"644":{"position":[[3056,6],[8091,6]]},"646":{"position":[[2513,6],[7563,6]]},"648":{"position":[[2505,6],[8253,6],[13704,6],[19010,6],[24088,6]]},"668":{"position":[[7167,6]]},"670":{"position":[[3556,6]]},"692":{"position":[[2750,6],[7714,6],[13100,6],[18927,6],[24041,6]]},"694":{"position":[[5736,6],[11544,6]]},"696":{"position":[[5303,6],[11498,6],[17799,6]]},"698":{"position":[[5678,6],[11518,6]]},"718":{"position":[[4425,6],[9540,6],[14851,6],[19923,6],[25093,6],[31422,6],[37493,6]]},"720":{"position":[[2312,6],[9010,6]]},"722":{"position":[[9672,6],[15964,6],[21845,6],[27700,6],[33183,6],[38314,6],[43422,6],[48544,6]]},"734":{"position":[[6049,6]]},"740":{"position":[[2602,6],[7721,6],[13043,6],[18071,6]]},"742":{"position":[[6709,6],[12983,6],[19977,6],[25611,6]]},"744":{"position":[[3861,6],[10477,6],[16935,6]]},"746":{"position":[[9737,6]]},"767":{"position":[[4395,6],[13263,6],[20304,6],[27172,6],[32353,6],[37395,6],[42455,6]]},"769":{"position":[[2475,6],[9802,6],[15160,6],[24906,6],[32551,6],[41538,6]]},"786":{"position":[[4070,6],[9003,6],[14169,6],[19059,6],[24105,6],[31254,6],[36298,6]]},"788":{"position":[[5103,6],[11002,6]]},"790":{"position":[[2588,6],[8176,6],[13201,6]]},"792":{"position":[[5407,6],[11188,6],[17834,6]]},"809":{"position":[[4073,6],[9027,6],[14204,6],[19088,6],[24129,6],[30764,6],[35803,6]]},"811":{"position":[[5154,6],[11475,6]]},"813":{"position":[[4633,6],[10611,6]]},"815":{"position":[[5907,6],[12141,6],[17314,6],[22424,6],[27619,6],[32725,6]]}}}],["statu",{"_index":1052,"t":{"152":{"position":[[558,6]]}}}],["status\":\"serv",{"_index":1039,"t":{"150":{"position":[[275,20],[418,20]]}}}],["stay",{"_index":2052,"t":{"638":{"position":[[295,4]]}}}],["step",{"_index":604,"t":{"72":{"position":[[29,4],[37,4]]},"94":{"position":[[10,4]]},"138":{"position":[[71,6]]},"168":{"position":[[82,4],[149,6]]},"349":{"position":[[926,6]]},"395":{"position":[[344,5]]},"399":{"position":[[193,4],[353,4]]},"405":{"position":[[2379,5],[2517,5],[3738,5]]},"447":{"position":[[10,4]]},"664":{"position":[[88,6],[331,4]]},"670":{"position":[[1025,4]]},"698":{"position":[[30,4]]},"738":{"position":[[86,6]]}}}],["still",{"_index":971,"t":{"142":{"position":[[3615,5]]},"221":{"position":[[11660,5]]},"273":{"position":[[861,5],[2877,5]]},"275":{"position":[[255,5]]},"312":{"position":[[10920,5]]},"318":{"position":[[5751,5],[10938,5],[10979,5]]},"371":{"position":[[36,5]]},"423":{"position":[[611,5]]},"605":{"position":[[12320,5],[18544,5],[19404,5],[24593,5],[25061,5]]},"607":{"position":[[18331,5]]},"634":{"position":[[5429,5]]},"644":{"position":[[151,5],[195,5]]},"648":{"position":[[16738,5]]},"696":{"position":[[8337,5]]},"698":{"position":[[53,5],[358,5]]},"792":{"position":[[8433,5]]},"813":{"position":[[8008,5]]}}}],["stop",{"_index":1654,"t":{"417":{"position":[[306,4]]}}}],["storag",{"_index":914,"t":{"142":{"position":[[26,7],[81,7],[201,7],[298,7]]},"259":{"position":[[1037,7],[2633,7]]}}}],["store",{"_index":134,"t":{"14":{"position":[[255,5]]},"16":{"position":[[3378,7],[3388,7],[3485,5],[3592,5],[3683,7],[3722,5],[3810,6],[3989,7],[8825,6],[29148,6],[29319,6]]},"24":{"position":[[2,7]]},"36":{"position":[[74,6]]},"74":{"position":[[159,5],[289,5],[329,6],[446,6],[554,6],[662,6],[785,6]]},"76":{"position":[[68,5]]},"78":{"position":[[210,5],[496,5],[782,5],[1068,5],[1335,5]]},"80":{"position":[[39,5]]},"82":{"position":[[107,6]]},"84":{"position":[[2,5],[93,5],[224,6]]},"86":{"position":[[441,7],[1030,8],[1615,5],[1713,6],[2163,5],[2479,8]]},"142":{"position":[[2897,6],[5525,6]]},"168":{"position":[[124,5]]},"174":{"position":[[89,5]]},"204":{"position":[[1639,6]]},"208":{"position":[[561,6]]},"221":{"position":[[1071,6],[22651,6]]},"227":{"position":[[561,6]]},"238":{"position":[[1358,6]]},"242":{"position":[[561,6]]},"251":{"position":[[126,6],[245,6]]},"255":{"position":[[90,6]]},"259":{"position":[[57,6]]},"261":{"position":[[953,5]]},"263":{"position":[[375,5]]},"279":{"position":[[1958,6]]},"285":{"position":[[561,6]]},"288":{"position":[[46,6]]},"306":{"position":[[2268,6]]},"310":{"position":[[561,6]]},"314":{"position":[[113,5]]},"328":{"position":[[1771,6]]},"332":{"position":[[561,6]]},"345":{"position":[[650,5]]},"379":{"position":[[1350,6]]},"381":{"position":[[561,6]]},"403":{"position":[[3664,6],[4348,6],[5992,6]]},"423":{"position":[[3051,5]]},"437":{"position":[[3257,6]]},"443":{"position":[[561,6]]},"455":{"position":[[1642,6]]},"459":{"position":[[561,6]]},"471":{"position":[[5375,5]]},"477":{"position":[[1411,6]]},"481":{"position":[[561,6]]},"493":{"position":[[1501,6]]},"497":{"position":[[561,6]]},"511":{"position":[[1389,6]]},"515":{"position":[[561,6]]},"531":{"position":[[1342,6]]},"535":{"position":[[561,6]]},"553":{"position":[[1813,6]]},"557":{"position":[[561,6]]},"567":{"position":[[78,6]]},"569":{"position":[[46,6],[407,6],[5524,6],[5924,6],[10979,6],[11346,6],[16445,6]]},"571":{"position":[[38,6],[5137,6],[5461,6]]},"587":{"position":[[111,6],[356,6]]},"593":{"position":[[930,6]]},"597":{"position":[[561,6]]},"605":{"position":[[12257,6],[24519,6]]},"613":{"position":[[1586,6]]},"617":{"position":[[561,6]]},"640":{"position":[[634,6]]},"648":{"position":[[5354,6]]},"658":{"position":[[421,6]]},"670":{"position":[[103,7],[1045,6],[1817,6],[2901,6],[4310,6],[5517,6],[6276,6]]},"672":{"position":[[9432,6]]},"728":{"position":[[253,6]]},"732":{"position":[[422,6]]},"744":{"position":[[103,7],[492,6],[941,6],[1770,6],[1944,6],[3002,6],[3232,6],[4615,6],[4799,6],[5980,6],[6160,6],[6961,6],[7139,6]]},"746":{"position":[[18936,6]]},"769":{"position":[[21349,5]]},"802":{"position":[[28,6]]}}}],["store_id",{"_index":406,"t":{"16":{"position":[[15815,8],[21427,8],[27215,8]]},"80":{"position":[[5520,8]]},"112":{"position":[[2459,8]]},"124":{"position":[[2459,8]]},"170":{"position":[[1815,8]]},"172":{"position":[[3243,8]]},"190":{"position":[[2459,8]]},"213":{"position":[[3658,8]]},"215":{"position":[[3650,8],[8821,8]]},"221":{"position":[[4943,8],[10147,8],[15358,8],[20387,8]]},"230":{"position":[[3918,8]]},"232":{"position":[[3696,8]]},"245":{"position":[[3920,8]]},"247":{"position":[[3665,8],[8695,8]]},"257":{"position":[[2435,8]]},"288":{"position":[[3738,8],[8646,8],[14499,8]]},"312":{"position":[[3792,8],[8819,8]]},"318":{"position":[[4103,8],[9396,8],[14630,8]]},"338":{"position":[[3847,8]]},"345":{"position":[[4761,8]]},"369":{"position":[[4350,8],[9716,8]]},"371":{"position":[[4582,8]]},"373":{"position":[[3628,8]]},"385":{"position":[[3756,8]]},"387":{"position":[[3747,8],[9000,8]]},"445":{"position":[[3801,8],[8849,8]]},"449":{"position":[[3764,8],[8979,8]]},"467":{"position":[[3689,8]]},"469":{"position":[[3931,8]]},"471":{"position":[[3820,8]]},"485":{"position":[[4031,8]]},"487":{"position":[[3940,8]]},"505":{"position":[[4400,8],[9662,8],[15077,8],[20189,8],[25230,8]]},"521":{"position":[[3704,8]]},"523":{"position":[[4268,8]]},"525":{"position":[[3886,8]]},"537":{"position":[[4002,8]]},"541":{"position":[[3997,8]]},"543":{"position":[[3798,8]]},"545":{"position":[[3596,8],[8542,8]]},"547":{"position":[[3658,8],[8534,8]]},"562":{"position":[[3785,8]]},"569":{"position":[[4196,8],[9690,8],[15136,8]]},"571":{"position":[[4045,8]]},"576":{"position":[[3955,8],[9289,8]]},"583":{"position":[[4131,8]]},"605":{"position":[[4916,8],[10509,8],[16760,8],[23006,8],[28666,8]]},"607":{"position":[[4764,8],[10442,8],[16197,8],[21939,8]]},"622":{"position":[[4281,8]]},"624":{"position":[[3763,8]]},"630":{"position":[[4369,8]]},"632":{"position":[[3668,8]]},"634":{"position":[[3872,8],[9041,8],[14100,8]]},"644":{"position":[[4427,8],[9461,8]]},"646":{"position":[[3901,8],[8937,8]]},"648":{"position":[[3938,8],[9676,8],[15128,8],[20381,8],[25457,8]]},"668":{"position":[[8572,8]]},"670":{"position":[[4989,8]]},"692":{"position":[[4093,8],[9061,8],[14610,8],[20298,8],[25410,8]]},"694":{"position":[[7309,8],[12918,8]]},"696":{"position":[[6744,8],[13154,8],[19167,8]]},"698":{"position":[[7191,8],[12891,8]]},"718":{"position":[[5827,8],[10917,8],[16253,8],[21300,8],[26477,8],[33094,8],[38870,8]]},"720":{"position":[[3684,8],[10381,8]]},"722":{"position":[[11259,8],[17435,8],[23370,8],[29140,8],[34556,8],[39670,8],[44791,8],[49928,8]]},"734":{"position":[[7942,8]]},"740":{"position":[[3969,8],[9092,8],[14446,8],[19439,8]]},"742":{"position":[[8072,8],[14774,8],[21513,8],[26978,8]]},"744":{"position":[[5452,8],[12064,8],[18523,8]]},"746":{"position":[[12966,8]]},"767":{"position":[[6627,8],[15005,8],[21976,8],[28542,8],[33724,8],[38769,8],[43830,8]]},"769":{"position":[[3846,8],[11169,8],[16536,8],[26281,8],[33917,8],[42904,8]]},"786":{"position":[[5414,8],[10375,8],[15513,8],[20431,8],[25478,8],[32626,8],[37670,8]]},"788":{"position":[[6686,8],[12376,8]]},"790":{"position":[[3956,8],[9576,8],[14573,8]]},"792":{"position":[[6845,8],[12564,8],[19200,8]]},"809":{"position":[[5420,8],[10402,8],[15547,8],[20459,8],[25502,8],[32135,8],[37175,8]]},"811":{"position":[[6848,8],[12850,8]]},"813":{"position":[[6186,8],[11989,8]]},"815":{"position":[[7643,8],[13520,8],[18695,8],[23807,8],[29000,8],[34106,8]]}}}],["storeid",{"_index":348,"t":{"16":{"position":[[12793,8],[13642,8],[14878,7],[18405,8],[19254,8],[20490,7],[24177,8],[25031,8],[26268,7]]},"80":{"position":[[1241,8],[2415,8],[4178,7]]},"86":{"position":[[385,7]]},"98":{"position":[[1302,8],[4720,8]]},"112":{"position":[[514,8],[1049,8],[1870,7]]},"124":{"position":[[514,8],[1049,8],[1870,7]]},"170":{"position":[[460,8],[874,8],[1498,7]]},"172":{"position":[[785,8],[1383,8],[2306,7]]},"190":{"position":[[514,8],[1049,8],[1870,7]]},"213":{"position":[[627,8],[1430,8],[2756,7]]},"215":{"position":[[637,8],[1483,8],[2716,7],[5802,8],[6650,8],[7885,7]]},"221":{"position":[[1942,8],[2784,8],[4013,7],[7005,8],[7845,8],[9208,7],[12345,8],[13191,8],[14424,7],[17368,8],[18216,8],[19451,7]]},"230":{"position":[[889,8],[1692,8],[3017,7]]},"232":{"position":[[680,8],[1527,8],[2761,7]]},"245":{"position":[[937,8],[1773,8],[2996,7]]},"247":{"position":[[648,8],[1447,8],[2768,7],[5709,8],[6546,8],[7770,7]]},"257":{"position":[[490,8],[1025,8],[1846,7]]},"288":{"position":[[734,8],[1528,8],[2845,7],[5638,8],[6434,8],[7752,7],[10816,8],[11796,8],[13390,7]]},"312":{"position":[[776,8],[1623,8],[2857,7],[5806,8],[6652,8],[7885,7]]},"318":{"position":[[895,8],[1757,8],[3142,7],[6380,8],[7227,8],[8461,7],[11614,8],[12461,8],[13695,7]]},"338":{"position":[[810,8],[1664,8],[2905,7]]},"345":{"position":[[1754,8],[2598,8],[3829,7]]},"369":{"position":[[758,8],[1726,8],[3273,7],[6694,8],[7543,8],[8779,7]]},"371":{"position":[[660,8],[1738,8],[3395,7]]},"373":{"position":[[606,8],[1455,8],[2691,7]]},"385":{"position":[[689,8],[1504,8],[2842,7]]},"387":{"position":[[710,8],[1564,8],[2805,7],[5960,8],[6815,8],[8057,7]]},"445":{"position":[[776,8],[1626,8],[2863,7],[5827,8],[6676,8],[7912,7]]},"449":{"position":[[736,8],[1587,8],[2825,7],[5951,8],[6802,8],[8040,7]]},"467":{"position":[[664,8],[1465,8],[2789,7]]},"469":{"position":[[666,8],[1547,8],[2951,7]]},"471":{"position":[[783,8],[1637,8],[2878,7]]},"485":{"position":[[850,8],[1703,8],[3079,7]]},"487":{"position":[[915,8],[1765,8],[3002,7]]},"505":{"position":[[898,8],[1836,8],[3353,7],[6646,8],[7493,8],[8727,7],[12061,8],[12908,8],[14142,7],[17167,8],[18016,8],[19252,7],[22211,8],[23059,8],[24294,7]]},"521":{"position":[[673,8],[1476,8],[2802,7]]},"523":{"position":[[1006,8],[1886,8],[3289,7]]},"525":{"position":[[843,8],[1699,8],[2942,7]]},"537":{"position":[[752,8],[1606,8],[3039,7]]},"541":{"position":[[759,8],[1609,8],[3038,7]]},"543":{"position":[[770,8],[1572,8],[2897,7]]},"545":{"position":[[616,8],[1451,8],[2673,7],[5562,8],[6397,8],[7619,7]]},"547":{"position":[[653,8],[1448,8],[2765,7],[5551,8],[6387,8],[7610,7]]},"562":{"position":[[775,8],[1620,8],[2852,7]]},"569":{"position":[[1025,8],[1920,8],[3242,7],[6597,8],[7473,8],[8757,7],[12013,8],[12899,8],[14193,7]]},"571":{"position":[[1228,8],[2005,8],[3209,7]]},"576":{"position":[[766,8],[1650,8],[2976,7],[6100,8],[6984,8],[8310,7]]},"583":{"position":[[687,8],[1648,8],[3054,7]]},"605":{"position":[[1903,8],[2749,8],[3982,7],[7496,8],[8342,8],[9575,7],[13738,8],[14587,8],[15823,7],[19993,8],[20839,8],[22072,7],[25650,8],[26497,8],[27731,7]]},"607":{"position":[[1748,8],[2595,8],[3829,7],[7417,8],[8267,8],[9504,7],[13178,8],[14026,8],[15261,7],[18920,8],[19768,8],[21003,7]]},"622":{"position":[[902,8],[1821,8],[3263,7]]},"624":{"position":[[717,8],[1574,8],[2818,7]]},"630":{"position":[[627,8],[1645,8],[3242,7]]},"632":{"position":[[646,8],[1495,8],[2731,7]]},"634":{"position":[[627,8],[1502,8],[2899,7],[6016,8],[6866,8],[8103,7],[11066,8],[11919,8],[13159,7]]},"644":{"position":[[1408,8],[2256,8],[3491,7],[6445,8],[7292,8],[8526,7]]},"646":{"position":[[717,8],[1571,8],[2948,7],[5909,8],[6760,8],[7998,7]]},"648":{"position":[[692,8],[1638,8],[2940,7],[6351,8],[7230,8],[8688,7],[11799,8],[12680,8],[14139,7],[17362,8],[18210,8],[19445,7],[22444,8],[23290,8],[24523,7]]},"668":{"position":[[5337,8],[6208,8],[7602,7]]},"670":{"position":[[1669,8],[2569,8],[3991,7]]},"692":{"position":[[1044,8],[1853,8],[3185,7],[6000,8],[6813,8],[8149,7],[10988,8],[11944,8],[13535,7],[17279,8],[18127,8],[19362,7],[22397,8],[23243,8],[24476,7]]},"694":{"position":[[3462,8],[4471,8],[6171,7],[9890,8],[10741,8],[11979,7]]},"696":{"position":[[3365,8],[4262,8],[5738,7],[9058,8],[10150,8],[11933,7],[16157,8],[17002,8],[18234,7]]},"698":{"position":[[3560,8],[4519,8],[6113,7],[9866,8],[10716,8],[11953,7]]},"718":{"position":[[2601,8],[3469,8],[4860,7],[7880,8],[8734,8],[9975,7],[13027,8],[13895,8],[15286,7],[18263,8],[19117,8],[20358,7],[23419,8],[24280,8],[25528,7],[28986,8],[30104,8],[31857,7],[35833,8],[36687,8],[37928,7]]},"720":{"position":[[662,8],[1511,8],[2747,7],[7362,8],[8210,8],[9445,7]]},"722":{"position":[[7406,8],[8439,8],[10107,7],[14002,8],[14939,8],[16399,7],[19739,8],[20720,8],[22280,7],[25764,8],[26660,8],[28135,7],[31417,8],[32256,8],[33618,7],[36582,8],[37404,8],[38749,7],[41778,8],[42624,8],[43857,7],[46870,8],[47731,8],[48979,7]]},"734":{"position":[[3135,8],[4464,8],[6484,7]]},"740":{"position":[[962,8],[1806,8],[3037,7],[6073,8],[6921,8],[8156,7],[11217,8],[12086,8],[13478,7],[16429,8],[17274,8],[18506,7]]},"742":{"position":[[5077,8],[5917,8],[7144,7],[10309,8],[11546,8],[13418,7],[17849,8],[18841,8],[20412,7],[23971,8],[24815,8],[26046,7]]},"744":{"position":[[1622,8],[2670,8],[4296,7],[8317,8],[9346,8],[10912,7],[14773,8],[15803,8],[17370,7]]},"746":{"position":[[3863,8],[6448,8],[10172,7]]},"767":{"position":[[731,8],[2379,8],[4830,7],[10687,8],[11875,8],[13698,7],[17868,8],[18986,8],[20739,7],[25526,8],[26373,8],[27607,7],[30705,8],[31553,8],[32788,7],[35741,8],[36592,8],[37830,7],[40799,8],[41651,8],[42890,7]]},"769":{"position":[[827,8],[1675,8],[2910,7],[8162,8],[9006,8],[10237,7],[13502,8],[14355,8],[15595,7],[23250,8],[24102,8],[25341,7],[30913,8],[31756,8],[32986,7],[39900,8],[40743,8],[41973,7]]},"786":{"position":[[2362,8],[3172,8],[4505,7],[7353,8],[8202,8],[9438,7],[12461,8],[13271,8],[14604,7],[17409,8],[18258,8],[19494,7],[22453,8],[23303,8],[24540,7],[29604,8],[30453,8],[31689,7],[34648,8],[35497,8],[36733,7]]},"788":{"position":[[2881,8],[3920,8],[5538,7],[9348,8],[10199,8],[11437,7]]},"790":{"position":[[832,8],[1666,8],[3023,7],[6356,8],[7222,8],[8611,7],[11551,8],[12400,8],[13636,7]]},"792":{"position":[[3475,8],[4369,8],[5842,7],[9530,8],[10383,8],[11623,7],[16082,8],[16914,8],[18269,7]]},"809":{"position":[[2359,8],[3172,8],[4508,7],[7371,8],[8223,8],[9462,7],[12498,8],[13307,8],[14639,7],[17440,8],[18288,8],[19523,7],[22477,8],[23327,8],[24564,7],[29116,8],[29964,8],[31199,7],[34153,8],[35002,8],[36238,7]]},"811":{"position":[[2638,8],[3768,8],[5589,7],[9819,8],[10671,8],[11910,7]]},"813":{"position":[[2471,8],[3480,8],[5068,7],[8949,8],[9804,8],[11046,7]]},"815":{"position":[[3343,8],[4525,8],[6342,7],[10477,8],[11333,8],[12576,7],[15646,8],[16504,8],[17749,7],[20752,8],[21612,8],[22859,7],[25951,8],[26809,8],[28054,7],[31057,8],[31915,8],[33160,7]]}}}],["strategi",{"_index":1691,"t":{"425":{"position":[[1865,11]]}}}],["stream",{"_index":1950,"t":{"583":{"position":[[6173,9]]}}}],["stricter",{"_index":959,"t":{"142":{"position":[[3031,8]]}}}],["strictli",{"_index":1671,"t":{"419":{"position":[[3908,9]]}}}],["string",{"_index":158,"t":{"16":{"position":[[487,7],[5245,6]]},"18":{"position":[[12,7]]},"30":{"position":[[16,6]]},"56":{"position":[[0,9],[10,9],[153,7]]},"172":{"position":[[76,6]]},"176":{"position":[[16,6]]},"204":{"position":[[1221,6]]},"208":{"position":[[143,6]]},"221":{"position":[[22233,6]]},"227":{"position":[[143,6]]},"238":{"position":[[940,6]]},"242":{"position":[[143,6]]},"279":{"position":[[1540,6]]},"285":{"position":[[143,6]]},"306":{"position":[[1850,6]]},"310":{"position":[[143,6]]},"328":{"position":[[1353,6]]},"332":{"position":[[143,6]]},"379":{"position":[[932,6]]},"381":{"position":[[143,6]]},"403":{"position":[[785,8],[5551,8]]},"415":{"position":[[509,6]]},"437":{"position":[[2839,6]]},"443":{"position":[[143,6]]},"455":{"position":[[1224,6]]},"459":{"position":[[143,6]]},"477":{"position":[[993,6]]},"481":{"position":[[143,6]]},"493":{"position":[[1083,6]]},"497":{"position":[[143,6]]},"511":{"position":[[971,6]]},"515":{"position":[[143,6]]},"531":{"position":[[924,6]]},"535":{"position":[[143,6]]},"553":{"position":[[1395,6]]},"557":{"position":[[143,6]]},"593":{"position":[[512,6]]},"597":{"position":[[143,6]]},"613":{"position":[[1168,6]]},"617":{"position":[[143,6]]},"640":{"position":[[216,6]]},"658":{"position":[[17,6]]},"732":{"position":[[17,6]]}}}],["strongli",{"_index":1147,"t":{"178":{"position":[[6,8]]}}}],["structur",{"_index":1105,"t":{"160":{"position":[[18,10]]},"423":{"position":[[3081,10]]}}}],["student",{"_index":1206,"t":{"219":{"position":[[395,7]]}}}],["studio",{"_index":845,"t":{"102":{"position":[[978,7],[1021,7],[1036,6]]}}}],["sub",{"_index":1959,"t":{"585":{"position":[[705,3]]},"790":{"position":[[5546,3]]}}}],["subject",{"_index":1068,"t":{"152":{"position":[[1052,7]]},"742":{"position":[[2623,9]]}}}],["submit",{"_index":1351,"t":{"288":{"position":[[10176,6]]}}}],["subscrib",{"_index":1752,"t":{"453":{"position":[[911,10]]},"626":{"position":[[111,11]]},"628":{"position":[[1833,10],[2067,10]]},"754":{"position":[[492,10],[534,10],[553,10],[970,11]]},"762":{"position":[[160,10],[220,10],[274,10]]},"765":{"position":[[549,10],[720,11],[1085,13],[1146,13]]},"767":{"position":[[10865,10],[10933,13],[11015,10],[11083,13],[11160,10],[11233,13],[12238,10],[12444,10],[12645,10],[14048,10],[14124,13],[14208,10],[14284,13],[14363,10],[14444,13],[15564,10],[15720,10],[15871,10],[16777,10],[16931,10],[17080,10],[35994,13],[36989,13],[38191,13],[40093,13],[40117,12]]},"769":{"position":[[6701,11],[7154,13],[7215,13],[7400,13],[18909,11],[19063,10],[19318,12],[19692,10],[19736,12],[19799,11],[20068,10],[20179,13],[20402,10],[20445,10],[20708,10],[20761,10],[21614,10],[21673,11],[22042,12],[22285,13],[22346,13],[27853,10],[28256,10],[28314,10],[28442,10],[28614,11],[28816,11],[28881,10],[29484,13],[29583,12],[29679,13],[29959,10],[30207,10],[30282,13],[37402,13],[37761,11],[37826,10],[38314,13],[38413,12],[38509,13]]}}}],["subscriber_memb",{"_index":2021,"t":{"628":{"position":[[191,17],[257,18],[575,19],[825,20],[893,20],[1424,17]]},"630":{"position":[[779,17],[846,20],[1982,17],[3566,17],[3641,20],[4902,17],[5872,17]]},"634":{"position":[[5437,17],[11310,20],[12307,20],[13511,20],[15410,20],[15441,19]]},"769":{"position":[[28467,17],[28581,17],[28750,17],[28850,18],[29234,19],[29514,20],[29990,17],[30104,17],[36027,17],[36289,19],[36591,17],[36813,19],[37695,17],[37795,18],[38139,19],[38344,20]]}}}],["subscript",{"_index":2608,"t":{"769":{"position":[[21063,13]]}}}],["subsequ",{"_index":1288,"t":{"261":{"position":[[1894,10]]},"605":{"position":[[19328,10],[24984,10]]},"607":{"position":[[18253,10]]},"769":{"position":[[37109,10]]}}}],["subset",{"_index":2253,"t":{"710":{"position":[[260,6]]},"758":{"position":[[129,6]]},"760":{"position":[[287,6]]},"779":{"position":[[90,6]]},"781":{"position":[[109,6]]},"802":{"position":[[122,6]]},"804":{"position":[[115,6]]}}}],["substanti",{"_index":2461,"t":{"744":{"position":[[643,11]]}}}],["subtract",{"_index":580,"t":{"66":{"position":[[429,11]]},"316":{"position":[[658,11]]}}}],["succe",{"_index":287,"t":{"16":{"position":[[8289,8]]},"200":{"position":[[598,7]]},"471":{"position":[[5468,8]]}}}],["succeed",{"_index":1704,"t":{"429":{"position":[[848,9],[1727,10]]}}}],["such",{"_index":39,"t":{"4":{"position":[[375,4]]},"16":{"position":[[353,4],[3603,4],[6640,5]]},"88":{"position":[[74,4]]},"176":{"position":[[163,4]]},"178":{"position":[[97,5],[155,5]]},"304":{"position":[[561,4]]},"377":{"position":[[69,5]]},"403":{"position":[[2383,4]]},"425":{"position":[[2572,4]]},"429":{"position":[[1775,4]]},"435":{"position":[[404,4],[477,5]]},"475":{"position":[[70,4]]},"487":{"position":[[312,5]]},"491":{"position":[[1057,4]]},"499":{"position":[[172,4]]},"578":{"position":[[54,5]]},"626":{"position":[[57,4]]},"660":{"position":[[646,4]]},"678":{"position":[[535,4]]},"706":{"position":[[535,4]]},"712":{"position":[[669,4]]},"722":{"position":[[276,4]]},"728":{"position":[[165,5]]},"769":{"position":[[18180,5]]},"775":{"position":[[384,4]]},"798":{"position":[[384,4]]}}}],["sugar",{"_index":492,"t":{"52":{"position":[[554,5]]}}}],["sum",{"_index":1350,"t":{"288":{"position":[[10109,3]]}}}],["summar",{"_index":1293,"t":{"263":{"position":[[244,10]]}}}],["summari",{"_index":2510,"t":{"760":{"position":[[321,7]]}}}],["suppli",{"_index":2517,"t":{"762":{"position":[[200,8],[392,8]]},"767":{"position":[[10988,8],[12417,8],[14181,8],[15693,8],[16904,8],[18172,8],[19531,8],[21225,8],[22667,8],[23793,8]]}}}],["support",{"_index":206,"t":{"16":{"position":[[3268,9]]},"94":{"position":[[1208,7]]},"140":{"position":[[632,8]]},"142":{"position":[[8,8]]},"152":{"position":[[511,9],[586,7]]},"160":{"position":[[141,7]]},"304":{"position":[[271,7]]},"316":{"position":[[73,7]]},"403":{"position":[[2329,8],[4832,8]]},"415":{"position":[[75,7]]},"417":{"position":[[311,10]]},"461":{"position":[[385,7]]},"654":{"position":[[535,7]]},"668":{"position":[[158,7],[703,7]]},"672":{"position":[[9448,9],[9498,9]]},"712":{"position":[[471,7]]},"728":{"position":[[562,7]]},"746":{"position":[[18952,9],[19002,9]]},"786":{"position":[[29024,8]]},"788":{"position":[[12,8],[234,7]]},"790":{"position":[[12,8]]},"792":{"position":[[809,7],[1194,7]]},"809":{"position":[[28536,8]]},"811":{"position":[[212,7]]}}}],["suppos",{"_index":1199,"t":{"219":{"position":[[123,8]]},"547":{"position":[[0,7]]}}}],["sure",{"_index":1017,"t":{"146":{"position":[[322,4]]},"306":{"position":[[34,4]]},"318":{"position":[[5697,4],[16284,4]]},"338":{"position":[[5402,4]]},"355":{"position":[[34,4]]},"387":{"position":[[10567,4]]},"467":{"position":[[4999,4]]},"477":{"position":[[1599,4]]},"505":{"position":[[27112,4]]},"525":{"position":[[5638,4]]},"581":{"position":[[299,4]]},"613":{"position":[[34,4]]},"624":{"position":[[5749,4]]},"694":{"position":[[958,4]]},"722":{"position":[[41120,4]]},"726":{"position":[[112,4]]},"767":{"position":[[24934,4],[30129,4]]},"769":{"position":[[21325,4]]}}}],["switch",{"_index":500,"t":{"52":{"position":[[894,6]]},"98":{"position":[[381,6],[4068,6]]},"178":{"position":[[446,6]]},"415":{"position":[[1273,6]]},"431":{"position":[[842,6]]}}}],["syntact",{"_index":491,"t":{"52":{"position":[[544,9]]}}}],["syntax",{"_index":193,"t":{"16":{"position":[[2942,8],[2993,6],[3062,6],[3278,6],[5075,7],[29599,6]]},"48":{"position":[[84,6]]},"52":{"position":[[372,6],[442,6],[579,6],[733,6]]},"56":{"position":[[1004,7]]},"60":{"position":[[103,6]]},"62":{"position":[[53,7]]},"64":{"position":[[68,7]]},"66":{"position":[[67,7]]},"68":{"position":[[9,6],[64,6],[1745,6]]},"80":{"position":[[7336,7],[7371,6],[7416,6]]},"403":{"position":[[6762,6]]},"417":{"position":[[203,6]]},"425":{"position":[[1702,7]]},"431":{"position":[[802,6]]},"485":{"position":[[115,6],[5442,6],[5566,6],[5616,6],[5666,6],[5865,6],[5964,6],[6014,6]]}}}],["system",{"_index":77,"t":{"8":{"position":[[112,7],[164,6]]},"10":{"position":[[89,6]]},"14":{"position":[[55,7]]},"16":{"position":[[187,6],[237,6],[1574,7],[4055,7],[4536,6],[5432,7],[11849,7],[29792,8]]},"22":{"position":[[122,7]]},"26":{"position":[[38,7]]},"28":{"position":[[27,6]]},"30":{"position":[[203,7]]},"48":{"position":[[277,8]]},"50":{"position":[[200,6]]},"52":{"position":[[163,6]]},"56":{"position":[[1602,6]]},"70":{"position":[[249,6]]},"100":{"position":[[136,6],[227,6]]},"116":{"position":[[93,6]]},"128":{"position":[[93,6]]},"178":{"position":[[410,6]]},"198":{"position":[[51,7],[330,7]]},"204":{"position":[[1164,6],[1408,6],[1454,7]]},"208":{"position":[[86,6],[330,6],[376,7]]},"221":{"position":[[22176,6],[22420,6],[22466,7]]},"227":{"position":[[86,6],[330,6],[376,7]]},"236":{"position":[[330,6],[438,7]]},"238":{"position":[[883,6],[1127,6],[1173,7]]},"242":{"position":[[86,6],[330,6],[376,7]]},"259":{"position":[[1129,6]]},"273":{"position":[[913,7],[972,6]]},"277":{"position":[[165,6]]},"279":{"position":[[1483,6],[1727,6],[1773,7]]},"285":{"position":[[86,6],[330,6],[376,7]]},"290":{"position":[[566,6]]},"296":{"position":[[62,6]]},"300":{"position":[[59,6],[169,6],[276,6],[385,6]]},"302":{"position":[[59,6]]},"306":{"position":[[1049,6],[1121,6],[1793,6],[2037,6],[2083,7]]},"310":{"position":[[86,6],[330,6],[376,7]]},"328":{"position":[[846,6],[918,6],[1296,6],[1540,6],[1586,7]]},"332":{"position":[[86,6],[330,6],[376,7]]},"343":{"position":[[113,6],[293,6]]},"349":{"position":[[220,7]]},"353":{"position":[[61,6]]},"355":{"position":[[390,6]]},"377":{"position":[[339,6],[447,7]]},"379":{"position":[[875,6],[1119,6],[1165,7]]},"381":{"position":[[86,6],[330,6],[376,7]]},"391":{"position":[[241,7]]},"393":{"position":[[73,7],[103,6],[367,7],[1248,7]]},"395":{"position":[[169,7],[322,6]]},"397":{"position":[[114,7],[829,7],[921,7],[1162,7]]},"399":{"position":[[49,7],[107,6]]},"401":{"position":[[179,7],[328,7]]},"403":{"position":[[488,7],[1679,6],[2406,7],[6320,7],[7660,7]]},"405":{"position":[[1316,6],[1569,6]]},"407":{"position":[[249,7]]},"415":{"position":[[1243,6]]},"435":{"position":[[36,6]]},"437":{"position":[[1494,6],[1566,6],[2782,6],[3026,6],[3072,7]]},"443":{"position":[[86,6],[330,6],[376,7]]},"455":{"position":[[1167,6],[1411,6],[1457,7]]},"459":{"position":[[86,6],[330,6],[376,7]]},"475":{"position":[[207,6]]},"477":{"position":[[936,6],[1180,6],[1226,7]]},"481":{"position":[[86,6],[330,6],[376,7]]},"493":{"position":[[1026,6],[1270,6],[1316,7]]},"497":{"position":[[86,6],[330,6],[376,7]]},"499":{"position":[[84,6],[347,6]]},"511":{"position":[[914,6],[1158,6],[1204,7]]},"515":{"position":[[86,6],[330,6],[376,7]]},"531":{"position":[[867,6],[1111,6],[1157,7]]},"535":{"position":[[86,6],[330,6],[376,7]]},"553":{"position":[[1338,6],[1582,6],[1628,7]]},"557":{"position":[[86,6],[330,6],[376,7]]},"567":{"position":[[92,6]]},"571":{"position":[[441,7]]},"587":{"position":[[380,6]]},"593":{"position":[[455,6],[699,6],[745,7]]},"597":{"position":[[86,6],[330,6],[376,7]]},"599":{"position":[[265,6]]},"605":{"position":[[1002,7],[12271,6],[24533,6]]},"607":{"position":[[862,7]]},"613":{"position":[[1111,6],[1355,6],[1401,7]]},"617":{"position":[[86,6],[330,6],[376,7]]},"628":{"position":[[1741,6]]},"640":{"position":[[159,6],[403,6],[449,7]]},"658":{"position":[[204,6]]},"660":{"position":[[166,7],[193,7]]},"670":{"position":[[580,6]]},"676":{"position":[[59,6],[127,6],[226,6]]},"682":{"position":[[89,6]]},"688":{"position":[[78,7]]},"694":{"position":[[442,6]]},"700":{"position":[[228,8]]},"712":{"position":[[883,6]]},"714":{"position":[[419,6]]},"716":{"position":[[346,7]]},"720":{"position":[[5536,6]]},"724":{"position":[[496,8]]},"732":{"position":[[204,7]]},"742":{"position":[[23314,7]]},"744":{"position":[[888,6],[7446,6]]},"760":{"position":[[30,6],[353,7]]},"771":{"position":[[59,6],[807,8]]},"779":{"position":[[12,6]]},"802":{"position":[[18,6]]}}}],["system'",{"_index":489,"t":{"52":{"position":[[76,8]]},"767":{"position":[[24147,8]]}}}],["system.environ",{"_index":383,"t":{"16":{"position":[[14383,19],[19995,19],[25773,19]]},"80":{"position":[[3683,19]]},"86":{"position":[[1167,19]]},"112":{"position":[[1375,19]]},"124":{"position":[[1375,19]]},"170":{"position":[[1077,19]]},"172":{"position":[[1911,19]]},"190":{"position":[[1375,19]]},"213":{"position":[[2261,19]]},"215":{"position":[[2221,19],[7390,19]]},"221":{"position":[[3518,19],[8713,19],[13929,19],[18956,19]]},"230":{"position":[[2522,19]]},"232":{"position":[[2266,19]]},"245":{"position":[[2501,19]]},"247":{"position":[[2273,19],[7275,19]]},"257":{"position":[[1351,19]]},"288":{"position":[[2350,19],[7257,19],[12895,19]]},"312":{"position":[[2362,19],[7390,19]]},"318":{"position":[[2647,19],[7966,19],[13200,19]]},"338":{"position":[[2410,19]]},"345":{"position":[[3334,19]]},"369":{"position":[[2778,19],[8284,19]]},"371":{"position":[[2900,19]]},"373":{"position":[[2196,19]]},"385":{"position":[[2347,19]]},"387":{"position":[[2310,19],[7562,19]]},"445":{"position":[[2368,19],[7417,19]]},"449":{"position":[[2330,19],[7545,19]]},"467":{"position":[[2294,19]]},"469":{"position":[[2456,19]]},"471":{"position":[[2383,19]]},"485":{"position":[[2584,19]]},"487":{"position":[[2507,19]]},"505":{"position":[[2858,19],[8232,19],[13647,19],[18757,19],[23799,19]]},"521":{"position":[[2307,19]]},"523":{"position":[[2794,19]]},"525":{"position":[[2447,19]]},"537":{"position":[[2544,19]]},"541":{"position":[[2543,19]]},"543":{"position":[[2402,19]]},"545":{"position":[[2178,19],[7124,19]]},"547":{"position":[[2270,19],[7115,19]]},"562":{"position":[[2357,19]]},"569":{"position":[[2747,19],[8262,19],[13698,19]]},"571":{"position":[[2714,19]]},"576":{"position":[[2481,19],[7815,19]]},"583":{"position":[[2559,19]]},"605":{"position":[[3487,19],[9080,19],[15328,19],[21577,19],[27236,19]]},"607":{"position":[[3334,19],[9009,19],[14766,19],[20508,19]]},"622":{"position":[[2768,19]]},"624":{"position":[[2323,19]]},"630":{"position":[[2747,19]]},"632":{"position":[[2236,19]]},"634":{"position":[[2404,19],[7608,19],[12664,19]]},"644":{"position":[[2996,19],[8031,19]]},"646":{"position":[[2453,19],[7503,19]]},"648":{"position":[[2445,19],[8193,19],[13644,19],[18950,19],[24028,19]]},"668":{"position":[[7107,19]]},"670":{"position":[[3496,19]]},"692":{"position":[[2690,19],[7654,19],[13040,19],[18867,19],[23981,19]]},"694":{"position":[[5676,19],[11484,19]]},"696":{"position":[[5243,19],[11438,19],[17739,19]]},"698":{"position":[[5618,19],[11458,19]]},"718":{"position":[[4365,19],[9480,19],[14791,19],[19863,19],[25033,19],[31362,19],[37433,19]]},"720":{"position":[[2252,19],[8950,19]]},"722":{"position":[[9612,19],[15904,19],[21785,19],[27640,19],[33123,19],[38254,19],[43362,19],[48484,19]]},"734":{"position":[[5989,19]]},"740":{"position":[[2542,19],[7661,19],[12983,19],[18011,19]]},"742":{"position":[[6649,19],[12923,19],[19917,19],[25551,19]]},"744":{"position":[[3801,19],[10417,19],[16875,19]]},"746":{"position":[[9677,19]]},"767":{"position":[[4335,19],[13203,19],[20244,19],[27112,19],[32293,19],[37335,19],[42395,19]]},"769":{"position":[[2415,19],[9742,19],[15100,19],[24846,19],[32491,19],[41478,19]]},"786":{"position":[[4010,19],[8943,19],[14109,19],[18999,19],[24045,19],[31194,19],[36238,19]]},"788":{"position":[[5043,19],[10942,19]]},"790":{"position":[[2528,19],[8116,19],[13141,19]]},"792":{"position":[[5347,19],[11128,19],[17774,19]]},"809":{"position":[[4013,19],[8967,19],[14144,19],[19028,19],[24069,19],[30704,19],[35743,19]]},"811":{"position":[[5094,19],[11415,19]]},"813":{"position":[[4573,19],[10551,19]]},"815":{"position":[[5847,19],[12081,19],[17254,19],[22364,19],[27559,19],[32665,19]]}}}],["t.errorf(\"%v",{"_index":632,"t":{"80":{"position":[[3241,14]]}}}],["tabl",{"_index":930,"t":{"142":{"position":[[955,6],[1038,7],[3645,6],[3725,7]]},"152":{"position":[[399,5]]}}}],["tackl",{"_index":2019,"t":{"624":{"position":[[5658,7]]},"654":{"position":[[13,7]]},"692":{"position":[[246,6]]},"696":{"position":[[43,6]]},"700":{"position":[[195,8]]},"724":{"position":[[466,8]]},"728":{"position":[[55,6]]},"771":{"position":[[777,8]]}}}],["take",{"_index":145,"t":{"16":{"position":[[131,5]]},"56":{"position":[[1031,4],[2516,4]]},"58":{"position":[[2116,4]]},"60":{"position":[[239,4],[3445,4]]},"62":{"position":[[1505,4]]},"64":{"position":[[1886,4]]},"82":{"position":[[0,4]]},"100":{"position":[[0,4]]},"116":{"position":[[0,4]]},"128":{"position":[[0,4]]},"140":{"position":[[696,4]]},"405":{"position":[[846,5]]},"503":{"position":[[531,4]]},"571":{"position":[[139,6]]},"609":{"position":[[86,4],[413,4]]},"664":{"position":[[221,4]]},"668":{"position":[[2560,4]]},"672":{"position":[[9670,4]]},"690":{"position":[[373,5],[401,4]]},"694":{"position":[[92,4],[2803,5]]},"698":{"position":[[109,4]]},"738":{"position":[[344,4]]},"742":{"position":[[4307,4]]},"746":{"position":[[19173,4]]},"762":{"position":[[101,4],[308,4]]},"765":{"position":[[34,4]]},"817":{"position":[[0,4]]}}}],["taken",{"_index":550,"t":{"60":{"position":[[1240,5]]},"790":{"position":[[5702,6]]}}}],["task",{"_index":389,"t":{"16":{"position":[[14456,4],[20068,4],[25846,4]]},"80":{"position":[[3756,4]]},"86":{"position":[[1240,4]]},"112":{"position":[[1448,4]]},"124":{"position":[[1448,4]]},"170":{"position":[[1150,4]]},"172":{"position":[[1984,4]]},"190":{"position":[[1448,4]]},"213":{"position":[[2334,4]]},"215":{"position":[[2294,4],[7463,4]]},"221":{"position":[[3591,4],[8786,4],[14002,4],[19029,4]]},"230":{"position":[[2595,4]]},"232":{"position":[[2339,4]]},"245":{"position":[[2574,4]]},"247":{"position":[[2346,4],[7348,4]]},"257":{"position":[[1424,4]]},"288":{"position":[[2423,4],[7330,4],[12968,4]]},"312":{"position":[[2435,4],[7463,4]]},"318":{"position":[[2720,4],[8039,4],[13273,4],[16433,4]]},"338":{"position":[[2483,4]]},"345":{"position":[[3407,4]]},"369":{"position":[[2851,4],[8357,4]]},"371":{"position":[[2973,4]]},"373":{"position":[[2269,4]]},"385":{"position":[[2420,4]]},"387":{"position":[[2383,4],[7635,4]]},"445":{"position":[[2441,4],[7490,4]]},"449":{"position":[[2403,4],[7618,4]]},"467":{"position":[[2367,4]]},"469":{"position":[[2529,4]]},"471":{"position":[[2456,4]]},"485":{"position":[[2657,4]]},"487":{"position":[[2580,4]]},"505":{"position":[[2931,4],[8305,4],[13720,4],[18830,4],[23872,4]]},"521":{"position":[[2380,4]]},"523":{"position":[[2867,4]]},"525":{"position":[[2520,4]]},"537":{"position":[[2617,4]]},"541":{"position":[[2616,4]]},"543":{"position":[[2475,4]]},"545":{"position":[[2251,4],[7197,4]]},"547":{"position":[[2343,4],[7188,4]]},"562":{"position":[[2430,4]]},"569":{"position":[[2820,4],[8335,4],[13771,4]]},"571":{"position":[[2787,4]]},"576":{"position":[[2554,4],[7888,4]]},"583":{"position":[[2632,4]]},"605":{"position":[[3560,4],[9153,4],[15401,4],[21650,4],[27309,4]]},"607":{"position":[[3407,4],[9082,4],[14839,4],[20581,4]]},"622":{"position":[[2841,4]]},"624":{"position":[[2396,4]]},"630":{"position":[[2820,4]]},"632":{"position":[[2309,4]]},"634":{"position":[[2477,4],[7681,4],[12737,4]]},"644":{"position":[[3069,4],[8104,4]]},"646":{"position":[[2526,4],[7576,4]]},"648":{"position":[[2518,4],[8266,4],[13717,4],[19023,4],[24101,4]]},"668":{"position":[[7180,4]]},"670":{"position":[[3569,4]]},"692":{"position":[[2763,4],[7727,4],[13113,4],[18940,4],[24054,4]]},"694":{"position":[[5749,4],[11557,4]]},"696":{"position":[[5316,4],[11511,4],[17812,4]]},"698":{"position":[[5691,4],[11531,4]]},"712":{"position":[[862,5]]},"718":{"position":[[4438,4],[9553,4],[14864,4],[19936,4],[25106,4],[31435,4],[37506,4]]},"720":{"position":[[2325,4],[9023,4]]},"722":{"position":[[79,4],[9685,4],[15977,4],[21858,4],[27713,4],[33196,4],[38327,4],[43435,4],[48557,4]]},"734":{"position":[[6062,4]]},"740":{"position":[[2615,4],[7734,4],[13056,4],[18084,4]]},"742":{"position":[[6722,4],[12996,4],[19990,4],[25624,4]]},"744":{"position":[[3874,4],[10490,4],[16948,4]]},"746":{"position":[[9750,4]]},"767":{"position":[[4408,4],[13276,4],[20317,4],[27185,4],[32366,4],[37408,4],[42468,4]]},"769":{"position":[[2488,4],[9815,4],[15173,4],[24919,4],[32564,4],[41551,4]]},"786":{"position":[[4083,4],[9016,4],[14182,4],[19072,4],[24118,4],[31267,4],[36311,4]]},"788":{"position":[[5116,4],[11015,4]]},"790":{"position":[[2601,4],[8189,4],[13214,4]]},"792":{"position":[[5420,4],[11201,4],[17847,4]]},"809":{"position":[[4086,4],[9040,4],[14217,4],[19101,4],[24142,4],[30777,4],[35816,4]]},"811":{"position":[[5167,4],[11488,4]]},"813":{"position":[[4646,4],[10624,4]]},"815":{"position":[[5920,4],[12154,4],[17327,4],[22437,4],[27632,4],[32738,4]]}}}],["team",{"_index":17,"t":{"4":{"position":[[132,4]]},"16":{"position":[[5497,4],[5550,4],[6439,4]]},"56":{"position":[[1057,4],[1082,4],[1148,7],[1325,7],[1371,4],[1461,5],[1649,4],[1760,4],[1994,4],[2142,4],[2260,4],[2292,4],[2416,4]]},"202":{"position":[[436,4]]},"306":{"position":[[255,4],[404,4],[539,4],[814,7],[866,7],[1165,4],[1326,4],[1441,4]]},"312":{"position":[[10331,4]]},"314":{"position":[[333,4],[705,7],[757,7]]},"316":{"position":[[436,4],[900,7],[952,7]]},"353":{"position":[[683,4],[759,5]]},"403":{"position":[[597,7]]},"419":{"position":[[1394,4]]},"509":{"position":[[454,4]]},"517":{"position":[[165,4],[298,4],[358,4],[374,4]]},"519":{"position":[[29,4],[81,4],[259,4],[514,7],[566,7]]},"521":{"position":[[38,6]]},"523":{"position":[[301,4]]},"527":{"position":[[296,5]]},"529":{"position":[[312,4]]},"601":{"position":[[395,4],[811,7],[922,7],[974,7],[1202,5],[1386,4]]},"605":{"position":[[206,4],[622,7],[733,7],[785,7],[12524,5],[12553,4],[13014,4],[13051,4],[18291,5],[18370,4],[18779,5],[18814,4],[18846,5],[18875,4],[18907,5],[18936,4]]},"607":{"position":[[219,4],[494,7],[12272,5],[12301,4],[17730,5],[17809,4]]},"710":{"position":[[142,5]]},"712":{"position":[[877,5]]},"724":{"position":[[745,5]]},"760":{"position":[[115,6],[373,4],[459,4]]},"762":{"position":[[238,4]]},"767":{"position":[[1013,4],[1152,4],[2902,4],[3097,4],[5294,4],[5443,4],[7296,4],[7441,4],[9232,4],[9375,4],[11033,4],[12462,4],[14226,4],[15738,4],[16949,4]]},"781":{"position":[[343,5]]},"783":{"position":[[90,4],[136,4],[232,4],[276,4],[559,4]]},"788":{"position":[[30,5],[76,4],[94,5],[246,5],[372,4],[480,7],[635,7],[728,4],[1710,7],[1822,7],[1933,7],[2048,7],[2158,7],[2223,5],[3069,4],[3194,4],[4293,4],[4474,4],[5898,4],[6033,4],[7255,4],[7386,4],[8257,4],[8386,4]]},"790":{"position":[[21,4],[51,7],[65,5],[116,5],[152,4],[5538,4],[5550,5],[5750,4],[6540,4],[7591,4],[8967,4],[10141,4],[10866,4]]},"792":{"position":[[763,5],[2194,7],[2306,7],[2417,7],[2532,7],[2642,7],[8772,4],[22253,7],[22415,7],[22576,7],[22741,7],[22901,7],[23351,7]]}}}],["team#memb",{"_index":531,"t":{"56":{"position":[[1562,13]]},"519":{"position":[[240,13]]}}}],["team'",{"_index":2341,"t":{"724":{"position":[[706,6]]}}}],["team/organ",{"_index":1586,"t":{"403":{"position":[[920,18]]}}}],["team:contoso",{"_index":536,"t":{"56":{"position":[[2476,15]]},"605":{"position":[[19216,15]]}}}],["team:contoso#memb",{"_index":535,"t":{"56":{"position":[[2307,22]]},"605":{"position":[[19245,22]]}}}],["team:contoso/engin",{"_index":2632,"t":{"788":{"position":[[3126,28],[5964,26]]},"790":{"position":[[1037,27],[3409,26]]}}}],["team:contoso/engineering#memb",{"_index":2633,"t":{"788":{"position":[[3233,34],[6079,34]]}}}],["team:contoso/protocol",{"_index":2652,"t":{"790":{"position":[[6595,25],[9031,24]]}}}],["team:contoso/protocols#memb",{"_index":2645,"t":{"790":{"position":[[976,32],[3346,32],[5580,30]]}}}],["team:product",{"_index":533,"t":{"56":{"position":[[1877,12],[2066,15],[2211,15],[2362,15]]},"306":{"position":[[1387,15],[1501,15]]},"605":{"position":[[12656,15],[12860,13],[12888,12],[19036,13],[19071,13],[19132,15]]},"607":{"position":[[12402,15]]}}}],["team:product#memb",{"_index":311,"t":{"16":{"position":[[10854,22],[10992,20],[11068,22]]},"56":{"position":[[1798,20]]},"306":{"position":[[1211,22]]},"605":{"position":[[12685,22],[19161,22]]},"607":{"position":[[12431,22]]}}}],["team:writ",{"_index":1832,"t":{"521":{"position":[[116,13],[859,15],[3169,14]]},"523":{"position":[[237,12],[407,12],[1169,14],[2234,14],[3624,14],[4812,14],[5564,14]]},"525":{"position":[[77,12],[138,12],[5445,12],[5469,12]]}}}],["team:writers#memb",{"_index":1839,"t":{"523":{"position":[[163,20],[1204,22],[3666,22]]}}}],["techniqu",{"_index":2677,"t":{"792":{"position":[[14075,9]]},"813":{"position":[[13508,9]]}}}],["telemetri",{"_index":1069,"t":{"154":{"position":[[8,9],[79,9]]}}}],["tell",{"_index":1583,"t":{"403":{"position":[[684,4],[3349,4],[4190,4],[5435,4]]}}}],["templat",{"_index":1547,"t":{"399":{"position":[[209,9],[397,9]]}}}],["temporari",{"_index":2122,"t":{"664":{"position":[[321,9]]},"670":{"position":[[1015,9]]}}}],["ten",{"_index":1321,"t":{"273":{"position":[[2334,4]]}}}],["tenant",{"_index":2090,"t":{"660":{"position":[[140,6]]},"748":{"position":[[119,6],[162,7]]}}}],["tend",{"_index":1511,"t":{"391":{"position":[[109,4]]}}}],["term",{"_index":1513,"t":{"391":{"position":[[153,5]]},"397":{"position":[[951,4]]},"403":{"position":[[7597,5]]},"688":{"position":[[242,5]]},"716":{"position":[[544,5]]}}}],["termin",{"_index":957,"t":{"142":{"position":[[2682,9],[5313,9]]}}}],["test",{"_index":940,"t":{"142":{"position":[[1807,5],[4444,5]]},"150":{"position":[[147,8]]},"395":{"position":[[491,4]]},"405":{"position":[[154,7],[974,5],[1416,4]]},"644":{"position":[[800,4]]},"698":{"position":[[2834,4]]},"724":{"position":[[265,4]]}}}],["text",{"_index":1107,"t":{"160":{"position":[[149,4]]},"365":{"position":[[363,5],[657,4],[748,4]]}}}],["there'",{"_index":591,"t":{"68":{"position":[[381,7]]},"583":{"position":[[6027,7]]}}}],["therefor",{"_index":1767,"t":{"471":{"position":[[5733,10]]},"505":{"position":[[11361,10],[27003,10]]},"525":{"position":[[5520,10]]}}}],["thew",{"_index":545,"t":{"58":{"position":[[1987,4]]}}}],["thing",{"_index":922,"t":{"142":{"position":[[545,5]]},"204":{"position":[[120,6]]},"221":{"position":[[120,6]]},"238":{"position":[[120,6]]},"279":{"position":[[120,6]]},"306":{"position":[[110,6]]},"328":{"position":[[111,6]]},"355":{"position":[[110,6]]},"379":{"position":[[120,6]]},"403":{"position":[[7427,6]]},"405":{"position":[[1167,6],[1421,6]]},"437":{"position":[[120,6]]},"455":{"position":[[120,6]]},"477":{"position":[[120,6]]},"493":{"position":[[120,6]]},"511":{"position":[[120,6]]},"531":{"position":[[120,6]]},"553":{"position":[[120,6]]},"593":{"position":[[111,6]]},"613":{"position":[[110,6]]},"678":{"position":[[120,6]]},"706":{"position":[[120,6]]},"718":{"position":[[8,6]]},"754":{"position":[[120,6]]},"775":{"position":[[120,6]]},"798":{"position":[[120,6]]},"809":{"position":[[8,5]]}}}],["think",{"_index":1512,"t":{"391":{"position":[[117,5]]},"393":{"position":[[132,8],[186,8]]},"397":{"position":[[781,9]]},"423":{"position":[[544,5]]}}}],["third",{"_index":1971,"t":{"605":{"position":[[12377,5]]}}}],["those",{"_index":137,"t":{"14":{"position":[[289,5]]},"16":{"position":[[29757,5]]},"48":{"position":[[242,5]]},"56":{"position":[[237,5]]},"62":{"position":[[1314,5]]},"230":{"position":[[185,5]]},"296":{"position":[[438,5]]},"355":{"position":[[1355,5]]},"361":{"position":[[113,5]]},"365":{"position":[[136,5]]},"395":{"position":[[462,5]]},"399":{"position":[[2194,5],[4575,5]]},"403":{"position":[[1738,5]]},"405":{"position":[[752,5]]},"419":{"position":[[1630,5]]},"425":{"position":[[391,5],[1930,5]]},"427":{"position":[[453,5],[600,5]]},"431":{"position":[[354,5]]},"437":{"position":[[2652,5]]},"441":{"position":[[92,5]]},"576":{"position":[[10843,5],[10896,5]]},"658":{"position":[[756,5]]},"718":{"position":[[1425,5],[1783,5]]},"732":{"position":[[758,5]]},"744":{"position":[[615,5]]},"752":{"position":[[258,5]]},"754":{"position":[[415,5]]},"765":{"position":[[210,5]]},"769":{"position":[[18644,5],[18695,5]]},"775":{"position":[[584,5]]},"786":{"position":[[1219,5],[1631,5],[28405,5]]},"792":{"position":[[8521,5],[14740,5],[15181,5]]},"794":{"position":[[141,5],[229,5]]},"798":{"position":[[584,5]]},"809":{"position":[[1189,5],[1544,5],[28233,5]]},"813":{"position":[[14243,5]]}}}],["though",{"_index":1787,"t":{"487":{"position":[[144,6]]},"605":{"position":[[12227,6],[24489,6]]},"607":{"position":[[6256,6],[11946,6]]},"624":{"position":[[5383,6]]},"634":{"position":[[5415,6]]}}}],["thousand",{"_index":1320,"t":{"273":{"position":[[2321,9],[2342,9]]}}}],["thread",{"_index":2005,"t":{"611":{"position":[[529,7],[537,7]]}}}],["three",{"_index":516,"t":{"56":{"position":[[171,5]]},"144":{"position":[[59,5]]},"265":{"position":[[10,5]]},"273":{"position":[[33,5]]},"383":{"position":[[174,5]]},"664":{"position":[[82,5]]},"738":{"position":[[80,5]]},"762":{"position":[[112,5],[319,5]]},"769":{"position":[[37258,5]]}}}],["through",{"_index":226,"t":{"16":{"position":[[4121,7],[29414,7]]},"26":{"position":[[104,7]]},"52":{"position":[[773,7],[833,7]]},"58":{"position":[[1151,7]]},"148":{"position":[[185,7]]},"152":{"position":[[623,7]]},"204":{"position":[[1503,7]]},"208":{"position":[[425,7]]},"221":{"position":[[22515,7]]},"227":{"position":[[425,7]]},"238":{"position":[[1222,7]]},"242":{"position":[[425,7]]},"279":{"position":[[1822,7]]},"285":{"position":[[425,7]]},"296":{"position":[[1197,7]]},"306":{"position":[[2132,7]]},"310":{"position":[[425,7]]},"328":{"position":[[1635,7]]},"332":{"position":[[425,7]]},"379":{"position":[[1214,7]]},"381":{"position":[[425,7]]},"383":{"position":[[117,7]]},"393":{"position":[[328,7]]},"395":{"position":[[247,7]]},"403":{"position":[[4904,7]]},"437":{"position":[[3121,7]]},"443":{"position":[[425,7]]},"455":{"position":[[1506,7]]},"459":{"position":[[425,7]]},"477":{"position":[[1275,7]]},"481":{"position":[[425,7]]},"491":{"position":[[747,7]]},"493":{"position":[[1365,7]]},"497":{"position":[[425,7]]},"503":{"position":[[113,7],[1610,7]]},"511":{"position":[[1253,7]]},"515":{"position":[[425,7]]},"529":{"position":[[79,7],[154,7]]},"531":{"position":[[1206,7]]},"535":{"position":[[425,7]]},"539":{"position":[[1138,7]]},"553":{"position":[[1677,7]]},"557":{"position":[[425,7]]},"593":{"position":[[794,7]]},"597":{"position":[[425,7]]},"601":{"position":[[1363,7]]},"613":{"position":[[1450,7]]},"617":{"position":[[425,7]]},"640":{"position":[[498,7]]},"654":{"position":[[81,7]]},"678":{"position":[[997,7]]},"698":{"position":[[2466,7]]},"734":{"position":[[389,7]]},"754":{"position":[[939,7]]},"769":{"position":[[21112,7]]},"773":{"position":[[956,7]]},"792":{"position":[[8764,7]]},"796":{"position":[[823,7]]},"813":{"position":[[8200,7]]}}}],["throughout",{"_index":298,"t":{"16":{"position":[[9257,10]]},"52":{"position":[[857,10]]},"393":{"position":[[1038,10]]}}}],["throw",{"_index":563,"t":{"60":{"position":[[3230,5]]},"471":{"position":[[6064,5]]}}}],["thrown",{"_index":569,"t":{"60":{"position":[[3377,6]]},"429":{"position":[[679,6]]}}}],["thu",{"_index":318,"t":{"16":{"position":[[12115,5]]},"219":{"position":[[170,4],[245,4]]},"781":{"position":[[493,4]]}}}],["ti",{"_index":1408,"t":{"324":{"position":[[332,4]]},"397":{"position":[[754,4]]},"549":{"position":[[304,4]]},"611":{"position":[[96,4]]},"702":{"position":[[26,4]]},"738":{"position":[[209,4]]},"740":{"position":[[156,4],[5509,4]]}}}],["tidi",{"_index":835,"t":{"102":{"position":[[763,4]]}}}],["tie",{"_index":1459,"t":{"365":{"position":[[117,3],[1197,3]]},"371":{"position":[[50,3]]},"744":{"position":[[818,3]]}}}],["tier",{"_index":2504,"t":{"758":{"position":[[60,6]]}}}],["time",{"_index":149,"t":{"16":{"position":[[252,4],[29374,4]]},"60":{"position":[[3391,4]]},"259":{"position":[[2659,5],[2847,4],[2891,4]]},"263":{"position":[[430,4]]},"273":{"position":[[2572,4]]},"296":{"position":[[1028,4],[1099,5]]},"353":{"position":[[609,4]]},"429":{"position":[[69,4],[114,4],[600,4]]},"537":{"position":[[5480,4]]},"585":{"position":[[53,4]]},"634":{"position":[[16,5]]},"670":{"position":[[302,5],[352,5]]},"674":{"position":[[234,4]]},"728":{"position":[[174,5]]},"738":{"position":[[349,4]]},"742":{"position":[[48,4],[4312,4],[4476,5],[9627,4]]},"744":{"position":[[374,5]]}}}],["timelin",{"_index":1645,"t":{"415":{"position":[[118,9]]}}}],["timeout",{"_index":946,"t":{"142":{"position":[[1868,8],[4541,8]]}}}],["timeslot",{"_index":2412,"t":{"742":{"position":[[151,10],[261,8],[310,11],[848,8],[1431,10],[2319,10],[9571,9],[17204,9]]},"744":{"position":[[7726,9],[14181,9]]},"746":{"position":[[233,10],[709,8],[1653,10],[2989,11]]},"748":{"position":[[446,10],[922,8],[2120,10],[3456,11]]}}}],["timeslot:10_11",{"_index":2474,"t":{"746":{"position":[[4967,17],[11515,17]]}}}],["timeslot:11_12",{"_index":2424,"t":{"742":{"position":[[10520,17],[13808,17]]},"746":{"position":[[5120,17],[11678,17]]}}}],["timeslot:12_13",{"_index":2426,"t":{"742":{"position":[[10672,17],[13970,17],[18222,17],[20976,16]]},"744":{"position":[[2051,17],[4915,16],[8764,16],[11501,17],[14038,17]]},"746":{"position":[[5272,17],[11840,17]]}}}],["timeslot:13_14",{"_index":2476,"t":{"746":{"position":[[5423,17],[12001,17]]}}}],["timeslot:14_15",{"_index":2477,"t":{"746":{"position":[[5574,17],[12162,17]]}}}],["timeslot:18_19",{"_index":2466,"t":{"744":{"position":[[15220,16],[17959,17],[20499,17]]}}}],["timeslot:8_9",{"_index":2471,"t":{"746":{"position":[[4665,15],[11193,15]]}}}],["timeslot:9_10",{"_index":2473,"t":{"746":{"position":[[4815,16],[11353,16]]}}}],["timestamp",{"_index":1263,"t":{"259":{"position":[[898,9]]},"569":{"position":[[1340,12],[2518,12],[3695,12],[4919,12],[5463,12],[5778,12],[6893,12],[8033,12],[9189,12],[10394,12],[10918,12],[11211,12],[12319,12],[13469,12],[14635,12],[15850,12],[16384,12],[16668,12]]},"648":{"position":[[935,12],[1058,12],[2093,12],[2216,12],[3314,12],[3437,12],[4582,12],[4705,12],[5170,12],[5293,12],[5465,12],[5588,12]]}}}],["tl",{"_index":866,"t":{"130":{"position":[[149,3],[161,3]]},"140":{"position":[[838,3]]},"144":{"position":[[480,3],[539,3],[708,4],[984,3],[1059,3],[1162,3],[1294,3],[1595,3],[1621,3],[1670,3],[1914,3],[1973,3],[2157,4],[2509,3],[2584,3],[2687,3],[2819,3],[3148,3],[3174,3],[3223,3]]},"172":{"position":[[317,3]]}}}],["to/on/in",{"_index":1543,"t":{"397":{"position":[[1245,8]]},"399":{"position":[[261,8]]}}}],["today",{"_index":1106,"t":{"160":{"position":[[132,5]]},"393":{"position":[[116,5]]},"700":{"position":[[184,6]]},"724":{"position":[[455,6]]},"771":{"position":[[766,6]]}}}],["togeth",{"_index":190,"t":{"16":{"position":[[2786,8],[9135,8],[9603,8]]},"710":{"position":[[110,8]]}}}],["token",{"_index":423,"t":{"16":{"position":[[16564,5],[22176,5],[27920,5]]},"80":{"position":[[6523,5]]},"92":{"position":[[146,7]]},"94":{"position":[[345,6]]},"96":{"position":[[162,7]]},"112":{"position":[[2751,6]]},"124":{"position":[[2751,6]]},"172":{"position":[[987,6]]},"190":{"position":[[2751,6]]},"213":{"position":[[4355,5]]},"215":{"position":[[4396,5],[9569,5]]},"221":{"position":[[5685,5],[10880,5],[16104,5],[21135,5]]},"230":{"position":[[4614,5]]},"232":{"position":[[4443,5]]},"245":{"position":[[4656,5]]},"247":{"position":[[4357,5],[9432,5]]},"257":{"position":[[2727,6]]},"259":{"position":[[988,6],[1017,5],[1179,5],[2577,5],[2613,5]]},"261":{"position":[[1884,6],[1936,5],[1987,5]]},"288":{"position":[[4426,5],[9335,5],[15386,5]]},"312":{"position":[[4539,5],[9565,5]]},"318":{"position":[[4858,5],[10143,5],[15377,5]]},"338":{"position":[[4601,5]]},"345":{"position":[[5505,5]]},"369":{"position":[[5217,5],[10465,5]]},"371":{"position":[[5559,5]]},"373":{"position":[[4377,5]]},"385":{"position":[[4465,5]]},"387":{"position":[[4501,5],[9755,5]]},"445":{"position":[[4551,5],[9598,5]]},"449":{"position":[[4515,5],[9730,5]]},"467":{"position":[[4384,5]]},"469":{"position":[[4705,5]]},"471":{"position":[[4574,5]]},"485":{"position":[[4777,5]]},"487":{"position":[[4690,5]]},"505":{"position":[[5237,5],[10409,5],[15824,5],[20938,5],[25978,5]]},"521":{"position":[[4401,5]]},"523":{"position":[[5041,5]]},"525":{"position":[[4642,5]]},"537":{"position":[[4757,5]]},"541":{"position":[[4748,5]]},"543":{"position":[[4494,5]]},"545":{"position":[[4331,5],[9277,5]]},"547":{"position":[[4346,5],[9270,5]]},"562":{"position":[[4530,5]]},"569":{"position":[[4978,5],[10453,5],[15909,5]]},"571":{"position":[[4709,5]]},"576":{"position":[[4682,5],[10016,5]]},"583":{"position":[[4965,5]]},"605":{"position":[[5662,5],[11255,5],[17509,5],[23752,5],[29413,5]]},"607":{"position":[[5511,5],[11192,5],[16945,5],[22687,5]]},"622":{"position":[[5093,5]]},"624":{"position":[[4520,5]]},"630":{"position":[[5286,5]]},"632":{"position":[[4417,5]]},"634":{"position":[[4639,5],[9791,5],[14853,5]]},"644":{"position":[[5175,5],[10208,5]]},"646":{"position":[[4648,5],[9688,5]]},"648":{"position":[[4764,5],[10456,5],[15909,5],[21129,5],[26203,5]]},"668":{"position":[[9336,5]]},"670":{"position":[[5781,5]]},"692":{"position":[[4796,5],[9768,5],[15474,5],[21046,5],[26156,5]]},"694":{"position":[[8233,5],[13669,5]]},"696":{"position":[[7542,5],[14161,5],[19912,5]]},"698":{"position":[[8058,5],[13641,5]]},"718":{"position":[[6588,5],[11671,5],[17014,5],[22054,5],[27238,5],[34117,5],[39624,5]]},"720":{"position":[[4433,5],[11129,5]]},"722":{"position":[[12200,5],[18265,5],[24251,5],[29937,5],[35289,5],[40386,5],[45537,5],[50689,5]]},"734":{"position":[[9182,5]]},"740":{"position":[[4713,5],[9840,5],[15208,5],[20184,5]]},"742":{"position":[[8812,5],[15916,5],[22404,5],[27722,5]]},"744":{"position":[[6398,5],[13019,5],[19479,5]]},"746":{"position":[[15510,5]]},"767":{"position":[[8198,5],[16098,5],[22999,5],[29289,5],[34472,5],[39520,5],[44582,5]]},"769":{"position":[[4594,5],[11913,5],[17289,5],[27033,5],[34660,5],[43647,5]]},"786":{"position":[[6118,5],[11124,5],[16217,5],[21180,5],[26228,5],[33375,5],[38419,5]]},"788":{"position":[[7624,5],[13127,5]]},"790":{"position":[[4684,5],[10335,5],[15322,5]]},"792":{"position":[[7640,5],[13317,5],[19926,5]]},"809":{"position":[[6127,5],[11154,5],[16250,5],[21207,5],[26252,5],[32883,5],[37924,5]]},"811":{"position":[[7891,5],[13602,5]]},"813":{"position":[[7094,5],[12744,5]]},"815":{"position":[[8730,5],[14276,5],[19453,5],[24567,5],[29758,5],[34864,5]]}}}],["toler",{"_index":1104,"t":{"158":{"position":[[758,8]]}}}],["took",{"_index":1264,"t":{"259":{"position":[[932,4]]}}}],["tool",{"_index":876,"t":{"132":{"position":[[310,5]]},"790":{"position":[[5793,7]]},"792":{"position":[[208,7],[308,8]]}}}],["top",{"_index":493,"t":{"52":{"position":[[563,3]]},"417":{"position":[[242,3]]}}}],["total",{"_index":1313,"t":{"273":{"position":[[892,5],[941,5],[1102,5],[2076,5],[3061,5],[3305,6]]},"275":{"position":[[273,5],[404,5],[578,5]]}}}],["toward",{"_index":2593,"t":{"769":{"position":[[16,7]]}}}],["trace",{"_index":1072,"t":{"154":{"position":[[136,7],[248,7]]},"158":{"position":[[8,6],[59,7],[126,5],[196,6],[295,5],[400,5],[444,5],[555,6],[570,5]]}}}],["traffic",{"_index":1099,"t":{"158":{"position":[[660,7],[701,7],[746,7]]}}}],["transact",{"_index":1170,"t":{"196":{"position":[[265,13]]},"200":{"position":[[500,13]]},"277":{"position":[[84,12]]},"290":{"position":[[672,12]]},"611":{"position":[[632,12]]},"652":{"position":[[84,13],[126,13]]},"734":{"position":[[241,13],[806,11],[1841,14],[2430,12],[2457,11],[3771,11],[5453,11],[7322,11],[8977,11],[10416,11]]},"736":{"position":[[131,11],[253,11],[362,11],[415,11]]},"738":{"position":[[197,11],[262,11]]},"740":{"position":[[144,11],[221,11],[5494,11],[10659,11],[20963,11]]},"742":{"position":[[877,12],[1012,12],[4061,13],[23358,11]]},"746":{"position":[[619,11],[2662,14],[4499,11],[7437,11],[11010,11],[14001,11],[17443,11]]},"748":{"position":[[832,11],[3129,14]]}}}],["transaction:a",{"_index":2359,"t":{"734":{"position":[[3846,16],[7406,15]]},"740":{"position":[[329,13],[1226,16],[2214,16],[3410,15],[5312,16],[5348,15],[5446,13],[6341,16],[7333,16],[8533,15],[10451,16],[10487,15],[16693,16],[17682,16],[18879,15],[20784,16],[20820,15]]},"742":{"position":[[5336,16],[6320,16],[7512,15],[9397,16],[9433,15],[24235,16],[25223,16],[26419,15],[28321,16],[28357,15]]},"744":{"position":[[8581,16],[9754,16],[11285,15],[13799,16],[13835,15],[15037,16],[16211,16],[17743,15],[20260,16],[20296,15]]},"746":{"position":[[4574,17],[11094,15]]}}}],["transform",{"_index":648,"t":{"80":{"position":[[7423,11]]},"431":{"position":[[809,12]]},"710":{"position":[[154,10]]}}}],["transit",{"_index":554,"t":{"60":{"position":[[2654,10]]}}}],["translat",{"_index":205,"t":{"16":{"position":[[3246,10]]},"56":{"position":[[966,10]]},"660":{"position":[[3109,10]]},"734":{"position":[[2543,10]]}}}],["travers",{"_index":136,"t":{"14":{"position":[[279,9]]},"571":{"position":[[117,8]]}}}],["treat",{"_index":472,"t":{"16":{"position":[[29279,7]]},"670":{"position":[[706,7]]},"744":{"position":[[7572,7]]}}}],["tree",{"_index":1440,"t":{"347":{"position":[[834,4],[911,7]]},"349":{"position":[[1009,4],[1219,5],[1410,5]]},"574":{"position":[[147,4]]},"576":{"position":[[862,4],[1101,4],[2285,5],[3486,5],[5126,8],[5321,10],[5371,8],[5508,4],[6196,4],[6435,4],[7619,5],[8820,5],[10460,8],[10655,10],[10705,8]]}}}],["tri",{"_index":667,"t":{"86":{"position":[[2147,4]]},"94":{"position":[[819,3]]},"96":{"position":[[650,3],[1420,3]]},"98":{"position":[[375,3],[1092,3],[2415,3]]},"100":{"position":[[64,3]]},"142":{"position":[[2881,3],[5509,3]]},"491":{"position":[[554,6]]},"591":{"position":[[241,6]]},"692":{"position":[[320,3]]},"696":{"position":[[15470,3]]},"698":{"position":[[8980,3]]},"702":{"position":[[0,3],[99,3]]},"718":{"position":[[40375,3]]},"726":{"position":[[0,3]]},"744":{"position":[[313,6]]},"767":{"position":[[30093,3]]},"769":{"position":[[214,3],[12845,3],[44359,3]]}}}],["triager",{"_index":2615,"t":{"773":{"position":[[964,8]]},"781":{"position":[[195,8]]},"786":{"position":[[367,8],[580,10],[788,10],[27305,7],[27320,8],[27625,9],[27646,10],[28094,10],[28486,7],[28612,9],[28914,11],[28976,9]]},"788":{"position":[[867,7],[882,8],[1235,9],[1256,10],[1746,10]]},"792":{"position":[[1317,7],[1332,8],[1694,9],[1715,10],[2230,10],[20925,8],[21040,7],[21802,10],[21993,9],[22339,10]]}}}],["trip",{"_index":1791,"t":{"491":{"position":[[422,4],[531,5],[1608,5],[1653,4]]},"493":{"position":[[231,4],[333,4],[470,7]]},"499":{"position":[[71,4],[201,4],[334,4]]},"501":{"position":[[311,4],[448,7]]},"503":{"position":[[474,4],[539,5],[604,4],[783,4],[987,7]]},"505":{"position":[[289,5],[341,5],[6090,4],[11222,5],[11395,4],[11474,4],[16611,4],[26815,5],[27036,4],[27088,4]]},"611":{"position":[[588,5]]}}}],["trip:europ",{"_index":1804,"t":{"491":{"position":[[1479,14],[1527,15]]},"505":{"position":[[1058,11],[1118,15],[1159,11],[1220,14],[2181,11],[2338,11],[3685,11],[3754,13],[3796,11],[3866,13],[4941,11],[5048,11],[5795,11],[5900,11],[6915,14],[7906,14],[9105,13],[11021,14],[11055,13],[11266,11],[12329,14],[13320,14],[14519,13],[16434,14],[16468,13],[17438,14],[18431,14],[19632,13],[21556,14],[21590,13],[22481,14],[23473,14],[24673,13],[26593,14],[26627,13],[26859,11],[26947,11]]}}}],["trivial",{"_index":2151,"t":{"672":{"position":[[9659,7]]},"746":{"position":[[19162,7]]}}}],["troubleshoot",{"_index":1022,"t":{"148":{"position":[[121,12]]}}}],["true",{"_index":321,"t":{"16":{"position":[[12244,5],[13099,4],[14191,4],[15353,4],[16544,4],[17289,4],[17658,4],[18711,4],[19803,4],[20965,4],[22156,4],[22901,4]]},"62":{"position":[[1479,6]]},"64":{"position":[[1456,6],[1539,5]]},"66":{"position":[[1491,6],[1574,5]]},"94":{"position":[[638,4]]},"96":{"position":[[1200,4]]},"98":{"position":[[2063,4]]},"114":{"position":[[315,4],[627,4],[877,4],[1330,4],[1737,4]]},"144":{"position":[[722,4],[2171,4]]},"215":{"position":[[88,5],[940,4],[2029,4],[3188,4],[4376,4],[5112,4]]},"221":{"position":[[12648,4],[13737,4],[14896,4],[16084,4],[16820,4]]},"245":{"position":[[1230,4],[2309,4],[3458,4],[4636,4],[5342,4]]},"312":{"position":[[1080,4],[2170,4],[3330,4],[4519,4],[5258,4],[6109,4],[7198,4],[8357,4],[9545,4],[10281,4]]},"318":{"position":[[11918,4],[13008,4],[14168,4],[15357,4],[16096,4],[16117,5]]},"338":{"position":[[1121,4],[2218,4],[3385,4],[4581,4],[5341,4]]},"345":{"position":[[1205,5],[2055,4],[3142,4],[4299,4],[5485,4],[6215,4]]},"369":{"position":[[7000,4],[8092,4],[9254,4],[10445,4],[11190,4]]},"373":{"position":[[912,4],[2004,4],[3166,4],[4357,4],[5102,4]]},"387":{"position":[[1021,4],[2118,4],[3285,4],[4481,4],[5241,4]]},"445":{"position":[[1083,4],[2176,4],[3339,4],[4531,4],[5279,4],[6133,4],[7225,4],[8387,4],[9578,4],[10323,4]]},"449":{"position":[[1044,4],[2138,4],[3302,4],[4495,4],[5246,4]]},"471":{"position":[[1094,4],[2191,4],[3358,4],[4554,4],[5314,4]]},"487":{"position":[[132,4],[1222,4],[2315,4],[3478,4],[4670,4],[5418,4]]},"505":{"position":[[6950,4],[8040,4],[9200,4],[10389,4],[11128,4],[17473,4],[18565,4],[19727,4],[20918,4],[21663,4],[22516,4],[23607,4],[24768,4],[25958,4],[26700,4]]},"525":{"position":[[1156,4],[2255,4],[3424,4],[4622,4],[5388,4]]},"545":{"position":[[908,4],[1986,4],[3134,4],[4311,4],[5014,4],[5854,4],[6932,4],[8080,4],[9257,4],[9960,4]]},"562":{"position":[[1077,4],[2165,4],[3323,4],[4510,4],[5243,4],[5276,4]]},"583":{"position":[[5896,4]]},"605":{"position":[[1353,6],[2206,4],[3295,4],[4454,4],[5642,4],[6378,4],[6946,6],[7799,4],[8888,4],[10047,4],[11235,4],[11971,4],[13188,6],[14044,4],[15136,4],[16298,4],[17489,4],[18234,4],[19443,6],[20296,4],[21385,4],[22544,4],[23732,4],[24468,4],[25100,6],[25954,4],[27044,4],[28204,4],[29393,4],[30132,4]]},"607":{"position":[[18370,6],[19225,4],[20316,4],[21477,4],[22667,4],[23409,4]]},"624":{"position":[[1031,4],[2131,4],[3301,4],[4500,4],[5269,4]]},"632":{"position":[[952,4],[2044,4],[3206,4],[4397,4],[5142,4]]},"634":{"position":[[11376,4],[12472,4],[13638,4],[14833,4],[15590,4]]},"644":{"position":[[859,5],[1713,4],[2804,4],[3965,4],[5155,4],[5897,4],[6749,4],[7839,4],[8999,4],[10188,4],[10927,4]]},"646":{"position":[[6217,4],[7311,4],[8475,4],[9668,4],[10419,4]]},"648":{"position":[[17667,4],[18758,4],[19919,4],[21109,4],[21851,4]]},"666":{"position":[[477,4],[790,4],[1041,4],[1495,4],[2089,4],[2370,4],[2685,4],[2938,4],[3394,4],[3994,4],[4285,4],[4598,4],[4849,4],[5303,4],[5897,4]]},"668":{"position":[[10308,4],[10621,4],[10872,4],[11326,4],[11920,4]]},"670":{"position":[[6955,4],[7478,4],[7877,4],[8469,4],[9168,4],[9313,4],[11998,4]]},"692":{"position":[[17584,4],[18675,4],[19836,4],[21026,4],[21768,4]]},"694":{"position":[[10198,4],[11292,4],[12456,4],[13649,4],[14400,4]]},"696":{"position":[[16459,4],[17547,4],[18705,4],[19892,4],[20625,4]]},"718":{"position":[[8191,4],[9288,4],[10455,4],[11651,4],[12411,4],[18574,4],[19671,4],[20838,4],[22034,4],[22794,4],[36144,4],[37241,4],[38408,4],[39604,4],[40364,4]]},"720":{"position":[[7667,4],[8758,4],[9919,4],[11109,4],[11851,4]]},"722":{"position":[[47188,4],[48292,4],[49466,4],[50669,4],[51450,4]]},"740":{"position":[[1263,4],[2350,4],[3507,4],[4693,4],[5423,4],[6378,4],[7469,4],[8630,4],[9820,4],[10562,4]]},"742":{"position":[[24272,4],[25359,4],[26516,4],[27702,4],[28432,4]]},"744":{"position":[[8803,4],[10225,4],[11602,4],[12999,4],[13902,4],[14118,4],[20363,4]]},"767":{"position":[[25830,4],[26920,4],[28080,4],[29269,4],[30008,4],[36049,4],[37143,4],[38307,4],[39500,4],[40251,4],[41108,4],[42203,4],[43368,4],[44562,4],[45316,4]]},"769":{"position":[[23559,4],[24654,4],[25819,4],[27013,4],[27767,4],[31213,4],[32299,4],[33455,4],[34640,4],[35367,4],[40200,4],[41286,4],[42442,4],[43627,4],[44354,4]]},"786":{"position":[[7659,4],[8751,4],[9913,4],[11104,4],[11849,4],[17715,4],[18807,4],[19969,4],[21160,4],[21905,4],[29910,4],[31002,4],[32164,4],[33355,4],[34100,4],[34954,4],[36046,4],[37208,4],[38399,4],[39144,4]]},"788":{"position":[[9656,4],[10750,4],[11914,4],[13107,4],[13858,4]]},"790":{"position":[[11857,4],[12949,4],[14111,4],[15302,4],[16047,4]]},"809":{"position":[[7680,4],[8775,4],[9940,4],[11134,4],[11888,4],[17745,4],[18836,4],[19997,4],[21187,4],[21929,4],[29421,4],[30512,4],[31673,4],[32863,4],[33605,4],[34459,4],[35551,4],[36713,4],[37904,4],[38649,4]]},"811":{"position":[[10128,4],[11223,4],[12388,4],[13582,4],[14336,4]]},"815":{"position":[[10790,4],[11889,4],[13058,4],[14256,4],[15022,4],[21069,4],[22172,4],[23345,4],[24547,4],[25325,4]]}}}],["truli",{"_index":2457,"t":{"744":{"position":[[243,5]]}}}],["tupl",{"_index":133,"t":{"14":{"position":[[245,6]]},"16":{"position":[[215,6],[2813,7],[3584,7],[3652,6],[4142,6],[4436,7],[5152,7],[7460,7],[7746,5],[8065,5],[8311,5],[8743,7],[8766,5],[8777,5],[8859,5],[9162,7],[9319,6],[9630,7],[9898,5],[10488,6],[11237,6],[11829,5],[28859,8],[28879,6],[28890,6],[29021,7],[29040,6],[29112,7],[29178,6],[29682,6],[30004,6]]},"26":{"position":[[125,6]]},"36":{"position":[[15,5],[26,5]]},"40":{"position":[[75,5]]},"46":{"position":[[11,6],[22,6]]},"48":{"position":[[167,6]]},"56":{"position":[[210,6],[376,5],[531,6],[781,5],[1931,5]]},"58":{"position":[[1428,5]]},"60":{"position":[[2003,5]]},"64":{"position":[[1608,5],[1771,5]]},"66":{"position":[[932,5],[1672,5]]},"74":{"position":[[242,7],[491,6],[1068,6]]},"84":{"position":[[164,6]]},"90":{"position":[[262,7],[626,7]]},"108":{"position":[[271,7],[594,7],[917,7],[1240,7],[1535,7]]},"120":{"position":[[271,7],[594,7],[917,7],[1240,7],[1535,7]]},"142":{"position":[[3085,6]]},"146":{"position":[[150,6]]},"174":{"position":[[132,6]]},"184":{"position":[[56,7]]},"192":{"position":[[24,7]]},"194":{"position":[[23,7]]},"200":{"position":[[38,6],[142,6],[268,6],[397,6],[549,6]]},"202":{"position":[[124,5]]},"204":{"position":[[1524,6],[1574,6]]},"208":{"position":[[446,6],[496,6]]},"211":{"position":[[172,5]]},"213":{"position":[[19,5]]},"219":{"position":[[668,5],[729,5]]},"221":{"position":[[1058,5],[1283,7],[6455,6],[22536,6],[22586,6]]},"227":{"position":[[446,6],[496,6]]},"230":{"position":[[276,5]]},"232":{"position":[[28,5]]},"236":{"position":[[128,5],[186,7],[350,6]]},"238":{"position":[[723,5],[1243,6],[1293,6]]},"240":{"position":[[80,5]]},"242":{"position":[[446,6],[496,6]]},"245":{"position":[[109,5]]},"247":{"position":[[98,6]]},"249":{"position":[[251,6],[297,6]]},"251":{"position":[[90,5],[198,6]]},"253":{"position":[[270,7],[592,7],[1460,7]]},"255":{"position":[[41,6]]},"259":{"position":[[844,7],[2877,5],[2983,7],[3006,5],[3151,6]]},"269":{"position":[[306,7]]},"277":{"position":[[65,6],[140,6]]},"279":{"position":[[1228,5],[1843,6],[1893,6]]},"281":{"position":[[80,5]]},"285":{"position":[[446,6],[496,6]]},"288":{"position":[[31,6],[184,6],[5088,6],[9935,6],[10059,6]]},"290":{"position":[[36,6],[199,7]]},"292":{"position":[[55,7],[83,6],[136,6]]},"306":{"position":[[1101,6],[2153,6],[2203,6]]},"310":{"position":[[446,6],[496,6]]},"312":{"position":[[52,7]]},"314":{"position":[[943,6]]},"318":{"position":[[58,5],[345,6],[5641,6],[16260,6]]},"326":{"position":[[484,5],[526,6]]},"328":{"position":[[898,6],[1656,6],[1706,6]]},"332":{"position":[[446,6],[496,6]]},"334":{"position":[[266,6]]},"336":{"position":[[37,7]]},"338":{"position":[[28,5],[5378,6]]},"343":{"position":[[311,6]]},"345":{"position":[[674,7]]},"349":{"position":[[200,5]]},"365":{"position":[[1187,6],[1241,6]]},"367":{"position":[[1176,6]]},"369":{"position":[[196,6]]},"377":{"position":[[156,5],[359,6]]},"379":{"position":[[1235,6],[1285,6]]},"381":{"position":[[446,6],[496,6]]},"383":{"position":[[138,7],[164,5]]},"385":{"position":[[26,5]]},"387":{"position":[[23,5],[5376,5],[10543,6]]},"403":{"position":[[1320,6],[1955,7],[2441,6],[3650,5],[4034,5],[4334,5],[4717,5],[4959,5],[5978,5],[6367,7],[6724,5]]},"405":{"position":[[455,7],[712,7],[802,6],[1095,6],[1243,7],[1268,6],[1554,6],[1596,5],[2408,7],[2492,6],[3963,6]]},"407":{"position":[[94,6]]},"415":{"position":[[267,5],[624,6],[781,6],[833,6]]},"419":{"position":[[46,6],[1636,6],[1739,6],[2007,6],[3896,6],[4033,7]]},"421":{"position":[[43,5],[592,7]]},"423":{"position":[[36,6],[1073,6],[3036,6],[3259,5]]},"425":{"position":[[288,5],[406,6],[525,6],[1201,5],[1681,6],[1751,6],[1807,6],[1877,6],[1936,6],[2075,6],[2315,6],[2444,6],[2690,6],[2870,5],[3243,6],[3344,6],[3417,6],[3541,6]]},"427":{"position":[[57,6],[396,5],[467,6],[606,6],[649,6]]},"429":{"position":[[1769,5]]},"433":{"position":[[64,7]]},"437":{"position":[[1546,6],[3142,6],[3192,6]]},"443":{"position":[[446,6],[496,6]]},"445":{"position":[[52,7]]},"455":{"position":[[1007,5],[1527,6],[1577,6]]},"457":{"position":[[80,5]]},"459":{"position":[[446,6],[496,6]]},"461":{"position":[[584,5],[665,5]]},"463":{"position":[[162,6]]},"467":{"position":[[69,5],[5105,6]]},"471":{"position":[[106,7],[5357,6],[5824,6]]},"475":{"position":[[264,5]]},"477":{"position":[[776,5],[1296,6],[1346,6],[1540,6],[1705,6]]},"479":{"position":[[80,5]]},"481":{"position":[[446,6],[496,6],[690,6]]},"485":{"position":[[44,5],[245,5],[5717,5],[6066,5]]},"487":{"position":[[28,5],[167,5],[245,5]]},"491":{"position":[[132,6]]},"493":{"position":[[866,5],[1386,6],[1436,6]]},"495":{"position":[[80,5]]},"497":{"position":[[446,6],[496,6]]},"499":{"position":[[511,7]]},"505":{"position":[[128,6],[244,7],[27218,6]]},"509":{"position":[[142,5]]},"511":{"position":[[754,5],[1274,6],[1324,6]]},"513":{"position":[[80,5]]},"515":{"position":[[446,6],[496,6]]},"521":{"position":[[77,5]]},"523":{"position":[[373,5]]},"525":{"position":[[33,5],[105,5],[5614,6]]},"531":{"position":[[707,5],[1227,6],[1277,6]]},"533":{"position":[[80,5]]},"535":{"position":[[446,6],[496,6]]},"537":{"position":[[192,7],[5560,6]]},"541":{"position":[[28,6],[117,7]]},"543":{"position":[[118,5],[163,5]]},"547":{"position":[[103,6]]},"553":{"position":[[1178,5],[1698,6],[1748,6]]},"555":{"position":[[80,5]]},"557":{"position":[[446,6],[496,6]]},"567":{"position":[[62,6]]},"569":{"position":[[66,6],[427,6],[1139,6],[1252,6],[2429,9],[3606,9],[5373,9],[5531,6],[5944,6],[6711,6],[6805,6],[7944,9],[9100,9],[10828,9],[10986,6],[11366,6],[12127,6],[12231,6],[13380,9],[14546,9],[16294,9],[16452,6]]},"571":{"position":[[314,6],[421,5],[1342,6],[1455,6],[2514,9],[3573,9],[5104,9],[5144,6],[5305,9],[5481,6]]},"587":{"position":[[131,6]]},"593":{"position":[[295,5],[815,6],[865,6]]},"595":{"position":[[80,5]]},"597":{"position":[[446,6],[496,6]]},"599":{"position":[[241,5]]},"605":{"position":[[1095,5],[6424,5],[6644,5],[12017,5],[12251,5],[12481,7],[12804,6],[12970,5],[18321,5],[18694,6],[18733,7],[24513,5],[24831,5]]},"607":{"position":[[939,5],[6287,5],[6520,5],[6590,5],[11977,5],[12231,7],[17760,5],[18098,5]]},"611":{"position":[[374,6]]},"613":{"position":[[1471,6],[1521,6]]},"617":{"position":[[446,6],[496,6]]},"622":{"position":[[162,5],[277,6]]},"624":{"position":[[23,5],[5725,6]]},"630":{"position":[[76,7]]},"632":{"position":[[58,6]]},"640":{"position":[[519,6],[569,6]]},"642":{"position":[[599,6]]},"644":{"position":[[140,5]]},"646":{"position":[[80,6]]},"648":{"position":[[40,7],[141,7],[806,6],[846,6],[2003,9],[3224,9],[5079,9],[5361,6],[5650,6],[5772,6],[11248,7],[16768,6],[21877,5]]},"650":{"position":[[43,7]]},"652":{"position":[[76,7]]},"654":{"position":[[251,6]]},"658":{"position":[[356,6],[452,6],[461,5]]},"660":{"position":[[3150,7]]},"664":{"position":[[139,7],[359,6],[426,6]]},"666":{"position":[[46,6]]},"668":{"position":[[2456,6],[4716,5]]},"670":{"position":[[115,6],[517,8],[537,6],[548,6],[645,6],[1052,6],[1824,6],[2908,6],[4317,6],[5524,6],[6283,6]]},"672":{"position":[[58,6],[9399,7],[9686,6]]},"678":{"position":[[356,5]]},"692":{"position":[[16436,6]]},"694":{"position":[[428,6],[2750,6]]},"696":{"position":[[2674,6],[2792,6],[8496,6],[15427,7],[20671,5]]},"698":{"position":[[3009,7]]},"706":{"position":[[356,5]]},"718":{"position":[[2052,5]]},"722":{"position":[[6613,7],[6661,6],[13452,6],[41089,7]]},"726":{"position":[[29,6],[276,6]]},"728":{"position":[[283,6]]},"732":{"position":[[357,6],[453,6],[462,5]]},"734":{"position":[[2584,7]]},"738":{"position":[[137,7],[403,6]]},"740":{"position":[[46,6]]},"742":{"position":[[4203,6],[9542,6],[17278,6],[23300,6]]},"744":{"position":[[115,6],[568,7],[621,7],[777,8],[836,6],[961,6],[1777,6],[1951,6],[3009,6],[3239,6],[4622,6],[4806,6],[5987,6],[6167,6],[6968,6],[7146,6],[7383,8],[7403,6],[7414,6],[7511,6]]},"746":{"position":[[58,6],[18903,7],[19189,6]]},"765":{"position":[[149,6]]},"767":{"position":[[33,6],[24473,5],[24891,6],[30039,6]]},"769":{"position":[[5364,5],[6133,5],[18470,6],[18561,6],[18663,6],[19990,6],[35483,6],[35715,5],[37028,6],[37277,6]]},"786":{"position":[[1812,6]]},"788":{"position":[[2330,7],[8594,5]]},"790":{"position":[[282,6]]},"792":{"position":[[14828,6],[15007,5],[15075,6],[15200,6],[15425,7],[15511,5]]},"798":{"position":[[790,5]]},"809":{"position":[[1809,6]]},"811":{"position":[[9059,5]]},"813":{"position":[[1921,6],[14327,6],[14508,5],[14576,6]]},"815":{"position":[[2792,7]]}}}],["tuple'",{"_index":483,"t":{"16":{"position":[[30231,7]]},"485":{"position":[[5580,7],[5930,7]]},"796":{"position":[[895,7]]}}}],["tuple_key",{"_index":355,"t":{"16":{"position":[[12995,10],[18607,10]]},"98":{"position":[[1385,10]]},"114":{"position":[[221,10]]},"192":{"position":[[123,11],[1118,12],[1514,12]]},"194":{"position":[[279,10],[1278,12],[1675,12]]},"213":{"position":[[749,11],[4153,12],[4676,12]]},"215":{"position":[[839,10],[6004,10]]},"221":{"position":[[2144,10],[7127,11],[10642,12],[11201,12],[12547,10],[17570,10]]},"230":{"position":[[1012,10],[4414,12],[4936,12]]},"232":{"position":[[882,10]]},"245":{"position":[[1139,10]]},"247":{"position":[[771,10],[4161,12],[4679,12],[5911,10]]},"288":{"position":[[856,11],[4233,12],[4747,12],[5761,10],[9142,12],[9657,12],[10938,11],[11074,10],[14994,12],[15145,12],[15707,12],[15808,12]]},"312":{"position":[[978,10],[6008,10]]},"318":{"position":[[1017,11],[4598,12],[5179,12],[6582,10],[11816,10]]},"338":{"position":[[1012,10]]},"345":{"position":[[1956,10]]},"369":{"position":[[880,11],[4845,12],[5538,12],[6896,10]]},"371":{"position":[[782,11],[5077,12],[5880,12]]},"373":{"position":[[808,10]]},"385":{"position":[[811,11],[4251,12],[4786,12]]},"387":{"position":[[912,10],[6162,10]]},"429":{"position":[[1905,11],[2951,12],[3364,12]]},"445":{"position":[[978,10],[6029,10]]},"449":{"position":[[938,10],[6153,10]]},"467":{"position":[[786,11],[4184,12],[4705,12]]},"469":{"position":[[788,11],[4426,12],[5026,12]]},"471":{"position":[[985,10]]},"485":{"position":[[972,11],[4526,12],[5098,12]]},"487":{"position":[[1117,10]]},"505":{"position":[[1020,11],[4895,12],[5558,12],[6848,10],[12263,10],[17369,10],[22413,10]]},"521":{"position":[[795,11],[4199,12],[4722,12]]},"523":{"position":[[1128,11],[4763,12],[5362,12]]},"525":{"position":[[1045,10]]},"537":{"position":[[874,11],[4497,12],[5078,12]]},"541":{"position":[[881,11],[4492,12],[5069,12]]},"543":{"position":[[892,11],[4293,12],[4815,12]]},"545":{"position":[[818,10],[5764,10]]},"547":{"position":[[776,10],[4154,12],[4668,12],[5753,10]]},"562":{"position":[[977,10]]},"569":{"position":[[1173,10],[6745,10],[12161,10]]},"571":{"position":[[1376,10]]},"576":{"position":[[896,10],[6230,10]]},"583":{"position":[[954,11],[4801,12],[5423,13]]},"605":{"position":[[2105,10],[7698,10],[13940,10],[20195,10],[25852,10]]},"607":{"position":[[1950,10],[7619,10],[13380,10],[19122,10]]},"622":{"position":[[1024,11],[4776,12],[5414,12]]},"624":{"position":[[919,10]]},"630":{"position":[[749,11],[4864,12],[5607,12]]},"632":{"position":[[848,10]]},"634":{"position":[[750,10],[4368,12],[4961,12],[6218,10],[11268,10]]},"644":{"position":[[1610,10],[6647,10]]},"646":{"position":[[839,11],[4396,12],[4969,12],[6111,10]]},"648":{"position":[[6473,11],[10171,12],[10777,12],[11922,10],[15624,12],[16231,12],[17564,10],[22646,10]]},"660":{"position":[[3231,11],[7046,12],[8285,12]]},"666":{"position":[[382,10],[2273,10],[4190,10],[6086,10],[8000,10],[9902,10]]},"668":{"position":[[2960,10],[5459,11],[9067,12],[9657,12],[10213,10]]},"670":{"position":[[1792,10],[5485,12],[6103,12],[6745,10],[6844,11],[8244,12],[9570,10],[9669,11],[11072,12]]},"672":{"position":[[2770,11],[6585,12],[7824,12]]},"692":{"position":[[1166,11],[4588,12],[5117,12],[6122,11],[9556,12],[10089,12],[11110,11],[15105,12],[15795,12],[17481,10],[22599,10]]},"694":{"position":[[3584,11],[7804,12],[8554,12],[10092,10]]},"696":{"position":[[3487,11],[7239,12],[7863,12],[9180,11],[13649,12],[14482,12],[16359,10]]},"698":{"position":[[3682,11],[7686,12],[8379,12],[10068,10]]},"718":{"position":[[2723,11],[6322,12],[6909,12],[8082,10],[13149,11],[16748,12],[17335,12],[18465,10],[23621,10],[29108,11],[33589,12],[34438,12],[36035,10]]},"720":{"position":[[864,10],[7564,10]]},"722":{"position":[[7528,11],[11754,12],[12521,12],[14124,11],[17930,12],[18586,12],[19861,11],[23865,12],[24572,12],[25886,11],[29635,12],[30258,12],[31539,11],[35051,12],[35610,12],[36704,11],[40165,12],[40707,12],[41980,10],[47072,10]]},"734":{"position":[[3257,11],[8437,12],[9503,12]]},"740":{"position":[[1164,10],[6275,10],[11339,11],[14941,12],[15529,12],[16631,10]]},"742":{"position":[[5279,10],[10431,11],[15269,12],[16237,12],[17971,11],[22008,12],[22725,12],[24173,10]]},"744":{"position":[[1745,10],[5948,12],[6720,12],[8519,10],[8622,11],[12701,12],[14975,10],[15078,11],[19160,12]]},"746":{"position":[[3985,11],[13461,12],[15831,12]]},"767":{"position":[[853,11],[7122,12],[8519,12],[10809,11],[15500,12],[16419,12],[17990,11],[22471,12],[23320,12],[25728,10],[30907,10],[35943,10],[41001,10]]},"769":{"position":[[1029,10],[8364,10],[13704,10],[23452,10],[31115,10],[40102,10]]},"786":{"position":[[2484,11],[5909,12],[6439,12],[7555,10],[12583,11],[16008,12],[16538,12],[17611,10],[22655,10],[29806,10],[34850,10]]},"788":{"position":[[3003,11],[7181,12],[7945,12],[9550,10]]},"790":{"position":[[954,11],[4451,12],[5005,12],[6478,11],[10071,12],[10656,12],[11753,10]]},"792":{"position":[[3597,11],[7340,12],[7961,12],[9732,10],[16204,11],[19695,12],[20247,12]]},"809":{"position":[[2481,11],[5915,12],[6448,12],[7573,10],[12620,11],[16042,12],[16571,12],[17642,10],[22679,10],[29318,10],[34355,10]]},"811":{"position":[[2760,11],[7343,12],[8212,12],[10021,10]]},"813":{"position":[[2593,11],[6681,12],[7415,12],[9151,10]]},"815":{"position":[[3465,11],[8138,12],[9051,12],[10679,10],[15848,10],[20954,10],[26153,10],[31259,10]]}}}],["tuple_key\":{\"relation\":\"reader\",\"object\":\"document:plan",{"_index":1932,"t":{"576":{"position":[[4990,65]]}}}],["tuple_key\":{\"relation\":\"writer\",\"object\":\"document:plan",{"_index":1910,"t":{"569":{"position":[[16215,66]]},"576":{"position":[[10324,65]]}}}],["tuple_key\":{\"user\":\"anne\",\"relation\":\"can_view\",\"object\":\"transaction:a",{"_index":2418,"t":{"742":{"position":[[9178,76]]}}}],["tuple_key\":{\"user\":\"anne\",\"relation\":\"reader\",\"object\":\"document:plan",{"_index":1220,"t":{"221":{"position":[[6051,78]]}}}],["tuple_key\":{\"user\":\"dianne\",\"relation\":\"live_video_viewer\",\"object\":\"device:2",{"_index":2230,"t":{"696":{"position":[[20278,82]]}}}],["tuple_key\":{\"user\":\"folder:budgets\",\"relation\":\"parent\",\"object\":\"document:may_budget.doc",{"_index":2018,"t":{"624":{"position":[[4886,94]]}}}],["tuple_key\":{\"user\":\"organization:alpha\",\"relation\":\"access\",\"object\":\"feature:issu",{"_index":2600,"t":{"769":{"position":[[17655,89],[27399,89]]}}}],["tuple_key\":{\"user\":\"organization:bayer\",\"relation\":\"subscriber\",\"object\":\"plan:team",{"_index":2591,"t":{"767":{"position":[[39886,88]]}}}],["tuple_key\":{\"user\":\"plan:free\",\"relation\":\"associated_plan\",\"object\":\"feature:issu",{"_index":2592,"t":{"767":{"position":[[44948,89]]}}}],["tuple_key\":{\"user\":\"user:alice\",\"relation\":\"booking_adder\",\"object\":\"trip:europ",{"_index":1831,"t":{"505":{"position":[[26344,85]]}}}],["tuple_key\":{\"user\":\"user:alice\",\"relation\":\"booking_viewer\",\"object\":\"trip:europ",{"_index":1830,"t":{"505":{"position":[[21304,86]]}}}],["tuple_key\":{\"user\":\"user:alice\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc",{"_index":1845,"t":{"525":{"position":[[5008,93]]}}}],["tuple_key\":{\"user\":\"user:amy\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastl",{"_index":2285,"t":{"718":{"position":[[12037,91],[39990,91]]}}}],["tuple_key\":{\"user\":\"user:amy\",\"relation\":\"member\",\"object\":\"workspace:sandcastl",{"_index":2307,"t":{"720":{"position":[[4799,85],[11495,85]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:data_preview",{"_index":2045,"t":{"632":{"position":[[4783,86]]},"634":{"position":[[10157,86]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"access\",\"object\":\"feature:issu",{"_index":2595,"t":{"769":{"position":[[4960,80],[12279,80],[35026,80],[44013,80]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"assignee\",\"object\":\"role:media",{"_index":1482,"t":{"369":{"position":[[10831,74]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_delete\",\"object\":\"project:x",{"_index":2125,"t":{"666":{"position":[[3656,79]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_edit\",\"object\":\"document:roadmap",{"_index":2062,"t":{"644":{"position":[[10574,84]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:x",{"_index":2124,"t":{"666":{"position":[[1757,77]]},"668":{"position":[[4339,77],[11588,77]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:x\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:a",{"_index":2148,"t":{"670":{"position":[[8731,190]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"project:x\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:c",{"_index":2149,"t":{"670":{"position":[[11560,190]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:a",{"_index":2397,"t":{"740":{"position":[[5079,81]]},"742":{"position":[[28088,81]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_view\",\"object\":\"transaction:a\"},\"contextual_tuples\":{\"tuple_keys\":[{\"user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip",{"_index":2465,"t":{"744":{"position":[[13385,165],[19845,165]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"can_write\",\"object\":\"document:roadmap",{"_index":2060,"t":{"644":{"position":[[5541,85]]},"648":{"position":[[21495,85]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"device_renamer\",\"object\":\"device:1",{"_index":2185,"t":{"692":{"position":[[26522,82]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"asset",{"_index":1499,"t":{"373":{"position":[[4743,67]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:roadmap",{"_index":2084,"t":{"648":{"position":[[26569,82]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"live_video_viewer\",\"object\":\"device:1",{"_index":2184,"t":{"692":{"position":[[21412,85]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:alpha",{"_index":2587,"t":{"767":{"position":[[29655,84]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:bay",{"_index":2590,"t":{"767":{"position":[[34838,84]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021",{"_index":2698,"t":{"809":{"position":[[21573,74],[33249,74]]},"815":{"position":[[14642,74]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:budget",{"_index":1439,"t":{"345":{"position":[[5871,81]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:plan",{"_index":1192,"t":{"215":{"position":[[4762,83]]},"221":{"position":[[16470,83]]},"232":{"position":[[4809,83]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:z",{"_index":860,"t":{"114":{"position":[[1592,76]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"repo:contoso/tool",{"_index":2627,"t":{"786":{"position":[[11490,86]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"tweet:1",{"_index":1241,"t":{"245":{"position":[[5022,73]]},"247":{"position":[[9798,73]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"subscriber_member\",\"object\":\"plan:advanc",{"_index":2048,"t":{"634":{"position":[[15219,90]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"viewer\",\"object\":\"document:new",{"_index":434,"t":{"16":{"position":[[16930,74],[22542,74]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1969,"t":{"605":{"position":[[6028,83]]}}}],["tuple_key\":{\"user\":\"user:anne\",\"relation\":\"writer\",\"object\":\"document:2021",{"_index":2699,"t":{"809":{"position":[[26618,75],[38290,75]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"admin\",\"object\":\"repo:1",{"_index":1874,"t":{"545":{"position":[[4697,72]]},"547":{"position":[[9636,72]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"admin\",\"object\":\"repo:2",{"_index":1875,"t":{"545":{"position":[[9643,72]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"can_delete\",\"object\":\"document:plan",{"_index":1746,"t":{"449":{"position":[[4881,88]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"can_write\",\"object\":\"document:plan",{"_index":1741,"t":{"445":{"position":[[4917,87]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"editor\",\"object\":\"document:plan",{"_index":1389,"t":{"312":{"position":[[4905,84]]},"318":{"position":[[15743,84]]}}}],["tuple_key\":{\"user\":\"user:becky\",\"relation\":\"reader\",\"object\":\"document:plan",{"_index":1196,"t":{"215":{"position":[[9935,84]]},"221":{"position":[[21501,84]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"can_delete\",\"object\":\"project:x",{"_index":2127,"t":{"666":{"position":[[7473,79]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"can_view\",\"object\":\"project:x",{"_index":2126,"t":{"666":{"position":[[5565,77]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"commenter\",\"object\":\"document:2021",{"_index":2696,"t":{"809":{"position":[[11520,78]]},"815":{"position":[[24933,78]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"reader\",\"object\":\"repo:contoso/tool",{"_index":2630,"t":{"786":{"position":[[26594,86],[38785,86]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1970,"t":{"605":{"position":[[11621,83]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"document:2021",{"_index":2727,"t":{"815":{"position":[[19819,75]]}}}],["tuple_key\":{\"user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"repo:contoso/tool",{"_index":2629,"t":{"786":{"position":[[21546,86],[33741,86]]}}}],["tuple_key\":{\"user\":\"user:bethany\",\"relation\":\"can_write\",\"object\":\"document:roadmap",{"_index":2072,"t":{"646":{"position":[[10054,88]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"object\":\"docu",{"_index":1908,"t":{"569":{"position":[[10759,56]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"booking_adder\",\"object\":\"trip:europ",{"_index":1829,"t":{"505":{"position":[[16190,83]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"booking_viewer\",\"object\":\"trip:europ",{"_index":1825,"t":{"505":{"position":[[10775,84]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc",{"_index":1508,"t":{"387":{"position":[[4867,91]]},"471":{"position":[[4940,91]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"reader\",\"object\":\"docu",{"_index":1916,"t":{"571":{"position":[[5015,76]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"reader\",\"object\":\"document:plan",{"_index":1879,"t":{"562":{"position":[[4896,82]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"view\",\"object\":\"document:compani",{"_index":1789,"t":{"487":{"position":[[5056,75]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"viewer\",\"object\":\"document:meeting_notes.doc",{"_index":1423,"t":{"338":{"position":[[4967,91]]},"387":{"position":[[10121,91]]}}}],["tuple_key\":{\"user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"docu",{"_index":1905,"t":{"569":{"position":[[5284,76]]}}}],["tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_delete\",\"object\":\"document:plan",{"_index":1748,"t":{"449":{"position":[[10096,87]]}}}],["tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_delete\",\"object\":\"project:x",{"_index":2129,"t":{"666":{"position":[[11289,79]]}}}],["tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_view\",\"object\":\"project:x",{"_index":2128,"t":{"666":{"position":[[9379,77]]}}}],["tuple_key\":{\"user\":\"user:carl\",\"relation\":\"can_write\",\"object\":\"document:plan",{"_index":1742,"t":{"445":{"position":[[9964,86]]}}}],["tuple_key\":{\"user\":\"user:carl\",\"relation\":\"editor\",\"object\":\"document:plan",{"_index":1391,"t":{"312":{"position":[[9931,83]]},"318":{"position":[[10509,83]]}}}],["tuple_key\":{\"user\":\"user:caroline\",\"relation\":\"can_view\",\"object\":\"transaction:a",{"_index":2398,"t":{"740":{"position":[[10206,85]]}}}],["tuple_key\":{\"user\":\"user:catherine\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastl",{"_index":2292,"t":{"718":{"position":[[27604,97]]}}}],["tuple_key\":{\"user\":\"user:catherine\",\"relation\":\"member\",\"object\":\"workspace:sandcastl",{"_index":2291,"t":{"718":{"position":[[22420,91]]}}}],["tuple_key\":{\"user\":\"user:charles\",\"relation\":\"admin\",\"object\":\"repo:contoso/tool",{"_index":2642,"t":{"788":{"position":[[13493,88]]}}}],["tuple_key\":{\"user\":\"user:charles\",\"relation\":\"live_video_viewer\",\"object\":\"device:1",{"_index":2200,"t":{"694":{"position":[[14035,88]]}}}],["tuple_key\":{\"user\":\"user:charles\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2711,"t":{"811":{"position":[[13968,78]]}}}],["tuple_key\":{\"user\":\"user:charlie\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1975,"t":{"605":{"position":[[17875,86]]}}}],["tuple_key\":{\"user\":\"user:dany\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1981,"t":{"605":{"position":[[24118,83]]}}}],["tuple_key\":{\"user\":\"user:david\",\"relation\":\"viewer\",\"object\":\"channel:gener",{"_index":2339,"t":{"722":{"position":[[45903,82]]}}}],["tuple_key\":{\"user\":\"user:david\",\"relation\":\"viewer\",\"object\":\"channel:proj_marketing_campaign",{"_index":2340,"t":{"722":{"position":[[51055,98]]}}}],["tuple_key\":{\"user\":\"user:diane\",\"relation\":\"admin\",\"object\":\"repo:contoso/tool",{"_index":2660,"t":{"790":{"position":[[15688,86]]}}}],["tuple_key\":{\"user\":\"user:diane\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2719,"t":{"813":{"position":[[13110,76]]}}}],["tuple_key\":{\"user\":\"user:emily\",\"relation\":\"live_video_viewer\",\"object\":\"device:1",{"_index":2243,"t":{"698":{"position":[[14007,86]]}}}],["tuple_key\":{\"user\":\"user:emily\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1986,"t":{"605":{"position":[[29779,84]]}}}],["tuple_key\":{\"user\":\"user:erik\",\"relation\":\"admin\",\"object\":\"repo:contoso/tool",{"_index":2676,"t":{"792":{"position":[[13683,85]]}}}],["tuple_key\":{\"user\":\"user:erik\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2729,"t":{"815":{"position":[[35230,75]]}}}],["tuple_key\":{\"user\":\"user:erik\",\"relation\":\"writer\",\"object\":\"document:2021",{"_index":2728,"t":{"815":{"position":[[30124,75]]}}}],["tuple_key\":{\"user\":\"user:fred\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1990,"t":{"607":{"position":[[5877,83]]}}}],["tuple_key\":{\"user\":\"user:gabriel\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1995,"t":{"607":{"position":[[11558,86]]}}}],["tuple_key\":{\"user\":\"user:henry\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":1999,"t":{"607":{"position":[[17311,84]]}}}],["tuple_key\":{\"user\":\"user:ingred\",\"relation\":\"viewer\",\"object\":\"document:plan",{"_index":2003,"t":{"607":{"position":[[23053,85]]}}}],["tuple_key\":{\"user\":\"user:mary\",\"relation\":\"can_view\",\"object\":\"transaction:a",{"_index":2411,"t":{"740":{"position":[[20550,81]]}}}],["tuple_key=tuplekey",{"_index":416,"t":{"16":{"position":[[16327,19],[21939,19]]},"114":{"position":[[1123,19]]},"215":{"position":[[4162,19],[9333,19]]},"221":{"position":[[5455,19],[15870,19],[20899,19]]},"232":{"position":[[4208,19]]},"245":{"position":[[4432,19]]},"247":{"position":[[9207,19]]},"312":{"position":[[4304,19],[9331,19]]},"318":{"position":[[9908,19],[15142,19]]},"338":{"position":[[4359,19]]},"345":{"position":[[5273,19]]},"369":{"position":[[10228,19]]},"373":{"position":[[4140,19]]},"387":{"position":[[4259,19],[9512,19]]},"445":{"position":[[4313,19],[9361,19]]},"449":{"position":[[4276,19],[9491,19]]},"471":{"position":[[4332,19]]},"487":{"position":[[4452,19]]},"505":{"position":[[10174,19],[15589,19],[20701,19],[25742,19]]},"525":{"position":[[4398,19]]},"545":{"position":[[4108,19],[9054,19]]},"547":{"position":[[9046,19]]},"562":{"position":[[4297,19]]},"569":{"position":[[4675,19],[10169,19],[15615,19]]},"571":{"position":[[4524,19]]},"576":{"position":[[4446,19],[9780,19]]},"605":{"position":[[5428,19],[11021,19],[17272,19],[23518,19],[29178,19]]},"607":{"position":[[5276,19],[10954,19],[16709,19],[22451,19]]},"624":{"position":[[4275,19]]},"632":{"position":[[4180,19]]},"634":{"position":[[9553,19],[14612,19]]},"644":{"position":[[4939,19],[9973,19]]},"646":{"position":[[9449,19]]},"648":{"position":[[20893,19],[25969,19]]},"666":{"position":[[1287,19],[3184,19],[5095,19],[7000,19],[8908,19],[10816,19]]},"668":{"position":[[3868,19],[11118,19]]},"670":{"position":[[8123,19],[10951,19]]},"692":{"position":[[20810,19],[25922,19]]},"694":{"position":[[13430,19]]},"696":{"position":[[19679,19]]},"698":{"position":[[13403,19]]},"718":{"position":[[11429,19],[21812,19],[26989,19],[39382,19]]},"720":{"position":[[4196,19],[10893,19]]},"722":{"position":[[45303,19],[50440,19]]},"740":{"position":[[4481,19],[9604,19],[19951,19]]},"742":{"position":[[8584,19],[27490,19]]},"744":{"position":[[12576,19],[19035,19]]},"767":{"position":[[29054,19],[34236,19],[39281,19],[44342,19]]},"769":{"position":[[4358,19],[11681,19],[17048,19],[26793,19],[34429,19],[43416,19]]},"786":{"position":[[10887,19],[20943,19],[25990,19],[33138,19],[38182,19]]},"788":{"position":[[12888,19]]},"790":{"position":[[15085,19]]},"792":{"position":[[13076,19]]},"809":{"position":[[10914,19],[20971,19],[26014,19],[32647,19],[37687,19]]},"811":{"position":[[13362,19]]},"813":{"position":[[12501,19]]},"815":{"position":[[14032,19],[19207,19],[24319,19],[29512,19],[34618,19]]}}}],["tuple_to_userset",{"_index":590,"t":{"68":{"position":[[317,16],[695,16]]}}}],["tuple_userset_object",{"_index":597,"t":{"68":{"position":[[773,21]]}}}],["tuplekey",{"_index":377,"t":{"16":{"position":[[13974,9],[15171,8],[15186,10],[16189,8],[19586,9],[20783,8],[20798,10],[21801,8],[27602,8]]},"98":{"position":[[4942,9]]},"114":{"position":[[420,9],[705,8],[720,10],[985,8]]},"126":{"position":[[1039,8]]},"192":{"position":[[319,10],[937,8],[990,9],[1131,9]]},"194":{"position":[[477,10],[1096,8],[1149,9],[1291,9]]},"213":{"position":[[1718,10],[3972,8],[4025,9],[4166,9]]},"215":{"position":[[1815,9],[3009,8],[3024,10],[4024,8],[6982,9],[8178,8],[8193,10],[9195,8]]},"221":{"position":[[3116,9],[4306,8],[4321,10],[5317,8],[8133,10],[10461,8],[10514,9],[10655,9],[13523,9],[14717,8],[14732,10],[15732,8],[18548,9],[19744,8],[19759,10],[20761,8]]},"230":{"position":[[1981,10],[4232,8],[4285,9],[4427,9]]},"232":{"position":[[1859,9],[3054,8],[3069,10],[4070,8]]},"245":{"position":[[2105,9],[3289,8],[3304,10],[4294,8]]},"247":{"position":[[1736,10],[3979,8],[4032,9],[4174,9],[6878,9],[8063,8],[8078,10],[9069,8]]},"288":{"position":[[1816,10],[4052,8],[4105,9],[4246,9],[6723,10],[8960,8],[9013,9],[9155,9],[12084,10],[12312,10],[14813,8],[14866,9],[15007,9],[15158,9]]},"312":{"position":[[1955,9],[3150,8],[3165,10],[4166,8],[6984,9],[8178,8],[8193,10],[9193,8]]},"318":{"position":[[2045,10],[4417,8],[4470,9],[4611,9],[7559,9],[8754,8],[8769,10],[9770,8],[12793,9],[13988,8],[14003,10],[15004,8]]},"338":{"position":[[1996,9],[3198,8],[3213,10],[4221,8]]},"345":{"position":[[2930,9],[4122,8],[4137,10],[5135,8]]},"369":{"position":[[2014,10],[4664,8],[4717,9],[4858,9],[4981,9],[7875,9],[9072,8],[9087,10],[10090,8]]},"371":{"position":[[2026,10],[4896,8],[4949,9],[5090,9],[5267,9]]},"373":{"position":[[1787,9],[2984,8],[2999,10],[4002,8]]},"385":{"position":[[1792,10],[4070,8],[4123,9],[4264,9]]},"387":{"position":[[1896,9],[3098,8],[3113,10],[4121,8],[7147,9],[8350,8],[8365,10],[9374,8]]},"429":{"position":[[2118,10],[2770,8],[2823,9],[2964,9]]},"445":{"position":[[1958,9],[3156,8],[3171,10],[4175,8],[7008,9],[8205,8],[8220,10],[9223,8]]},"449":{"position":[[1919,9],[3118,8],[3133,10],[4138,8],[7134,9],[8333,8],[8348,10],[9353,8]]},"467":{"position":[[1753,10],[4003,8],[4056,9],[4197,9]]},"469":{"position":[[1835,10],[4245,8],[4298,9],[4439,9]]},"471":{"position":[[1969,9],[3171,8],[3186,10],[4194,8]]},"485":{"position":[[1991,10],[4345,8],[4398,9],[4539,9]]},"487":{"position":[[2097,9],[3295,8],[3310,10],[4314,8]]},"505":{"position":[[2124,10],[4714,8],[4767,9],[4908,9],[5014,9],[7825,9],[9020,8],[9035,10],[10036,8],[13240,9],[14435,8],[14450,10],[15451,8],[18348,9],[19545,8],[19560,10],[20563,8],[23391,9],[24587,8],[24602,10],[25604,8]]},"521":{"position":[[1764,10],[4018,8],[4071,9],[4212,9]]},"523":{"position":[[2174,10],[4582,8],[4635,9],[4776,9]]},"525":{"position":[[2031,9],[3235,8],[3250,10],[4260,8]]},"537":{"position":[[1894,10],[4316,8],[4369,9],[4510,9],[4576,9]]},"541":{"position":[[1897,10],[4311,8],[4364,9],[4505,9],[4569,9]]},"543":{"position":[[1860,10],[4112,8],[4165,9],[4306,9]]},"545":{"position":[[1783,9],[2966,8],[2981,10],[3970,8],[6729,9],[7912,8],[7927,10],[8916,8]]},"547":{"position":[[1737,10],[3972,8],[4025,9],[4167,9],[6719,9],[7903,8],[7918,10],[8908,8]]},"562":{"position":[[1952,9],[3145,8],[3160,10],[4159,8]]},"569":{"position":[[2180,9],[3514,10],[4628,8],[7733,9],[9029,10],[10122,8],[13159,9],[14465,10],[15568,8]]},"571":{"position":[[2265,9],[3481,10],[4477,8]]},"576":{"position":[[1912,9],[3269,10],[4395,8],[7246,9],[8603,10],[9729,8]]},"583":{"position":[[2075,10],[2086,12],[3471,9],[4518,8],[4814,9]]},"605":{"position":[[3081,9],[4275,8],[4290,10],[5290,8],[8674,9],[9868,8],[9883,10],[10883,8],[14919,9],[16116,8],[16131,10],[17134,8],[21171,9],[22365,8],[22380,10],[23380,8],[26829,9],[28024,8],[28039,10],[29040,8]]},"607":{"position":[[2927,9],[4122,8],[4137,10],[5138,8],[8599,9],[9797,8],[9812,10],[10816,8],[14358,9],[15554,8],[15569,10],[16571,8],[20100,9],[21296,8],[21311,10],[22313,8]]},"622":{"position":[[2109,10],[4595,8],[4648,9],[4789,9]]},"624":{"position":[[1906,9],[3111,8],[3126,10],[4137,8]]},"630":{"position":[[1933,10],[4683,8],[4736,9],[4877,9],[5013,9]]},"632":{"position":[[1827,9],[3024,8],[3039,10],[4042,8]]},"634":{"position":[[1791,10],[4186,8],[4239,9],[4381,9],[7198,9],[8396,8],[8411,10],[9415,8],[12251,9],[13452,8],[13467,10],[14474,8]]},"644":{"position":[[2588,9],[3784,8],[3799,10],[4801,8],[7624,9],[8819,8],[8834,10],[9835,8]]},"646":{"position":[[1859,10],[4215,8],[4268,9],[4409,9],[7092,9],[8291,8],[8306,10],[9311,8]]},"648":{"position":[[4370,8],[7518,10],[9990,8],[10043,9],[10184,9],[10261,9],[12969,10],[15442,8],[15495,9],[15637,9],[15714,9],[18542,9],[19738,8],[19753,10],[20755,8],[23622,9],[24816,8],[24831,10],[25831,8]]},"660":{"position":[[4235,10],[6865,8],[6918,9],[7059,9],[7197,9],[7335,9],[7473,9],[7611,9],[7749,9],[7855,9]]},"666":{"position":[[582,9],[868,8],[883,10],[1149,8],[2475,9],[2763,8],[2778,10],[3046,8],[4390,9],[4676,8],[4691,10],[4957,8],[6289,9],[6578,8],[6593,10],[6862,8],[8201,9],[8488,8],[8503,10],[8770,8],[10105,9],[10394,8],[10409,10],[10678,8]]},"668":{"position":[[3161,9],[3448,8],[3463,10],[3730,8],[6496,10],[8886,8],[8939,9],[9080,9],[10413,9],[10699,8],[10714,10],[10980,8]]},"670":{"position":[[2858,10],[5303,8],[5356,9],[5498,9],[7060,9],[7196,10],[7556,8],[7571,10],[7985,8],[9886,9],[10022,10],[10383,8],[10398,10],[10813,8]]},"672":{"position":[[3774,10],[6404,8],[6457,9],[6598,9],[6736,9],[6874,9],[7012,9],[7150,9],[7288,9],[7394,9]]},"692":{"position":[[2141,10],[4407,8],[4460,9],[4601,9],[7101,10],[9375,8],[9428,9],[9569,9],[12232,10],[14924,8],[14977,9],[15118,9],[15198,9],[15282,9],[18459,9],[19655,8],[19670,10],[20672,8],[23575,9],[24769,8],[24784,10],[25784,8]]},"694":{"position":[[4759,10],[7623,8],[7676,9],[7817,9],[7894,9],[7965,9],[8045,9],[11073,9],[12272,8],[12287,10],[13292,8]]},"696":{"position":[[4550,10],[7058,8],[7111,9],[7252,9],[7343,9],[10438,10],[13468,8],[13521,9],[13662,9],[13764,9],[13866,9],[13956,9],[17334,9],[18527,8],[18542,10],[19541,8]]},"698":{"position":[[4807,10],[7505,8],[7558,9],[7699,9],[7780,9],[7865,9],[11048,9],[12246,8],[12261,10],[13265,8]]},"718":{"position":[[3757,10],[6141,8],[6194,9],[6335,9],[9066,9],[10268,8],[10283,10],[11291,8],[14183,10],[16567,8],[16620,9],[16761,9],[19449,9],[20651,8],[20666,10],[21674,8],[24612,9],[25821,8],[25836,10],[26851,8],[30392,10],[33408,8],[33461,9],[33602,9],[33744,9],[33872,9],[37019,9],[38221,8],[38236,10],[39244,8]]},"720":{"position":[[1843,9],[3040,8],[3055,10],[4058,8],[8542,9],[9738,8],[9753,10],[10755,8]]},"722":{"position":[[8727,10],[11573,8],[11626,9],[11767,9],[11864,9],[11972,9],[15227,10],[17749,8],[17802,9],[17943,9],[21008,10],[23684,8],[23737,9],[23878,9],[24059,9],[26948,10],[29454,8],[29507,9],[29648,9],[29734,9],[32544,10],[34870,8],[34923,9],[35064,9],[37692,10],[39984,8],[40037,9],[40178,9],[42956,9],[44150,8],[44165,10],[45165,8],[48063,9],[49272,8],[49287,10],[50302,8]]},"734":{"position":[[4752,10],[8256,8],[8309,9],[8450,9],[8590,9],[8736,9],[8918,9]]},"740":{"position":[[2138,9],[3330,8],[3345,10],[4343,8],[7253,9],[8449,8],[8464,10],[9466,8],[12374,10],[14760,8],[14813,9],[14954,9],[17606,9],[18799,8],[18814,10],[19813,8]]},"742":{"position":[[6249,9],[7437,8],[7452,10],[8446,8],[11834,10],[15088,8],[15141,9],[15282,9],[15441,9],[15599,9],[19129,10],[21827,8],[21880,9],[22021,9],[22174,9],[25147,9],[26339,8],[26354,10],[27352,8]]},"744":{"position":[[2959,10],[5766,8],[5819,9],[5961,9],[6141,9],[9678,9],[9818,10],[11205,8],[11220,10],[12438,8],[16135,9],[16275,10],[17663,8],[17678,10],[18897,8]]},"746":{"position":[[6736,10],[13280,8],[13333,9],[13474,9],[13614,9],[13760,9],[13942,9],[14091,9],[14246,9],[14403,9],[14562,9],[14721,9],[14879,9],[15036,9],[15193,9]]},"767":{"position":[[2667,10],[6941,8],[6994,9],[7135,9],[7280,9],[7425,9],[7586,9],[7743,9],[7916,9],[12163,10],[15319,8],[15372,9],[15513,9],[15665,9],[15821,9],[19274,10],[22290,8],[22343,9],[22484,9],[22619,9],[22745,9],[26705,9],[27900,8],[27915,10],[28916,8],[31885,9],[33081,8],[33096,10],[34098,8],[36924,9],[38123,8],[38138,10],[39143,8],[41983,9],[43183,8],[43198,10],[44204,8]]},"769":{"position":[[2007,9],[3203,8],[3218,10],[4220,8],[9338,9],[10530,8],[10545,10],[11543,8],[14687,9],[15888,8],[15903,10],[16910,8],[24434,9],[25634,8],[25649,10],[26655,8],[32088,9],[33279,8],[33294,10],[34291,8],[41075,9],[42266,8],[42281,10],[43278,8]]},"786":{"position":[[3460,10],[5728,8],[5781,9],[5922,9],[8534,9],[9731,8],[9746,10],[10749,8],[13559,10],[15827,8],[15880,9],[16021,9],[18590,9],[19787,8],[19802,10],[20805,8],[23635,9],[24833,8],[24848,10],[25852,8],[30785,9],[31982,8],[31997,10],[33000,8],[35829,9],[37026,8],[37041,10],[38044,8]]},"788":{"position":[[4208,10],[7000,8],[7053,9],[7194,9],[7338,9],[10531,9],[11730,8],[11745,10],[12750,8]]},"790":{"position":[[1954,10],[4270,8],[4323,9],[4464,9],[7510,10],[9890,8],[9943,9],[10084,9],[12732,9],[13929,8],[13944,10],[14947,8]]},"792":{"position":[[4657,10],[7159,8],[7212,9],[7353,9],[7434,9],[10715,9],[11916,8],[11931,10],[12938,8],[17202,10],[19514,8],[19567,9],[19708,9]]},"809":{"position":[[3460,10],[5734,8],[5787,9],[5928,9],[8555,9],[9755,8],[9770,10],[10776,8],[13595,10],[15861,8],[15914,9],[16055,9],[18620,9],[19816,8],[19831,10],[20833,8],[23659,9],[24857,8],[24872,10],[25876,8],[30296,9],[31492,8],[31507,10],[32509,8],[35334,9],[36531,8],[36546,10],[37549,8]]},"811":{"position":[[4056,10],[7162,8],[7215,9],[7356,9],[7481,9],[7552,9],[7626,9],[11003,9],[12203,8],[12218,10],[13224,8]]},"813":{"position":[[3768,10],[6500,8],[6553,9],[6694,9],[6824,9],[10136,9],[11339,8],[11354,10],[12363,8]]},"815":{"position":[[4813,10],[7957,8],[8010,9],[8151,9],[8291,9],[8463,9],[11665,9],[12869,8],[12884,10],[13894,8],[16836,9],[18042,8],[18057,10],[19069,8],[21944,9],[23152,8],[23167,10],[24181,8],[27141,9],[28347,8],[28362,10],[29374,8],[32247,9],[33453,8],[33468,10],[34480,8]]}}}],["tuplekey(user=\"user:ann",{"_index":2147,"t":{"670":{"position":[[8257,26],[11085,26]]},"744":{"position":[[12714,26],[12798,26],[19173,26],[19257,26]]}}}],["tuplekeys(new",{"_index":1160,"t":{"192":{"position":[[727,13]]},"194":{"position":[[886,13]]},"213":{"position":[[3031,13]]},"221":{"position":[[9483,13]]},"230":{"position":[[3293,13]]},"247":{"position":[[3044,13]]},"288":{"position":[[3120,13],[8028,13],[13665,13],[13832,13]]},"318":{"position":[[3417,13]]},"369":{"position":[[3548,13]]},"371":{"position":[[3670,13]]},"385":{"position":[[3117,13]]},"429":{"position":[[2543,13]]},"467":{"position":[[3064,13]]},"469":{"position":[[3226,13]]},"485":{"position":[[3354,13]]},"505":{"position":[[3628,13]]},"521":{"position":[[3077,13]]},"523":{"position":[[3564,13]]},"537":{"position":[[3314,13]]},"541":{"position":[[3313,13]]},"543":{"position":[[3172,13]]},"547":{"position":[[3041,13]]},"622":{"position":[[3538,13]]},"630":{"position":[[3517,13]]},"634":{"position":[[3175,13]]},"646":{"position":[[3223,13]]},"648":{"position":[[8963,13],[14415,13]]},"660":{"position":[[5787,13]]},"668":{"position":[[7877,13]]},"670":{"position":[[4267,13]]},"672":{"position":[[5326,13]]},"692":{"position":[[3460,13],[8424,13],[13810,13]]},"694":{"position":[[6446,13]]},"696":{"position":[[6013,13],[12208,13]]},"698":{"position":[[6388,13]]},"718":{"position":[[5135,13],[15561,13],[32132,13]]},"722":{"position":[[10382,13],[16674,13],[22555,13],[28410,13],[33893,13],[39024,13]]},"734":{"position":[[6759,13]]},"740":{"position":[[13753,13]]},"742":{"position":[[13693,13],[20687,13]]},"744":{"position":[[4572,13]]},"746":{"position":[[10447,13]]},"767":{"position":[[5105,13],[13973,13],[21014,13]]},"786":{"position":[[4780,13],[14879,13]]},"788":{"position":[[5813,13]]},"790":{"position":[[3298,13],[8886,13]]},"792":{"position":[[6117,13],[18544,13]]},"809":{"position":[[4783,13],[14914,13]]},"811":{"position":[[5864,13]]},"813":{"position":[[5343,13]]},"815":{"position":[[6617,13]]}}}],["tuples:[{\"key",{"_index":1907,"t":{"569":{"position":[[5692,15],[11125,15],[16582,15]]},"648":{"position":[[5378,15]]}}}],["tupleset",{"_index":513,"t":{"54":{"position":[[1220,11],[1515,11],[1777,11],[2542,11],[2837,11],[3099,11]]},"60":{"position":[[907,11],[1645,11],[3039,9]]},"68":{"position":[[714,8],[1390,11],[2096,11]]},"419":{"position":[[640,11],[975,11],[2949,11],[3457,11]]},"423":{"position":[[2003,11],[2554,11]]},"429":{"position":[[275,9],[1356,11]]},"447":{"position":[[772,11]]},"465":{"position":[[657,11]]},"471":{"position":[[5900,10]]},"539":{"position":[[415,11]]},"628":{"position":[[495,11]]},"660":{"position":[[1883,11],[2062,11],[2206,11]]},"672":{"position":[[1758,11],[2001,11],[2145,11]]},"734":{"position":[[1248,11],[1932,11]]},"742":{"position":[[1760,11],[1906,11],[3178,11],[3481,11]]},"746":{"position":[[1094,11],[1240,11],[1780,11],[2083,11],[2753,11]]},"748":{"position":[[1494,11],[1640,11],[2247,11],[2550,11],[3220,11]]},"769":{"position":[[18252,11],[19238,11],[21962,11],[29154,11],[29557,11],[36209,11],[36733,11],[38059,11],[38387,11]]},"792":{"position":[[14314,11],[21430,11],[21755,11],[22075,11]]},"813":{"position":[[13760,11],[15405,11],[15618,11],[15838,11],[16055,11]]},"815":{"position":[[1169,11],[1382,11],[1602,11],[1819,11]]}}}],["tupletouserset",{"_index":512,"t":{"54":{"position":[[1200,17],[1495,17],[1757,17],[2522,17],[2817,17],[3079,17]]},"60":{"position":[[887,17],[1625,17]]},"68":{"position":[[334,14],[1370,17],[2076,17]]},"419":{"position":[[620,17],[955,17],[2929,17],[3437,17]]},"423":{"position":[[1983,17],[2534,17]]},"429":{"position":[[1336,17]]},"447":{"position":[[752,17]]},"465":{"position":[[637,17]]},"539":{"position":[[395,17]]},"628":{"position":[[475,17]]},"660":{"position":[[1863,17],[2042,17],[2186,17]]},"672":{"position":[[1738,17],[1981,17],[2125,17]]},"734":{"position":[[1228,17],[1912,17]]},"742":{"position":[[1740,17],[1886,17],[3158,17],[3461,17]]},"746":{"position":[[1074,17],[1220,17],[1760,17],[2063,17],[2733,17]]},"748":{"position":[[1474,17],[1620,17],[2227,17],[2530,17],[3200,17]]},"769":{"position":[[18232,17],[19218,17],[21942,17],[29134,17],[29537,17],[36189,17],[36713,17],[38039,17],[38367,17]]},"792":{"position":[[14294,17],[21366,17],[21690,17],[22010,17]]},"813":{"position":[[13740,17],[15341,17],[15553,17],[15770,17],[15990,17]]},"815":{"position":[[1105,17],[1317,17],[1534,17],[1754,17]]}}}],["turn",{"_index":1111,"t":{"160":{"position":[[256,4]]}}}],["tutori",{"_index":1372,"t":{"298":{"position":[[191,8]]},"676":{"position":[[5,8]]},"682":{"position":[[8,9]]},"704":{"position":[[5,8]]},"710":{"position":[[233,9],[609,8]]},"712":{"position":[[5,8]]},"724":{"position":[[167,9],[352,9]]},"752":{"position":[[5,8]]},"758":{"position":[[75,9],[647,8]]},"762":{"position":[[455,9]]},"765":{"position":[[8,8],[72,10]]},"769":{"position":[[5976,9],[18078,9],[21210,9],[38900,9]]},"771":{"position":[[8,9],[663,9]]},"773":{"position":[[5,8]]},"779":{"position":[[63,9],[225,8]]},"781":{"position":[[73,9]]},"796":{"position":[[5,8]]},"802":{"position":[[95,9],[263,8]]},"804":{"position":[[79,9]]}}}],["tweet",{"_index":68,"t":{"6":{"position":[[390,5]]},"238":{"position":[[231,5],[302,5],[419,8]]},"245":{"position":[[84,6]]},"273":{"position":[[3601,6]]},"279":{"position":[[231,5],[381,5],[570,8]]},"288":{"position":[[5040,5],[9954,5],[10214,5]]}}}],["tweet:1",{"_index":1238,"t":{"245":{"position":[[146,7],[209,10],[294,8],[1199,10],[2179,10],[3367,9],[5243,10],[5273,9]]},"247":{"position":[[74,7],[835,10],[3135,9],[5015,8],[5971,10],[6952,10],[8141,9],[10020,10],[10050,9]]},"288":{"position":[[126,7],[916,10],[3208,9],[5822,10],[8116,9],[10981,7],[11047,10],[11092,7],[11184,10],[12146,7],[12348,7],[13727,7],[13802,9],[13868,7],[13969,9],[15045,7],[15170,7],[15980,7],[16131,7]]}}}],["tweet:12345",{"_index":1431,"t":{"343":{"position":[[677,11]]}}}],["tweet:12345#view",{"_index":1430,"t":{"343":{"position":[[617,18]]}}}],["twitter",{"_index":60,"t":{"6":{"position":[[211,8],[241,7]]},"273":{"position":[[3489,8],[3503,7]]},"275":{"position":[[602,7]]},"304":{"position":[[653,9]]},"417":{"position":[[394,7]]}}}],["two",{"_index":191,"t":{"16":{"position":[[2928,3]]},"52":{"position":[[383,3],[913,3]]},"98":{"position":[[2534,3]]},"200":{"position":[[418,3]]},"204":{"position":[[217,3]]},"221":{"position":[[217,3]]},"269":{"position":[[99,3],[302,3]]},"290":{"position":[[195,3]]},"312":{"position":[[213,3]]},"334":{"position":[[249,3]]},"336":{"position":[[20,3]]},"365":{"position":[[155,3]]},"403":{"position":[[5769,3]]},"445":{"position":[[213,3]]},"455":{"position":[[217,3]]},"471":{"position":[[85,3]]},"505":{"position":[[227,3]]},"537":{"position":[[124,3],[175,3]]},"583":{"position":[[6035,3]]},"601":{"position":[[1171,3],[1241,3]]},"605":{"position":[[12464,3],[12787,3]]},"607":{"position":[[12214,3]]},"628":{"position":[[46,3],[999,3]]},"668":{"position":[[803,4]]},"670":{"position":[[238,3],[833,3]]},"742":{"position":[[1100,3],[23296,3]]},"744":{"position":[[832,3]]},"771":{"position":[[496,3]]}}}],["ty",{"_index":1702,"t":{"429":{"position":[[211,5]]}}}],["type",{"_index":155,"t":{"16":{"position":[[363,4],[468,6],[477,4],[573,6],[633,4],[653,4],[778,5],[822,4],[848,4],[964,7],[1183,7],[1255,7],[1324,7],[1392,7],[1507,4],[1668,4],[1838,4],[1882,4],[1943,7],[2162,7],[2206,7],[2278,7],[2322,7],[2391,7],[2435,7],[2503,7],[2547,7],[2577,7],[2714,7],[2744,7],[4210,4],[4609,5],[5267,4],[5386,4],[5398,4],[5795,4],[5882,4],[6655,4],[6769,4],[6805,7],[7024,7],[7096,7],[7165,7],[7233,7],[7263,7],[7326,5],[7548,6],[7579,4],[7613,4],[7646,5],[7762,4],[7810,4],[7882,7],[8021,7],[8168,4],[8334,4],[8397,4],[8672,4],[10060,4],[10376,4],[10430,4],[10515,4],[10668,4],[10951,4],[11177,4],[11315,4],[11341,4],[11445,7],[11689,7],[11758,7],[16842,5],[17805,4],[22454,5],[23150,4],[23448,4],[23573,4],[23596,4],[24406,5],[25401,5],[26620,4],[28205,5],[28294,7],[28567,4],[29488,4],[29527,4],[29568,9],[29635,4],[29736,4],[29940,4],[30119,8],[30194,8]]},"18":{"position":[[2,4]]},"20":{"position":[[2,4],[127,5]]},"22":{"position":[[55,4]]},"30":{"position":[[38,4],[157,4],[169,4]]},"34":{"position":[[24,4],[58,4],[91,5]]},"40":{"position":[[237,4]]},"44":{"position":[[110,4]]},"48":{"position":[[12,4],[53,9],[120,4],[221,4]]},"52":{"position":[[150,5],[278,4]]},"54":{"position":[[166,4],[176,4],[220,4],[510,4],[853,7],[873,7],[1010,7],[1040,7],[1982,7],[2002,7],[2102,7],[2173,7],[2193,7],[2286,7],[2306,7],[2360,7],[3304,7],[3324,7],[3424,7],[3495,7],[3515,7],[3608,7],[3628,7],[3727,5],[3791,4],[3906,4]]},"56":{"position":[[142,6],[186,7],[243,5],[329,4],[348,9],[411,4],[477,4],[595,4],[696,4],[742,4],[874,4],[1062,5],[1077,4],[1140,7],[1275,7],[1295,7],[1317,7],[1376,4],[1456,4],[1536,4],[1654,4],[1686,4],[1705,4],[1765,4],[1826,4]]},"58":{"position":[[96,4],[122,4],[228,7],[535,7],[604,7],[650,4],[730,4],[922,5],[998,4],[1315,4]]},"60":{"position":[[311,4],[321,4],[379,4],[536,7],[556,7],[693,7],[713,7],[767,7],[1120,7],[1191,7],[1437,4],[1538,7],[1851,7],[3106,5],[3112,5],[3203,4]]},"62":{"position":[[169,4],[251,7],[469,7],[507,4]]},"64":{"position":[[187,4],[279,7],[546,7],[584,4]]},"66":{"position":[[254,4],[342,7],[573,7],[611,4]]},"68":{"position":[[892,4],[1110,7],[1560,7],[1629,7],[1698,7],[1821,4],[1945,7],[2267,7]]},"80":{"position":[[97,4],[107,4],[247,7],[267,7],[457,7],[526,7],[594,7],[1459,7],[1479,7],[1669,7],[1738,7],[1806,7],[6816,5]]},"86":{"position":[[2430,5]]},"98":{"position":[[4303,4]]},"114":{"position":[[1504,5]]},"118":{"position":[[107,4]]},"122":{"position":[[44,4]]},"126":{"position":[[243,5],[468,5],[785,4],[1518,5],[1607,7]]},"142":{"position":[[3151,4]]},"192":{"position":[[1471,5]]},"194":{"position":[[1631,5]]},"204":{"position":[[221,6],[338,4],[348,4],[395,4],[504,7],[524,7],[666,7],[696,7],[835,7],[1080,5],[1243,4],[1362,4],[1374,4]]},"208":{"position":[[2,5],[165,4],[284,4],[296,4]]},"211":{"position":[[39,4],[107,4]]},"213":{"position":[[4633,5]]},"215":{"position":[[4674,5],[9847,5]]},"221":{"position":[[221,6],[332,4],[342,4],[383,4],[486,7],[506,7],[640,7],[670,7],[809,7],[5963,5],[11158,5],[16382,5],[21413,5],[22092,5],[22255,4],[22374,4],[22386,4]]},"227":{"position":[[2,5],[165,4],[284,4],[296,4]]},"230":{"position":[[4892,5]]},"232":{"position":[[4721,5]]},"238":{"position":[[219,4],[287,4],[297,4],[391,7],[411,7],[547,7],[799,5],[962,4],[1081,4],[1093,4]]},"242":{"position":[[2,5],[165,4],[284,4],[296,4]]},"245":{"position":[[4934,5]]},"247":{"position":[[4635,5],[5040,4],[9710,5]]},"259":{"position":[[96,4],[362,4],[750,5],[1249,4],[1730,4],[2333,5]]},"261":{"position":[[78,4],[88,4],[131,4],[187,4],[291,7],[311,7],[447,7],[477,7],[612,7],[655,7],[685,7],[817,7],[860,7],[999,5],[1079,4],[1368,4],[1777,5],[1806,9],[1950,5],[2005,4],[2081,4],[2585,4],[3209,5],[3238,9]]},"273":{"position":[[186,4],[248,4],[579,4],[1025,4],[2006,4],[2991,4]]},"275":{"position":[[94,4],[133,4]]},"279":{"position":[[219,4],[278,4],[376,4],[440,4],[562,7],[698,7],[718,7],[754,7],[808,7],[978,7],[1052,7],[1399,5],[1562,4],[1681,4],[1693,4]]},"285":{"position":[[2,5],[165,4],[284,4],[296,4]]},"288":{"position":[[4704,5],[9613,5],[15664,5]]},"290":{"position":[[457,4],[554,4]]},"306":{"position":[[207,4],[260,4],[466,4],[476,4],[534,4],[627,7],[647,7],[786,7],[806,7],[858,7],[993,7],[1709,5],[1872,4],[1991,4],[2003,4]]},"310":{"position":[[2,5],[165,4],[284,4],[296,4]]},"312":{"position":[[4817,5],[9843,5]]},"314":{"position":[[167,5],[237,4],[247,4],[328,4],[421,7],[441,7],[608,7],[677,7],[697,7],[749,7],[884,7]]},"316":{"position":[[324,4],[334,4],[431,4],[524,7],[544,7],[803,7],[872,7],[892,7],[944,7],[1079,7]]},"318":{"position":[[5136,5],[10421,5],[15655,5]]},"328":{"position":[[208,4],[407,4],[417,4],[536,7],[556,7],[721,7],[790,7],[1212,5],[1375,4],[1494,4],[1506,4]]},"332":{"position":[[2,5],[165,4],[284,4],[296,4]]},"334":{"position":[[17,4]]},"336":{"position":[[192,4],[202,4],[331,7],[351,7],[595,7],[664,7]]},"338":{"position":[[4879,5]]},"343":{"position":[[487,4]]},"345":{"position":[[69,4],[79,4],[120,4],[228,7],[248,7],[382,7],[412,7],[551,7],[571,7],[5783,5]]},"347":{"position":[[69,4],[79,4],[230,7],[250,7],[494,7],[514,7],[604,7],[624,7],[931,7],[989,7],[1075,7]]},"349":{"position":[[10,4],[969,4]]},"353":{"position":[[310,5]]},"355":{"position":[[197,4],[420,5],[431,4],[511,4],[521,4],[656,7],[676,7],[926,7],[995,7]]},"357":{"position":[[51,4]]},"365":{"position":[[1165,4]]},"367":{"position":[[98,4],[140,5],[163,4],[291,4],[301,4],[413,4],[508,7],[528,7],[778,7],[798,7],[891,7],[911,7],[965,7],[1104,7]]},"369":{"position":[[26,5],[5495,5],[10743,5]]},"371":{"position":[[5837,5]]},"373":{"position":[[4655,5]]},"379":{"position":[[219,4],[307,4],[317,4],[436,7],[456,7],[621,7],[690,7],[791,5],[954,4],[1073,4],[1085,4]]},"381":{"position":[[2,5],[165,4],[284,4],[296,4]]},"385":{"position":[[4743,5]]},"387":{"position":[[4779,5],[10033,5]]},"393":{"position":[[1223,5]]},"395":{"position":[[437,5],[468,5]]},"397":{"position":[[1262,6]]},"399":{"position":[[24,5],[278,5],[329,5],[463,5],[1932,5],[1986,5],[3796,4],[3913,4],[4029,5],[4121,4],[4131,4],[4145,4],[4157,4],[4175,4],[4617,5],[4685,4]]},"401":{"position":[[31,5],[215,4],[304,4],[352,4],[357,6],[439,7],[612,7],[674,5],[2845,5],[2868,4],[2878,4],[3039,4],[3176,4],[3219,4]]},"403":{"position":[[306,4],[369,5],[553,6],[572,4],[1104,4],[1616,4],[1817,5],[1911,5],[2050,4],[2188,4],[2289,5],[2761,4],[2791,4],[2828,4],[2837,4],[2907,5],[2956,6],[2996,4],[3204,4],[3277,4],[3834,4],[4520,4],[5320,4],[6110,4],[7475,4],[9350,4],[9380,4],[9413,4],[9439,4],[9875,4],[9948,4],[9958,4],[10028,4]]},"405":{"position":[[38,5],[67,4],[1393,6]]},"415":{"position":[[442,4],[547,4],[692,4]]},"419":{"position":[[125,4],[135,4],[178,4],[266,4],[408,7],[445,7],[509,7],[767,7],[1703,4],[2084,5],[2293,4],[2303,4],[2346,4],[2436,4],[2615,7],[2652,7],[2788,7],[2818,7],[3148,7],[3219,7],[3249,7],[3656,7],[3727,7]]},"421":{"position":[[85,5],[344,4],[418,4],[478,4],[514,7],[574,4]]},"423":{"position":[[74,4],[1139,4],[1358,4],[1368,4],[1411,4],[1514,4],[1669,7],[1706,7],[1842,7],[1872,7],[2202,7],[2273,7],[2293,7],[2346,7],[2753,7],[2824,7],[2844,7],[3323,5],[3374,5]]},"425":{"position":[[637,6],[676,4],[789,4],[799,4],[878,7],[915,7],[1054,7],[1074,7],[1243,4],[1404,4],[1975,4],[2157,5],[2188,4],[2375,4],[2541,4],[2579,4],[2780,4],[3372,5]]},"427":{"position":[[192,5],[247,4],[281,4]]},"429":{"position":[[0,4],[383,5],[389,5],[480,4],[522,4],[925,4],[935,4],[1056,4],[1066,4],[1205,7],[1225,7],[1527,7],[1549,7],[1642,7],[3321,5]]},"437":{"position":[[228,4],[408,4],[718,4],[728,4],[828,4],[929,7],[949,7],[1188,7],[1265,7],[1295,7],[1438,7],[2698,5],[2861,4],[2980,4],[2992,4]]},"443":{"position":[[2,5],[165,4],[284,4],[296,4]]},"445":{"position":[[4829,5],[9876,5]]},"447":{"position":[[201,4],[211,4],[359,4],[460,7],[480,7],[969,7],[1046,7],[1076,7],[1219,7]]},"449":{"position":[[4793,5],[10008,5]]},"455":{"position":[[221,6],[354,4],[364,4],[408,4],[505,7],[525,7],[662,7],[692,7],[831,7],[1083,5],[1246,4],[1365,4],[1377,4]]},"459":{"position":[[2,5],[165,4],[284,4],[296,4]]},"461":{"position":[[366,4]]},"463":{"position":[[336,4],[346,4],[390,4],[511,7],[531,7],[668,7],[698,7],[863,7],[934,7],[995,4]]},"465":{"position":[[140,4],[150,4],[194,4],[337,7],[357,7],[494,7],[524,7],[828,7],[899,7]]},"467":{"position":[[4662,5]]},"469":{"position":[[4983,5]]},"471":{"position":[[4852,5],[6120,4]]},"475":{"position":[[104,4],[275,4]]},"477":{"position":[[219,4],[297,4],[307,4],[409,7],[429,7],[564,7],[584,7],[852,5],[1015,4],[1134,4],[1146,4],[1431,4],[1502,9],[1581,4]]},"481":{"position":[[2,5],[165,4],[284,4],[296,4],[581,4],[652,9],[731,4]]},"485":{"position":[[60,4],[90,4],[173,4],[1020,4],[2058,4],[3421,4],[4582,4],[5055,5],[5290,4],[5472,4],[5557,8],[5893,8]]},"487":{"position":[[302,4],[4968,5]]},"491":{"position":[[1658,4]]},"493":{"position":[[219,4],[318,4],[328,4],[442,7],[462,7],[621,7],[690,7],[942,5],[1105,4],[1224,4],[1236,4],[1687,4]]},"497":{"position":[[2,5],[165,4],[284,4],[296,4],[747,4]]},"501":{"position":[[296,4],[306,4],[420,7],[440,7],[599,7],[668,7]]},"503":{"position":[[202,4],[486,4],[719,4],[768,4],[778,4],[959,7],[979,7],[1348,7],[1417,7],[1534,4]]},"505":{"position":[[13,4],[5515,5],[10687,5],[16102,5],[21216,5],[26256,5]]},"511":{"position":[[312,4],[322,4],[419,7],[439,7],[578,7],[830,5],[993,4],[1112,4],[1124,4]]},"515":{"position":[[2,5],[165,4],[284,4],[296,4]]},"519":{"position":[[191,4],[201,4],[254,4],[347,7],[367,7],[506,7],[558,7],[693,7]]},"521":{"position":[[4679,5]]},"523":{"position":[[5319,5]]},"525":{"position":[[4920,5]]},"531":{"position":[[214,4],[276,4],[286,4],[378,7],[398,7],[531,7],[783,5],[946,4],[1065,4],[1077,4]]},"535":{"position":[[2,5],[165,4],[284,4],[296,4]]},"537":{"position":[[73,4],[5035,5]]},"539":{"position":[[101,4],[111,4],[197,4],[293,7],[313,7],[641,7],[708,7],[738,7],[880,7],[947,4],[1017,4]]},"541":{"position":[[5026,5]]},"543":{"position":[[4772,5]]},"545":{"position":[[4609,5],[9555,5]]},"547":{"position":[[4624,5],[9548,5]]},"553":{"position":[[219,4],[380,4],[390,4],[519,7],[539,7],[797,7],[866,7],[1254,5],[1417,4],[1536,4],[1548,4]]},"557":{"position":[[2,5],[165,4],[284,4],[296,4]]},"562":{"position":[[4808,5]]},"569":{"position":[[133,4],[212,4],[344,4],[5255,5],[5665,4],[5870,4],[5989,4],[10730,5],[11098,4],[16186,5]]},"571":{"position":[[4986,5],[5278,4]]},"576":{"position":[[4961,5],[10295,5]]},"581":{"position":[[96,4]]},"583":{"position":[[915,5],[2017,5],[3405,4],[5250,5],[5339,7],[5727,4]]},"585":{"position":[[482,4],[582,4]]},"587":{"position":[[244,4]]},"593":{"position":[[371,5],[534,4],[653,4],[665,4],[968,4],[1099,4]]},"597":{"position":[[2,5],[165,4],[284,4],[296,4],[599,4],[730,4]]},"599":{"position":[[403,4],[428,10]]},"601":{"position":[[73,4],[108,4],[226,4],[271,4],[281,4],[390,4],[483,7],[503,7],[747,7],[767,7],[803,7],[894,7],[914,7],[966,7],[1101,7],[1182,6],[1221,4],[1391,4]]},"605":{"position":[[82,4],[92,4],[201,4],[294,7],[314,7],[558,7],[578,7],[614,7],[705,7],[725,7],[777,7],[912,7],[958,4],[1022,4],[5940,5],[6584,4],[6619,4],[6668,4],[11533,5],[12051,4],[12194,4],[17787,5],[18509,4],[24030,5],[29691,5]]},"607":{"position":[[143,4],[153,4],[214,4],[307,7],[327,7],[486,7],[621,7],[818,4],[5789,5],[6451,4],[6549,4],[6625,4],[11470,5],[12145,4],[17223,5],[17952,4],[22965,5]]},"609":{"position":[[136,4],[463,4]]},"611":{"position":[[320,4]]},"613":{"position":[[207,4],[262,4],[332,4],[342,4],[388,4],[483,7],[503,7],[642,7],[672,7],[809,7],[1027,5],[1190,4],[1309,4],[1321,4]]},"617":{"position":[[2,5],[165,4],[284,4],[296,4]]},"620":{"position":[[95,4],[165,4],[175,4],[245,4],[340,7],[360,7],[525,7],[596,7],[626,7],[763,7]]},"622":{"position":[[9,4],[1091,4],[2195,4],[3624,4],[4851,4],[5371,5],[5634,4]]},"624":{"position":[[4798,5]]},"628":{"position":[[50,5],[102,4],[112,4],[230,4],[334,7],[354,7],[695,7],[764,7],[794,7],[951,7],[982,4],[1252,4],[1324,4]]},"630":{"position":[[5564,5]]},"632":{"position":[[4695,5]]},"634":{"position":[[4917,5],[10069,5],[15131,5]]},"640":{"position":[[75,5],[238,4],[357,4],[369,4]]},"642":{"position":[[280,4],[343,4],[404,7],[546,7],[894,4],[958,4],[1019,7],[1162,7]]},"644":{"position":[[282,4],[395,4],[456,7],[779,7],[5453,5],[10486,5]]},"646":{"position":[[4926,5],[9966,5]]},"648":{"position":[[5041,5],[5686,4],[10734,5],[16187,5],[21407,5],[26481,5]]},"650":{"position":[[142,4],[206,4],[267,7],[410,7]]},"658":{"position":[[39,4],[158,4],[170,4]]},"660":{"position":[[891,4],[901,4],[1012,4],[1347,7],[1367,7],[1579,7],[1657,7],[1734,7],[1764,7],[2705,7],[2783,7],[8242,5]]},"666":{"position":[[1669,5],[3568,5],[5477,5],[7385,5],[9291,5],[11201,5]]},"668":{"position":[[402,4],[1055,4],[1094,4],[1345,7],[2011,7],[2089,7],[2171,7],[2249,7],[2293,4],[4251,5],[9614,5],[11500,5]]},"670":{"position":[[6059,5],[8643,5],[11472,5]]},"672":{"position":[[91,4],[101,4],[350,4],[685,7],[705,7],[1371,7],[1449,7],[1531,7],[1609,7],[1639,7],[2580,7],[2658,7],[7781,5]]},"690":{"position":[[668,4],[678,4],[851,7],[871,7],[1105,7],[1189,7],[1266,7]]},"692":{"position":[[5074,5],[10046,5],[15752,5],[21324,5],[26434,5]]},"694":{"position":[[1175,4],[1474,7],[2118,7],[2195,7],[2275,7],[2359,7],[2436,7],[8511,5],[13947,5]]},"696":{"position":[[302,4],[349,4],[433,7],[614,7],[691,7],[800,4],[810,4],[1108,4],[1241,7],[1261,7],[1905,7],[1925,7],[2034,7],[2054,7],[2172,7],[2256,7],[2333,7],[2363,7],[2544,7],[2621,7],[7820,5],[14439,5],[20190,5],[20630,4]]},"698":{"position":[[656,4],[666,4],[934,4],[1067,7],[1087,7],[1683,7],[1703,7],[1812,7],[1832,7],[1900,7],[2081,7],[2158,7],[2247,4],[2367,5],[8336,5],[9261,4],[13919,5]]},"710":{"position":[[459,5]]},"712":{"position":[[123,4],[268,4],[540,4],[918,4]]},"716":{"position":[[888,4],[1022,4],[1032,4],[1209,7],[1229,7],[1466,7],[1543,7],[1612,7],[1680,7],[1727,4],[1883,4],[1975,4]]},"718":{"position":[[594,4],[604,4],[781,7],[801,7],[1038,7],[1115,7],[1184,7],[1252,7],[1461,4],[1510,7],[1650,7],[1726,4],[1943,4],[6866,5],[11949,5],[17292,5],[22332,5],[27516,5],[34395,5],[39902,5]]},"720":{"position":[[4711,5],[5793,4],[5803,4],[6030,7],[6050,7],[6514,7],[6591,7],[6660,7],[6728,7],[11407,5]]},"722":{"position":[[1643,4],[1911,7],[2121,7],[2195,7],[2215,7],[2268,7],[2323,7],[2370,7],[2465,7],[2485,7],[2538,7],[2593,7],[2640,7],[3062,4],[3340,7],[3629,7],[3703,7],[3723,7],[3776,7],[3831,7],[3878,7],[3973,7],[3993,7],[4046,7],[4101,7],[4148,7],[4228,4],[4485,4],[4495,4],[4671,4],[4998,7],[5018,7],[5482,7],[5559,7],[5628,7],[5696,7],[5726,7],[6015,7],[6089,7],[6109,7],[6162,7],[6217,7],[6264,7],[6359,7],[6379,7],[6432,7],[6487,7],[6534,7],[12478,5],[18543,5],[24529,5],[30215,5],[35567,5],[40664,5],[45815,5],[50967,5]]},"732":{"position":[[39,4],[158,4],[170,4]]},"734":{"position":[[548,4],[558,4],[611,4],[801,4],[942,7],[962,7],[1117,7],[1147,7],[1730,7],[1803,7],[1833,7],[2127,7],[9460,5]]},"740":{"position":[[4991,5],[10118,5],[15486,5],[20462,5]]},"742":{"position":[[120,5],[191,6],[256,4],[302,7],[437,7],[473,4],[527,7],[670,7],[786,5],[1260,4],[1299,4],[1537,7],[2131,7],[2219,7],[2311,7],[2359,5],[2759,4],[2798,4],[3077,7],[3949,7],[4022,7],[4075,5],[9090,5],[16194,5],[22682,5],[28000,5]]},"744":{"position":[[6676,5],[13297,5],[19757,5]]},"746":{"position":[[91,4],[101,4],[337,4],[614,4],[704,4],[748,4],[851,7],[871,7],[1465,7],[1553,7],[1645,7],[1679,7],[2551,7],[2624,7],[2654,7],[2948,7],[2981,7],[3116,7],[3146,7],[3289,7],[15788,5]]},"748":{"position":[[243,4],[253,4],[294,4],[550,4],[827,4],[917,4],[961,4],[1064,7],[1084,7],[1217,7],[1247,7],[1854,7],[1932,7],[2020,7],[2112,7],[2146,7],[3018,7],[3091,7],[3121,7],[3415,7],[3448,7],[3583,7],[3613,7],[3756,7]]},"765":{"position":[[398,5],[629,4],[639,4],[693,4],[747,4],[848,7],[868,7],[1024,7],[1054,7],[1197,7],[1235,7],[1378,7]]},"767":{"position":[[8476,5],[16376,5],[23277,5],[29567,5],[34750,5],[39798,5],[44860,5]]},"769":{"position":[[4872,5],[5498,5],[5534,4],[5612,7],[5794,7],[5863,7],[5957,5],[6295,4],[6588,4],[6598,4],[6674,4],[6728,4],[6822,7],[6842,7],[7024,7],[7093,7],[7123,7],[7266,7],[7304,7],[7451,7],[12191,5],[17567,5],[18984,4],[19097,7],[19431,7],[19500,7],[21525,4],[21535,4],[21646,4],[21700,4],[21801,7],[21821,7],[22155,7],[22224,7],[22254,7],[22397,7],[22435,7],[22578,7],[27311,5],[28661,4],[28671,4],[28789,4],[28892,4],[28993,7],[29013,7],[29354,7],[29423,7],[29453,7],[29730,7],[29768,7],[29911,7],[30046,5],[30067,5],[34938,5],[35898,4],[35948,4],[36068,7],[36409,7],[36478,7],[36522,4],[36632,7],[36927,7],[37616,4],[37626,4],[37734,4],[37837,4],[37938,7],[37958,7],[38253,7],[38283,7],[38560,7],[38598,7],[38741,7],[43925,5]]},"771":{"position":[[549,4]]},"786":{"position":[[308,4],[318,4],[503,7],[523,7],[766,7],[836,7],[905,7],[978,7],[1046,7],[1272,4],[1282,4],[1375,7],[1395,7],[1530,7],[1577,4],[6396,5],[11402,5],[16495,5],[21458,5],[26506,5],[27250,4],[27260,4],[27489,7],[27509,7],[28072,7],[28142,7],[28211,7],[28284,7],[28352,7],[28441,4],[28496,7],[28711,7],[28803,4],[33653,5],[38697,5]]},"788":{"position":[[367,4],[472,7],[607,7],[627,7],[767,6],[800,4],[810,4],[1099,7],[1119,7],[1682,7],[1702,7],[1794,7],[1814,7],[1905,7],[1925,7],[2020,7],[2040,7],[2130,7],[2150,7],[7902,5],[13405,5]]},"790":{"position":[[4962,5],[10613,5],[15600,5]]},"792":{"position":[[478,5],[915,4],[1016,7],[1159,7],[1260,4],[1578,7],[2166,7],[2186,7],[2278,7],[2298,7],[2389,7],[2409,7],[2504,7],[2524,7],[2614,7],[2634,7],[2724,7],[7918,5],[13595,5],[14480,4],[20204,5],[20659,4],[20669,4],[21098,4],[21264,7],[21284,7],[22225,7],[22245,7],[22287,7],[22387,7],[22407,7],[22449,7],[22548,7],[22568,7],[22610,7],[22713,7],[22733,7],[22775,7],[22873,7],[22893,7],[22935,7],[23033,7],[23071,7],[23242,7],[23323,7],[23343,7],[23385,7]]},"796":{"position":[[852,4]]},"809":{"position":[[393,4],[403,4],[568,7],[588,7],[806,7],[875,7],[947,7],[1016,7],[1225,4],[1273,7],[1412,7],[1488,4],[1703,4],[6405,5],[11432,5],[16528,5],[21485,5],[26530,5],[27282,4],[27292,4],[27489,7],[27509,7],[27966,7],[28035,7],[28107,7],[28176,7],[28271,4],[33161,5],[38202,5]]},"811":{"position":[[424,4],[434,4],[636,4],[731,7],[751,7],[1208,7],[1228,7],[1321,7],[1341,7],[1437,7],[1457,7],[1550,7],[1570,7],[1624,7],[1761,7],[1808,4],[8169,5],[13880,5]]},"813":{"position":[[326,5],[361,5],[498,4],[508,4],[787,7],[807,7],[1291,7],[1363,7],[1383,7],[1476,7],[1496,7],[1592,7],[1612,7],[1705,7],[1725,7],[7372,5],[13022,5],[13919,4],[14812,4],[14822,4],[15140,4],[15235,7],[15255,7],[16207,7],[16279,7],[16299,7],[16392,7],[16412,7],[16508,7],[16528,7],[16621,7],[16641,7],[16695,7],[16832,7]]},"815":{"position":[[376,4],[512,4],[569,4],[579,4],[904,4],[999,7],[1019,7],[1971,7],[2043,7],[2063,7],[2156,7],[2176,7],[2272,7],[2292,7],[2385,7],[2405,7],[2441,7],[2495,7],[2632,7],[3796,4],[5275,4],[6987,4],[8489,4],[9008,5],[9712,4],[14554,5],[19731,5],[24845,5],[30036,5],[35142,5]]}}}],["type\":\"document:planning#read",{"_index":1933,"t":{"576":{"position":[[5389,34]]}}}],["type\":\"document:planning#writ",{"_index":1935,"t":{"576":{"position":[[10723,34]]}}}],["type1",{"_index":524,"t":{"56":{"position":[[923,9]]}}}],["type1>,<type2",{"_index":589,"t":{"68":{"position":[[225,17]]}}}],["type2",{"_index":525,"t":{"56":{"position":[[933,8]]}}}],["type:object_id",{"_index":1838,"t":{"523":{"position":[[112,14]]},"622":{"position":[[343,15]]}}}],["type:object_id#rel",{"_index":1837,"t":{"523":{"position":[[31,23]]}}}],["type:objectid#rel",{"_index":2641,"t":{"788":{"position":[[8693,23]]}}}],["type=\"docu",{"_index":462,"t":{"16":{"position":[[27830,16]]},"126":{"position":[[1267,16]]},"583":{"position":[[4745,16]]}}}],["type=\"fold",{"_index":1287,"t":{"261":{"position":[[1573,14],[2886,14]]}}}],["type>#<rel",{"_index":519,"t":{"56":{"position":[[496,18]]}}}],["type_(\"fold",{"_index":1286,"t":{"261":{"position":[[1286,16],[2384,16]]}}}],["type_definit",{"_index":189,"t":{"16":{"position":[[1919,19],[6781,19],[7858,19],[11421,19]]},"54":{"position":[[829,19]]},"60":{"position":[[512,19],[1514,19]]},"62":{"position":[[227,19]]},"64":{"position":[[255,19]]},"66":{"position":[[318,19]]},"68":{"position":[[1086,19],[1921,19]]},"80":{"position":[[223,19],[1435,19]]},"204":{"position":[[480,19]]},"221":{"position":[[462,19]]},"238":{"position":[[367,19]]},"261":{"position":[[267,19]]},"279":{"position":[[538,19]]},"306":{"position":[[603,19]]},"314":{"position":[[397,19]]},"316":{"position":[[500,19]]},"328":{"position":[[512,19]]},"336":{"position":[[307,19]]},"345":{"position":[[204,19]]},"347":{"position":[[206,19]]},"355":{"position":[[632,19]]},"367":{"position":[[484,19]]},"379":{"position":[[412,19]]},"419":{"position":[[384,19],[2591,19]]},"421":{"position":[[490,19]]},"423":{"position":[[1645,19]]},"425":{"position":[[854,19]]},"429":{"position":[[1181,19]]},"437":{"position":[[905,19]]},"447":{"position":[[436,19]]},"455":{"position":[[481,19]]},"463":{"position":[[487,19]]},"465":{"position":[[313,19]]},"477":{"position":[[385,19]]},"493":{"position":[[418,19]]},"501":{"position":[[396,19]]},"503":{"position":[[935,19]]},"511":{"position":[[395,19]]},"519":{"position":[[323,19]]},"531":{"position":[[354,19]]},"539":{"position":[[269,19]]},"553":{"position":[[495,19]]},"601":{"position":[[459,19]]},"605":{"position":[[270,19]]},"607":{"position":[[283,19]]},"613":{"position":[[459,19]]},"620":{"position":[[316,19]]},"628":{"position":[[310,19]]},"642":{"position":[[380,19],[995,19]]},"644":{"position":[[432,19]]},"650":{"position":[[243,19]]},"660":{"position":[[1323,19]]},"672":{"position":[[661,19]]},"690":{"position":[[827,19]]},"694":{"position":[[1450,19]]},"696":{"position":[[1217,19]]},"698":{"position":[[1043,19]]},"716":{"position":[[1185,19]]},"718":{"position":[[757,19]]},"720":{"position":[[6006,19]]},"722":{"position":[[4974,19]]},"734":{"position":[[918,19]]},"746":{"position":[[827,19]]},"748":{"position":[[1040,19]]},"765":{"position":[[824,19]]},"769":{"position":[[6798,19],[21777,19],[28969,19],[37914,19]]},"786":{"position":[[479,19],[1351,19],[27465,19]]},"788":{"position":[[448,19],[1075,19]]},"792":{"position":[[992,19],[1554,19],[14219,19],[21240,19]]},"809":{"position":[[544,19],[27465,19]]},"811":{"position":[[707,19]]},"813":{"position":[[763,19],[15211,19]]},"815":{"position":[[975,19]]}}}],["typic",{"_index":1563,"t":{"401":{"position":[[469,9],[642,9]]}}}],["u",{"_index":712,"t":{"94":{"position":[[1232,1]]},"102":{"position":[[280,1]]},"142":{"position":[[1841,1],[4501,3]]},"393":{"position":[[508,1],[581,1],[664,1],[1145,1]]},"395":{"position":[[93,1]]},"403":{"position":[[238,2]]},"405":{"position":[[269,2],[501,1],[580,1],[877,1],[913,1]]}}}],["ui",{"_index":851,"t":{"102":{"position":[[1150,4]]}}}],["unabl",{"_index":820,"t":{"98":{"position":[[4829,7],[5296,7]]}}}],["unauthor",{"_index":827,"t":{"98":{"position":[[5405,13]]}}}],["undefin",{"_index":2594,"t":{"769":{"position":[[1127,9],[2218,9],[3379,9],[4569,9],[5306,9]]},"792":{"position":[[9835,9],[10931,9],[12097,9],[13292,9],[14044,9]]},"813":{"position":[[9256,9],[10354,9],[11522,9],[12719,9],[13477,9]]}}}],["under",{"_index":261,"t":{"16":{"position":[[5646,5]]},"32":{"position":[[59,5]]},"52":{"position":[[308,5]]},"176":{"position":[[199,5]]},"769":{"position":[[30052,5]]}}}],["underli",{"_index":1368,"t":{"296":{"position":[[1346,10]]}}}],["underscor",{"_index":1574,"t":{"401":{"position":[[2551,11],[2595,10]]}}}],["understand",{"_index":501,"t":{"52":{"position":[[935,10]]},"72":{"position":[[126,10]]},"198":{"position":[[245,10]]},"204":{"position":[[12,10]]},"221":{"position":[[12,10]]},"238":{"position":[[12,10]]},"279":{"position":[[12,10]]},"328":{"position":[[10,10]]},"379":{"position":[[12,10]]},"383":{"position":[[24,10]]},"405":{"position":[[3868,10]]},"437":{"position":[[12,10]]},"455":{"position":[[12,10]]},"463":{"position":[[293,10]]},"477":{"position":[[12,10]]},"493":{"position":[[12,10]]},"499":{"position":[[273,10]]},"511":{"position":[[12,10]]},"531":{"position":[[12,10]]},"553":{"position":[[12,10]]},"576":{"position":[[36,10],[128,10]]},"578":{"position":[[104,13]]},"587":{"position":[[387,10]]},"593":{"position":[[10,10]]},"652":{"position":[[172,10]]},"664":{"position":[[95,10]]},"678":{"position":[[12,10],[201,13]]},"680":{"position":[[31,13]]},"706":{"position":[[12,10],[201,13]]},"708":{"position":[[31,13]]},"724":{"position":[[13,13],[66,10]]},"738":{"position":[[93,10]]},"754":{"position":[[12,10],[201,13]]},"756":{"position":[[31,13]]},"775":{"position":[[12,10],[201,13]]},"777":{"position":[[31,13]]},"798":{"position":[[12,10],[201,13]]},"800":{"position":[[31,13]]}}}],["understood",{"_index":2599,"t":{"769":{"position":[[12651,10]]}}}],["undesir",{"_index":2236,"t":{"698":{"position":[[283,12]]}}}],["undo",{"_index":2142,"t":{"670":{"position":[[1006,4]]},"744":{"position":[[925,4]]}}}],["unifi",{"_index":2252,"t":{"710":{"position":[[134,7]]}}}],["union",{"_index":315,"t":{"16":{"position":[[11492,8]]},"54":{"position":[[1160,8],[1392,8],[1655,8],[2482,8],[2714,8],[2977,8]]},"58":{"position":[[301,8],[1292,5]]},"60":{"position":[[847,8],[1585,8]]},"62":{"position":[[4,5],[35,5],[151,8],[298,8]]},"68":{"position":[[243,5],[249,5],[486,5],[610,5],[1177,8],[1281,8],[1987,8]]},"336":{"position":[[398,8]]},"347":{"position":[[323,8],[965,8],[1254,6]]},"349":{"position":[[336,6],[1090,6]]},"355":{"position":[[729,8]]},"367":{"position":[[581,8]]},"403":{"position":[[7703,5]]},"419":{"position":[[580,8],[868,8],[2889,8],[3350,8]]},"423":{"position":[[1943,8],[2447,8]]},"429":{"position":[[1296,8]]},"455":{"position":[[1660,5],[1680,5]]},"459":{"position":[[579,5],[599,5]]},"465":{"position":[[597,8]]},"503":{"position":[[1146,8]]},"539":{"position":[[355,8]]},"553":{"position":[[612,8]]},"601":{"position":[[550,8]]},"605":{"position":[[361,8]]},"628":{"position":[[435,8]]},"644":{"position":[[529,8]]},"660":{"position":[[2018,8]]},"668":{"position":[[1579,8]]},"672":{"position":[[939,8],[1893,8]]},"694":{"position":[[1592,8],[1771,8],[1943,8]]},"696":{"position":[[1379,8],[1558,8],[1730,8]]},"698":{"position":[[1205,8],[1368,8],[1524,8]]},"704":{"position":[[606,5]]},"720":{"position":[[6138,8],[6249,8]]},"722":{"position":[[3448,8],[4292,5],[5106,8],[5217,8],[5834,8]]},"734":{"position":[[1412,8]]},"742":{"position":[[3624,8]]},"746":{"position":[[2226,8]]},"748":{"position":[[2693,8]]},"769":{"position":[[19178,8],[19575,5],[21902,8],[29094,8],[36149,8]]},"771":{"position":[[408,5]]},"773":{"position":[[706,5]]},"786":{"position":[[27552,8],[27659,8],[27764,8],[27877,8],[28539,8]]},"788":{"position":[[1162,8],[1269,8],[1374,8],[1487,8]]},"792":{"position":[[1621,8],[1728,8],[1833,8],[1946,8],[14254,8],[21326,8],[21493,8],[21597,8],[21815,8],[21920,8]]},"796":{"position":[[575,5]]},"809":{"position":[[27581,8],[27688,8],[27793,8],[28355,5]]},"811":{"position":[[823,8],[930,8],[1035,8]]},"813":{"position":[[905,8],[1012,8],[1117,8],[13648,8],[15301,8],[15465,8],[15681,8],[15898,8]]},"815":{"position":[[1065,8],[1229,8],[1445,8],[1662,8]]}}}],["uniqu",{"_index":1349,"t":{"288":{"position":[[10052,6]]},"318":{"position":[[16296,6]]},"338":{"position":[[5414,6]]},"387":{"position":[[10579,6]]},"467":{"position":[[5011,6]]},"477":{"position":[[1611,6]]},"505":{"position":[[27124,6]]},"525":{"position":[[5650,6]]},"624":{"position":[[5761,6]]},"686":{"position":[[570,7]]},"714":{"position":[[1021,7]]},"767":{"position":[[24343,7]]}}}],["unknown",{"_index":1035,"t":{"150":{"position":[[185,7]]}}}],["unless",{"_index":1021,"t":{"148":{"position":[[98,6]]},"431":{"position":[[258,6],[550,6]]}}}],["unlik",{"_index":470,"t":{"16":{"position":[[29092,6]]}}}],["until",{"_index":1150,"t":{"178":{"position":[[417,5],[423,5]]},"273":{"position":[[1852,5]]},"415":{"position":[[1250,5]]},"583":{"position":[[6109,5]]},"605":{"position":[[18636,5]]},"752":{"position":[[252,5]]},"765":{"position":[[204,5]]},"767":{"position":[[24232,5]]},"771":{"position":[[178,5]]}}}],["up",{"_index":424,"t":{"16":{"position":[[16578,2],[22190,2],[27934,2]]},"80":{"position":[[6537,2]]},"92":{"position":[[208,2]]},"142":{"position":[[2743,2],[2919,2],[2967,2],[5374,2]]},"213":{"position":[[4369,2]]},"215":{"position":[[4410,2],[9583,2]]},"221":{"position":[[5699,2],[10894,2],[16118,2],[21149,2]]},"230":{"position":[[4628,2]]},"232":{"position":[[4457,2]]},"245":{"position":[[4670,2]]},"247":{"position":[[4371,2],[9446,2]]},"259":{"position":[[835,2]]},"288":{"position":[[4440,2],[9349,2],[10043,2],[15400,2]]},"312":{"position":[[4553,2],[9579,2]]},"318":{"position":[[4872,2],[10157,2],[15391,2]]},"338":{"position":[[4615,2]]},"343":{"position":[[479,2]]},"345":{"position":[[5519,2]]},"349":{"position":[[966,2]]},"369":{"position":[[5231,2],[10479,2]]},"371":{"position":[[29,3],[5573,2]]},"373":{"position":[[4391,2]]},"385":{"position":[[4479,2]]},"387":{"position":[[4515,2],[9769,2]]},"401":{"position":[[236,2]]},"445":{"position":[[4565,2],[9612,2]]},"449":{"position":[[4529,2],[9744,2]]},"467":{"position":[[4398,2]]},"469":{"position":[[4719,2]]},"471":{"position":[[4588,2]]},"485":{"position":[[4791,2]]},"487":{"position":[[4704,2]]},"505":{"position":[[5251,2],[10423,2],[15838,2],[20952,2],[25992,2]]},"521":{"position":[[4415,2]]},"523":{"position":[[5055,2]]},"525":{"position":[[4656,2]]},"537":{"position":[[4771,2]]},"541":{"position":[[4762,2]]},"543":{"position":[[4508,2]]},"545":{"position":[[4345,2],[9291,2]]},"547":{"position":[[4360,2],[9284,2]]},"562":{"position":[[4544,2]]},"569":{"position":[[4992,2],[10467,2],[15923,2]]},"571":{"position":[[4723,2]]},"576":{"position":[[4696,2],[10030,2]]},"583":{"position":[[4979,2]]},"585":{"position":[[102,2]]},"605":{"position":[[5676,2],[11269,2],[17523,2],[23766,2],[29427,2]]},"607":{"position":[[5525,2],[11206,2],[16959,2],[22701,2]]},"622":{"position":[[5107,2]]},"624":{"position":[[4534,2]]},"630":{"position":[[5300,2]]},"632":{"position":[[4431,2]]},"634":{"position":[[4653,2],[9805,2],[14867,2]]},"638":{"position":[[300,2]]},"644":{"position":[[5189,2],[10222,2]]},"646":{"position":[[4662,2],[9702,2]]},"648":{"position":[[4778,2],[10470,2],[15923,2],[21143,2],[26217,2]]},"668":{"position":[[9350,2]]},"670":{"position":[[5795,2]]},"692":{"position":[[4810,2],[9782,2],[15488,2],[21060,2],[26170,2]]},"694":{"position":[[8247,2],[13683,2]]},"696":{"position":[[7556,2],[14175,2],[19926,2]]},"698":{"position":[[8072,2],[13655,2]]},"712":{"position":[[724,2]]},"718":{"position":[[6602,2],[11685,2],[17028,2],[22068,2],[27252,2],[34131,2],[39638,2]]},"720":{"position":[[4447,2],[11143,2]]},"722":{"position":[[12214,2],[18279,2],[24265,2],[29951,2],[35303,2],[40400,2],[45551,2],[50703,2]]},"734":{"position":[[9196,2]]},"740":{"position":[[4727,2],[9854,2],[15222,2],[20198,2]]},"742":{"position":[[8826,2],[15930,2],[22418,2],[27736,2]]},"744":{"position":[[612,2],[6412,2],[13033,2],[19493,2]]},"746":{"position":[[15524,2]]},"767":{"position":[[8212,2],[16112,2],[23013,2],[29303,2],[34486,2],[39534,2],[44596,2]]},"769":{"position":[[4608,2],[11927,2],[17303,2],[27047,2],[34674,2],[43661,2]]},"786":{"position":[[101,2],[6132,2],[11138,2],[16231,2],[21194,2],[26242,2],[33389,2],[38433,2]]},"788":{"position":[[180,2],[7638,2],[13141,2]]},"790":{"position":[[4698,2],[10349,2],[15336,2]]},"792":{"position":[[378,2],[7654,2],[13331,2],[19940,2]]},"809":{"position":[[6141,2],[11168,2],[16264,2],[21221,2],[26266,2],[32897,2],[37938,2]]},"811":{"position":[[158,2],[7905,2],[13616,2]]},"813":{"position":[[231,2],[7108,2],[12758,2]]},"815":{"position":[[8744,2],[14290,2],[19467,2],[24581,2],[29772,2],[34878,2]]}}}],["upcom",{"_index":2244,"t":{"700":{"position":[[76,8]]},"724":{"position":[[343,8]]},"771":{"position":[[654,8]]}}}],["updat",{"_index":86,"t":{"8":{"position":[[328,8]]},"74":{"position":[[471,6]]},"90":{"position":[[237,7],[601,7]]},"96":{"position":[[1106,6]]},"98":{"position":[[1592,6]]},"102":{"position":[[771,6]]},"108":{"position":[[246,7],[569,7],[892,7],[1215,7],[1510,7]]},"120":{"position":[[246,7],[569,7],[892,7],[1215,7],[1510,7]]},"144":{"position":[[612,6],[2046,6]]},"184":{"position":[[36,6]]},"196":{"position":[[305,6]]},"219":{"position":[[36,6]]},"249":{"position":[[231,6],[277,6]]},"251":{"position":[[292,7]]},"263":{"position":[[443,7]]},"277":{"position":[[36,6],[109,8]]},"292":{"position":[[48,6],[63,6],[116,6]]},"314":{"position":[[102,6]]},"365":{"position":[[1120,6]]},"405":{"position":[[3918,6]]},"415":{"position":[[774,6]]},"461":{"position":[[233,6],[323,6]]},"463":{"position":[[71,6]]},"465":{"position":[[65,6]]},"607":{"position":[[677,7]]},"622":{"position":[[28,8]]},"638":{"position":[[64,7]]},"648":{"position":[[5757,6]]},"650":{"position":[[51,6]]},"668":{"position":[[340,8],[517,6],[2351,7],[2525,7]]},"678":{"position":[[471,6]]},"696":{"position":[[2652,8]]},"698":{"position":[[127,8]]},"702":{"position":[[329,6]]},"706":{"position":[[471,6]]},"720":{"position":[[5525,6],[5600,7]]},"722":{"position":[[4253,7],[6591,8],[19903,6],[21069,6],[22616,6],[23915,6],[24822,6]]},"726":{"position":[[161,6]]},"742":{"position":[[2505,6],[4134,7],[4272,7]]},"767":{"position":[[24199,8]]},"769":{"position":[[156,8],[6530,7],[21138,6],[21447,7],[27976,7],[29979,7]]},"775":{"position":[[320,6]]},"786":{"position":[[27200,6],[29003,6]]},"792":{"position":[[20588,7]]},"798":{"position":[[320,6]]},"809":{"position":[[27232,6],[28515,6]]},"811":{"position":[[330,6]]},"813":{"position":[[14741,7]]},"815":{"position":[[463,6]]}}}],["upgrad",{"_index":1643,"t":{"411":{"position":[[188,7]]}}}],["uppercas",{"_index":912,"t":{"140":{"position":[[816,9]]}}}],["uri",{"_index":903,"t":{"140":{"position":[[398,4]]},"142":{"position":[[398,3],[1198,3],[1443,3],[3882,3],[4107,3]]}}}],["us",{"_index":132,"t":{"14":{"position":[[215,4]]},"16":{"position":[[432,5],[1533,4],[3171,3],[3182,4],[3416,4],[5057,5],[6359,3],[10033,3],[14307,5],[14330,5],[14363,5],[16667,5],[17466,5],[17583,5],[19919,5],[19942,5],[19975,5],[22279,5],[23219,5],[23349,5],[25697,5],[25720,5],[25753,5],[28023,5],[29645,4],[30115,3],[30190,3]]},"22":{"position":[[81,4]]},"24":{"position":[[30,4]]},"40":{"position":[[210,3]]},"48":{"position":[[130,4]]},"50":{"position":[[83,5]]},"52":{"position":[[40,4]]},"56":{"position":[[31,4],[1582,5]]},"58":{"position":[[1282,5]]},"60":{"position":[[2592,3],[2848,4]]},"62":{"position":[[64,4]]},"64":{"position":[[79,4]]},"66":{"position":[[78,4]]},"70":{"position":[[48,3]]},"72":{"position":[[92,3],[112,6]]},"80":{"position":[[3607,5],[3630,5],[3663,5],[6626,5],[7408,3]]},"86":{"position":[[1091,5],[1114,5],[1147,5]]},"92":{"position":[[57,5]]},"94":{"position":[[96,3],[352,5],[410,5],[965,3]]},"96":{"position":[[732,3]]},"102":{"position":[[131,5],[167,5],[344,3],[807,5],[882,6],[1273,3]]},"104":{"position":[[146,3],[279,5],[363,5]]},"112":{"position":[[1299,5],[1322,5],[1355,5],[2807,5]]},"124":{"position":[[1299,5],[1322,5],[1355,5],[2807,5]]},"132":{"position":[[80,4]]},"136":{"position":[[59,5]]},"138":{"position":[[360,4],[396,4],[436,4]]},"140":{"position":[[328,5]]},"142":{"position":[[1000,3],[1046,5],[2590,5],[3687,3],[3733,5],[5221,5]]},"144":{"position":[[181,5],[427,3],[1861,3]]},"146":{"position":[[303,5]]},"148":{"position":[[36,4]]},"152":{"position":[[253,5]]},"154":{"position":[[291,5]]},"162":{"position":[[48,3]]},"164":{"position":[[56,3]]},"168":{"position":[[56,5],[213,4]]},"170":{"position":[[64,4],[1001,5],[1024,5],[1057,5]]},"172":{"position":[[15,3],[269,3],[1835,5],[1858,5],[1891,5]]},"174":{"position":[[67,5],[198,5]]},"176":{"position":[[8,3],[265,4]]},"180":{"position":[[23,3],[46,5]]},"190":{"position":[[1299,5],[1322,5],[1355,5],[2807,5]]},"198":{"position":[[163,3],[183,6]]},"200":{"position":[[676,3]]},"202":{"position":[[98,3]]},"213":{"position":[[2185,5],[2208,5],[2241,5],[4458,5]]},"215":{"position":[[2145,5],[2168,5],[2201,5],[4499,5],[7314,5],[7337,5],[7370,5],[9672,5]]},"219":{"position":[[119,3],[492,5]]},"221":{"position":[[3442,5],[3465,5],[3498,5],[5788,5],[8637,5],[8660,5],[8693,5],[10983,5],[13853,5],[13876,5],[13909,5],[16207,5],[18880,5],[18903,5],[18936,5],[21238,5]]},"230":{"position":[[2446,5],[2469,5],[2502,5],[4717,5]]},"232":{"position":[[2190,5],[2213,5],[2246,5],[4546,5]]},"236":{"position":[[88,3],[226,4]]},"245":{"position":[[2425,5],[2448,5],[2481,5],[4759,5]]},"247":{"position":[[2197,5],[2220,5],[2253,5],[4460,5],[7199,5],[7222,5],[7255,5],[9535,5]]},"257":{"position":[[1275,5],[1298,5],[1331,5],[2783,5]]},"259":{"position":[[1170,3],[2644,3]]},"269":{"position":[[66,3],[208,5]]},"273":{"position":[[443,3],[786,3],[1635,5],[1687,6],[2174,3],[2749,3],[3199,7],[3466,3]]},"275":{"position":[[9,3]]},"277":{"position":[[105,3],[150,6]]},"288":{"position":[[2274,5],[2297,5],[2330,5],[4529,5],[7181,5],[7204,5],[7237,5],[9438,5],[12819,5],[12842,5],[12875,5],[15489,5]]},"290":{"position":[[63,6]]},"294":{"position":[[100,3],[135,7]]},"296":{"position":[[1394,4],[1446,3],[1473,3]]},"298":{"position":[[35,3],[107,3],[142,6],[252,3]]},"304":{"position":[[78,5],[202,3],[219,6],[511,6]]},"306":{"position":[[2336,4]]},"310":{"position":[[629,4]]},"312":{"position":[[2286,5],[2309,5],[2342,5],[4642,5],[7314,5],[7337,5],[7370,5],[9668,5]]},"316":{"position":[[207,3]]},"318":{"position":[[2571,5],[2594,5],[2627,5],[4961,5],[7890,5],[7913,5],[7946,5],[10246,5],[13124,5],[13147,5],[13180,5],[15480,5],[16292,3],[16371,5]]},"322":{"position":[[84,3],[119,7],[210,4]]},"326":{"position":[[180,3]]},"338":{"position":[[2334,5],[2357,5],[2390,5],[4704,5],[5410,3],[5488,5]]},"340":{"position":[[77,5]]},"343":{"position":[[67,4],[172,4],[300,5]]},"345":{"position":[[3258,5],[3281,5],[3314,5],[5608,5]]},"349":{"position":[[0,5]]},"353":{"position":[[68,5],[241,3],[424,6]]},"365":{"position":[[284,5],[845,5],[1170,3],[1224,3]]},"369":{"position":[[2702,5],[2725,5],[2758,5],[5320,5],[8208,5],[8231,5],[8264,5],[10568,5]]},"371":{"position":[[2824,5],[2847,5],[2880,5],[5662,5]]},"373":{"position":[[2120,5],[2143,5],[2176,5],[4480,5]]},"377":{"position":[[118,3],[236,4]]},"385":{"position":[[2271,5],[2294,5],[2327,5],[4568,5]]},"387":{"position":[[2234,5],[2257,5],[2290,5],[4604,5],[7486,5],[7509,5],[7542,5],[9858,5],[10575,3],[10653,5]]},"391":{"position":[[277,5]]},"395":{"position":[[140,3],[285,5]]},"397":{"position":[[413,3],[693,5],[722,5]]},"399":{"position":[[198,5],[4062,5],[4250,4]]},"401":{"position":[[2589,5],[2764,5],[3372,4]]},"403":{"position":[[8,3],[676,4],[840,3],[1529,4],[2424,3],[3047,3],[3097,3],[3240,3],[3341,4],[4182,4],[5427,4],[5606,3],[7314,5],[7449,3],[8471,5],[8925,5],[9272,5]]},"405":{"position":[[1035,3],[3846,3]]},"411":{"position":[[72,3],[107,7]]},"417":{"position":[[191,3]]},"419":{"position":[[6,3]]},"421":{"position":[[565,3]]},"425":{"position":[[5,5],[1761,3],[1833,3],[1958,5],[2028,3],[3004,5]]},"431":{"position":[[310,4],[605,4]]},"435":{"position":[[144,5],[427,3],[439,6]]},"437":{"position":[[3331,4]]},"443":{"position":[[635,4]]},"445":{"position":[[2292,5],[2315,5],[2348,5],[4654,5],[7341,5],[7364,5],[7397,5],[9701,5]]},"449":{"position":[[2254,5],[2277,5],[2310,5],[4618,5],[7469,5],[7492,5],[7525,5],[9833,5]]},"453":{"position":[[270,3],[360,4],[487,4],[561,5],[618,5]]},"455":{"position":[[1702,4]]},"459":{"position":[[621,4]]},"467":{"position":[[2218,5],[2241,5],[2274,5],[4487,5],[5007,3],[5132,5]]},"469":{"position":[[2380,5],[2403,5],[2436,5],[4808,5]]},"471":{"position":[[2307,5],[2330,5],[2363,5],[4677,5]]},"475":{"position":[[98,5],[138,3]]},"477":{"position":[[1519,4],[1607,3],[1732,5]]},"481":{"position":[[669,4]]},"485":{"position":[[50,5],[125,4],[2508,5],[2531,5],[2564,5],[4880,5],[5549,3],[5657,3],[5889,3],[6005,3]]},"487":{"position":[[2431,5],[2454,5],[2487,5],[4793,5]]},"491":{"position":[[85,5],[545,3]]},"493":{"position":[[1713,4],[1822,4]]},"497":{"position":[[773,4],[882,4]]},"499":{"position":[[65,3]]},"505":{"position":[[2782,5],[2805,5],[2838,5],[5340,5],[8156,5],[8179,5],[8212,5],[10512,5],[13571,5],[13594,5],[13627,5],[15927,5],[18681,5],[18704,5],[18737,5],[21041,5],[23723,5],[23746,5],[23779,5],[26081,5],[27120,3],[27245,5]]},"509":{"position":[[93,5],[116,3]]},"517":{"position":[[50,3]]},"519":{"position":[[69,3]]},"521":{"position":[[2231,5],[2254,5],[2287,5],[4504,5]]},"523":{"position":[[23,3],[187,4],[2718,5],[2741,5],[2774,5],[5144,5]]},"525":{"position":[[2371,5],[2394,5],[2427,5],[4745,5],[5646,3],[5724,5]]},"527":{"position":[[64,5],[196,4],[256,3],[338,3]]},"529":{"position":[[131,3]]},"537":{"position":[[2468,5],[2491,5],[2524,5],[4860,5]]},"541":{"position":[[2467,5],[2490,5],[2523,5],[4851,5]]},"543":{"position":[[2326,5],[2349,5],[2382,5],[4597,5]]},"545":{"position":[[2102,5],[2125,5],[2158,5],[4434,5],[7048,5],[7071,5],[7104,5],[9380,5]]},"547":{"position":[[2194,5],[2217,5],[2250,5],[4449,5],[7039,5],[7062,5],[7095,5],[9373,5]]},"551":{"position":[[33,4]]},"562":{"position":[[2281,5],[2304,5],[2337,5],[4633,5]]},"569":{"position":[[2671,5],[2694,5],[2727,5],[5081,5],[8186,5],[8209,5],[8242,5],[10556,5],[13622,5],[13645,5],[13678,5],[16012,5]]},"571":{"position":[[2638,5],[2661,5],[2694,5],[4812,5]]},"576":{"position":[[10,4],[2405,5],[2428,5],[2461,5],[4785,5],[7739,5],[7762,5],[7795,5],[10119,5]]},"578":{"position":[[81,4],[326,4]]},"581":{"position":[[221,3],[329,5]]},"583":{"position":[[0,3],[2483,5],[2506,5],[2539,5],[5068,5],[6208,4]]},"585":{"position":[[821,3]]},"587":{"position":[[302,3]]},"591":{"position":[[124,3],[200,6],[335,6]]},"593":{"position":[[987,4],[1041,4]]},"597":{"position":[[618,4],[672,4]]},"605":{"position":[[3411,5],[3434,5],[3467,5],[5765,5],[9004,5],[9027,5],[9060,5],[11358,5],[15252,5],[15275,5],[15308,5],[17612,5],[21501,5],[21524,5],[21557,5],[23855,5],[27160,5],[27183,5],[27216,5],[29516,5]]},"607":{"position":[[3258,5],[3281,5],[3314,5],[5614,5],[8933,5],[8956,5],[8989,5],[11295,5],[14690,5],[14713,5],[14746,5],[17048,5],[20432,5],[20455,5],[20488,5],[22790,5]]},"609":{"position":[[74,5],[178,3],[361,4],[376,3]]},"611":{"position":[[169,3]]},"622":{"position":[[2692,5],[2715,5],[2748,5],[5196,5]]},"624":{"position":[[2247,5],[2270,5],[2303,5],[4623,5],[5757,3],[5836,5]]},"626":{"position":[[24,4],[47,3],[90,3]]},"630":{"position":[[2671,5],[2694,5],[2727,5],[5389,5]]},"632":{"position":[[2160,5],[2183,5],[2216,5],[4520,5]]},"634":{"position":[[2328,5],[2351,5],[2384,5],[4742,5],[7532,5],[7555,5],[7588,5],[9894,5],[12588,5],[12611,5],[12644,5],[14956,5]]},"636":{"position":[[83,5]]},"640":{"position":[[708,4]]},"644":{"position":[[2920,5],[2943,5],[2976,5],[5278,5],[7955,5],[7978,5],[8011,5],[10311,5]]},"646":{"position":[[2377,5],[2400,5],[2433,5],[4751,5],[7427,5],[7450,5],[7483,5],[9791,5]]},"648":{"position":[[97,3],[2369,5],[2392,5],[2425,5],[4867,5],[8117,5],[8140,5],[8173,5],[10559,5],[13568,5],[13591,5],[13624,5],[16012,5],[18874,5],[18897,5],[18930,5],[21232,5],[23952,5],[23975,5],[24008,5],[26306,5]]},"654":{"position":[[236,3],[268,4]]},"664":{"position":[[411,3]]},"666":{"position":[[177,5]]},"668":{"position":[[118,3],[7031,5],[7054,5],[7087,5],[9439,5]]},"670":{"position":[[197,3],[414,3],[827,5],[3420,5],[3443,5],[3476,5],[5884,5],[12149,5]]},"672":{"position":[[9556,5]]},"674":{"position":[[64,5]]},"676":{"position":[[66,5],[134,5]]},"678":{"position":[[581,4],[880,4],[1160,4]]},"682":{"position":[[113,5],[137,3]]},"686":{"position":[[0,3],[566,3],[611,4]]},"692":{"position":[[2614,5],[2637,5],[2670,5],[4899,5],[7578,5],[7601,5],[7634,5],[9871,5],[12964,5],[12987,5],[13020,5],[15577,5],[16464,5],[18791,5],[18814,5],[18847,5],[21149,5],[23905,5],[23928,5],[23961,5],[26259,5]]},"694":{"position":[[516,5],[5600,5],[5623,5],[5656,5],[8336,5],[11408,5],[11431,5],[11464,5],[13772,5]]},"696":{"position":[[5167,5],[5190,5],[5223,5],[7645,5],[11362,5],[11385,5],[11418,5],[14264,5],[17663,5],[17686,5],[17719,5],[20015,5]]},"698":{"position":[[5542,5],[5565,5],[5598,5],[8161,5],[11382,5],[11405,5],[11438,5],[13744,5]]},"704":{"position":[[88,5],[193,4],[440,4],[598,3]]},"710":{"position":[[326,5]]},"712":{"position":[[167,3]]},"714":{"position":[[0,3],[1017,3],[1062,4]]},"718":{"position":[[474,3],[4289,5],[4312,5],[4345,5],[6691,5],[9404,5],[9427,5],[9460,5],[11774,5],[14715,5],[14738,5],[14771,5],[17117,5],[19787,5],[19810,5],[19843,5],[22157,5],[24957,5],[24980,5],[25013,5],[27341,5],[31286,5],[31309,5],[31342,5],[34220,5],[37357,5],[37380,5],[37413,5],[39727,5]]},"720":{"position":[[2176,5],[2199,5],[2232,5],[4536,5],[8874,5],[8897,5],[8930,5],[11232,5]]},"722":{"position":[[9536,5],[9559,5],[9592,5],[12303,5],[15828,5],[15851,5],[15884,5],[18368,5],[21709,5],[21732,5],[21765,5],[24354,5],[27564,5],[27587,5],[27620,5],[30040,5],[33047,5],[33070,5],[33103,5],[35392,5],[38178,5],[38201,5],[38234,5],[40489,5],[43286,5],[43309,5],[43342,5],[45640,5],[48408,5],[48431,5],[48464,5],[50792,5]]},"724":{"position":[[144,5]]},"728":{"position":[[67,3],[268,3],[300,4]]},"734":{"position":[[5913,5],[5936,5],[5969,5],[9285,5]]},"738":{"position":[[388,3]]},"740":{"position":[[288,5],[2466,5],[2489,5],[2522,5],[4816,5],[7585,5],[7608,5],[7641,5],[9943,5],[12907,5],[12930,5],[12963,5],[15311,5],[17935,5],[17958,5],[17991,5],[20287,5]]},"742":{"position":[[6573,5],[6596,5],[6629,5],[8915,5],[12847,5],[12870,5],[12903,5],[16019,5],[19841,5],[19864,5],[19897,5],[22507,5],[25475,5],[25498,5],[25531,5],[27825,5]]},"744":{"position":[[3725,5],[3748,5],[3781,5],[6501,5],[10341,5],[10364,5],[10397,5],[13122,5],[16799,5],[16822,5],[16855,5],[19582,5]]},"746":{"position":[[9601,5],[9624,5],[9657,5],[15613,5],[19060,5]]},"750":{"position":[[64,5]]},"752":{"position":[[76,5],[139,3]]},"754":{"position":[[443,4],[837,4]]},"758":{"position":[[178,5],[202,3]]},"762":{"position":[[0,3]]},"767":{"position":[[4259,5],[4282,5],[4315,5],[8301,5],[13127,5],[13150,5],[13183,5],[16201,5],[20168,5],[20191,5],[20224,5],[23102,5],[24339,3],[24384,4],[24730,5],[27036,5],[27059,5],[27092,5],[29392,5],[32217,5],[32240,5],[32273,5],[34575,5],[37259,5],[37282,5],[37315,5],[39623,5],[42319,5],[42342,5],[42375,5],[44685,5]]},"769":{"position":[[2339,5],[2362,5],[2395,5],[4697,5],[6268,3],[9666,5],[9689,5],[9722,5],[12016,5],[15024,5],[15047,5],[15080,5],[17392,5],[24770,5],[24793,5],[24826,5],[27136,5],[32415,5],[32438,5],[32471,5],[34763,5],[41402,5],[41425,5],[41458,5],[43750,5]]},"771":{"position":[[400,3],[523,5]]},"773":{"position":[[75,5],[329,4],[604,4],[696,5],[845,4],[1130,4]]},"775":{"position":[[612,4]]},"779":{"position":[[157,5]]},"786":{"position":[[187,3],[3934,5],[3957,5],[3990,5],[6221,5],[8867,5],[8890,5],[8923,5],[11227,5],[14033,5],[14056,5],[14089,5],[16320,5],[18923,5],[18946,5],[18979,5],[21283,5],[23969,5],[23992,5],[24025,5],[26331,5],[31118,5],[31141,5],[31174,5],[33478,5],[36162,5],[36185,5],[36218,5],[38522,5]]},"788":{"position":[[4967,5],[4990,5],[5023,5],[7727,5],[10866,5],[10889,5],[10922,5],[13230,5]]},"790":{"position":[[2452,5],[2475,5],[2508,5],[4787,5],[5662,3],[8040,5],[8063,5],[8096,5],[10438,5],[13065,5],[13088,5],[13121,5],[15425,5]]},"792":{"position":[[5271,5],[5294,5],[5327,5],[7743,5],[11052,5],[11075,5],[11108,5],[13420,5],[17698,5],[17721,5],[17754,5],[20029,5]]},"794":{"position":[[241,5]]},"796":{"position":[[203,4],[494,4],[565,5],[714,4],[842,5],[1016,4],[1212,4]]},"798":{"position":[[612,4]]},"802":{"position":[[195,5]]},"809":{"position":[[274,3],[3937,5],[3960,5],[3993,5],[6230,5],[8891,5],[8914,5],[8947,5],[11257,5],[14068,5],[14091,5],[14124,5],[16353,5],[18952,5],[18975,5],[19008,5],[21310,5],[23993,5],[24016,5],[24049,5],[26355,5],[30628,5],[30651,5],[30684,5],[32986,5],[35667,5],[35690,5],[35723,5],[38027,5]]},"811":{"position":[[5018,5],[5041,5],[5074,5],[7994,5],[11339,5],[11362,5],[11395,5],[13705,5]]},"813":{"position":[[4497,5],[4520,5],[4553,5],[7197,5],[10475,5],[10498,5],[10531,5],[12847,5]]},"815":{"position":[[5771,5],[5794,5],[5827,5],[8833,5],[12005,5],[12028,5],[12061,5],[14379,5],[17178,5],[17201,5],[17234,5],[19556,5],[22288,5],[22311,5],[22344,5],[24670,5],[27483,5],[27506,5],[27539,5],[29861,5],[32589,5],[32612,5],[32645,5],[34967,5]]}}}],["usag",{"_index":1782,"t":{"485":{"position":[[5449,5],[5872,5]]}}}],["user",{"_index":52,"t":{"6":{"position":[[119,4],[354,4]]},"8":{"position":[[61,5],[206,5],[459,5],[572,6]]},"10":{"position":[[58,5],[104,4],[290,4],[318,4]]},"12":{"position":[[54,5],[135,4]]},"14":{"position":[[95,5],[239,5],[347,4]]},"16":{"position":[[118,5],[726,4],[887,6],[912,6],[934,6],[955,6],[1191,6],[1263,6],[1332,6],[1400,6],[1875,6],[1887,4],[2214,6],[2330,6],[2443,6],[2555,6],[2722,6],[2752,6],[2884,4],[4089,5],[4369,5],[4502,6],[4511,4],[4579,4],[4886,5],[4984,5],[5085,5],[5420,4],[5462,4],[5524,4],[5760,4],[5822,4],[5866,4],[5887,4],[6197,5],[6694,6],[6719,6],[6741,6],[6762,6],[6774,4],[7032,6],[7104,6],[7173,6],[7241,6],[7271,6],[7393,5],[7543,4],[7574,4],[7655,5],[7757,4],[7767,4],[7849,6],[8029,6],[8076,4],[8214,8],[8329,4],[8495,8],[8799,5],[8880,5],[9237,4],[9346,7],[9559,4],[9705,4],[9855,4],[10135,4],[10158,4],[10520,4],[10563,7],[10673,4],[10716,7],[10846,7],[10956,4],[11015,7],[11380,6],[11412,6],[11697,6],[11766,6],[11861,7],[13008,5],[14001,5],[15199,4],[17053,4],[17089,4],[17401,4],[17810,4],[18620,5],[19613,5],[20811,4],[22665,4],[22701,4],[23162,4],[23462,4],[23601,4],[24367,5],[25362,5],[26579,4],[28481,4],[29065,5],[29655,4],[29702,6],[29741,4],[29945,4],[30015,7],[30023,9],[30239,4]]},"20":{"position":[[75,4]]},"26":{"position":[[72,5]]},"28":{"position":[[2,4]]},"30":{"position":[[191,4]]},"34":{"position":[[19,4],[100,5]]},"36":{"position":[[48,5]]},"38":{"position":[[58,4]]},"40":{"position":[[32,4],[312,4],[335,4]]},"42":{"position":[[81,4]]},"44":{"position":[[122,4]]},"48":{"position":[[140,4],[187,6],[226,4]]},"54":{"position":[[171,4],[213,6],[861,6],[1018,6],[1990,6],[2181,6],[2294,6],[3312,6],[3503,6],[3616,6],[3745,5]]},"56":{"position":[[252,5],[437,6],[460,6],[551,5],[1283,6],[1303,8],[1423,5],[1554,7],[1590,4],[1691,4],[1700,4],[1730,8],[2013,7],[2161,7],[2169,9],[2299,7],[2423,7]]},"58":{"position":[[161,6],[183,6],[543,6],[612,6],[697,5],[1080,4],[1542,7],[1717,7],[2015,7]]},"60":{"position":[[200,4],[316,4],[449,6],[544,6],[701,6],[1199,6],[1327,5],[1379,5],[1476,6],[1859,6],[2160,7],[2298,7],[2494,7],[2690,4],[2795,4]]},"62":{"position":[[115,4],[145,5],[208,6],[477,6],[717,7],[844,7],[978,4],[1048,5],[1107,4],[1172,5],[1231,4],[1377,8]]},"64":{"position":[[130,4],[157,5],[554,6],[757,7],[899,7],[1042,4],[1112,5],[1180,5],[1356,8],[1617,8],[1780,8]]},"66":{"position":[[129,4],[293,6],[581,6],[769,7],[958,7],[1141,4],[1204,5],[1275,5],[1391,8],[1681,8],[1803,8]]},"68":{"position":[[925,6],[947,6],[978,6],[1568,6],[1637,6],[1706,6],[1855,6],[2275,6],[2318,5],[2391,5],[2457,5],[2512,5]]},"70":{"position":[[308,4]]},"80":{"position":[[102,4],[146,6],[168,6],[189,6],[255,6],[465,6],[534,6],[602,6],[1467,6],[1677,6],[1746,6],[1814,6]]},"82":{"position":[[284,6]]},"92":{"position":[[132,5],[172,4],[410,4]]},"96":{"position":[[799,4],[2389,4]]},"98":{"position":[[770,4],[1398,5],[1643,4],[2695,4],[3668,4],[3889,4],[3908,4],[4429,4],[4969,5]]},"106":{"position":[[83,4]]},"110":{"position":[[38,4]]},"114":{"position":[[17,4],[234,5],[447,5],[733,4]]},"118":{"position":[[114,4]]},"122":{"position":[[63,4]]},"126":{"position":[[29,4],[204,5],[429,5],[744,4]]},"142":{"position":[[3250,4]]},"176":{"position":[[27,4]]},"188":{"position":[[28,4],[96,5]]},"192":{"position":[[139,5],[352,5],[768,4]]},"194":{"position":[[91,4],[153,5],[296,5],[510,5],[927,4]]},"196":{"position":[[87,4],[125,4],[223,5]]},"200":{"position":[[7,4],[289,5]]},"202":{"position":[[53,5],[239,5],[524,5],[583,5]]},"204":{"position":[[343,4],[388,6],[512,6],[674,6],[952,4],[993,5],[1141,5],[1396,4],[1462,6],[1608,5]]},"206":{"position":[[28,5]]},"208":{"position":[[63,5],[318,4],[384,6],[530,5]]},"211":{"position":[[251,7]]},"213":{"position":[[765,5],[1751,5],[3072,4]]},"215":{"position":[[852,5],[1842,5],[3037,4],[4882,4],[4918,4],[5148,4],[6017,5],[7009,5],[8206,4],[10057,4],[10094,4]]},"217":{"position":[[70,4],[107,5]]},"219":{"position":[[300,4],[692,4],[754,4]]},"221":{"position":[[337,4],[376,6],[494,6],[648,6],[1143,7],[2157,5],[3143,5],[4334,4],[6167,4],[6198,4],[7182,5],[8205,5],[9563,4],[11737,4],[12560,5],[13550,5],[14745,4],[16590,4],[16626,4],[17583,5],[18575,5],[19772,4],[21623,4],[21660,4],[21870,4],[21911,5],[22153,5],[22408,4],[22474,6],[22620,5]]},"223":{"position":[[28,5]]},"227":{"position":[[63,5],[318,4],[384,6],[530,5]]},"230":{"position":[[1029,5],[2014,5],[3334,4]]},"232":{"position":[[895,5],[1886,5],[3082,4],[4930,4],[4966,4]]},"234":{"position":[[70,4],[107,5]]},"236":{"position":[[44,4],[304,5],[412,5]]},"238":{"position":[[292,4],[333,6],[399,6],[555,6],[740,4],[860,5],[1115,4],[1181,6],[1327,5]]},"240":{"position":[[97,4]]},"242":{"position":[[63,5],[318,4],[384,6],[530,5]]},"245":{"position":[[34,4],[156,7],[1152,5],[2132,5],[3317,4],[5132,4],[5168,4]]},"247":{"position":[[788,5],[1769,5],[3085,4],[5924,5],[6905,5],[8091,4],[9909,4],[9945,4]]},"249":{"position":[[55,4],[116,4]]},"259":{"position":[[3042,8]]},"261":{"position":[[83,4],[124,6],[299,6],[455,6],[663,6],[868,6]]},"263":{"position":[[332,4]]},"267":{"position":[[171,4],[235,5]]},"271":{"position":[[63,4],[213,4],[337,5]]},"273":{"position":[[195,4],[257,4],[588,4],[669,4],[808,4],[1034,4],[1125,4],[1219,4],[2015,4],[2099,4],[2539,4],[2833,4],[3000,4],[3084,4],[3264,4],[3329,4],[3511,5],[3559,4]]},"275":{"position":[[73,4],[112,4],[231,4],[384,4],[428,4],[515,4],[652,4]]},"279":{"position":[[290,4],[445,4],[477,6],[504,6],[706,6],[726,7],[762,7],[816,7],[986,6],[1060,6],[1245,4],[1460,5],[1715,4],[1781,6],[1927,5]]},"281":{"position":[[97,4]]},"285":{"position":[[63,5],[318,4],[384,6],[530,5]]},"288":{"position":[[872,5],[878,9],[1849,5],[3161,4],[3168,9],[5778,5],[5784,9],[6756,5],[8069,4],[8076,9],[10991,5],[11140,5],[11146,9],[12154,5],[12394,5],[13743,4],[13922,4],[13929,9]]},"290":{"position":[[262,7],[365,7],[469,4],[495,5],[538,5]]},"296":{"position":[[199,6],[224,4],[251,4],[386,5],[641,5],[675,6],[988,6],[1262,4]]},"304":{"position":[[49,5],[115,5],[324,6],[387,5],[807,5]]},"306":{"position":[[226,5],[279,5],[471,4],[569,6],[635,6],[794,6],[1001,6],[1203,7],[1333,7],[1448,7],[1581,4],[1622,5],[1770,5],[2025,4],[2091,6],[2237,5]]},"308":{"position":[[28,5]]},"310":{"position":[[63,5],[318,4],[384,6],[530,5]]},"312":{"position":[[991,5],[1982,5],[3178,4],[5026,4],[5063,4],[6021,5],[7011,5],[8206,4],[10051,4],[10087,4],[10378,5],[10630,5],[10711,5]]},"314":{"position":[[9,5],[242,4],[287,6],[363,6],[429,6],[616,6],[685,6],[892,6],[976,4]]},"316":{"position":[[21,5],[120,4],[271,6],[329,4],[374,6],[466,6],[532,6],[811,6],[880,6],[1087,6]]},"318":{"position":[[1087,5],[2132,5],[3512,4],[5831,5],[6595,5],[7586,5],[8782,4],[10630,4],[10666,4],[11065,5],[11829,5],[12820,5],[14016,4],[15864,4],[15901,4],[16189,5],[16327,4]]},"324":{"position":[[105,6],[342,5],[447,6]]},"328":{"position":[[227,5],[412,4],[456,6],[478,6],[544,6],[729,6],[798,6],[938,7],[1084,4],[1125,5],[1273,5],[1528,4],[1594,6],[1740,5]]},"330":{"position":[[28,5]]},"332":{"position":[[63,5],[318,4],[384,6],[530,5]]},"334":{"position":[[169,5]]},"336":{"position":[[197,4],[241,6],[273,6],[339,6],[603,6],[672,6],[733,5],[776,5]]},"338":{"position":[[1025,5],[2023,5],[3226,4],[5095,4],[5130,4],[5445,4]]},"343":{"position":[[44,6],[100,5],[212,5],[567,5],[651,5]]},"345":{"position":[[74,4],[113,6],[236,6],[390,6],[559,6],[751,7],[889,7],[993,4],[1969,5],[2957,5],[4150,4],[5989,4],[6025,4]]},"347":{"position":[[74,4],[238,6],[502,6],[612,6],[702,5],[873,4],[1033,8],[1044,8],[1264,4]]},"349":{"position":[[107,4],[131,5],[270,4],[389,4],[412,5],[553,4],[576,5],[652,5],[731,4],[1157,6],[1264,5],[1343,6],[1383,4]]},"351":{"position":[[86,5]]},"353":{"position":[[226,6],[437,5],[548,6]]},"355":{"position":[[225,5],[296,4],[443,5],[516,4],[566,6],[598,6],[664,6],[934,6],[1003,6],[1134,5]]},"357":{"position":[[79,5],[150,4]]},"359":{"position":[[28,5]]},"365":{"position":[[73,5],[159,5],[460,5],[541,5],[625,5],[716,5],[1205,5]]},"367":{"position":[[187,5],[296,4],[450,6],[516,6],[786,6],[899,6],[1112,6],[1209,4]]},"369":{"position":[[939,5],[1055,5],[2090,5],[2262,5],[3632,4],[3758,4],[6909,5],[7902,5],[9100,4],[10954,4],[10990,4]]},"371":{"position":[[9,5],[799,5],[877,5],[970,5],[1049,5],[2062,5],[2138,5],[2289,5],[2366,5],[3706,5],[3790,4],[3887,5],[3972,4],[5102,5],[5279,5],[6150,5],[6325,5]]},"373":{"position":[[821,5],[1814,5],[3012,4],[4866,4],[4902,4]]},"377":{"position":[[44,4],[314,5],[421,5]]},"379":{"position":[[312,4],[356,6],[378,6],[444,6],[629,6],[698,6],[852,5],[1107,4],[1173,6],[1319,5]]},"381":{"position":[[63,5],[318,4],[384,6],[530,5]]},"383":{"position":[[40,4],[200,5]]},"385":{"position":[[827,5],[1825,5],[3158,4]]},"387":{"position":[[925,5],[1923,5],[3126,4],[4995,4],[5030,4],[6175,5],[7174,5],[8378,4],[10250,4],[10285,4],[10610,4]]},"393":{"position":[[503,4],[576,4],[659,4],[837,4],[939,4],[1140,4]]},"395":{"position":[[88,4]]},"397":{"position":[[88,5],[856,5],[1115,5],[1135,5],[1205,4],[1210,6],[1343,4],[1419,4],[1493,4],[1613,4],[1742,4],[1781,4],[1959,4],[1996,4],[2070,4],[2241,4],[2395,4],[2475,4],[2551,4],[2598,4],[2705,4]]},"399":{"position":[[221,4],[226,6],[480,4],[556,4],[630,4],[708,4],[784,4],[823,4],[1001,4],[1038,4],[1112,4],[1281,4],[1435,4],[1515,4],[1591,4],[1638,4],[1745,4],[2224,4],[2300,4],[2374,4],[2494,4],[2624,4],[2663,4],[2841,4],[2878,4],[2952,4],[3123,4],[3277,4],[3357,4],[3433,4],[3480,4],[3587,4],[3872,6],[3921,4],[3955,4],[4126,4],[4362,5],[4489,4],[4547,4],[4587,4],[4680,4],[4751,6]]},"401":{"position":[[715,4],[791,4],[865,4],[985,4],[1114,4],[1153,4],[1331,4],[1368,4],[1442,4],[1613,4],[1767,4],[1847,4],[1923,4],[1970,4],[2077,4],[2873,4]]},"403":{"position":[[233,4],[460,6],[897,4],[955,4],[1301,5],[1342,5],[1348,5],[1472,6],[1605,7],[1621,4],[1704,5],[1835,4],[1963,5],[2042,4],[2055,4],[2174,4],[2284,4],[2548,5],[2696,4],[3110,5],[3368,5],[3557,5],[3765,4],[4056,5],[4135,5],[4209,5],[4251,4],[4287,4],[4302,5],[4450,5],[4736,5],[4816,5],[5064,7],[5193,4],[6377,5],[6446,5],[6710,6],[6792,6],[7055,4],[7094,4],[7758,4],[8221,4],[8679,4],[9109,4],[9953,4]]},"405":{"position":[[264,4],[355,4],[496,4],[575,4],[872,4],[908,4],[1437,5],[2602,4],[2651,4],[2700,4],[2748,4],[2917,4],[2976,4],[3025,4],[3073,4],[3180,4],[3229,4],[3278,4],[3326,4],[3493,4],[3552,4],[3611,4],[3659,4]]},"409":{"position":[[231,4]]},"415":{"position":[[846,4],[893,7]]},"419":{"position":[[130,4],[416,7],[1170,7],[1289,7],[1429,7],[1552,7],[1897,7],[2298,4],[2339,6],[2407,6],[2499,6],[2623,7],[2796,6],[3227,6],[3735,6]]},"421":{"position":[[59,4],[150,7],[390,6],[411,6],[483,4],[522,7],[651,7]]},"423":{"position":[[96,7],[168,7],[249,7],[451,7],[593,6],[739,6],[1363,4],[1404,6],[1677,7],[1850,6],[2281,6],[2832,6],[3162,7]]},"425":{"position":[[100,4],[153,5],[199,7],[305,5],[681,6],[794,4],[886,7],[1062,6],[1082,7],[1169,6],[1183,4],[1248,6],[1295,7],[1303,9],[1516,7],[1529,4],[1894,4],[1986,8],[2092,4],[2193,6],[2240,7],[2248,9],[2332,4],[2707,4],[2714,7],[2743,4],[2772,4],[2924,4],[2934,4],[3081,4],[3162,6],[3262,7]]},"429":{"position":[[930,4],[1010,6],[1061,4],[1213,6],[1650,6],[1921,5],[2151,5],[2584,4]]},"435":{"position":[[97,5],[172,5],[384,5],[540,6]]},"437":{"position":[[247,5],[357,4],[422,5],[723,4],[796,6],[871,6],[937,6],[1273,6],[1446,6],[1640,7],[1771,7],[1896,7],[2020,7],[2143,7],[2600,5],[2759,5],[3014,4],[3080,6],[3226,5],[3377,4],[3404,5]]},"441":{"position":[[40,5]]},"443":{"position":[[63,5],[318,4],[384,6],[530,5],[681,4],[708,5]]},"445":{"position":[[991,5],[1985,5],[3184,4],[5041,4],[5078,4],[6042,5],[7035,5],[8233,4],[10087,4],[10123,4]]},"447":{"position":[[84,5],[206,4],[279,6],[402,6],[468,6],[1054,6],[1227,6]]},"449":{"position":[[951,5],[1946,5],[3146,4],[5006,4],[5043,4],[6166,5],[7161,5],[8361,4],[10221,4],[10257,4]]},"451":{"position":[[83,4]]},"453":{"position":[[84,6],[567,4],[736,5],[897,5]]},"455":{"position":[[240,5],[291,5],[359,4],[401,6],[447,6],[513,6],[670,6],[839,6],[1024,4],[1144,5],[1399,4],[1465,6],[1611,5],[1728,4]]},"457":{"position":[[97,4]]},"459":{"position":[[63,5],[318,4],[384,6],[530,5],[647,4]]},"461":{"position":[[65,4]]},"463":{"position":[[341,4],[383,6],[453,6],[519,6],[676,6],[942,6]]},"465":{"position":[[145,4],[187,6],[257,6],[345,6],[502,6],[907,6],[968,5],[1012,5]]},"467":{"position":[[802,5],[1786,5],[3105,4],[5042,4]]},"469":{"position":[[866,5],[1930,5],[3329,4]]},"471":{"position":[[998,5],[1996,5],[3199,4],[5068,4],[5103,4]]},"473":{"position":[[390,5]]},"475":{"position":[[195,4]]},"477":{"position":[[302,4],[417,6],[572,6],[592,7],[793,4],[913,5],[1168,4],[1234,6],[1380,5],[1642,4]]},"479":{"position":[[97,4]]},"481":{"position":[[63,5],[318,4],[384,6],[530,5]]},"483":{"position":[[78,5]]},"485":{"position":[[151,5],[268,4],[989,6],[1025,4],[1032,5],[1038,9],[2027,6],[2063,4],[2068,5],[3390,6],[3426,4],[3439,4],[3446,9],[4551,6],[4587,4],[5259,6],[5295,4],[5787,7],[5938,4],[6162,7]]},"487":{"position":[[256,6],[270,4],[307,4],[1130,5],[2124,5],[3323,4],[5180,4],[5215,4]]},"491":{"position":[[161,5],[181,6],[198,4],[283,5],[685,5],[737,5],[1182,4],[1267,5]]},"493":{"position":[[241,5],[323,4],[362,6],[384,6],[450,6],[629,6],[698,6],[883,4],[1003,5],[1258,4],[1324,6],[1470,5],[1609,4],[1759,5],[1862,5]]},"495":{"position":[[97,4]]},"497":{"position":[[63,5],[318,4],[384,6],[530,5],[669,4],[819,5],[922,5]]},"499":{"position":[[455,4]]},"501":{"position":[[123,6],[232,4],[301,4],[340,6],[362,6],[428,6],[607,6],[676,6]]},"503":{"position":[[98,5],[522,4],[773,4],[812,6],[834,6],[967,6],[1356,6],[1425,6]]},"505":{"position":[[154,5],[178,5],[1072,5],[1173,5],[2193,5],[2350,5],[3705,4],[3816,4],[6861,5],[7852,5],[9048,4],[10896,4],[10931,4],[11239,4],[12276,5],[13267,5],[14463,4],[16311,4],[16346,4],[17382,5],[18375,5],[19573,4],[21427,4],[21464,4],[22426,5],[23418,5],[24615,4],[26466,4],[26503,4],[26832,4],[26920,4],[27155,4]]},"509":{"position":[[40,5],[257,5],[542,5],[601,5]]},"511":{"position":[[248,5],[317,4],[361,6],[427,6],[586,6],[771,4],[891,5],[1146,4],[1212,6],[1358,5]]},"513":{"position":[[97,4]]},"515":{"position":[[63,5],[318,4],[384,6],[530,5]]},"517":{"position":[[77,5],[334,5]]},"519":{"position":[[196,4],[289,6],[355,6],[701,6]]},"521":{"position":[[18,5],[811,5],[1797,5],[3118,4]]},"523":{"position":[[91,5],[216,5],[1152,5],[1198,5],[2217,5],[2261,5],[3607,5],[3659,4],[4795,5],[5547,5]]},"525":{"position":[[1058,5],[2058,5],[3263,4],[5138,4],[5175,4],[5681,4]]},"527":{"position":[[45,4],[124,5],[177,4]]},"529":{"position":[[44,4],[142,4]]},"531":{"position":[[281,4],[320,6],[386,6],[539,6],[724,4],[844,5],[1099,4],[1165,6],[1311,5]]},"533":{"position":[[97,4]]},"535":{"position":[[63,5],[318,4],[384,6],[530,5]]},"537":{"position":[[25,4],[890,5],[949,5],[1927,5],[2042,5],[3355,4],[3424,4],[5611,5]]},"539":{"position":[[106,4],[145,6],[235,6],[301,6],[716,6],[888,6],[1070,4],[1220,4],[1310,4]]},"541":{"position":[[897,5],[954,5],[1930,5],[2043,5],[3354,4],[3421,4]]},"543":{"position":[[27,4],[908,5],[1893,5],[3213,4]]},"545":{"position":[[831,5],[1810,5],[2994,4],[4806,4],[4843,4],[5777,5],[6756,5],[7940,4],[9752,4],[9789,4]]},"547":{"position":[[36,5],[793,5],[1770,5],[3082,4],[5766,5],[6746,5],[7931,4],[9746,4],[9783,4]]},"549":{"position":[[314,5]]},"553":{"position":[[385,4],[429,6],[451,6],[527,6],[805,6],[874,6],[955,7],[1195,4],[1315,5],[1570,4],[1636,6],[1782,5]]},"555":{"position":[[97,4]]},"557":{"position":[[63,5],[318,4],[384,6],[530,5]]},"560":{"position":[[58,4]]},"562":{"position":[[66,4],[990,5],[1979,5],[3173,4],[5015,4],[5050,4]]},"569":{"position":[[99,4],[178,4],[262,4],[310,4],[2207,5],[3527,4],[5559,4],[5836,4],[7760,5],[9042,4],[11014,4],[11283,4],[11386,4],[16466,5]]},"571":{"position":[[329,4],[2292,5],[3494,4],[5172,4]]},"574":{"position":[[27,5],[44,5],[155,5]]},"576":{"position":[[53,4],[10767,9],[10777,9]]},"578":{"position":[[124,4],[225,4]]},"581":{"position":[[117,4]]},"583":{"position":[[46,4],[877,5],[969,5],[1979,5],[2099,5],[3365,4],[5493,7],[5642,4],[5901,5]]},"585":{"position":[[591,4]]},"587":{"position":[[47,4],[256,4],[318,4],[402,4],[456,4]]},"591":{"position":[[109,6],[321,5]]},"593":{"position":[[312,4],[432,5],[687,4],[753,6],[899,5]]},"595":{"position":[[97,4]]},"597":{"position":[[63,5],[318,4],[384,6],[530,5]]},"599":{"position":[[47,4],[349,4],[374,4],[448,5],[472,4]]},"601":{"position":[[276,4],[425,6],[491,6],[755,6],[775,7],[902,6],[1109,6]]},"605":{"position":[[87,4],[236,6],[302,6],[566,6],[586,7],[713,6],[920,6],[1017,4],[1160,7],[2118,5],[3108,5],[4303,4],[6148,4],[6184,4],[6673,4],[6756,7],[6764,9],[7711,5],[8701,5],[9896,4],[11741,4],[11777,4],[12056,4],[12299,4],[12600,7],[12677,7],[13953,5],[14946,5],[16144,4],[17998,4],[18037,4],[18646,4],[18983,7],[19063,7],[19153,7],[19237,7],[20208,5],[21198,5],[22393,4],[24238,4],[24274,4],[24561,4],[24902,7],[25865,5],[26856,5],[28052,4],[29900,4],[29937,4]]},"607":{"position":[[148,4],[249,6],[315,6],[629,6],[877,4],[1004,7],[1963,5],[2954,5],[4150,4],[5998,4],[6034,4],[6554,4],[6566,5],[6630,4],[6673,7],[6681,9],[7632,5],[8626,5],[9825,4],[11682,4],[11721,4],[12348,7],[12423,7],[13393,5],[14385,5],[15582,4],[17433,4],[17470,4],[18170,7],[19135,5],[20127,5],[21324,4],[23175,4],[23213,4]]},"611":{"position":[[106,5]]},"613":{"position":[[226,5],[281,5],[337,4],[381,6],[425,6],[491,6],[650,6],[817,6],[899,4],[940,5],[1088,5],[1343,4],[1409,6],[1555,5]]},"615":{"position":[[28,5]]},"617":{"position":[[63,5],[318,4],[384,6],[530,5]]},"620":{"position":[[170,4],[238,6],[282,6],[348,6],[604,6],[771,6]]},"622":{"position":[[251,5],[1045,4],[1141,5],[2149,4],[2243,5],[3578,4],[3680,4],[4805,4],[5588,4]]},"624":{"position":[[932,5],[1933,5],[3139,4],[5017,4],[5058,4],[5792,4]]},"628":{"position":[[107,4],[181,6],[276,6],[342,6],[772,6],[959,6],[1392,4],[1537,4],[1630,4],[1783,4],[1931,4],[2013,4],[2059,4]]},"630":{"position":[[817,5],[960,5],[2018,5],[2217,5],[3610,4],[3763,4]]},"632":{"position":[[861,5],[1854,5],[3052,4],[4906,4],[4942,4]]},"634":{"position":[[817,5],[1874,5],[3266,4],[6231,5],[7225,5],[8424,4],[10281,4],[10317,4],[11281,5],[12278,5],[13480,4],[15346,4],[15382,4]]},"636":{"position":[[284,4],[315,4]]},"640":{"position":[[136,5],[391,4],[457,6],[603,5],[754,4],[781,5]]},"642":{"position":[[100,5],[184,5],[348,4],[554,6],[643,7],[721,7],[963,4],[1170,6]]},"644":{"position":[[400,4],[787,6],[1623,5],[2615,5],[3812,4],[5663,4],[5699,4],[6660,5],[7651,5],[8847,4],[10695,4],[10731,4]]},"646":{"position":[[900,5],[1937,5],[3309,4],[6124,5],[7119,5],[8319,4],[10179,4],[10218,4]]},"648":{"position":[[6489,5],[6559,5],[7551,5],[7677,5],[9004,4],[9084,4],[11939,5],[12009,5],[13002,5],[13128,5],[14456,4],[14536,4],[16813,5],[17577,5],[18569,5],[19766,4],[21617,4],[21653,4],[22659,5],[23649,5],[24844,4],[26689,4],[26725,4]]},"650":{"position":[[211,4],[418,6]]},"654":{"position":[[35,4],[618,4]]},"658":{"position":[[192,4],[293,4],[390,5],[896,5]]},"660":{"position":[[245,5],[394,4],[475,4],[684,4],[746,4],[896,4],[944,6],[975,6],[1005,6],[1355,6],[1587,6],[1665,6],[1742,6],[3302,5],[3434,5],[3566,5],[3698,5],[3830,5],[3940,5],[4050,5],[4323,5],[4511,5],[4699,5],[4887,5],[5075,5],[5241,5],[5407,5],[5883,4],[6025,4],[6167,4],[6309,4],[6451,4],[6571,4],[6691,4]]},"666":{"position":[[395,5],[609,5],[896,4],[1871,4],[1907,4],[2286,5],[2502,5],[2791,4],[3772,4],[3808,4],[4203,5],[4417,5],[4704,4],[5679,4],[5715,4],[6099,5],[6316,5],[6606,4],[7590,4],[7626,4],[8013,5],[8228,5],[8516,4],[9494,4],[9530,4],[9915,5],[10132,5],[10422,4],[11406,4],[11442,4]]},"668":{"position":[[201,4],[575,4],[889,7],[960,4],[1137,6],[1168,6],[1223,6],[1336,6],[2019,6],[2097,6],[2179,6],[2257,6],[2973,5],[3188,5],[3476,4],[4454,4],[4490,4],[5533,5],[6587,5],[7976,4],[10226,5],[10440,5],[10727,4],[11702,4],[11738,4]]},"670":{"position":[[1894,5],[2976,5],[4393,4],[6758,5],[6860,5],[7087,5],[7228,5],[7584,4],[8958,4],[8994,4],[9173,5],[9583,5],[9685,5],[9913,5],[10054,5],[10411,4],[11788,4],[11824,4],[12003,5],[12222,4]]},"672":{"position":[[96,4],[144,6],[175,6],[230,6],[343,6],[693,6],[1379,6],[1457,6],[1539,6],[1617,6],[2841,5],[2973,5],[3105,5],[3237,5],[3369,5],[3479,5],[3589,5],[3862,5],[4050,5],[4238,5],[4426,5],[4614,5],[4780,5],[4946,5],[5422,4],[5564,4],[5706,4],[5848,4],[5990,4],[6110,4],[6230,4]]},"674":{"position":[[45,4],[165,5]]},"678":{"position":[[373,4],[775,4],[1026,4],[1067,5],[1126,5]]},"686":{"position":[[129,6],[167,5]]},"688":{"position":[[121,4]]},"690":{"position":[[364,4],[391,5],[673,4],[726,6],[763,6],[793,6],[859,6],[1113,6],[1197,6],[1274,6]]},"692":{"position":[[268,5],[333,4],[1182,5],[2174,5],[3501,4],[6138,5],[7134,5],[8465,4],[11126,5],[11199,5],[11276,5],[12265,5],[12394,5],[12527,5],[13851,4],[13934,4],[14021,4],[17494,5],[18486,5],[19683,4],[21534,4],[21570,4],[22612,5],[23602,5],[24797,4],[26642,4],[26678,4],[26931,4]]},"694":{"position":[[588,5],[1214,6],[1244,6],[1277,6],[1344,6],[1404,6],[2126,6],[2203,6],[2283,6],[2367,6],[2444,6],[3600,5],[3670,5],[3734,5],[3807,5],[4792,5],[4918,5],[5038,5],[5167,5],[6487,4],[6567,4],[6641,4],[6724,4],[10105,5],[11100,5],[12300,4],[14160,4],[14199,4],[14471,4]]},"696":{"position":[[394,6],[424,6],[622,6],[699,6],[805,4],[962,6],[1029,6],[1089,6],[1153,6],[1183,6],[1249,6],[1913,6],[2042,6],[2180,6],[2264,6],[2341,6],[2552,6],[2629,6],[3503,5],[3587,5],[4583,5],[4723,5],[6054,4],[6148,4],[9196,5],[9291,5],[9386,5],[9469,5],[10471,5],[10622,5],[10773,5],[10912,5],[12249,4],[12354,4],[12459,4],[12552,4],[16372,5],[17361,5],[18555,4],[20397,4],[20430,4],[20746,4]]},"698":{"position":[[430,6],[661,4],[979,6],[1009,6],[1075,6],[1691,6],[1820,6],[2089,6],[2166,6],[2305,4],[2862,4],[3698,5],[3772,5],[3850,5],[4840,5],[4970,5],[5104,5],[6429,4],[6513,4],[6601,4],[10081,5],[11075,5],[12274,4],[14131,4],[14168,4],[14424,4]]},"704":{"position":[[172,5],[298,4],[650,4]]},"706":{"position":[[373,4]]},"712":{"position":[[131,4],[276,4],[456,5],[548,4],[766,6],[802,5],[926,4]]},"714":{"position":[[129,6],[172,5],[613,4]]},"716":{"position":[[390,4],[803,4],[917,5],[1027,4],[1078,6],[1108,6],[1130,6],[1151,6],[1217,6],[1474,6],[1551,6],[1620,6],[1688,6],[1747,5],[1917,4]]},"718":{"position":[[231,4],[599,4],[650,6],[680,6],[702,6],[723,6],[789,6],[1046,6],[1123,6],[1192,6],[1260,6],[1319,4],[1367,4],[1501,6],[1658,6],[1746,5],[1789,5],[1824,5],[1886,4],[2792,5],[3843,5],[5229,4],[8095,5],[9093,5],[10296,4],[12165,4],[12200,4],[13218,5],[14269,5],[15655,4],[18478,5],[19476,5],[20679,4],[22548,4],[22589,4],[23634,5],[24639,5],[25849,4],[27739,4],[27780,4],[28110,5],[28241,5],[28366,5],[29179,5],[29308,5],[29431,5],[30480,5],[30665,5],[30844,5],[32228,4],[32367,4],[32500,4],[36048,5],[37046,5],[38249,4],[40118,4],[40153,4],[40405,4]]},"720":{"position":[[877,5],[1870,5],[3068,4],[4922,4],[4957,4],[5664,4],[5798,4],[5849,6],[5879,6],[5917,6],[5972,6],[6038,6],[6522,6],[6599,6],[6668,6],[6736,6],[7577,5],[8569,5],[9766,4],[11617,4],[11652,4],[11879,5],[11904,4]]},"722":{"position":[[29,6],[223,4],[383,4],[1023,5],[1397,4],[2203,6],[2473,6],[2834,5],[2864,5],[3711,6],[3981,6],[4313,5],[4375,5],[4490,4],[4541,6],[4571,6],[4609,6],[4664,6],[5006,6],[5490,6],[5567,6],[5636,6],[5704,6],[6097,6],[6367,6],[6705,6],[7544,5],[7634,5],[7735,5],[8760,5],[8906,5],[9063,5],[10423,4],[10523,4],[10634,4],[14152,5],[14254,5],[15274,5],[15374,5],[16721,5],[16829,4],[17966,5],[18772,5],[19050,5],[19984,5],[20052,5],[21148,5],[21272,5],[22703,4],[22781,4],[25902,5],[25981,5],[26981,5],[27116,5],[28451,4],[28540,4],[31555,5],[32577,5],[33934,4],[35978,4],[36720,5],[37725,5],[39065,4],[41993,5],[42983,5],[44178,4],[46023,4],[46060,4],[47085,5],[48090,5],[49300,4],[51190,4],[51227,4],[51495,4]]},"726":{"position":[[55,5]]},"728":{"position":[[645,4]]},"732":{"position":[[192,4],[294,4],[391,5],[898,5]]},"734":{"position":[[553,4],[604,6],[727,6],[950,6],[1125,6],[1811,6],[3328,5],[3467,5],[3642,5],[3787,5],[4840,5],[5035,5],[5266,5],[5467,5],[6855,4],[7004,4],[7189,4],[7344,4]]},"740":{"position":[[1177,5],[2165,5],[3358,4],[5197,4],[5233,4],[6288,5],[7280,5],[8477,4],[10328,4],[10368,4],[11409,5],[12461,5],[13848,4],[16644,5],[17633,5],[18827,4],[20669,4],[20705,4]]},"742":{"position":[[216,5],[241,5],[287,5],[293,6],[337,7],[392,7],[445,6],[512,5],[518,6],[570,7],[625,7],[678,6],[1125,5],[1158,4],[1218,4],[1345,6],[1467,4],[1499,4],[1870,6],[2024,6],[2139,6],[2914,6],[4030,6],[5292,5],[6276,5],[7465,4],[9292,4],[9323,4],[10514,5],[10666,5],[10840,5],[11934,5],[12142,5],[12372,5],[13801,4],[13963,4],[14147,4],[18054,5],[18083,7],[18177,5],[18206,7],[19229,5],[19408,5],[20795,4],[20826,7],[20928,4],[20959,7],[24186,5],[25174,5],[26367,4],[28206,4],[28242,4]]},"744":{"position":[[1856,5],[1885,7],[2006,5],[2035,7],[3086,5],[3292,5],[4707,4],[4738,7],[4867,4],[4898,7],[8532,5],[8638,5],[8667,7],[8719,5],[8748,7],[9705,5],[9850,5],[9986,5],[11233,4],[11401,7],[11484,7],[13684,4],[13720,4],[13907,5],[13939,7],[13989,5],[14021,7],[14988,5],[15094,5],[15123,7],[15175,5],[15204,7],[16162,5],[16307,5],[16443,5],[17691,4],[17859,7],[17942,7],[20145,4],[20181,4],[20368,5],[20400,7],[20450,5],[20482,7]]},"746":{"position":[[96,4],[147,6],[269,4],[301,4],[453,6],[735,5],[741,6],[787,5],[793,6],[859,6],[1204,6],[1358,6],[1473,6],[2632,6],[3016,7],[3071,7],[3124,6],[3189,7],[3244,7],[3297,6],[4056,5],[4195,5],[4370,5],[4515,5],[4659,5],[4809,5],[4961,5],[5114,5],[5266,5],[5417,5],[5568,5],[5742,5],[6824,5],[7019,5],[7250,5],[7451,5],[7651,5],[7857,5],[8065,5],[8274,5],[8482,5],[8689,5],[8896,5],[9126,5],[10543,4],[10692,4],[10877,4],[11032,4],[11186,4],[11346,4],[11508,4],[11671,4],[11833,4],[11994,4],[12155,4],[12339,4]]},"748":{"position":[[248,4],[287,6],[360,6],[482,4],[514,4],[666,6],[948,5],[954,6],[1000,5],[1006,6],[1072,6],[1225,6],[1604,6],[1758,6],[1940,6],[3099,6],[3483,7],[3538,7],[3591,6],[3656,7],[3711,7],[3764,6]]},"750":{"position":[[45,4],[284,5]]},"754":{"position":[[732,4],[918,5],[951,5]]},"758":{"position":[[295,4],[417,4],[573,4]]},"762":{"position":[[325,5]]},"765":{"position":[[586,5],[634,4],[790,6],[856,6],[1386,6]]},"767":{"position":[[931,5],[1070,5],[1222,5],[1370,5],[1534,5],[1701,5],[2762,5],[2957,5],[3165,5],[3369,5],[3589,5],[3812,5],[5208,4],[5357,4],[5519,4],[5677,4],[5851,4],[6028,4],[10895,5],[11045,5],[11196,5],[12266,5],[12472,5],[12679,5],[14084,4],[14244,4],[14405,4],[17303,5],[18063,5],[18183,5],[18314,5],[19364,5],[19540,5],[19727,5],[21112,4],[21242,4],[21383,4],[24555,5],[24749,7],[25741,5],[26732,5],[27928,4],[29776,4],[29812,4],[30920,5],[31912,5],[33109,4],[34960,4],[34996,4],[35956,5],[36951,5],[38151,4],[40011,4],[40056,4],[41014,5],[42010,5],[43211,4],[45074,4],[45110,4]]},"769":{"position":[[1042,5],[2034,5],[3231,4],[5082,4],[5118,4],[5603,6],[5871,6],[6090,4],[6356,4],[6379,4],[6593,4],[6667,6],[6830,6],[7101,6],[7459,6],[8377,5],[9365,5],[10558,4],[12397,4],[12433,4],[13717,5],[14714,5],[15916,4],[17782,4],[17827,4],[18480,5],[18677,4],[18730,4],[18779,5],[19053,6],[19508,6],[19532,5],[19605,5],[19652,5],[20004,7],[20149,7],[20216,7],[20586,4],[20612,7],[21001,4],[21128,5],[21530,4],[21604,6],[21743,6],[21809,6],[22232,6],[22586,6],[23465,5],[24461,5],[25662,4],[27525,4],[27570,4],[28666,4],[28740,6],[28935,6],[29001,6],[29431,6],[29919,6],[31128,5],[32115,5],[33307,4],[35143,4],[35179,4],[35654,4],[35728,7],[36017,6],[36486,6],[37037,7],[37290,7],[37364,7],[37439,7],[37621,4],[37880,6],[37946,6],[38749,6],[40115,5],[41102,5],[42294,4],[44130,4],[44166,4],[44387,5],[44443,4]]},"771":{"position":[[283,4]]},"773":{"position":[[265,5],[299,4],[750,4],[874,4],[1019,4]]},"775":{"position":[[639,5]]},"781":{"position":[[152,5],[432,5]]},"783":{"position":[[28,6]]},"786":{"position":[[313,4],[353,6],[376,6],[398,6],[424,6],[445,6],[511,6],[774,6],[844,6],[913,6],[986,6],[1054,6],[1113,4],[1161,4],[1277,4],[1317,6],[1383,6],[1538,6],[1594,5],[1637,5],[1672,5],[2500,5],[3493,5],[4821,4],[7568,5],[8561,5],[9759,4],[11613,4],[11649,4],[12599,5],[13592,5],[14920,4],[17624,5],[18617,5],[19815,4],[21669,4],[21705,4],[22668,5],[23662,5],[24861,4],[26718,4],[26754,4],[27255,4],[27295,6],[27329,6],[27361,6],[27401,6],[27431,6],[27497,6],[28080,6],[28150,6],[28219,6],[28292,6],[28360,6],[28476,6],[28719,6],[28747,5],[28853,5],[28937,5],[29819,5],[30812,5],[32010,4],[33864,4],[33900,4],[34863,5],[35856,5],[37054,4],[38908,4],[38944,4]]},"788":{"position":[[615,6],[762,4],[805,4],[1107,6],[1690,6],[1802,6],[1913,6],[2028,6],[2138,6],[3076,5],[3227,5],[4298,5],[4505,5],[5911,4],[6072,4],[8665,4],[8787,4],[9563,5],[10558,5],[11758,4],[13618,4],[13657,4]]},"790":{"position":[[970,5],[1987,5],[3339,4],[6547,5],[7596,5],[8980,4],[11766,5],[12759,5],[13957,4],[15811,4],[15848,4]]},"792":{"position":[[484,4],[739,6],[958,6],[1167,6],[2174,6],[2286,6],[2397,6],[2512,6],[2622,6],[3613,5],[3687,5],[4690,5],[4820,5],[6158,4],[6242,4],[8563,4],[8675,4],[9745,5],[10742,5],[11944,4],[13810,4],[13846,4],[14424,5],[14529,5],[14715,5],[14951,7],[15142,7],[15172,5],[16220,5],[17235,5],[18585,4],[20664,4],[21272,6],[22233,6],[22395,6],[22556,6],[22721,6],[22881,6],[23331,6]]},"794":{"position":[[82,5]]},"796":{"position":[[147,5],[181,4],[234,5],[619,4],[743,4],[903,4],[1101,4]]},"798":{"position":[[639,5]]},"804":{"position":[[158,5],[257,5],[309,5]]},"806":{"position":[[28,6]]},"809":{"position":[[398,4],[441,6],[463,6],[488,6],[510,6],[576,6],[814,6],[883,6],[955,6],[1024,6],[1083,4],[1131,4],[1264,6],[1420,6],[1507,5],[1550,5],[1585,5],[1646,4],[2497,5],[3493,5],[4824,4],[7586,5],[8582,5],[9783,4],[11646,4],[11682,4],[12636,5],[13628,5],[14955,4],[17655,5],[18647,5],[19844,4],[21695,4],[21731,4],[22692,5],[23686,5],[24885,4],[26742,4],[26778,4],[27287,4],[27330,6],[27352,6],[27386,6],[27418,6],[27497,6],[27974,6],[28043,6],[28115,6],[28184,6],[28290,5],[28399,5],[28460,5],[29331,5],[30323,5],[31520,4],[33371,4],[33407,4],[34368,5],[35361,5],[36559,4],[38413,4],[38449,4]]},"811":{"position":[[429,4],[673,6],[739,6],[1216,6],[1329,6],[1445,6],[1558,6],[1769,6],[1827,5],[1898,5],[1955,5],[2831,5],[2895,5],[2959,5],[3088,5],[4144,5],[4264,5],[4384,5],[4569,5],[5960,4],[6034,4],[6108,4],[6247,4],[9130,4],[9258,4],[10034,5],[11030,5],[12231,4],[14094,4],[14133,4]]},"813":{"position":[[503,4],[795,6],[1371,6],[1484,6],[1600,6],[1713,6],[2656,5],[2795,5],[3848,5],[4043,5],[5431,4],[5580,4],[8106,4],[9164,5],[10163,5],[11367,4],[13239,4],[13276,4],[13863,5],[13973,5],[14063,5],[14218,5],[14450,7],[14641,7],[14714,7],[14817,4],[15177,6],[15243,6],[16287,6],[16400,6],[16516,6],[16629,6],[16840,6]]},"815":{"position":[[115,4],[517,4],[574,4],[941,6],[1007,6],[2051,6],[2164,6],[2280,6],[2393,6],[2413,7],[2640,6],[3534,5],[3688,5],[3801,6],[3848,5],[3854,9],[4899,5],[5109,5],[5280,6],[5325,5],[6711,4],[6875,4],[6992,6],[7045,4],[7052,9],[8494,6],[9717,6],[10692,5],[11692,5],[12897,4],[14772,4],[14808,4],[15861,5],[16863,5],[18070,4],[19951,4],[19987,4],[20967,5],[21971,5],[23180,4],[25067,4],[25103,4],[26166,5],[27168,5],[28375,4],[30256,4],[30292,4],[31272,5],[32274,5],[33481,4],[35362,4],[35398,4]]},"817":{"position":[[94,5]]}}}],["user\":\"account:check",{"_index":2391,"t":{"734":{"position":[[10432,24]]},"746":{"position":[[17459,24]]}}}],["user\":\"branch:west",{"_index":2389,"t":{"734":{"position":[[10283,19]]},"746":{"position":[[17310,19]]}}}],["user\":\"device_group:group1#it_admin",{"_index":2228,"t":{"696":{"position":[[15120,38],[15207,38]]}}}],["user\":\"device_group:group1#security_guard",{"_index":2225,"t":{"696":{"position":[[14922,44],[15021,44]]}}}],["user\":\"device_group:group1#security_guard\",\"relation\":\"security_guard\",\"object\":\"device:2\"},{\"user\":\"device_group:group1#security_guard\",\"relation\":\"security_guard\",\"object\":\"device:3\"},{\"user\":\"device_group:group1#it_admin\",\"relation\":\"it_admin\",\"object\":\"device:2\"},{\"user\":\"device_group:group1#it_admin\",\"relation\":\"it_admin\",\"object\":\"device:3",{"_index":2224,"t":{"696":{"position":[[14497,353]]}}}],["user\":\"document:2021",{"_index":2717,"t":{"813":{"position":[[7855,21]]}}}],["user\":\"domain:xyz#memb",{"_index":2709,"t":{"811":{"position":[[8897,27]]},"815":{"position":[[9600,27]]}}}],["user\":\"folder:budget",{"_index":2016,"t":{"622":{"position":[[5684,24]]}}}],["user\":\"folder:budgets\",\"relation\":\"parent\",\"object\":\"document:may_budget.doc",{"_index":2015,"t":{"622":{"position":[[5429,82]]}}}],["user\":\"folder:not",{"_index":1763,"t":{"469":{"position":[[5258,22]]}}}],["user\":\"folder:notes\",\"relation\":\"parent\",\"object\":\"document:meeting_notes.doc",{"_index":1762,"t":{"469":{"position":[[5041,83]]}}}],["user\":\"folder:product#par",{"_index":1714,"t":{"429":{"position":[[3532,31]]}}}],["user\":\"folder:product#parent\",\"relation\":\"parent\",\"object\":\"folder:plan",{"_index":1713,"t":{"429":{"position":[[3379,81]]}}}],["user\":\"ip",{"_index":2447,"t":{"742":{"position":[[17003,10]]},"746":{"position":[[18718,10]]}}}],["user\":\"org:xyz",{"_index":1865,"t":{"541":{"position":[[5269,17],[5330,17]]},"547":{"position":[[4813,17]]}}}],["user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:1",{"_index":1876,"t":{"547":{"position":[[4683,57]]}}}],["user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:1\"},{\"user\":\"org:xyz\",\"relation\":\"owner\",\"object\":\"repo:2",{"_index":1864,"t":{"541":{"position":[[5084,113]]}}}],["user\":\"organization:a",{"_index":2116,"t":{"660":{"position":[[9600,24]]},"672":{"position":[[9139,24]]}}}],["user\":\"organization:alpha",{"_index":2562,"t":{"767":{"position":[[16807,28]]}}}],["user\":\"organization:alpha\",\"relation\":\"subscriber\",\"object\":\"plan:free\"},{\"user\":\"organization:bayer\",\"relation\":\"subscriber\",\"object\":\"plan:team\"},{\"user\":\"organization:cups\",\"relation\":\"subscriber\",\"object\":\"plan:enterpris",{"_index":2561,"t":{"767":{"position":[[16434,231]]}}}],["user\":\"organization:b",{"_index":2118,"t":{"660":{"position":[[9714,24]]},"672":{"position":[[9253,24]]}}}],["user\":\"organization:bay",{"_index":2565,"t":{"767":{"position":[[16961,28]]}}}],["user\":\"organization:contoso",{"_index":2673,"t":{"792":{"position":[[8283,30]]}}}],["user\":\"organization:contoso#memb",{"_index":2684,"t":{"792":{"position":[[20430,37]]}}}],["user\":\"organization:contoso#member\",\"relation\":\"repo_admin\",\"object\":\"organization:contoso",{"_index":2683,"t":{"792":{"position":[[20262,96]]}}}],["user\":\"organization:cup",{"_index":2567,"t":{"767":{"position":[[17116,27]]}}}],["user\":\"plan:advanc",{"_index":2041,"t":{"630":{"position":[[6057,23]]},"634":{"position":[[5186,23]]}}}],["user\":\"plan:advanced\",\"relation\":\"associated_plan\",\"object\":\"feature:data_preview",{"_index":2047,"t":{"634":{"position":[[4976,87]]}}}],["user\":\"plan:enterpris",{"_index":2545,"t":{"767":{"position":[[9597,25],[9765,25],[9936,25]]}}}],["user\":\"plan:fre",{"_index":2541,"t":{"767":{"position":[[9146,19]]}}}],["user\":\"plan:free\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:team\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:team\",\"relation\":\"associated_plan\",\"object\":\"feature:draft_prs\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:issues\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:draft_prs\"},{\"user\":\"plan:enterprise\",\"relation\":\"associated_plan\",\"object\":\"feature:sso",{"_index":2540,"t":{"767":{"position":[[8534,478]]}}}],["user\":\"plan:team",{"_index":2543,"t":{"767":{"position":[[9289,19],[9445,19]]}}}],["user\":\"role:media",{"_index":1493,"t":{"371":{"position":[[5895,20],[6228,18],[6404,18]]}}}],["user\":\"team:contoso/engineering#memb",{"_index":2640,"t":{"788":{"position":[[8419,41]]}}}],["user\":\"team:contoso/protocols#memb",{"_index":2649,"t":{"790":{"position":[[5190,39]]}}}],["user\":\"team:contoso/protocols#member\",\"relation\":\"member\",\"object\":\"team:contoso/engin",{"_index":2648,"t":{"790":{"position":[[5020,98]]}}}],["user\":\"team:writers#memb",{"_index":1843,"t":{"523":{"position":[[5593,29]]}}}],["user\":\"team:writers#member\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc",{"_index":1842,"t":{"523":{"position":[[5377,90]]}}}],["user\":\"timeslot:10_11",{"_index":2496,"t":{"746":{"position":[[17917,24]]}}}],["user\":\"timeslot:11_12",{"_index":2444,"t":{"742":{"position":[[16669,24]]},"746":{"position":[[18074,24]]}}}],["user\":\"timeslot:11_12\",\"relation\":\"approved_timeslot\",\"object\":\"branch:west",{"_index":2440,"t":{"742":{"position":[[16252,78]]}}}],["user\":\"timeslot:12_13",{"_index":2446,"t":{"742":{"position":[[16825,24]]},"746":{"position":[[18230,24]]}}}],["user\":\"timeslot:13_14",{"_index":2497,"t":{"746":{"position":[[18385,24]]}}}],["user\":\"timeslot:14_15",{"_index":2498,"t":{"746":{"position":[[18540,24]]}}}],["user\":\"timeslot:8_9",{"_index":2494,"t":{"746":{"position":[[17607,22]]}}}],["user\":\"timeslot:9_10",{"_index":2495,"t":{"746":{"position":[[17761,23]]}}}],["user\":\"us",{"_index":1345,"t":{"288":{"position":[[4892,16],[9803,16],[16179,16]]},"485":{"position":[[5302,16]]},"815":{"position":[[9764,16]]}}}],["user\":\"user:*\",\"relation\":\"view\",\"object\":\"document:compani",{"_index":1780,"t":{"485":{"position":[[5113,62]]}}}],["user\":\"user:*\",\"relation\":\"viewer\",\"object\":\"tweet:1",{"_index":1344,"t":{"288":{"position":[[4762,58],[9672,58],[15823,58]]}}}],["user\":\"user:alic",{"_index":1822,"t":{"505":{"position":[[5914,20]]},"521":{"position":[[4876,20]]}}}],["user\":\"user:alice\",\"relation\":\"member\",\"object\":\"team:writ",{"_index":1835,"t":{"521":{"position":[[4737,67]]}}}],["user\":\"user:ami",{"_index":2282,"t":{"718":{"position":[[7128,18]]},"722":{"position":[[24903,18]]}}}],["user\":\"user:amy\",\"relation\":\"legacy_admin\",\"object\":\"workspace:sandcastl",{"_index":2281,"t":{"718":{"position":[[6924,79]]}}}],["user\":\"user:amy\",\"relation\":\"writer\",\"object\":\"channel:general\"},{\"user\":\"user:emily\",\"relation\":\"writer\",\"object\":\"channel:gener",{"_index":2334,"t":{"722":{"position":[[24587,137]]}}}],["user\":\"user:ann",{"_index":465,"t":{"16":{"position":[[28336,18]]},"126":{"position":[[1649,18]]},"213":{"position":[[4830,19]]},"221":{"position":[[11392,19]]},"230":{"position":[[5089,19]]},"247":{"position":[[4828,19]]},"369":{"position":[[5814,19]]},"537":{"position":[[5282,19],[5345,19]]},"630":{"position":[[5910,19]]},"648":{"position":[[11006,19],[16461,19]]},"660":{"position":[[8942,19],[9078,19],[9214,19],[9350,19]]},"668":{"position":[[9879,19]]},"670":{"position":[[6353,19]]},"672":{"position":[[8481,19],[8617,19],[8753,19]]},"692":{"position":[[5277,19],[10253,19]]},"694":{"position":[[8911,19]]},"734":{"position":[[9961,19]]},"742":{"position":[[23024,19],[23151,19]]},"744":{"position":[[7047,19],[7201,19]]},"746":{"position":[[16988,19]]},"767":{"position":[[23680,19]]},"786":{"position":[[6600,19]]},"809":{"position":[[16731,19]]},"811":{"position":[[8628,19]]},"815":{"position":[[9442,19]]}}}],["user\":\"user:anne\",\"relation\":\"account_manager\",\"object\":\"branch:west",{"_index":2378,"t":{"734":{"position":[[9518,71]]},"746":{"position":[[15846,71]]}}}],["user\":\"user:anne\",\"relation\":\"admin\",\"object\":\"repo:1\"},{\"user\":\"user:anne\",\"relation\":\"admin\",\"object\":\"repo:2",{"_index":1856,"t":{"537":{"position":[[5093,117]]}}}],["user\":\"user:anne\",\"relation\":\"assignee\",\"object\":\"role:media",{"_index":1477,"t":{"369":{"position":[[5553,63]]}}}],["user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:plan",{"_index":2075,"t":{"648":{"position":[[864,70],[2022,70],[3243,70],[4511,70],[5099,70],[5394,70]]}}}],["user\":\"user:anne\",\"relation\":\"editor\",\"object\":\"document:roadmap\"},{\"user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:roadmap",{"_index":2083,"t":{"648":{"position":[[16246,142]]}}}],["user\":\"user:anne\",\"relation\":\"employee\",\"object\":\"company:xyz",{"_index":1188,"t":{"213":{"position":[[4691,67]]}}}],["user\":\"user:anne\",\"relation\":\"live_video_viewer\",\"object\":\"device:1",{"_index":2172,"t":{"692":{"position":[[5132,73]]}}}],["user\":\"user:anne\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"user:beth\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"user:charles\",\"relation\":\"member\",\"object\":\"domain:xyz\"},{\"user\":\"domain:xyz#member\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2707,"t":{"811":{"position":[[8227,264]]}}}],["user\":\"user:anne\",\"relation\":\"member\",\"object\":\"org:contoso",{"_index":1226,"t":{"221":{"position":[[11216,65]]},"230":{"position":[[4951,65]]}}}],["user\":\"user:anne\",\"relation\":\"member\",\"object\":\"organization:alpha\"},{\"user\":\"user:beth\",\"relation\":\"member\",\"object\":\"organization:bayer\"},{\"user\":\"user:charles\",\"relation\":\"member\",\"object\":\"organization:cup",{"_index":2572,"t":{"767":{"position":[[23335,216]]}}}],["user\":\"user:anne\",\"relation\":\"owner\",\"object\":\"document:2021",{"_index":2697,"t":{"809":{"position":[[16586,63]]},"815":{"position":[[9066,63]]}}}],["user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:a\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:b\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:c\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:b\"},{\"user\":\"user:carl\",\"relation\":\"project_manager\",\"object\":\"organization:c\"},{\"user\":\"organization:a\",\"relation\":\"owner\",\"object\":\"project:x\"},{\"user\":\"organization:b\",\"relation\":\"partner\",\"object\":\"project:x",{"_index":2111,"t":{"660":{"position":[[8300,515]]}}}],["user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:a\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:b\"},{\"user\":\"user:anne\",\"relation\":\"project_manager\",\"object\":\"organization:c\"},{\"user\":\"user:beth\",\"relation\":\"project_manager\",\"object\":\"organization:b\"},{\"user\":\"user:carl\",\"relation\":\"project_manager\",\"object\":\"organization:c\"},{\"user\":\"organization:a\",\"relation\":\"owner\",\"object\":\"project:x\"},{\"user\":\"organization:b\",\"relation\":\"partner\",\"object\":\"project:x",{"_index":2150,"t":{"672":{"position":[[7839,515]]}}}],["user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"document:z",{"_index":1166,"t":{"192":{"position":[[1529,64]]},"194":{"position":[[1690,64]]}}}],["user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"repo:contoso/tool",{"_index":2625,"t":{"786":{"position":[[6454,74]]}}}],["user\":\"user:anne\",\"relation\":\"reader\",\"object\":\"tweet:1",{"_index":1243,"t":{"247":{"position":[[4694,61]]}}}],["user\":\"user:anne\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1",{"_index":2177,"t":{"692":{"position":[[10104,77]]}}}],["user\":\"user:anne\",\"relation\":\"security_guard\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"it_admin\",\"object\":\"device:1\"},{\"user\":\"user:charles\",\"relation\":\"security_guard\",\"object\":\"device:1\"},{\"user\":\"user:dianne\",\"relation\":\"it_admin\",\"object\":\"device:1",{"_index":2196,"t":{"694":{"position":[[8569,270]]}}}],["user\":\"user:anne\",\"relation\":\"subscriber_member\",\"object\":\"plan:advanced\"},{\"user\":\"plan:advanced\",\"relation\":\"associated_plan\",\"object\":\"feature:data_preview",{"_index":2038,"t":{"630":{"position":[[5622,164]]}}}],["user\":\"user:anne\",\"relation\":\"user\",\"object\":\"ip",{"_index":2452,"t":{"742":{"position":[[22740,51]]},"744":{"position":[[6735,51]]}}}],["user\":\"user:anne\",\"relation\":\"user_in_context\",\"object\":\"organization:a",{"_index":2137,"t":{"668":{"position":[[9672,77]]},"670":{"position":[[6118,77]]}}}],["user\":\"user:anne\",\"relation\":\"writer\",\"object\":\"document:roadmap\"},{\"user\":\"user:charles\",\"relation\":\"writer\",\"object\":\"document:roadmap",{"_index":2080,"t":{"648":{"position":[[10792,142]]}}}],["user\":\"user:anne#follow",{"_index":1357,"t":{"288":{"position":[[15990,28]]}}}],["user\":\"user:anne#follower\",\"relation\":\"viewer\",\"object\":\"tweet:1",{"_index":1356,"t":{"288":{"position":[[15722,70]]}}}],["user\":\"user:becki",{"_index":1871,"t":{"543":{"position":[[4968,20]]}}}],["user\":\"user:becky\",\"relation\":\"repo_admin\",\"object\":\"org:xyz",{"_index":1870,"t":{"543":{"position":[[4830,66]]}}}],["user\":\"user:beth",{"_index":1481,"t":{"369":{"position":[[5934,19]]},"672":{"position":[[8889,19]]},"692":{"position":[[16100,19],[16177,19],[16258,19]]},"694":{"position":[[8985,19]]},"767":{"position":[[23804,19]]},"786":{"position":[[16699,19]]},"809":{"position":[[6612,19]]},"811":{"position":[[8696,19]]}}}],["user\":\"user:beth\",\"relation\":\"commenter\",\"object\":\"document:2021",{"_index":2693,"t":{"809":{"position":[[6463,67]]}}}],["user\":\"user:beth\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:beth\",\"relation\":\"device_renamer\",\"object\":\"device:1",{"_index":2181,"t":{"692":{"position":[[15810,218]]}}}],["user\":\"user:beth\",\"relation\":\"writer\",\"object\":\"repo:contoso/tool",{"_index":2628,"t":{"786":{"position":[[16553,74]]}}}],["user\":\"user:bethani",{"_index":2069,"t":{"646":{"position":[[5174,22]]}}}],["user\":\"user:bethany\",\"relation\":\"writer\",\"object\":\"document:roadmap",{"_index":2068,"t":{"646":{"position":[[4984,73]]}}}],["user\":\"user:bob",{"_index":1506,"t":{"385":{"position":[[4952,18]]},"467":{"position":[[4857,18]]},"505":{"position":[[5809,18]]},"583":{"position":[[5381,18]]},"718":{"position":[[34808,18]]},"722":{"position":[[30504,18]]}}}],["user\":\"user:bob\",\"relation\":\"channels_admin\",\"object\":\"workspace:sandcastle\"},{\"user\":\"user:david\",\"relation\":\"guest\",\"object\":\"workspace:sandcastle\"},{\"user\":\"user:emily\",\"relation\":\"member\",\"object\":\"workspace:sandcastl",{"_index":2301,"t":{"718":{"position":[[34453,228]]}}}],["user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"document:meeting_notes.doc",{"_index":1505,"t":{"385":{"position":[[4801,79]]}}}],["user\":\"user:bob\",\"relation\":\"editor\",\"object\":\"folder:not",{"_index":1758,"t":{"467":{"position":[[4720,65]]}}}],["user\":\"user:bob\",\"relation\":\"viewer\",\"object\":\"trip:europe\"},{\"user\":\"user:alice\",\"relation\":\"owner\",\"object\":\"trip:europ",{"_index":1820,"t":{"505":{"position":[[5573,128]]}}}],["user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"channel:marketing_internal\"},{\"user\":\"user:emily\",\"relation\":\"writer\",\"object\":\"channel:marketing_intern",{"_index":2335,"t":{"722":{"position":[[30273,159]]}}}],["user\":\"user:bob\",\"relation\":\"writer\",\"object\":\"document:plan",{"_index":1887,"t":{"569":{"position":[[1270,69],[2448,69],[3625,69],[4849,69],[5393,69],[5708,69],[6823,69],[7963,69],[9119,69],[10324,69],[10848,69],[11141,69],[12249,69],[13399,69],[14565,69],[15780,69],[16314,69],[16598,69]]}}}],["user\":\"user:carl",{"_index":1400,"t":{"318":{"position":[[5392,19]]},"660":{"position":[[9486,19]]},"672":{"position":[[9025,19]]}}}],["user\":\"user:carl\",\"relation\":\"blocked\",\"object\":\"document:plan",{"_index":1399,"t":{"318":{"position":[[5194,72]]}}}],["user\":\"user:carolin",{"_index":2386,"t":{"734":{"position":[[10104,23]]},"746":{"position":[[17131,23]]}}}],["user\":\"user:catherin",{"_index":2290,"t":{"718":{"position":[[17554,24]]}}}],["user\":\"user:catherine\",\"relation\":\"member\",\"object\":\"workspace:sandcastl",{"_index":2289,"t":{"718":{"position":[[17350,79]]}}}],["user\":\"user:charl",{"_index":2081,"t":{"648":{"position":[[11080,22],[16535,22]]},"694":{"position":[[9053,22]]},"696":{"position":[[8110,22]]},"767":{"position":[[23939,22]]},"788":{"position":[[8264,22]]},"811":{"position":[[8764,22]]}}}],["user\":\"user:charles\",\"relation\":\"editor\",\"object\":\"document:plan",{"_index":2077,"t":{"648":{"position":[[984,73],[2142,73],[3363,73],[4631,73],[5219,73],[5514,73]]}}}],["user\":\"user:charles\",\"relation\":\"member\",\"object\":\"team:contoso/engineering\"},{\"user\":\"team:contoso/engineering#member\",\"relation\":\"admin\",\"object\":\"repo:contoso/tool",{"_index":2638,"t":{"788":{"position":[[7960,175]]}}}],["user\":\"user:charles\",\"relation\":\"security_guard\",\"object\":\"device_group:group1\"},{\"user\":\"user:dianne\",\"relation\":\"it_admin\",\"object\":\"device_group:group1",{"_index":2209,"t":{"696":{"position":[[7878,160]]}}}],["user\":\"user:david",{"_index":2303,"t":{"718":{"position":[[34941,20]]},"722":{"position":[[40880,20]]}}}],["user\":\"user:david\",\"relation\":\"writer\",\"object\":\"channel:proj_marketing_campaign",{"_index":2337,"t":{"722":{"position":[[40722,86]]}}}],["user\":\"user:dian",{"_index":2658,"t":{"790":{"position":[[10873,20]]},"813":{"position":[[7712,20]]}}}],["user\":\"user:diane\",\"relation\":\"member\",\"object\":\"team:contoso/protocol",{"_index":2657,"t":{"790":{"position":[[10671,77]]}}}],["user\":\"user:diane\",\"relation\":\"viewer\",\"object\":\"document:2021",{"_index":2714,"t":{"813":{"position":[[7430,65]]}}}],["user\":\"user:diann",{"_index":2199,"t":{"694":{"position":[[9130,21]]},"696":{"position":[[8198,21]]}}}],["user\":\"user:emili",{"_index":2242,"t":{"698":{"position":[[8687,20],[8765,20],[8847,20]]},"718":{"position":[[35068,20]]},"722":{"position":[[24975,20],[30587,20]]}}}],["user\":\"user:emily\",\"relation\":\"live_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:emily\",\"relation\":\"recorded_video_viewer\",\"object\":\"device:1\"},{\"user\":\"user:emily\",\"relation\":\"device_renamer\",\"object\":\"device:1",{"_index":2241,"t":{"698":{"position":[[8394,221]]}}}],["user\":\"user:erik",{"_index":2671,"t":{"792":{"position":[[8205,19]]}}}],["user\":\"user:erik\",\"relation\":\"member\",\"object\":\"organization:contoso\"},{\"user\":\"organization:contoso\",\"relation\":\"owner\",\"object\":\"repo:contoso/tool",{"_index":2670,"t":{"792":{"position":[[7976,157]]}}}],["user\":\"user:mari",{"_index":2409,"t":{"740":{"position":[[15749,19]]}}}],["user\":\"user:mary\",\"relation\":\"account_manager\",\"object\":\"branch:east",{"_index":2408,"t":{"740":{"position":[[15544,71]]}}}],["user\":\"workspace:sandcastl",{"_index":2324,"t":{"722":{"position":[[12903,30],[12997,30],[13102,30]]}}}],["user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:general\"},{\"user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:marketing_internal\"},{\"user\":\"workspace:sandcastle\",\"relation\":\"parent_workspace\",\"object\":\"channel:proj_marketing_campaign",{"_index":2323,"t":{"722":{"position":[[12536,295]]}}}],["user\":\"workspace:sandcastle#memb",{"_index":2333,"t":{"722":{"position":[[18874,37],[35800,37]]}}}],["user\":\"workspace:sandcastle#member\",\"relation\":\"viewer\",\"object\":\"channel:gener",{"_index":2332,"t":{"722":{"position":[[18601,87]]}}}],["user\":\"workspace:sandcastle#member\",\"relation\":\"writer\",\"object\":\"channel:proj_marketing_campaign",{"_index":2336,"t":{"722":{"position":[[35625,103]]}}}],["user'",{"_index":47,"t":{"6":{"position":[[54,6],[262,6]]},"96":{"position":[[90,6],[205,6],[1017,6]]},"98":{"position":[[1887,6],[2579,6]]},"200":{"position":[[57,6]]},"219":{"position":[[45,6]]},"263":{"position":[[124,6],[756,6]]},"288":{"position":[[10255,6]]},"304":{"position":[[672,6]]},"355":{"position":[[1331,6]]},"361":{"position":[[89,6]]},"393":{"position":[[399,6]]},"453":{"position":[[384,6]]},"654":{"position":[[301,6],[577,6]]},"658":{"position":[[732,6]]},"660":{"position":[[322,6]]},"668":{"position":[[453,6],[2577,6]]},"728":{"position":[[333,6],[604,6]]},"732":{"position":[[734,6]]},"750":{"position":[[169,6]]},"754":{"position":[[391,6]]},"769":{"position":[[18390,6]]},"775":{"position":[[560,6]]},"798":{"position":[[560,6]]}}}],["user,device_group#it_admin",{"_index":2203,"t":{"696":{"position":[[849,28]]},"698":{"position":[[705,28]]}}}],["user,device_group#security_guard",{"_index":2204,"t":{"696":{"position":[[901,34]]},"698":{"position":[[757,34]]}}}],["user,domain#memb",{"_index":510,"t":{"54":{"position":[[281,20],[376,20],[451,20],[573,20],[668,20],[743,20]]},"811":{"position":[[472,20],[508,20],[556,20],[602,20]]},"813":{"position":[[572,20],[608,20],[656,20],[702,20],[14860,20],[14917,20],[14987,20],[15058,20]]},"815":{"position":[[617,20],[674,20],[744,20]]}}}],["user,folder#view",{"_index":549,"t":{"60":{"position":[[358,20]]}}}],["user,group#memb",{"_index":1682,"t":{"423":{"position":[[1472,19],[1577,19]]}}}],["user,org#memb",{"_index":1432,"t":{"345":{"position":[[159,17]]},"347":{"position":[[118,17],[151,17]]}}}],["user,organization#memb",{"_index":1588,"t":{"403":{"position":[[1147,26],[2880,26],[3872,26],[4559,26],[5359,26],[9477,26],[9519,26],[9561,26],[10001,26],[10066,26],[10108,26],[10150,26]]}}}],["user,role#assigne",{"_index":1467,"t":{"367":{"position":[[346,20],[392,20]]}}}],["user,team#memb",{"_index":1386,"t":{"306":{"position":[[515,18]]},"314":{"position":[[309,18]]},"316":{"position":[[396,18]]},"601":{"position":[[371,18]]},"605":{"position":[[182,18]]},"788":{"position":[[402,18],[845,18],[891,18],[935,18],[987,18],[1029,18]]},"792":{"position":[[1295,18],[1341,18],[1385,18],[1437,18],[1479,18]]}}}],["user,team#member,organization#memb",{"_index":2685,"t":{"792":{"position":[[20703,38],[20781,38],[20844,38],[20934,38],[20998,38],[21174,38]]}}}],["user,us",{"_index":1686,"t":{"425":{"position":[[838,13]]},"477":{"position":[[344,13]]}}}],["user,user:*,domain#memb",{"_index":2724,"t":{"815":{"position":[[815,27]]}}}],["user,user:*,team#memb",{"_index":529,"t":{"56":{"position":[[1112,25]]},"601":{"position":[[320,25]]},"605":{"position":[[131,25]]}}}],["user,user:*,user#follow",{"_index":1339,"t":{"279":{"position":[[412,27]]}}}],["user,workspace#legacy_admin,workspace#channels_admin,workspace#member,workspace#guest",{"_index":2312,"t":{"722":{"position":[[1718,87],[1821,87],[3137,87],[3240,87],[4746,87],[4849,87]]}}}],["user.claims.(jwt.mapclaim",{"_index":783,"t":{"96":{"position":[[2437,27]]},"98":{"position":[[3716,27],[3956,27]]}}}],["user:\"organization:contoso#memb",{"_index":1637,"t":{"405":{"position":[[2288,35]]}}}],["user:\"organization:fabrikam#memb",{"_index":1635,"t":{"405":{"position":[[2021,36]]}}}],["user:\"user:ann",{"_index":1629,"t":{"405":{"position":[[1649,17],[1880,17]]}}}],["user:\"user:beth",{"_index":1632,"t":{"405":{"position":[[1763,17],[2149,17]]}}}],["user:'user:bob",{"_index":1884,"t":{"569":{"position":[[1186,16],[6758,16]]},"571":{"position":[[1389,16]]}}}],["user:2b4840f2",{"_index":2576,"t":{"767":{"position":[[24561,13]]}}}],["user:3f7768e0",{"_index":279,"t":{"16":{"position":[[8094,13],[8902,13]]}}}],["user:4179af14",{"_index":245,"t":{"16":{"position":[[4702,13]]}}}],["user:alic",{"_index":1813,"t":{"505":{"position":[[1179,13],[3823,13],[17388,13],[18381,13],[19580,13],[21434,13],[21469,12],[22432,13],[23424,13],[24622,13],[26473,13],[26508,12]]},"521":{"position":[[817,13],[3125,13]]},"525":{"position":[[1064,13],[2064,13],[3270,13],[5145,13],[5180,12]]}}}],["user:ami",{"_index":2274,"t":{"718":{"position":[[2798,11],[5236,11],[8101,11],[9099,11],[10303,11],[12172,11],[12205,10],[36054,11],[37052,11],[38256,11],[40125,11],[40158,10]]},"720":{"position":[[883,11],[1876,11],[3075,11],[4929,11],[4962,10],[7583,11],[8575,11],[9773,11],[11624,11],[11657,10]]},"722":{"position":[[19990,11],[22710,11]]}}}],["user:ann",{"_index":244,"t":{"16":{"position":[[4689,9],[8081,9],[8891,10],[9354,12],[10297,9],[10571,12],[11023,12],[11096,9],[11869,12],[11982,9],[12076,9],[12197,9],[13014,12],[14007,12],[15206,12],[17060,12],[17094,11],[18626,12],[19619,12],[20818,12],[22672,12],[22706,11],[24373,12],[25368,12],[26586,12],[28439,12],[28486,11]]},"56":{"position":[[2021,12],[2431,12]]},"58":{"position":[[1550,12],[1725,12],[2023,12]]},"60":{"position":[[1916,9],[2306,12],[2502,12]]},"62":{"position":[[538,9],[725,12],[852,12],[1386,12]]},"64":{"position":[[615,9],[765,12],[907,12],[1365,12],[1626,12],[1789,12]]},"66":{"position":[[642,9],[777,12],[966,12],[1400,12],[1690,12],[1812,12]]},"114":{"position":[[22,9],[240,12],[453,12],[740,12]]},"126":{"position":[[34,9],[210,12],[435,12],[751,12],[1820,9]]},"188":{"position":[[33,9],[102,12]]},"192":{"position":[[145,12],[775,12]]},"194":{"position":[[159,12],[302,12],[934,12]]},"213":{"position":[[771,12],[3079,12]]},"215":{"position":[[858,12],[1848,12],[3044,12],[4889,12],[4923,11]]},"221":{"position":[[7188,12],[9570,12],[12566,12],[13556,12],[14752,12],[16597,12],[16631,11]]},"230":{"position":[[1035,12],[3341,12]]},"232":{"position":[[901,12],[1892,12],[3089,12],[4937,12],[4971,11]]},"245":{"position":[[164,12],[1158,12],[2138,12],[3324,12],[5139,12],[5173,11]]},"247":{"position":[[794,12],[3092,12],[5930,12],[6911,12],[8098,12],[9916,12],[9950,11]]},"269":{"position":[[262,10],[314,10],[350,10]]},"290":{"position":[[270,12],[424,12]]},"345":{"position":[[897,12],[1975,12],[2963,12],[4157,12],[5996,12],[6030,11]]},"369":{"position":[[945,12],[3639,12],[6915,12],[7908,12],[9107,12],[10961,12],[10995,11]]},"373":{"position":[[827,12],[1820,12],[3019,12],[4873,12],[4907,11]]},"537":{"position":[[896,12],[955,12],[3362,12],[3431,12]]},"605":{"position":[[1168,12],[2124,12],[3114,12],[4310,12],[6155,12],[6189,11]]},"630":{"position":[[823,12],[3617,12]]},"632":{"position":[[867,12],[1860,12],[3059,12],[4913,12],[4947,11]]},"634":{"position":[[6237,12],[7231,12],[8431,12],[10288,12],[10322,11],[11287,12],[12284,12],[13487,12],[15353,12],[15387,11]]},"642":{"position":[[651,12]]},"644":{"position":[[185,9],[1629,12],[2621,12],[3819,12],[5670,12],[5704,11],[6666,12],[7657,12],[8854,12],[10702,12],[10736,11]]},"648":{"position":[[6495,12],[9011,12],[11945,12],[14463,12],[17583,12],[18575,12],[19773,12],[21624,12],[21658,11],[22665,12],[23655,12],[24851,12],[26696,12],[26730,11]]},"660":{"position":[[3308,12],[3440,12],[3572,12],[3704,12],[5890,12],[6032,12],[6174,12],[6316,12]]},"666":{"position":[[401,12],[615,12],[903,12],[1878,12],[1912,11],[2292,12],[2508,12],[2798,12],[3779,12],[3813,11]]},"668":{"position":[[2979,12],[3194,12],[3483,12],[4461,12],[4495,11],[5539,12],[7983,12],[10232,12],[10446,12],[10734,12],[11709,12],[11743,11]]},"670":{"position":[[1900,12],[4400,12],[6764,12],[6866,12],[7093,12],[7591,12],[7725,12],[8965,12],[8999,11],[9181,12],[9589,12],[9691,12],[9919,12],[10418,12],[10552,12],[11795,12],[11829,11],[12011,12]]},"672":{"position":[[2847,12],[2979,12],[3111,12],[5429,12],[5571,12],[5713,12]]},"692":{"position":[[1188,12],[3508,12],[6144,12],[8472,12],[17500,12],[18492,12],[19690,12],[21541,12],[21575,11],[22618,12],[23608,12],[24804,12],[26649,12],[26683,11]]},"694":{"position":[[3606,12],[6494,12]]},"734":{"position":[[3334,12],[6862,12]]},"740":{"position":[[1183,12],[2171,12],[3365,12],[5204,12],[5238,11]]},"742":{"position":[[18060,12],[18183,12],[20802,12],[20935,12],[24192,12],[25180,12],[26374,12],[28213,12],[28247,11]]},"744":{"position":[[1862,12],[2012,12],[4714,12],[4874,12],[8538,12],[8644,12],[8725,12],[9711,12],[11240,12],[11378,12],[11461,12],[13691,12],[13725,11],[13915,12],[13997,12],[14994,12],[15100,12],[15181,12],[16168,12],[17698,12],[17836,12],[17919,12],[20152,12],[20186,11],[20376,12],[20458,12]]},"746":{"position":[[4062,12],[10550,12]]},"767":{"position":[[18069,12],[21119,12],[25747,12],[26738,12],[27935,12],[29783,12],[29817,11],[30926,12],[31918,12],[33116,12],[34967,12],[35001,11]]},"769":{"position":[[1048,12],[2040,12],[3238,12],[5089,12],[5123,11],[8383,12],[9371,12],[10565,12],[12404,12],[12438,11],[31134,12],[32121,12],[33314,12],[35150,12],[35184,11],[35736,12],[37045,12],[37298,12],[40121,12],[41108,12],[42301,12],[44137,12],[44171,11]]},"786":{"position":[[2506,12],[4828,12],[7574,12],[8567,12],[9766,12],[11620,12],[11654,11]]},"809":{"position":[[12642,12],[14962,12],[17661,12],[18653,12],[19851,12],[21702,12],[21736,11],[22698,12],[23692,12],[24892,12],[26749,12],[26783,11],[29337,12],[30329,12],[31527,12],[33378,12],[33412,11],[34374,12],[35367,12],[36566,12],[38420,12],[38454,11]]},"811":{"position":[[2837,12],[5967,12]]},"815":{"position":[[3540,12],[6718,12],[10698,12],[11698,12],[12904,12],[14779,12],[14813,11]]}}}],["user:anne\",\"relation\":\"viewer\",\"object\":\"document:roadmap",{"_index":286,"t":{"16":{"position":[[8223,60]]}}}],["user:anne#follow",{"_index":1353,"t":{"288":{"position":[[10997,21],[13750,21]]}}}],["user:anne'",{"_index":1167,"t":{"194":{"position":[[96,11]]}}}],["user:becki",{"_index":1194,"t":{"215":{"position":[[6023,13],[7015,13],[8213,13],[10064,13],[10099,12]]},"221":{"position":[[17589,13],[18581,13],[19779,13],[21630,13],[21665,12]]},"290":{"position":[[317,13],[373,13]]},"306":{"position":[[1341,13]]},"312":{"position":[[997,13],[1988,13],[3185,13],[5033,13],[5068,12]]},"318":{"position":[[11835,13],[12826,13],[14023,13],[15871,13],[15906,12]]},"437":{"position":[[1779,13],[2028,13]]},"445":{"position":[[997,13],[1991,13],[3191,13],[5048,13],[5083,12]]},"449":{"position":[[957,13],[1952,13],[3153,13],[5013,13],[5048,12]]},"543":{"position":[[914,13],[3220,13]]},"545":{"position":[[837,13],[1816,13],[3001,13],[4813,13],[4848,12],[5783,13],[6762,13],[7947,13],[9759,13],[9794,12]]},"547":{"position":[[5772,13],[6752,13],[7938,13],[9753,13],[9788,12]]}}}],["user:beth",{"_index":1470,"t":{"369":{"position":[[1061,12],[3765,12]]},"605":{"position":[[7717,12],[8707,12],[9903,12],[11748,12],[11782,11]]},"666":{"position":[[4209,12],[4423,12],[4711,12],[5686,12],[5720,11],[6105,12],[6322,12],[6613,12],[7597,12],[7631,11]]},"672":{"position":[[3243,12],[5855,12]]},"692":{"position":[[11132,12],[11205,12],[11282,12],[13858,12],[13941,12],[14028,12]]},"694":{"position":[[3676,12],[6574,12]]},"767":{"position":[[18189,12],[21249,12]]},"786":{"position":[[12605,12],[14927,12],[17630,12],[18623,12],[19822,12],[21676,12],[21710,11],[22674,12],[23668,12],[24868,12],[26725,12],[26759,11],[29825,12],[30818,12],[32017,12],[33871,12],[33905,11],[34869,12],[35862,12],[37061,12],[38915,12],[38949,11]]},"809":{"position":[[2503,12],[4831,12],[7592,12],[8588,12],[9790,12],[11653,12],[11687,11]]},"811":{"position":[[2901,12],[6041,12]]},"815":{"position":[[15867,12],[16869,12],[18077,12],[19958,12],[19992,11],[20973,12],[21977,12],[23187,12],[25074,12],[25108,11]]}}}],["user:bethani",{"_index":2064,"t":{"646":{"position":[[906,15],[3316,15],[6130,15],[7125,15],[8326,15],[10186,15],[10223,14]]}}}],["user:bob",{"_index":1416,"t":{"328":{"position":[[946,11]]},"338":{"position":[[1031,11],[2029,11],[3233,11],[5102,11],[5135,10]]},"347":{"position":[[1053,12]]},"385":{"position":[[833,11],[3165,11]]},"387":{"position":[[931,11],[1929,11],[3133,11],[5002,11],[5035,10],[6181,11],[7180,11],[8385,11],[10257,11],[10290,10]]},"419":{"position":[[1178,11]]},"421":{"position":[[605,10],[659,11]]},"423":{"position":[[104,11]]},"467":{"position":[[808,11],[3112,11]]},"471":{"position":[[1004,11],[2002,11],[3206,11],[5075,11],[5108,10]]},"485":{"position":[[5795,11]]},"487":{"position":[[321,9],[1136,11],[2130,11],[3330,11],[5187,11],[5220,10]]},"505":{"position":[[1078,11],[3712,11],[6867,11],[7858,11],[9055,11],[10903,11],[10936,10],[12282,11],[13273,11],[14470,11],[16318,11],[16351,10]]},"553":{"position":[[963,11]]},"562":{"position":[[996,11],[1985,11],[3180,11],[5022,11],[5055,10]]},"569":{"position":[[3534,11],[5538,11],[5564,10],[9049,11],[10993,11],[11019,10]]},"571":{"position":[[3501,11],[5151,11],[5177,10]]},"576":{"position":[[10787,10]]},"583":{"position":[[883,11],[975,11],[1985,11],[3372,11],[3539,11],[5501,11],[5601,11],[5647,10],[5909,11]]},"718":{"position":[[28116,11],[29185,11],[32235,11]]},"722":{"position":[[25908,11],[28458,11]]}}}],["user:carl",{"_index":1387,"t":{"306":{"position":[[1456,12]]},"312":{"position":[[6027,12],[7017,12],[8213,12],[10058,12],[10092,11]]},"318":{"position":[[1093,12],[3519,12],[6601,12],[7592,12],[8789,12],[10637,12],[10671,11]]},"437":{"position":[[1904,12],[2151,12]]},"445":{"position":[[6048,12],[7041,12],[8240,12],[10094,12],[10128,11]]},"449":{"position":[[6172,12],[7167,12],[8368,12],[10228,12],[10262,11]]},"660":{"position":[[3836,12],[6458,12]]},"666":{"position":[[8019,12],[8234,12],[8523,12],[9501,12],[9535,11],[9921,12],[10138,12],[10429,12],[11413,12],[11447,11]]},"672":{"position":[[3375,12],[5997,12]]}}}],["user:carolin",{"_index":2357,"t":{"734":{"position":[[3473,16],[7011,16]]},"740":{"position":[[6294,16],[7286,16],[8484,16],[10335,16],[10373,15]]},"746":{"position":[[4201,16],[10699,16]]}}}],["user:catherin",{"_index":2286,"t":{"718":{"position":[[13224,17],[15662,17],[18484,17],[19482,17],[20686,17],[22555,17],[22594,16],[23640,17],[24645,17],[25856,17],[27746,17],[27785,16]]}}}],["user:charl",{"_index":2055,"t":{"642":{"position":[[729,15]]},"648":{"position":[[6565,15],[9091,15],[12015,15],[14543,15]]},"694":{"position":[[3740,15],[6648,15],[10111,15],[11106,15],[12307,15],[14167,15],[14204,14]]},"696":{"position":[[3509,15],[6061,15]]},"767":{"position":[[18320,15],[21390,15]]},"788":{"position":[[3082,15],[5918,15],[9569,15],[10564,15],[11765,15],[13625,15],[13662,14]]},"811":{"position":[[2965,15],[6115,15],[10040,15],[11036,15],[12238,15],[14101,15],[14138,14]]}}}],["user:charli",{"_index":1973,"t":{"605":{"position":[[12608,15],[12832,12],[13959,15],[14952,15],[16151,15],[18005,15],[18042,14]]}}}],["user:dani",{"_index":1978,"t":{"605":{"position":[[18991,12],[20214,12],[21204,12],[22400,12],[24245,12],[24279,11]]}}}],["user:david",{"_index":2294,"t":{"718":{"position":[[28247,13],[29314,13],[32374,13]]},"722":{"position":[[36726,13],[39072,13],[41999,13],[42989,13],[44185,13],[46030,13],[46065,12],[47091,13],[48096,13],[49307,13],[51197,13],[51232,12]]}}}],["user:dian",{"_index":2651,"t":{"790":{"position":[[6553,13],[8987,13],[11772,13],[12765,13],[13964,13],[15818,13],[15853,12]]},"813":{"position":[[2662,13],[5438,13],[9170,13],[10169,13],[11374,13],[13246,13],[13281,12],[14722,12]]}}}],["user:diann",{"_index":2189,"t":{"694":{"position":[[3813,14],[6731,14]]},"696":{"position":[[3593,14],[6155,14]]}}}],["user:emili",{"_index":1984,"t":{"605":{"position":[[24910,13],[25871,13],[26862,13],[28059,13],[29907,13],[29942,12]]},"698":{"position":[[3704,13],[3778,13],[3856,13],[6436,13],[6520,13],[6608,13],[10087,13],[11081,13],[12281,13],[14138,13],[14173,12]]},"718":{"position":[[28372,13],[29437,13],[32507,13]]},"722":{"position":[[20058,13],[22788,13],[25987,13],[28547,13]]}}}],["user:erik",{"_index":2664,"t":{"792":{"position":[[3619,12],[6165,12],[9751,12],[10748,12],[11951,12],[13817,12],[13851,11]]},"815":{"position":[[26172,12],[27174,12],[28382,12],[30263,12],[30297,11],[31278,12],[32280,12],[33488,12],[35369,12],[35403,11]]}}}],["user:fr",{"_index":1988,"t":{"607":{"position":[[1012,12],[1969,12],[2960,12],[4157,12],[6005,12],[6039,11]]}}}],["user:gabriel",{"_index":1993,"t":{"607":{"position":[[7638,15],[8632,15],[9832,15],[11689,15],[11726,14]]}}}],["user:henri",{"_index":1997,"t":{"607":{"position":[[12356,13],[13399,13],[14391,13],[15589,13],[17440,13],[17475,12]]}}}],["user:ingr",{"_index":2001,"t":{"607":{"position":[[18178,14],[19141,14],[20133,14],[21331,14],[23182,14],[23218,13]]}}}],["user:john",{"_index":1666,"t":{"419":{"position":[[1560,12]]},"423":{"position":[[257,12]]}}}],["user:mari",{"_index":2402,"t":{"740":{"position":[[11415,12],[13855,12],[16650,12],[17639,12],[18834,12],[20676,12],[20710,11]]}}}],["user:x",{"_index":1880,"t":{"564":{"position":[[47,6],[254,6]]},"769":{"position":[[20012,9],[20157,9]]}}}],["user=\"account:check",{"_index":2375,"t":{"734":{"position":[[8991,22]]},"746":{"position":[[14015,22]]}}}],["user=\"ann",{"_index":1219,"t":{"221":{"position":[[5475,12]]},"742":{"position":[[8604,12]]}}}],["user=\"branch:west",{"_index":2373,"t":{"734":{"position":[[8840,17]]},"746":{"position":[[13864,17]]}}}],["user=\"device_group:group1#it_admin",{"_index":2223,"t":{"696":{"position":[[13876,36],[13966,36]]}}}],["user=\"device_group:group1#security_guard",{"_index":2220,"t":{"696":{"position":[[13672,42],[13774,42]]}}}],["user=\"diann",{"_index":2229,"t":{"696":{"position":[[19699,14]]}}}],["user=\"document:2021",{"_index":2713,"t":{"813":{"position":[[6895,19]]}}}],["user=\"domain:xyz#memb",{"_index":2706,"t":{"811":{"position":[[7697,25]]},"815":{"position":[[8373,25]]}}}],["user=\"folder:budget",{"_index":2013,"t":{"622":{"position":[[4899,22]]},"624":{"position":[[4295,22]]}}}],["user=\"folder:not",{"_index":1761,"t":{"469":{"position":[[4510,20]]}}}],["user=\"folder:product#par",{"_index":1710,"t":{"429":{"position":[[2974,29]]}}}],["user=\"ip",{"_index":2438,"t":{"742":{"position":[[15696,8]]},"746":{"position":[[15290,8]]}}}],["user=\"org:xyz",{"_index":1863,"t":{"541":{"position":[[4515,15],[4579,15]]},"547":{"position":[[4177,15]]}}}],["user=\"organization:a",{"_index":2107,"t":{"660":{"position":[[7791,22]]},"672":{"position":[[7330,22]]}}}],["user=\"organization:alpha",{"_index":2554,"t":{"767":{"position":[[15592,26]]},"769":{"position":[[17068,26],[26813,26]]}}}],["user=\"organization:b",{"_index":2109,"t":{"660":{"position":[[7907,22]]},"672":{"position":[[7446,22]]}}}],["user=\"organization:bay",{"_index":2557,"t":{"767":{"position":[[15748,26],[39301,26]]}}}],["user=\"organization:contoso",{"_index":2669,"t":{"792":{"position":[[7444,28]]}}}],["user=\"organization:contoso#memb",{"_index":2682,"t":{"792":{"position":[[19718,35]]}}}],["user=\"organization:cup",{"_index":2559,"t":{"767":{"position":[[15905,25]]}}}],["user=\"plan:advanc",{"_index":2035,"t":{"630":{"position":[[5087,21]]},"634":{"position":[[4440,21]]}}}],["user=\"plan:enterpris",{"_index":2538,"t":{"767":{"position":[[7663,23],[7833,23],[8006,23]]}}}],["user=\"plan:fre",{"_index":2534,"t":{"767":{"position":[[7206,17],[44362,17]]}}}],["user=\"plan:team",{"_index":2536,"t":{"767":{"position":[[7351,17],[7509,17]]}}}],["user=\"role:media",{"_index":1491,"t":{"371":{"position":[[5178,16],[5356,16]]}}}],["user=\"team:contoso/engineering#memb",{"_index":2637,"t":{"788":{"position":[[7417,39]]}}}],["user=\"team:contoso/protocols#memb",{"_index":2647,"t":{"790":{"position":[[4474,37]]}}}],["user=\"team:writers#memb",{"_index":1841,"t":{"523":{"position":[[4839,27]]}}}],["user=\"timeslot:10_11",{"_index":2485,"t":{"746":{"position":[[14479,22]]}}}],["user=\"timeslot:11_12",{"_index":2435,"t":{"742":{"position":[[15358,22]]},"746":{"position":[[14638,22]]}}}],["user=\"timeslot:12_13",{"_index":2437,"t":{"742":{"position":[[15516,22]]},"746":{"position":[[14796,22]]}}}],["user=\"timeslot:13_14",{"_index":2486,"t":{"746":{"position":[[14953,22]]}}}],["user=\"timeslot:14_15",{"_index":2487,"t":{"746":{"position":[[15110,22]]}}}],["user=\"timeslot:8_9",{"_index":2483,"t":{"746":{"position":[[14165,20]]}}}],["user=\"timeslot:9_10",{"_index":2484,"t":{"746":{"position":[[14321,21]]}}}],["user=\"us",{"_index":1343,"t":{"288":{"position":[[4256,14],[9165,14],[15216,14]]},"485":{"position":[[4592,14]]},"815":{"position":[[8539,14]]}}}],["user=\"user:alic",{"_index":1818,"t":{"505":{"position":[[5060,18],[20721,18],[25762,18]]},"521":{"position":[[4222,18]]},"525":{"position":[[4418,18]]}}}],["user=\"user:ami",{"_index":2278,"t":{"718":{"position":[[6397,16],[11449,16],[39402,16]]},"720":{"position":[[4216,16],[10913,16]]},"722":{"position":[[23994,16]]}}}],["user=\"user:ann",{"_index":417,"t":{"16":{"position":[[16347,17],[21959,17],[27793,17]]},"114":{"position":[[1143,17]]},"126":{"position":[[1230,17]]},"192":{"position":[[1141,17]]},"194":{"position":[[1301,17]]},"213":{"position":[[4176,17]]},"215":{"position":[[4182,17]]},"221":{"position":[[10703,17],[15890,17]]},"230":{"position":[[4437,17]]},"232":{"position":[[4228,17]]},"245":{"position":[[4452,17]]},"247":{"position":[[4184,17],[9227,17]]},"345":{"position":[[5293,17]]},"369":{"position":[[4910,17],[10248,17]]},"373":{"position":[[4160,17]]},"537":{"position":[[4520,17],[4586,17]]},"605":{"position":[[5448,17]]},"630":{"position":[[4938,17]]},"632":{"position":[[4200,17]]},"634":{"position":[[9573,17],[14632,17]]},"644":{"position":[[4959,17],[9993,17]]},"648":{"position":[[10194,17],[15647,17],[20913,17],[25989,17]]},"660":{"position":[[7123,17],[7261,17],[7399,17],[7537,17]]},"666":{"position":[[1307,17],[3204,17]]},"668":{"position":[[3888,17],[9147,17],[11138,17]]},"670":{"position":[[5592,17],[8143,17],[10971,17]]},"672":{"position":[[6662,17],[6800,17],[6938,17]]},"692":{"position":[[4611,17],[9579,17],[20830,17],[25942,17]]},"694":{"position":[[7827,17]]},"734":{"position":[[8514,17]]},"740":{"position":[[4501,17]]},"742":{"position":[[22097,17],[22226,17],[27510,17]]},"744":{"position":[[6064,17],[6220,17],[12596,17],[19055,17]]},"746":{"position":[[13538,17]]},"767":{"position":[[22550,17],[29074,17],[34256,17]]},"769":{"position":[[4378,17],[11701,17],[34449,17],[43436,17]]},"786":{"position":[[5932,17],[10907,17]]},"809":{"position":[[16065,17],[20991,17],[26034,17],[32667,17],[37707,17]]},"811":{"position":[[7420,17]]},"815":{"position":[[8213,17],[14052,17]]}}}],["user=\"user:anne#follow",{"_index":1355,"t":{"288":{"position":[[15053,26]]}}}],["user=\"user:becki",{"_index":1195,"t":{"215":{"position":[[9353,18]]},"221":{"position":[[20919,18]]},"312":{"position":[[4324,18]]},"318":{"position":[[15162,18]]},"445":{"position":[[4333,18]]},"449":{"position":[[4296,18]]},"543":{"position":[[4316,18]]},"545":{"position":[[4128,18],[9074,18]]},"547":{"position":[[9066,18]]}}}],["user=\"user:beth",{"_index":1476,"t":{"369":{"position":[[5032,17]]},"605":{"position":[[11041,17]]},"666":{"position":[[5115,17],[7020,17]]},"672":{"position":[[7076,17]]},"692":{"position":[[15128,17],[15208,17],[15292,17]]},"694":{"position":[[7904,17]]},"767":{"position":[[22676,17]]},"786":{"position":[[16031,17],[20963,17],[26010,17],[33158,17],[38202,17]]},"809":{"position":[[5938,17],[10934,17]]},"811":{"position":[[7491,17]]},"815":{"position":[[19227,17],[24339,17]]}}}],["user=\"user:bethani",{"_index":2067,"t":{"646":{"position":[[4463,20],[9469,20]]}}}],["user=\"user:bob",{"_index":1421,"t":{"338":{"position":[[4379,16]]},"385":{"position":[[4274,16]]},"387":{"position":[[4279,16],[9532,16]]},"467":{"position":[[4207,16]]},"471":{"position":[[4352,16]]},"487":{"position":[[4472,16]]},"505":{"position":[[4953,16],[10194,16],[15609,16]]},"562":{"position":[[4317,16]]},"569":{"position":[[4695,16],[10189,16]]},"571":{"position":[[4544,16]]},"583":{"position":[[4709,16],[4824,16]]},"718":{"position":[[33666,16]]},"722":{"position":[[29658,16]]}}}],["user=\"user:carl",{"_index":1390,"t":{"312":{"position":[[9351,17]]},"318":{"position":[[4674,17],[9928,17]]},"445":{"position":[[9381,17]]},"449":{"position":[[9511,17]]},"660":{"position":[[7675,17]]},"666":{"position":[[8928,17],[10836,17]]},"672":{"position":[[7214,17]]}}}],["user=\"user:carolin",{"_index":2370,"t":{"734":{"position":[[8659,21]]},"740":{"position":[[9624,21]]},"746":{"position":[[13683,21]]}}}],["user=\"user:catherin",{"_index":2288,"t":{"718":{"position":[[16823,22],[21832,22],[27009,22]]}}}],["user=\"user:charl",{"_index":2079,"t":{"648":{"position":[[10271,20],[15724,20]]},"694":{"position":[[7975,20],[13450,20]]},"696":{"position":[[7262,20]]},"767":{"position":[[22813,20]]},"788":{"position":[[7260,20],[12908,20]]},"811":{"position":[[7562,20],[13382,20]]}}}],["user=\"user:charli",{"_index":1974,"t":{"605":{"position":[[17292,20]]}}}],["user=\"user:dani",{"_index":1980,"t":{"605":{"position":[[23538,17]]}}}],["user=\"user:david",{"_index":2299,"t":{"718":{"position":[[33801,18]]},"722":{"position":[[40188,18],[45323,18],[50460,18]]}}}],["user=\"user:dian",{"_index":2655,"t":{"790":{"position":[[10146,18],[15105,18]]},"813":{"position":[[6750,18],[12521,18]]}}}],["user=\"user:diann",{"_index":2195,"t":{"694":{"position":[[8055,19]]},"696":{"position":[[7353,19]]}}}],["user=\"user:emili",{"_index":1985,"t":{"605":{"position":[[29198,18]]},"698":{"position":[[7709,18],[7790,18],[7875,18],[13423,18]]},"718":{"position":[[33930,18]]},"722":{"position":[[24069,18],[29744,18]]}}}],["user=\"user:erik",{"_index":2667,"t":{"792":{"position":[[7363,17],[13096,17]]},"815":{"position":[[29532,17],[34638,17]]}}}],["user=\"user:fr",{"_index":1989,"t":{"607":{"position":[[5296,17]]}}}],["user=\"user:gabriel",{"_index":1994,"t":{"607":{"position":[[10974,20]]}}}],["user=\"user:henri",{"_index":1998,"t":{"607":{"position":[[16729,18]]}}}],["user=\"user:ingr",{"_index":2002,"t":{"607":{"position":[[22471,19]]}}}],["user=\"user:mari",{"_index":2406,"t":{"740":{"position":[[15017,17],[19971,17]]}}}],["user=\"workspace:sandcastl",{"_index":2318,"t":{"722":{"position":[[11777,28],[11874,28],[11982,28]]}}}],["user=\"workspace:sandcastle#memb",{"_index":2331,"t":{"722":{"position":[[18066,35],[35074,35]]}}}],["user=x",{"_index":306,"t":{"16":{"position":[[9904,8]]},"40":{"position":[[81,8]]},"769":{"position":[[6139,8]]}}}],["user_id",{"_index":1603,"t":{"403":{"position":[[4062,12],[4742,12]]},"415":{"position":[[528,8]]},"425":{"position":[[2753,7]]},"571":{"position":[[365,9]]}}}],["user_in_context",{"_index":2131,"t":{"668":{"position":[[411,17],[621,15],[1008,17],[1179,15],[1296,15],[1319,16],[1525,17],[1869,17],[1898,18],[2193,18],[5562,18],[8007,18]]},"670":{"position":[[1080,15],[1923,18],[4424,18],[6889,18],[7748,18],[9205,18],[9714,18],[10575,18],[12035,18]]},"672":{"position":[[186,15],[303,15],[326,16],[885,17],[1229,17],[1258,18],[1553,18]]}}}],["usernam",{"_index":62,"t":{"6":{"position":[[269,8]]}}}],["users/myuser/key/server.crt",{"_index":989,"t":{"144":{"position":[[733,28],[2182,28]]}}}],["users/myuser/key/server.key",{"_index":990,"t":{"144":{"position":[[767,28],[2216,28]]}}}],["userset",{"_index":251,"t":{"16":{"position":[[4907,9],[6055,7],[6091,7],[10799,7],[10978,7],[30216,7]]},"56":{"position":[[1739,8]]},"60":{"position":[[3159,8]]},"62":{"position":[[1033,7],[1157,7],[1320,8]]},"64":{"position":[[1097,7],[1165,7],[1265,8]]},"66":{"position":[[149,8],[182,8],[1189,7],[1260,7]]},"259":{"position":[[3028,8]]},"306":{"position":[[2360,8]]},"310":{"position":[[653,8]]},"324":{"position":[[366,8]]},"343":{"position":[[2,7],[51,8],[397,8]]},"345":{"position":[[687,7],[854,7],[1098,7],[1172,8]]},"347":{"position":[[712,8],[826,7],[886,9],[1133,10],[1230,8]]},"349":{"position":[[372,9],[1127,9],[1179,8],[1294,9]]},"351":{"position":[[97,7],[160,7]]},"423":{"position":[[689,11],[789,8],[2997,8]]},"429":{"position":[[436,8]]},"471":{"position":[[6168,7]]},"485":{"position":[[5915,7],[6034,8]]},"574":{"position":[[54,9],[164,9]]},"605":{"position":[[1047,7],[12360,8],[18627,8]]},"607":{"position":[[891,7],[12188,9]]},"718":{"position":[[1809,7]]},"769":{"position":[[18579,8],[18701,9]]},"786":{"position":[[1657,7]]},"788":{"position":[[8636,8],[8755,7]]},"792":{"position":[[15030,8]]},"809":{"position":[[1570,7],[28384,7],[28445,7]]},"811":{"position":[[1883,7],[9101,8],[9226,7]]},"813":{"position":[[14531,8]]}}}],["userset\":\"document:planning#writ",{"_index":1934,"t":{"576":{"position":[[5446,36]]}}}],["userset_rewrit",{"_index":594,"t":{"68":{"position":[[468,15],[592,15]]}}}],["usersrelatedtoobjecta",{"_index":1826,"t":{"505":{"position":[[11329,23]]}}}],["userx",{"_index":1882,"t":{"564":{"position":[[212,5]]}}}],["usual",{"_index":1963,"t":{"591":{"position":[[287,7]]}}}],["utc",{"_index":2355,"t":{"734":{"position":[[2523,3]]},"736":{"position":[[98,4],[184,3],[334,4],[383,4]]}}}],["utf8",{"_index":737,"t":{"96":{"position":[[460,8],[537,8]]}}}],["v",{"_index":776,"t":{"96":{"position":[[2175,4]]},"98":{"position":[[3385,4]]},"152":{"position":[[654,1],[736,1]]}}}],["v0.3.3",{"_index":1060,"t":{"152":{"position":[[740,6],[765,6]]}}}],["v0.3.5",{"_index":1057,"t":{"152":{"position":[[658,6],[683,6]]},"154":{"position":[[67,7]]}}}],["v1.0",{"_index":1644,"t":{"415":{"position":[[33,4]]}}}],["valid",{"_index":564,"t":{"60":{"position":[[3238,10],[3352,10]]},"96":{"position":[[77,8],[144,10]]},"263":{"position":[[169,9]]},"387":{"position":[[86,5]]},"399":{"position":[[4284,5]]},"401":{"position":[[3406,5]]},"415":{"position":[[283,12],[807,6]]},"419":{"position":[[1998,8],[3881,10]]},"421":{"position":[[306,5]]},"423":{"position":[[51,5],[362,6],[1133,5]]},"429":{"position":[[35,8],[564,10]]},"587":{"position":[[306,8]]},"624":{"position":[[86,5]]},"632":{"position":[[3,8]]},"682":{"position":[[159,8]]},"686":{"position":[[42,8]]},"702":{"position":[[129,8]]},"710":{"position":[[350,8]]},"714":{"position":[[42,8]]},"722":{"position":[[41152,6]]},"726":{"position":[[154,6],[317,8]]},"736":{"position":[[42,8]]},"758":{"position":[[224,8]]},"762":{"position":[[42,8]]},"779":{"position":[[181,8]]},"790":{"position":[[5436,5]]},"802":{"position":[[219,8]]}}}],["valu",{"_index":622,"t":{"78":{"position":[[89,6],[375,6],[661,6],[947,6],[1233,6]]},"90":{"position":[[72,6],[436,6]]},"108":{"position":[[89,6],[412,6],[735,6],[1058,6],[1381,6]]},"120":{"position":[[89,6],[412,6],[735,6],[1058,6],[1381,6]]},"140":{"position":[[559,6]]},"150":{"position":[[174,6]]},"186":{"position":[[89,6],[376,6],[663,6],[950,6],[1237,6]]},"253":{"position":[[89,6],[411,6],[733,6],[1020,6],[1307,6]]},"425":{"position":[[1188,5],[3169,5]]},"585":{"position":[[518,5],[648,5]]},"644":{"position":[[850,5]]},"788":{"position":[[8654,5]]},"792":{"position":[[15446,5]]},"811":{"position":[[9119,5]]}}}],["var",{"_index":390,"t":{"16":{"position":[[14554,3],[15049,3],[15115,3],[20166,3],[20661,3],[20727,3],[25944,3],[26439,3],[26490,3],[26642,3]]},"80":{"position":[[2647,3],[3109,3],[3854,3],[4349,3],[4400,3],[4836,3],[4936,3]]},"86":{"position":[[1254,3],[1564,3],[1611,3]]},"96":{"position":[[1742,3],[2071,3]]},"98":{"position":[[2952,3],[3281,3]]},"112":{"position":[[1546,3],[2041,3]]},"114":{"position":[[649,3]]},"124":{"position":[[1546,3],[2041,3]]},"126":{"position":[[655,3],[807,3]]},"170":{"position":[[1164,3],[1562,3]]},"172":{"position":[[1998,3],[2655,3]]},"190":{"position":[[1546,3],[2041,3]]},"213":{"position":[[2432,3],[2927,3]]},"215":{"position":[[2392,3],[2887,3],[2953,3],[7561,3],[8056,3],[8122,3]]},"221":{"position":[[3689,3],[4184,3],[4250,3],[8884,3],[9379,3],[14100,3],[14595,3],[14661,3],[19127,3],[19622,3],[19688,3]]},"230":{"position":[[2693,3],[3188,3]]},"232":{"position":[[2437,3],[2932,3],[2998,3]]},"245":{"position":[[2672,3],[3167,3],[3233,3]]},"247":{"position":[[2444,3],[2939,3],[7446,3],[7941,3],[8007,3]]},"257":{"position":[[1522,3],[2017,3]]},"259":{"position":[[92,3],[107,3],[135,3],[358,3],[373,3],[401,3],[1245,3],[1260,3],[1384,3],[1726,3],[1741,3],[1865,3]]},"261":{"position":[[1075,3],[1096,3],[1124,3],[1364,3],[1385,3],[1413,3],[2077,3],[2098,3],[2222,3],[2581,3],[2602,3],[2726,3]]},"288":{"position":[[2521,3],[3016,3],[7428,3],[7923,3],[13066,3],[13561,3]]},"312":{"position":[[2533,3],[3028,3],[3094,3],[7561,3],[8056,3],[8122,3]]},"318":{"position":[[2818,3],[3313,3],[8137,3],[8632,3],[8698,3],[13371,3],[13866,3],[13932,3]]},"338":{"position":[[2581,3],[3076,3],[3142,3]]},"345":{"position":[[3505,3],[4000,3],[4066,3]]},"369":{"position":[[2949,3],[3444,3],[8455,3],[8950,3],[9016,3]]},"371":{"position":[[3071,3],[3566,3]]},"373":{"position":[[2367,3],[2862,3],[2928,3]]},"385":{"position":[[2518,3],[3013,3]]},"387":{"position":[[2481,3],[2976,3],[3042,3],[7733,3],[8228,3],[8294,3]]},"445":{"position":[[2539,3],[3034,3],[3100,3],[7588,3],[8083,3],[8149,3]]},"449":{"position":[[2501,3],[2996,3],[3062,3],[7716,3],[8211,3],[8277,3]]},"467":{"position":[[2465,3],[2960,3]]},"469":{"position":[[2627,3],[3122,3]]},"471":{"position":[[2554,3],[3049,3],[3115,3]]},"485":{"position":[[2755,3],[3250,3]]},"487":{"position":[[2678,3],[3173,3],[3239,3]]},"505":{"position":[[3029,3],[3524,3],[8403,3],[8898,3],[8964,3],[13818,3],[14313,3],[14379,3],[18928,3],[19423,3],[19489,3],[23970,3],[24465,3],[24531,3]]},"521":{"position":[[2478,3],[2973,3]]},"523":{"position":[[2965,3],[3460,3]]},"525":{"position":[[2618,3],[3113,3],[3179,3]]},"537":{"position":[[2715,3],[3210,3]]},"541":{"position":[[2714,3],[3209,3]]},"543":{"position":[[2573,3],[3068,3]]},"545":{"position":[[2349,3],[2844,3],[2910,3],[7295,3],[7790,3],[7856,3]]},"547":{"position":[[2441,3],[2936,3],[7286,3],[7781,3],[7847,3]]},"562":{"position":[[2528,3],[3023,3],[3089,3]]},"569":{"position":[[2918,3],[3413,3],[3464,3],[8433,3],[8928,3],[8979,3],[13869,3],[14364,3],[14415,3]]},"571":{"position":[[2885,3],[3380,3],[3431,3]]},"576":{"position":[[2652,3],[3147,3],[3198,3],[7986,3],[8481,3],[8532,3]]},"583":{"position":[[2730,3],[3225,3],[3276,3],[3558,3]]},"605":{"position":[[3658,3],[4153,3],[4219,3],[9251,3],[9746,3],[9812,3],[15499,3],[15994,3],[16060,3],[21748,3],[22243,3],[22309,3],[27407,3],[27902,3],[27968,3]]},"607":{"position":[[3505,3],[4000,3],[4066,3],[9180,3],[9675,3],[9741,3],[14937,3],[15432,3],[15498,3],[20679,3],[21174,3],[21240,3]]},"622":{"position":[[2939,3],[3434,3]]},"624":{"position":[[2494,3],[2989,3],[3055,3]]},"630":{"position":[[2918,3],[3413,3]]},"632":{"position":[[2407,3],[2902,3],[2968,3]]},"634":{"position":[[2575,3],[3070,3],[7779,3],[8274,3],[8340,3],[12835,3],[13330,3],[13396,3]]},"644":{"position":[[3167,3],[3662,3],[3728,3],[8202,3],[8697,3],[8763,3]]},"646":{"position":[[2624,3],[3119,3],[7674,3],[8169,3],[8235,3]]},"648":{"position":[[2616,3],[3111,3],[3162,3],[8364,3],[8859,3],[13815,3],[14310,3],[19121,3],[19616,3],[19682,3],[24199,3],[24694,3],[24760,3]]},"666":{"position":[[812,3],[2707,3],[4620,3],[6522,3],[8432,3],[10338,3]]},"668":{"position":[[3392,3],[7278,3],[7773,3],[10643,3]]},"670":{"position":[[3667,3],[4162,3],[7500,3],[10327,3]]},"692":{"position":[[2861,3],[3356,3],[7825,3],[8320,3],[13211,3],[13706,3],[19038,3],[19533,3],[19599,3],[24152,3],[24647,3],[24713,3]]},"694":{"position":[[5847,3],[6342,3],[11655,3],[12150,3],[12216,3]]},"696":{"position":[[5414,3],[5909,3],[11609,3],[12104,3],[17910,3],[18405,3],[18471,3]]},"698":{"position":[[5789,3],[6284,3],[11629,3],[12124,3],[12190,3]]},"718":{"position":[[4536,3],[5031,3],[9651,3],[10146,3],[10212,3],[14962,3],[15457,3],[20034,3],[20529,3],[20595,3],[25204,3],[25699,3],[25765,3],[31533,3],[32028,3],[37604,3],[38099,3],[38165,3]]},"720":{"position":[[2423,3],[2918,3],[2984,3],[9121,3],[9616,3],[9682,3]]},"722":{"position":[[9783,3],[10278,3],[16075,3],[16570,3],[21956,3],[22451,3],[27811,3],[28306,3],[33294,3],[33789,3],[38425,3],[38920,3],[43533,3],[44028,3],[44094,3],[48655,3],[49150,3],[49216,3]]},"734":{"position":[[6160,3],[6655,3]]},"740":{"position":[[2713,3],[3208,3],[3274,3],[7832,3],[8327,3],[8393,3],[13154,3],[13649,3],[18182,3],[18677,3],[18743,3]]},"742":{"position":[[6820,3],[7315,3],[7381,3],[13094,3],[13589,3],[20088,3],[20583,3],[25722,3],[26217,3],[26283,3]]},"744":{"position":[[3972,3],[4467,3],[10588,3],[11083,3],[11149,3],[17046,3],[17541,3],[17607,3]]},"746":{"position":[[9848,3],[10343,3]]},"767":{"position":[[4506,3],[5001,3],[13374,3],[13869,3],[20415,3],[20910,3],[27283,3],[27778,3],[27844,3],[32464,3],[32959,3],[33025,3],[37506,3],[38001,3],[38067,3],[42566,3],[43061,3],[43127,3]]},"769":{"position":[[2586,3],[3081,3],[3147,3],[9913,3],[10408,3],[10474,3],[15271,3],[15766,3],[15832,3],[25017,3],[25512,3],[25578,3],[32662,3],[33157,3],[33223,3],[41649,3],[42144,3],[42210,3]]},"786":{"position":[[4181,3],[4676,3],[9114,3],[9609,3],[9675,3],[14280,3],[14775,3],[19170,3],[19665,3],[19731,3],[24216,3],[24711,3],[24777,3],[31365,3],[31860,3],[31926,3],[36409,3],[36904,3],[36970,3]]},"788":{"position":[[5214,3],[5709,3],[11113,3],[11608,3],[11674,3]]},"790":{"position":[[2699,3],[3194,3],[8287,3],[8782,3],[13312,3],[13807,3],[13873,3]]},"792":{"position":[[5518,3],[6013,3],[11299,3],[11794,3],[11860,3],[17945,3],[18440,3]]},"809":{"position":[[4184,3],[4679,3],[9138,3],[9633,3],[9699,3],[14315,3],[14810,3],[19199,3],[19694,3],[19760,3],[24240,3],[24735,3],[24801,3],[30875,3],[31370,3],[31436,3],[35914,3],[36409,3],[36475,3]]},"811":{"position":[[5265,3],[5760,3],[11586,3],[12081,3],[12147,3]]},"813":{"position":[[4744,3],[5239,3],[10722,3],[11217,3],[11283,3]]},"815":{"position":[[6018,3],[6513,3],[12252,3],[12747,3],[12813,3],[17425,3],[17920,3],[17986,3],[22535,3],[23030,3],[23096,3],[27730,3],[28225,3],[28291,3],[32836,3],[33331,3],[33397,3]]}}}],["variabl",{"_index":426,"t":{"16":{"position":[[16609,8],[22221,8],[27965,8]]},"78":{"position":[[303,10],[589,10],[875,10],[1161,10],[1402,10]]},"80":{"position":[[6568,8]]},"90":{"position":[[364,10],[728,10]]},"98":{"position":[[2602,9]]},"108":{"position":[[340,10],[663,10],[986,10],[1309,10],[1604,10]]},"120":{"position":[[340,10],[663,10],[986,10],[1309,10],[1604,10]]},"140":{"position":[[653,9],[745,8]]},"144":{"position":[[595,9],[2029,9]]},"152":{"position":[[271,10]]},"156":{"position":[[239,10],[355,10],[595,10]]},"158":{"position":[[185,10],[361,10],[500,10]]},"172":{"position":[[214,8]]},"186":{"position":[[304,10],[591,10],[878,10],[1165,10],[1424,10]]},"213":{"position":[[4400,8]]},"215":{"position":[[4441,8],[9614,8]]},"221":{"position":[[5730,8],[10925,8],[16149,8],[21180,8]]},"230":{"position":[[4659,8]]},"232":{"position":[[4488,8]]},"245":{"position":[[4701,8]]},"247":{"position":[[4402,8],[9477,8]]},"253":{"position":[[339,10],[661,10],[948,10],[1235,10],[1529,10]]},"288":{"position":[[4471,8],[9380,8],[15431,8]]},"312":{"position":[[4584,8],[9610,8]]},"318":{"position":[[4903,8],[10188,8],[15422,8]]},"338":{"position":[[4646,8]]},"345":{"position":[[5550,8]]},"369":{"position":[[5262,8],[10510,8]]},"371":{"position":[[5604,8]]},"373":{"position":[[4422,8]]},"385":{"position":[[4510,8]]},"387":{"position":[[4546,8],[9800,8]]},"445":{"position":[[4596,8],[9643,8]]},"449":{"position":[[4560,8],[9775,8]]},"467":{"position":[[4429,8]]},"469":{"position":[[4750,8]]},"471":{"position":[[4619,8]]},"485":{"position":[[4822,8]]},"487":{"position":[[4735,8]]},"505":{"position":[[5282,8],[10454,8],[15869,8],[20983,8],[26023,8]]},"521":{"position":[[4446,8]]},"523":{"position":[[5086,8]]},"525":{"position":[[4687,8]]},"537":{"position":[[4802,8]]},"541":{"position":[[4793,8]]},"543":{"position":[[4539,8]]},"545":{"position":[[4376,8],[9322,8]]},"547":{"position":[[4391,8],[9315,8]]},"562":{"position":[[4575,8]]},"569":{"position":[[5023,8],[10498,8],[15954,8]]},"571":{"position":[[4754,8]]},"576":{"position":[[4727,8],[10061,8]]},"583":{"position":[[5010,8]]},"605":{"position":[[5707,8],[11300,8],[17554,8],[23797,8],[29458,8]]},"607":{"position":[[5556,8],[11237,8],[16990,8],[22732,8]]},"622":{"position":[[5138,8]]},"624":{"position":[[4565,8]]},"630":{"position":[[5331,8]]},"632":{"position":[[4462,8]]},"634":{"position":[[4684,8],[9836,8],[14898,8]]},"644":{"position":[[5220,8],[10253,8]]},"646":{"position":[[4693,8],[9733,8]]},"648":{"position":[[4809,8],[10501,8],[15954,8],[21174,8],[26248,8]]},"668":{"position":[[9381,8]]},"670":{"position":[[5826,8]]},"692":{"position":[[4841,8],[9813,8],[15519,8],[21091,8],[26201,8]]},"694":{"position":[[8278,8],[13714,8]]},"696":{"position":[[7587,8],[14206,8],[19957,8]]},"698":{"position":[[8103,8],[13686,8]]},"718":{"position":[[6633,8],[11716,8],[17059,8],[22099,8],[27283,8],[34162,8],[39669,8]]},"720":{"position":[[4478,8],[11174,8]]},"722":{"position":[[12245,8],[18310,8],[24296,8],[29982,8],[35334,8],[40431,8],[45582,8],[50734,8]]},"734":{"position":[[9227,8]]},"740":{"position":[[4758,8],[9885,8],[15253,8],[20229,8]]},"742":{"position":[[8857,8],[15961,8],[22449,8],[27767,8]]},"744":{"position":[[6443,8],[13064,8],[19524,8]]},"746":{"position":[[15555,8]]},"767":{"position":[[8243,8],[16143,8],[23044,8],[29334,8],[34517,8],[39565,8],[44627,8]]},"769":{"position":[[4639,8],[11958,8],[17334,8],[27078,8],[34705,8],[43692,8]]},"786":{"position":[[6163,8],[11169,8],[16262,8],[21225,8],[26273,8],[33420,8],[38464,8]]},"788":{"position":[[7669,8],[13172,8]]},"790":{"position":[[4729,8],[10380,8],[15367,8]]},"792":{"position":[[7685,8],[13362,8],[19971,8]]},"809":{"position":[[6172,8],[11199,8],[16295,8],[21252,8],[26297,8],[32928,8],[37969,8]]},"811":{"position":[[7936,8],[13647,8]]},"813":{"position":[[7139,8],[12789,8]]},"815":{"position":[[8775,8],[14321,8],[19498,8],[24612,8],[29803,8],[34909,8]]}}}],["variat",{"_index":1948,"t":{"583":{"position":[[6039,10]]}}}],["varieti",{"_index":2259,"t":{"712":{"position":[[621,7]]}}}],["variou",{"_index":213,"t":{"16":{"position":[[3563,7],[4081,7]]},"26":{"position":[[64,7]]},"152":{"position":[[0,7]]},"503":{"position":[[504,7]]}}}],["verb",{"_index":1565,"t":{"401":{"position":[[547,4]]}}}],["veri",{"_index":958,"t":{"142":{"position":[[2943,4]]},"273":{"position":[[2859,4]]},"275":{"position":[[339,4]]}}}],["verif",{"_index":2183,"t":{"692":{"position":[[16386,13]]},"694":{"position":[[9254,13]]},"696":{"position":[[15348,13]]},"698":{"position":[[2634,13]]},"718":{"position":[[35201,13]]},"722":{"position":[[41024,13]]},"767":{"position":[[24673,13]]},"769":{"position":[[37517,13]]}}}],["verifi",{"_index":61,"t":{"6":{"position":[[249,8]]},"312":{"position":[[190,6],[10456,6],[10765,6]]},"318":{"position":[[117,6]]},"365":{"position":[[994,6],[1288,6]]},"369":{"position":[[6072,6]]},"445":{"position":[[190,6],[10634,6]]},"449":{"position":[[3,6]]},"461":{"position":[[440,6]]},"471":{"position":[[121,6]]},"545":{"position":[[11,6]]},"547":{"position":[[4957,6]]},"666":{"position":[[165,6]]},"668":{"position":[[2763,6],[10021,6]]},"694":{"position":[[9279,6]]},"718":{"position":[[17695,6],[35218,7],[35256,6],[40382,6]]},"720":{"position":[[6771,6]]},"740":{"position":[[276,6]]},"742":{"position":[[4490,6]]},"769":{"position":[[38785,6],[44366,6]]}}}],["version",{"_index":212,"t":{"16":{"position":[[3512,8]]},"60":{"position":[[3339,8]]},"132":{"position":[[386,7]]},"142":{"position":[[1588,8],[4235,8]]},"152":{"position":[[479,8],[550,7]]},"154":{"position":[[59,7]]},"399":{"position":[[4234,7]]},"401":{"position":[[3356,7]]},"403":{"position":[[3427,8],[6545,8]]},"411":{"position":[[217,8]]},"415":{"position":[[145,7],[421,7]]},"417":{"position":[[78,7],[111,7],[167,7],[329,7]]},"419":{"position":[[24,7],[2048,7]]},"421":{"position":[[5,7],[231,7]]},"425":{"position":[[11,7],[475,7]]},"429":{"position":[[824,8],[868,7],[889,8]]},"431":{"position":[[157,7],[791,7],[873,7],[972,7],[1059,7]]},"583":{"position":[[6088,8],[6183,8]]},"672":{"position":[[6,7]]},"746":{"position":[[6,7]]}}}],["version(",{"_index":1303,"t":{"269":{"position":[[189,10]]}}}],["via",{"_index":682,"t":{"92":{"position":[[138,3]]},"144":{"position":[[137,3]]},"343":{"position":[[422,3]]},"447":{"position":[[154,3]]},"547":{"position":[[72,3]]},"628":{"position":[[1227,3]]},"698":{"position":[[2951,3]]},"734":{"position":[[352,3]]},"769":{"position":[[19971,3]]}}}],["video",{"_index":1773,"t":{"475":{"position":[[500,5]]},"678":{"position":[[657,6]]},"684":{"position":[[82,5],[139,7]]},"690":{"position":[[79,5],[136,7],[433,7],[455,7]]},"692":{"position":[[168,5],[211,5],[16615,5]]},"694":{"position":[[381,8],[1044,5],[2641,5],[2684,5]]},"702":{"position":[[215,7],[313,7]]}}}],["view",{"_index":66,"t":{"6":{"position":[[363,4]]},"12":{"position":[[144,4],[172,4]]},"60":{"position":[[1393,4]]},"288":{"position":[[10976,4],[12141,4],[13722,4],[15040,4],[15975,4]]},"334":{"position":[[224,4]]},"355":{"position":[[240,4],[323,5],[457,4]]},"357":{"position":[[94,4],[177,5]]},"365":{"position":[[550,4],[725,4]]},"371":{"position":[[1011,4],[2330,4],[3928,4],[5320,4],[6366,4]]},"393":{"position":[[862,4],[963,4]]},"397":{"position":[[2079,4],[2714,4]]},"399":{"position":[[1121,4],[1754,4],[2961,4],[3596,4]]},"401":{"position":[[1451,4],[2086,4]]},"403":{"position":[[8230,4]]},"405":{"position":[[3860,4]]},"419":{"position":[[1403,4],[1522,4]]},"475":{"position":[[364,4]]},"477":{"position":[[256,4],[338,5],[464,7],[519,7]]},"485":{"position":[[277,4],[1058,7],[3467,7],[5765,4],[5819,7],[6129,4],[6198,7]]},"487":{"position":[[68,4],[335,4],[1158,7],[2152,7],[3353,7],[5242,7],[5260,6]]},"491":{"position":[[451,4]]},"499":{"position":[[209,7]]},"503":{"position":[[545,6],[632,4]]},"505":{"position":[[6073,4],[16586,4]]},"605":{"position":[[1287,4],[6880,4],[13122,4],[19372,4],[25029,4]]},"607":{"position":[[1131,4],[6800,4],[12561,4],[18299,4]]},"660":{"position":[[604,5]]},"662":{"position":[[77,4],[181,5],[295,4],[399,5],[459,4]]},"664":{"position":[[192,4]]},"666":{"position":[[129,4],[214,4],[4022,4],[7832,4],[11684,7],[11720,7]]},"670":{"position":[[12283,4],[12312,4],[12341,4],[12461,4],[12520,4]]},"678":{"position":[[647,4]]},"684":{"position":[[59,4],[116,4]]},"690":{"position":[[56,4],[113,4],[423,4],[441,4]]},"692":{"position":[[145,4],[188,4],[360,4],[16601,4]]},"694":{"position":[[356,4],[1030,4],[2618,4],[2661,4]]},"702":{"position":[[285,4]]},"714":{"position":[[524,4],[628,4],[841,4],[902,4]]},"716":{"position":[[265,4]]},"722":{"position":[[232,4],[930,4],[1038,4],[1144,4],[25199,4],[30852,4],[35996,4]]},"736":{"position":[[126,4],[248,4],[357,4],[410,4]]},"738":{"position":[[190,4],[255,4]]},"740":{"position":[[137,4],[214,4],[324,4],[5441,4],[10654,4],[20951,7]]},"742":{"position":[[872,4],[1007,4],[2604,4],[2742,4],[23353,4],[23419,4]]},"798":{"position":[[664,4],[693,4]]},"813":{"position":[[99,4]]},"815":{"position":[[302,4],[3812,4],[5291,4],[7003,4],[8505,4],[9728,4],[25390,4]]}}}],["view_product",{"_index":1798,"t":{"491":{"position":[[958,13]]}}}],["viewabl",{"_index":1178,"t":{"202":{"position":[[507,8]]},"288":{"position":[[11113,8],[12369,8],[13889,8],[15191,8],[16152,8]]},"509":{"position":[[525,8]]},"806":{"position":[[292,8],[359,8],[525,8]]}}}],["viewed/ad",{"_index":1810,"t":{"505":{"position":[[88,13]]}}}],["viewer",{"_index":175,"t":{"16":{"position":[[879,7],[999,9],[1136,9],[1699,7],[1978,9],[2115,9],[6686,7],[6840,9],[6977,9],[7356,7],[7841,7],[7917,9],[7974,9],[8195,7],[8367,6],[10362,6],[10596,9],[10741,9],[10889,9],[11163,6],[11372,7],[11480,9],[11711,9],[12022,6],[12162,6],[13037,9],[14030,9],[15230,9],[17117,9],[17137,8],[17821,6],[18649,9],[19642,9],[20842,9],[22729,9],[22749,8],[23612,6],[24396,9],[25391,9],[26610,9],[28326,9],[28498,9],[28518,8]]},"54":{"position":[[368,7],[410,6],[660,7],[702,6],[1380,9],[1621,8],[2126,9],[2702,9],[2943,8],[3448,9],[3979,6]]},"58":{"position":[[175,7],[289,9],[557,9],[785,6],[812,6],[1202,6],[1356,6],[1634,6],[1680,6],[1750,9]]},"60":{"position":[[350,7],[441,7],[459,6],[589,9],[646,9],[743,8],[835,9],[1013,8],[1144,9],[1297,7],[1355,6],[1468,7],[1486,6],[1573,9],[1751,8],[1804,9],[1931,6],[2032,6],[2266,6],[2331,9],[2385,6],[2457,6],[2527,9],[2735,7],[2828,7],[2870,7],[2895,7]]},"62":{"position":[[200,7],[286,9],[422,9],[553,6],[809,6],[877,9],[999,6],[1079,9],[1137,6],[1274,6],[1355,8],[1411,9]]},"64":{"position":[[218,7],[314,9],[499,9],[630,6],[1063,6],[1390,9],[1477,6]]},"66":{"position":[[285,7],[377,9],[526,9],[657,6],[734,6],[802,9],[1162,6],[1235,8],[1341,6],[1425,9],[1512,6],[1624,6],[1715,9]]},"68":{"position":[[583,8],[821,8],[970,7],[998,6],[1269,9],[1461,8],[1651,9],[1847,7],[1875,6],[1975,9],[2167,8],[2220,9],[2331,6],[2439,6],[2557,7],[2634,7]]},"202":{"position":[[322,6],[450,6]]},"279":{"position":[[404,7],[594,9],[651,9]]},"288":{"position":[[162,7],[898,9],[3189,9],[5804,9],[8097,9],[11029,9],[11166,9],[13783,9],[13950,9]]},"326":{"position":[[146,7],[358,7]]},"328":{"position":[[255,7],[448,7],[591,9],[674,9]]},"334":{"position":[[126,7],[325,8]]},"336":{"position":[[110,8],[233,7],[386,9],[548,9],[700,6],[769,6],[924,6]]},"338":{"position":[[137,6],[201,6],[1053,9],[2051,9],[3256,9],[5157,9],[5177,8]]},"340":{"position":[[157,7]]},"343":{"position":[[692,6]]},"355":{"position":[[558,7],[717,9],[948,9]]},"365":{"position":[[517,6],[692,6],[963,6]]},"367":{"position":[[338,7],[569,9],[731,9]]},"369":{"position":[[144,7],[1041,6],[1116,8],[2250,6],[2376,9],[3738,6],[3822,7],[5020,6],[5090,8],[5690,9],[5920,6],[5998,7]]},"371":{"position":[[995,6],[1095,9],[2314,6],[3912,6],[4020,9],[5304,6],[6350,6]]},"379":{"position":[[256,6],[348,7],[491,9],[574,9]]},"387":{"position":[[5291,6],[6203,9],[7202,9],[8408,9],[10312,9],[10332,8]]},"397":{"position":[[1825,6],[2025,6],[2117,6],[2167,6],[2770,6]]},"399":{"position":[[867,6],[1067,6],[1159,6],[1209,7],[1810,6],[2707,6],[2907,6],[2999,6],[3049,6],[3652,6]]},"401":{"position":[[1197,6],[1397,6],[1489,6],[1539,6],[2142,6],[2317,6],[2401,6],[2953,7],[3097,7]]},"403":{"position":[[5216,7],[5228,6],[5351,7],[7138,6],[8268,6],[8316,7],[8526,6],[8555,6],[9553,7],[9684,6],[9713,6],[10142,7],[10273,6],[10302,6]]},"405":{"position":[[2279,6],[2334,9],[3471,6]]},"419":{"position":[[229,6],[247,6],[319,6],[353,6],[363,6],[568,9],[739,8],[828,9],[939,8],[1074,8],[1471,9],[1585,9],[2399,7],[2417,6],[2491,7],[2523,6],[2533,6],[2877,9],[3048,8],[3172,9],[3310,9],[3421,8],[3556,8],[3680,9]]},"423":{"position":[[282,9],[414,6],[493,9],[836,7],[923,7],[998,6],[1034,6],[1161,6],[1232,6],[1309,7],[1464,7],[1495,6],[1569,7],[1614,6],[1624,6],[1931,9],[2102,8],[2226,9],[2407,9],[2518,8],[2653,8],[2777,9],[3130,7],[3204,9],[3344,6]]},"425":{"position":[[163,7],[224,9],[327,8],[696,6],[830,7],[950,9],[1007,9],[1259,7],[1325,9],[2204,7],[2270,9]]},"491":{"position":[[410,6],[937,6]]},"493":{"position":[[268,6],[376,7],[518,9],[643,9]]},"499":{"position":[[124,7]]},"501":{"position":[[200,7],[262,7],[354,7],[496,9],[621,9]]},"503":{"position":[[591,7],[826,7],[892,6],[1035,9],[1203,8],[1370,9]]},"505":{"position":[[279,6],[1048,6],[1100,9],[2171,6],[3675,6],[3735,9],[4931,6],[5785,6],[11212,6],[11281,6],[11353,7],[11376,7]]},"507":{"position":[[272,7]]},"509":{"position":[[340,6],[468,6]]},"571":{"position":[[229,7],[339,6],[375,9]]},"601":{"position":[[312,7],[538,9],[700,9],[1267,7],[1319,6]]},"605":{"position":[[123,7],[349,9],[511,9],[1128,6],[1193,9],[2147,9],[3137,9],[4334,9],[6212,9],[6232,8],[6457,6],[6541,6],[6683,6],[6786,9],[7740,9],[8730,9],[9927,9],[11805,9],[11825,8],[12067,6],[12151,6],[12562,7],[12720,9],[12906,6],[13024,6],[13985,9],[14978,9],[16178,9],[18068,9],[18088,8],[18382,6],[18466,6],[18945,7],[19280,9],[20237,9],[21227,9],[22424,9],[24302,9],[24322,8],[25895,9],[26886,9],[28084,9],[29966,9],[29986,8],[30286,6],[30344,6],[30414,6],[30568,7]]},"607":{"position":[[100,6],[184,7],[362,9],[775,6],[972,6],[1037,9],[1992,9],[2983,9],[4181,9],[6062,9],[6082,8],[6320,6],[6408,6],[6640,6],[6703,9],[7664,9],[8658,9],[9859,9],[11752,9],[11772,8],[12014,6],[12102,6],[12310,7],[12466,9],[13423,9],[14415,9],[15614,9],[17499,9],[17519,8],[17821,6],[17909,6],[19166,9],[20158,9],[21357,9],[23243,9],[23263,8]]},"613":{"position":[[298,7],[417,7],[705,9],[762,9]]},"620":{"position":[[274,7],[659,9],[716,9]]},"722":{"position":[[324,7],[493,7],[656,7],[791,6],[1411,6],[1813,7],[2007,9],[2418,9],[2887,6],[3232,7],[3436,9],[3926,9],[4278,6],[4333,6],[4841,7],[5822,9],[6312,9],[14243,8],[14301,9],[15365,8],[16812,8],[16878,9],[18057,8],[18863,8],[19137,6],[19966,6],[21132,6],[22679,6],[23978,6],[24885,6],[41227,7],[42023,9],[43013,9],[44210,9],[46089,9],[46109,8],[46319,7],[47115,9],[48120,9],[49332,9],[51256,9],[51276,8],[51914,6],[51958,7],[52098,6],[52153,7],[52299,6],[52356,7],[52567,6],[52613,7],[52657,6],[52714,7],[52763,6],[52825,7]]},"734":{"position":[[741,7],[794,6],[871,6],[1400,9],[1638,8],[2032,8]]},"742":{"position":[[2516,8],[3008,7],[3068,6],[3612,9],[3857,8],[4142,8]]},"746":{"position":[[547,7],[607,6],[684,6],[2214,9],[2459,8],[2853,8]]},"748":{"position":[[760,7],[820,6],[897,6],[2681,9],[2926,8],[3320,8]]},"769":{"position":[[18220,9],[18397,6],[18740,6],[18862,6]]},"796":{"position":[[556,8],[757,6],[795,6]]},"804":{"position":[[203,7]]},"809":{"position":[[117,8],[502,7],[703,9],[969,9],[1256,7],[1308,9],[1365,9],[1532,8],[1618,9],[1680,6],[27410,7],[27781,9],[28129,9],[28315,9],[28432,8]]},"811":{"position":[[80,7],[594,7],[1023,9],[1503,9],[2062,7],[3054,7],[3125,9],[4537,7],[6207,7],[6286,9],[7665,7],[8863,7],[10066,9],[11062,9],[12265,9],[14164,9],[14184,8]]},"813":{"position":[[71,6],[167,6],[694,7],[1105,9],[1658,9],[2621,6],[2686,9],[3815,6],[5390,6],[5463,9],[6717,6],[7677,6],[8116,6],[8167,6],[8249,6],[8331,8],[8356,7],[9194,9],[10193,9],[11399,9],[13305,9],[13325,8],[13636,9],[13831,8],[13876,6],[13951,10],[14025,8],[14118,8],[14260,8],[14631,9],[14704,9],[15050,7],[15095,6],[15886,9],[16043,8],[16574,9]]},"815":{"position":[[526,6],[807,7],[859,6],[1650,9],[1807,8],[2338,9],[2741,8],[3874,9],[7073,9],[31301,9],[32303,9],[33512,9],[35426,9],[35446,8]]}}}],["viewer#assigne",{"_index":1488,"t":{"371":{"position":[[1067,17],[2401,18],[3991,17],[5373,17],[6423,17]]}}}],["viewer#assignee\",\"relation\":\"viewer\",\"object\":\"asset",{"_index":1496,"t":{"371":{"position":[[6007,52]]}}}],["visibl",{"_index":1347,"t":{"288":{"position":[[9960,7],[10235,7]]},"712":{"position":[[1082,11],[1102,7],[1151,7]]},"722":{"position":[[13325,7],[25159,7]]}}}],["visual",{"_index":844,"t":{"102":{"position":[[971,6],[1014,6],[1029,6]]},"146":{"position":[[64,9]]}}}],["vote",{"_index":1772,"t":{"475":{"position":[[425,4]]}}}],["vpn",{"_index":2086,"t":{"654":{"position":[[469,3]]},"728":{"position":[[496,3]]},"734":{"position":[[410,3]]},"736":{"position":[[216,4],[322,3]]},"742":{"position":[[10764,3],[12298,3],[14065,3],[15622,3],[16927,3]]},"744":{"position":[[417,4]]},"746":{"position":[[5666,3],[9052,3],[12257,3],[15216,3],[18642,3]]}}}],["vs",{"_index":70,"t":{"6":{"position":[[436,2]]},"790":{"position":[[5543,2]]}}}],["w",{"_index":2427,"t":{"742":{"position":[[10768,2],[12302,2],[14069,2],[15626,2],[16931,2]]},"746":{"position":[[5670,2],[9056,2],[12261,2],[15220,2],[18646,2]]}}}],["wait",{"_index":1322,"t":{"273":{"position":[[2553,7]]},"583":{"position":[[6103,5]]}}}],["want",{"_index":224,"t":{"16":{"position":[[3965,4]]},"72":{"position":[[172,4]]},"80":{"position":[[16,4]]},"92":{"position":[[16,4],[306,4]]},"110":{"position":[[16,4]]},"122":{"position":[[16,4]]},"138":{"position":[[7,4]]},"142":{"position":[[487,4]]},"168":{"position":[[205,4]]},"172":{"position":[[7,4]]},"188":{"position":[[16,4]]},"194":{"position":[[76,4]]},"198":{"position":[[237,4]]},"202":{"position":[[212,4]]},"211":{"position":[[6,4]]},"230":{"position":[[152,4]]},"273":{"position":[[3221,4]]},"288":{"position":[[113,4],[5019,4],[10004,5]]},"290":{"position":[[79,4],[157,4]]},"294":{"position":[[180,4]]},"312":{"position":[[10289,4]]},"322":{"position":[[164,4]]},"326":{"position":[[99,4]]},"347":{"position":[[682,6]]},"365":{"position":[[58,4]]},"393":{"position":[[155,4]]},"403":{"position":[[2378,4],[2632,4]]},"405":{"position":[[93,4],[622,4]]},"411":{"position":[[122,4]]},"423":{"position":[[813,4],[884,4],[1192,4],[1259,4]]},"425":{"position":[[490,4],[650,4]]},"483":{"position":[[121,4]]},"509":{"position":[[230,4]]},"537":{"position":[[90,6],[5488,6]]},"543":{"position":[[45,6]]},"547":{"position":[[20,4]]},"583":{"position":[[6220,4]]},"628":{"position":[[1720,4]]},"642":{"position":[[848,4]]},"682":{"position":[[311,4]]},"694":{"position":[[945,4]]},"716":{"position":[[133,4]]},"718":{"position":[[180,4],[1966,4]]},"722":{"position":[[41169,4]]},"738":{"position":[[153,4]]},"769":{"position":[[18892,4],[28103,4],[28247,4]]},"786":{"position":[[89,4],[1716,4]]},"788":{"position":[[168,4]]},"792":{"position":[[366,4],[8656,4]]},"809":{"position":[[183,4],[1725,4]]},"811":{"position":[[146,4]]},"813":{"position":[[219,4],[8087,4]]}}}],["warn",{"_index":986,"t":{"144":{"position":[[399,7],[1833,7]]},"148":{"position":[[0,7]]},"152":{"position":[[772,7]]},"158":{"position":[[511,7]]},"172":{"position":[[241,7]]},"425":{"position":[[3210,7]]},"581":{"position":[[286,7]]},"585":{"position":[[681,7]]},"672":{"position":[[9380,7]]},"746":{"position":[[18884,7]]}}}],["watch",{"_index":1774,"t":{"475":{"position":[[535,5]]}}}],["water",{"_index":2516,"t":{"762":{"position":[[194,5],[386,5]]},"767":{"position":[[10982,5],[12411,5],[14175,5],[15687,5],[16898,5],[18166,5],[19525,5],[21219,5],[22661,5],[23787,5]]}}}],["way",{"_index":982,"t":{"144":{"position":[[65,5]]},"168":{"position":[[238,4]]},"265":{"position":[[25,4]]},"334":{"position":[[48,3]]},"397":{"position":[[774,3]]},"403":{"position":[[3448,3],[6566,3]]},"419":{"position":[[2183,5]]},"425":{"position":[[2989,3]]},"435":{"position":[[362,4]]},"445":{"position":[[10364,3]]},"455":{"position":[[1746,4]]},"459":{"position":[[665,4]]},"539":{"position":[[8,3]]},"605":{"position":[[12383,3]]},"710":{"position":[[169,3]]},"769":{"position":[[20523,3],[37210,3]]},"790":{"position":[[203,3]]},"792":{"position":[[8881,3]]},"813":{"position":[[8304,3]]}}}],["we'd",{"_index":1860,"t":{"537":{"position":[[5537,4]]}}}],["we'll",{"_index":506,"t":{"54":{"position":[[60,5]]},"314":{"position":[[96,5]]},"318":{"position":[[33,5],[11013,5]]},"355":{"position":[[329,5]]},"365":{"position":[[232,5],[988,5]]},"367":{"position":[[146,5]]},"393":{"position":[[312,5],[1001,5]]},"395":{"position":[[238,5]]},"397":{"position":[[122,5]]},"399":{"position":[[3821,5]]},"401":{"position":[[511,5],[680,5]]},"405":{"position":[[772,5]]},"407":{"position":[[0,5]]},"603":{"position":[[96,5]]},"734":{"position":[[2443,5]]},"742":{"position":[[697,5]]},"765":{"position":[[464,5]]}}}],["we'r",{"_index":1424,"t":{"338":{"position":[[5482,5]]},"387":{"position":[[10647,5]]},"525":{"position":[[5718,5]]}}}],["we'v",{"_index":1468,"t":{"369":{"position":[[5,5]]}}}],["weather",{"_index":2343,"t":{"728":{"position":[[202,8]]}}}],["web",{"_index":680,"t":{"92":{"position":[[31,3]]},"94":{"position":[[485,3],[1336,3]]}}}],["webank",{"_index":2344,"t":{"734":{"position":[[132,6],[179,6]]}}}],["well",{"_index":725,"t":{"96":{"position":[[173,4]]},"98":{"position":[[95,4]]},"273":{"position":[[3460,5]]},"353":{"position":[[279,4]]},"684":{"position":[[150,4]]},"690":{"position":[[147,4]]},"698":{"position":[[231,4]]},"714":{"position":[[553,4]]},"744":{"position":[[678,4]]},"767":{"position":[[30156,5]]},"769":{"position":[[19787,4]]},"792":{"position":[[15220,5]]}}}],["west",{"_index":2349,"t":{"734":{"position":[[2230,4],[2308,4],[2475,4],[3309,4],[3552,4],[4823,4],[5178,4],[6830,4],[7093,4],[8497,4],[8752,4],[9942,4],[10193,4]]},"742":{"position":[[10495,4],[10647,4],[10821,4],[11917,4],[12125,4],[12355,4],[13776,4],[13938,4],[14122,4],[15341,4],[15499,4],[15679,4],[16650,4],[16806,4],[16984,4]]},"746":{"position":[[4037,4],[4280,4],[4640,4],[4790,4],[4942,4],[5095,4],[5247,4],[5398,4],[5549,4],[5723,4],[6807,4],[7162,4],[7634,4],[7840,4],[8048,4],[8257,4],[8465,4],[8672,4],[8879,4],[9109,4],[10518,4],[10781,4],[11161,4],[11321,4],[11483,4],[11646,4],[11808,4],[11969,4],[12130,4],[12314,4],[13521,4],[13776,4],[14148,4],[14304,4],[14462,4],[14621,4],[14779,4],[14936,4],[15093,4],[15273,4],[16969,4],[17220,4],[17588,4],[17742,4],[17898,4],[18055,4],[18211,4],[18366,4],[18521,4],[18699,4]]}}}],["we‚Äôll",{"_index":1657,"t":{"419":{"position":[[0,5],[79,5]]},"425":{"position":[[727,5]]}}}],["whenev",{"_index":1141,"t":{"174":{"position":[[177,8]]},"769":{"position":[[20674,8],[20990,8]]},"792":{"position":[[15433,8]]}}}],["whether",{"_index":95,"t":{"8":{"position":[[579,7]]},"14":{"position":[[80,7]]},"16":{"position":[[64,7],[2844,7],[9197,7],[9665,7],[12152,7],[17389,7],[17789,7]]},"42":{"position":[[69,7]]},"92":{"position":[[384,7]]},"98":{"position":[[4421,7]]},"106":{"position":[[73,7]]},"110":{"position":[[30,7]]},"114":{"position":[[9,7]]},"215":{"position":[[36,7]]},"345":{"position":[[1070,7]]},"349":{"position":[[1375,7]]},"399":{"position":[[4395,7]]},"403":{"position":[[7957,7]]},"437":{"position":[[349,7]]},"491":{"position":[[1172,7]]},"560":{"position":[[46,7],[171,7]]},"562":{"position":[[45,7],[170,7]]},"578":{"position":[[215,7]]},"628":{"position":[[2005,7],[2051,7]]},"658":{"position":[[281,7]]},"686":{"position":[[51,7]]},"690":{"position":[[198,7]]},"692":{"position":[[16502,7]]},"694":{"position":[[9286,7]]},"714":{"position":[[51,7]]},"722":{"position":[[213,7]]},"732":{"position":[[282,7]]},"742":{"position":[[23336,7]]},"758":{"position":[[478,7]]},"762":{"position":[[51,7]]},"769":{"position":[[76,7]]}}}],["whose",{"_index":1307,"t":{"269":{"position":[[639,5]]},"415":{"position":[[840,5]]},"738":{"position":[[274,5]]},"740":{"position":[[233,5]]}}}],["wide",{"_index":2258,"t":{"712":{"position":[[616,4]]}}}],["wildcard",{"_index":1340,"t":{"279":{"position":[[734,11]]},"415":{"position":[[868,8]]},"425":{"position":[[91,8],[606,9],[1090,11],[1395,8],[3180,8],[3234,8]]},"477":{"position":[[600,11]]},"485":{"position":[[5433,8],[5506,8],[5856,8]]},"601":{"position":[[783,11]]},"605":{"position":[[594,11]]},"815":{"position":[[2421,11]]}}}],["window",{"_index":2140,"t":{"670":{"position":[[282,7]]}}}],["wire",{"_index":1034,"t":{"150":{"position":[[128,5]]}}}],["within",{"_index":467,"t":{"16":{"position":[[28950,6],[29660,6]]},"46":{"position":[[82,6]]},"48":{"position":[[145,6]]},"74":{"position":[[820,6]]},"88":{"position":[[54,6]]},"196":{"position":[[331,6]]},"202":{"position":[[530,6]]},"273":{"position":[[2470,6]]},"306":{"position":[[385,6]]},"318":{"position":[[16332,6]]},"338":{"position":[[5450,6]]},"387":{"position":[[5397,6],[10615,6]]},"467":{"position":[[5047,6]]},"471":{"position":[[5364,6]]},"477":{"position":[[1647,6]]},"491":{"position":[[70,6],[600,6],[1041,6],[1642,6]]},"501":{"position":[[15,6]]},"503":{"position":[[12,6]]},"505":{"position":[[27160,6]]},"509":{"position":[[548,6]]},"525":{"position":[[5686,6]]},"527":{"position":[[220,6]]},"585":{"position":[[42,6]]},"624":{"position":[[5797,6]]},"654":{"position":[[187,6]]},"658":{"position":[[520,6]]},"660":{"position":[[771,6]]},"662":{"position":[[16,6],[120,6],[230,6],[338,6]]},"668":{"position":[[486,6],[739,6]]},"670":{"position":[[862,6]]},"696":{"position":[[249,6]]},"732":{"position":[[522,6]]},"742":{"position":[[2705,6],[10464,6],[10616,6],[11886,6],[12094,6],[13745,6],[13907,6],[15310,6],[15468,6],[16619,6],[16775,6],[18012,6],[19189,6],[20747,6],[22057,6],[22982,6]]},"744":{"position":[[998,6],[1814,6],[3046,6],[4659,6],[6024,6],[7005,6]]},"746":{"position":[[4609,6],[4759,6],[4911,6],[5064,6],[5216,6],[5367,6],[5518,6],[7603,6],[7809,6],[8017,6],[8226,6],[8434,6],[8641,6],[8848,6],[11130,6],[11290,6],[11452,6],[11615,6],[11777,6],[11938,6],[12099,6],[14117,6],[14273,6],[14431,6],[14590,6],[14748,6],[14905,6],[15062,6],[17557,6],[17711,6],[17867,6],[18024,6],[18180,6],[18335,6],[18490,6]]},"796":{"position":[[240,6],[298,6]]}}}],["without",{"_index":344,"t":{"16":{"position":[[12708,7],[13557,7],[14793,7],[15730,7],[18320,7],[19169,7],[20405,7],[21342,7],[24092,7],[24946,7],[26183,7],[27130,7]]},"80":{"position":[[1156,7],[2330,7],[4093,7],[5435,7]]},"86":{"position":[[284,7],[718,7],[1476,7]]},"102":{"position":[[612,7]]},"112":{"position":[[429,7],[964,7],[1785,7],[2374,7]]},"124":{"position":[[429,7],[964,7],[1785,7],[2374,7]]},"170":{"position":[[375,7],[789,7],[1413,7]]},"172":{"position":[[700,7],[1298,7],[2221,7],[3158,7]]},"190":{"position":[[429,7],[964,7],[1785,7],[2374,7]]},"213":{"position":[[542,7],[1345,7],[2671,7],[3573,7]]},"215":{"position":[[552,7],[1398,7],[2631,7],[3565,7],[5717,7],[6565,7],[7800,7],[8736,7]]},"221":{"position":[[1857,7],[2699,7],[3928,7],[4858,7],[6920,7],[7760,7],[9123,7],[10062,7],[12260,7],[13106,7],[14339,7],[15273,7],[17283,7],[18131,7],[19366,7],[20302,7]]},"230":{"position":[[804,7],[1607,7],[2932,7],[3833,7]]},"232":{"position":[[595,7],[1442,7],[2676,7],[3611,7]]},"236":{"position":[[161,7]]},"245":{"position":[[852,7],[1688,7],[2911,7],[3835,7]]},"247":{"position":[[563,7],[1362,7],[2683,7],[3580,7],[5624,7],[6461,7],[7685,7],[8610,7]]},"257":{"position":[[405,7],[940,7],[1761,7],[2350,7]]},"261":{"position":[[1993,7]]},"288":{"position":[[649,7],[1443,7],[2760,7],[3653,7],[5553,7],[6349,7],[7667,7],[8561,7],[10731,7],[11711,7],[13305,7],[14414,7]]},"312":{"position":[[691,7],[1538,7],[2772,7],[3707,7],[5721,7],[6567,7],[7800,7],[8734,7]]},"318":{"position":[[810,7],[1672,7],[3057,7],[4018,7],[6295,7],[7142,7],[8376,7],[9311,7],[11529,7],[12376,7],[13610,7],[14545,7]]},"338":{"position":[[725,7],[1579,7],[2820,7],[3762,7]]},"345":{"position":[[1669,7],[2513,7],[3744,7],[4676,7]]},"369":{"position":[[673,7],[1641,7],[3188,7],[4265,7],[6609,7],[7458,7],[8694,7],[9631,7]]},"371":{"position":[[575,7],[1653,7],[3310,7],[4497,7]]},"373":{"position":[[521,7],[1370,7],[2606,7],[3543,7]]},"377":{"position":[[189,7]]},"385":{"position":[[604,7],[1419,7],[2757,7],[3671,7]]},"387":{"position":[[625,7],[1479,7],[2720,7],[3662,7],[5875,7],[6730,7],[7972,7],[8915,7]]},"419":{"position":[[1695,7]]},"431":{"position":[[960,7]]},"445":{"position":[[691,7],[1541,7],[2778,7],[3716,7],[5742,7],[6591,7],[7827,7],[8764,7]]},"449":{"position":[[651,7],[1502,7],[2740,7],[3679,7],[5866,7],[6717,7],[7955,7],[8894,7]]},"467":{"position":[[579,7],[1380,7],[2704,7],[3604,7]]},"469":{"position":[[581,7],[1462,7],[2866,7],[3846,7]]},"471":{"position":[[698,7],[1552,7],[2793,7],[3735,7]]},"485":{"position":[[765,7],[1618,7],[2994,7],[3946,7]]},"487":{"position":[[830,7],[1680,7],[2917,7],[3855,7]]},"491":{"position":[[1218,7],[1332,7]]},"505":{"position":[[813,7],[1751,7],[3268,7],[4315,7],[6561,7],[7408,7],[8642,7],[9577,7],[11976,7],[12823,7],[14057,7],[14992,7],[17082,7],[17931,7],[19167,7],[20104,7],[22126,7],[22974,7],[24209,7],[25145,7]]},"521":{"position":[[588,7],[1391,7],[2717,7],[3619,7]]},"523":{"position":[[921,7],[1801,7],[3204,7],[4183,7]]},"525":{"position":[[758,7],[1614,7],[2857,7],[3801,7]]},"537":{"position":[[667,7],[1521,7],[2954,7],[3917,7]]},"541":{"position":[[674,7],[1524,7],[2953,7],[3912,7]]},"543":{"position":[[92,7],[685,7],[1487,7],[2812,7],[3713,7]]},"545":{"position":[[531,7],[1366,7],[2588,7],[3511,7],[5477,7],[6312,7],[7534,7],[8457,7]]},"547":{"position":[[568,7],[1363,7],[2680,7],[3573,7],[5466,7],[6302,7],[7525,7],[8449,7]]},"562":{"position":[[690,7],[1535,7],[2767,7],[3700,7]]},"569":{"position":[[940,7],[1835,7],[3157,7],[4111,7],[6512,7],[7388,7],[8672,7],[9605,7],[11928,7],[12814,7],[14108,7],[15051,7]]},"571":{"position":[[1143,7],[1920,7],[3124,7],[3960,7]]},"576":{"position":[[681,7],[1565,7],[2891,7],[3870,7],[6015,7],[6899,7],[8225,7],[9204,7]]},"583":{"position":[[602,7],[1563,7],[2969,7],[4046,7]]},"591":{"position":[[429,7]]},"605":{"position":[[1818,7],[2664,7],[3897,7],[4831,7],[7411,7],[8257,7],[9490,7],[10424,7],[13653,7],[14502,7],[15738,7],[16675,7],[19908,7],[20754,7],[21987,7],[22921,7],[25565,7],[26412,7],[27646,7],[28581,7]]},"607":{"position":[[1663,7],[2510,7],[3744,7],[4679,7],[7332,7],[8182,7],[9419,7],[10357,7],[13093,7],[13941,7],[15176,7],[16112,7],[18835,7],[19683,7],[20918,7],[21854,7]]},"622":{"position":[[817,7],[1736,7],[3178,7],[4196,7]]},"624":{"position":[[632,7],[1489,7],[2733,7],[3678,7]]},"630":{"position":[[542,7],[1560,7],[3157,7],[4284,7]]},"632":{"position":[[561,7],[1410,7],[2646,7],[3583,7],[5206,7]]},"634":{"position":[[542,7],[1417,7],[2814,7],[3787,7],[5931,7],[6781,7],[8018,7],[8956,7],[10981,7],[11834,7],[13074,7],[14015,7]]},"644":{"position":[[1323,7],[2171,7],[3406,7],[4342,7],[6360,7],[7207,7],[8441,7],[9376,7]]},"646":{"position":[[632,7],[1486,7],[2863,7],[3816,7],[5824,7],[6675,7],[7913,7],[8852,7]]},"648":{"position":[[607,7],[1553,7],[2855,7],[3853,7],[6266,7],[7145,7],[8603,7],[9591,7],[11714,7],[12595,7],[14054,7],[15043,7],[17277,7],[18125,7],[19360,7],[20296,7],[22359,7],[23205,7],[24438,7],[25372,7]]},"664":{"position":[[120,7]]},"668":{"position":[[5252,7],[6123,7],[7517,7],[8487,7]]},"670":{"position":[[1584,7],[2484,7],[3906,7],[4904,7]]},"692":{"position":[[959,7],[1768,7],[3100,7],[4008,7],[5915,7],[6728,7],[8064,7],[8976,7],[10903,7],[11859,7],[13450,7],[14525,7],[17194,7],[18042,7],[19277,7],[20213,7],[22312,7],[23158,7],[24391,7],[25325,7]]},"694":{"position":[[3377,7],[4386,7],[6086,7],[7224,7],[9805,7],[10656,7],[11894,7],[12833,7]]},"696":{"position":[[3280,7],[4177,7],[5653,7],[6659,7],[8973,7],[10065,7],[11848,7],[13069,7],[16072,7],[16917,7],[18149,7],[19082,7]]},"698":{"position":[[3475,7],[4434,7],[6028,7],[7106,7],[9781,7],[10631,7],[11868,7],[12806,7]]},"718":{"position":[[2516,7],[3384,7],[4775,7],[5742,7],[7795,7],[8649,7],[9890,7],[10832,7],[12942,7],[13810,7],[15201,7],[16168,7],[18178,7],[19032,7],[20273,7],[21215,7],[23334,7],[24195,7],[25443,7],[26392,7],[28901,7],[30019,7],[31772,7],[33009,7],[35748,7],[36602,7],[37843,7],[38785,7]]},"720":{"position":[[577,7],[1426,7],[2662,7],[3599,7],[7277,7],[8125,7],[9360,7],[10296,7]]},"722":{"position":[[7321,7],[8354,7],[10022,7],[11174,7],[13917,7],[14854,7],[16314,7],[17350,7],[19654,7],[20635,7],[22195,7],[23285,7],[25679,7],[26575,7],[28050,7],[29055,7],[31332,7],[32171,7],[33533,7],[34471,7],[36497,7],[37319,7],[38664,7],[39585,7],[41693,7],[42539,7],[43772,7],[44706,7],[46785,7],[47646,7],[48894,7],[49843,7]]},"734":{"position":[[3050,7],[4379,7],[6399,7],[7857,7]]},"738":{"position":[[118,7]]},"740":{"position":[[877,7],[1721,7],[2952,7],[3884,7],[5988,7],[6836,7],[8071,7],[9007,7],[11132,7],[12001,7],[13393,7],[14361,7],[16344,7],[17189,7],[18421,7],[19354,7]]},"742":{"position":[[2609,7],[4992,7],[5832,7],[7059,7],[7987,7],[10224,7],[11461,7],[13333,7],[14689,7],[17764,7],[18756,7],[20327,7],[21428,7],[23886,7],[24730,7],[25961,7],[26893,7]]},"744":{"position":[[1537,7],[2585,7],[4211,7],[5367,7],[8232,7],[9261,7],[10827,7],[11979,7],[14688,7],[15718,7],[17285,7],[18438,7]]},"746":{"position":[[3778,7],[6363,7],[10087,7],[12881,7]]},"767":{"position":[[646,7],[2294,7],[4745,7],[6542,7],[10602,7],[11790,7],[13613,7],[14920,7],[17783,7],[18901,7],[20654,7],[21891,7],[25441,7],[26288,7],[27522,7],[28457,7],[30620,7],[31468,7],[32703,7],[33639,7],[35656,7],[36507,7],[37745,7],[38684,7],[40714,7],[41566,7],[42805,7],[43745,7]]},"769":{"position":[[742,7],[1590,7],[2825,7],[3761,7],[8077,7],[8921,7],[10152,7],[11084,7],[13417,7],[14270,7],[15510,7],[16451,7],[23165,7],[24017,7],[25256,7],[26196,7],[30828,7],[31671,7],[32901,7],[33832,7],[39815,7],[40658,7],[41888,7],[42819,7]]},"786":{"position":[[2277,7],[3087,7],[4420,7],[5329,7],[7268,7],[8117,7],[9353,7],[10290,7],[12376,7],[13186,7],[14519,7],[15428,7],[17324,7],[18173,7],[19409,7],[20346,7],[22368,7],[23218,7],[24455,7],[25393,7],[29519,7],[30368,7],[31604,7],[32541,7],[34563,7],[35412,7],[36648,7],[37585,7]]},"788":{"position":[[2796,7],[3835,7],[5453,7],[6601,7],[9263,7],[10114,7],[11352,7],[12291,7]]},"790":{"position":[[747,7],[1581,7],[2938,7],[3871,7],[6271,7],[7137,7],[8526,7],[9491,7],[11466,7],[12315,7],[13551,7],[14488,7]]},"792":{"position":[[669,7],[3390,7],[4284,7],[5757,7],[6760,7],[9445,7],[10298,7],[11538,7],[12479,7],[15997,7],[16829,7],[18184,7],[19115,7]]},"809":{"position":[[2274,7],[3087,7],[4423,7],[5335,7],[7286,7],[8138,7],[9377,7],[10317,7],[12413,7],[13222,7],[14554,7],[15462,7],[17355,7],[18203,7],[19438,7],[20374,7],[22392,7],[23242,7],[24479,7],[25417,7],[29031,7],[29879,7],[31114,7],[32050,7],[34068,7],[34917,7],[36153,7],[37090,7]]},"811":{"position":[[2553,7],[3683,7],[5504,7],[6763,7],[9734,7],[10586,7],[11825,7],[12765,7]]},"813":{"position":[[2386,7],[3395,7],[4983,7],[6101,7],[8864,7],[9719,7],[10961,7],[11904,7]]},"815":{"position":[[3258,7],[4440,7],[6257,7],[7558,7],[10392,7],[11248,7],[12491,7],[13435,7],[15561,7],[16419,7],[17664,7],[18610,7],[20667,7],[21527,7],[22774,7],[23722,7],[25866,7],[26724,7],[27969,7],[28915,7],[30972,7],[31830,7],[33075,7],[34021,7]]}}}],["won't",{"_index":1319,"t":{"273":{"position":[[1613,5]]},"769":{"position":[[122,5]]}}}],["won‚Äôt",{"_index":1672,"t":{"419":{"position":[[3935,5]]}}}],["word",{"_index":558,"t":{"60":{"position":[[3006,4]]},"397":{"position":[[732,4]]},"401":{"position":[[2622,5]]},"429":{"position":[[242,4]]},"471":{"position":[[5867,4]]},"605":{"position":[[6721,6]]},"769":{"position":[[18772,6]]},"811":{"position":[[1948,6]]}}}],["work",{"_index":862,"t":{"116":{"position":[[166,6]]},"128":{"position":[[180,6]]},"140":{"position":[[155,7]]},"172":{"position":[[93,4]]},"273":{"position":[[2266,4],[3447,4]]},"294":{"position":[[272,7]]},"312":{"position":[[10790,6]]},"318":{"position":[[26,6],[5715,5],[10908,7]]},"365":{"position":[[1324,5]]},"373":{"position":[[20,6],[5158,7]]},"391":{"position":[[210,5]]},"393":{"position":[[110,5],[166,4]]},"405":{"position":[[122,7],[995,4],[1174,4],[1203,4],[4011,8],[4065,7]]},"431":{"position":[[406,8]]},"445":{"position":[[10660,4]]},"449":{"position":[[29,5]]},"539":{"position":[[1189,6]]},"644":{"position":[[157,5]]},"710":{"position":[[122,4]]},"718":{"position":[[35269,7]]},"767":{"position":[[30087,5],[30148,7]]},"769":{"position":[[8,7],[128,4],[21380,8]]}}}],["workspac",{"_index":163,"t":{"16":{"position":[[580,9]]},"704":{"position":[[243,9]]},"710":{"position":[[521,9]]},"712":{"position":[[94,9],[390,11]]},"714":{"position":[[253,9],[321,9],[365,9],[504,10],[724,9],[811,9],[888,9]]},"716":{"position":[[655,9],[707,9],[776,9],[900,12],[1037,9],[1237,12],[1732,9]]},"718":{"position":[[493,9],[609,9],[809,12],[1466,9],[1518,12],[1731,9],[1845,9],[1948,11],[2780,9],[3833,9],[5211,9],[6387,9],[7116,9],[13206,9],[14259,9],[15637,9],[16813,9],[17542,9],[28100,9],[28231,9],[28356,9],[29167,9],[29296,9],[29419,9],[30470,9],[30655,9],[30834,9],[32210,9],[32349,9],[32482,9],[33656,9],[33791,9],[33920,9],[34796,9],[34929,9],[35056,9]]},"720":{"position":[[5481,10],[5689,9],[5808,9],[6058,12]]},"722":{"position":[[53,9],[740,10],[774,9],[910,10],[1314,9],[1385,9],[1506,10],[1691,11],[2129,11],[2223,12],[2276,12],[2331,12],[2378,12],[2493,12],[2546,12],[2601,12],[2648,12],[2789,10],[3110,11],[3637,11],[3731,12],[3784,12],[3839,12],[3886,12],[4001,12],[4054,12],[4109,12],[4156,12],[4500,9],[4719,11],[5026,12],[6023,11],[6117,12],[6170,12],[6225,12],[6272,12],[6387,12],[6440,12],[6495,12],[6542,12],[6712,9],[6755,9],[6777,9],[13359,10],[30832,10]]},"726":{"position":[[218,10]]}}}],["workspace:auth0",{"_index":288,"t":{"16":{"position":[[8424,15],[8945,15]]}}}],["workspace:fb83c013",{"_index":228,"t":{"16":{"position":[[4247,18],[4761,18]]}}}],["workspace:sandcastl",{"_index":2272,"t":{"718":{"position":[[269,20],[309,20],[347,20],[380,20],[414,20],[2003,20],[2844,23],[5284,22],[7314,22],[8147,23],[9145,23],[10351,22],[12286,23],[12329,22],[12462,21],[13270,23],[15710,22],[18530,23],[19528,23],[20734,22],[22669,23],[22712,22],[22854,21],[23692,23],[24697,23],[25910,22],[27872,23],[27915,22],[28164,23],[28288,23],[28414,23],[29233,24],[29355,24],[29479,23],[32285,22],[32417,22],[32551,22],[36100,23],[37098,23],[38304,22],[40239,23],[40282,22],[40446,20],[40498,20],[40546,20],[40600,20],[40645,20],[40690,20],[40730,20],[40777,20],[40816,20],[40862,20],[40903,20],[40951,20]]},"720":{"position":[[923,23],[1916,23],[3117,22],[5031,23],[5074,22],[5235,21],[6797,21],[7623,23],[8615,23],[9815,22],[11726,23],[11769,22],[11945,20],[11997,20],[12045,20],[12099,20],[12144,20],[12189,20],[12229,20],[12276,20],[12315,20],[12361,20],[12403,20],[12451,20]]},"722":{"position":[[7550,23],[7640,23],[7741,23],[10430,23],[10530,23],[10641,23],[14169,22],[15291,22],[16738,22],[17983,22],[18789,22],[19067,20],[51536,20],[51588,20],[51634,20],[51680,20],[51720,20],[51774,20],[52374,20],[52421,20],[52462,20],[52510,20]]}}}],["workspace:sandcastle#memb",{"_index":2329,"t":{"722":{"position":[[14260,30],[16836,30],[31561,30],[33941,30]]}}}],["worri",{"_index":1520,"t":{"393":{"position":[[305,6]]},"769":{"position":[[20864,5]]}}}],["worth",{"_index":2662,"t":{"792":{"position":[[561,5]]}}}],["writabl",{"_index":476,"t":{"16":{"position":[[29909,8]]}}}],["write",{"_index":285,"t":{"16":{"position":[[8206,7],[8317,6],[8487,7]]},"74":{"position":[[515,5]]},"80":{"position":[[677,5]]},"178":{"position":[[164,7]]},"190":{"position":[[19,5]]},"192":{"position":[[50,5],[113,7],[292,7],[714,6],[1070,8],[1500,11]]},"194":{"position":[[49,5],[1229,8]]},"196":{"position":[[48,5],[279,6]]},"198":{"position":[[110,5],[263,5]]},"200":{"position":[[19,5],[123,5],[249,5],[378,5],[514,6],[521,5],[584,6]]},"213":{"position":[[11,5],[739,7],[1691,7],[3018,6],[4105,8],[4662,11],[4820,7]]},"221":{"position":[[7117,7],[8106,7],[9470,6],[10594,8],[11187,11],[11343,7]]},"230":{"position":[[4365,8]]},"247":{"position":[[4112,8]]},"259":{"position":[[871,6]]},"288":{"position":[[82,5],[174,5],[846,7],[1789,7],[3107,6],[4185,8],[4733,11],[4882,7],[9093,8],[10014,5],[10121,6],[10928,7],[12057,7],[13652,6],[14946,8],[15693,11],[15943,7]]},"290":{"position":[[650,5]]},"292":{"position":[[183,5]]},"318":{"position":[[1007,7],[2018,7],[3404,6],[4550,8],[5165,11],[5328,7]]},"369":{"position":[[870,7],[1987,7],[3535,6],[4797,8],[5524,11],[5761,7]]},"371":{"position":[[772,7],[1999,7],[3657,6],[5029,8],[5866,11],[6139,7]]},"385":{"position":[[801,7],[1765,7],[3104,6],[4203,8],[4772,11],[4942,7]]},"397":{"position":[[594,5],[2691,5]]},"399":{"position":[[1731,5],[3573,5]]},"401":{"position":[[230,5],[2063,5]]},"403":{"position":[[3130,6],[6812,5],[6874,7],[8688,5]]},"405":{"position":[[778,5],[1224,5],[1531,5]]},"415":{"position":[[246,6],[618,5],[1125,6]]},"419":{"position":[[1733,5],[4017,7],[4087,5]]},"421":{"position":[[35,5],[584,7]]},"425":{"position":[[278,5],[385,5],[540,6],[1675,5],[1947,5],[2117,5]]},"429":{"position":[[77,7],[691,7],[778,5],[1761,5],[1895,7],[2091,7],[2530,6],[2903,8],[3350,11],[3522,7]]},"431":{"position":[[106,7],[201,7],[485,5]]},"445":{"position":[[162,5]]},"467":{"position":[[776,7],[1726,7],[3051,6],[4136,8],[4691,11],[4847,7]]},"469":{"position":[[778,7],[1808,7],[3213,6],[4378,8],[5012,11],[5186,7]]},"485":{"position":[[962,7],[1964,7],[3341,6],[4478,8],[5084,11],[5248,7]]},"505":{"position":[[1010,7],[2097,7],[3615,6],[4847,8],[5544,11],[5763,7]]},"521":{"position":[[785,7],[1737,7],[3064,6],[4151,8],[4708,11],[4866,7]]},"523":{"position":[[1118,7],[2147,7],[3551,6],[4715,8],[5348,11],[5529,7]]},"537":{"position":[[864,7],[1867,7],[3301,6],[4449,8],[5064,11],[5272,7]]},"541":{"position":[[871,7],[1870,7],[3300,6],[4444,8],[5055,11],[5259,7]]},"543":{"position":[[882,7],[1833,7],[3159,6],[4245,8],[4801,11],[4958,7]]},"547":{"position":[[4105,8]]},"622":{"position":[[1014,7],[2082,7],[3525,6],[4728,8],[5400,11],[5573,7]]},"630":{"position":[[739,7],[1906,7],[3504,6],[4816,8],[5593,11],[5848,7]]},"634":{"position":[[4319,8]]},"642":{"position":[[154,5]]},"644":{"position":[[205,5]]},"646":{"position":[[829,7],[1832,7],[3210,6],[4348,8],[4955,11],[5119,7]]},"648":{"position":[[5788,5],[6463,7],[7491,7],[8950,6],[10123,8],[10763,11],[10996,7],[15575,8],[16681,5]]},"650":{"position":[[440,5]]},"652":{"position":[[98,6],[140,5]]},"660":{"position":[[3221,7],[4208,7],[5774,6],[6998,8],[8271,11],[8877,7]]},"668":{"position":[[5449,7],[6469,7],[7864,6],[9019,8],[9643,11],[9811,7]]},"670":{"position":[[5436,8]]},"672":{"position":[[2760,7],[3747,7],[5313,6],[6537,8],[7810,11],[8416,7]]},"692":{"position":[[1156,7],[2114,7],[3447,6],[4540,8],[5103,11],[5267,7],[6112,7],[7074,7],[8411,6],[9508,8],[10075,11],[10243,7],[11100,7],[12205,7],[13797,6],[15057,8],[15781,11],[16090,7]]},"694":{"position":[[3574,7],[4732,7],[6433,6],[7756,8],[8540,11],[8901,7]]},"696":{"position":[[3477,7],[4523,7],[6000,6],[7191,8],[7849,11],[8100,7],[9170,7],[10411,7],[12195,6],[13601,8],[14468,11],[14912,7]]},"698":{"position":[[3672,7],[4780,7],[6375,6],[7638,8],[8365,11],[8677,7]]},"704":{"position":[[257,5]]},"714":{"position":[[637,5]]},"718":{"position":[[2713,7],[3730,7],[5122,6],[6274,8],[6895,11],[7065,7],[13139,7],[14156,7],[15548,6],[16700,8],[17321,11],[17491,7],[29098,7],[30365,7],[32119,6],[33541,8],[34424,11],[34743,7]]},"722":{"position":[[240,5],[1047,5],[1152,5],[1237,5],[2961,5],[7518,7],[8700,7],[10369,6],[11706,8],[12507,11],[12893,7],[14114,7],[15200,7],[16661,6],[17882,8],[18572,11],[18750,7],[19183,5],[19851,7],[20981,7],[22542,6],[23817,8],[24558,11],[24786,7],[25208,5],[25876,7],[26921,7],[28397,6],[29587,8],[30244,11],[30494,7],[30861,5],[31529,7],[32517,7],[33880,6],[35003,8],[35596,11],[35790,7],[36005,5],[36694,7],[37665,7],[39011,6],[40117,8],[40693,11],[40870,7]]},"734":{"position":[[3247,7],[4725,7],[6746,6],[8389,8],[9489,11],[9896,7]]},"740":{"position":[[11329,7],[12347,7],[13740,6],[14893,8],[15515,11],[15685,7]]},"742":{"position":[[10421,7],[11807,7],[13680,6],[15221,8],[16223,11],[16592,7],[17961,7],[19102,7],[20674,6],[21960,8],[22711,11],[22947,7]]},"744":{"position":[[550,5],[5899,8]]},"746":{"position":[[3975,7],[6709,7],[10434,6],[13413,8],[15817,11],[16923,7]]},"767":{"position":[[843,7],[2640,7],[5092,6],[7074,8],[8505,11],[9074,7],[10799,7],[12136,7],[13960,6],[15452,8],[16405,11],[16727,7],[17980,7],[19247,7],[21001,6],[22423,8],[23306,11],[23613,7]]},"786":{"position":[[2474,7],[3433,7],[4767,6],[5861,8],[6425,11],[6590,7],[12573,7],[13532,7],[14866,6],[15960,8],[16524,11],[16689,7]]},"788":{"position":[[2993,7],[4181,7],[5800,6],[7133,8],[7931,11],[8197,7]]},"790":{"position":[[944,7],[1927,7],[3285,6],[4403,8],[4991,11],[5180,7],[6468,7],[7483,7],[8873,6],[10023,8],[10642,11],[10810,7]]},"792":{"position":[[265,7],[287,5],[3587,7],[4630,7],[6104,6],[7292,8],[7947,11],[8195,7],[16194,7],[17175,7],[18531,6],[19647,8],[20233,11],[20420,7]]},"809":{"position":[[2471,7],[3433,7],[4770,6],[5867,8],[6434,11],[6602,7],[12610,7],[13568,7],[14901,6],[15994,8],[16557,11],[16721,7]]},"811":{"position":[[2750,7],[4029,7],[5851,6],[7295,8],[8198,11],[8563,7]]},"813":{"position":[[2583,7],[3741,7],[5330,6],[6633,8],[7401,11],[7655,7]]},"815":{"position":[[3455,7],[4786,7],[6604,6],[8090,8],[9037,11],[9379,7],[15097,5]]}}}],["write/delet",{"_index":2463,"t":{"744":{"position":[[751,12]]}}}],["write_authorization_model",{"_index":640,"t":{"80":{"position":[[5899,28]]}}}],["writeassert",{"_index":1726,"t":{"431":{"position":[[465,15]]}}}],["writeauthorizationmodel",{"_index":566,"t":{"60":{"position":[[3279,24]]},"429":{"position":[[721,23],[1692,23]]},"431":{"position":[[233,24]]}}}],["writeauthorizationmodelrequest",{"_index":630,"t":{"80":{"position":[[3118,30],[5858,30]]}}}],["writeauthorizationmodelrequeststr",{"_index":628,"t":{"80":{"position":[[2651,36]]}}}],["writer",{"_index":509,"t":{"54":{"position":[[260,6],[400,6],[443,7],[484,6],[552,6],[692,6],[735,7],[776,6],[1135,8],[1479,8],[1643,9],[1883,8],[2239,9],[2457,8],[2801,8],[2965,9],[3205,8],[3561,9]]},"80":{"position":[[160,7],[328,9],[479,9],[1540,9],[1691,9]]},"98":{"position":[[487,9],[4167,9]]},"269":{"position":[[273,7],[325,7]]},"340":{"position":[[250,7]]},"347":{"position":[[110,7],[172,6],[285,9],[396,8],[557,9]]},"405":{"position":[[2895,6]]},"435":{"position":[[319,6]]},"437":{"position":[[264,6],[367,6],[650,6],[788,7],[821,6],[1009,9],[1097,8],[1218,9],[1737,6],[1805,9],[1862,6],[1929,9]]},"445":{"position":[[10430,7],[10579,7]]},"447":{"position":[[101,6],[271,7],[304,6],[330,6],[540,9],[628,8],[736,8],[999,9]]},"449":{"position":[[113,6],[5326,7]]},"507":{"position":[[365,7]]},"553":{"position":[[267,7],[279,7],[310,6],[421,7],[461,6],[574,9],[699,8],[750,9],[910,6],[987,9]]},"562":{"position":[[5331,6],[5364,6]]},"569":{"position":[[444,6],[3557,9],[5618,9],[5631,8],[11428,7],[14489,9],[16490,9],[16503,8]]},"571":{"position":[[217,7],[485,7],[553,6],[5338,6],[5376,6]]},"576":{"position":[[5526,7],[6253,9],[6285,8],[7333,8],[8627,9],[8659,8],[9810,9],[10482,9],[10514,8],[10938,6],[10984,6]]},"642":{"position":[[925,7],[951,6],[1054,9],[1142,8]]},"644":{"position":[[328,7],[364,6],[388,6],[517,9],[684,8],[759,8]]},"646":{"position":[[153,6],[873,6],[932,9],[1912,6],[3276,6],[3343,9],[4438,6],[5147,6]]},"648":{"position":[[6518,9],[6591,9],[9035,9],[9118,9]]},"650":{"position":[[173,7],[199,6],[302,9],[390,8]]},"678":{"position":[[547,7]]},"706":{"position":[[547,7]]},"722":{"position":[[611,7],[1425,6],[1710,7],[1981,9],[2148,9],[2857,6],[3129,7],[3331,6],[3410,9],[3521,8],[3656,9],[4386,6],[4738,7],[4940,6],[5796,9],[5907,8],[6042,9],[19929,6],[20012,9],[20082,9],[21095,6],[22642,6],[22733,9],[22813,9],[23941,6],[24848,6],[25930,9],[26011,9],[28481,9],[28572,9],[31602,9],[33983,9],[36750,9],[39097,9],[51838,6],[51882,7],[52001,6],[52056,7],[52197,6],[52254,7]]},"773":{"position":[[668,7]]},"775":{"position":[[396,7]]},"781":{"position":[[186,8]]},"783":{"position":[[492,6]]},"786":{"position":[[390,7],[607,9],[858,9],[11887,6],[12628,9],[14951,9],[17653,9],[18646,9],[19846,9],[21733,9],[21753,8],[27042,7],[27339,6],[27353,7],[27732,8],[27752,9],[28164,9],[29848,9],[30841,9],[32041,9],[33928,9],[33948,8]]},"788":{"position":[[913,6],[927,7],[1342,8],[1362,9],[1858,9]]},"792":{"position":[[1363,6],[1377,7],[1801,8],[1821,9],[2342,9],[20836,7],[20900,6],[20976,6],[21585,9],[21743,8],[21888,8],[22501,9]]},"796":{"position":[[524,7],[1244,6],[1268,6]]},"798":{"position":[[396,7]]},"809":{"position":[[137,7],[455,7],[648,9],[828,9],[22721,9],[23715,9],[24916,9],[26806,9],[26826,8],[27094,7],[27344,7],[27396,6],[27569,9],[27761,8],[27988,9],[34397,9],[35390,9],[36590,9],[38477,9],[38497,8]]},"811":{"position":[[500,7],[580,6],[811,9],[1003,8],[1274,9]]},"813":{"position":[[600,7],[680,6],[893,9],[1085,8],[1429,9],[14909,7],[14950,6],[15011,6],[15453,9],[15606,8],[15754,8],[16345,9]]},"815":{"position":[[666,7],[707,6],[768,6],[1217,9],[1370,8],[1518,8],[2109,9],[15890,9],[16892,9],[18101,9],[20015,9],[20035,8],[26195,9],[27197,9],[28406,9],[30320,9],[30340,8]]}}}],["writer/commenter/view",{"_index":2720,"t":{"815":{"position":[[131,26]]}}}],["writer/editor",{"_index":2700,"t":{"811":{"position":[[101,14]]}}}],["writerequest",{"_index":1159,"t":{"192":{"position":[[700,13],[1047,12],[1086,13]]},"194":{"position":[[858,13],[1206,12],[1245,13]]},"213":{"position":[[3004,13],[4082,12],[4121,13]]},"221":{"position":[[9456,13],[10571,12],[10610,13]]},"230":{"position":[[3265,13],[4342,12],[4381,13]]},"247":{"position":[[3016,13],[4089,12],[4128,13]]},"288":{"position":[[3093,13],[4162,12],[4201,13],[8000,13],[9070,12],[9109,13],[13638,13],[14923,12],[14962,13]]},"318":{"position":[[3390,13],[4527,12],[4566,13]]},"369":{"position":[[3521,13],[4774,12],[4813,13]]},"371":{"position":[[3643,13],[5006,12],[5045,13]]},"385":{"position":[[3090,13],[4180,12],[4219,13]]},"429":{"position":[[2516,13],[2880,12],[2919,13]]},"467":{"position":[[3037,13],[4113,12],[4152,13]]},"469":{"position":[[3199,13],[4355,12],[4394,13]]},"485":{"position":[[3327,13],[4455,12],[4494,13]]},"505":{"position":[[3601,13],[4824,12],[4863,13]]},"521":{"position":[[3050,13],[4128,12],[4167,13]]},"523":{"position":[[3537,13],[4692,12],[4731,13]]},"537":{"position":[[3287,13],[4426,12],[4465,13]]},"541":{"position":[[3286,13],[4421,12],[4460,13]]},"543":{"position":[[3145,13],[4222,12],[4261,13]]},"547":{"position":[[3013,13],[4082,12],[4121,13]]},"622":{"position":[[3511,13],[4705,12],[4744,13]]},"630":{"position":[[3490,13],[4793,12],[4832,13]]},"634":{"position":[[3147,13],[4296,12],[4335,13]]},"646":{"position":[[3196,13],[4325,12],[4364,13]]},"648":{"position":[[8936,13],[10100,12],[10139,13],[14387,13],[15552,12],[15591,13]]},"660":{"position":[[5760,13],[6975,12],[7014,13]]},"668":{"position":[[7850,13],[8996,12],[9035,13]]},"670":{"position":[[4239,13],[5413,12],[5452,13]]},"672":{"position":[[5299,13],[6514,12],[6553,13]]},"692":{"position":[[3433,13],[4517,12],[4556,13],[8397,13],[9485,12],[9524,13],[13783,13],[15034,12],[15073,13]]},"694":{"position":[[6419,13],[7733,12],[7772,13]]},"696":{"position":[[5986,13],[7168,12],[7207,13],[12181,13],[13578,12],[13617,13]]},"698":{"position":[[6361,13],[7615,12],[7654,13]]},"718":{"position":[[5108,13],[6251,12],[6290,13],[15534,13],[16677,12],[16716,13],[32105,13],[33518,12],[33557,13]]},"722":{"position":[[10355,13],[11683,12],[11722,13],[16647,13],[17859,12],[17898,13],[22528,13],[23794,12],[23833,13],[28383,13],[29564,12],[29603,13],[33866,13],[34980,12],[35019,13],[38997,13],[40094,12],[40133,13]]},"734":{"position":[[6732,13],[8366,12],[8405,13]]},"740":{"position":[[13726,13],[14870,12],[14909,13]]},"742":{"position":[[13666,13],[15198,12],[15237,13],[20660,13],[21937,12],[21976,13]]},"744":{"position":[[4544,13],[5876,12],[5915,13]]},"746":{"position":[[10420,13],[13390,12],[13429,13]]},"767":{"position":[[5078,13],[7051,12],[7090,13],[13946,13],[15429,12],[15468,13],[20987,13],[22400,12],[22439,13]]},"786":{"position":[[4753,13],[5838,12],[5877,13],[14852,13],[15937,12],[15976,13]]},"788":{"position":[[5786,13],[7110,12],[7149,13]]},"790":{"position":[[3271,13],[4380,12],[4419,13],[8859,13],[10000,12],[10039,13]]},"792":{"position":[[6090,13],[7269,12],[7308,13],[18517,13],[19624,12],[19663,13]]},"809":{"position":[[4756,13],[5844,12],[5883,13],[14887,13],[15971,12],[16010,13]]},"811":{"position":[[5837,13],[7272,12],[7311,13]]},"813":{"position":[[5316,13],[6610,12],[6649,13]]},"815":{"position":[[6590,13],[8067,12],[8106,13]]}}}],["writes=tuplekey",{"_index":1163,"t":{"192":{"position":[[1100,17]]},"213":{"position":[[4135,17]]},"221":{"position":[[10624,17]]},"288":{"position":[[4215,17],[14976,17]]},"318":{"position":[[4580,17]]},"369":{"position":[[4827,17]]},"371":{"position":[[5059,17]]},"385":{"position":[[4233,17]]},"429":{"position":[[2933,17]]},"467":{"position":[[4166,17]]},"469":{"position":[[4408,17]]},"485":{"position":[[4508,17]]},"505":{"position":[[4877,17]]},"521":{"position":[[4181,17]]},"523":{"position":[[4745,17]]},"537":{"position":[[4479,17]]},"541":{"position":[[4474,17]]},"543":{"position":[[4275,17]]},"622":{"position":[[4758,17]]},"630":{"position":[[4846,17]]},"646":{"position":[[4378,17]]},"648":{"position":[[10153,17]]},"660":{"position":[[7028,17]]},"668":{"position":[[9049,17]]},"672":{"position":[[6567,17]]},"692":{"position":[[4570,17],[9538,17],[15087,17]]},"694":{"position":[[7786,17]]},"696":{"position":[[7221,17],[13631,17]]},"698":{"position":[[7668,17]]},"718":{"position":[[6304,17],[16730,17],[33571,17]]},"722":{"position":[[11736,17],[17912,17],[23847,17],[29617,17],[35033,17],[40147,17]]},"734":{"position":[[8419,17]]},"740":{"position":[[14923,17]]},"742":{"position":[[15251,17],[21990,17]]},"746":{"position":[[13443,17]]},"767":{"position":[[7104,17],[15482,17],[22453,17]]},"786":{"position":[[5891,17],[15990,17]]},"788":{"position":[[7163,17]]},"790":{"position":[[4433,17],[10053,17]]},"792":{"position":[[7322,17],[19677,17]]},"809":{"position":[[5897,17],[16024,17]]},"811":{"position":[[7325,17]]},"813":{"position":[[6663,17]]},"815":{"position":[[8120,17]]}}}],["written",{"_index":284,"t":{"16":{"position":[[8143,7],[29133,7],[29304,7]]},"56":{"position":[[265,7],[423,7],[794,7]]},"255":{"position":[[63,7]]},"405":{"position":[[2452,7]]},"423":{"position":[[1086,8]]},"445":{"position":[[10394,7]]},"670":{"position":[[373,7],[605,7]]},"728":{"position":[[230,7]]},"744":{"position":[[7471,7]]},"767":{"position":[[24543,7]]}}}],["wrong",{"_index":1538,"t":{"397":{"position":[[987,5]]}}}],["wrote",{"_index":1281,"t":{"259":{"position":[[2998,5]]}}}],["x",{"_index":304,"t":{"16":{"position":[[9860,1],[10140,1],[10163,1],[16679,1],[22291,1],[28035,1]]},"40":{"position":[[37,1],[317,1],[340,1]]},"60":{"position":[[113,1],[237,1]]},"68":{"position":[[349,1]]},"80":{"position":[[6638,1]]},"86":{"position":[[2388,1]]},"114":{"position":[[1341,1]]},"126":{"position":[[1348,1]]},"150":{"position":[[245,1]]},"192":{"position":[[1308,1]]},"194":{"position":[[1468,1]]},"213":{"position":[[4470,1]]},"215":{"position":[[4511,1],[9684,1]]},"221":{"position":[[5800,1],[10995,1],[16219,1],[21250,1]]},"230":{"position":[[4729,1]]},"232":{"position":[[4558,1]]},"245":{"position":[[4771,1]]},"247":{"position":[[4472,1],[9547,1]]},"259":{"position":[[585,1],[2168,1]]},"261":{"position":[[1612,1],[3044,1]]},"288":{"position":[[4541,1],[9450,1],[15501,1]]},"312":{"position":[[4654,1],[9680,1]]},"318":{"position":[[4973,1],[10258,1],[15492,1]]},"338":{"position":[[4716,1]]},"345":{"position":[[5620,1]]},"369":{"position":[[5332,1],[10580,1]]},"371":{"position":[[5674,1]]},"373":{"position":[[4492,1]]},"383":{"position":[[45,1]]},"385":{"position":[[4580,1]]},"387":{"position":[[4616,1],[9870,1]]},"429":{"position":[[3158,1]]},"445":{"position":[[4666,1],[9713,1]]},"449":{"position":[[4630,1],[9845,1]]},"467":{"position":[[4499,1]]},"469":{"position":[[4820,1]]},"471":{"position":[[4689,1]]},"485":{"position":[[4892,1]]},"487":{"position":[[4805,1]]},"505":{"position":[[5352,1],[10524,1],[15939,1],[21053,1],[26093,1]]},"521":{"position":[[4516,1]]},"523":{"position":[[5156,1]]},"525":{"position":[[4757,1]]},"537":{"position":[[4872,1]]},"541":{"position":[[4863,1]]},"543":{"position":[[4609,1]]},"545":{"position":[[4446,1],[9392,1]]},"547":{"position":[[4461,1],[9385,1]]},"562":{"position":[[4645,1]]},"569":{"position":[[5093,1],[10568,1],[16024,1]]},"571":{"position":[[4824,1]]},"576":{"position":[[4797,1],[10131,1]]},"583":{"position":[[5080,1]]},"587":{"position":[[323,1],[407,1]]},"605":{"position":[[5777,1],[11370,1],[17624,1],[23867,1],[29528,1]]},"607":{"position":[[5626,1],[11307,1],[17060,1],[22802,1]]},"622":{"position":[[5208,1]]},"624":{"position":[[4635,1]]},"630":{"position":[[5401,1]]},"632":{"position":[[4532,1]]},"634":{"position":[[4754,1],[9906,1],[14968,1]]},"644":{"position":[[5290,1],[10323,1]]},"646":{"position":[[4763,1],[9803,1]]},"648":{"position":[[4879,1],[10571,1],[16024,1],[21244,1],[26318,1]]},"660":{"position":[[3024,1],[3061,1],[3936,1],[4016,1],[5239,1],[5375,1],[6561,1],[6651,1],[7789,1],[7875,1],[8079,1],[9596,1],[9680,1]]},"662":{"position":[[101,2],[211,2],[319,2],[429,2],[483,2]]},"664":{"position":[[217,3]]},"666":{"position":[[154,3],[227,1],[1506,1],[2118,1],[3405,1],[4035,1],[5314,1],[5931,1],[7222,1],[7845,1],[9128,1],[9747,1],[11038,1],[11701,2]]},"668":{"position":[[4088,1],[9451,1],[11337,1]]},"670":{"position":[[5896,1],[8480,1],[11309,1]]},"672":{"position":[[3475,1],[3555,1],[4778,1],[4914,1],[6100,1],[6190,1],[7328,1],[7414,1],[7618,1],[9135,1],[9219,1]]},"682":{"position":[[243,1],[357,1]]},"690":{"position":[[213,1]]},"692":{"position":[[4911,1],[9883,1],[15589,1],[21161,1],[26271,1]]},"694":{"position":[[614,1],[8348,1],[13784,1]]},"696":{"position":[[7657,1],[14276,1],[20027,1]]},"698":{"position":[[8173,1],[13756,1]]},"716":{"position":[[64,1],[179,1]]},"718":{"position":[[6703,1],[11786,1],[17129,1],[22169,1],[27353,1],[34232,1],[39739,1]]},"720":{"position":[[4548,1],[11244,1]]},"722":{"position":[[12315,1],[18380,1],[24366,1],[30052,1],[35404,1],[40501,1],[45652,1],[50804,1]]},"734":{"position":[[9297,1]]},"740":{"position":[[4828,1],[9955,1],[15323,1],[20299,1]]},"742":{"position":[[8927,1],[16031,1],[22519,1],[27837,1]]},"744":{"position":[[6513,1],[13134,1],[19594,1]]},"746":{"position":[[15625,1]]},"758":{"position":[[300,1]]},"767":{"position":[[8313,1],[16213,1],[23114,1],[29404,1],[34587,1],[39635,1],[44697,1]]},"769":{"position":[[4709,1],[6095,1],[6361,1],[6384,1],[12028,1],[17404,1],[20123,1],[20500,1],[27148,1],[34775,1],[43762,1]]},"786":{"position":[[6233,1],[11239,1],[16332,1],[21295,1],[26343,1],[33490,1],[38534,1]]},"788":{"position":[[7739,1],[13242,1]]},"790":{"position":[[4799,1],[10450,1],[15437,1]]},"792":{"position":[[7755,1],[13432,1],[20041,1]]},"809":{"position":[[6242,1],[11269,1],[16365,1],[21322,1],[26367,1],[32998,1],[38039,1]]},"811":{"position":[[8006,1],[13717,1]]},"813":{"position":[[7209,1],[12859,1]]},"815":{"position":[[8845,1],[14391,1],[19568,1],[24682,1],[29873,1],[34979,1]]}}}],["xyz",{"_index":1433,"t":{"345":{"position":[[711,3],[878,3]]},"437":{"position":[[607,3],[2137,3]]},"541":{"position":[[152,3]]},"806":{"position":[[55,3],[86,3],[120,3],[156,3],[191,3],[323,3],[484,3]]},"811":{"position":[[2818,3],[3043,3],[4133,3],[4526,3],[5941,3],[6196,3],[7409,3],[7654,3],[8615,3],[8852,3]]}}}],["xyz.com",{"_index":2721,"t":{"815":{"position":[[272,8],[15051,7],[25358,7]]}}}],["y",{"_index":305,"t":{"16":{"position":[[9873,1],[10153,1],[10247,2]]},"40":{"position":[[50,1],[330,1],[424,2]]},"60":{"position":[[120,2],[194,1]]},"68":{"position":[[356,1]]},"383":{"position":[[70,2]]},"564":{"position":[[72,1],[167,1],[235,1],[279,1]]},"587":{"position":[[337,1],[421,1]]},"682":{"position":[[279,1]]},"690":{"position":[[248,1]]},"694":{"position":[[649,2]]},"716":{"position":[[100,1]]},"758":{"position":[[325,2]]},"769":{"position":[[6108,1],[6374,1],[6466,2],[19918,2]]}}}],["yarn",{"_index":695,"t":{"94":{"position":[[416,5],[422,4]]},"102":{"position":[[173,5],[179,4]]}}}],["ye",{"_index":1239,"t":{"245":{"position":[[389,4]]},"393":{"position":[[462,3]]},"670":{"position":[[12288,3],[12317,3],[12346,3],[12377,3],[12466,3]]},"692":{"position":[[27050,3],[27136,3],[27230,3],[27324,3],[27483,3]]},"694":{"position":[[14590,3],[14676,3],[14770,3],[14864,3],[15023,3],[15115,3],[15205,3],[15305,3],[15403,3],[15572,3]]},"696":{"position":[[21385,3],[21475,3],[21575,3],[21673,3],[21842,3]]},"718":{"position":[[40536,3],[40808,3]]},"720":{"position":[[12035,3],[12307,3],[12393,3]]},"722":{"position":[[51626,3],[51712,3],[51814,3],[51890,3],[51966,3],[52262,3],[52364,3],[52452,3],[52833,3]]},"762":{"position":[[557,4],[702,4],[757,4],[851,4],[909,4],[962,4]]},"769":{"position":[[18718,4],[38947,4],[39092,4],[39147,4],[39241,4],[39299,4],[39352,4],[44552,3],[44778,3],[44860,3],[45011,3],[45099,3],[45175,3]]}}}],["yellow",{"_index":1567,"t":{"401":{"position":[[705,7]]}}}],["you'll",{"_index":498,"t":{"52":{"position":[[707,6]]},"304":{"position":[[14,6]]},"326":{"position":[[21,6]]},"353":{"position":[[14,6]]},"355":{"position":[[1039,6]]},"591":{"position":[[14,6]]},"611":{"position":[[14,6]]}}}],["you'r",{"_index":1048,"t":{"152":{"position":[[246,6]]},"306":{"position":[[39,6]]},"355":{"position":[[39,6]]},"397":{"position":[[304,6]]},"399":{"position":[[4194,6]]},"401":{"position":[[3316,6]]},"613":{"position":[[39,6]]}}}],["you'v",{"_index":1536,"t":{"397":{"position":[[627,6]]}}}],["youtub",{"_index":129,"t":{"14":{"position":[[180,8]]}}}],["you‚Äôll",{"_index":1674,"t":{"419":{"position":[[4041,6]]},"423":{"position":[[3276,6]]},"425":{"position":[[550,6],[1146,6],[1640,6],[1719,6],[2013,6],[2593,6]]}}}],["z",{"_index":310,"t":{"16":{"position":[[10189,1]]},"40":{"position":[[366,1]]},"587":{"position":[[349,1],[433,1]]},"682":{"position":[[291,2]]},"690":{"position":[[260,2]]},"716":{"position":[[113,2]]},"769":{"position":[[6410,1]]}}}],["zanzibar",{"_index":19,"t":{"4":{"position":[[157,9]]},"14":{"position":[[0,8],[384,8],[400,8]]},"16":{"position":[[3086,8],[3117,8]]},"52":{"position":[[517,8]]},"68":{"position":[[90,8],[181,8],[365,8],[2722,8],[2738,8]]},"688":{"position":[[32,9]]},"716":{"position":[[304,9]]}}}]],"pipeline":["stemmer"]}}]