"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[6359],{42376:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=a(87462),i=(a(67294),a(3905)),r=a(5270);const o={title:"Concepts",sidebar_position:2,slug:"/concepts",description:"Learning about FGA concepts"},l="Concepts",s={unversionedId:"content/concepts",id:"content/concepts",title:"Concepts",description:"Learning about FGA concepts",source:"@site/docs/content/concepts.mdx",sourceDirName:"content",slug:"/concepts",permalink:"/docs/concepts",draft:!1,editUrl:"https://github.com/openfga/openfga.dev/edit/main/docs/content/concepts.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Concepts",sidebar_position:2,slug:"/concepts",description:"Learning about FGA concepts"},sidebar:"docs",previous:{title:"Authorization and OpenFGA",permalink:"/docs/authorization-and-openfga"},next:{title:"Configuration Language",permalink:"/docs/configuration-language"}},p={},d=[{value:"What Is A Type?",id:"what-is-a-type",level:2},{value:"What Is A Type Definition?",id:"what-is-a-type-definition",level:2},{value:"What Is An Authorization Model?",id:"what-is-an-authorization-model",level:2},{value:"What Is A Store?",id:"what-is-a-store",level:2},{value:"What Is An Object?",id:"what-is-an-object",level:2},{value:"What Is A User?",id:"what-is-a-user",level:2},{value:"What Is A Relation?",id:"what-is-a-relation",level:2},{value:"What Is A Relation Definition?",id:"what-is-a-relation-definition",level:2},{value:"What Is A Directly Related User Type?",id:"what-is-a-directly-related-user-type",level:2},{value:"What Is A Relationship Tuple?",id:"what-is-a-relationship-tuple",level:2},{value:"What Is A Relationship?",id:"what-is-a-relationship",level:2},{value:"What Are Direct And Implied Relationships?",id:"what-are-direct-and-implied-relationships",level:2},{value:"What Is A Check Request?",id:"what-is-a-check-request",level:2},{value:"What Is A List Objects Request?",id:"what-is-a-list-objects-request",level:2},{value:"What Are Contextual Tuples?",id:"what-are-contextual-tuples",level:2},{value:"What Is Type Bound Public Access?",id:"what-is-type-bound-public-access",level:2},{value:"Related Sections",id:"related-sections",level:2}],u={toc:d},h="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(h,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"concepts"},"Concepts"),(0,i.kt)(r.AH,{mdxType:"DocumentationNotice"}),(0,i.kt)("p",null,"The ",(0,i.kt)(r.rZ,{format:r.v7.ProductLink,mdxType:"ProductName"})," service answers ",(0,i.kt)(r.UV,{linkName:"authorization",section:"authentication-vs-authorization",mdxType:"IntroductionSection"})," ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-check-request"},"checks")," by determining whether a ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-a-relation"},"relationship"))," exists between an ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-object"},"object")," and a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"user"),". Checks takes into consideration the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-an-authorization-model"},"authorization model"))," of the system and the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-a-relationship-tuple"},"relationship tuples"))," present in the system at that time in order to make a decision."),(0,i.kt)("p",null,"In this guide you will learn about the most relevant FGA concepts, such as a type or an authorization model, and you will be able to explore them using the ",(0,i.kt)("a",{parentName:"p",href:"https://play.fga.dev/"},"FGA playground"),"."),(0,i.kt)(r.XQ,{mdxType:"Playground"}),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-type"},"What Is A Type?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"type")," is a string. It should define a class of objects with similar characteristics.")),(0,i.kt)("p",null,"Examples of types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workspace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repository")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"organization")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document")))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-type-definition"},"What Is A Type Definition?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"type definition")," is a configuration that defines all possible relations a user or another object can have in relation to this type.")),(0,i.kt)("p",null,"Code snippet below is an example of a type definition:"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type:"document",relations:{viewer:{this:{}},commenter:{this:{}},editor:{this:{}},owner:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]},commenter:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},owner:{directly_related_user_types:[{type:"user"}]}}}},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"})),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-an-authorization-model"},"What Is An Authorization Model?"),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},"authorization model")," is a combination of one or more type definitions. This is used to define the permission model of a system.")),(0,i.kt)("p",null,"Code snippet below is an example of an authorization model:"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{this:{}},commenter:{this:{}},editor:{this:{}},owner:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"domain",relation:"member"},{type:"user"}]},commenter:{directly_related_user_types:[{type:"domain",relation:"member"},{type:"user"}]},editor:{directly_related_user_types:[{type:"domain",relation:"member"},{type:"user"}]},owner:{directly_related_user_types:[{type:"domain",relation:"member"},{type:"user"}]}}}},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}},{type:"user"}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Authorization model"),", together with ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),", allow determination of whether a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship"},"relationship")," exists between a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"user")," and an ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-object"},"object"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," service has two different syntaxes to define the authorization model:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A JSON syntax accepted by the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," API that follows closely the original syntax discussed in the ",(0,i.kt)("a",{parentName:"li",href:"https://research.google/pubs/pub48190/"},"Zanzibar Paper"),". See ",(0,i.kt)("a",{parentName:"li",href:"/docs/configuration-language#equivalent-zanzibar-concepts"},"Equivalent Zanzibar Concepts"),"."),(0,i.kt)("li",{parentName:"ul"},"A DSL that we believe is easier to use and is used in the Okta FGA Playground to help with modeling. This is translated to the API-supported syntax before being sent to the API.")),(0,i.kt)("p",null,"Learn more about the ",(0,i.kt)(r.DC,{link:"./configuration-language",name:"{ProductName} Configuration Language",mdxType:"UpdateProductNameInLinks"}),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-store"},"What Is A Store?"),(0,i.kt)("p",null,'A "store" is a ',(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," entity used for organizing data needed to answer authorization checks.")),(0,i.kt)("p",null,"Each store contains one or more versions of an ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-authorization-model"},"authorization model")," and may contain various ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),"."),(0,i.kt)("p",null,"Store data such as the authorization model and relationship tuples cannot be shared across stores, so it is highly recommended to store all data that may be related and may affect your authorization result in a single store."),(0,i.kt)("p",null,"For completely separate authorization needs or isolated environments where data from one should not affect another (e.g. development/prod), you may want to create separate stores.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-an-object"},"What Is An Object?"),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},"object")," represents an entity in the system. We can define how various users have a relationship to it through relationship tuples and the authorization model.")),(0,i.kt)("p",null,"An object is a combination of a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-type"},"type")," and an identifier."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workspace:fb83c013-3060-41f4-9590-d3233a67938f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"repository:auth0/express-jwt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"organization:org_ajUc9kJ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document:new-roadmap"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"User"),", ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relation"},"relation")," and ",(0,i.kt)("em",{parentName:"p"},"object")," are the building blocks for ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),"."),(0,i.kt)("p",null,"For more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/direct-access"},"Direct Access"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-user"},"What Is A User?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"user")," is an entity in the system that can be related to an object.")),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"user")," is is a combination of a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-type"},"type"),", an identifier and an optional relation."),(0,i.kt)("p",null,"For example,"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"any identifier: e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"user:anne")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"user:4179af14-f0c0-4930-88fd-5570c7bf6f59")),(0,i.kt)("li",{parentName:"ul"},"any object: e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"workspace:fb83c013-3060-41f4-9590-d3233a67938f"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"repository:auth0/express-jwt")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"organization:org_ajUc9kJ")),(0,i.kt)("li",{parentName:"ul"},"a group or a set of users (also called a ",(0,i.kt)("strong",{parentName:"li"},"userset"),"): e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"organization:org_ajUc9kJ#members"),", which represents the set of users related to the object ",(0,i.kt)("inlineCode",{parentName:"li"},"organization:org_ajUc9kJ")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"member")),(0,i.kt)("li",{parentName:"ul"},"everyone, using the special syntax: ",(0,i.kt)("inlineCode",{parentName:"li"},"*"))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"User"),", ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relation"},"relation")," and ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-object"},"object")," are the building blocks for ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),"."),(0,i.kt)("p",null,"For more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/direct-access"},"Direct Access"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-relation"},"What Is A Relation?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"relation")," is a string defined in the type definition of an authorization model that defines the possibility of a relationship between an object of the same type as the type definition and a user in the system.")),(0,i.kt)("p",null,"Examples of relation:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User can be a ",(0,i.kt)("inlineCode",{parentName:"li"},"reader")," of a document"),(0,i.kt)("li",{parentName:"ul"},"Team can ",(0,i.kt)("inlineCode",{parentName:"li"},"administer")," a repo"),(0,i.kt)("li",{parentName:"ul"},"User can be a ",(0,i.kt)("inlineCode",{parentName:"li"},"member")," of a team"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-relation-definition"},"What Is A Relation Definition?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"relation definition")," lists the conditions or requirements under which this relationship would be possible.")),(0,i.kt)("p",null,"For example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"editor")," describing a possible relationship between a user and an object in the ",(0,i.kt)("inlineCode",{parentName:"li"},"document")," type allows the following:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"user identifier to object relationship"),": the user id ",(0,i.kt)("inlineCode",{parentName:"li"},"anne")," of type ",(0,i.kt)("inlineCode",{parentName:"li"},"user")," is related to the object ",(0,i.kt)("inlineCode",{parentName:"li"},"document:roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"object to object relationship"),": the object ",(0,i.kt)("inlineCode",{parentName:"li"},"application:ifft")," is related to the object ",(0,i.kt)("inlineCode",{parentName:"li"},"document:roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"userset to object relationship"),": the userset ",(0,i.kt)("inlineCode",{parentName:"li"},"organization:auth0.com#member")," is related to ",(0,i.kt)("inlineCode",{parentName:"li"},"document:roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"indicating that the set of users who are related to the object ",(0,i.kt)("inlineCode",{parentName:"li"},"organization:auth0.com")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"member")," are related to the object ",(0,i.kt)("inlineCode",{parentName:"li"},"document:roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor"),"s"),(0,i.kt)("li",{parentName:"ul"},"this allows for potential solutions to use-cases like sharing a document internally with all members of a company or a team"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"everyone to object relationship"),": everyone (",(0,i.kt)("inlineCode",{parentName:"li"},"*"),") is related to ",(0,i.kt)("inlineCode",{parentName:"li"},"document:roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"this is how one could model publicly editable documents")))))),(0,i.kt)("p",null,"These would be defined in the ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-authorization-model"},"authorization model")," as such:"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{this:{}},commenter:{this:{}},editor:{this:{}},owner:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]},commenter:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},owner:{directly_related_user_types:[{type:"user"}]}}}},{type:"user"}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"In the configuration of the document type, we have four relations: ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commenter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"editor")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"owner"),".")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"User"),", ",(0,i.kt)("em",{parentName:"p"},"relation")," and ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-object"},"object")," are the building blocks for ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),"."),(0,i.kt)("p",null,"For more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/direct-access"},"Direct Access"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-directly-related-user-type"},"What Is A Directly Related User Type?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"directly related user type")," is an array specified in the type definition to indicate what types of users can be directly related to that relation.")),(0,i.kt)("p",null,"For the following model, only ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuple")," with ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"user")," ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-type"},"type")," ",(0,i.kt)("inlineCode",{parentName:"p"},"user")," may be assigned to document."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"Relationship tuple with user ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"user:3f7768e0-4fa7-4e93-8417-4da68ce1846c")," may be written for objects with type ",(0,i.kt)("inlineCode",{parentName:"p"},"document")," and relation ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer"),", so writing ",(0,i.kt)("inlineCode",{parentName:"p"},'{"user": "user:anne","relation":"viewer","object":"document:roadmap"}')," will succeed.\nRelationship tuple writes with user type that is not allowed for the ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," relation on objects of type ",(0,i.kt)("inlineCode",{parentName:"p"},"document"),", for example ",(0,i.kt)("inlineCode",{parentName:"p"},"workspace:auth0")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"folder:planning#editor")," will be rejected, so writing ",(0,i.kt)("inlineCode",{parentName:"p"},'{"user": "folder:product","relation":"viewer","object":"document:roadmap"}')," will fail.\nThis will affect only relations that are ",(0,i.kt)("a",{parentName:"p",href:"#what-are-direct-and-implied-relationships"},"directly related")," and have ",(0,i.kt)("a",{parentName:"p",href:"/docs/configuration-language#the-direct-relationship-type-restrictions"},"the direct relationship type restrictions")," in their relation definition.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-relationship-tuple"},"What Is A Relationship Tuple?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"relationship tuple")," is a tuple consisting of a user, relation and object stored in ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),".")),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"relationship tuple")," consists of a:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-a-user"},"user")),", e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"user:anne"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"user:3f7768e0-4fa7-4e93-8417-4da68ce1846c"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"workspace:auth0")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"folder:planning#editor")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-a-relation"},"relation")),", e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"member")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"parent_workspace")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"#what-is-an-object"},"object")),", e.g ",(0,i.kt)("inlineCode",{parentName:"li"},"repo:auth0/express_jwt"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"domain:auth0.com")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"channel:marketing"))),(0,i.kt)("p",null,"An ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-authorization-model"},"authorization model"),", together with ",(0,i.kt)("em",{parentName:"p"},"relationship tuples"),", allow the determination of whether a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship"},"relationship")," exists between a ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-user"},"user")," and an ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-object"},"object"),"."),(0,i.kt)("p",null,"Throughout the documentation, you will encounter relationship tuples represented as:"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}),(0,i.kt)("p",null,"For more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/direct-access"},"Direct Access"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-relationship"},"What Is A Relationship?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"relationship")," is the realization of a relation between a user and an object.")),(0,i.kt)("p",null,"An ",(0,i.kt)("a",{parentName:"p",href:"#what-is-an-authorization-model"},"authorization model"),", together with ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),", allow the determination of whether a ",(0,i.kt)("em",{parentName:"p"},"relationship")," exists between a user and an object. Relationships may be classified as ",(0,i.kt)("a",{parentName:"p",href:"#what-are-direct-and-implied-relationships"},(0,i.kt)("em",{parentName:"a"},"direct"))," or ",(0,i.kt)("a",{parentName:"p",href:"#what-are-direct-and-implied-relationships"},(0,i.kt)("em",{parentName:"a"},"implied")),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-are-direct-and-implied-relationships"},"What Are Direct And Implied Relationships?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"direct relationship")," R between user X and object Y means the relationship tuple (user=X, relation=R, object=Y) exists, and the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," authorization model for that relation allows this direct relationship (by use of ",(0,i.kt)("a",{parentName:"p",href:"/docs/configuration-language#the-direct-relationship-type-restrictions"},"direct relationship type restrictions"),")."),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},"implied (or computed) relationship")," R exists between user X and object Y if user X is related to an object Z that is in a direct or implied relationship with object Y, and the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," authorization model allows it.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," has a ",(0,i.kt)("strong",{parentName:"p"},"direct relationship")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," if the ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-type-definition"},"type definition")," allows it (allows ",(0,i.kt)("a",{parentName:"p",href:"/docs/configuration-language#the-direct-relationship-type-restrictions"},(0,i.kt)("inlineCode",{parentName:"a"},"direct relationship type restrictions")),"), and one of the following ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples")," exist:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{_description:"Anne of type user is directly related to the document",user:"user:anne",relation:"viewer",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{_description:"Everyone (`*`) of type user is directly related to the document",user:"*",relation:"viewer",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{_description:"The userset is directly related to this document",user:"team:product#member",relation:"viewer",object:"document:new-roadmap"},{_description:"AND Anne of type user is a member of a userset (e.g. team:product#member)",user:"user:anne",relation:"member",object:"team:product#member"}],mdxType:"RelationshipTuplesViewer"})))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," has an ",(0,i.kt)("strong",{parentName:"p"},"implied relationship")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," as ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," if the type definition allows it, and the presence of relationship tuples satisfying the relationship exist."),(0,i.kt)("p",{parentName:"li"},"For example, assuming the following type definition:"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}}]}},editor:{this:{}}},metadata:{relations:{editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",{parentName:"li"},"And assuming the following relationship tuple exists in the system:"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}),(0,i.kt)("p",{parentName:"li"},"In this case, the ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship"},"relationship")," between ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," as a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," is implied from the direct ",(0,i.kt)("inlineCode",{parentName:"p"},"editor")," relationship ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," has with that same document. Thus, the following request to ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-check-request"},"check")," whether a viewer relationship exists between ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," will return ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)(r.uT,{user:"user:anne",relation:"viewer",object:"document:new-roadmap",allowed:!0,mdxType:"CheckRequestViewer"})))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-check-request"},"What Is A Check Request?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"check request")," is a call to the ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," check endpoint that returns whether the user has a certain relationship with an object.")),(0,i.kt)("p",null,"This can be done using the ",(0,i.kt)("inlineCode",{parentName:"p"},"check")," methods in the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," SDKs (",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@openfga/sdk"},"JavaScript SDK"),"/",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openfga/go-sdk"},"Go SDK"),"/",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/OpenFga.Sdk"},".NET SDK"),"), by manually calling the ",(0,i.kt)("a",{parentName:"p",href:"/api/service#Relationship%20Queries/Check"},"check endpoint")," using curl, or in your code."),(0,i.kt)("p",null,"The check endpoint responds with ",(0,i.kt)("inlineCode",{parentName:"p"},'{ "allowed": true }')," if a relationship exists, and with ",(0,i.kt)("inlineCode",{parentName:"p"},'{ "allowed": false }')," if the relationship does not."),(0,i.kt)("p",null,"For example, the following will check whether ",(0,i.kt)("inlineCode",{parentName:"p"},"anne")," of type user has a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," relation to ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap"),":"),(0,i.kt)(r.uT,{user:"user:anne",relation:"viewer",object:"document:new-roadmap",allowed:!0,mdxType:"CheckRequestViewer"}),(0,i.kt)("p",null,"For more information, please see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/interacting/relationship-queries"},"Relationship Queries page")," and the official ",(0,i.kt)("a",{parentName:"p",href:"/api/service#Relationship%20Queries/Check"},"Check API Reference"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-a-list-objects-request"},"What Is A List Objects Request?"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"list objects request")," is a call to the ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," list objects endpoint that returns all the objects of a given type that a user has a specified relationship with.")),(0,i.kt)("p",null,"This can be done using the ",(0,i.kt)("inlineCode",{parentName:"p"},"listobjects")," methods in the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," SDKs (",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@openfga/sdk"},"JavaScript SDK"),"/",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openfga/go-sdk"},"Go SDK"),"/",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/OpenFga.Sdk"},".NET SDK"),"), by manually calling the ",(0,i.kt)("a",{parentName:"p",href:"/api/service#Relationship%20Queries/ListObjects"},"list objects endpoint")," using curl, or in your code."),(0,i.kt)("p",null,"The list objects endpoint responds with a list of objects for a given type that the user has the specified relationship with."),(0,i.kt)("p",null,"For example, the following will return all the objects with document type for which ",(0,i.kt)("inlineCode",{parentName:"p"},"anne")," of type user has a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," relation with:"),(0,i.kt)(r.wA,{authorizationModelId:"1uHxCSuTP0VKPYSnkq1pbb1jeZw",objectType:"document",relation:"viewer",user:"user:anne",expectedResults:["document:otherdoc","document:planning"],mdxType:"ListObjectsRequestViewer"}),(0,i.kt)("p",null,"For more information, please see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/interacting/relationship-queries"},"Relationship Queries page")," and the official ",(0,i.kt)("a",{parentName:"p",href:"/api/service#Relationship%20Queries/ListObjects"},"Check API Reference"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-are-contextual-tuples"},"What Are Contextual Tuples?"),(0,i.kt)("p",null,"Contextual tuples are tuples that can be added to a check request, and only exist within the context of that particular request.")),(0,i.kt)("p",null,"Similar to ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuples"),", contextual tuples are composed of a user, relation and object."),(0,i.kt)("p",null,"Unlike relationship tuples, they are not written to the store. However, if contextual tuples are sent alongside a check request, in the context of this particular check request, they are treated if they had been written in the store."),(0,i.kt)("p",null,"For more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/contextual-time-based-authorization"},"Contextual and Time-Based Authorization"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/organization-context-authorization"},"Authorization Through Organization Context")," and ",(0,i.kt)("a",{parentName:"p",href:"/api/service#Relationship%20Queries/Check"},"Check API Request Documentation"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h2",{id:"what-is-type-bound-public-access"},"What Is Type Bound Public Access?"),(0,i.kt)("p",null,"In ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"}),", type bound public access (represented by ",(0,i.kt)("inlineCode",{parentName:"p"},"<type>:*"),") is a special ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," syntax meaning ",(0,i.kt)("strong",{parentName:"p"},"every object of that type")," when used as a ",(0,i.kt)("em",{parentName:"p"},"user")," within a ",(0,i.kt)("em",{parentName:"p"},"relationship tuple"),". For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"user:*")," represents every object of type ",(0,i.kt)("inlineCode",{parentName:"p"},"user")," (including those not currently present in the system).")),(0,i.kt)("p",null,"For example, in a case where you would like to indicate a certain document ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," is publicly writable (i.e. has everyone of type user as an editor), you can add the following ",(0,i.kt)("a",{parentName:"p",href:"#what-is-a-relationship-tuple"},"relationship tuple"),":"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:*",relation:"editor",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}),(0,i.kt)("p",null,"Note that you cannot use ",(0,i.kt)("inlineCode",{parentName:"p"},"<type>:*")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"relation")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," properties. In addition, you cannot use ",(0,i.kt)("inlineCode",{parentName:"p"},"<type>:*")," as part of a userset in the tuple's user field.\nFor more information, please see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/public-access"},"Modeling Public Access")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/gdrive"},"Advanced Modeling: Modeling Google Drive"),".")),(0,i.kt)("h2",{id:"related-sections"},"Related Sections"),(0,i.kt)(r.$q,{description:"Check the following sections for more on how object-to-object relationships can be used.",relatedLinks:[{title:"{ProductName} Concepts",description:"Learn about the {ProductName} Concepts",link:"./configuration-language",id:"./configuration-language"},{title:"Direct access",description:"Get started with modeling your permission system in {ProductName}",link:"./modeling/direct-access",id:"./modeling/direct-access"}],mdxType:"RelatedSection"}))}m.isMDXComponent=!0}}]);