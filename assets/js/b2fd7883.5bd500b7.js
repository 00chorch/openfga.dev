"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[8371],{22436:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var i=o(87462),n=(o(67294),o(3905)),r=o(5270);const a={title:"Google Drive",description:"Modeling Google Drive permissions",sidebar_position:1,slug:"/modeling/advanced/gdrive"},s="Modeling Google Drive permissions with <ProductName format={ProductNameFormat.ShortForm}/>",l={unversionedId:"content/modeling/advanced/gdrive",id:"content/modeling/advanced/gdrive",title:"Google Drive",description:"Modeling Google Drive permissions",source:"@site/docs/content/modeling/advanced/gdrive.mdx",sourceDirName:"content/modeling/advanced",slug:"/modeling/advanced/gdrive",permalink:"/docs/modeling/advanced/gdrive",draft:!1,editUrl:"https://github.com/openfga/openfga.dev/edit/main/docs/content/modeling/advanced/gdrive.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Google Drive",description:"Modeling Google Drive permissions",sidebar_position:1,slug:"/modeling/advanced/gdrive"},sidebar:"docs",previous:{title:"Advanced Use-Cases",permalink:"/docs/modeling/advanced"},next:{title:"GitHub",permalink:"/docs/modeling/advanced/github"}},d={},m=[{value:"Before You Start",id:"before-you-start",level:2},{value:"<ProductName format={ProductNameFormat.ShortForm}/> Concepts",id:"-concepts",level:3},{value:"Modeling Concentric Relationships",id:"modeling-concentric-relationships",level:4},{value:"Modeling Object-to-Object Relationships",id:"modeling-object-to-object-relationships",level:4},{value:"Modeling Public Access",id:"modeling-public-access",level:4},{value:"Concepts &amp; Configuration Language",id:"concepts--configuration-language",level:4},{value:"What You Will Be Modeling",id:"what-you-will-be-modeling",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Defined Scenarios",id:"defined-scenarios",level:3},{value:"Modeling Google Drive&#39;s Permissions",id:"modeling-google-drives-permissions",level:2},{value:"01. Individual Permissions",id:"01-individual-permissions",level:3},{value:"02. Organization Permissions",id:"02-organization-permissions",level:3},{value:"03. Folder Permission Propagation",id:"03-folder-permission-propagation",level:3},{value:"04. Sharing Files And Folders Publicly",id:"04-sharing-files-and-folders-publicly",level:3},{value:"Related Sections",id:"related-sections",level:2}],p={toc:m},u="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,i.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"modeling-google-drive-permissions-with-"},"Modeling Google Drive permissions with ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})),(0,n.kt)(r.AH,{mdxType:"DocumentationNotice"}),(0,n.kt)("p",null,"This tutorial explains how to represent ",(0,n.kt)("a",{parentName:"p",href:"https://www.google.com/intl/en-GB/drive/"},"Google Drive")," permissions model with ",(0,n.kt)(r.rZ,{format:r.v7.ProductLink,mdxType:"ProductName"}),"."),(0,n.kt)(r.S1,{title:"What you will learn",mdxType:"CardBox"},(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Indicate ",(0,n.kt)(r.uH,{section:"what-is-a-relationship",linkName:"relationships",mdxType:"ProductConcept"})," between a group of ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(r.uH,{section:"what-is-a-user",linkName:"users",mdxType:"ProductConcept"}))," and an ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(r.uH,{section:"what-is-an-object",linkName:"object",mdxType:"ProductConcept"})),". See ",(0,n.kt)("a",{parentName:"li",href:"/docs/modeling/user-groups"},"Modeling User Groups")," for more.",(0,n.kt)("br",null),"\nUsed here to indicate that all users within a domain can access a document (sharing a document within an organization)."),(0,n.kt)("li",{parentName:"ul"},"Model ",(0,n.kt)("strong",{parentName:"li"},"concentric relationship")," to have a certain ",(0,n.kt)(r.uH,{section:"what-is-a-relation",linkName:"relation",mdxType:"ProductConcept"})," on an object imply another relation on the same object. See ",(0,n.kt)("a",{parentName:"li",href:"/docs/modeling/building-blocks/concentric-relationships"},"Modeling Concepts: Concentric Relationships")," for more.",(0,n.kt)("br",null),"\nUsed here is to indicate that writers are also commenters and viewers."),(0,n.kt)("li",{parentName:"ul"},"Using ",(0,n.kt)("a",{parentName:"li",href:"/docs/configuration-language#the-union-operator"},(0,n.kt)("strong",{parentName:"a"},"the union operator"))," condition to indicate that a user might have a certain relation with an object if they match any of the criteria indicated.",(0,n.kt)("br",null),"\nUsed here to indicate that a user can be a viewer on a document, or can have the viewer relationship implied through commenter."),(0,n.kt)("li",{parentName:"ul"},"Using the ",(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(r.uH,{section:"what-is-type-bound-public-access",linkName:"type bound public access",mdxType:"ProductConcept"}))," in a ",(0,n.kt)(r.uH,{section:"what-is-a-relationship-tuple",linkName:"relationship tuple's",mdxType:"ProductConcept"})," user field to indicate that everyone has a certain relation with an object. See ",(0,n.kt)("a",{parentName:"li",href:"/docs/modeling/public-access"},"Modeling Public Access")," for more.",(0,n.kt)("br",null),"\nUsed here to ",(0,n.kt)("a",{parentName:"li",href:"#04-sharing-files-and-folders-publicly"},"share documents publicly"),"."),(0,n.kt)("li",{parentName:"ul"},"Model ",(0,n.kt)("a",{parentName:"li",href:"/docs/modeling/parent-child"},(0,n.kt)("strong",{parentName:"a"},"parent-child objects"))," to indicate that a user having a relationship with a certain object implies having a relationship with another object in ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),".",(0,n.kt)("br",null),"\nUsed here is to indicate that a writer on a folder is a writer on all documents inside that folder."))),(0,n.kt)(r.XQ,{title:"Google Drive",preset:"drive",example:"Google Drive",store:"gdrive",mdxType:"Playground"}),(0,n.kt)("h2",{id:"before-you-start"},"Before You Start"),(0,n.kt)("p",null,"In order to understand this guide correctly you must be familiar with some ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," concepts and know how to develop the things that we will list below."),(0,n.kt)("details",null,(0,n.kt)("summary",null,(0,n.kt)("h3",{id:"-concepts"},(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," Concepts"),(0,n.kt)("p",null,"It would be helpful to have an understanding of some concepts of ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," before you start.")),(0,n.kt)("h4",{id:"modeling-concentric-relationships"},"Modeling Concentric Relationships"),(0,n.kt)("p",null,"You need to know how to update the authorization model to allow having nested relations such as all writers are readers. ",(0,n.kt)("a",{parentName:"p",href:"/docs/modeling/building-blocks/concentric-relationships"},"Learn more \u2192")),(0,n.kt)("h4",{id:"modeling-object-to-object-relationships"},"Modeling Object-to-Object Relationships"),(0,n.kt)("p",null,"You need to know how to create relationships between objects and how that might affect a user's relationships to those objects. ",(0,n.kt)("a",{parentName:"p",href:"/docs/modeling/building-blocks/object-to-object-relationships"},"Learn more \u2192")),(0,n.kt)("p",null,"Used here to indicate that users who have access to view a folder have access to view all documents inside it."),(0,n.kt)("h4",{id:"modeling-public-access"},"Modeling Public Access"),(0,n.kt)("p",null,"You need to know how to add a relationship tuple to indicate that a resource is publicly available. ",(0,n.kt)("a",{parentName:"p",href:"/docs/modeling/public-access"},"Learn more \u2192")),(0,n.kt)("h4",{id:"concepts--configuration-language"},"Concepts & Configuration Language"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)(r.uH,{mdxType:"ProductConcept"})),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/configuration-language"},"Configuration Language")))),(0,n.kt)("h2",{id:"what-you-will-be-modeling"},"What You Will Be Modeling"),(0,n.kt)("p",null,"Google Drive is a system to store, share, and collaborate on files and folders. ",(0,n.kt)("a",{parentName:"p",href:"https://www.google.com/drive/"},"Source")),(0,n.kt)("p",null,"In this tutorial, you will build a subset of the Google Drive permission model (detailed below) in ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"}),", using some scenarios to validate the model."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: For brevity, this tutorial will not model all of Google Drive's permissions. Instead, it will focus on modeling for the scenarios outlined below")),(0,n.kt)("h3",{id:"requirements"},"Requirements"),(0,n.kt)("p",null,"Google Drive's permission model is represented in ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/ref-roles"},"their documentation"),"."),(0,n.kt)("p",null,"In this tutorial, you will be focusing on a subset of these permissions."),(0,n.kt)("p",null,"Requirements:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Users can be owners, editors, commenters and viewers of documents"),(0,n.kt)("li",{parentName:"ul"},"Documents can be shared with all users in a domain"),(0,n.kt)("li",{parentName:"ul"},"Folders can contain documents and users with a certain permission on a folder have that same permission to a document in that folder"),(0,n.kt)("li",{parentName:"ul"},"Documents and folders can be shared publicly")),(0,n.kt)("h3",{id:"defined-scenarios"},"Defined Scenarios"),(0,n.kt)("p",null,"There will be the following users:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Anne, who is in the xyz domain"),(0,n.kt)("li",{parentName:"ul"},"Beth, who is in the xyz domain"),(0,n.kt)("li",{parentName:"ul"},"Charles, who is in the xyz domain"),(0,n.kt)("li",{parentName:"ul"},"Diane, who is NOT in the xyz domain"),(0,n.kt)("li",{parentName:"ul"},"Erik, who is NOT in the xyz domain")),(0,n.kt)("p",null,"There will be:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a 2021-budget document, owned by Anne, shared for commenting with Beth and viewable by all members of the xyz domain."),(0,n.kt)("li",{parentName:"ul"},"a 2021-planning folder, viewable by Diane and contains the 2021-budget document"),(0,n.kt)("li",{parentName:"ul"},"a 2021-public-roadmap document, owned by Anne, available for members xyz domain to comment on and is publicly viewable")),(0,n.kt)("h2",{id:"modeling-google-drives-permissions"},"Modeling Google Drive's Permissions"),(0,n.kt)("h3",{id:"01-individual-permissions"},"01. Individual Permissions"),(0,n.kt)("p",null,"To keep thing simple and focus on ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," features rather than Google Drive complexity we will model only four ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/ref-roles"},"roles")," (Viewer, Commenter, Writer, Owner)."),(0,n.kt)("p",null,"At the end of this section we want to have the following permissions represented:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Image showing permissions",src:o(99459).Z,width:"940",height:"357"})),(0,n.kt)("p",null,"To represent permissions in ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," we use ",(0,n.kt)(r.uH,{section:"what-is-a-relation",linkName:"relations",mdxType:"ProductConcept"}),". For document permissions we need to create the following ",(0,n.kt)(r.uH,{section:"what-is-an-authorization-model",linkName:"authorization model",mdxType:"ProductConcept"}),":"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{owner:{this:{}},writer:{this:{}},commenter:{this:{}},viewer:{this:{}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},writer:{directly_related_user_types:[{type:"user"}]},commenter:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("p",null,"The ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," service determines if a ",(0,n.kt)(r.uH,{section:"what-is-a-user",linkName:"user",mdxType:"ProductConcept"})," has access to an ",(0,n.kt)(r.uH,{section:"what-is-an-object",linkName:"object",mdxType:"ProductConcept"})," by ",(0,n.kt)(r.uH,{section:"what-is-a-check-request",linkName:"checking",mdxType:"ProductConcept"})," if the user has a relation to that object. Let us examine one of those relations in detail:"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type:"document",relations:{viewer:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'The snippet above indicates that objects of type document have users related to them as "viewer" if those users belong to the userset of all users related to the document as "viewer".'),(0,n.kt)("p",{parentName:"admonition"},"This means that a user can be ",(0,n.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"directly related",mdxType:"ProductConcept"}),' as a viewer to an object of type "document"')),(0,n.kt)("p",null,"If we want to say ",(0,n.kt)("inlineCode",{parentName:"p"},"beth")," is a commenter of ",(0,n.kt)("strong",{parentName:"p"},"document:2021-budget")," we create this relationship tuple:"),(0,n.kt)(r.Gb,{relationshipTuples:[{user:"user:beth",relation:"commenter",object:"document:2021-budget"}],mdxType:"WriteRequestViewer"}),(0,n.kt)("p",null,"We can now ask ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),' "is ',(0,n.kt)("inlineCode",{parentName:"p"},"beth")," a commenter of repository ",(0,n.kt)("strong",{parentName:"p"},"document:2021-budget"),'?"'),(0,n.kt)(r.uT,{user:"user:beth",relation:"commenter",object:"document:2021-budget",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)("p",null,"We could also say that ",(0,n.kt)("inlineCode",{parentName:"p"},"anne")," is an owner of the same document:"),(0,n.kt)(r.Gb,{relationshipTuples:[{user:"user:anne",relation:"owner",object:"document:2021-budget"}],mdxType:"WriteRequestViewer"}),(0,n.kt)("p",null,"And ",(0,n.kt)(r.uH,{section:"what-is-a-check-request",linkName:"ask",mdxType:"ProductConcept"})," some questions to ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),":"),(0,n.kt)(r.uT,{user:"user:anne",relation:"owner",object:"document:2021-budget",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)(r.uT,{user:"user:anne",relation:"writer",object:"document:2021-budget",allowed:!1,mdxType:"CheckRequestViewer"}),(0,n.kt)("p",null,"The first reply makes sense but the second one does not. Intuitively, if ",(0,n.kt)("inlineCode",{parentName:"p"},"anne")," was an ",(0,n.kt)("strong",{parentName:"p"},"owner"),", she was also be a ",(0,n.kt)("strong",{parentName:"p"},"writer"),". In fact, Google Drive explains this in ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/ref-roles"},"their documentation")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Image showing roles",src:o(38035).Z,width:"677",height:"789"})),(0,n.kt)("p",null,"To make ",(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),' aware of this "concentric" permission model we need to update our definitions:'),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{owner:{this:{}},writer:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},commenter:{union:{child:[{this:{}},{computedUserset:{relation:"writer"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},writer:{directly_related_user_types:[{type:"user"}]},commenter:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Let's examine one of those relations in detail:"),(0,n.kt)("p",{parentName:"admonition"},'objects of type document have users related to them as "viewer": if they belong to any of (the union of) the following:'),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},'the userset of all users related to the document as "viewer"'),(0,n.kt)("li",{parentName:"ul"},'the userset of all users related to the document as "commenter"'))),(0,n.kt)("p",null,"With this update our model now supports nested definitions and now:"),(0,n.kt)(r.uT,{user:"user:anne",relation:"owner",object:"document:2021-budget",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)(r.uT,{user:"user:anne",relation:"writer",object:"document:2021-budget",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)("h3",{id:"02-organization-permissions"},"02. Organization Permissions"),(0,n.kt)("p",null,"Google Drive allows you to share a file with everyone in your organization as a viewer, commenter or writer/editor."),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(79368).Z,width:"1302",height:"724"})),(0,n.kt)("p",null,"At the end of this section we want to end up with the following permissions represented:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Image showing permissions",src:o(38836).Z,width:"940",height:"542"})),(0,n.kt)("p",null,"To add support for domains and members all we need to do is add this object to the ",(0,n.kt)(r.rZ,{format:r.v7.ProductLink,mdxType:"ProductName"})," ",(0,n.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"authorization model",mdxType:"ProductConcept"}),". In addition, update the model to allow domain member to be assigned to document:"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{owner:{this:{}},writer:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},commenter:{union:{child:[{this:{}},{computedUserset:{relation:"writer"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},commenter:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'Objects of type "domain" have users related to them as "member" if they belong to the userset of all users related to the domain as "member".'),(0,n.kt)("p",{parentName:"admonition"},"In other words, users can be direct members of a domain.")),(0,n.kt)("p",null,"Let's now create a domain, add members to it and make all members ",(0,n.kt)("strong",{parentName:"p"},"viewers")," of ",(0,n.kt)("strong",{parentName:"p"},"document:2021-budget"),"."),(0,n.kt)(r.Gb,{relationshipTuples:[{_description:"make anne, beth, charles a member of the xyz domain",user:"user:anne",relation:"member",object:"domain:xyz"},{user:"user:beth",relation:"member",object:"domain:xyz"},{user:"user:charles",relation:"member",object:"domain:xyz"},{_description:"make members of xyz domain viewers of document:2021-budget",user:"domain:xyz#member",relation:"viewer",object:"document:2021-budget"}],mdxType:"WriteRequestViewer"}),(0,n.kt)("p",null,"The last relationship tuple introduces a new ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}))," concept. A ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)(r.uH,{section:"what-is-a-user",linkName:"userset",mdxType:"ProductConcept"})),". When the value of a user is formatted like this ",(0,n.kt)("strong",{parentName:"p"},"objectType:objectId#relation"),", ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," will automatically expand the userset into all its individual user identifiers:"),(0,n.kt)(r.uT,{user:"user:charles",relation:"viewer",object:"document:2021-budget",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)("h3",{id:"03-folder-permission-propagation"},"03. Folder Permission Propagation"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/drive/api/v3/manage-sharing#permission_propagation"},"Permission propagation")," happens between folders and files: if you are a viewer in a folder, you can view its documents. This applies even when you are not explicitly a viewer in a document.\n",(0,n.kt)("img",{parentName:"p",src:"https://pbs.twimg.com/media/Eme_FlYW4AEAYfi?format=jpg&name=large",alt:"Image"})),(0,n.kt)("p",null,"At the end of this section we want to end up with the following permissions represented. Note that a folder is an object in the ",(0,n.kt)("strong",{parentName:"p"},"document")," type, as we do not need a separate type:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Image showing permissions",src:o(33888).Z,width:"940",height:"578"})),(0,n.kt)("p",null,"We need to add the notion that a ",(0,n.kt)("strong",{parentName:"p"},"document")," can be the ",(0,n.kt)("strong",{parentName:"p"},"parent")," of another ",(0,n.kt)("strong",{parentName:"p"},"document"),". We know how to do that:"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{parent:{this:{}},owner:{this:{}},writer:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},commenter:{union:{child:[{this:{}},{computedUserset:{relation:"writer"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}}]}}},metadata:{relations:{parent:{directly_related_user_types:[{type:"document"}]},owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},commenter:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'Notice the newly added "parent" relation in the configuration above.')),(0,n.kt)("p",null,"We can indicate this relation by adding the following relationship tuples"),(0,n.kt)(r.Gb,{relationshipTuples:[{_description:"Diane is a viewer of document:2021-planning",user:"user:diane",relation:"viewer",object:"document:2021-planning"},{_description:"document:2021-planning is a parent of document:2021-budget",user:"document:2021-planning",relation:"parent",object:"document:2021-budget"}],mdxType:"WriteRequestViewer"}),(0,n.kt)("p",null,"What we still lack is the ability to propagate permissions from parent to children. We want to say that a user is a viewer of a document if either:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"[done]"," they have a viewer relationship (directly or through domain membership)"),(0,n.kt)("li",{parentName:"ul"},"[pending]"," they have a viewer relationship with the parent document")),(0,n.kt)("p",null,"We need a way to consider the parent viewers, not just direct viewers of the document when getting a check for:"),(0,n.kt)(r.uT,{user:"user:diane",relation:"viewer",object:"document:2021-budget",mdxType:"CheckRequestViewer"}),(0,n.kt)("p",null,"More details on this technique can be found in the section ",(0,n.kt)("a",{parentName:"p",href:"/docs/modeling/parent-child"},"Modeling Parent-Child Objects"),"."),(0,n.kt)("p",null,"We express it like this:"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'The users with a viewer relationship to a certain object of type "document" are any of:'),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},'the "viewers": the set of users who are ',(0,n.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"directly related",mdxType:"ProductConcept"}),' to the document as a "viewer"'),(0,n.kt)("li",{parentName:"ul"},'the "commenters": the set of users who are related to the object as "commenter"'),(0,n.kt)("li",{parentName:"ul"},'the "viewers of the parents": from the objects who are related to the doc as parent, return the sets of users who are related to those objects as "viewer"')),(0,n.kt)("p",{parentName:"admonition"},"What the added section is doing is:"),(0,n.kt)("ol",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ol"},"read all relationship tuples related to document:2021-budget as parent which returns:")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},'[{ "object": "document:2021-budget", "relation": "parent", "user": "document:2021-planning" }]')),(0,n.kt)("ol",{parentName:"admonition",start:2},(0,n.kt)("li",{parentName:"ol"},"for each relationship tuple read, return all usersets that match the following, returning tuples of shape:")),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},'{ "object": "document:2021-planning", "viewer", "user": ??? }')),(0,n.kt)("p",{parentName:"admonition"},"including: ",(0,n.kt)("inlineCode",{parentName:"p"},'{ "object": "document:2021-planning", "viewer", "user": "user:diane" }'))),(0,n.kt)("p",null,"The updated authorization model looks like this:"),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{owner:{union:{child:[{this:{}},{tupleToUserset:{computedUserset:{relation:"owner"},tupleset:{relation:"parent"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}},{tupleToUserset:{computedUserset:{relation:"writer"},tupleset:{relation:"parent"}}}]}},commenter:{union:{child:[{this:{}},{computedUserset:{relation:"writer"}},{tupleToUserset:{computedUserset:{relation:"commenter"},tupleset:{relation:"parent"}}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}},{tupleToUserset:{computedUserset:{relation:"viewer"},tupleset:{relation:"parent"}}}]}},parent:{this:{}}},metadata:{relations:{parent:{directly_related_user_types:[{type:"document"}]},owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},commenter:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("h3",{id:"04-sharing-files-and-folders-publicly"},"04. Sharing Files And Folders Publicly"),(0,n.kt)("p",null,"Google Drive has a feature which allows ",(0,n.kt)("a",{parentName:"p",href:"https://support.google.com/a/users/answer/9308873?hl=en"},"sharing a file or folder publicly"),", and specifying the permissions a public user might have (writer/commenter/viewer)."),(0,n.kt)("p",null,"Assume that ",(0,n.kt)("inlineCode",{parentName:"p"},"Anne")," has created a new document: ",(0,n.kt)("inlineCode",{parentName:"p"},"2021-public-roadmap"),", has shared it with commenter permissions to the ",(0,n.kt)("inlineCode",{parentName:"p"},"xyz.com"),", and has shared it as view only with the public at large."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Image showing requirements",src:o(63597).Z,width:"940",height:"649"})),(0,n.kt)("p",null,"Here's where another ",(0,n.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," feature, ",(0,n.kt)(r.uH,{section:"what-is-type-bound-public-access",linkName:"type bound public access",mdxType:"ProductConcept"})," (as in everyone), would come in handy."),(0,n.kt)("p",null,"First, we will need to update our model to allow for public access with type ",(0,n.kt)("inlineCode",{parentName:"p"},"user")," for viewer relation."),(0,n.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"document",relations:{owner:{union:{child:[{this:{}},{tupleToUserset:{computedUserset:{relation:"owner"},tupleset:{relation:"parent"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}},{tupleToUserset:{computedUserset:{relation:"writer"},tupleset:{relation:"parent"}}}]}},commenter:{union:{child:[{this:{}},{computedUserset:{relation:"writer"}},{tupleToUserset:{computedUserset:{relation:"commenter"},tupleset:{relation:"parent"}}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"commenter"}},{tupleToUserset:{computedUserset:{relation:"viewer"},tupleset:{relation:"parent"}}}]}},parent:{this:{}}},metadata:{relations:{parent:{directly_related_user_types:[{type:"document"}]},owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},commenter:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"user",wildcard:{}},{type:"domain",relation:"member"}]}}}},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,n.kt)("p",null,"To mark Anne as the owner, the domain members as commenters and the public as viewers, we need to add the following relationship tuples:"),(0,n.kt)(r.Gb,{relationshipTuples:[{_description:"Anne is the owner of document:2021-public-roadmap",user:"user:anne",relation:"owner",object:"document:2021-public-roadmap"},{_description:"Members of the domain:xyz can comment on document:2021-public-roadmap",user:"domain:xyz#member",relation:"commenter",object:"document:2021-public-roadmap"},{_description:"Everyone with type `user` can view document:2021-public-roadmap",user:"user:*",relation:"viewer",object:"document:2021-public-roadmap"}],mdxType:"WriteRequestViewer"}),(0,n.kt)("p",null,"Anne is an owner of the document"),(0,n.kt)(r.uT,{user:"user:anne",relation:"owner",object:"document:2021-public-roadmap",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)("p",null,"Beth is a member of the xyz.com domain, and so can comment but cannot write"),(0,n.kt)(r.uT,{user:"user:beth",relation:"writer",object:"document:2021-public-roadmap",allowed:!1,mdxType:"CheckRequestViewer"}),(0,n.kt)(r.uT,{user:"user:beth",relation:"commenter",object:"document:2021-public-roadmap",allowed:!0,mdxType:"CheckRequestViewer"}),(0,n.kt)("p",null,"Erik is NOT a member of the xyz.com domain, and so can only view the document"),(0,n.kt)(r.uT,{user:"user:erik",relation:"writer",object:"document:2021-public-roadmap",allowed:!1,mdxType:"CheckRequestViewer"}),(0,n.kt)(r.uT,{user:"user:erik",relation:"viewer",object:"document:2021-public-roadmap",allowed:!1,mdxType:"CheckRequestViewer"}),(0,n.kt)(r.XQ,{title:"Google Drive",preset:"drive",example:"Google Drive",store:"gdrive",mdxType:"Playground"}),(0,n.kt)("h2",{id:"related-sections"},"Related Sections"),(0,n.kt)(r.$q,{description:"Take a look at the following sections for more information.",relatedLinks:[{title:"Search with permissions",description:"Give your users search results with objects that they have access to",link:"../../interacting/search-with-permissions"}],mdxType:"RelatedSection"}))}c.isMDXComponent=!0},99459:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-gdrive1-22dac26c1f55a55daeb65acff88ee193.svg"},38836:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-gdrive2-abe697d20cfce6658d6a09aed7af8d97.svg"},33888:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-gdrive3-e82c9d5308de7d3b5e7b74b59d87044f.svg"},63597:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-gdrive4-9b75eafa345dde22742988b225671a69.svg"},79368:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-org-fe69008225e62f28ff2280708e875f09.svg"},38035:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/gdrive-roles-ac60dede6567bd76e873d1a81d642532.svg"}}]);