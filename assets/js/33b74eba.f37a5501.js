"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[1429],{91117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(87462),i=(n(67294),n(3905)),r=n(5270);const o={title:"Configuration Language",sidebar_position:2,slug:"/configuration-language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model"},p="Configuration Language",l={unversionedId:"content/configuration-language",id:"content/configuration-language",title:"Configuration Language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model",source:"@site/docs/content/configuration-language.mdx",sourceDirName:"content",slug:"/configuration-language",permalink:"/docs/configuration-language",draft:!1,editUrl:"https://github.com/openfga/openfga.dev/edit/main/docs/content/configuration-language.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration Language",sidebar_position:2,slug:"/configuration-language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model"},sidebar:"docs",previous:{title:"Concepts",permalink:"/docs/concepts"},next:{title:"Getting Started",permalink:"/docs/getting-started"}},s={},d=[{value:"What Does The Configuration Language Look Like?",id:"what-does-the-configuration-language-look-like",level:2},{value:"The Direct Relationship Type Restrictions",id:"the-direct-relationship-type-restrictions",level:3},{value:"Referencing Other Relations On The Same Object",id:"referencing-other-relations-on-the-same-object",level:3},{value:"Referencing Relations On Related Objects",id:"referencing-relations-on-related-objects",level:3},{value:"The Union Operator",id:"the-union-operator",level:3},{value:"The Intersection Operator",id:"the-intersection-operator",level:3},{value:"The Exclusion Operator",id:"the-exclusion-operator",level:3},{value:"Equivalent Zanzibar Concepts",id:"equivalent-zanzibar-concepts",level:2},{value:"Related Sections",id:"related-sections",level:2}],m={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration-language"},"Configuration Language"),(0,i.kt)(r.AH,{mdxType:"DocumentationNotice"}),(0,i.kt)("p",null,"The ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"}),"'s Configuration Language is used to build a representation of a system's ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-an-authorization-model",linkName:"authorization model",mdxType:"ProductConcept"})),". It informs ",(0,i.kt)(r.DC,{link:"/api/service",name:"{ProductName}'s API",mdxType:"UpdateProductNameInLinks"})," on what the ",(0,i.kt)(r.uH,{section:"what-is-a-type",linkName:"object types",mdxType:"ProductConcept"})," in the system are and how they could relate to one another. It describes the ",(0,i.kt)(r.uH,{section:"what-is-a-relation",linkName:"relations",mdxType:"ProductConcept"})," possible on an object of a certain type and lists the conditions under which one is related to that object."),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"DSL")," and the ",(0,i.kt)("strong",{parentName:"p"},"JSON")," syntax are two presentations of that configuration language. The JSON syntax is accepted by the API and closely matches the API described in the ",(0,i.kt)("a",{parentName:"p",href:"https://research.google/pubs/pub48190/"},"Zanzibar paper"),". The DSL is syntactic sugar on top of the JSON syntax and compiles down to it before being sent to ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"}),"'s API. The DSL is meant to make modeling easier and more intuitive."),(0,i.kt)("p",null,"You'll encounter the JSON syntax when calling the API directly or through the ",(0,i.kt)("a",{parentName:"p",href:"./getting-started"},"SDKs"),", and the DSL when interacting with ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," through the ",(0,i.kt)("a",{parentName:"p",href:"https://play.fga.dev/"},"Playground"),". Throughout the documentation you can switch between the two presentations."),(0,i.kt)("p",null,"To understand this guide better, you should be familiar with some ",(0,i.kt)(r.uH,{mdxType:"ProductConcept"})," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/getting-started"},"How to get started on modeling"),"."),(0,i.kt)("h2",{id:"what-does-the-configuration-language-look-like"},"What Does The Configuration Language Look Like?"),(0,i.kt)("p",null,"Below is a sample authorization model. In the next sections we'll go over the building blocks that make the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," configuration language."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}},{type:"folder",relations:{can_share:{computedUserset:{object:"",relation:"writer"}},owner:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"owner"}}}]}},parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"writer"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"owner"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"writer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}},{type:"document",relations:{can_share:{computedUserset:{object:"",relation:"writer"}},owner:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"owner"}}}]}},parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"writer"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"owner"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"writer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("em",{parentName:"p"},"authorization model")," describes four ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-type",linkName:"types",mdxType:"ProductConcept"}))," of objects: ",(0,i.kt)("inlineCode",{parentName:"p"},"user"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"domain"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"folder")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"document"),"."),(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"domain")," ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"type definition",mdxType:"ProductConcept"}))," has a single ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-relation",linkName:"relation",mdxType:"ProductConcept"}))," called ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," that only allows ",(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationships",mdxType:"ProductConcept"}),"."),(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"folder")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"document")," ",(0,i.kt)("em",{parentName:"p"},"type definitions")," each have five ",(0,i.kt)("em",{parentName:"p"},"relations"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"parent_folder"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"owner"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"can_share"),".")),(0,i.kt)("h3",{id:"the-direct-relationship-type-restrictions"},"The Direct Relationship Type Restrictions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[<string, <string>, ...]"),", when used at the beginning of a ",(0,i.kt)(r.uH,{section:"what-is-a-relation-definition",linkName:"relation definition",mdxType:"ProductConcept"})," allows ",(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationships",mdxType:"ProductConcept"})," from the objects of these specified types. The strings can be of three formats:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<type>"),": indicating that tuples relating objects of those types as users can be written (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"group:marketing")," can be related if ",(0,i.kt)("inlineCode",{parentName:"li"},"group")," is in the type restrictions)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<type:*>"),": indicating that a tuple relating all objects of that type can be written (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"user:*")," can be added if ",(0,i.kt)("inlineCode",{parentName:"li"},"user:*")," is in the type restrictions)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<type>#<relation>"),": indicating that tuples with sets of users that are related to an object of that type by that particular relation (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"group:marketing#member")," can be added if ",(0,i.kt)("inlineCode",{parentName:"li"},"group#member")," is in the type restrictions)")),(0,i.kt)("p",null,"If the direct relationship type restrictions are missing, then no tuple can be written relating other objects as this particular relation with objects of this type (direct relationships are disallowed)."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"[<type1>, <type2>, ...]")," in the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," DSL translates to ",(0,i.kt)("inlineCode",{parentName:"p"},"this")," in the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," API syntax.")),(0,i.kt)("p",null,"For example, let's take a closer look at the ",(0,i.kt)("inlineCode",{parentName:"p"},"team")," type."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type:"team",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"},{type:"user:*"},{type:"team",relation:"member"}]}}}},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"This ",(0,i.kt)("inlineCode",{parentName:"p"},"team")," ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"type definition",mdxType:"ProductConcept"}))," defines all the ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-relation",linkName:"relations",mdxType:"ProductConcept"}))," that ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-user",linkName:"users",mdxType:"ProductConcept"}))," can have with an ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-an-object",linkName:"object",mdxType:"ProductConcept"}))," of ",(0,i.kt)("em",{parentName:"p"},"type")," ",(0,i.kt)("inlineCode",{parentName:"p"},"team"),". In this case the ",(0,i.kt)("em",{parentName:"p"},"relation")," is: ",(0,i.kt)("inlineCode",{parentName:"p"},"member"),"."),(0,i.kt)("p",null,"Due to the direct relationship type restrictions (",(0,i.kt)("inlineCode",{parentName:"p"},"[user, team#member]"),") being used, a user in the system can have a ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationship",mdxType:"ProductConcept"}))," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"team")," type as a ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," for objects of "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"type ",(0,i.kt)("inlineCode",{parentName:"li"},"user")),(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("inlineCode",{parentName:"li"},"user")," ",(0,i.kt)(r.uH,{section:"what-is-type-bound-public-access",linkName:"type bound public access",mdxType:"ProductConcept"})," (",(0,i.kt)("inlineCode",{parentName:"li"},"user:*"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/modeling/building-blocks/usersets"},"usersets")," that have a ",(0,i.kt)("inlineCode",{parentName:"li"},"team")," type and a ",(0,i.kt)("inlineCode",{parentName:"li"},"member")," relation (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"team:product#member"),")")),(0,i.kt)("p",null,"In the type definition snippet above, ",(0,i.kt)("inlineCode",{parentName:"p"},"anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"team:product")," if ",(0,i.kt)("em",{parentName:"p"},"any one of")," the following relationship tuple sets exist:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"member",object:"team:product",_description:"Anne is directly related to the product team as a member"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:*",relation:"member",object:"team:product",_description:"Everyone (`*`) is directly related to the product team as a member"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)(r.Wz,{relationshipTuples:[{user:"team:contoso#member",relation:"member",object:"team:product",_description:"Members of the contoso team are members of the product team"},{user:"user:anne",relation:"member",object:"team:contoso",_description:"Anne is a member of the contoso team"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("p",null,"For more examples, take look at ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/building-blocks/direct-relationships"},"Modeling Building Blocks: Direct Relationships"),"."),(0,i.kt)("h3",{id:"referencing-other-relations-on-the-same-object"},"Referencing Other Relations On The Same Object"),(0,i.kt)("p",null,"You can also reference other relations on the same object. Let us look at a simplified ",(0,i.kt)("inlineCode",{parentName:"p"},"document")," ",(0,i.kt)("em",{parentName:"p"},"type definition"),"."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type:"document",relations:{editor:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}}]}},can_rename:{computedUserset:{relation:"editor"}}},metadata:{relations:{editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"The above ",(0,i.kt)("inlineCode",{parentName:"p"},"document")," ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"type definition",mdxType:"ProductConcept"}))," defines all the ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-relation",linkName:"relations",mdxType:"ProductConcept"}))," that ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-a-user",linkName:"users",mdxType:"ProductConcept"}))," can have with an ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-is-an-object",linkName:"object",mdxType:"ProductConcept"}))," of ",(0,i.kt)("em",{parentName:"p"},"type")," ",(0,i.kt)("inlineCode",{parentName:"p"},"document"),". In this case the ",(0,i.kt)("em",{parentName:"p"},"relations")," are: ",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"can_rename"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"can_rename")," ",(0,i.kt)("em",{parentName:"p"},"relation definitions")," are both referencing ",(0,i.kt)("inlineCode",{parentName:"p"},"editor"),", which is another relation on the same type."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Notice how ",(0,i.kt)("inlineCode",{parentName:"p"},"can_rename")," does not reference the ",(0,i.kt)("a",{parentName:"p",href:"#the-direct-relationship-type-restrictions"},(0,i.kt)("em",{parentName:"a"},"direct relationship type restrictions")),", indicating that a direct relationship is not possible (as in a user cannot be directly assigned this relation, it has to be inherited through an assignment of the ",(0,i.kt)("inlineCode",{parentName:"p"},"editor")," relation). The ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," relation on the other hand allows both ",(0,i.kt)("em",{parentName:"p"},"direct and indirect relationships")," using the ",(0,i.kt)("a",{parentName:"p",href:"#the-union-operator"},"Union Operator"),".")),(0,i.kt)("p",null,"In the ",(0,i.kt)("em",{parentName:"p"},"type definition")," snippet above, ",(0,i.kt)("inlineCode",{parentName:"p"},"anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," if any one of the following relationship tuple sets exists:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"anne")," is an ",(0,i.kt)("em",{parentName:"p"},"editor")," of ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap")),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap",_description:"Anne is an editor of the new-roadmap document"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"anne")," is a ",(0,i.kt)("em",{parentName:"p"},"viewer")," of ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap")),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap",_description:"Anne is a viewer of the new-roadmap document"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"anne")," has a ",(0,i.kt)("inlineCode",{parentName:"p"},"can_rename")," relationship with ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," only if ",(0,i.kt)("inlineCode",{parentName:"p"},"anne")," has an ",(0,i.kt)("inlineCode",{parentName:"p"},"editor")," relationship with the document:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is an ",(0,i.kt)("em",{parentName:"li"},"editor")," of ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap",_description:"Anne is an editor of thew new-roadmap document"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("p",null,"For more examples, take a look at ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/building-blocks/concentric-relationships"},"Modeling Building Blocks: Concentric Relationships"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/roles-and-permissions"},"Modeling: Roles and Permissions")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/gdrive"},"Advanced Modeling: Google Drive"),"."),(0,i.kt)("h3",{id:"referencing-relations-on-related-objects"},"Referencing Relations On Related Objects"),(0,i.kt)("p",null,"Another form of ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"indirect relationships",mdxType:"ProductConcept"}))," is made possible by referencing relations on other objects."),(0,i.kt)("p",null,"The syntax is ",(0,i.kt)("inlineCode",{parentName:"p"},"X from Y"),".\nIt requires that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the other object is related to the current object as ",(0,i.kt)("inlineCode",{parentName:"li"},"Y")),(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("em",{parentName:"li"},"user")," is related to another object as ",(0,i.kt)("inlineCode",{parentName:"li"},"X"))),(0,i.kt)("p",null,"Take a look at the ",(0,i.kt)("em",{parentName:"p"},"authorization model")," below."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"folder",relations:{viewer:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"},{type:"folder",relation:"viewer"}]}}}},{type:"document",relations:{parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}}},metadata:{relations:{parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"The snippet below taken from the authorization model above is stating that viewers of a document are all users directly assigned the viewer relation and all users who can view the document's parent folder."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"In the ",(0,i.kt)("em",{parentName:"p"},"authorization model")," above, ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," if any one of the following relationship tuple sets exists:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Anne is a viewer of the parent folder of the new-roadmap document",(0,i.kt)(r.Wz,{relationshipTuples:[{user:"folder:planning",relation:"parent_folder",object:"document:new-roadmap",_description:"planning folder is the parent folder of the new-roadmap document"},{user:"user:anne",relation:"viewer",object:"folder:planning",_description:"anne is a viewer of the planning folder"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},"Anne is a viewer of the new-roadmap document (direct relationship)",(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap",_description:"anne is a viewer of the new-roadmap document"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("p",null,"This particular use of referencing relations on related objects is defining a transitive implied relationship. If ",(0,i.kt)("strong",{parentName:"p"},"user A")," is related to a certain ",(0,i.kt)("strong",{parentName:"p"},"object B")," as a ",(0,i.kt)("strong",{parentName:"p"},"viewer"),", and ",(0,i.kt)("strong",{parentName:"p"},"object B")," is related to ",(0,i.kt)("strong",{parentName:"p"},"object C")," as ",(0,i.kt)("strong",{parentName:"p"},"parent"),", then ",(0,i.kt)("strong",{parentName:"p"},"user A")," is related to ",(0,i.kt)("strong",{parentName:"p"},"object C")," as ",(0,i.kt)("strong",{parentName:"p"},"viewer"),"."),(0,i.kt)("p",null,"This can be used to indicate that ",(0,i.kt)("strong",{parentName:"p"},"viewers")," of a ",(0,i.kt)("strong",{parentName:"p"},"folders")," are ",(0,i.kt)("strong",{parentName:"p"},"viewers")," of all ",(0,i.kt)("strong",{parentName:"p"},"documents")," in that ",(0,i.kt)("strong",{parentName:"p"},"folder"),"."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Note that ",(0,i.kt)(r.rZ,{format:r.v7.LongForm,mdxType:"ProductName"})," does not allow the referenced relation (the word after ",(0,i.kt)("inlineCode",{parentName:"p"},"from"),", also called the tupleset) to be referencing another relation or allow non-concrete types (type bound public access (",(0,i.kt)("inlineCode",{parentName:"p"},"<object_type>:*"),") or usersets (",(0,i.kt)("inlineCode",{parentName:"p"},"<object_type>#<relation>"),")) in its type restrictions and will throw a validation error when attempting to call ",(0,i.kt)("inlineCode",{parentName:"p"},"WriteAuthorizationModel"),"."),(0,i.kt)("p",{parentName:"admonition"},"Note: In the ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/migrating/migrating-schema-1-1"},"deprecated 1.0 schema version"),", the validation error will be thrown at the time of evaluation (",(0,i.kt)("inlineCode",{parentName:"p"},"Check"),", etc..).")),(0,i.kt)("p",null,"For more examples, take look at ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/parent-child"},"Modeling: Parent-Child Objects"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/gdrive"},"Advanced Modeling: Google Drive"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/github"},"Advanced Modeling: GitHub"),", and ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/entitlements"},"Advanced Modeling: Entitlements"),"."),(0,i.kt)("h3",{id:"the-union-operator"},"The Union Operator"),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"union operator")," (",(0,i.kt)("inlineCode",{parentName:"p"},"or")," in the DSL, ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," in the JSON syntax) is used to indicate that a ",(0,i.kt)(r.uH,{section:"what-is-a-relationship",linkName:"relationship",mdxType:"ProductConcept"})," exists if the ",(0,i.kt)(r.uH,{section:"what-is-a-user",linkName:"user",mdxType:"ProductConcept"})," is in ",(0,i.kt)("strong",{parentName:"p"},"any of the sets of users")," (",(0,i.kt)("inlineCode",{parentName:"p"},"union"),")."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"In the ",(0,i.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"type definition",mdxType:"ProductConcept"})," snippet above, ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," if ",(0,i.kt)("em",{parentName:"p"},"any of")," the following conditions are satisfied:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"there exists a ",(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationship",mdxType:"ProductConcept"})," with ",(0,i.kt)("em",{parentName:"li"},"anne")," as ",(0,i.kt)("em",{parentName:"li"},"editor")," of ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is a ",(0,i.kt)("em",{parentName:"li"},"viewer")," of ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The above ",(0,i.kt)(r.uH,{section:"what-is-an-authorization-model",linkName:"authorization model",mdxType:"ProductConcept"})," indicates that a user is related as a viewer if they are in ",(0,i.kt)("strong",{parentName:"p"},"any of"),":"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "viewer"; indicating that a user can be assigned a direct ',(0,i.kt)("inlineCode",{parentName:"li"},"viewer")," relation"),(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "editor"; indicating that a user who is an editor is also implicitly a viewer')),(0,i.kt)("p",{parentName:"admonition"},"So if ",(0,i.kt)("strong",{parentName:"p"},"anne")," is in at least one of those usersets (is either an ",(0,i.kt)("strong",{parentName:"p"},"editor")," or a ",(0,i.kt)("strong",{parentName:"p"},"viewer"),"), the ",(0,i.kt)(r.uH,{section:"what-is-a-check-request",linkName:"check",mdxType:"ProductConcept"})," on ",(0,i.kt)("inlineCode",{parentName:"p"},'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}')," will return ",(0,i.kt)("inlineCode",{parentName:"p"},'{"allowed": true}'),".")),(0,i.kt)("p",null,"For more examples, take a look at ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/building-blocks/concentric-relationships"},"Modeling Building Blocks: Concentric Relationships"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/roles-and-permissions"},"Modeling Roles and Permissions")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/advanced/iot#03-updating-our-authorization-model-to-facilitate-future-changes"},"Advanced Modeling: Modeling for IoT"),"."),(0,i.kt)("h3",{id:"the-intersection-operator"},"The Intersection Operator"),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"intersection operator")," (",(0,i.kt)("inlineCode",{parentName:"p"},"and")," in the DSL, ",(0,i.kt)("inlineCode",{parentName:"p"},"intersection")," in the JSON syntax) is used to indicate that a ",(0,i.kt)(r.uH,{section:"what-is-a-relationship",linkName:"relationship",mdxType:"ProductConcept"})," exists if the ",(0,i.kt)(r.uH,{section:"what-is-a-user",linkName:"user",mdxType:"ProductConcept"})," is in ",(0,i.kt)("strong",{parentName:"p"},"all the sets of users")," (",(0,i.kt)("inlineCode",{parentName:"p"},"intersection"),")"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{intersection:{child:[{computedUserset:{relation:"authorized_user"}},{computedUserset:{relation:"editor"}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"In the ",(0,i.kt)(r.uH,{section:"what-is-a-type-definition",linkName:"type definition",mdxType:"ProductConcept"})," snippet above, ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," if ",(0,i.kt)("strong",{parentName:"p"},"all of")," the following conditions are satisfied:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is an ",(0,i.kt)("em",{parentName:"li"},"editor")," of ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}),"AND"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is an ",(0,i.kt)("em",{parentName:"li"},"authorized_user")," of ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),":",(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"authorized_user",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The above ",(0,i.kt)(r.uH,{section:"what-is-an-authorization-model",linkName:"authorization model",mdxType:"ProductConcept"})," indicates that a user is related as a viewer if they are in ",(0,i.kt)("strong",{parentName:"p"},"all of"),":"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "authorized_user"'),(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "editor"')),(0,i.kt)("p",{parentName:"admonition"},"So ",(0,i.kt)("strong",{parentName:"p"},"anne")," has to be in the intersection of the usersets (",(0,i.kt)("strong",{parentName:"p"},"anne")," has to be both an ",(0,i.kt)("strong",{parentName:"p"},"editor")," AND an ",(0,i.kt)("strong",{parentName:"p"},"authorized_user"),"), in order for the ",(0,i.kt)(r.uH,{section:"what-is-a-check-request",linkName:"check",mdxType:"ProductConcept"})," on ",(0,i.kt)("inlineCode",{parentName:"p"},'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}')," to return ",(0,i.kt)("inlineCode",{parentName:"p"},'{"allowed": true}'),"."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("em",{parentName:"p"},"anne")," is ",(0,i.kt)("strong",{parentName:"p"},"not")," a ",(0,i.kt)("em",{parentName:"p"},"viewer")," for ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap")," if either of the following is true:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is not an ",(0,i.kt)("em",{parentName:"li"},"editor")," to ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),": ",(0,i.kt)("strong",{parentName:"li"},"no relationship tuple of")," ",(0,i.kt)("inlineCode",{parentName:"li"},'{"user": "user:anne", "relation": "editor", "object": "document:new-roadmap"}')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is not an ",(0,i.kt)("em",{parentName:"li"},"authorized_user")," on the ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),": ",(0,i.kt)("strong",{parentName:"li"},"no relationship tuple of")," ",(0,i.kt)("inlineCode",{parentName:"li"},'{"user": "user:anne", "relation": "authorized_user", "object": "document:new-roadmap"}')))),(0,i.kt)("p",null,"For more examples, take look at ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/multiple-restrictions"},"Modeling with Multiple Restrictions"),"."),(0,i.kt)("h3",{id:"the-exclusion-operator"},"The Exclusion Operator"),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"exclusion operator")," (",(0,i.kt)("inlineCode",{parentName:"p"},"but not")," in the DSL, ",(0,i.kt)("inlineCode",{parentName:"p"},"difference")," in the JSON syntax) is used to indicate that a ",(0,i.kt)(r.uH,{section:"what-is-a-relationship",linkName:"relationship",mdxType:"ProductConcept"})," exists if the ",(0,i.kt)(r.uH,{section:"what-is-a-user",linkName:"user",mdxType:"ProductConcept"})," is ",(0,i.kt)("strong",{parentName:"p"},"in the base userset, but not in the excluded userset"),". This is helpful in modeling exclusion or block lists."),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{difference:{base:{this:{}},subtract:{computedUserset:{relation:"blocked"}}}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0,mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"In the ",(0,i.kt)("em",{parentName:"p"},"type definition")," snippet above, ",(0,i.kt)("inlineCode",{parentName:"p"},"user:anne")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"viewer")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"document:new-roadmap")," if:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"anne")," is assigned a direct relationship as ",(0,i.kt)("em",{parentName:"p"},"viewer")," to ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap")),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}),"AND"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"anne")," is not ",(0,i.kt)("em",{parentName:"p"},"blocked")," to ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap"),". That is, the following relation tuple ",(0,i.kt)("strong",{parentName:"p"},"does not exists")),(0,i.kt)(r.Wz,{relationshipTuples:[{user:"user:anne",relation:"blocked",object:"document:new-roadmap"}],mdxType:"RelationshipTuplesViewer"}))),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/modeling/blocklists"},"Modeling: Blocklists"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The above ",(0,i.kt)(r.uH,{section:"what-is-an-authorization-model",linkName:"authorization model",mdxType:"ProductConcept"})," indicates that a user is related as a viewer if they are in:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "viewer"')),(0,i.kt)("p",{parentName:"admonition"},"but not in:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},'the userset of all users related to the object as "blocked"')),(0,i.kt)("p",{parentName:"admonition"},"So ",(0,i.kt)("strong",{parentName:"p"},"anne")," has to be both a ",(0,i.kt)("strong",{parentName:"p"},"viewer")," AND NOT ",(0,i.kt)("strong",{parentName:"p"},"blocked"),", in order for the ",(0,i.kt)(r.uH,{section:"what-is-a-check-request",linkName:"check",mdxType:"ProductConcept"})," on ",(0,i.kt)("inlineCode",{parentName:"p"},'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}')," to return ",(0,i.kt)("inlineCode",{parentName:"p"},'{"allowed": true}'),"."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("em",{parentName:"p"},"anne")," is ",(0,i.kt)("strong",{parentName:"p"},"not")," a ",(0,i.kt)("em",{parentName:"p"},"viewer")," for ",(0,i.kt)("em",{parentName:"p"},"document:new-roadmap")," if either of the following is true:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is ",(0,i.kt)("strong",{parentName:"li"},"not")," assigned direct relationship as ",(0,i.kt)("em",{parentName:"li"},"viewer")," to ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap"),": ",(0,i.kt)("strong",{parentName:"li"},"no relationship tuple of")," ",(0,i.kt)("inlineCode",{parentName:"li"},'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"anne")," is ",(0,i.kt)("em",{parentName:"li"},"blocked")," on the ",(0,i.kt)("em",{parentName:"li"},"document:new-roadmap")," ",(0,i.kt)("inlineCode",{parentName:"li"},'{"user": "user:anne", "relation": "blocked", "object": "document:new-roadmap"}')))),(0,i.kt)("h2",{id:"equivalent-zanzibar-concepts"},"Equivalent Zanzibar Concepts"),(0,i.kt)("p",null,"The JSON syntax accepted by the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," API closely mirrors the syntax represented in the Zanzibar paper, with a bit of flattening and converting keys from ",(0,i.kt)("inlineCode",{parentName:"p"},"snake_case")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"camelCase"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Zanzibar"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," JSON"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," DSL"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"this")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"this")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"#the-direct-relationship-type-restrictions"},(0,i.kt)("inlineCode",{parentName:"a"},"[<type1>,<type2>]")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"union")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"union")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"or"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"intersection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"intersection")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"and"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"exclusion")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"difference")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"but not"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tuple_to_userset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tupleToUserset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"x from y"))))),(0,i.kt)("p",null,"In the ",(0,i.kt)("a",{parentName:"p",href:"https://research.google/pubs/pub48190/"},"Zanzibar paper"),", there's this example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'name: "doc"\n\nrelation { name: "owner" }\n\nrelation {\n  name: "editor"\n  userset_rewrite {\n    union {\n      child { _this {} }\n      child { computed_userset { relation: "owner" } }\n}}}\n\nrelation {\n name: "viewer"\n userset_rewrite {\n  union {\n    child { _this {} }\n    child { computed_userset { relation: "editor" } }\n    child { tuple_to_userset {\n      tupleset { relation: "parent" }\n      computed_userset {\n        object: $TUPLE_USERSET_OBJECT  # parent folder\n        relation: "viewer" }}}\n}}}\n')),(0,i.kt)("p",null,"In the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," DSL, it would become:"),(0,i.kt)(r.lG,{onlyShow:r.kf.Friendly2,configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{owner:{this:{}},editor:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"And in the ",(0,i.kt)(r.rZ,{format:r.v7.ShortForm,mdxType:"ProductName"})," JSON, it would become:"),(0,i.kt)(r.lG,{onlyShow:r.kf.Api,configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{owner:{this:{}},editor:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"We believe this syntax is easier to read/write."),(0,i.kt)("p",null,"So the following:"),(0,i.kt)(r.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},mdxType:"AuthzModelSnippetViewer"}),(0,i.kt)("p",null,"Can be read as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The users with a viewer relationship to a certain doc are any of:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the set of users who are ",(0,i.kt)(r.uH,{section:"what-are-direct-and-implied-relationships",linkName:"directly related",mdxType:"ProductConcept"})," with this doc as ",(0,i.kt)("inlineCode",{parentName:"li"},"viewer")),(0,i.kt)("li",{parentName:"ul"},"the set of users who are related to this doc as ",(0,i.kt)("inlineCode",{parentName:"li"},"editor")),(0,i.kt)("li",{parentName:"ul"},"the set of users who are related to any object OBJ_1 as ",(0,i.kt)("inlineCode",{parentName:"li"},"viewer"),", where object OBJ_1 is any object related to this doc as ",(0,i.kt)("inlineCode",{parentName:"li"},"parent")," (e.g. viewers of this doc's parent folder, where the parent folder is OBJ_1)")))),(0,i.kt)("p",null,"Learn more about Zanzibar at the ",(0,i.kt)("a",{parentName:"p",href:"https://zanzibar.academy"},"Zanzibar Academy"),"."),(0,i.kt)("h2",{id:"related-sections"},"Related Sections"),(0,i.kt)(r.$q,{description:"Check the following sections for more on how to use the configuration language in modeling authorization.",relatedLinks:[{title:"{ProductName} Concepts",description:"Learn about the {ProductName} Concepts.",link:"./concepts",id:"./concepts"},{title:"Modeling: Getting Started",description:"Learn about how to get started with modeling your permission system in {ProductName}.",link:"./modeling/getting-started",id:"./modeling/getting-started"},{title:"Direct Access",description:"Learn about modeling user access to an object.",link:"./modeling/direct-access",id:"./modeling/direct-access"}],mdxType:"RelatedSection"}))}c.isMDXComponent=!0}}]);