"use strict";(self.webpackChunkopenfga_dev=self.webpackChunkopenfga_dev||[]).push([[1429],{98703:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=t(85893),r=t(11151),s=t(5270);const o={title:"Configuration Language",sidebar_position:2,slug:"/configuration-language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model"},a="Configuration Language",l={id:"content/configuration-language",title:"Configuration Language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model",source:"@site/docs/content/configuration-language.mdx",sourceDirName:"content",slug:"/configuration-language",permalink:"/pr-preview/pr-669/docs/configuration-language",draft:!1,unlisted:!1,editUrl:"https://github.com/openfga/openfga.dev/edit/main/docs/content/configuration-language.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration Language",sidebar_position:2,slug:"/configuration-language",description:"Learning about the FGA configuration language and using it to build a representation of a system's authorization model"},sidebar:"docs",previous:{title:"Concepts",permalink:"/pr-preview/pr-669/docs/concepts"},next:{title:"Getting Started",permalink:"/pr-preview/pr-669/docs/getting-started"}},d={},c=[{value:"What Does The Configuration Language Look Like?",id:"what-does-the-configuration-language-look-like",level:2},{value:"The Direct Relationship Type Restrictions",id:"the-direct-relationship-type-restrictions",level:3},{value:"Referencing Other Relations On The Same Object",id:"referencing-other-relations-on-the-same-object",level:3},{value:"Referencing Relations On Related Objects",id:"referencing-relations-on-related-objects",level:3},{value:"The Union Operator",id:"the-union-operator",level:3},{value:"The Intersection Operator",id:"the-intersection-operator",level:3},{value:"The Exclusion Operator",id:"the-exclusion-operator",level:3},{value:"Equivalent Zanzibar Concepts",id:"equivalent-zanzibar-concepts",level:2},{value:"Related Sections",id:"related-sections",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configuration-language",children:"Configuration Language"}),"\n",(0,i.jsx)(s.AH,{}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(s.rZ,{format:s.v7.LongForm}),"'s Configuration Language is used to build a representation of a system's ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-an-authorization-model",linkName:"authorization model"})}),". It informs ",(0,i.jsx)(s.DC,{link:"/api/service",name:"{ProductName}'s API"})," on what the ",(0,i.jsx)(s.uH,{section:"what-is-a-type",linkName:"object types"})," in the system are and how they could relate to one another. It describes the ",(0,i.jsx)(s.uH,{section:"what-is-a-relation",linkName:"relations"})," possible on an object of a certain type and lists the conditions under which one is related to that object."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"DSL"})," and the ",(0,i.jsx)(n.strong,{children:"JSON"})," syntax are two presentations of that configuration language. The JSON syntax is accepted by the API and closely matches the API described in the ",(0,i.jsx)(n.a,{href:"https://research.google/pubs/pub48190/",children:"Zanzibar paper"}),". The DSL is syntactic sugar on top of the JSON syntax and compiles down to it before being sent to ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm}),"'s API. The DSL is meant to make modeling easier and more intuitive."]}),"\n",(0,i.jsxs)(n.p,{children:["You'll encounter the JSON syntax when calling the API directly or through the ",(0,i.jsx)(n.a,{href:"./getting-started",children:"SDKs"}),", and the DSL when interacting with ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," through the ",(0,i.jsx)(n.a,{href:"https://play.fga.dev/",children:"Playground"}),". Throughout the documentation you can switch between the two presentations."]}),"\n",(0,i.jsxs)(n.p,{children:["To understand this guide better, you should be familiar with some ",(0,i.jsx)(s.uH,{})," and ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/getting-started",children:"How to get started on modeling"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"what-does-the-configuration-language-look-like",children:"What Does The Configuration Language Look Like?"}),"\n",(0,i.jsxs)(n.p,{children:["Below is a sample authorization model. In the next sections we'll go over the building blocks that make the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," configuration language."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"domain",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"}]}}}},{type:"folder",relations:{can_share:{computedUserset:{object:"",relation:"writer"}},owner:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"owner"}}}]}},parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"writer"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"owner"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"writer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}},{type:"document",relations:{can_share:{computedUserset:{object:"",relation:"writer"}},owner:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"owner"}}}]}},parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"writer"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}},writer:{union:{child:[{this:{}},{computedUserset:{object:"",relation:"owner"}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"writer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]},writer:{directly_related_user_types:[{type:"user"},{type:"domain",relation:"member"}]}}}}]}}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"authorization model"})," describes four ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-type",linkName:"types"})})," of objects: ",(0,i.jsx)(n.code,{children:"user"}),", ",(0,i.jsx)(n.code,{children:"domain"}),", ",(0,i.jsx)(n.code,{children:"folder"})," and ",(0,i.jsx)(n.code,{children:"document"}),"."]}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"domain"})," ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-type-definition",linkName:"type definition"})})," has a single ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-relation",linkName:"relation"})})," called ",(0,i.jsx)(n.code,{children:"member"})," that only allows ",(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationships"}),"."]}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"folder"})," and ",(0,i.jsx)(n.code,{children:"document"})," ",(0,i.jsx)(n.em,{children:"type definitions"})," each have five ",(0,i.jsx)(n.em,{children:"relations"}),": ",(0,i.jsx)(n.code,{children:"parent_folder"}),", ",(0,i.jsx)(n.code,{children:"owner"}),", ",(0,i.jsx)(n.code,{children:"writer"}),", ",(0,i.jsx)(n.code,{children:"viewer"})," and ",(0,i.jsx)(n.code,{children:"can_share"}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"the-direct-relationship-type-restrictions",children:"The Direct Relationship Type Restrictions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"[<string, <string>, ...]"}),", when used at the beginning of a ",(0,i.jsx)(s.uH,{section:"what-is-a-relation-definition",linkName:"relation definition"})," allows ",(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationships"})," from the objects of these specified types. The strings can be of three formats:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<type>"}),": indicating that tuples relating objects of those types as users can be written (e.g. ",(0,i.jsx)(n.code,{children:"group:marketing"})," can be related if ",(0,i.jsx)(n.code,{children:"group"})," is in the type restrictions)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<type:*>"}),": indicating that a tuple relating all objects of that type can be written (e.g. ",(0,i.jsx)(n.code,{children:"user:*"})," can be added if ",(0,i.jsx)(n.code,{children:"user:*"})," is in the type restrictions)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<type>#<relation>"}),": indicating that tuples with sets of users that are related to an object of that type by that particular relation (e.g. ",(0,i.jsx)(n.code,{children:"group:marketing#member"})," can be added if ",(0,i.jsx)(n.code,{children:"group#member"})," is in the type restrictions)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If the direct relationship type restrictions are missing, then no tuple can be written relating other objects as this particular relation with objects of this type (direct relationships are disallowed)."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"[<type1>, <type2>, ...]"})," in the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," DSL translates to ",(0,i.jsx)(n.code,{children:"this"})," in the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," API syntax."]})}),"\n",(0,i.jsxs)(n.p,{children:["For example, let's take a closer look at the ",(0,i.jsx)(n.code,{children:"team"})," type."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type:"team",relations:{member:{this:{}}},metadata:{relations:{member:{directly_related_user_types:[{type:"user"},{type:"user:*"},{type:"team",relation:"member"}]}}}},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["This ",(0,i.jsx)(n.code,{children:"team"})," ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-type-definition",linkName:"type definition"})})," defines all the ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-relation",linkName:"relations"})})," that ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-user",linkName:"users"})})," can have with an ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-an-object",linkName:"object"})})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.code,{children:"team"}),". In this case the ",(0,i.jsx)(n.em,{children:"relation"})," is: ",(0,i.jsx)(n.code,{children:"member"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Due to the direct relationship type restrictions (",(0,i.jsx)(n.code,{children:"[user, team#member]"}),") being used, a user in the system can have a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationship"})})," with the ",(0,i.jsx)(n.code,{children:"team"})," type as a ",(0,i.jsx)(n.code,{children:"member"})," for objects of"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["type ",(0,i.jsx)(n.code,{children:"user"})]}),"\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.code,{children:"user"})," ",(0,i.jsx)(s.uH,{section:"what-is-type-bound-public-access",linkName:"type bound public access"})," (",(0,i.jsx)(n.code,{children:"user:*"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/building-blocks/usersets",children:"usersets"})," that have a ",(0,i.jsx)(n.code,{children:"team"})," type and a ",(0,i.jsx)(n.code,{children:"member"})," relation (e.g. ",(0,i.jsx)(n.code,{children:"team:product#member"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the type definition snippet above, ",(0,i.jsx)(n.code,{children:"anne"})," is a ",(0,i.jsx)(n.code,{children:"member"})," of ",(0,i.jsx)(n.code,{children:"team:product"})," if ",(0,i.jsx)(n.em,{children:"any one of"})," the following relationship tuple sets exist:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"member",object:"team:product",_description:"Anne is directly related to the product team as a member"}]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:*",relation:"member",object:"team:product",_description:"Everyone (`*`) is directly related to the product team as a member"}]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"team:contoso#member",relation:"member",object:"team:product",_description:"Members of the contoso team are members of the product team"},{user:"user:anne",relation:"member",object:"team:contoso",_description:"Anne is a member of the contoso team"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more examples, take look at ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/building-blocks/direct-relationships",children:"Modeling Building Blocks: Direct Relationships"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"referencing-other-relations-on-the-same-object",children:"Referencing Other Relations On The Same Object"}),"\n",(0,i.jsxs)(n.p,{children:["You can also reference other relations on the same object. Let us look at a simplified ",(0,i.jsx)(n.code,{children:"document"})," ",(0,i.jsx)(n.em,{children:"type definition"}),"."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type:"document",relations:{editor:{this:{}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}}]}},can_rename:{computedUserset:{relation:"editor"}}},metadata:{relations:{editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["The above ",(0,i.jsx)(n.code,{children:"document"})," ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-type-definition",linkName:"type definition"})})," defines all the ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-relation",linkName:"relations"})})," that ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-a-user",linkName:"users"})})," can have with an ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-is-an-object",linkName:"object"})})," of ",(0,i.jsx)(n.em,{children:"type"})," ",(0,i.jsx)(n.code,{children:"document"}),". In this case the ",(0,i.jsx)(n.em,{children:"relations"})," are: ",(0,i.jsx)(n.code,{children:"editor"}),", ",(0,i.jsx)(n.code,{children:"viewer"})," and ",(0,i.jsx)(n.code,{children:"can_rename"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"viewer"})," and ",(0,i.jsx)(n.code,{children:"can_rename"})," ",(0,i.jsx)(n.em,{children:"relation definitions"})," are both referencing ",(0,i.jsx)(n.code,{children:"editor"}),", which is another relation on the same type."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Notice how ",(0,i.jsx)(n.code,{children:"can_rename"})," does not reference the ",(0,i.jsx)(n.a,{href:"#the-direct-relationship-type-restrictions",children:(0,i.jsx)(n.em,{children:"direct relationship type restrictions"})}),", indicating that a direct relationship is not possible (as in a user cannot be directly assigned this relation, it has to be inherited through an assignment of the ",(0,i.jsx)(n.code,{children:"editor"})," relation). The ",(0,i.jsx)(n.code,{children:"viewer"})," relation on the other hand allows both ",(0,i.jsx)(n.em,{children:"direct and indirect relationships"})," using the ",(0,i.jsx)(n.a,{href:"#the-union-operator",children:"Union Operator"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.em,{children:"type definition"})," snippet above, ",(0,i.jsx)(n.code,{children:"anne"})," is a ",(0,i.jsx)(n.code,{children:"viewer"})," of ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," if any one of the following relationship tuple sets exists:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is an ",(0,i.jsx)(n.em,{children:"editor"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})]}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap",_description:"Anne is an editor of the new-roadmap document"}]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is a ",(0,i.jsx)(n.em,{children:"viewer"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})]}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap",_description:"Anne is a viewer of the new-roadmap document"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"anne"})," has a ",(0,i.jsx)(n.code,{children:"can_rename"})," relationship with ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," only if ",(0,i.jsx)(n.code,{children:"anne"})," has an ",(0,i.jsx)(n.code,{children:"editor"})," relationship with the document:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is an ",(0,i.jsx)(n.em,{children:"editor"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap",_description:"Anne is an editor of thew new-roadmap document"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more examples, take a look at ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/building-blocks/concentric-relationships",children:"Modeling Building Blocks: Concentric Relationships"}),", ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/roles-and-permissions",children:"Modeling: Roles and Permissions"})," and ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/advanced/gdrive",children:"Advanced Modeling: Google Drive"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"referencing-relations-on-related-objects",children:"Referencing Relations On Related Objects"}),"\n",(0,i.jsxs)(n.p,{children:["Another form of ",(0,i.jsx)(n.em,{children:(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"indirect relationships"})})," is made possible by referencing relations on other objects."]}),"\n",(0,i.jsxs)(n.p,{children:["The syntax is ",(0,i.jsx)(n.code,{children:"X from Y"}),".\nIt requires that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the other object is related to the current object as ",(0,i.jsx)(n.code,{children:"Y"})]}),"\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.em,{children:"user"})," is related to another object as ",(0,i.jsx)(n.code,{children:"X"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Take a look at the ",(0,i.jsx)(n.em,{children:"authorization model"})," below."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"user"},{type:"folder",relations:{viewer:{this:{}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"},{type:"folder",relation:"viewer"}]}}}},{type:"document",relations:{parent_folder:{this:{}},viewer:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}}},metadata:{relations:{parent_folder:{directly_related_user_types:[{type:"folder"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]}}),"\n",(0,i.jsx)(n.p,{children:"The snippet below taken from the authorization model above is stating that viewers of a document are all users directly assigned the viewer relation and all users who can view the document's parent folder."}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{tupleToUserset:{tupleset:{object:"",relation:"parent_folder"},computedUserset:{object:"",relation:"viewer"}}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.em,{children:"authorization model"})," above, ",(0,i.jsx)(n.code,{children:"user:anne"})," is a ",(0,i.jsx)(n.code,{children:"viewer"})," of ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," if any one of the following relationship tuple sets exists:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Anne is a viewer of the parent folder of the new-roadmap document","\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"folder:planning",relation:"parent_folder",object:"document:new-roadmap",_description:"planning folder is the parent folder of the new-roadmap document"},{user:"user:anne",relation:"viewer",object:"folder:planning",_description:"anne is a viewer of the planning folder"}]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Anne is a viewer of the new-roadmap document (direct relationship)","\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap",_description:"anne is a viewer of the new-roadmap document"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This particular use of referencing relations on related objects is defining a transitive implied relationship. If ",(0,i.jsx)(n.strong,{children:"user A"})," is related to a certain ",(0,i.jsx)(n.strong,{children:"object B"})," as a ",(0,i.jsx)(n.strong,{children:"viewer"}),", and ",(0,i.jsx)(n.strong,{children:"object B"})," is related to ",(0,i.jsx)(n.strong,{children:"object C"})," as ",(0,i.jsx)(n.strong,{children:"parent"}),", then ",(0,i.jsx)(n.strong,{children:"user A"})," is related to ",(0,i.jsx)(n.strong,{children:"object C"})," as ",(0,i.jsx)(n.strong,{children:"viewer"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This can be used to indicate that ",(0,i.jsx)(n.strong,{children:"viewers"})," of a ",(0,i.jsx)(n.strong,{children:"folders"})," are ",(0,i.jsx)(n.strong,{children:"viewers"})," of all ",(0,i.jsx)(n.strong,{children:"documents"})," in that ",(0,i.jsx)(n.strong,{children:"folder"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(s.rZ,{format:s.v7.LongForm})," does not allow the referenced relation (the word after ",(0,i.jsx)(n.code,{children:"from"}),", also called the tupleset) to be referencing another relation or allow non-concrete types (type bound public access (",(0,i.jsx)(n.code,{children:"<object_type>:*"}),") or usersets (",(0,i.jsx)(n.code,{children:"<object_type>#<relation>"}),")) in its type restrictions and will throw a validation error when attempting to call ",(0,i.jsx)(n.code,{children:"WriteAuthorizationModel"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["For more examples, take look at ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/parent-child",children:"Modeling: Parent-Child Objects"}),", ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/advanced/gdrive",children:"Advanced Modeling: Google Drive"}),", ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/advanced/github",children:"Advanced Modeling: GitHub"}),", and ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/advanced/entitlements",children:"Advanced Modeling: Entitlements"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"the-union-operator",children:"The Union Operator"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"union operator"})," (",(0,i.jsx)(n.code,{children:"or"})," in the DSL, ",(0,i.jsx)(n.code,{children:"union"})," in the JSON syntax) is used to indicate that a ",(0,i.jsx)(s.uH,{section:"what-is-a-relationship",linkName:"relationship"})," exists if the ",(0,i.jsx)(s.uH,{section:"what-is-a-user",linkName:"user"})," is in ",(0,i.jsx)(n.strong,{children:"any of the sets of users"})," (",(0,i.jsx)(n.code,{children:"union"}),")."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(s.uH,{section:"what-is-a-type-definition",linkName:"type definition"})," snippet above, ",(0,i.jsx)(n.code,{children:"user:anne"})," is a ",(0,i.jsx)(n.code,{children:"viewer"})," of ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," if ",(0,i.jsx)(n.em,{children:"any of"})," the following conditions are satisfied:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["there exists a ",(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"direct relationship"})," with ",(0,i.jsx)(n.em,{children:"anne"})," as ",(0,i.jsx)(n.em,{children:"editor"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is a ",(0,i.jsx)(n.em,{children:"viewer"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The above ",(0,i.jsx)(s.uH,{section:"what-is-an-authorization-model",linkName:"authorization model"})," indicates that a user is related as a viewer if they are in ",(0,i.jsx)(n.strong,{children:"any of"}),":"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['the userset of all users related to the object as "viewer"; indicating that a user can be assigned a direct ',(0,i.jsx)(n.code,{children:"viewer"})," relation"]}),"\n",(0,i.jsx)(n.li,{children:'the userset of all users related to the object as "editor"; indicating that a user who is an editor is also implicitly a viewer'}),"\n"]}),(0,i.jsxs)(n.p,{children:["So if ",(0,i.jsx)(n.strong,{children:"anne"})," is in at least one of those usersets (is either an ",(0,i.jsx)(n.strong,{children:"editor"})," or a ",(0,i.jsx)(n.strong,{children:"viewer"}),"), the ",(0,i.jsx)(s.uH,{section:"what-is-a-check-request",linkName:"check"})," on ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}'})," will return ",(0,i.jsx)(n.code,{children:'{"allowed": true}'}),"."]})]}),"\n",(0,i.jsxs)(n.p,{children:["For more examples, take a look at ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/building-blocks/concentric-relationships",children:"Modeling Building Blocks: Concentric Relationships"}),", ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/roles-and-permissions",children:"Modeling Roles and Permissions"})," and ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/advanced/iot#03-updating-our-authorization-model-to-facilitate-future-changes",children:"Advanced Modeling: Modeling for IoT"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"the-intersection-operator",children:"The Intersection Operator"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"intersection operator"})," (",(0,i.jsx)(n.code,{children:"and"})," in the DSL, ",(0,i.jsx)(n.code,{children:"intersection"})," in the JSON syntax) is used to indicate that a ",(0,i.jsx)(s.uH,{section:"what-is-a-relationship",linkName:"relationship"})," exists if the ",(0,i.jsx)(s.uH,{section:"what-is-a-user",linkName:"user"})," is in ",(0,i.jsx)(n.strong,{children:"all the sets of users"})," (",(0,i.jsx)(n.code,{children:"intersection"}),")"]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{intersection:{child:[{computedUserset:{relation:"authorized_user"}},{computedUserset:{relation:"editor"}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(s.uH,{section:"what-is-a-type-definition",linkName:"type definition"})," snippet above, ",(0,i.jsx)(n.code,{children:"user:anne"})," is a ",(0,i.jsx)(n.code,{children:"viewer"})," of ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," if ",(0,i.jsx)(n.strong,{children:"all of"})," the following conditions are satisfied:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is an ",(0,i.jsx)(n.em,{children:"editor"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"editor",object:"document:new-roadmap"}]}),"\n","AND"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is an ",(0,i.jsx)(n.em,{children:"authorized_user"})," of ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),":","\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"authorized_user",object:"document:new-roadmap"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The above ",(0,i.jsx)(s.uH,{section:"what-is-an-authorization-model",linkName:"authorization model"})," indicates that a user is related as a viewer if they are in ",(0,i.jsx)(n.strong,{children:"all of"}),":"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'the userset of all users related to the object as "authorized_user"'}),"\n",(0,i.jsx)(n.li,{children:'the userset of all users related to the object as "editor"'}),"\n"]}),(0,i.jsxs)(n.p,{children:["So ",(0,i.jsx)(n.strong,{children:"anne"})," has to be in the intersection of the usersets (",(0,i.jsx)(n.strong,{children:"anne"})," has to be both an ",(0,i.jsx)(n.strong,{children:"editor"})," AND an ",(0,i.jsx)(n.strong,{children:"authorized_user"}),"), in order for the ",(0,i.jsx)(s.uH,{section:"what-is-a-check-request",linkName:"check"})," on ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}'})," to return ",(0,i.jsx)(n.code,{children:'{"allowed": true}'}),"."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is ",(0,i.jsx)(n.strong,{children:"not"})," a ",(0,i.jsx)(n.em,{children:"viewer"})," for ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})," if either of the following is true:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is not an ",(0,i.jsx)(n.em,{children:"editor"})," to ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),": ",(0,i.jsx)(n.strong,{children:"no relationship tuple of"})," ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "editor", "object": "document:new-roadmap"}'})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is not an ",(0,i.jsx)(n.em,{children:"authorized_user"})," on the ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),": ",(0,i.jsx)(n.strong,{children:"no relationship tuple of"})," ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "authorized_user", "object": "document:new-roadmap"}'})]}),"\n"]})]}),"\n",(0,i.jsxs)(n.p,{children:["For more examples, take look at ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/multiple-restrictions",children:"Modeling with Multiple Restrictions"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"the-exclusion-operator",children:"The Exclusion Operator"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"exclusion operator"})," (",(0,i.jsx)(n.code,{children:"but not"})," in the DSL, ",(0,i.jsx)(n.code,{children:"difference"})," in the JSON syntax) is used to indicate that a ",(0,i.jsx)(s.uH,{section:"what-is-a-relationship",linkName:"relationship"})," exists if the ",(0,i.jsx)(s.uH,{section:"what-is-a-user",linkName:"user"})," is ",(0,i.jsx)(n.strong,{children:"in the base userset, but not in the excluded userset"}),". This is helpful in modeling exclusion or block lists."]}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"document",relations:{viewer:{difference:{base:{this:{}},subtract:{computedUserset:{relation:"blocked"}}}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]},skipVersion:!0}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.em,{children:"type definition"})," snippet above, ",(0,i.jsx)(n.code,{children:"user:anne"})," is a ",(0,i.jsx)(n.code,{children:"viewer"})," of ",(0,i.jsx)(n.code,{children:"document:new-roadmap"})," if:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is assigned a direct relationship as ",(0,i.jsx)(n.em,{children:"viewer"})," to ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})]}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"viewer",object:"document:new-roadmap"}]}),"\n",(0,i.jsx)(n.p,{children:"AND"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is not ",(0,i.jsx)(n.em,{children:"blocked"})," to ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),". That is, the following relation tuple ",(0,i.jsx)(n.strong,{children:"does not exists"})]}),"\n",(0,i.jsx)(s.Wz,{relationshipTuples:[{user:"user:anne",relation:"blocked",object:"document:new-roadmap"}]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more information, see ",(0,i.jsx)(n.a,{href:"/pr-preview/pr-669/docs/modeling/blocklists",children:"Modeling: Blocklists"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The above ",(0,i.jsx)(s.uH,{section:"what-is-an-authorization-model",linkName:"authorization model"})," indicates that a user is related as a viewer if they are in:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'the userset of all users related to the object as "viewer"'}),"\n"]}),(0,i.jsx)(n.p,{children:"but not in:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'the userset of all users related to the object as "blocked"'}),"\n"]}),(0,i.jsxs)(n.p,{children:["So ",(0,i.jsx)(n.strong,{children:"anne"})," has to be both a ",(0,i.jsx)(n.strong,{children:"viewer"})," AND NOT ",(0,i.jsx)(n.strong,{children:"blocked"}),", in order for the ",(0,i.jsx)(s.uH,{section:"what-is-a-check-request",linkName:"check"})," on ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}'})," to return ",(0,i.jsx)(n.code,{children:'{"allowed": true}'}),"."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"anne"})," is ",(0,i.jsx)(n.strong,{children:"not"})," a ",(0,i.jsx)(n.em,{children:"viewer"})," for ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})," if either of the following is true:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is ",(0,i.jsx)(n.strong,{children:"not"})," assigned direct relationship as ",(0,i.jsx)(n.em,{children:"viewer"})," to ",(0,i.jsx)(n.em,{children:"document:new-roadmap"}),": ",(0,i.jsx)(n.strong,{children:"no relationship tuple of"})," ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "viewer", "object": "document:new-roadmap"}'})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"anne"})," is ",(0,i.jsx)(n.em,{children:"blocked"})," on the ",(0,i.jsx)(n.em,{children:"document:new-roadmap"})," ",(0,i.jsx)(n.code,{children:'{"user": "user:anne", "relation": "blocked", "object": "document:new-roadmap"}'})]}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"equivalent-zanzibar-concepts",children:"Equivalent Zanzibar Concepts"}),"\n",(0,i.jsxs)(n.p,{children:["The JSON syntax accepted by the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," API closely mirrors the syntax represented in the Zanzibar paper, with a bit of flattening and converting keys from ",(0,i.jsx)(n.code,{children:"snake_case"})," to ",(0,i.jsx)(n.code,{children:"camelCase"}),"."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Zanzibar"}),(0,i.jsxs)(n.th,{style:{textAlign:"left"},children:[(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," JSON"]}),(0,i.jsxs)(n.th,{style:{textAlign:"left"},children:[(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," DSL"]})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"this"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"this"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.a,{href:"#the-direct-relationship-type-restrictions",children:(0,i.jsx)(n.code,{children:"[<type1>,<type2>]"})})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"union"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"union"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"or"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"intersection"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"intersection"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"and"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"exclusion"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"difference"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"but not"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"tuple_to_userset"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"tupleToUserset"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"x from y"})})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.a,{href:"https://research.google/pubs/pub48190/",children:"Zanzibar paper"}),", there's this example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'name: "doc"\n\nrelation { name: "owner" }\n\nrelation {\n  name: "editor"\n  userset_rewrite {\n    union {\n      child { _this {} }\n      child { computed_userset { relation: "owner" } }\n}}}\n\nrelation {\n name: "viewer"\n userset_rewrite {\n  union {\n    child { _this {} }\n    child { computed_userset { relation: "editor" } }\n    child { tuple_to_userset {\n      tupleset { relation: "parent" }\n      computed_userset {\n        object: $TUPLE_USERSET_OBJECT  # parent folder\n        relation: "viewer" }}}\n}}}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," DSL, it would become:"]}),"\n",(0,i.jsx)(s.lG,{onlyShow:s.kf.Friendly2,configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{owner:{this:{}},editor:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]}}),"\n",(0,i.jsxs)(n.p,{children:["And in the ",(0,i.jsx)(s.rZ,{format:s.v7.ShortForm})," JSON, it would become:"]}),"\n",(0,i.jsx)(s.lG,{onlyShow:s.kf.Api,configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{owner:{this:{}},editor:{union:{child:[{this:{}},{computedUserset:{relation:"owner"}}]}},viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{owner:{directly_related_user_types:[{type:"user"}]},editor:{directly_related_user_types:[{type:"user"}]},viewer:{directly_related_user_types:[{type:"user"}]}}}}]}}),"\n",(0,i.jsx)(n.p,{children:"We believe this syntax is easier to read/write."}),"\n",(0,i.jsx)(n.p,{children:"So the following:"}),"\n",(0,i.jsx)(s.lG,{configuration:{schema_version:"1.1",type_definitions:[{type:"doc",relations:{viewer:{union:{child:[{this:{}},{computedUserset:{relation:"editor"}},{tupleToUserset:{tupleset:{relation:"parent"},computedUserset:{relation:"viewer"}}}]}}},metadata:{relations:{viewer:{directly_related_user_types:[{type:"user"}]}}}}]}}),"\n",(0,i.jsx)(n.p,{children:"Can be read as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The users with a viewer relationship to a certain doc are any of:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the set of users who are ",(0,i.jsx)(s.uH,{section:"what-are-direct-and-implied-relationships",linkName:"directly related"})," with this doc as ",(0,i.jsx)(n.code,{children:"viewer"})]}),"\n",(0,i.jsxs)(n.li,{children:["the set of users who are related to this doc as ",(0,i.jsx)(n.code,{children:"editor"})]}),"\n",(0,i.jsxs)(n.li,{children:["the set of users who are related to any object OBJ_1 as ",(0,i.jsx)(n.code,{children:"viewer"}),", where object OBJ_1 is any object related to this doc as ",(0,i.jsx)(n.code,{children:"parent"})," (e.g. viewers of this doc's parent folder, where the parent folder is OBJ_1)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Learn more about Zanzibar at the ",(0,i.jsx)(n.a,{href:"https://zanzibar.academy",children:"Zanzibar Academy"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"related-sections",children:"Related Sections"}),"\n",(0,i.jsx)(s.$q,{description:"Check the following sections for more on how to use the configuration language in modeling authorization.",relatedLinks:[{title:"{ProductName} Concepts",description:"Learn about the {ProductName} Concepts.",link:"./concepts",id:"./concepts"},{title:"Modeling: Getting Started",description:"Learn about how to get started with modeling your permission system in {ProductName}.",link:"./modeling/getting-started",id:"./modeling/getting-started"},{title:"Direct Access",description:"Learn about modeling user access to an object.",link:"./modeling/direct-access",id:"./modeling/direct-access"}]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);